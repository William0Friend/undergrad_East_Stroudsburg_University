(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.1' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   1370187,      27766]
NotebookOptionsPosition[   1136405,      22632]
NotebookOutlinePosition[   1329991,      26950]
CellTagsIndexPosition[   1327331,      26894]
WindowTitle->Section 1.3 Inverse, Exponential, and Logarithmic Functions
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["1.3 Inverse, Exponential, and Logarithmic Functions", \
"SectionTitleFont"]], "Section",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->
  "1.3 Inverse, Exponential, and Logarithmic \
Functions",ExpressionUUID->"b3f49dd1-b5e7-4070-8ebd-d0c7686b54c4"],

Cell[TextData[{
 "Exponential functions are fundamental to all mathematics. Many processes in \
the world around us are modeled by ",
 StyleBox["exponential functions",
  FontSlant->"Italic"],
 "\[LongDash]they appear in finance, medicine, ecology, biology, economics, \
anthropology, and physics (among other disciplines). Every exponential \
function has an inverse function, which is a member of the family of ",
 StyleBox["logarithmic functions",
  FontSlant->"Italic"],
 ", also discussed in this section. "
}], "Text",ExpressionUUID->"caf92762-a3db-4a92-8d39-c7179333883f"],

Cell[CellGroupData[{

Cell["Exponential Functions  \[RightGuillemet]", "Subsection",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->
  "Exponential \
Functions",ExpressionUUID->"21b40c61-c1e1-44d0-b342-f41f058acb65"],

Cell[TextData[{
 "Exponential functions have the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["b", "x"]}], TraditionalForm]],ExpressionUUID->
  "eb11468f-6fa9-43cd-b0f5-f2c10e05230d"],
 ", where the base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1", " "}], TraditionalForm]],ExpressionUUID->
  "16639052-4d37-4362-8dd6-9cc4835b6511"],
 "is a positive real number. An important question arises immediately: For \
what values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f0a1dfd0-ba10-49cd-9f47-861acc7f5868"],
 " can ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "e3327a56-11a3-430a-b9af-1e8ad612ea8c"],
 " be evaluated? We certainly know how to compute ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "439ceb24-1142-4ba3-8828-6ed7f0b53acc"],
 " when ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ee01a9cd-88e7-4c2d-8f36-e6ce32e76b6f"],
 " is an integer. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "3"], "=", "8"}], TraditionalForm]],ExpressionUUID->
  "33d02734-2fe2-4771-ba79-8906a52e759c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "4"}]], "=", 
    RowBox[{
     RowBox[{"1", "/", 
      SuperscriptBox["2", "4"]}], "=", 
     RowBox[{"1", "/", "16"}]}]}], TraditionalForm]],ExpressionUUID->
  "335cba74-62e0-40b1-ad93-ed7ed8126c3d"],
 ". When ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "aaf3d518-2989-4962-b5e6-d04ec4239c5b"],
 " is rational, the numerator and denominator are interpreted as a power and \
root, respectively:"
}], "Text",ExpressionUUID->"997e4405-9e39-49bd-b366-776b5fb48b68"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["16", 
          RowBox[{"3", "/", "4"}]], "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RadicalBox["16", "4"], ")"}], "3"], "=", "8."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"1127863b-298a-4958-b1a4-6d290c2b7289"]], \
"Text",ExpressionUUID->"6dec6437-8654-4f38-b557-aec4dcc49bd0"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"b645c103-7481-4b9f-b913-c9de9cb1ab86"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["16", 
    RowBox[{"3", "/", "4"}]], TraditionalForm]],ExpressionUUID->
  "ca2f8f61-a4c3-47ee-a2e9-87477ad03c8e"],
 " can also be computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RadicalBox[
     SuperscriptBox["16", "3"], "4"], "=", 
    RowBox[{
     RadicalBox["4096", "4"], "=", "8"}]}], TraditionalForm]],ExpressionUUID->
  "ec2386d2-ae45-4026-9858-92b73c570c42"],
 "."
}], "Callout",ExpressionUUID->"4d3c4b94-ec4f-4afb-9226-66238ccf6fe7"]
}, Closed]],

Cell[TextData[{
 "\tBut what happens when ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f3026932-6de4-4300-b690-8d3e8819fe8e"],
 " is irrational? For example, how should ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "\[Pi]"], TraditionalForm]],ExpressionUUID->
  "97be66e2-d8ec-4524-8c51-610fe487781f"],
 " be understood? Your calculator provides an approximation to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "\[Pi]"], TraditionalForm]],ExpressionUUID->
  "7154708a-926a-454a-a94b-17aca718111e"],
 ", but where does the approximation come from? These questions will be \
answered eventually. For now we assume that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "8145fce3-1af3-4531-9d93-20691fadaebb"],
 " can be defined for all real numbers ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "63dfb559-1189-4d52-81d2-afd6f204e68f"],
 " and it can be approximated as closely as desired by using rational numbers \
as close to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "cefe94eb-0b79-41f2-bfc8-5864fc4d44b7"],
 " as needed. In Section 7.1, we prove that the domain of an exponential \
function is all real numbers."
}], "Text",ExpressionUUID->"7923be95-96d0-4958-b5e9-df5ece9ad623"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"fb227797-a144-47a0-beaa-16004314af55"],

Cell[TextData[{
 StyleBox["Exponent Rules",
  FontWeight->"Bold"],
 "\nFor any base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "3f78aad2-357b-47ea-ac7c-5f0c59e8f500"],
 " and real numbers ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "34172e86-d3d8-4268-8b35-5ba5f15dfee6"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "3c085e04-8767-4851-9020-c7e6f9e98212"],
 ", we have\n",
 StyleBox["E1.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["b", "x"], 
     SuperscriptBox["b", "y"]}], "=", 
    SuperscriptBox["b", 
     RowBox[{"x", "+", "y"}]]}], TraditionalForm]],ExpressionUUID->
  "ebe802ba-c460-4330-b27c-6823043b96b4"],
 "\n",
 StyleBox["E2.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["b", "x"], 
     SuperscriptBox["b", "y"]], "=", 
    SuperscriptBox["b", 
     RowBox[{"x", "-", "y"}]]}], TraditionalForm]],ExpressionUUID->
  "9fe3c170-f23f-43bd-9245-7489576f5685"],
 " (which includes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["b", "y"]], "=", 
    SuperscriptBox["b", 
     RowBox[{"-", "y"}]]}], TraditionalForm]],ExpressionUUID->
  "96c42453-7fc1-4dbc-9d53-14520578dba0"],
 ")\n",
 StyleBox["E3.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["b", "x"], ")"}], "y"], "=", 
    SuperscriptBox["b", 
     RowBox[{"x", " ", "y"}]]}], TraditionalForm]],ExpressionUUID->
  "fe651191-1c74-4621-a94e-6c124e438f0b"],
 "\n",
 StyleBox["E4.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "x"], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "5d16dd9d-750d-472d-a481-864901f02ab7"],
 ", for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "39c34a7b-dfbf-4afd-84ad-7fe286e2711d"]
}], "Callout",ExpressionUUID->"7e6808cf-2fa4-4df2-b96e-13f61526067a"]
}, Closed]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "1"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"955649b5-6ed4-4169-9afa-a74a5f4b93ad"],
 "  Is it possible to raise a positive number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "b", Cell["",ExpressionUUID->"c9946305-2abf-4a51-9e38-d7a6dc634cb0"]}], 
   TraditionalForm]],ExpressionUUID->"053c4b37-eef8-422c-84fd-516741eb0b9b"],
 "to a power and obtain a negative number? Is it possible to obtain zero?  \
\[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 1",ExpressionUUID->"fb18a2f9-cbca-4add-af3c-9b4b0e90da36"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"80c0c85c-177d-4821-aa54-2e41f2d33bac"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "e7b39023-0c86-4349-a408-dc1a4a491df9"],
 " is always positive (and never zero) for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "32d375f3-b75c-4d7a-93c2-eb8dc821bc2e"],
 " and for positive bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "."}], TraditionalForm]],ExpressionUUID->
  "2f4450a3-2559-4e50-9fff-91d33b89aad5"]
}], "QuickCheckAnswer",ExpressionUUID->"f4f75999-7bf1-4602-9684-f0d596425e33"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Properties of Exponential Functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["b", "x"]}], TraditionalForm]],ExpressionUUID->
  "c204370e-22f8-4d94-9dfc-459b76adc0de"],
 "  \[RightGuillemet]"
}], "Subsection",ExpressionUUID->"9f68cebd-9ee8-4f39-ae54-a5fe45574637"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tBecause ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "34d5f6d1-c40a-421c-88eb-a86ab5819f76"],
 " is defined for all real numbers, the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "fdfc918b-9acc-4f10-b6ef-48c6d0e6b459"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", ":", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], "<", "x", "<", "\[Infinity]"}]}], "}"}], 
   TraditionalForm]],ExpressionUUID->"fe295aac-c976-4a73-8ead-786766bd918d"],
 ". Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "x"], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "c014265b-2db4-42c7-90c3-53ada0d03733"],
 " for all values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "2f5e1c63-e586-4986-92fb-ff9743048db9"],
 ", the range of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a1a5ec73-d1dd-45e6-8c2e-11a325c8a2fc"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ":", 
      RowBox[{"0", "<", "y", "<", "\[Infinity]"}]}], "}"}], ".", " "}], 
   TraditionalForm]],ExpressionUUID->"5bd9858b-5abc-4427-a4f1-d558df7d4fd1"]
}], "Text",ExpressionUUID->"4f2da374-6da3-48db-8e4f-888d31e14f0e"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tFor all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", ">", "0"}], ",", " ", 
    RowBox[{
     SuperscriptBox["b", "0"], "=", "1"}], ","}], TraditionalForm]],
  ExpressionUUID->"b8c4284b-f632-4ff0-9121-9a2dcd3f92ed"],
 " and thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "0", ")"}], "=", "1."}], TraditionalForm]],
  ExpressionUUID->"a455ec45-e992-4c09-94d2-50bd3cde7d71"]
}], "Text",ExpressionUUID->"ff028130-8822-464a-aea7-9ca57d546d32"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", ">", "1"}], ","}], TraditionalForm]],ExpressionUUID->
  "b1ee7d92-3a44-4f4a-a561-b24392c8de66"],
 " then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "43ff565e-9310-448e-b91e-11e0423e99e6"],
 " is an increasing function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f8c71755-0b7d-4ec9-b7f2-bfcba47fd237"],
 " (",
 StyleBox["Figure 1.45", "FigureFontText"],
 "). For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "ad5f1e1f-f5f1-4eb3-90ba-58b3fdad3950"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "x"], ">", 
    SuperscriptBox["2", "y"]}], TraditionalForm]],ExpressionUUID->
  "c3822165-3058-4f24-911d-f38b70ddbaca"],
 " whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "y"}], TraditionalForm]],ExpressionUUID->
  "d4b15a17-5242-4daa-8c12-4c375b2a5654"],
 "."
}], "Text",ExpressionUUID->"a26decc6-c87a-4279-b2f9-a63aa50f6acc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`bValue$$ = 2, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold[""], Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`bValue$$], 2, 
                "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 1.1, 10,
                0.1}}, Typeset`size$$ = {288., {144., 149.}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`bValue$7077$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`bValue$$ = 2}, 
             "ControllerVariables" :> {
               Hold[$CellContext`bValue$$, $CellContext`bValue$7077$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  $CellContext`funcC1F45[$CellContext`x, \
$CellContext`bValue$$]}, {$CellContext`x, -1.5, 2.5}, 
                 PlotStyle -> {Thick, Black}]}, 
               PlotRange -> {{-1.5, 2.5}, {-1, 20}}, AspectRatio -> 1, 
               ImageSize -> 4 72, AxesOrigin -> {0, 0}, Ticks -> {
                 Range[-1, 2, 1], 
                 Range[0, 20, 5]}, BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[0.04], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               Epilog -> {$CellContext`bcR, 
                 Text[
                  Row[{"\!\(TraditionalForm\`\(\(y\)\(=\)\(\\ \)\)\)", 
                    
                    Superscript[$CellContext`bValue$$, 
                    "\!\(TraditionalForm\`x\)"]}], 
                  Scaled[{0.1, 0.9}], {-1, -1}], Black, 
                 Text[
                  Framed[
                   Pane[
                   "Larger values of \!\(TraditionalForm\`b\) produce greater \
rates of increase in \!\(TraditionalForm\`\*SuperscriptBox[\(b\), \(x\)]\) if \
\!\(TraditionalForm\`b > 1\).", {
                    2 72, Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                  Scaled[{0.99, 0.99}], {1, 1}]}], 
             "Specifications" :> {
              "", {{$CellContext`bValue$$, 2, 
                 "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 1.1, 
                10, 0.1, ControlType -> Slider, ImageSize -> Small}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {430., {163., 169.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC1F45[
                  Pattern[$CellContext`x$, 
                   Blank[]]] := 
                FE`b$$45^$CellContext`x$, $CellContext`funcC1F45[
                  Pattern[$CellContext`x, 
                   Blank[]], 
                  Pattern[$CellContext`b, 
                   Blank[]]] := $CellContext`b^$CellContext`x, 
                Attributes[$CellContext`x$] = {Temporary}, FE`b$$45 = 
                4, $CellContext`b = 4, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Superscript] = {
                 NHoldRest, ReadProtected}, $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}}; {$CellContext`funcC1F45[
                  Pattern[$CellContext`x, 
                   Blank[]], 
                  Pattern[$CellContext`b, 
                   Blank[]]] := $CellContext`b^$CellContext`x}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.45\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.45  \[LightBulb]: Properties of exponential \
functions",ExpressionUUID->"60974645-958c-4cbe-99ec-236cdeffd484"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "b", "<", "1"}], TraditionalForm]],ExpressionUUID->
  "984a0ae9-982c-4398-b611-ad2f7b5acb57"],
 ", then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "647afb33-dffa-4096-9a48-e9920aedb901"],
 " is a decreasing function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "1863ce82-4bb4-45eb-969a-471b34baff1d"],
 ". For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", "=", 
     FractionBox["1", "2"]}], ",", " "}], TraditionalForm]],ExpressionUUID->
  "ffa40ceb-0bea-4a7a-a823-3300dc3e8bd8"]
}], "Text",ExpressionUUID->"7684bdbb-1ca5-4b8a-afce-c875511b7baa"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], "x"], "=", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["2", "x"]], "=", 
           SuperscriptBox["2", 
            RowBox[{"-", "x"}]]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ef3754af-de9d-4272-9c04-1e61ec41dbf3"]], \
"Text",ExpressionUUID->"e3e5d9ff-2c60-40f8-b1c0-948aa5ff357c"],

Cell[TextData[{
 "and because ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "x"], TraditionalForm]],ExpressionUUID->
  "0527a696-5cbf-4c3f-a674-55cf80338862"],
 " increases with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ",", " ", 
    SuperscriptBox["2", 
     RowBox[{"-", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "5261935b-54aa-4136-a0b9-2213e8a80c5c"],
 " decreases with ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c409f4e9-e71c-4d9c-858e-d0e548064626"],
 " (",
 StyleBox["Figure 1.46", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"1fd29385-1787-438e-a307-0227cb5c4601"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`bValue$$ = 0.1, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`bValue$$], 0.1, 
                "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 0.01, 
               0.99, 0.01}}, Typeset`size$$ = {288., {144., 149.}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`bValue$7265$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`bValue$$ = 0.1}, 
             "ControllerVariables" :> {
               Hold[$CellContext`bValue$$, $CellContext`bValue$7265$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  $CellContext`funcC1F46[$CellContext`x, \
$CellContext`bValue$$]}, {$CellContext`x, -1.5, 2.5}, 
                 PlotStyle -> {Thick, Black}]}, 
               PlotRange -> {{-1.5, 2.5}, {-1, 20}}, AspectRatio -> 1, 
               ImageSize -> 4 72, AxesOrigin -> {0, 0}, Ticks -> {
                 Range[-1, 2], 
                 Range[0, 20, 5]}, BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[0.04], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               Epilog -> {$CellContext`bcR, 
                 Text[
                  Row[{"\!\(TraditionalForm\`\(\(y\)\(=\)\(\\ \)\)\)", 
                    
                    Superscript[$CellContext`bValue$$, 
                    "\!\(TraditionalForm\`x\)"]}], {0.5, 18}, {-1, 0}], Black, 
                 Text[
                  Framed[
                   Pane[
                   "Smaller values of \!\(TraditionalForm\`b\) produce \
greater rates of decrease in \!\(TraditionalForm\`\*SuperscriptBox[\(b\), \(x\
\)]\) if \!\(TraditionalForm\`0 < b < 1\).", {
                    2 72, Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                  Scaled[{0.99, 0.5}], {1, -1}]}], 
             "Specifications" :> {{{$CellContext`bValue$$, 0.1, 
                 "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 0.01, 
                0.99, 0.01, ControlType -> Slider, ImageSize -> Small}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {430., {163., 169.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC1F46[
                  Pattern[$CellContext`x$, 
                   Blank[]]] := 
                FE`b$$43^$CellContext`x$, $CellContext`funcC1F46[
                  Pattern[$CellContext`x, 
                   Blank[]], 
                  Pattern[$CellContext`b, 
                   Blank[]]] := $CellContext`b^$CellContext`x, 
                Attributes[$CellContext`x$] = {Temporary}, FE`b$$43 = 
                4, $CellContext`b = 4, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Superscript] = {
                 NHoldRest, ReadProtected}, $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}}; {$CellContext`funcC1F46[
                  Pattern[$CellContext`x, 
                   Blank[]], 
                  Pattern[$CellContext`b, 
                   Blank[]]] := $CellContext`b^$CellContext`x}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.46\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.46  \[LightBulb]: Properties of exponential \
functions",ExpressionUUID->"59c6e899-9e2e-4403-a9a3-6511075344c7"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "2"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"2a2d4ab4-5579-4eab-8d02-7247859504ab"],
 "  Explain why ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      FormBox[
       FractionBox["1", "3"],
       TraditionalForm], ")"}], "x"]}], TraditionalForm]],ExpressionUUID->
  "603ff1b9-c2ed-4b43-b7f4-286c4266aba6"],
 " is a decreasing function.  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 2",ExpressionUUID->"d0890e71-35a7-40a6-b63d-138c2fea6225"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"44c5c141-6e31-4c02-baeb-a690b50a1a2d"],

Cell[TextData[{
 "Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}], "x"], "=", 
    RowBox[{"1", "/", 
     SuperscriptBox["3", "x"], " "}]}], TraditionalForm]],ExpressionUUID->
  "e6ffbd3c-01c1-45fd-bb55-66587f51fb96"],
 "and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "x"], TraditionalForm]],ExpressionUUID->
  "fc2dc60a-3590-4625-9829-9086c4af2e9f"],
 " increases as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4003353e-64db-4fd5-a9f0-495f8482c8b2"],
 " increases, it follows that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "/", "3"}], ")"}], "x"], TraditionalForm]],ExpressionUUID->
  "81be2687-34a5-43ba-b0da-51ecb14c221b"],
 " decreases as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "d33f45ea-08be-45b7-bf54-1672c47e7069"],
 " increases."
}], "QuickCheckAnswer",ExpressionUUID->"410bf68e-b0fd-4219-9845-f140552e37b4"]
}, Closed]],

Cell[CellGroupData[{

Cell["The Natural Exponential Function\t", "Subsubsection",ExpressionUUID->"ac148012-3e06-464f-8cee-d50f26e76102"],

Cell[TextData[{
 "One of the bases used for exponential functions is special. For reasons \
that will become evident in upcoming chapters, the special base is ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "8a1e6f0e-c28f-4269-97b3-5992201447d6"],
 ", one of the fundamental constants of mathematics. It is an irrational \
number with a value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "=", 
    RowBox[{"2.718281828459", "\[Ellipsis]"}]}], TraditionalForm]],
  ExpressionUUID->"16c33786-9c4b-42af-ab0a-ad316dd57328"],
 "."
}], "Text",ExpressionUUID->"b8908c81-e413-4f3f-89e0-fb2258f8994a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"3539f2c5-af86-41ba-843d-431e6531cb2e"],

Cell[TextData[{
 "The notation ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "b5c455bb-d168-4258-a2da-e19731e02a66"],
 " was proposed by the Swiss mathematician Leonhard Euler (pronounced ",
 StyleBox["oiler",
  FontSlant->"Italic"],
 ") (1707-1783)."
}], "Callout",ExpressionUUID->"5780e5ea-1d6c-4fcb-b1df-7a0cf469ab5c"]
}, Closed]],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["The Natural Exponential Function",
  FontWeight->"Bold"],
 "\nThe ",
 StyleBox["natural exponential function",
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"is", " ", 
      RowBox[{"f", "(", "x", ")"}]}], "=", 
     SuperscriptBox["e", "x"]}], ","}], TraditionalForm]],ExpressionUUID->
  "cf6cf47b-743b-4588-ac0a-4870609aa3ee"],
 " which has the base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "=", 
    RowBox[{"2.718281828459", "\[Ellipsis]"}]}], TraditionalForm]],
  ExpressionUUID->"5b20a0cd-4a78-45e3-8eaa-67a616bd7448"],
 "."
}], "Definition",
 CellTags->
  "DEFINITION The Natural Exponential \
Function",ExpressionUUID->"6c82dbd7-26bd-47cd-b73e-059160342082"],

Cell[TextData[{
 "\tThe base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "c956a0d6-3ec9-4efb-aadb-73065283f96b"],
 " gives an exponential function that has the following valuable property. As \
shown in ",
 StyleBox["Figure 1.47", "FigureFontText"],
 ", the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["e", "x"]}], TraditionalForm]],ExpressionUUID->
  "31b9688a-96dd-4faa-9d73-b3aed64e9a85"],
 " lies between the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["2", "x"]}], TraditionalForm]],ExpressionUUID->
  "385c0b51-cdaf-41d7-a7bd-c437f107f514"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["3", "x"]}], TraditionalForm]],ExpressionUUID->
  "9ef0c706-7da5-456b-a78e-ea609ca9c644"],
 " (because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"2", "<", "e", "<", "3"}], ")"}], ".", " "}], TraditionalForm]],
  ExpressionUUID->"7d5cbf07-661a-46e9-aea6-34ff873bbbed"],
 "At every point on the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["e", "x"]}], TraditionalForm]],ExpressionUUID->
  "a30f8e69-a290-42a3-a84b-4ad904bfec6d"],
 ", it is possible to draw a ",
 StyleBox["tangent line",
  FontSlant->"Italic"],
 " (discussed in Chapters 2 and 3) that touches the graph only at that point. \
The natural exponential function is the only exponential function with the \
property that the slope of the tangent line at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"0", " ", "is", " ", "1"}]}], TraditionalForm]],ExpressionUUID->
  "51a18e48-29f8-4aa0-bd45-6230f5a18464"],
 " (",
 StyleBox["Figure 1.47", "FigureFontText",
  FontColor->GrayLevel[0]],
 "); therefore, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", "x"], TraditionalForm]],ExpressionUUID->
  "8dc0eda6-c052-455b-a036-243b6eba01f7"],
 " has both value and slope equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", " ", "at", " ", "x"}], "=", "0."}], TraditionalForm]],
  ExpressionUUID->"61754707-41c3-44d3-8b98-3d5ddc8af8f8"],
 " This property\[LongDash]minor as it may seem\[LongDash]leads to many \
simplifications when we do calculus with exponential functions."
}], "Text",ExpressionUUID->"67fcc915-a931-4dc6-b808-b443b1ad9600"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`b$$ = 4, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`b$$], 1.5, "base"}, 1.01, 4, 0.01}, {{
                Hold[$CellContext`b$$], 1.5, ""}, 1.01, 4, 0.01}, {
               Hold[
                Row[{
                  Manipulate`Place[1], 
                  Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}},
             Typeset`size$$ = {540., {260., 266.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`b$33405$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            2, StandardForm, "Variables" :> {$CellContext`b$$ = 1.5}, 
             "ControllerVariables" :> {
               Hold[$CellContext`b$$, $CellContext`b$33405$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                
                Plot[{E^$CellContext`x, 2^$CellContext`x, 
                  3^$CellContext`x, $CellContext`b$$^$CellContext`x, 
                  Log[$CellContext`b$$] $CellContext`x + 
                  1}, {$CellContext`x, -3.5, 3.5}, 
                 PlotStyle -> {{Thick, Black}, {
                    AbsoluteThickness[1], Dotted, Gray}, {
                    AbsoluteThickness[1], Dotted, Gray}, {
                   Thick, $CellContext`bcR}, {
                    AbsoluteThickness[1], $CellContext`bcO}}, 
                 PlotRange -> {-0.5, 6.5}, Ticks -> {
                   Range[-3, 3], 
                   Range[0, 6]}], 
                Graphics[{
                  $CellContext`ClosedCircle[{0, 1}, $CellContext`bcR], 
                  Text[
                  "\!\(TraditionalForm\`y = \*SuperscriptBox[\(3\), \
\(x\)]\)", {-2, 5.8}, {1.2, 0}], 
                  Text[
                  "\!\(TraditionalForm\`y = \*SuperscriptBox[\(e\), \
\(x\)]\)", {-2, 5.2}, {1.2, 0}], 
                  Text[
                  "\!\(TraditionalForm\`y = \*SuperscriptBox[\(2\), \
\(x\)]\)", {-2, 4.6}, {1.2, 0}], 
                  Text[
                  "\!\(TraditionalForm\`\((0, 1)\)\)", {0, 1}, {-1.5, 1.5}], 
                  Text[
                  "\!\(TraditionalForm\`y\)" == \
$CellContext`DisplayNumber[$CellContext`b$$]^
                    "\!\(TraditionalForm\`x\)", {-2.9, 3.5}, {-1, 0}], 
                  Text[
                   Framed[
                    TildeTilde["slope", 
                    $CellContext`DisplayNumber[
                    Round[
                    Log[$CellContext`b$$], 0.01]]], {
                    RoundingRadius -> 5, FrameStyle -> $CellContext`bcO, 
                    Background -> GrayLevel[1]}], {
                   2, 1 + Log[$CellContext`b$$] 2}, {-1, 1}], Gray, 
                  Arrowheads[0.03], Dotted, 
                  Arrow[{{-1.9, 5.8}, {1.5, 3^1.5}}], 
                  Dashing[{}], 
                  Arrow[{{-1.9, 5.2}, {1.5, E^1.5}}], Dotted, 
                  Arrow[{{-1.9, 4.6}, {1.5, 2^1.5}}], 
                  Dashing[{}], 
                  Arrow[{{-1.9, 3.5}, {1, $CellContext`b$$^1}}]}]}, 
               AspectRatio -> Automatic, GridLines -> {
                 Range[-3, 3], 
                 Range[0, 6]}, GridLinesStyle -> LightGray, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               ImageSize -> 6 72], 
             "Specifications" :> {{{$CellContext`b$$, 1.5, "base"}, 1.01, 4, 
                0.01, ControlType -> Slider, ImageSize -> Small, 
                ControlPlacement -> 1}, {{$CellContext`b$$, 1.5, ""}, 1.01, 4,
                 0.01, ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}, 
                ControlPlacement -> 2}, 
               Row[{
                 Manipulate`Place[1], 
                 Manipulate`Place[2]}]}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {750., {280., 285.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({$CellContext`b$$ = 4, $CellContext`bcR = 
              RGBColor[0.92, 0.11, 0.27], $CellContext`bcO = 
              RGBColor[1, 0.5, 0], 
              Attributes[PlotRange] = {
               ReadProtected}, $CellContext`ClosedCircle[
                Pattern[$CellContext`coord, 
                 Blank[]], 
                Optional[
                 Pattern[$CellContext`color, 
                  Blank[]], 
                 GrayLevel[0]]] := {$CellContext`color, 
                AbsolutePointSize[7], 
                Point[$CellContext`coord]}, $CellContext`DisplayNumber[
                Pattern[$CellContext`num, 
                 Blank[]]] := 
              If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                
                Round[$CellContext`num, 
                 1], $CellContext`num], $CellContext`bcBSG = {
               FontFamily -> "Times", 13}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.47\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.47  \[LightBulb]: The natural exponential \
function",ExpressionUUID->"9b338ef4-867c-4a12-aa0d-47c766a415b6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Functions  \[RightGuillemet]", "Subsection",
 CellTags->
  "Inverse Functions",ExpressionUUID->"cccce876-6b19-4247-9334-2d19ba5a11de"],

Cell[TextData[{
 "Consider the linear function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"2", "x"}]}], TraditionalForm]],ExpressionUUID->
  "5e2bf91d-e6b1-457d-8d69-24fd56a6b45b"],
 ", which takes any value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "417d88e6-fe92-484b-bf23-c6d2df6cad9a"],
 " and doubles it. The function that reverses this process by taking any \
value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"2", "x"}]}], TraditionalForm]],ExpressionUUID->
  "958a748d-cf61-4228-acff-b2d6f893147a"],
 " and mapping it back to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "x", Cell["",ExpressionUUID->"cd673964-1d46-4bac-abf1-359931ff4d36"]}], 
   TraditionalForm]],ExpressionUUID->"eda2b4fc-92ef-455d-8d8d-2b568bbf2894"],
 "is called the ",
 StyleBox["inverse function ",
  FontSlant->"Italic"],
 "of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "89ff6023-d12f-439c-81ca-cff9b6de8cad"],
 ", denoted ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "2493f5c7-5646-4ef4-83f0-5d3331509fa5"],
 ".  In this case, the inverse function is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
    FormBox[
     RowBox[{"x", "/", "2"}],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "47c4092d-a94b-4133-98a2-cdde751ae6ac"],
 ". The effect of applying these two functions in succession looks like \
this:"
}], "Text",ExpressionUUID->"c0f1ade2-5b94-4460-9f69-623e61031356"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"x", " ", 
          OverscriptBox["\[LongRightArrow]", 
           StyleBox["f",
            FontColor->RGBColor[1, 0, 0]]], " ", "2"}], "x", 
         OverscriptBox[
          RowBox[{"\[LongRightArrow]", " "}], 
          StyleBox[
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "TypesetAnnotationFont"]], 
         RowBox[{"x", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"28c9b964-4adc-4f9a-83bd-08ae990cbf6c"]], \
"Text",ExpressionUUID->"42050442-969a-4c8e-bc59-d48ef8ea3758"],

Cell["We now generalize this idea.", "Text",ExpressionUUID->"438a0f9a-f1f9-43e0-b266-eb9f5873db10"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"70a502c9-953e-47aa-86d9-8f32cb4ec1f8"],

Cell[TextData[{
 "The notation ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "78ca6124-823a-4f92-a32c-18c989eaa887"],
 " for the inverse can be confusing. The inverse is not the reciprocal; that \
is, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "1454b135-708b-4a73-9446-84313cce9ce2"],
 " is not ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"f", "(", "x", ")"}]], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"f", "(", "x", ")"}], ")"}], 
     RowBox[{"-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "64e3cb70-6f04-4f05-a3d6-77e99327ec89"],
 ". We adopt the common convention of using simply ",
 StyleBox["inverse",
  FontSlant->"Italic"],
 " to mean ",
 StyleBox["inverse function",
  FontSlant->"Italic"],
 "."
}], "Callout",ExpressionUUID->"d2e5581a-6d06-483f-a065-d002a0264533"]
}, Closed]],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["Inverse Function",
  FontWeight->"Bold"],
 "\nGiven a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ","}], TraditionalForm]],ExpressionUUID->
  "336a5226-a264-403e-aeab-856695802a22"],
 " its inverse (if it exists) is a function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "0b22a833-7032-4f75-be61-ce2fbb0efc8d"],
 " such that whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{"f", "(", "x", ")"}]}], ","}], TraditionalForm]],ExpressionUUID->
  "de934b9b-f363-4ae3-bb57-1f028bc9cb51"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "y", ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"8af2ea66-aade-4f17-a379-669eb9dd8fad"],
 " (",
 StyleBox["Figure 1.48", "FigureFontText"],
 ")."
}], "Definition",
 CellTags->
  "DEFINITION Inverse \
Function",ExpressionUUID->"b0d557c6-0c3c-4f29-b4fc-fd190ee8df43"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
IAiCIG4T/h/OkRrT
      "], {{0, 532}, {684, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {684, 532}, PlotRange -> {{0, 684}, {0, 532}}, ImageSize -> 
    252.],StyleBox["\"Figure 1.48\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.48: Inverse \
functions",ExpressionUUID->"ad79f26c-a8df-4a64-9acc-c9d719414029"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "3"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"833203aa-ed9f-4d8d-98e5-f5cd434c69f2"],
 "  What is the inverse of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox["1", "3"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "550995c1-ffe2-4774-bc89-bfbcdbaf6d68"],
 "? What is the inverse of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"x", "-", 
     RowBox[{"7", "?"}]}]}], TraditionalForm]],ExpressionUUID->
  "3b3445ed-2aca-46d9-ba29-70f6bcf70598"],
 "  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 3",ExpressionUUID->"acff0fe7-e3e7-486d-aa9a-cd7d2eeea6ac"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"22a7eb4e-532e-4a2f-8722-fd8ed2ff2c60"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
     RowBox[{"3", "x"}]}], ";", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
     RowBox[{"x", "+", "7"}]}]}], TraditionalForm]],ExpressionUUID->
  "289f34ef-2b0d-4053-90eb-585c7cbae8a3"],
 "."
}], "QuickCheckAnswer",ExpressionUUID->"0fc1bd73-dfd5-4108-bf3a-31c2d67da01c"]
}, Closed]],

Cell[TextData[{
 "\tBecause the inverse \[OpenCurlyDoubleQuote]undoes\[CloseCurlyDoubleQuote] \
the original function, if we start with a value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c9c10437-f165-428d-9bc3-8c95d6db129f"],
 ", apply ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9c7601f6-b3f4-498f-9009-77bad63e488a"],
 " to it, and then apply ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "a4f3f7ea-a866-4cd4-98d1-9449f4ee298c"],
 " to the result, we recover the original value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "07d786ef-bbfd-4cca-bf39-e733574b706f"],
 "; that is,"
}], "Text",
 TextAlignment->Left,ExpressionUUID->"009e0396-df21-494d-8825-7bccada75ecd"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           RowBox[{"-", "1"}]], "(", 
          RowBox[{"f", "(", "x", ")"}], ")"}], "=", 
         RowBox[{"x", "."}]}]},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt3Qd4lNW6L/Ccc+65d99y2q5niyA2LNgRt2UjkS4dLEiVDgGVDlIEBQS3
ioIKIk2aSAlVegnVhB4SpCUhPZDee+F/v3dNykyYmmTmm5n8f8+zztmGCaxk
5vveb631rnfdP3hMz+H/7OPjM+F32v/pOWjKa+PHD5r6xn9q//HWBxP8Rnww
bOjrH0wcNmLY+BcH/4v2xUitXf0nH5//of1/EBERERERERERERERERERERER
ERERERERERERERERERERERERERFp7ty5g/y8PKSkpCAmJgbXrl3D+fPncfLk
SRwNCMCBAwewe/dubN++HZs3b8aGn36y2OTPt2/bpl4v3yffL3/PuXPncPXq
VURHRyM5ORl52r8n/y4REZE7k1iVmpqK69evq3gmMW7ZDz/g008/xYQJEzB0
yBC89eabaNe2LV5o3hyPNGmCe/76V93aQw8+iOebNUPrVq3wRs+eGDx4MMaP
G4fZn3yCxYsXY9OmTQjQYnNoaChu3bqF4uJivX/FRETkRWRcKePJ/fv3Y9XK
lZgzZw78/PzQvXt3FScbNWyoa5x0RXvyiSfQrl07DBw4ENOmTsW333yDrf7+
OHP6NG7fvs1xMBERKRIPpBUUFODKlSvYsWMHFixYgDHvv4+uXbvi6aee0j2m
eUK7v3FjvNqiBfr364fp06er8XrAkSNqjrusrKzy90xERN5F5jQlfvprY605
s2djQP/+ePnFF9Hgnnt0j03e2h68/3415zxi+HB8+fnn+OWXXxAeHo7S0lK9
Pw5EROSAnJwcBAYG4vvvv8f7772HNq1b475GjVwaU5o+9piK2x3at0evXr1U
bJk8aZJae124cKEa161ftw7btm5V88zHjx/H6aAglcMUGhKi8o4kBknukYz9
jJt8TVpERISap5bXy/cFad8vf8/BgwdV3pPkNi1ftgyLtH9v3rx5ah531KhR
6NenD7p06oQWr7yCJ5o2RcN773Xp70bGuDK3PHbMGCxduhSnTp1CVlaW3h8b
IiLSFBUV4cKFC2r9U+ZwZU7SmWPQZ55+Gh07dMCQwYMxY8YMle8jebmSi3v5
8mW15lhSUqL3r8UhMk+blpaGGzduqBgnc+Irli9XsVieS9584w28/NJLKh46
M97KvyHPH/I7PXHiBGMtEZETVazTSf6tjO/mzp2Lbt261cm9XuJwRZNxpsTN
kSNGqLjy0/r1KtbExsYyP1aTpv3+JV94z549WLJkCaZ++CH6aONfGfvKnEDF
77GuYq3vq69i/PjxamwvY/OKNVsiIqoZiaM7d+7ElMmT0UIbi9bV/br588+j
d+/emDlzJtZp92yZQ5V/i2pOYp7MTx8+fFjN706aNAk9undXOcV19b7JXiV5
32RuW3KSZb6CiIgsk7m/vdpYSHJLW/n61vo+/OADD6Bzx47qHv/jjz+qe3F2
drbeP2a9I+NcGffLeq+MPzu+/joe0N6b2r6/Ml8he3ElL0r2EEt+NxFRfSZz
epcuXVK5PDKvW5scGrnHSgydNm2aWvOU9UIZQ5F7kvdGcq+knsYnH3+s4mOT
hx+udZzt9fbb+O7bbxESEsL3n4i8nsTRzMxMla86evRolY9a0/XQ5s2bq/zW
VatWqZxYrn96Pvl83Lx5U+VJS16YrHVXrNvWJM7KevmwoUPVOrnUkOLaLBF5
i7i4OKxcsUKNJWpap6jVa6+p+WHJV01ISND7RyIXyc/PV/P3kic8aNAgNK3B
s1hFkz1Xko8mfx/30RKRpwkPC8NXX32l7mU1uQdKntKHU6Zg165dzCmiSjLm
lJrMq1evVnnbsvepJp+vxx99VNWllLw42fNMROSOZE3zyy+/rFHOkczZyX1y
48aNah8okb1k7njNmjXqrAOJl45+9mSuuW/v3li7di0SExP1/nGIqB6TsYPU
AFr49dfwbdnS4TXSrp07q7q8UtuBOSZUF+RzFBwcjG8WLcLbb72Fxvfd5/D6
rNSjkr1Csn7BNVkicoX09HQ1PpAcXkfuV1IzduC776oae3I2KJGz5ebmYv++
fWqvVbPnnnN4LCvPfj/88APi4+P1/lGIyMtIfT45P1tyRxzJPZL53XFjx6rv
lRwUIj1J7WXZh9OtSxeHx7HyPbIPOo3r/URUC1L/Xc4edeTstCcef1yd7S11
cz2tXi7VHzJnIntw5Jw7mS+29/Mt+6zle2S/mJzTS0Rk1Z07alz5888/q+dz
e9dLH3vkEUwYP16dqcJYSp5G5ovlLDvZE93koYfsHss+9OCD6swHqffEHAEi
qk7yKj+eNUvN3dqbRynzwrt372YNOfIa8lmWepp+I0equGnvOPZvL7yg8vAk
34mI6i/ZHy/nk0jNBkdyOaRefUZGht7dJ3IqmbuR62P4sGEOnZ8kuchSN4rP
m0T1h9QTlLO+5GwXe+4TTz35JObMno2wsDC9u06kCzmzQdZHJGbaO08scz8y
ByR5CkTkfWQvntQ6nzZ1qjrrxZ78DNkXI/sUuGZKVEVql8hzqdQTszfGytkC
kutUWFiod/eJqA5ITdSBAwbYdf1L7u9n8+cjnutERDbJuQ/yrGpvrSc5k3a+
dn2xzjWR55Hxqewb7dq1q93P01IvlWfDEDlOxqFyLoScvW7PGFbmg2Td9nRQ
kN5dJyIbJC7KGaT21BaUXAw5a/ratWt6d5vIa8hcz+f/+Ifd5wK0bdMGGzZs
YJ4TkZspKipStcNfaN7c6jUsz9LPPvMMvv76a9aOIXIiyUuQPTv2jmFljlj2
6qSmpLA2MZGOJJ5Kvd7n7cjtlXNMt2zZwrleIheLjo5Wtcvs2R8utbSnTJ6s
9pQTketIPJV6pfbUE+/RvTsOHz6sd5eJ6j3ZEyv1E1u3amXzupUxrtReOXv2
rN7dJvJqUsth06ZNNud7pQ0cOBDnzp3Tu8tEZEZgYCCGDB6Mhg0a2LyWe/bo
gWNHj+rdZSKvIustUsP01RYtrOcZateonBHOXCQizyC1D2fNmqVqE9uKr+3b
t1e1Q1mPmKh2pJ59B+16sjVn5Ofnx5pIRB5K6qDJOXaSV2grvsrzteRKyPwV
Ednv+vXr6Nenj814Onr0aNZKI/ISFXvlJM/QVnxt8cor8Pf3Z3wlsiEpKQkT
J060ue4iOQ0Se4nI+1TUdunSqRPjK1EN5eXlqf1r1s6nkvGpnD9z8eJFvbtL
RC5y6tQp9O7Vy+Y+2BZ//zu2avGV669EUDlJtvagduzQQZ2hTET1U3BwsMrz
tzV+lX08Bw8e1Lu7RLqQvN0333jD6jUi57lt37aNNViISAkNDbUrvnbr0kXt
5yGqDyT3b/r06ar+tqVr4pEmTbB48WKeLUVEZsl5OnKeo634KrUU5bVE3kjG
nP5btqhaoJaugUYNG2LGjBlIS0vTu7tE5AFCJL4OGGBz/fW90aMRFxurd3eJ
6oycK/72W29Z/dy/9eabzPElohqRmodSt9TaPUbOsZo7dy6ysrL07i5Rjck8
7pdffIHG991ndQ1V6qgQEdXW0YAAtGvXzmp8bdq0KVYsX85zOMjjBAUF4ZWX
X7b67CgxV+pxExHVFVlz2rVrl9rbamvv66FDh/TuLpFN2dnZ+HDKFKv7UPv0
6YOoqCi9u0pEXkzOgV21apXVnA5pfXv3RtiNG9x3QG7pyJEjeL5ZM4uf32ee
fho7duzQu5tEVI/Is/68efPU+a6W7k2yP2HmzJlqvwKRO8jIyMD7771ndYw6
bepU9fkmItJDQkICxrz/vtXcYVl7XbduHes2ka4CAgKsnkPh27IlLly4oHc3
iYgU2c/arVs3q3PDHV9/Xe3hIXIlqek7edIkq3tRv/z8cxQVFendVSKiu2zf
vt3qupWMayVXRObjiJzt7JkzePnFFy1+HuXM1CtXrujdTSIiq/K18YHsS7C2
9vpE06bYuHEj85rIKWS/16effmpxfUL2qcr5xDyziYg8SXxcHIYNHWp1brh7
9+4ICwvTu6vkRSIjI9W5MpY+c23btFG19ImIPNWxo0et7ru/r1EjNb5l7XKq
rc2bN1s8G1XOIP9s/nzWLiEiryAx8+uvv7Y6N9yiRQtV+4bIUbIvxs/Pz2q9
Eub6EpE3io2NVTX9rc0NT5gwgXteyW6SY/7S3/5m8fM0ceJEteZPROTN9u7Z
g+eefdZqvZv9+/fr3U1yY5LzJrW/LNXKb/rYY9ijfc6IiOoLmbubPm2aWvey
FF9HjRqF1NRUvbtKbiYnJwcjR4yw+Lnp2aOHqllCRFQfnT9/Hq18fS3eI6UW
Mc/nogqy39TS+Q/yjLZw4ULW9iKiek9yNBdp90Nr51/Knh2OXes3f39/i7lv
UqOQeW9ERKZkL2uXTp2sjl3379undzfJxeS566OPPrL4uejdqxdSUlL07iYR
kVuSObzvv/8eDz7wgMX76LixY5GVlaV3V8kFJF726N7d7OdA6iktWLCA875E
RHa4efOmqsdkKbY2f/55/Prrr3p3k5zo4sWLaPbcc2bff6mFeeLECb27SETk
UWQvxYrly63Wk5g1c6ZdtZokt5g8x5YtWyyut0u9/Pj4eL27SETkscLDw9U5
c5Zia+tWrXD9+nWL3y9ngMnrdu7c6cJeU03InK7UzLc07zt+3DjWvCQiqgMl
JSX46quvVD1hc/fc+xs3VnUCzJ2RI3We5DVSiyI3N1eH3pM95L0ZOHCg2fdX
zkldvXq13l0kIvI6coa676uvWhy7Sp3EtGr7ceQczoo/n/3JJzr1nKyJi4tT
8w7m3tOnnnwSZ8+e1buLREReq6CgwOq+i6efegrHjx2rfP2OHTuqagfcey9u
3LihY++pOslPkj1U5t5LOdeNa6lERK4REBCgxjKW4uu8efPU2dVLly41+fob
PXvq3XUqt2/vXjxgYU/VkCFDkMea+URELiX7G/v362cxtnbr1k2daVL969v9
/fXuer23csUKlYtk7n2bP3++2bVyIiJyDblHS+6SuXu0uVwnOTNHav+T60nO
r+yPMvdeyd6arXzmISJyC1evXrWa01S9zdTu7eRaskdm6JAhZt8POdvtNGv8
EhG5FTnDeuyYMXbFVclhklhMriG1J2Vt29x7IWeTyz5lIiJyL7ImJ2dvSs6L
pbW76uuv5HzJyclo17at2fdAan6wbj4RkXuRuhFy1s2A/v2tnpVurknNPHKe
6OhovPzii+b3Gw8cqOYYiIjIPcg9W/bTSB6SI7HUuEkNd6lLQHVPziGX/cTm
fu+Spy37oIiIyH0EBgZi8qRJ6nybmsZVaa18fZGTk6P3j+N1oqKizD7zfDZ/
vt5dIyIiGyTvZfmyZejXt686v9We9VXj1q9PHzWfTHVLcsMef/TRyt+znFFE
RESeRWodSi3Dj2fNcmjvzbRp0/Tuulc6f/68iq3btm7VuytERFQHpMbsT+vX
Y9jQoXjskUesxtZVK1fq3V2vJPtsiIjI+0iuzIEDB9QeG7P7Whs0wJEjR/Tu
JhERkcc5d+4cBg0adNdabJOHHmLNCCIiohoKDwvD+HHjTGoJS46x1DMgIiKi
mrl9+zbmzJ6NJg8/rGJr544dVQ4UERER1Zzk2Hz37bdq7+WI4cN5ZhkREVEd
kPNXJI/Yn2eXERER1RmOV4mIiIiIiIiIiIiIiIiIiIiIiIiIiIiInId5+0R1
j9cVUf0UFBSEkSNG4OTJk7wPENWRDRs24MMpUxAaGqp3V7xGTkwI9m1YhCl+
A9Cp2fPwaTYIG2+Vmb4oIRALRvbA3//yVzRt/REOZZTq01mq9/r16aPqj778
0kuqXpo71fcuK0hDUkQITu/fgsVfTMP77/ZUff3wYqaZV8fBv28r9edN/b7D
xUKXd5dIkdpIcj3JZ7FD+/ZYt24dcnNz9e6WUpP4dFXXaykL+7r+L7Pn6PnM
Cax6WcRG1V/jP3/3jLn7BJHzRUVF4f7GjSs/i40aNsTQIUNw7OhRncewVq6n
AZuQU/3lId+ZvuaHK3p0mkg5GhBg8nl86MEHMXHiRAQHB+vUo5rHp203i3Tq
syjB7ZBQhKdLcE/DweE+lf36n09/hSh5SfIxDP79X9Dgv5vjnbZ/qPzzj667
x7MM1U9ffvml2evthebNsXDhQiQmJurbwfRLWPLaf1T2S66fVdWfsbPPqmur
8l7xzSV9+kpUbtjQoWavq7Zt2mD16tXIzs52YW9qHp8O3HKfyZ+yoAWV/br3
T2/hUGYCNrb8NzT4c/vKe0J6TASiEu568iZyKTVv9eKLZu8B0hreey8GDhyI
w4cPo6yszPZf6AzpB9Hjj/9d2ae/rg67+zXJl7Cy+/81xNVljKukr4SEBDVO
tXRdPfDAAxg3dqw609zVPDY+5fxq8vxc0YadStW7Z0R3Cag2b2WpPd+sGaZP
n45tW7ciJibGhT0swcUPHq8aj7ZajFvmXlZ+v/AzuwZL5FpLliyx67pq5euL
uXPnYt/evUhKSnJ+xzw2PiXhR99/N53Hnn4IdTlTnZ+fj7+98AIbW520B7Xn
Z3vuAcbtySeewMB338W333yDX3/9FXl5eXX4CTdl/Ixtdi5YE7Owk3rm3pJR
83/nt99+0/29YPOedl+jRg5fV7IG4zdyJJYvW4aLFy+iqKiu1zidH5+c5frH
Larm0v7rPRyo4yF1vnYPc/T9YmNzZmvYoIFaP5oyeTI2bdqE8PDwust/KgzG
2H+vesZu+Ut8tRfEYbnPH+Ezfk+t7g9yH9P798jGZtwa33cfunbujFkzZ2LX
rl2Ij6/+2Xecs+OTsxSdmFfZ70b/byZC6vjvZ1xlc/fW9LHH8N7o0bh0qS7W
OwtwuO8/V/7d1Z+vS47MVF//IrZ2a8CMq2zu3p579lnMmDFD5fPXlLPjk9OE
VuX+y7zVt2bmrWqDcZXNnVr1sWpERESd79XJWD+k8t/712fm4Xrln5SPVUdu
v3sPjoMYV9ncqclYtVuXLvh41qw6G6sqTo5PzhGLpU/83uT3887R23X6L0ge
56hRo9jYat1kLUfGlvZc5w3uuUe1p558EoMGDXLJ2mqliI1V/TBaR83aMVn7
2j2YWwd77WQMoPf7weYdbejQoSouOnJdyZrsKD8/rFi+3Elrq8L58ckZwhd2
vuv3ZrL/lsiNrFmzxuZ1X1EzwvW5wMbCsMjnT5V9Gnq5SH1txv/5sxqrekLe
BdUf06ZOtXldyV6cCRMmuC4XGB4an0JWGPo59xDi9s+q6relvQFEOkpNTcXj
jz5q8bqXva3uU+OwAMeN9rS/+kskksrnhpfUcl2VqC6FhoSo8ael66p9eY3D
nBwXJwx5YnwqDFbPzrIOfEb+O2ZbZb9l/+0vFfn/6cfUPvcJl1lrifQle9Or
X/OyN0Bq8p84ccLtavKnrHqn6l7wfDtVd83tn7WpXpFrpnPHjnddV00efljl
H+hWk99D4lNJejKCgkIRmaX9LpGIrd3+t9bHF6qenUvD8Nm//rmy730CMrXX
xaq9Q/f920z8xpL7pKMzZ86YrO+82qKF2suelurG+8PPLza5V937+/cQ4D6l
1oiwbu1ak+uqS6dO6pwbl+QgGMmJvuKR8cnf378yn6ptuz+aWf8tQdCYqjox
kmtRUXvxs+tcDSL9lJaWok3r1iqvYvTo0QgM9JAxX/mzdMU11fmAzvWLiYyk
paXhiccfx2OPPIJp06bhyhWdzoDQrpOKGvqeFp8q4mrlvNSyu2s95h6ZdNd8
wLsHInXoLVGVCxcuYNkPPyA9PV3vrjgoDmub/pfhehuwCWl6d4fIyJ49e7B5
82ZVD09XEWvvijueEp+iTuysfB4YtvqshXzEJOwa/pp6XdM2o7HsohvPsRG5
u8Kzqu6SrAfVpl4hkXdLw5Gp3RifiMimxHVD1F5VT9hvR0RE5NYS9pTn/x7X
uydERESeLd1wtpXss4vSuy9EREQeJPvacbUvYduFWMMXCq+oOkty7sZxDzl3
g4iIyC0UnjU5c7nlhBl471ktpv7pbWz0iNrgREREbiTbNK6q2g9/GMSYSkRE
VCMFuPSPPpX7A4Z/sQ0RrKdERERERERERERERERERERERETWFBUDJ4KB2cuB
U5f07g2RR5IzXI9lFKHD1QyMv5mNMjc7B5mInEQudbneI+KAZTuAN6YBPh20
9jpwIEjv3hF5hDvlLb6wFDOjc+ATmASfrdHw+ekmnrnsaedNEVGN5OQDe38F
xn0N/LmPFkdbVrXfvQ1cjtC5g0Tur7jsDrYmFeA/QtLgsy9exdHK9nMk5sSw
uBiR18ovAELCgAXrgdZjtfjZ2jSWVrTmI4BEnjNFZE6RFkcvZhfDLzwbPscT
4bM5yjSWVjT/aOxKKdC7u1RaCoSG690L8kTZecD1aODoeWD9PuAfa4D3FwDd
PwSeHKzFyy7mY2j11numIf56uENpLEJBjssvLcPlnBJs0cafH0dnq3VRn/Mp
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
IiIiIiIiIiIiIiIiIiLS2/8HiHhJwQ==
           "], {{0, 222}, {470, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSize->Automatic,
         ImageSizeRaw->{470, 222},
         PlotRange->{{0, 470}, {0, 222}}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b8c95edd-f2b8-4dae-a63b-febd8751f115"]], \
"Text",ExpressionUUID->"a0944d2a-edab-40a6-a00f-121aefba9971"],

Cell[TextData[{
 "\tSimilarly, if we apply ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], " ", "to", " ", Cell[
    "a",ExpressionUUID->"5b4f70a2-a1bb-4cbc-b11f-a06ba479c75c"], "value", " ",
     "of", " "}], TraditionalForm]],ExpressionUUID->
  "21c9f536-2ae9-4d4d-9d99-6aa8d7ac4c52"],
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "3987f7bd-54f8-41a5-b753-54c87ff048e1"],
 " and then apply ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "1cf10399-d823-432a-9d21-b0e321bb5c6f"],
 " to the result, we recover the original value of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "92af1c43-b7d5-45b6-bd43-c4a06f4cb010"],
 "; that is,"
}], "Text",
 TextAlignment->Left,ExpressionUUID->"194a592b-f078-495d-9c16-7b2492282dd7"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "(", 
          RowBox[{
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "(", "y", ")"}], ")"}], "=", 
         RowBox[{"y", "."}]}]},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt3Qd4VEeWL/De3bfv7Qu7b3bWMzsDBmNg8NhgAzZ4bDAGEwQmg/GATMbk
YDDJNsaADRjWZDA2GUwUOYogQCAQEiJIiIwQyjnnLM7eUxdJLanDbam7b/ft
/+/7ykFqSdVS9z23qk6denXU1P5j/1Gn0834F+kf/Ud+9dH06SO/+eR30v98
+sWMCeO+GDP64y9mjhk3Zvp7o/5J+mCY1EL+Qaf7H9K/CQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQEXPnz+v1rKzsyk6Opru379P165do9OenrR3717a
uGEDrVq1ihYvXkzffvstfTltGo0bO5aGDR1KgwYNogGffEK9e/em7t26UZfO
nalD+/bU4cMPqzfp4507dRKP48d/0r+/+Hr+PmPHjKFpU6fSnDlzaNGiReLn
bZB+7u5du+jkyZN05coVCg4OpsjISMrIyKDS0tJq/QcAALA3jj9JSUl0584d
ETe3btlCP/74I03/8ksaOmQIdevalVq1akUNXnmF6vz5z07T6tWtS83fekvE
bY7VkydNou8XLKD169fTkcOHyd/fnyIiIqigoEDtPwEAADi51NRUCgwMpKNH
j9Lq1atFDO3frx/97d136ZX69VWPiWq3N5s1Izc3Nxo1apSIxdu3bydvb28K
DQ2lwsJCtf98AADgAEpKSujZs2d07tw5Wv/zz2KOtVePHvT6a6+pHsecudWt
U4daS+N5HhPPnTtXxOCrV69SXFyc2n9yAACwsrJ1xpSUFLEeyeuiHE/dunSx
27wuxx1TrUnjxmK+ts1771Gnjh2pW7du1KdXLzF+dh84kIYMHkwjR4wQY8eR
I0dWbtLHea6aH8drs/x1/PX8fdq2aUMtW7SgJn/5i5gTNtUHe8Vgfq69e/ak
WbNm0datW8nPz4/S0tKwHgwA4ER4zveSt7fI+xkxfDi93bKlXWJI09dfpw/b
tRPxbvy4cWIsx33g8dzRI0fEvOrt27fF3GpycjLl5ebaNbbk5eWJ+43w8HCx
tuxz+TIdP36cdu7cSevWrqUfvv+epkyeTO7u7iL3qkXz5lTv5Zft8rt75+23
acSwYbR82TIxvxAfH2+33wsAABhXXFwsYsbmTZtEvi6vn9pqHMb5QTyG5Pxg
zg3itduA69dFPnFRUZHavwqbKJsLuHv3roh/fM/AOV8cj/l+gueHbTUe5jE+
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
AIb9N/LUEac=
           "], {{0, 222}, {474, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSize->Automatic,
         ImageSizeRaw->{474, 222},
         PlotRange->{{0, 474}, {0, 222}}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0074a4f8-830c-4810-a410-594a30d19201"]], \
"Text",ExpressionUUID->"d6be4844-1c19-464f-b217-36b441a1d9d0"],

Cell[CellGroupData[{

Cell["One-to-One Functions", "Subsubsection",
 CellGroupingRules->{
  "SectionGrouping", 
   Inherited},ExpressionUUID->"40feb1a6-5496-4f73-8d3a-ad390de9d783"],

Cell[TextData[{
 "We have defined the inverse of a function, but said nothing about when it \
exists. To ensure that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "14293d12-4358-4c09-9dc6-8bfcdeb6c047"],
 " has an inverse function on a domain, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c6aaa4fa-c54f-4b95-8181-94f17d8fb4f2"],
 " must be ",
 StyleBox["one-to-one",
  FontSlant->"Italic"],
 " on that domain. This property means that every output of the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b701f811-4a01-42e9-86d5-50fee07ab6e0"],
 " corresponds to exactly one input. The one-to-one property is checked \
graphically by using the ",
 StyleBox["horizontal line test",
  FontSlant->"Italic"],
 ".",
 StyleBox[" ",
  FontWeight->"Bold"]
}], "Text",ExpressionUUID->"3b6cbe61-3939-4bde-8372-4e89f1fabcf6"],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["One-to-One Functions and the Horizontal Line Test",
  FontWeight->"Bold"],
 "\nA function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "728fd576-0152-446a-aebd-206e8a3351e4"],
 " is ",
 StyleBox["one-to-one",
  FontWeight->"Bold"],
 " on a domain ",
 StyleBox["D ",
  FontSlant->"Italic"],
 "if each value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "b0eeb59d-c566-4649-8548-2f7994e950c0"],
 " corresponds to exactly one value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "910b7c64-8c96-4899-90fc-6aced5c4b5eb"],
 " in ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "87786606-90bd-44fe-91df-addbe625b57a"],
 ". More precisely, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b6fd5109-bcff-4094-956b-20a94f3a08f6"],
 " is one-to-one on ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "6b3f2015-e6b7-482f-8bbf-22857f5e8810"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "1"], ")"}], "\[NotEqual]", 
    RowBox[{"f", "(", 
     SubscriptBox["x", "2"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "bde64782-a8c6-4951-8b0c-9620e76a5e85"],
 " whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "\[NotEqual]", 
    SubscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "0d4a0084-8335-4fc1-b872-092f3ccd41ad"],
 ", for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "9a6ac544-930e-4cf8-9ebb-222601cc6278"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"2", " "}]], TraditionalForm]],ExpressionUUID->
  "4b8fdf10-13d6-40d6-a173-7596c1aacb5d"],
 "in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "."}], TraditionalForm]],ExpressionUUID->
  "681509d3-78c9-4957-a985-82dacdca0c62"],
 " The ",
 StyleBox["horizontal line test ",
  FontWeight->"Bold"],
 "says that every horizontal line intersects the graph of a one-to-one \
function at most once (",
 StyleBox["Figure 1.49", "FigureFontText"],
 ")."
}], "Definition",
 CellTags->
  "DEFINITION One-to-One Functions and the Horizontal Line \
Test",ExpressionUUID->"0eb02578-a13b-4be0-819c-d1d3db10b296"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       TagBox[
        GridBox[{{
           FrameBox[
            TagBox[
             StyleBox[
              
              DynamicModuleBox[{$CellContext`yValue$$ = 3.9, Typeset`show$$ = 
                True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`yValue$$], 3.9, 
                    Subscript["\!\(TraditionalForm\`y\)", 1]}, -10, 10, 0.1}},
                 Typeset`size$$ = {
                 327., {109.41754150390625`, 116.58245849609375`}}, 
                Typeset`update$$ = 0, Typeset`initDone$$, 
                Typeset`skipInitDone$$ = False, $CellContext`yValue$33507$$ = 
                0}, 
               DynamicBox[
                Manipulate`ManipulateBoxes[
                1, StandardForm, "Variables" :> {$CellContext`yValue$$ = 3.9},
                  "ControllerVariables" :> {
                   
                   Hold[$CellContext`yValue$$, $CellContext`yValue$33507$$, 
                    0]}, "OtherVariables" :> {
                  Typeset`show$$, Typeset`bookmarkList$$, 
                   Typeset`bookmarkMode$$, Typeset`animator$$, 
                   Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                   Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                   Typeset`skipInitDone$$}, "Body" :> 
                 DynamicModule[{$CellContext`xValues, $CellContext`xVar}, \
$CellContext`xValues = Cases[
                    ReplaceAll[$CellContext`xVar, 
                    N[
                    Quiet[
                    
                    Solve[$CellContext`funcF49a[$CellContext`xVar] == \
$CellContext`yValue$$, $CellContext`xVar]]]], 
                    Blank[Real]]; Grid[{{
                    Framed[
                    Pane[
                    "One\[Hyphen]to\[Hyphen]one function: Each value of \
\!\(TraditionalForm\`y\) in the range corresponds to exactly one value of \
\!\(TraditionalForm\`x\).", {3.5 72, Automatic}, 
                    BaseStyle -> {
                    LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left, FontSize -> 13, 
                    "TR"}], $CellContext`bcFO]}, {
                    Show[{
                    Plot[
                    $CellContext`funcF49a[$CellContext`x], {$CellContext`x, \
-2, 4}, PlotStyle -> {Thick, Black}], 
                    Graphics[{Dashed, $CellContext`bcR, 
                    
                    Line[{{-2, $CellContext`yValue$$}, {
                    4, $CellContext`yValue$$}}], Black, 
                    Text[
                    Subscript["\!\(TraditionalForm\`y\)", 1], {
                    0, $CellContext`yValue$$}, {2, -1}], 
                    AbsolutePointSize[6], 
                    Table[{
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 0}], 
                    Text[
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], {
                    Part[$CellContext`xValues, $CellContext`i], 0}, {0, 
                    2}], $CellContext`bcR, Dashed, 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    
                    Part[$CellContext`xValues, $CellContext`i], \
$CellContext`yValue$$}}]}, {$CellContext`i, 1, 
                    Length[$CellContext`xValues]}]}]}, Ticks -> None, 
                    BaseStyle -> $CellContext`bcBSG, ImageSize -> 3 72]}}]], 
                 "Specifications" :> {{{$CellContext`yValue$$, 3.9, 
                    Subscript["\!\(TraditionalForm\`y\)", 1]}, -10, 10, 0.1, 
                    ControlType -> Slider, Appearance -> "Vertical", 
                    ImageSize -> Small}}, 
                 "Options" :> {
                  ControlPlacement -> Left, LabelStyle -> 11, Paneled -> 
                   False, Deployed -> True, AppearanceElements -> 
                   "ResetButton"}, "DefaultOptions" :> {}], 
                ImageSizeCache -> {402., {134., 142.}}, SingleEvaluation -> 
                True], Deinitialization :> None, DynamicModuleValues :> {}, 
               Initialization :> ({{$CellContext`funcF49a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 
                    2^$CellContext`x - 5, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                    Background -> GrayLevel[1]}, $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], 
                    Attributes[Subscript] = {NHoldRest}, $CellContext`i = 
                    1, $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}}; {$CellContext`funcF49a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 2^$CellContext`x - 5}}; 
                Typeset`initDone$$ = True), SynchronousInitialization -> True,
                UndoTrackedVariables :> {
                Typeset`show$$, Typeset`bookmarkMode$$}, 
               UnsavedVariables :> {Typeset`initDone$$}, 
               UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
              Deployed -> True, StripOnInput -> False], 
             Manipulate`InterpretManipulate[1]], FrameStyle -> {
              GrayLevel[0.95], 
              Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False], 
           FrameBox[
            TagBox[
             StyleBox[
              
              DynamicModuleBox[{$CellContext`yValue$$ = 3.9, Typeset`show$$ = 
                True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`yValue$$], 3.9, 
                    Subscript["\!\(TraditionalForm\`y\)", 1]}, -10, 10, 0.1}},
                 Typeset`size$$ = {
                 327., {109.41754150390625`, 116.58245849609375`}}, 
                Typeset`update$$ = 0, Typeset`initDone$$, 
                Typeset`skipInitDone$$ = False, $CellContext`yValue$33525$$ = 
                0}, 
               DynamicBox[
                Manipulate`ManipulateBoxes[
                1, StandardForm, "Variables" :> {$CellContext`yValue$$ = 3.9},
                  "ControllerVariables" :> {
                   
                   Hold[$CellContext`yValue$$, $CellContext`yValue$33525$$, 
                    0]}, "OtherVariables" :> {
                  Typeset`show$$, Typeset`bookmarkList$$, 
                   Typeset`bookmarkMode$$, Typeset`animator$$, 
                   Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                   Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                   Typeset`skipInitDone$$}, "Body" :> 
                 DynamicModule[{$CellContext`xValues, $CellContext`xVar}, \
$CellContext`xValues = Cases[
                    ReplaceAll[$CellContext`xVar, 
                    N[
                    
                    Solve[$CellContext`funcF49b[$CellContext`xVar] == \
$CellContext`yValue$$, $CellContext`xVar]]], 
                    Blank[Real]]; Grid[{{
                    Framed[
                    Pane[
                    "Not one\[Hyphen]to\[Hyphen]one function: Some values of \
\!\(TraditionalForm\`y\) correspond to more than one value of \
\!\(TraditionalForm\`x\).", {3.5 72, Automatic}, 
                    BaseStyle -> {
                    LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left, FontSize -> 13, 
                    "TR"}], $CellContext`bcFO]}, {
                    Show[{
                    Plot[
                    $CellContext`funcF49b[$CellContext`x], {$CellContext`x, \
-2, 4}, PlotStyle -> {Thick, Black}], 
                    Graphics[{Dashed, $CellContext`bcR, 
                    
                    Line[{{-2, $CellContext`yValue$$}, {
                    4, $CellContext`yValue$$}}], Black, 
                    Text[
                    Subscript["\!\(TraditionalForm\`y\)", 1], {
                    0, $CellContext`yValue$$}, {2, -1}], 
                    AbsolutePointSize[6], 
                    Table[{
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 0}], 
                    Text[
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], {
                    Part[$CellContext`xValues, $CellContext`i], 0}, {0, 
                    2}], $CellContext`bcR, Dashed, 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    
                    Part[$CellContext`xValues, $CellContext`i], \
$CellContext`yValue$$}}]}, {$CellContext`i, 1, 
                    Length[$CellContext`xValues]}]}]}, Ticks -> None, 
                    BaseStyle -> $CellContext`bcBSG, ImageSize -> 3 72]}}]], 
                 "Specifications" :> {{{$CellContext`yValue$$, 3.9, 
                    Subscript["\!\(TraditionalForm\`y\)", 1]}, -10, 10, 0.1, 
                    ControlType -> Slider, ImageSize -> Small, Appearance -> 
                    "Vertical"}}, 
                 "Options" :> {
                  ControlPlacement -> Left, LabelStyle -> 11, Paneled -> 
                   False, Deployed -> True, AppearanceElements -> 
                   "ResetButton"}, "DefaultOptions" :> {}], 
                ImageSizeCache -> {402., {134., 142.}}, SingleEvaluation -> 
                True], Deinitialization :> None, DynamicModuleValues :> {}, 
               Initialization :> ({{$CellContext`funcF49b[
                    Pattern[$CellContext`x, 
                    
                    Blank[]]] := (($CellContext`x + 1) ($CellContext`x - 
                    2)) ($CellContext`x - 3) + 2, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                    Background -> GrayLevel[1]}, $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], 
                    Attributes[Subscript] = {NHoldRest}, $CellContext`i = 
                    1, $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}}; {$CellContext`funcF49b[
                    Pattern[$CellContext`x, 
                    
                    Blank[]]] := (($CellContext`x + 1) ($CellContext`x - 
                    2)) ($CellContext`x - 3) + 2}}; 
                Typeset`initDone$$ = True), SynchronousInitialization -> True,
                UndoTrackedVariables :> {
                Typeset`show$$, Typeset`bookmarkMode$$}, 
               UnsavedVariables :> {Typeset`initDone$$}, 
               UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
              Deployed -> True, StripOnInput -> False], 
             Manipulate`InterpretManipulate[1]], FrameStyle -> {
              GrayLevel[0.95], 
              Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.49\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one \
functions",ExpressionUUID->"78fd9dc8-625c-456f-96db-06d8ed73620f"],

Cell[TextData[{
 "For example, in ",
 StyleBox["Figure 1.50", "FigureFontText"],
 ", some horizontal lines intersect the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "dc85599e-dd28-4965-a918-61b92cacb340"],
 " twice. Therefore, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ec963e0b-3673-4c9e-9d50-f3d487b47242"],
 " does not have an inverse function on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], "."}], 
   TraditionalForm]],ExpressionUUID->"f060086c-ef4c-430c-a3ca-f8e7365ca06a"],
 " However, if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7064632c-1e8d-4784-b8eb-4a2e5070039d"],
 " is restricted to the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "0"}], "]"}], " ", 
     RowBox[{"or", " ", "[", 
      RowBox[{"0", ",", "\[Infinity]"}], ")"}]}], ","}], TraditionalForm]],
  ExpressionUUID->"635e2fa6-3390-4682-92eb-568d578bfac5"],
 " then the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7348e517-9b81-465a-b82c-1d28b743021f"],
 " passes the horizontal line test and ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "51dbc5a1-3637-458d-8e41-b0d0ca38dbf7"],
 " is one-to-one on these intervals. "
}], "Text",ExpressionUUID->"8d7558ec-8637-4c2d-973b-924a3fc1d3ef"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`domain$$ = {-4, 
             4}, $CellContext`yValue$$ = 4, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold["domain"], Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`domain$$], {-4, 4}, ""}, {{-4, 4} -> 
                Pane["(-\[Infinity],\[Infinity])", {48, Automatic}, Alignment -> 
                  Center], {-4, 0} -> 
                Pane["(-\[Infinity],0]", {48, Automatic}, Alignment -> 
                  Center], {0, 4} -> 
                Pane["[0,\[Infinity])", {48, Automatic}, Alignment -> 
                  Center]}}, {{
                Hold[$CellContext`yValue$$], 4, 
                "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 0., 8, 
               0.1}}, Typeset`size$$ = {
             360., {244.143798828125, 251.856201171875}}, Typeset`update$$ = 
            0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`domain$33615$$ = 
            False, $CellContext`yValue$33616$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`domain$$ = {-4, 
                4}, $CellContext`yValue$$ = 4}, "ControllerVariables" :> {
               
               Hold[$CellContext`domain$$, $CellContext`domain$33615$$, 
                False], 
               Hold[$CellContext`yValue$$, $CellContext`yValue$33616$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
                 Framed[
                  Pane[
                   
                   Switch[$CellContext`domain$$, {-4, 4}, 
                    "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \
\(2\)]\) is not one\[Hyphen]to\[Hyphen]one on \!\(TraditionalForm\`\((\(-\
\[Infinity]\), \[Infinity])\)\)", {-4, 0}, 
                    "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \
\(2\)]\) is one\[Hyphen]to\[Hyphen]one on \!\(TraditionalForm\`\(\((\(-\
\[Infinity]\), 0\)\(]\)\)\)", {0, 4}, 
                    "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \
\(2\)]\) is one\[Hyphen]to\[Hyphen]one on \!\(TraditionalForm\`\(\([0, \
\[Infinity]\)\()\)\)\)"], {
                   Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO]}, {
                 
                 DynamicModule[{$CellContext`xValues, $CellContext`xVar}, \
$CellContext`xValues = Cases[
                    ReplaceAll[$CellContext`xVar, 
                    N[
                    Quiet[
                    
                    Solve[$CellContext`funcC1F50[$CellContext`xVar] == \
$CellContext`yValue$$, $CellContext`xVar]]]], 
                    Blank[Real]]; Show[{
                    Plot[
                    $CellContext`funcC1F50[$CellContext`x], {$CellContext`x, 
                    Part[$CellContext`domain$$, 1], 
                    Part[$CellContext`domain$$, 2]}, 
                    PlotStyle -> {Thick, Black}], 
                    Graphics[{$CellContext`bcB, 
                    AbsoluteThickness[1.5], 
                    
                    Line[{{-4, $CellContext`yValue$$}, {
                    4, $CellContext`yValue$$}}], 
                    Switch[$CellContext`domain$$, {-4, 4}, 
                    Table[{$CellContext`bcB, Dashed, 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    
                    Part[$CellContext`xValues, $CellContext`i], \
$CellContext`yValue$$}}], 
                    $CellContext`ClosedCircle[{
                    
                    Part[$CellContext`xValues, 
                    1], $CellContext`yValue$$}, $CellContext`bcR], 
                    $CellContext`ClosedCircle[{
                    
                    Part[$CellContext`xValues, 
                    2], $CellContext`yValue$$}, $CellContext`bcR]}, \
{$CellContext`i, 1, 
                    Length[$CellContext`xValues]}], {-4, 
                    0}, {$CellContext`bcB, Dashed, 
                    Line[{{
                    Part[$CellContext`xValues, 1], 0}, {
                    Part[$CellContext`xValues, 1], $CellContext`yValue$$}}], 
                    $CellContext`ClosedCircle[{0, 0}], 
                    $CellContext`ClosedCircle[{
                    
                    Part[$CellContext`xValues, 
                    1], $CellContext`yValue$$}, $CellContext`bcR]}, {0, 
                    4}, {$CellContext`bcB, Dashed, 
                    Line[{{
                    Part[$CellContext`xValues, 2], 0}, {
                    Part[$CellContext`xValues, 2], $CellContext`yValue$$}}], 
                    $CellContext`ClosedCircle[{0, 0}], 
                    $CellContext`ClosedCircle[{
                    
                    Part[$CellContext`xValues, 
                    2], $CellContext`yValue$$}, $CellContext`bcR]}], Black, 
                    If[$CellContext`domain$$ == {-4, 4}, 
                    Text[
                    Framed[
                    Pane[
                    Style[
                    "\!\(TraditionalForm\`f\) fails the horizontal line \
test.", Smaller], {60, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {-4, 0.2}, {-1, -1}], Black]}]}, 
                    Ticks -> {
                    Range[-4, 4], 
                    Range[0, 8]}, BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
                    Arrowheads[{0, 0.05}], ImageSize -> 4 72, 
                    PlotRange -> {-1, 8.5}, AspectRatio -> Automatic, 
                    AxesLabel -> {
                    "\!\(TraditionalForm\`x\)", 
                    "\!\(TraditionalForm\`y\)"}]]}}, BaseStyle -> "TR", 
               Alignment -> Top], 
             "Specifications" :> {
              "domain", {{$CellContext`domain$$, {-4, 4}, ""}, {{-4, 4} -> 
                 Pane["(-\[Infinity],\[Infinity])", {48, Automatic}, 
                   Alignment -> Center], {-4, 0} -> 
                 Pane["(-\[Infinity],0]", {48, Automatic}, Alignment -> 
                   Center], {0, 4} -> 
                 Pane["[0,\[Infinity])", {48, Automatic}, Alignment -> 
                   Center]}, ControlType -> SetterBar, Appearance -> 
                "Vertical"}, 
               Delimiter, {{$CellContext`yValue$$, 4, 
                 "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 0., 8, 
                0.1, ControlType -> Slider, ImageSize -> Small, Appearance -> 
                "Vertical"}}, 
             "Options" :> {
              Alignment -> Center, ControlPlacement -> Left, LabelStyle -> 11,
                Paneled -> False, Deployed -> True, AppearanceElements -> 
               "ResetButton"}, "DefaultOptions" :> {}], 
            ImageSizeCache -> {484., {269., 277.}}, SingleEvaluation -> True],
            Deinitialization :> None, DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`funcC1F50[
                  Pattern[$CellContext`x, 
                   Blank[]]] := $CellContext`x^2, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`i = 
                1, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}, 
                Attributes[PlotRange] = {
                 ReadProtected}}; {$CellContext`funcC1F50[
                  Pattern[$CellContext`x, 
                   Blank[]]] := $CellContext`x^2}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.50\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.50  \[LightBulb]: Restricted \
domain",ExpressionUUID->"0600aa21-4aa5-4a8d-9561-a8a849de22b2"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 1\t", "ExampleFont"],
 "One-to-one functions"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 1 One\[Hyphen]to\[Hyphen]one \
functions",ExpressionUUID->"4575c607-8d3d-4e39-b39d-871cfc86043a"],

Cell[TextData[{
 "Determine the (largest possible) intervals on which the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox["x", "2"]}], "-", 
     SuperscriptBox["x", "4"]}]}], TraditionalForm]],ExpressionUUID->
  "8f4c8915-93ca-4c11-923d-8f9f4a71671d"],
 " (",
 StyleBox["Figure 1.51", "FigureFontText"],
 ") is one-to-one."
}], "Text",ExpressionUUID->"0b01a7c5-39e8-4e64-ad52-c0bfd7d82268"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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

      "], {{0, 694}, {704, 0}}, {0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {704, 694}, PlotRange -> {{0, 704}, {0, 694}}, ImageSize -> 
    252.],StyleBox["\"Figure 1.51\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.51: Example \
1",ExpressionUUID->"f302fa72-0b28-475d-bdbc-6c545ff73a1a"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"3a5daa15-cb6d-4959-adc2-8c846fc134fe"],

Cell[TextData[{
 "The function is not one-to-one on the entire real line because it fails the \
horizontal line test. However, on the intervals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], ",", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "]"}], ",", 
    RowBox[{"[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", " ", 
    RowBox[{"and", " ", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"b5b39fee-d91b-4977-945e-31ed45451ce2"],
 ", ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "25293d19-7615-4726-9de9-53b7a24797f0"],
 " is one-to-one. The function is also one-to-one on any subinterval of these \
four intervals."
}], "Text",ExpressionUUID->"15b99133-11fd-4a92-bcba-b42a41792e2b"],

Cell[TextData[{
 "Related Exercises ",
 "5\[Dash]6",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"858d2553-7ea1-47ab-8444-329edcab6889"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Existence of Inverse Functions", "Subsubsection",
 CellGroupingRules->{
  "SectionGrouping", 
   Inherited},ExpressionUUID->"b2a14d6d-235c-40cd-8af3-2e9c5bcc27b8"],

Cell[TextData[{
 StyleBox["Figure 1.52a", "FigureFontText"],
 " illustrates the actions of a one-to-one function",
 StyleBox[" ", "FigureFontText",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "26fd03c2-37d5-4e2b-96a1-853370de9696"],
 " and its inverse ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "9c735258-b1c8-4a45-b977-c203a97c244f"],
 ". We see that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2f718ecb-b7a5-4da4-b537-7171caa7c63b"],
 " maps a value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b8eeafc6-4561-4a6d-ad88-0fc12186ace0"],
 " to a unique value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "."}], TraditionalForm]],ExpressionUUID->
  "62aeef1c-d1d7-426d-bc49-268396a028af"],
 " In turn, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "83b4687d-f1eb-4d30-ae5d-439545509130"],
 " maps that value of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "48c66431-6813-4d8b-959e-44f87c17fbfe"],
 " back to the original value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "."}], TraditionalForm]],ExpressionUUID->
  "37ab0f05-a4d4-4daf-b5f7-27eaa67e7ed1"],
 " This procedure cannot be carried out if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "92c2c9e3-6fa8-4811-9be7-0a334ca5b5c0"],
 " is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " one-to-one",
 StyleBox[" (",
  FontColor->GrayLevel[0]],
 StyleBox["Figure 1.52b", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"d03e5858-e839-4a46-8861-a76b39ad09e7"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       TagBox[
        GridBox[{{
           TemplateBox[{
             FrameBox[
              TagBox[
               StyleBox[
                
                DynamicModuleBox[{$CellContext`xValue$$ = 3, Typeset`show$$ = 
                  True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                  "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                  Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`xValue$$], 3, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0.1,
                     6, 0.1}}, Typeset`size$$ = {315., {157., 165.}}, 
                  Typeset`update$$ = 0, Typeset`initDone$$, 
                  Typeset`skipInitDone$$ = False, $CellContext`xValue$33722$$ = 
                  0}, 
                 DynamicBox[
                  Manipulate`ManipulateBoxes[
                  1, StandardForm, "Variables" :> {$CellContext`xValue$$ = 3},
                    "ControllerVariables" :> {
                    
                    Hold[$CellContext`xValue$$, $CellContext`xValue$33722$$, 
                    0]}, "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Show[{
                    Plot[
                    $CellContext`funcF52a[$CellContext`x], {$CellContext`x, 0,
                     6}, PlotStyle -> {Thick, Black}], 
                    Graphics[{Black, 
                    Text["\!\(TraditionalForm\`y = f(x)\)", {0, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}, {1.5, -1}], 
                    AbsolutePointSize[6], 
                    Text[
                    "\!\(TraditionalForm\`x = \*SuperscriptBox[\(f\), \
\(-1\)](y)\)", {$CellContext`xValue$$, 0}, {0, 1.5}], 
                    AbsoluteThickness[1.2], 
                    Arrowheads[0.05], $CellContext`bcR, 
                    Arrow[{{$CellContext`xValue$$, 0}, {$CellContext`xValue$$, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}, {0, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}}], 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f\\ maps\\ x\\ to\\ y\)", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {0, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}, {
                    0, -2.5}], $CellContext`bcB, 
                    
                    Arrow[{{
                    0, $CellContext`funcF52a[$CellContext`xValue$$] + 
                    0.1}, {$CellContext`xValue$$ + 
                    0.1, $CellContext`funcF52a[$CellContext`xValue$$] + 
                    0.1}, {$CellContext`xValue$$ + 0.1, 0}}], 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SuperscriptBox[\(f\), \(-1\)]\\ \
maps\\ y\\ to\\ x\)", {Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], \
{$CellContext`xValue$$, 0}, {0, 2.5}], Black, 
                    Point[{$CellContext`xValue$$, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}], 
                    Text[
                    "\!\(TraditionalForm\`\((x, y)\)\)", \
{$CellContext`xValue$$, 
                    $CellContext`funcF52a[$CellContext`xValue$$]}, {
                    0.5, -2.5}]}]}, Ticks -> None, 
                    BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
                    Arrowheads[0.05], 
                    AxesLabel -> {
                    "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
                    AxesOrigin -> {0, 0}, AspectRatio -> 1, 
                    PlotRange -> {{-2.5, 7}, {-2.5, 5.5}}, ImageSize -> 
                    3.5 72, Method -> {"AxesInFront" -> False}], 
                   "Specifications" :> {{{$CellContext`xValue$$, 3, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0.1,
                     6, 0.1, ControlType -> Slider, ImageSize -> Small}}, 
                   "Options" :> {
                    ControlPlacement -> Top, LabelStyle -> 11, Paneled -> 
                    False, Deployed -> True, AppearanceElements -> 
                    "ResetButton"}, "DefaultOptions" :> {}], 
                  ImageSizeCache -> {341., {196., 204.}}, SingleEvaluation -> 
                  True], Deinitialization :> None, DynamicModuleValues :> {}, 
                 Initialization :> ({{$CellContext`funcF52a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 
                    1.5 ArcTan[$CellContext`x - 3] + 2, $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                    BaseStyle -> {
                    "Text", LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                    Automatic, Hyphenation -> True, TextAlignment -> 
                    Left}, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                    Background -> GrayLevel[1]}, $CellContext`bcB = 
                    RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}, 
                    Attributes[PlotRange] = {
                    ReadProtected}}; {$CellContext`funcF52a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 1.5 ArcTan[$CellContext`x - 3] + 2}}; 
                  Typeset`initDone$$ = True), SynchronousInitialization -> 
                 True, UndoTrackedVariables :> {
                  Typeset`show$$, Typeset`bookmarkMode$$}, 
                 UnsavedVariables :> {Typeset`initDone$$}, 
                 UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
                Deployed -> True, StripOnInput -> False], 
               Manipulate`InterpretManipulate[1]], FrameStyle -> {
                GrayLevel[0.95], 
                Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False], 
             "\"(a)\""}, "Labeled", DisplayFunction -> (GridBox[{{
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}, {
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]& ), 
            InterpretationFunction -> (RowBox[{"Labeled", "[", 
               RowBox[{#, ",", #2}], "]"}]& )], 
           TemplateBox[{
             FrameBox[
              TagBox[
               StyleBox[
                
                DynamicModuleBox[{$CellContext`xValue$$ = 2.5, Typeset`show$$ = 
                  True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                  "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                  Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`xValue$$], 2.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4, 
                    4, 0.1}}, Typeset`size$$ = {315., {157., 165.}}, 
                  Typeset`update$$ = 0, Typeset`initDone$$, 
                  Typeset`skipInitDone$$ = False, $CellContext`xValue$33741$$ = 
                  0}, 
                 DynamicBox[
                  Manipulate`ManipulateBoxes[
                  1, StandardForm, 
                   "Variables" :> {$CellContext`xValue$$ = 2.5}, 
                   "ControllerVariables" :> {
                    
                    Hold[$CellContext`xValue$$, $CellContext`xValue$33741$$, 
                    0]}, "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Show[{
                    Plot[
                    $CellContext`funcF52b[$CellContext`x], {$CellContext`x, \
-4, 4}, PlotStyle -> {Thick, Black}], 
                    Graphics[{Black, 
                    Text["\!\(TraditionalForm\`y = f(x)\)", {0, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}, {
                    1.5, -1.25}], 
                    AbsolutePointSize[6], 
                    Text[
                    "\!\(TraditionalForm\`x = \*SuperscriptBox[\(f\), \
\(-1\)](y)\) ?", {0, -0.5}, {1.2, 0}], 
                    AbsoluteThickness[1.2], 
                    Arrowheads[0.05], $CellContext`bcR, 
                    Arrow[{{$CellContext`xValue$$, 0}, {$CellContext`xValue$$, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}, {0, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}}], Black, 
                    Text[
                    Framed[
                    Pane[
                    "Two values of \!\(TraditionalForm\`x\) correspond to \
\!\(TraditionalForm\`y\)", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {0, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}, {
                    0, -2.5}], $CellContext`bcB, 
                    
                    Arrow[{{
                    0, $CellContext`funcF52b[$CellContext`xValue$$] + 
                    0.05}, {$CellContext`xValue$$ + 
                    0.1, $CellContext`funcF52b[$CellContext`xValue$$] + 
                    0.05}, {$CellContext`xValue$$ + 0.1, 0}}], 
                    
                    Arrow[{{
                    0, $CellContext`funcF52b[$CellContext`xValue$$] + 
                    0.05}, {-$CellContext`xValue$$ - 
                    0.1, $CellContext`funcF52b[$CellContext`xValue$$] + 
                    0.05}, {-$CellContext`xValue$$ - 0.1, 0}}], 
                    Text["?", {$CellContext`xValue$$ + 0.05, 0}, {0, 1}], 
                    Text["?", {-$CellContext`xValue$$ - 0.1, 0}, {0, 1}], 
                    Black, 
                    Point[{$CellContext`xValue$$, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}], 
                    Point[{0, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}], 
                    Text[
                    "\!\(TraditionalForm\`\((x, y)\)\)", \
{$CellContext`xValue$$, 
                    $CellContext`funcF52b[$CellContext`xValue$$]}, {
                    0.5, -2.5}]}]}, Ticks -> None, 
                    BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
                    Arrowheads[0.04], AxesStyle -> Arrowheads[{0, 0.04}], 
                    AxesLabel -> {
                    "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
                    AxesOrigin -> {0, 0}, PlotRange -> {{-5, 5}, {-1, 3}}, 
                    AspectRatio -> 1, ImageSize -> 3.5 72, 
                    Method -> {"AxesInFront" -> False}], 
                   "Specifications" :> {{{$CellContext`xValue$$, 2.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4, 
                    4, 0.1, ControlType -> Slider, ImageSize -> Small}}, 
                   "Options" :> {
                    ControlPlacement -> Top, LabelStyle -> 11, Paneled -> 
                    False, Deployed -> True, AppearanceElements -> 
                    "ResetButton"}, "DefaultOptions" :> {}], 
                  ImageSizeCache -> {341., {196., 204.}}, SingleEvaluation -> 
                  True], Deinitialization :> None, DynamicModuleValues :> {}, 
                 Initialization :> ({{$CellContext`funcF52b[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 1 - Cos[$CellContext`x], $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                    BaseStyle -> {
                    "Text", LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                    Automatic, Hyphenation -> True, TextAlignment -> 
                    Left}, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                    Background -> GrayLevel[1]}, $CellContext`bcB = 
                    RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}, 
                    Attributes[PlotRange] = {
                    ReadProtected}}; {$CellContext`funcF52b[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 1 - Cos[$CellContext`x]}}; 
                  Typeset`initDone$$ = True), SynchronousInitialization -> 
                 True, UndoTrackedVariables :> {
                  Typeset`show$$, Typeset`bookmarkMode$$}, 
                 UnsavedVariables :> {Typeset`initDone$$}, 
                 UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
                Deployed -> True, StripOnInput -> False], 
               Manipulate`InterpretManipulate[1]], FrameStyle -> {
                GrayLevel[0.95], 
                Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False], 
             "\"(b)\""}, "Labeled", DisplayFunction -> (GridBox[{{
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}, {
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]& ), 
            InterpretationFunction -> (RowBox[{"Labeled", "[", 
               RowBox[{#, ",", #2}], "]"}]& )]}}, AutoDelete -> False, 
         BaseStyle -> {"Text", "TR"}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.52\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.52  \[LightBulb]: Existence of inverse \
functions",ExpressionUUID->"ad05f02f-7db6-46da-8d26-216d1721ee24"],

Cell[TextData[{
 StyleBox["THEOREM 1.1", "TheoremFont"],
 "\t",
 StyleBox["Existence of Inverse Functions",
  FontWeight->"Bold"],
 "\n",
 "Let ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2038c853-b4d7-4460-970b-2eb349245605"],
 " be a one-to-one function on a domain ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "fd0dcf40-15c8-493d-993f-8c531272d765"],
 " with a range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "."}], TraditionalForm]],ExpressionUUID->
  "4ba14417-19b9-417c-a655-b01e46eb1ddf"],
 " Then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d5e665ba-c1c2-405e-9fac-0a3f491fc288"],
 " has a unique inverse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], " "}], TraditionalForm]],ExpressionUUID->
  "eeb30729-3df4-4073-a164-daf3dbb96ceb"],
 "with domain ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "11039c17-1a17-4fa1-bb17-116e4139106f"],
 " and range ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "66d9a2fc-191d-4f62-be93-90f65085ef48"],
 " such that \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             RowBox[{"-", "1"}]], "(", 
            RowBox[{"f", "(", "x", ")"}], ")"}], "=", 
           RowBox[{
            RowBox[{"x", "   ", "and", "   ", 
             RowBox[{"f", "(", 
              RowBox[{
               SuperscriptBox["f", 
                RowBox[{"-", "1"}]], "(", "y", ")"}], ")"}]}], "=", "y"}]}], 
          ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "ccc660d8-673a-46cb-a37a-91c52876a2d1"],
 "\nwhere ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4af9cccb-8394-4968-b732-f24f60a33cd1"],
 " is in ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "64dab550-2919-4f85-90af-a47f26eff385"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "f2b170fd-f657-4d90-b897-dcfee32fefe6"],
 " is in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "."}], TraditionalForm]],ExpressionUUID->
  "44c5c158-b0fa-4cfb-89e9-b891e35c811b"]
}], "Theorem",
 CellTags->
  "THEOREM 1.1 Existence of Inverse \
Functions",ExpressionUUID->"df67695f-3b7c-426b-89e5-deb9dcbf719a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"8d8874b5-6442-4339-909b-d1763a31b9c4"],

Cell["\<\
The statement that a one-to-one function has an inverse may be plausible \
based on its graph. However, the proof of this theorem is fairly technical \
and is omitted.\
\>", "Callout",ExpressionUUID->"cbff0b6a-4176-481a-ace0-60694a106938"]
}, Closed]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "4"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"77b94c9b-b4a6-4d0d-b2d6-952deb969dd2"],
 "  The function that gives degrees Fahrenheit in terms of degrees Celsius is \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{
      FractionBox["9", "5"], "C"}], "+", "32."}]}], TraditionalForm]],
  ExpressionUUID->"98dbffb4-c198-444f-8492-fe636b4c5943"],
 " Why does this function have an inverse?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 4",ExpressionUUID->"6ac9990d-0de8-4aef-ae09-9dd53085ec15"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"d0711f77-7050-47b6-87cc-3b6307f132cb"],

Cell["\<\
For every Fahrenheit temperature, there is exactly one Celsius temperature, \
and vice versa. The given relation is also a linear function. It is \
one-to-one, so it has an inverse function.\
\>", "QuickCheckAnswer",ExpressionUUID->"25664eef-68e9-4d26-9679-\
808c5e7b927c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 2\t", "ExampleFont"],
 "Does an inverse exist?"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 2 Does an inverse \
exist?",ExpressionUUID->"c20f154a-5fd8-4b87-baa6-7b188783aff3"],

Cell[TextData[{
 "Determine the largest intervals on which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"753a52cd-01fd-4d0e-acbc-204e2527ba9b"],
 " has an inverse function."
}], "Text",ExpressionUUID->"0cb01569-bb38-4e3f-9311-59f08c3c043b"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"8b5d4d33-e95f-4641-8b12-0352d0a56ffc"],

Cell[TextData[{
 "On the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"55197987-2ae8-4839-b6c9-8fa118906c0b"],
 " the function does not pass the horizontal line test and is not one-to-one \
(",
 StyleBox["Figure 1.53", "FigureFontText"],
 "). However, if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a92a1e66-7c2b-42d7-8aed-b19ead782b25"],
 " is restricted to the intervals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "0"}], "]"}], " ", 
    RowBox[{"or", " ", "[", 
     RowBox[{"0", ",", "\[Infinity]"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"311bf838-8ad9-4cc5-a678-1878a5191191"],
 ", then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "29d1dc84-f61b-4eeb-ad01-a41f14f5f7c5"],
 " is one-to-one and an inverse exists."
}], "Text",ExpressionUUID->"b035d5d6-1e38-4d8a-ba57-80e1a8c433df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
11k+2XUe4+cYJtJV//VpZma1kN/MFcNHB9rMd1QijKmsnHJvQ9YpwTOJX5c9
4DNzrnVy8uU7zHfmTw8l15Ur8ERsJhsnKhHMfOEiQktVl1lvlU/lhPun+FcX
Dw5zP7W7d51/uCqG8XMehosspy6ycu6iYl8gF1nu5OcYpm+3OOXJd0vtxwUt
CJUrhjFEujbeOjUxIlKpGxfHisnfKvFWJR685k8TnR97n19mBtWpxhf6Pj+y
1hyXZyn6mviFm9d3mZuSk5x4/xT/6vJ4alfvOv9wVQzj5zwMF1lOXWTFHLjO
mvyp3b3rfMvHMYzZ81j4aWiyGCaem+3YucYcwp84ac6omjxYOrtfviGNt99t
DRNl+VIn4vh0AQmFn4jNKCufKE68qEOtO8TJa9u2prRgXnxn57FTyQht4v1T
7KvL66mTr9GFu85PXBXD+DkPw0VWURdZZi9J2mYt/LD9OiuPp3b1rvMtH8cw
PWu/mzjfFRyp5orhm94+qHw9aI6kSzzXpCueWPpDJyzkE7H6zGQquPgTcTLf
OFll1/Ce70+Z/sqxHMc3azYyr77mgl5dXk/t4l038R28x1UxjI/zMOW5yFIT
MoG5yMq5i4p6gVxkuZZvY5joeTk/gPF2mjitN4GJY5jwU+KAk5gLOs546/bt
lt2gud+6aQ2T98+eQ04O/DceUO0oL/R9rvTP5pjJXJ70U1nNySn7J638vpRX
Nyk/7DoPcFUM4+M8DBdZjl1kxWy/zuIiy7V8G8PEV12fmdbnmK+J3//xDF5m
3HvxPx5JJBVve2HyIvCjL6SSkLc1ZBmPoMwaYXmuQt/n8Tdw6q1e/W+Zl3v9
W1ZmCUVyU+pvs7zeol9dPry+67zAVTGMb/MwXGTFHL1S0HGd5ZNd5zG+jWHM
uQorluZZzKZQ3v9pkwPE32mZ1zIihpmpVp/mpqxUK37l5qb06aDlBVqWR8sx
m4Q6h4BySDSOacqiG3JNlpOjF0dHR4eOhOW6KkVkI4/+5hb5mOITt/2z+O6N
dNXducz4KBX96vLh/V3nfq6KYXybh3H3RZb5zs99pZD+XO65UpjsOqvIFzgp
H+w6r/FrDDOy+5HkG3iy644M0YE2M8S95rLHLCFQshfyhzu6U0P5oufNOYXy
fcPHhySYy2eoq4CZK66K917aR8CcQEn89O591uPe0RdmJjPG4hdTL1kZvzkz
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
JiIm+a3J5Cz7V87XGQ9YwIuNR1/qyU58EIrrkXR2D+dl+K2FfztpDFPEM8pY
JXXRIcXLINOPG8mpOI2O3S3NW7ZsnmiTK+vJnWb+obPEV1Kef6ainj0HV8Uw
vs3DkCh2YaI45kCumESx3YniNP6OYWLxc+u2J++TdVA33Ve389BHqai4xDNs
z3azQqxsMUzqfJ3tAfN/sdGBNrNtifNjZeWUexsyi+sm5eAezotTMYx6UWl+
uEZ2P2Ic+qyfNfMqQ1Y55tlu8w+dpW1J+fyZinv2HFwVw/g2D0Oi2IWJ4pgT
uWISxTYnitP4OIYRe9LsizSL2XKlMgo835nnDrEt6hjKcnlbxhim4Bcbi8n+
a/kragmZuNKf9FK9yCf1VgyjPHKy8j9xiE4fdnFkbWVygEBaKWMO+cQwhkn/
TEU9ew6uimF8m4eJI1Gc/cXqShTHnDhGkSi2OVGcxrcxTPT8/ge+kejLW7pZ
ie4mTmUU+naKnztyFFaVL4Yp4sXGiXeLWqaVeMfOqMo6NDJdGfZwXpyLYSzL
+85tORk7u+db041nSV/3JP4s8s2Q166LyzeGmfTPVNSz5+CqGMbHeRiJRHHW
++tJFMe8FMMENlGcxq8xjKzcnpmln9G+M+zZ/eYYN2e6m/M9RBT6YsUbr+nt
g6l7RQflJA8zk/m90IO7J21nOfZwXhyMYczaOWOffH+j3EtZCs+SFxqTdeka
aRxzuoZJDxH5/pmKevYcXBXD+DgPQ6LYdYnimKdimKAmitP4NIYZTkXaSzdb
r5rtO8MmU7UzJyr7L9MhouAXGw0/Jd5O6nSactoBc8hhlmq9jJaUYw/nxckY
JpY+s1P2rmFlzvbKinlZ3gnKQ5lXxJPHMHn+mYp69hxcFcP4Ng9Dojj3i40r
d6I45q0YJqCJ4jR+jWHMSPuayx5TzwLRSF/916clUlslHiLin5GZ5iXwr3am
Xyqqy5HkPRYvd8lc6uOQOigV/mLjB7fMt9PF/3gkkVZKziI+sbLs4bw4G8OI
mMH8bE6c6EiVMhr3qf63zMuNxIwNyt908kNEvn+mYp49B1fFMH7Nw5AoznF/
bYnimMdimGAmitP4NYaRWQL5+V3Y/LH8rtjncmLkxOc6vj+NQV7y6JgqEZ+X
Ppu0WgSuRiPJKQgSP3pwtzqcrePpReb4+ktv+l2+M72v/e7MiS75lYEGyseh
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
3fdh0NAs94qdtRh6DZ0aJnFO1TCZzGEcCoqLtZpYXIFqRK2Ljv0TnqMv2oLz
slnDFCvnR9NLBPxuL52yl6RXTWWPN4fxbjdmmpvjDcdsTBH2t4X8iZ0v7Hx5
51My9okcFC8Obfv6ysKKp/vX/7XddSp8D/NqHawcxr9H9r/U9aI5JPbejItT
NUw2cxhngmL/u8KGCfEEqpG1Kjr23ZgyxeEkYpfZGqY8Iy5sIrpdMbS20VWZ
wdJQJW9uN9buLZB0aixZh+tT9oOXZsQ9dypqwWDveLt+NYGvhqy2+194B2vm
S5udS9v2MEkvNk7VMNnMYdwJiosRos5YAtU6xR8d2469ysomKJTZGqa4koLa
24f5bz5i6opS57Aufqxc2F0/wb68S5LJLaPOGPEuJ5mUdXRZZ1bg9VHt9k6y
m7ZEv+RdWixQvm13JWwpXLJ9eI3VT2EdbPksYKO2hO8JnmFO1TDZzGGKrgTF
/neFX65tMFBtKLytQ33pa/l7++43d/j7YeJc7bJcwxRL58o3f3evvfnIHdse
fO7ZZ5/4afn66ep80tzP3X/L1HbvtmLDl65JY9z/3OP+P2/3JpVJXRRleGiu
8Na+3YCzlk7ZWT0NhLGf9j9vL+t39R6QgZV8zyYo3nbgXI1OI7yDlWqz5nJL
NCDJGmYun89VtX//PvNPPDk5Wf2Vhhx8AocdQw3jTFAcacpZA4Fqw+Fta5jB
6fqrXcS52mW8hvEsnB2VCsTWJ1LJPNnVvz5+lBqmu7u7s/Mfb+3dZZ9lHNE1
lpcaRgr1NX8lz1K6R4q4l06Zy99tHW8qPdXKl/PAIw91dHTI19jABWX5Au39
du31a3OflxrCO1j5mZ2/+aUcT9QfhWimZhcO7OqUajOB31UZU/hnNax/2LCi
+svsi3ds397qYy7Gdc9HR4LiaNPm6w5UmwhvY2fnJZZWePn3ASbO1c+1GqZF
R2JCwnjj6Lp6+MLoX1Rfil35sF6TN6sk6vr4KyFt4crl5SX5V/jii8i3kqzV
wRL/xm56+vzuv+/ev39fAv+vmjWMv4xxp4aZnJyUzmpwcLDZH+RCUBx56V99
gWpz4W3MyjnS+kmJxLnaDR8ddqqGuTj3WdoH0irSWMzASm+pb4aHbdvfS26C
ZTkeZ211YnK5XE9PTzI1zPLy8nxV0kGZs8/MzMzCwkL1F4vPP0/iVjjyFcVY
5qUcFNezfUFdgWqT4W2MTN+7apudMuJc7Q4OHpL+anEx/bVm0iFIC5UxYNoH
0jJe7mouyGqs9m+Mvdy+bkZcy5U32KGGScyJEyfkBC3FQ9oHUmLm9EqruXYt
aFVvSqSgkq9IHnH9wDSD4npqmLoC1SbD29jM9G3dFDATxo84V6/X9u55dXdP
MoOX6oaGj0ifIP1n2gfSQoXrs32//lq7ws2u53oflU7gq3fvGL7U8lPJzYv5
qU8+ldNE/j8fvfNMejfN3KgGDw1KnyDFQ9oHUmLXVjtVw8i5u8czl8+nfSxN
89UwTW1PFyKF8NZHutzue24tzdcNXPwF5ebn56VskP7Khf7h9OQZOZJkEuw0
FS6NPHGXmd8burGbg6bfeLKrP3+99QfsXUa3V6jtLIhqd3NDfKQrMH1CMgt8
arJrq13oo/ykp5IvanxiPO0DaZpvE/64dnex0glvy74s3DRToNM6ALRaLpeT
zqq39/W0D6RECiozJSYLQ5taPuzfeeeWzV1j2f+k9ZJu5+LcZzPryB+mP2dr
A5iePt/T09PVe6BYcGI/FjdzmGL5ilsWxlxLp+yet20/+3Pf5WsLZ0enZhfk
uckWl2R4G+jD5++TXx45AClguFSUSYeH3pb+yp3LN9IhSOd57uRhp/bkbAUu
v8JNBwcPHdjV2T/xsSM1jLM5jAy1zJQY9csQyjc+sJmnKRrlP4LvLBBdYuHt
euUFX20db3IJKavm5+elgOnu7nYkNC56Y0A5HiljCtdnOcUDCZOuQFqf1DDu
nJedzWHEwMDAq7t7hoaPpH0gzbp5MR+YfCoeS84e2bpp1ZY7yJ7j7x6XQYQM
u9I+kArppszqpH3HxqlhgISZOR5OnZSdzWGK5Q2N3Zk7BGwcdsDl2lpmOZ63
9u7q6elx7cCAbJNqQQoYaXou7BZluZzDFL39tcxeOnVs2wigOSbukKbnVAhj
mUXWr+3d41RfCmTY1Cefmo3RPjg9kfaxrOJyDiMWFxelp5K+1KnwCsi2kZFj
Zjaam0WCjGhMiSXP//3fcu03AGjCzMyMnIjNVSTXSgXHc5hi+dYM0l8df/d4
2scCZJ/0CWberMsXa6S46u19XboFed4IS62BtEg/YJIENy+IOJ7DGOMT46aM
GT467PJxAqpJ45KRwqu7ew7s6nRnPXUYKV2kgJGjlXLLtXwbyADpEMwmJzKo
OTh46PKyi/sgu5/DGOZO1mbHGIZdQOzm5+cHBgbM7lXuFzDGhS9umN0q5Jjl
P5j8D8Rlevq8nG3NaXdo+Ei8d+qJkYocxjAXlcwux9LHulkTAuosLy+/P/q+
iTqlHsjlcmkfUVRfFm6aoaKME82EQ6lk5PjpHIDGyFjmg9MTZr6ZnGpf27vH
8ZBTSw5jzOXz5i66pjgcGTkmIy8VRw64RhqONB+TFZuhgXRc7mxdVRc5bLNY
yXQO5rNI/yC12fjE+OTk5OnJMzx48Ah8SBuRfmD46LAJXuxDWtDSkuvDAUU5
jCXjLFMlmo5XCsWBgQH5J5DPIhVj6r8PPHg4+5CzuemvDg+9bbZ/sc+Oj7ai
kDGOfLTe3tfNnGT/p+OZZ54jPsvpVU6mCwsLaTfoSHTlMJYc7fT0eemHTblo
dkR34V+fZ54VPUurkUYkTSlje95enPtMRjpmaCkfUMY48nxw8BDPPPO8/nlo
+Ii0FGkv0hWoS2I15jB+cthTswsyhDx38nDqvwk88+z4s5zNpb8aGTk2PjG+
cHZ0qVDIWPUCYENRmsP4mU6YrhioC00GgHbacxgAALAxZSCHAQAAGxA5DAAA
0IgcBgAAaEQOAwAANCKHAQAAGpHDAAAAjchhAACARuQwAABAI3IYAACgETkM
AADQiBwGAABoRA4DAAA0IocBAAAakcMAAACNyGEAAIBG5DAAAEAjchgAAKAR
OQwAANCIHAYAAGhEDgMAADQihwEAABqRwwAAAI3IYQAAgEbkMAAAQCNyGAAA
oBE5DAAA0IgcBgAAaEQOAwAANCKHAQAAGpHDAAAAjchhAACARuQwAABAI3IY
AACgETkMAADQiBwGAABoRA4DAAA0IocBAAAakcMAAACNyGEAAIBG5DAAAEAj
chgAAKAROQwAANCIHAYAAGhEDgMAADQihwEAABqRwwAAAI3IYQAAgEbkMAAA
QCNyGAAAoBE5DAAA0IgcBgAAaEQOAwAANCKHAQAAGpHDAAAAjchhAACARuQw
AABAI3IYAACgETkMAADQiBwGAABoRA4DAAA0IocBAAAakcMAAACNyGEAAIBG
5DAAAEAjchgAAKAROQwAANCIHAYAAGhEDgMAADQihwEAABqRwwAAAI3IYQAA
gEbkMAAAQCNyGAAAoBE5DAAA0IgcBgAAaEQOAwAANCKHAQAAGpHDAAAAjchh
AACARuQwAABAI3IYAACgETkMAADQiBwGAABoRA4DAAA0IocBAAAakcMAAACN
yGEAAIBGy8vL4xPjk5OTaR8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAUJ//A+zcryk=
      "], {{0, 696}, {748, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {748, 696}, PlotRange -> {{0, 748}, {0, 696}}, ImageSize -> 
    252.],StyleBox["\"Figure 1.53\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.53: Example \
2",ExpressionUUID->"080d5784-2b8a-401e-9e90-e66254387662"],

Cell[TextData[{
 "Related Exercise 25",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"415cb9e1-3938-4abf-a48b-efaa46200305"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding Inverse Functions", "Subsubsection",
 CellGroupingRules->{
  "SectionGrouping", 
   Inherited},ExpressionUUID->"735d142a-416a-4e14-bf6a-e390f30de6b8"],

Cell[TextData[{
 "The crux of finding an inverse for a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "06bc6338-7501-4de6-a758-74c234fb0555"],
 " is solving the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "1e577840-f218-4654-a0bb-44063948d217"],
 " for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4a52c8c4-6aee-481c-b8db-f71828145a4d"],
 " in terms of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "09a325ef-4087-4e07-80ba-9490b1cee559"],
 ". If it is possible to do so, then we have found a relationship of the form \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "y", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"b063d00e-227c-4fef-9159-c72178dde5d7"],
 " Interchanging ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e2e27029-0d38-450b-b0bd-e80f15417118"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "bbb60025-a57b-4f58-ab40-5b118ca9f953"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "y", ")"}]}], TraditionalForm]],
  ExpressionUUID->"80030185-735f-43a5-84cd-a060f06fa92b"],
 " so that ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "816ac154-3a15-43b7-a91e-fac78ce01d0b"],
 " is the independent variable (which is the customary role for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ")"}], TraditionalForm]],ExpressionUUID->
  "ab6aac01-9358-4f5a-9647-a7cbda229fed"],
 ", the inverse has the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "x", ")"}]}], TraditionalForm]],
  ExpressionUUID->"d5d0380d-55b6-46b4-8724-ddca77d6f937"],
 ". Notice that if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9c44ad6d-8a46-44c0-bfd7-5c9d15e60885"],
 " is not one-to-one, this process leads to more than one inverse function."
}], "Text",ExpressionUUID->"25b117d4-1138-4b03-ad75-c695c9bccff8"],

Cell[TextData[{
 StyleBox["PROCEDURE", "ProcedureFont"],
 "\t",
 StyleBox["Finding an Inverse",
  FontWeight->"Bold"],
 "\nSuppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6e399316-86fd-4d66-8ac9-75c7c1ea91b7"],
 " is one-to-one on an interval ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "6912cac1-f382-418b-836f-9c3bbb176aa4"],
 ". To find ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "6115b685-f7e2-4afb-a4c5-5624dda60112"],
 ", use the following steps.\n",
 StyleBox["1.\t",
  FontWeight->"Bold"],
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a1e53a31-072e-440c-8526-8574327e28c5"],
 " for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "8a7e666d-df68-4f7a-ad7f-5f3c052b4d8e"],
 ". If necessary, chose the function that corresponds to ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "ea661159-9670-4468-9f65-e073c7f0d4ec"],
 ".\n",
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tInterchange ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "and", " ", "y"}], TraditionalForm]],ExpressionUUID->
  "781d52ad-345d-471b-a105-81af98b336f2"],
 " and write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"7cf664f3-9c28-43c5-a2b2-07f3151d6922"]
}], "Procedure",
 CellTags->
  "PROCEDURE Finding an \
Inverse",ExpressionUUID->"cc992aec-2348-4a1d-80c7-a648196f9fcd"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"7617db17-1e62-42db-a824-56fc8795bc01"],

Cell[TextData[{
 "Once you find a formula for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "43c97264-4f10-48ef-af4c-7918bed2f4e6"],
 " you can check your work by verifying that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"f", "(", "x", ")"}], ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"ac76240e-6807-4987-952c-739b7d39f944"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], "=", "x"}], 
   TraditionalForm]],ExpressionUUID->"8845fa27-7269-47f0-ab6c-321a707acee0"],
 "."
}], "Callout",ExpressionUUID->"39f28085-32c4-4219-91fd-8f29e057a685"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 3\t", "ExampleFont"],
 "Finding inverse functions"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 3 Finding inverse \
functions",ExpressionUUID->"4e098b9d-18c8-4454-9f7f-c7d13574df22"],

Cell[TextData[{
 "Find the inverse(s) of the following functions. Restrict the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9f891590-6cdb-4b06-8a4a-3b460c43580c"],
 " if necessary."
}], "Text",ExpressionUUID->"eb6e5d10-15a0-4c94-a420-f49a7b66b8a0"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "6"}]}], TraditionalForm]],ExpressionUUID->
  "0a85e10e-efae-4189-8b8e-ed372d65a88e"]
}], "Text",ExpressionUUID->"4660ee82-884e-4018-89d4-dfb2c59db1ca"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"aa6cd12b-5770-4244-ad0b-5e236772877a"]
}], "Text",ExpressionUUID->"66a7357f-ab00-4f51-a9eb-5fd10c293fc6"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"193ba27a-8592-4167-81a9-3cb8b36a6350"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tLinear functions (except for constant linear functions) are one-to-one on \
the entire real line. Therefore, an inverse function for ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "dd89ab26-fba4-4de6-ae65-3fa097a003a4"],
 " exists for all values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "."}], TraditionalForm]],ExpressionUUID->
  "73a85596-d6a5-4fa9-ae07-11041bf611eb"]
}], "Text",ExpressionUUID->"602f6970-a3af-461c-8695-614a2c4c2d84"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"5dd75c66-5046-46fb-909e-3f0c26aa1714"],

Cell["\<\
A constant function (whose graph is a horizontal line) fails the horizontal \
line test and does not have an inverse.\
\>", "Callout",ExpressionUUID->"f1c272f7-ce7d-48e8-b575-665d1421c32a"]
}, Closed]],

Cell[TextData[{
 StyleBox["Step 1:\t",
  FontSlant->"Italic"],
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "for", " ", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"de2c659e-57c9-429f-a24e-4af0b8941729"],
 ": We see that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "6"}]}], TraditionalForm]],ExpressionUUID->
  "9e1c30dc-fe10-49ab-8f19-8607399c4fbb"],
 " implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "x"}], "=", 
    RowBox[{"y", "-", "6"}]}], TraditionalForm]],ExpressionUUID->
  "5b604f59-2fba-4fa3-9b94-cf26d2709dcc"],
 ", or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FormBox[
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "y"}], "-", "3"}],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "8ace8e57-16fb-49ba-9cf7-78d25ab734df"],
 "."
}], "Text",ExpressionUUID->"f803fac7-ba54-4dce-bab4-491e682c4715"],

Cell[TextData[{
 StyleBox["Step 2:\t",
  FontSlant->"Italic"],
 "Interchange ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "0aa9b1da-d774-4645-8519-42be1091a87d"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "d2bc2b1e-d43c-49a8-8419-233a608917cb"],
 " and write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ":"}]}], TraditionalForm]],
  ExpressionUUID->"a86edea9-44e7-4e25-84ab-471aba9630ab"]
}], "Text",ExpressionUUID->"cc747e7d-8d8f-443d-a5f3-06e77f83440c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], "x"}], "-", "3."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"3fd4197e-6b6b-44c5-8f20-b88ad5806f7d"]], \
"Text",ExpressionUUID->"bf78736c-009b-479f-a36c-55d80d2f1147"],

Cell[TextData[{
 "It is instructive to verify that the inverse relations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], "=", "x"}], 
   TraditionalForm]],ExpressionUUID->"82ede289-d4a7-4051-a57e-7363271a82e4"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"f", "(", "x", ")"}], ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"1f3988d4-23e2-4ff1-b399-d9fa6b628cdb"],
 " are satisfied:"
}], "Text",ExpressionUUID->"a928cb0c-71b6-4ba8-bfc6-9686a2a3ce1b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "(", 
          RowBox[{
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], "=", 
         RowBox[{
          RowBox[{"f", "(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], "x"}], "-", "3"}], ")"}], "=", 
          RowBox[{
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], "x"}], "-", "3"}], ")"}]}], "+", 
              "6"}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{
              RowBox[{"f", "(", "x", ")"}], " ", "=", " ", 
              RowBox[{
               RowBox[{"2", "x"}], "+", "6"}]}], "TypesetAnnotationFont"]], 
           "=", 
           RowBox[{
            RowBox[{"x", "-", "6", "+", "6"}], "=", "x"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           RowBox[{"-", "1"}]], "(", 
          RowBox[{"f", "(", "x", ")"}], ")"}], "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "(", 
           RowBox[{
            RowBox[{"2", "x"}], "+", "6"}], ")"}], "=", 
          RowBox[{
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "x"}], "+", "6"}], ")"}]}], "-", "3"}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["f", 
                 RowBox[{"-", "1"}]], "(", "x", ")"}], " ", "=", " ", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], "x"}], "-", "3"}]}], 
              "TypesetAnnotationFont"]],
            TraditionalForm], "=", 
           RowBox[{
            RowBox[{"x", "+", "3", "-", "3"}], "=", 
            RowBox[{"x", "."}]}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4c7b6537-a26a-4b6d-a520-7b6794248d6c"]], \
"Text",ExpressionUUID->"bd6c6206-cbd3-4642-8f8e-2c394293b655"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "As shown in Example 2, the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1", " "}]}], TraditionalForm]],
  ExpressionUUID->"98b96534-2573-4070-8f5e-e67d7a55c4fe"],
 "is not one-to-one on the entire real line; however, it is one-to-one on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", " ", "0"}]}], "]"}], " ", "and", 
    " ", 
    RowBox[{"on", " ", "[", 
     RowBox[{"0", ",", " ", "\[Infinity]"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"a7d8dbf7-97c5-4798-a5e4-4d04b6e56ec6"],
 " (",
 StyleBox["Figure 1.54a", "FigureFontText"],
 "). If we restrict our attention to either of these intervals, then an \
inverse function can be found. "
}], "Text",ExpressionUUID->"d4df8fc0-5cbf-4192-bc02-f6d03bba6f57"],

Cell[TextData[{
 StyleBox["Step 1:\t",
  FontSlant->"Italic"],
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "for", " ", 
     RowBox[{"x", ":"}]}]}], TraditionalForm]],ExpressionUUID->
  "2ec808e4-aa46-403e-8555-aa7190d43dc4"]
}], "Text",ExpressionUUID->"bffa3d20-b0f7-40f0-bcc0-60692d68cb04"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", "=", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", "1"}]}]},
       {
        RowBox[{
         SuperscriptBox["x", "2"], "=", 
         RowBox[{"y", "+", "1"}]}]},
       {
        RowBox[{"x", "=", 
         RowBox[{"\[Piecewise]", "\[NoBreak]", GridBox[{
            {
             SqrtBox[
              RowBox[{"y", "+", "1"}]]},
            {
             RowBox[{"-", 
              RowBox[{
               SqrtBox[
                RowBox[{"y", "+", "1"}]], "."}]}]}
           }]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"7a8a2248-ee82-4281-856f-f4c6fd087e98"]], \
"Text",ExpressionUUID->"fa415327-82c6-4d34-8827-e3305c13dbbc"],

Cell["\<\
Each branch of the square root corresponds to an inverse function.\
\>", "Text",ExpressionUUID->"17acf275-a712-48f0-93aa-af353fcea49c"],

Cell[TextData[{
 StyleBox["Step 2:\t",
  FontSlant->"Italic"],
 "Interchange ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e0226bf6-ea2e-4f44-9496-5dfd2d9de5c2"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "4c590d49-ceb4-4653-ab99-84f193a7ae6c"],
 " and write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ":"}]}], TraditionalForm]],
  ExpressionUUID->"951a1aa0-72c5-42c6-bb31-04325a85f419"]
}], "Text",ExpressionUUID->"2c79df77-4b89-4f9b-adf6-e4feddc02f66"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", 
             RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
           RowBox[{
            SqrtBox[
             RowBox[{"x", "+", "1"}]], "    ", "or", "    ", "y"}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}], "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["f", 
         RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
       RowBox[{"-", 
        RowBox[{
         SqrtBox[
          RowBox[{"x", "+", "1"}]], "."}]}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ef69f007-7706-4fe7-896e-e9782bc356f1"]], \
"Text",ExpressionUUID->"af3ac679-60b5-4300-8024-701df2550409"],

Cell[TextData[{
 "The interpretation of this result is important. Taking the positive branch \
of the square root, the inverse function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
     SqrtBox[
      RowBox[{"x", "+", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "5c74554f-9979-4881-8892-5a91dd144ee7"],
 " gives positive values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", ";"}], TraditionalForm]],ExpressionUUID->
  "22b0a628-9cb6-47da-afc3-38e519c49996"],
 " it corresponds to the branch of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"b1979150-92ba-4565-8568-cda65709b490"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"49a2a86c-5328-41ce-9e41-255b6040b670"],
 " (",
 StyleBox["Figure 1.54b", "FigureFontText"],
 "). The negative branch of the square root, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{"x", "+", "1"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "4b70e56d-b1e7-4a72-be44-7aa3e79ca43b"],
 ", is another inverse function that gives negative values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", ";"}], TraditionalForm]],ExpressionUUID->
  "20e8bbe4-a821-4330-b147-80d0ac28eaab"],
 " it corresponds to the branch of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"0552d60c-1e28-4614-98fa-5b9c8dba49e5"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "0"}], "]"}], "."}], 
   TraditionalForm]],ExpressionUUID->"7eb787c2-baff-4fe7-a81c-b7ada2db7135"]
}], "Text",ExpressionUUID->"22b5615a-1845-4d2e-b06c-bcc6a333174d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
PLn4+zIqVdo1EvIh/HXTi/n+2bviGiQ4mWcsrmPc3fFVZ/0O2XmTVzfjb099
kS4VjSSiRkAqEDVKFi06ZLPZamqq5QesHLP24YcfitMr7r/a22MHcoB4qdu8
PvzopOgIaW8H0cG40PIJaXiAQQ+vDQxSu+dXZrcGZiLXCJrWYbflnS6trtET
HV/GvQn/ZPSzrNbv/+W/9eGO0b7ON5apMaVYc4388917/H3j2G/jjYTL9dVO
hTe6pUWEwnczLtdo2TJrLg1G6opo29RmZMu/u+i9AVftfd/TakE7r3V92heu
slzHPm0X6z75Kt4D8aT+jMV7jNpZEg+R/x5/Gzux/tnjh2WYy/DSPdGv8USN
gFQgapQK4qNVXC+LTzb9xbL2bxaWrF9CXvDivzU11f/7fLsycouQEWCcWhD7
0UC6kWt44ocgS5FrBM22nuFAKezq7tr+2wbCL6c3zpfpJSE1f8Sf3C07xJ8i
5eekhQtlvnCNtxR29HXEElNIRxeJkgPfJj4Dg62bpvoe8oIt9iFj5jFwjInQ
jcUztsixeNF3QtQISAWiRqkjviwUt91msx1t6ag/fExcNYtr5z3vRszw5Jbb
7LiVi3jBywKV//t8uxyPlgHdJyDNqQWxdaWNTnea3SCkikzXlInKYW8vtHwi
PnLlhV70NeWt0+k0+5iQKmopbN0Eas4xxcAXrkw7kRfmIbOr9761TEZj0vZ7
vL2iRNZfkvOXhV3HUVeiBROOjcTQJ1EccuCeb+DbluMTlyr65qyMGs2yWn9x
9HIG/Exm4BgTIM75+f3bE6n7vWrT6xNW3iZqBMTLbrefiYGsZlZVVTXhmqLj
YfYxZRKZzKlP6Rzz0u7kltvsu/X4o0Py1W7ymxDIMh2XgqJG+46Y3SCkyoqi
FROWwB3/jyi3lZWVZh8TUiWoFHb9FYNbcdu0iMdTJ/u16IHitpdb7rZsOR5j
DESsNtrX2W7rcbWd+7RvwBY/8VhnfLGLodMb5/vKUG85Hmml3reW5XsLNMUe
TOj8/SPyIQXTimN6iC5qFHsZKDPOWALHmACtZ6jEzxPzj49EjYB4lZWVyc+B
SIu+En5IVfywy9o1a6jtDACAKdSrNrWukb+0UfGrZrcIqbKiaMWEXbi4FqJG
WUwthV1tsBS25L0eHzpadKeWc6LFiGSF5209MY+H9Y5C0r9EJ7y+CF3yFsSU
C6Tt0G2vKCyQ+3roYHek1XrfWhZvMEEr+1N419aLIzH8FuaPGlnjmlls0s9Y
QseY9ogaAfEqKyuL+2OHqBEAAGlLLYjtr2v08Nos6OEjPNdw78iouBxWJ4GK
8O/GE02yGvaga3DCJcZEEWQccaUfSDSq6n6g46bhTckxXKLDr43z8iUaxTOP
vHilnd44f1beggUPPiiW+++7L97bgmnFx0biabe3lLe8VNnd8VWkT8Wvm16M
K5igXvJo5ZK8o/ZSFDUy4Ywlcoxpj6gREC/xKTQyEafTKb8gmpubo68puxxZ
8GECAECmKn41kGtkWUQoICtp43y1/4b999njh63MoZbzxJW+fgI1wxf+6qO0
Wcb8NaVlpGX8FPMTb2oSuVt2zPKPsWoddkfcu65idm3/7Qk3q09hkqP2Jm7K
N2e3TpnhixrFPOWcx7zCj0aOMe0RNQLiFcsQUdHh1KphR18TAACYbN+RoNJG
HZfMbhDMIS4zj7Z0EDXCAx039aWwI9WCjonbVm65W0Zg1lwaFP/dOmWGpeRg
mken1WLd3jZbVtVGyYmSwSUZHollDrWLO5drg8XUKNArH0/cFG/YTa6f1lPO
+Rk5xrRH1AhIOkVRmEMNAICMcbpTl2v0qKfmBDnAuUk87+QaQbwMLKf6ArlG
hkth+ww1F1tkAOGhg91ywFrIfGrpR1eOKXp6j3cgm1xz3ScRB7L5dOzzRlGa
zu/fPn3ePeq/Hyu3uyf6GT14tFfchzLJjB1j2iNqBKQCUSMAADKFtyD2o1rg
aGzTTrNbBHOQawTJUn8lkGv0wfUEt9ZX+UuZfPLdHy1ZmGe1vPJxusel3bbS
b8+IJYNIcdtr7/teTPEl70Czwru2qpO89xzSQhC+itPO5uXT816wucKcGX/U
yPfYdGb4GNMeUSMgFYgaAQCQKdQ+/NxnArlGD681u0UwB7lGEOxuJZBoVN09
9Xyio6Jun9mT7x/GZbjG8qTqOfTITF+IoNE5QU0nmT2lRo3GjWUb7eu80PKJ
Or5PcRwtujOQLOSPSonlqZP9itsu/jrl3tc+7RsYvy85i33aDvVKyjGmPy1q
lBkvYCBDEDUCACCTqAWxtdJGizKxV4/EkWsERVHUUti6okbbeoYT3ah/GJes
jZz+Hy9fN72YL4saTTS6Sj0W/2xroXWznc2PzPxHOYX9k4u/L4Mn8i++Cc7k
dNIzlsi/lnaFCUZolaXFmkl4IpIuGceYAdw2rb63gULuACIhagQAQCYpq9NC
RurtpV6zGwQTkGsEjyyFrZtA7eLIWIJT2GjDuCyrap2RK0unD1nPOfaZ7k9v
nJ/vL/cdqPKtTR7nzRS6o/y0/iFyIjnfoCer9RdHL4fftHec14RFuU2TlGNM
W27b2xXv1m5ftzDPqh2jvH1gwy7xp7rOG2le1B1Ic0SNAADIJGpB7Ef1BbHN
bhBMQK4RBLUUtpZrdOCzJGzxm7Obps7Mv7vovYGMqAgz1Pjz78SXVTLYKg5Q
jTLp54ZTHMc2/lRWsd54oD005uP/6/zFv93dEbF0khyeNstqTdMsnWQcY/pS
HOf3b3+74l2xvF9drr/du3fvrl1v1nXeMLuJQGYjagQAQCZxDQdFjbaUm90g
mIBcI3iSXQrb46/8o41dSnfeGNcsqzWu6tPulh2Rpjkb84p0Z7SoVM8hmeWS
nhWN9IwfYxoTzZYxQO0f+lsAiSNqBABAhpm5UptGTfnnDWa3BiYg1wjOMUU/
PM1yzpHoFj9vyox50zT+Octij9XIEXwXdy7Pt1oty/clZaJ5WT5azlzfnX5D
0wAgcUSNAADIMEEFsZdlzCUekodcI9T239bqYFuq1VLYCX0UOJtXT5spa0qn
7UeK4rZfuxkoNC2LGoXNGppoQ+okYmrg6JWmBNNRZClp0QyZ75S2pw4AEkHU
CACADLPjXS3XiILYuYlcIzzR8aV+ArXYh2hJrrZzNTXVdZ031ECH21ZuuVvO
LJa+g3r8mUW/OHpZbaR/vnjLluMG2qwlCN1RfjqRQ764c/n0efd86/4NaX3q
ACAxRI0AAMgs4nKPgtg5jlwjqKWwqwKlsOPLcvnm7OppM+UlQMna1St/OO+7
P1riiyClq963lsnZ4eV0adf3rFRf/9OKjxkqPq0eqeJoWv+D2YWFlpKDF0fi
P3B/BWnxcAamAchuRI0AAMgg6sXOzQFdrtEiCmLnIHKNYGnoCUSN4i2FPdiq
RY1mWa0yZJSaZiaN+6Ot+d651C1bjrdXlEyfd8+sGUtq+28nuNnO+h1iU0Ym
DvOWgfrdFZc6QwEAZDWiRgAAZB61ILY/12jpc2a3BpONXKMcl2Ap7FH3qFYU
aF35oWs3E6uJNDkUR3tFiZyqLN9qXbXp9aTUEQo7p1iMxGlkVBqAXEDUCACA
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
RdTLam3OL39NaRn3iHea8kmO27hbdszyj0VqHXanT9RIX6O7tv/2hKvrk6bk
OMGJd/HN2a1TZviiRjFPcueZ9OdoQp/2DcjKVOLAm5ubtbSiq709hQUFDQ0N
cW3NyJmMF1EjIFnUgtiLAoEjV8yprcgo5BrliG09w/qoEaWwAQCTj6hRCrlt
5Za7ZQRmzaVB8d+tU2ZYSg6meY1ltVi3t82WVbWGih6nigxnycBFLHOoXdy5
XBsspkaBXvl44n14A31y/bSe5C4q0Z8Ur7HNm5+Xx7L48ce1P61ds+bnP/tZ
XGPTPMbOZLyIGgHJUnNCVxD7UQpiZytyjXKE5ZxDP4Gac0whagQAmGREjVJp
qLnYIi+0HzrY7agrEf8OmU8t/ejKMcWTbDMZvEPnZNvWfTLR0LmOfd74RtP5
/dunz7tH/fdj5Xa3vyZ5pLBJ8DisZB/ApLLb7XPnzJHT2TeeaPJ4p1fL96Ye
xbchY2cyXkSNgGTpuBRU2qiszuwGISXINcoRainsKkphAwDMRNQopfoqfykv
27/7oyUL86yWVz5O91+I3LbSb8+IPZ9nMilue+1934spojXYunXKjMK7tqoT
tfcc0mIFvkrLzubl0/NesLnCPBf+qJHvsZlMUZSXX35ZJggtfvxxcbArilZE
mlUtIsNnMl5EjYAkUd+PatRokVYQO92/d2AIuUa5QDzLlgOUwgYAmIyoUUrd
PrMn3z+1VhIrHqdQz6FHZvqurBudaTd2XhYYV6NG40bPjfZ1Xmj5RK06rjiO
Ft0ZSBbyx8HE8tTJfsVtF3+dcu9rn/YNjD86Ob98qgZhTTo5XZqMAa5ds2Z2
YaHNZpvwUUk5k3GbxKhRZrwTgQQo/7whkGs0c6XZzUFKkGuUC1qH3ZZ3urQR
ak93pdEcJQCA3EHUKLX8g6pkDeH0/67/uunFfFnUSDcKKU2oZ88/v1topW5n
8yMz/1FOYf/k4u/LsIb8i2+CMzkT/Ywl8q+lXWGiBlrNZ7Hmtp4sqR+7rbRU
Kwa1efPzEz8gGWfSiMFW9ZmdscSXxZR0bptW0NtARXogw2wp15U2WuS5OWB2
g5B85BrlghdsLjXXyB84imUqEAAAko6oUUppg6osq2qd6VRZOhJZ9ziueecn
2emN8/P9BcYDdcUv1+T7YyNiuaP8tP4hMhTmG51ktf7i6OXwm/aOwErDMuCJ
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
ufs6yzAF8eRE/VphajRs9Fz3yda3m98KZx3PdexZ8ZmLzUL9OVhw+9Zrp3KZ
9uC3l3/p8V+dPDP86KLV3ss1JGp6+V/f/nb0rl47f35w6+zsnPCmSnLuxi3G
1CgZ/+8DSSM1AgBiIDUqr/5BVdGMvpUWwgz3cdNDc6JJjcoxJmhywnevf323
oTN1dx64afZV0RL2dyz9wsD5k/sWOIsWuJ91a/Tb+ncKXMPnZ2AOHrCx7Xxs
x5VQ6XQ6PwfUli1bJr6hUpy7iTjbEv4tzbq1r4up5DLp/ITe0Rz4FT6hGZA4
UiMAIAZSo7LKD6qqWr2js5Jmlh5JNAvxuNadj9nBexbO6Z9g/OJleH65ut4Q
47KGgwOfEi1d1zdWKJX65p73Cm+6dzxUBU4DXoGiWa/X1dUFb9eiG24ITsTE
g5eSnLvxC/7f/Nent2xrOlzi/zEz6We3vrDjsfWLq1P5g4ru/+juzcGvGltP
i4+AkpAaAQAxkBqVV/8omJ+cScS0Juf2feMP860RFdoZdbYleEvDXGvganS5
jlfv+dNoFut7fnx4aObT/9uFS//mqSMjTtYUDU8rZTfLdJdOp+fV1jY2Nk5q
6bRSnLsKkuv45fOPPbv1heD20xcbBt4/88wzmzc/2dh6eqp3EZgmpEYAQAyk
RmUVzcOTH3FT6XozrppUqsLngs40bxppmbNsr5H+cbQcrG1X1BxiRqNxSafT
pdrUxM9dJQn2Mwoz8z8MvAcoIakRABADqVEZ/aYpGeum5fWvIFbJyUnU1nL0
ieVzUqmq5c+VZPKlaJrlaIX3Y4amAZAEUiMAIAZSo3LpPLBmxuxoTumKTY1y
mfYPPrw47XM0qVHBHp6K07vYVhgcPdo0yS6OaMrl4MCjDquKPVkAMJDUCACI
gdSoVLoOvfnSSy82tp4OY4dMuqHqymidr8odmdLfWfTNPe+FO9m/ynnVg/sr
d58HyDcIXdZwcDI7fPSJ5TMXXP0H199d0ScLAAaTGgEAMZAalcbv31gzY3b0
Tm5Yt2bVNQs++5Vb+xKkSnX8B7dFa5pHy6WdeHpVWHzOWPtqQqaCDt/bXEfT
nV+cV1tbtWHn0Qvjf6v7Z1oOnm5gGgDJIjUCAGIgNSqNsy351KgmlYoio6ne
pzFk/uPhOb0Lglc9uP/w1g0zF1xdM+vWHac+ner9GrfW3ZuCnZ/IAlu9E0/9
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
4P8DvXuiLw==
      "], {{0, 812}, {1554, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {1554, 812}, PlotRange -> {{0, 1554}, {0, 812}}, 
    ImageSize -> 540.],StyleBox[
   "\"Figure 1.54\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.54: Example \
3",ExpressionUUID->"ecb2acf0-de5d-4aeb-82a5-537527d57bed"],

Cell[TextData[{
 "Related Exercises ",
 "9\[Dash]10, 33\[Dash]34",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"0546bfea-b735-4578-b98f-d7a2288b68ea"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "5"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"08c4d4d2-e22d-4442-a0da-8c6a337a8d75"],
 "  On what interval(s) does the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "6b38ec21-43d5-4541-9a2b-22ecab2aa8ca"],
 " have an inverse?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 5",ExpressionUUID->"32d5b714-9028-4169-8600-153d01dce3da"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"dd60563d-1327-4ce3-98f5-5d3b3b6b9d7d"],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "a3a7708c-f5cd-4040-86cc-8d3ae19e14f3"],
 " is one-to-one on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"27d45a2f-e882-42db-af00-eca4dd69d723"],
 ", so it has an inverse for all values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "."}], TraditionalForm]],ExpressionUUID->
  "71d63c65-3bf7-42e0-bbe1-3814c54e0cf0"],
 "\t"
}], "QuickCheckAnswer",ExpressionUUID->"db844d04-7784-4ef5-aae7-53e39fa782b0"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphing Inverse Functions  \[RightGuillemet]", "Subsection",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->
  "Graphing Inverse \
Functions",ExpressionUUID->"5ddf5f27-5381-4a0f-9de4-f72fb651bd4a"],

Cell["\<\
The graphs of a function and its inverse have a special relationship, which \
is illustrated in the following example.\
\>", "Text",ExpressionUUID->"d7b3a647-8d8f-4f66-82f9-b97df59a3f0c"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 4\t", "ExampleFont"],
 "Graphing inverse functions"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 4 Graphing inverse \
functions",ExpressionUUID->"2fe04c13-f4cc-40ed-8b9e-74d931d73a2b"],

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "0b7adb58-3d55-4505-bb9a-e953d31e5b55"],
 ", and then plot ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c8ce6a63-df9c-4c16-8a17-b0314726ae4c"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "9cfd663b-fcbb-41ca-9d82-05e6e8851487"],
 " on the same coordinate axes. "
}], "Text",ExpressionUUID->"1cc277be-ada6-48a6-bad0-5ae4f9bb7453"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "6"}]}], TraditionalForm]],ExpressionUUID->
  "74e3731b-c7ef-4da2-a4ac-5476e36ebeb8"]
}], "Text",ExpressionUUID->"2795e2d5-7f36-4cae-95f0-14db8f7c57cc"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"x", "-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "b3db7221-0f10-49e1-b4bb-afbab5251f65"]
}], "Text",ExpressionUUID->"3dcebf7c-737c-45e4-a357-5a5bc7c27be9"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"2242d6e6-6641-4d32-ad17-243aeb4f73d7"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tThe inverse of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "6"}]}], TraditionalForm]],ExpressionUUID->
  "697de49b-4749-4039-9b33-d4eb7823580a"],
 ", found in Example 3, is "
}], "Text",ExpressionUUID->"1a47640d-ae18-48c5-b1ac-36569147b500"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{GridBox[{
         {
          RowBox[{"y", "=", 
           RowBox[{
            RowBox[{
             SuperscriptBox["f", 
              RowBox[{"-", "1"}]], "(", "x", ")"}], "="}]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"Center"}}}], 
       FractionBox["1", "2"], "x"}], "-", "3."}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"75a3b3ca-e74a-46fb-adb2-e7f95c2416f9"]], \
"Text",ExpressionUUID->"54bda971-759d-457f-9ec5-b4e900e7e3e3"],

Cell[TextData[{
 "The graphs of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7a79ac99-1e6f-4210-9f47-c5614f36ce3d"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "c020a0ef-8f85-452a-9309-fe2efe4bd969"],
 " are shown in ",
 StyleBox["Figure 1.55", "FigureFontText"],
 ". Notice that both ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d45ca98c-7651-453b-833d-da8baabbae22"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "10b11630-ce1d-4fd8-8b9d-1721f79c516a"],
 " are increasing linear functions and they intersect at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "6"}]}], ")"}], "."}], TraditionalForm]],ExpressionUUID->
  "1534a154-1d89-424a-a510-d94db37e2a55"]
}], "Text",ExpressionUUID->"e652d0ed-af2e-47ad-8b92-d370d03b942e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = -4, $CellContext`steps$$ = \
{1}, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
            Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
            Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
            Typeset`specs$$ = {{{
                Hold[$CellContext`steps$$], {1}, ""}, {
               1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}}, {{
                Hold[$CellContext`aValue$$], -4, 
                "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, -10, 10,
                0.1}}, Typeset`size$$ = {432., {229., 233.}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`steps$34966$$ = 
            False, $CellContext`aValue$34967$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = -4, $CellContext`steps$$ = \
{1}}, "ControllerVariables" :> {
               Hold[$CellContext`steps$$, $CellContext`steps$34966$$, False], 
               
               Hold[$CellContext`aValue$$, $CellContext`aValue$34967$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                
                Plot[{2 $CellContext`x + 
                  6, $CellContext`x, (1/2) $CellContext`x - 
                  3}, {$CellContext`x, -10, 10}, PlotStyle -> {
                   If[
                    MemberQ[$CellContext`steps$$, 1], {
                    Thick, $CellContext`bcR}, None], 
                   If[
                    MemberQ[$CellContext`steps$$, 2], {$CellContext`bcG}, 
                    None], 
                   If[
                    MemberQ[$CellContext`steps$$, 3], {
                    Thick, $CellContext`bcB}, None]}], 
                Graphics[{
                  Text[
                   Framed[
                    Pane[
                    "The function \!\(TraditionalForm\`f(x) = 2  x + 6\) and \
its inverse \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \(-1\)](x) = \
\*FractionBox[\(1\), \(2\)] x - 3\) are symmetric about the line \
\!\(TraditionalForm\`y = x\).", {
                    2.5 72, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                   Scaled[{0, 1}], {-1, 1}], 
                  AbsolutePointSize[6], 
                  If[
                   MemberQ[$CellContext`steps$$, 1], {
                    Text[
                    "\!\(TraditionalForm\`f(x) = 2  x + 6\)", {-2, 4}, {1, 
                    0}], 
                    $CellContext`ClosedCircle[{$CellContext`aValue$$, 
                    2 $CellContext`aValue$$ + 6}, $CellContext`bcR], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((a, b)\)\)", $CellContext`bcFO], \
{$CellContext`aValue$$, 2 $CellContext`aValue$$ + 6}, {1, -1}]}, Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 2], 
                   Text["\!\(TraditionalForm\`y = x\)", {6, 6}, {-2, 0}], 
                   Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 3], {
                    Text[
                    "\!\(TraditionalForm\`\*SuperscriptBox[\(f\), \(-1\)](x) \
= \*FractionBox[\(1\), \(2\)] x - 3\)", {2, -4}, {-1, 0}], 
                    $CellContext`ClosedCircle[{
                    2 $CellContext`aValue$$ + 
                    6, $CellContext`aValue$$}, $CellContext`bcB], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((b, a)\)\)", $CellContext`bcFO], {
                    2 $CellContext`aValue$$ + 6, $CellContext`aValue$$}, {-1, 
                    1}]}, Black], 
                  If[
                   And[
                    MemberQ[$CellContext`steps$$, 1], 
                    MemberQ[$CellContext`steps$$, 3]], {$CellContext`bcG, 
                    Dashed, 
                    Line[{{$CellContext`aValue$$, 2 $CellContext`aValue$$ + 
                    6}, {2 $CellContext`aValue$$ + 
                    6, $CellContext`aValue$$}}]}, Black]}]}, 
               PlotRange -> {{-10, 10}, {-10, 10}}, AspectRatio -> Automatic, 
               ImageSize -> 6 72, Ticks -> {
                 Range[-10, 10, 2], 
                 Range[-10, 10, 2]}, Method -> {"AxesInFront" -> False}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}], 
             "Specifications" :> {{{$CellContext`steps$$, {1}, ""}, {
                1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                 "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                 "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}, ControlType -> CheckboxBar, Appearance -> "Vertical"}, 
               Delimiter, {{$CellContext`aValue$$, -4, 
                 "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, -10, 
                10, 0.1, ControlType -> Slider, ImageSize -> Small}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {573., {248., 253.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({$CellContext`bcR = 
              RGBColor[0.92, 0.11, 0.27], $CellContext`bcG = 
              RGBColor[0, 0.6, 0.4], $CellContext`bcB = 
              RGBColor[0, 0.63, 0.85], $CellContext`bcPBS = 
              BaseStyle -> {
                "Text", LineIndent -> 0, 
                 LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                 Automatic, Hyphenation -> True, TextAlignment -> 
                 Left}, $CellContext`bcFO = {
               RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], Background -> 
                GrayLevel[1]}, $CellContext`ClosedCircle[
                Pattern[$CellContext`coord, 
                 Blank[]], 
                Optional[
                 Pattern[$CellContext`color, 
                  Blank[]], 
                 GrayLevel[0]]] := {$CellContext`color, 
                AbsolutePointSize[7], 
                Point[$CellContext`coord]}, 
              Attributes[PlotRange] = {ReadProtected}, $CellContext`bcBSG = {
               FontFamily -> "Times", 13}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.55\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.55  \[LightBulb]: Example \
4a",ExpressionUUID->"c02af8ad-645f-4a92-a4f4-6a4129101886"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tThe domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"x", "-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "e09897b4-a340-4e89-9749-345d791b3976"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"1", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"f50a8176-1e6d-4b42-a4c6-7c83471b7c58"],
 " and its range is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"3d6944a7-0e7c-49f7-8b64-d52add43afed"],
 ". On this domain, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "18e41167-a01f-43f1-bf11-600438ad9881"],
 " is one-to-one and has an inverse. It can be found in two steps:"
}], "Text",ExpressionUUID->"34b3ae79-2099-4836-960b-60d94a2e9f04"],

Cell[TextData[{
 StyleBox["Step 1:\t",
  FontSlant->"Italic"],
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"x", "-", "1"}]], " ", "for", " ", "x"}]}], TraditionalForm]],
  ExpressionUUID->"8b6494e7-892c-4c94-b321-256ecc9a8f73"],
 ":"
}], "Text",ExpressionUUID->"1ae0a395-758b-4602-bafc-624fc2b14f43"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["y", "2"], "=", 
         RowBox[{
          RowBox[{"x", "-", 
           RowBox[{"1", "    ", "or", "    ", "x"}]}], "=", 
          RowBox[{
           SuperscriptBox["y", "2"], "+", "1."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6b07bb86-7af6-458e-aa60-5748b2d261fa"]], \
"Text",ExpressionUUID->"a9c4f325-f6ea-40aa-bcf8-d63f34a48f97"],

Cell[TextData[{
 StyleBox["Step 2:\t",
  FontSlant->"Italic"],
 "Interchange ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "and", " ", "y"}], TraditionalForm]],ExpressionUUID->
  "bd4396a2-80f5-4598-a511-1f57f4dd9a2f"],
 " and write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ":"}]}], TraditionalForm]],
  ExpressionUUID->"532dcc77-9946-46d8-a082-aaf81aa3fa23"]
}], "Text",ExpressionUUID->"b5630077-77f3-43f1-96c2-2327c2d7cc80"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", 
            RowBox[{"-", "1"}]], "(", "x", ")"}], "=", 
          RowBox[{
           SuperscriptBox["x", "2"], "+", "1."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"dccbd385-b4b4-4307-8108-86c784c2aade"]], \
"Text",ExpressionUUID->"6dcae403-60dd-4d8b-9ef8-e4e9600b05fd"],

Cell[TextData[{
 "The graphs of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "acdc78f4-bf1d-4a22-8f9a-8eb457710631"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "4afcc24f-d60f-4506-8799-d738b6ccfd41"],
 " are shown in ",
 StyleBox["Figure 1.56", "FigureFontText"],
 ". Notice that the domain of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "de34dcb5-c990-47c9-9f1f-d88501fa2f4b"],
 " (which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "840bb768-20ad-447c-bba2-b542ca701c9f"],
 ") corresponds to the range of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d02a2c20-c263-456f-a92b-53e7364f7fa2"],
 " (which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "ee0d66cb-f21b-4ad3-a07d-b6c4e376fe62"],
 ")."
}], "Text",ExpressionUUID->"8d20cb98-4432-4d43-bdfc-bec89e85986b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 
            2, $CellContext`steps$$ = {1}, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`steps$$], {1}, ""}, {
               1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}}, {{
                Hold[$CellContext`aValue$$], 2, 
                "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, 1, 4, 
               0.1}}, Typeset`size$$ = {432., {216., 221.}}, Typeset`update$$ = 
            0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`steps$35382$$ = 
            False, $CellContext`aValue$35383$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 
               2, $CellContext`steps$$ = {1}}, "ControllerVariables" :> {
               Hold[$CellContext`steps$$, $CellContext`steps$35382$$, False], 
               
               Hold[$CellContext`aValue$$, $CellContext`aValue$35383$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  Sqrt[$CellContext`x - 1], $CellContext`x, $CellContext`x^2 + 
                  1}, {$CellContext`x, 0, 4}, PlotStyle -> {
                   If[
                    MemberQ[$CellContext`steps$$, 1], {
                    Thick, $CellContext`bcR}, None], 
                   If[
                    MemberQ[$CellContext`steps$$, 2], {$CellContext`bcG}, 
                    None], 
                   If[
                    MemberQ[$CellContext`steps$$, 3], {
                    Thick, $CellContext`bcB}, None]}], 
                Graphics[{
                  If[
                   And[
                    MemberQ[$CellContext`steps$$, 3], 
                    MemberQ[$CellContext`steps$$, 1]], {$CellContext`bcG, 
                    Dashed, 
                    Line[{{$CellContext`aValue$$, 
                    Sqrt[$CellContext`aValue$$ - 1]}, {
                    
                    Sqrt[$CellContext`aValue$$ - 
                    1], $CellContext`aValue$$}}]}, Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 1], {
                    Text[
                    "\!\(TraditionalForm\`f(x) = \*SqrtBox[\(x - 1\)]\)", {
                    2, 0.8}, {-1, 0}], 
                    $CellContext`ClosedCircle[{$CellContext`aValue$$, 
                    Sqrt[$CellContext`aValue$$ - 1]}, $CellContext`bcR], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((a, b)\)\)", $CellContext`bcFO], \
{$CellContext`aValue$$, 
                    Sqrt[$CellContext`aValue$$ - 1]}, {1, -1}]}, Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 2], 
                   Text["\!\(TraditionalForm\`y = x\)", {3, 3}, {-1.5, 0}], 
                   Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 3], {
                    Text[
                    Pane[
                    "\!\(TraditionalForm\`\*SuperscriptBox[\(f\), \(-1\)](x) \
= \*SuperscriptBox[\(x\), \(2\)] + 1\\ \\ \((x \[GreaterEqual] 0)\)\)", 
                    BaseStyle -> {Background -> White}], {0.1, 3.5}, {-1, 0}], 
                    $CellContext`ClosedCircle[{
                    
                    Sqrt[$CellContext`aValue$$ - 
                    1], $CellContext`aValue$$}, $CellContext`bcB], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((b, a)\)\)", $CellContext`bcFO], {
                    
                    
                    Sqrt[$CellContext`aValue$$ - 
                    1], $CellContext`aValue$$}, {-1, 1}]}, Black], 
                  Text[
                   Framed[
                    Pane[
                    "The function \!\(TraditionalForm\`f(x) = \*SqrtBox[\(x - \
1\)]\) (\!\(TraditionalForm\`x \[GreaterEqual] 1\)) and its inverse \
\!\(TraditionalForm\`\*SuperscriptBox[\(f\), \(-1\)](x) = \
\*SuperscriptBox[\(x\), \(2\)] + 1\) (\!\(TraditionalForm\`x \[GreaterEqual] \
0\)) are symmetric about \!\(TraditionalForm\`y = x\).", {
                    4 72, Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                   Scaled[{1, 0}], {1, -1}]}]}, 
               PlotRange -> {{-0.5, 4}, {-0.7, 4}}, AspectRatio -> 1, 
               ImageSize -> 6 72, Ticks -> {
                 Range[0, 3], 
                 Range[0, 3]}, Method -> {"AxesInFront" -> False}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}], 
             "Specifications" :> {{{$CellContext`steps$$, {1}, ""}, {
                1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                 "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                 "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}, ControlType -> CheckboxBar, Appearance -> "Vertical"}, 
               Delimiter, {{$CellContext`aValue$$, 2, 
                 "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, 1, 4, 
                0.1, ControlType -> Slider, ImageSize -> Small}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {573., {235., 241.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({$CellContext`bcR = 
              RGBColor[0.92, 0.11, 0.27], $CellContext`bcG = 
              RGBColor[0, 0.6, 0.4], $CellContext`bcB = 
              RGBColor[0, 0.63, 0.85], $CellContext`ClosedCircle[
                Pattern[$CellContext`coord, 
                 Blank[]], 
                Optional[
                 Pattern[$CellContext`color, 
                  Blank[]], 
                 GrayLevel[0]]] := {$CellContext`color, 
                AbsolutePointSize[7], 
                Point[$CellContext`coord]}, $CellContext`bcFO = {
               RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], Background -> 
                GrayLevel[1]}, $CellContext`bcPBS = 
              BaseStyle -> {
                "Text", LineIndent -> 0, 
                 LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                 Automatic, Hyphenation -> True, TextAlignment -> Left}, 
              Attributes[PlotRange] = {ReadProtected}, $CellContext`bcBSG = {
               FontFamily -> "Times", 13}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.56\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.56  \[LightBulb]: Example \
4b",ExpressionUUID->"31128be5-0409-4e79-b065-c91503f80c7a"],

Cell[TextData[{
 "Related Exercises ",
 "28\[Dash]29",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"8ef616aa-1e7e-4cc8-ae8a-605f979bf504"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 "\tLooking closely at the graphs in Figure 1.55 and Figure 1.56, you see a \
symmetry that always occurs when a function and its inverse are plotted on \
the same set of axes. In each figure, one curve is the reflection of the \
other curve across the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"x", "."}]}], TraditionalForm]],ExpressionUUID->
  "1c66bd0b-1c8f-472a-9919-09f9f69c9b92"],
 " These curves are ",
 StyleBox["symmetric about the line ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", "x"}], ","}], TraditionalForm]],ExpressionUUID->
  "c7bb32f4-a9f4-442c-949e-833adb34aa4e"],
 " which means that the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "b"}], ")"}], TraditionalForm]],ExpressionUUID->
  "810d4a5a-3403-4d9a-9eec-6b34c661858a"],
 " is on one curve whenever the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"b", ",", "a"}], ")"}], TraditionalForm]],ExpressionUUID->
  "6a74aaee-61d6-4ad3-88e6-19868a1bc714"],
 " is on the other curve (",
 StyleBox["Figure 1.57", "FigureFontText"],
 ")."
}], "Text",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   41},ExpressionUUID->"7c05cdcd-87fd-4582-8e64-4cc43def97ee"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
R6YHP+0fy8jD2vXpyMiQfKq7o2V1c+ekpvlg9faq41ABIKBIU6GRqInSQ1TO
mihzRc9od+CDE6vL/Dkr9fzR9Cglt67zw3qU0N+C3t7ezZs2rzVs2bJlYPBY
3JhdLPzxY5ETm34+R36W1wxdT310sMW2t3LNQ2/5opx9ZK/elXRu496hSyFY
UwYA0lTQ6ZvobdqdbBX1U8u/Trf7nzVX9LweeFn4c1Zq3UhUX91Lj1JjU7Yl
vNm/IxOfHXhwwXfr5i1+/diX1o/PTEUGP+0/sX+jfDaRprYO+qCgXQagyZif
nrtAhiQ5k0AFIOhIU4Gjr45cn04URH1zebzm0f9b82Cemai7fyUhSm8tpSrS
Q8qfs1Jbx2KOUcqtN2K6+2W9yCojShlRzVjUu3HkqbnzVZpaM3TdP0FaG+99
8XZ9YL/+aMzrsQBASUhTQSGnRT0OJaahErNPeXLU/c/GX90WOz0S9EYHhfDn
rFRHJGZf4Nt3bih6w63Hv3V4vapXf/7oRNY7nXgzsd/f3MaeSbeeuXR62IuP
7P3xfH1s6/4cDf23KIAQI035XGIh71evZCkpd/qIsZynf2HV8OesVN+lG45R
yrXYcLFnyXf0xbKafzuc7S6apo298YRKXDUr2iZ9MzFlUnNrPkt6AFAc0pTf
yOkvkaBWvmYs5OWsg7JuRvxPL+n7v1yIeP0KKs2fs1KSmmq6zqdFqV1nJV+5
ViOkje964Hb54W2YszZXQjPuVm8Uov/o4F/9l6ZkPKMtP5yrZ8IVbb6okAeA
4pGmPKfqoFKreMkEla8aKlkQ9fJm1W/TP/UwleTPWanxmzOZUap7/KaL5daX
969RM055MtJkn5q/0lfTRqJuPbu7xttXqry39IML/st7AJAfacor+iSSqiTX
N8t7tOA5qNQ0lHUtr6qjlM9mpSQy6VHKWnnePrx1zLWyc13sVEvNHXrrg/kP
d0SydkrX24gZhVX5p7A8pY33qsinBlmd38wAAo00VTGJ+JQ2AVV4gkp0iJoa
HFDzG5xx/DkrJe9LzeFLtov41gxddzfGSEZSXaRqHto8lv07QQbTv/reOxsa
9HW0l1Qv0Ksn9m9sfPrJRYYlLzTvHbrk4sCUmamIehYV5ORZvrj85d4XFi9b
usSpPkqzLkfSMAFAEJGmyicjPhUYnNIT1MubJUFFJ65qRgtrf84tVJ4/o1Rc
7R2THqXkI+4+hXwPfPxsjUpTP2jO/ZITJUlyWzYwoY33mv9rbhFY73aAGT7Q
pC7Tq5v/8IaOru6OFtXtqt7oIDrnng3DTulvqOkXiY5YK/ew2AcgcEhTpVN7
2yVqnzoO6Yt3ehMD6yV4BU9AqVU8Yw5KEpR6fBKUjW+jlN6lsy29tdRh92d+
4rFTv/vmPBWH8vSPGtmrkkzdvOWdRwblq+RLnmnZc+gPH+19YXF9skd6w5y1
fVFXvsemJRQlJs1e7VaTZvLde7P/jfpkS/Yslx9q090vq/vU3/F49/hNvucB
BAtpanbkb3k9O3V/En91m55/9NqnvPu5ZLl9c7l++Z7R0+CWMf+k/vX6JfqU
b6OUZIDMvWPKcHWApp1uNyeX/ttn2dtMJSvVVW/PpQvvqZv/cHInF31bxv7V
9xb4OIWZ/uzVBxKtGF7qSXvhN46o+Ce3rE+UbIolX954pPTBAEBFkaYKEZ24
mjbvdPevLNlpFgnKmICSGNb9iXWnPBJUXr6NUmNTRpfO9rQoNX6zPG/oYIu5
WpczBU1//GyN3Cex7jZv8bo/p67p07/ZCn2cggw1/UJNLjmUuxt9sfR5p7mN
7ztdVqjnrhtHVF90vzVsB4BCkKZsUsFJ9cxMXHBX7Jpd1vhkuxCPBFU430ap
SU2zX8S362z5LqAbb1+pVujq73hcwknWZ0kuCCZKwfeftt8zPU2VMtpbh9eb
a3m2kns9FyWfKFdHKUuakqFSiA4gWKotTWmm69N6sFFV4mrGKRWcSslOP00t
3hnxydximOBUCt9GKWG/iK99uCMSK9/sykjzo4noMm959v7hWvzEmyp06THm
oc2Ztd9mqVLdvMU52iwUYDTRrqG21rGGfOyNJ9Rn5+88mXXP5WSa0h+keaCE
wQCAB8KdpvTJnwuRRIGTSk1qusneoGB2M07pU08SnzoOyXPpWxInsxMLFq7w
c5RaM3TdVi6Va8s8N0iaqksWbOfYjeXi9hXm1FPmkOT706ybyrYAVxgtse2y
MSSH7fYsU2RyrLI+jGVuijQFIHBCkKbULFNqeS4tMpU40ZSlaNxoXGBeeWeu
StDBoBz8HKUcKs8PXyp3hFbpRa30ZU1T2viex75hTkyN38wohp/se2puMr2U
0pTA7CNaW1uz9M2MhTwtNdq5jX3RmaxLeKQpAEEWiDSVuoDOzEuSZxJNnB61
r7K5mZ0e1VOZWrNLzjtZIxMX35Wbn6OUvn3MvnPlv4jPJlWGlGuFzhKWfnTw
rw6Db19pXkNX0o4zxnqiuv397ozSLKPhlVpPrFnRlqss33LdX83WwawLggDg
S/5PU2q1rgxJyfpoP03MOBmdClRwUg0z46zWecfPUUpig155bp2Y2nduKHqj
Ak+tGqHn7GyQ2lDGuVJ9si81EWTrZlD8YBLLfEa0sz2OuQFfMiNlpdo+qHu6
0a4BACrK/2kqbkwBuRacJDWZ003GUp3Z5cnabJwZJ8/5OUqJZQMTaVHKqDyv
0IyK0XAg97V4Q688mC0sWTtNqX1eZh2l5AtTRVwZW8ao3ffkU7fdd1f+jGRO
uC1YtHWslJJ4APCA/9NU4ld9qm684Mj0q1dUdZOaa5q5EDFrNszThzrRMPvk
Nz6PUhKcbOVSEq4quDg1uuuB2y2LYg53UOtrcoevN/fZPmdOW0luMTpQpQ1b
IlBT04b2dU//+7snCqkDHHvjCedSdm28+5dfTe1iM2+5/tnYKRmY04JgKk25
15gdACrH/2kqrmaK9PYFGXkpWQ2u11N1f2KrCbdmJDX15NHwURyfRym9XMrW
qFPfPqZy313yzWxWPdWsaHMoIDc2lFF78Nkuo9NOt6tPqSiVef2duQJYb+wC
k3cR0NxfT80pJe88KlGq/o7Ht+57TfUOrXnoLfnZ3PPYNxr+7l8cZ8NSk2nO
W88AgK8FIk0JSUpqVU71HzCpP5/Nhk6s0AWdz6OU0LtLWSvP950bm6r4ypSl
u3hf1P5trwqr1O1HB/+q4pbkouEDTao2Sb6qe/xmxuV1aS2q9C+f/0C+RTct
tXmN0f9q03tHT+zf+NTc+apbgnlBn2QtfWsb44NOj5MqVi+pJB4APBKINGXd
uo4pphDzf5TSu0ulN+qUWOLJSFTtk8SP549O2H8oLvaY18d97zcb3zn4fndH
i4SZOxsa5CPPtOzJWi0/2WdWZJmNqnL+haJZOySk1vUWLHr92JfyM2uuA6qb
fNDx0cwSdOepNgDwvUCkKVQD/0epvuhMZrmUR3ugaOq6PNV+3Loel9yu6OrQ
H9/buHr5bffd9eACPck0Pv3k6uZOyVHZB6w/wsRnB+Seq1atkvRVyOV1+vPG
Tu19YbE8kaS1b9//M0lrX1z+MvEsRq6TTy15oTlHs6mhVx6sTzb/nOXxAABP
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
/qoIJx/PqNIfbam5gzQVpwodLiFN+RxRKi85m9TsO2ctmvJ6RD5UaJqqeWiz
vf1jspJH/2zy5Csh4eNna+qNSid9/uRCZGwqlvh3KmKuValJmNTsymBLYkHK
qJuyPoeZNGyZLRfj0fKHE6NyTO6TWHebt3jdn1PPrT9RoY9TEHntambJodzd
6IulysPez3JZof5zfeOI6oteW0TPdnl/ndOU+erkmNtq0kbWz6tZ+4fZvMhw
oQodriBN+Vm2KOX1uPyl79IN69V8C49fJmpmKDhNLX0zo5n21e5ffjXxWXMq
wxJ+zGkoM0HVWz6SVhSdPLPX3/G4vQbbiBCJVbDCJkzG21eqp5ZHk3CSNYAl
FwQTpeD7T9vvmZ6mSlkjvnV4vbmWJ0HI+lD692TyifK0k7KkKRltgYXoWd9f
y6uTUb34zoB6O/QCqik9/fLDQhU6XEGa8i2iVCHsG8q0DRtXyvNb0abwuanM
z1rmPZI5R62yqVmmDR1dcj5yvO3es3vTe0cnC05T9syW00jzo4noMm959ubh
+o7AZt6reWhzZu23WadUN29xjjYLBRhNtGuQQOhUQC4HWX12/s6Tub5Fk4ei
mLqm7O+vZRHQLGZ7/ViiMQL5IU4VOlxCmvInolThbBvKpFWqIKHENPU1W84x
C6prVrRlO+BaRq2762nK7MaQYysWcwtCuWXu4ifDM+umcizAFUBLbLtsDMmh
m4RliixPmX3xhyLH+6tfHZDcUtl6+95vNnaP3+TvjjhV6HAJacqHiFKF04um
LBNTNV3n+ZXoxOU0ZeYi1Tah0GPuappS6cX50Uxp5dl6SZh9qJN9ZkuHQjoS
ZGX2EZWE6bB3j5Ya7dxGOWK51u9cTVPq2WV4235yu3nVpDVecvUrVehwBWnK
b4hSRZG/r61FU8sG3GwZFCLlSlNyc+7q6cjNNKVZ6quzr9BZwtKPDv418/Pj
7SvNmqKSdpwx1hPV7e93Z5RmGQ2vzNm8jMq0dJZL/wq7vDGe+/1VLTLk52L4
QJO5vU6tav81/4HXj31Z5EsNG6rQ4QrSlK8QpYqVVjTVPizhij8wnbicpqzd
CXJeF6ZXsKfKhFydm1L9FmpzdTZIbSjjXKk+2Zd6Uls3gyKpJzKLr2yPY+6+
lwxIuZg1abVFXGOY9f3Vxnv3/L4/9dK08aG3njOPm0Mbh+pDFTpcQZryD6LU
LNg6TVX5eSE7y9nWYR2q4DRlTpXcOGLO+Uh+2DrmPDUkJ+47GxpSy0mupinV
cKA257V4Q688mC0sWTtNqX1eZv2dI1+YKuLK2DJGbb2ntnQpKCCZc24LFmU7
sBmypin9MsO5jWavBvlXn7y92JNa38y5KU81oAodriBN+QRRahbkLBaCTlNq
f+HXN7X1Xcq6y631PjlaAaj7dI/ftC93WnZ/M/c1tsrc9djCcqZOZRJ90smc
4qj5x3XmJjUmtYgmJ+vUyd3dNBUflRdliXkOd1Dra3KHrzf32T5nTltJaDE6
UKW9aolATU0b2tc9/e/vnrDX0jsxD6C9lF0bN/tL1CY3KFS9350WBA1mTVoR
vdmzpSl9PbTeaNeQ+pBxdcCt/7M2MVdGmqIKHW4gTfkBUWp25FxjnZhaePxy
8EpqY6fW/e08c1rD+ZoyS4Vz1m4Axgk6sfuwUx2R2VFTksy716b0AxU71d74
hCqbGWl+1DkMxO1JTJ2p5bxjNjZPrBktWPRMy56xqZj8jT81OHBg1d2qMmfd
iOUklV7plHbyshcL5Scvwax6Utvl2O+R7OJuixNxYzUt0eDdiFKZ19+Z0U5t
DZx3zjPVsNSYUEreeVSilBzwrfteU71D5QBGJ67ueewbDX/3L9lmw1LzaUVs
SWxJU7ZmVoMtajnP9holTZnPUuUpgip0uII05Tmi1OzIrz45RQa+05SlnDvr
MtBk39NzF5jRZdmA06qWpdxa7Uhiax2Z2te4tvYrC3/b1LRBf8z5D+sHzUhi
ZmGP5CtzakvfoccMHkZ/b3PjY7VSZjbqrE827ayzfMTaKtO640zmCNV2KonZ
kqVvFjpbYukunrEjc9pGNua+KqoYWz2XauSecdlCWouqOqNUO9+Km5bavMZI
vJveO6o2gFbdEswL+iRr6VvbGB/M8lCpevWCq+L1vRHl3axNXmWZ9qKS32CP
/7+fWALntIp/yZEE7afGVVShwxWkKW8RpUoRgu35tPFec4/grHUyRpGSmaac
T7KxU9Y0ldnRSFXvmLGt3piWkeA09NZzcn43a5JrLc2I5Es2rl5uNvdO3OY/
/OI7A2rf5Hj8qnUTGfOmZp+eP5q6vnLiswPyLLYr9J9p2bN36JI8y77XnrNG
Srl9+/6fybPIl+e9QlPVPsmTytPZ3/2LPeZ8l7yidw6+393RIsNQY5BnH4ra
VycTJvusx6o2fycBzTp/mFrXM46wvATrNogqr2Z7NLME3Xm2LYMc2PZ1T9sO
rHz5kheaE5kquZuP/u+KRol5Q39876lHvq/u/+uPxoI3nes2qtDhCtKUh4hS
JarpOh/wTlP6deuSZyQ8yFlepRTH+53Yv3Hhf/0HuU/6DEOCKuwZPtAkd1D3
ceg4FNdUOlpkUGdb+aq+Q52bN21WhbitBrNASxVi7drxtvzlbv4rd5Yzslr5
Us+rn9Abn1iU1Pj0k3IHfcO+5Gla3WfLli3yaK1J8nRNTRskTcXjo+azqE/t
2KmPQR6kgDdUU9flqfbj1vU4zcx7f3xPXrXkDZVaZXirmzslR2XPafojyIDl
nqtWrVJRM2/puP68crheWKyCjbyhkta+uJyc5TNynXxKDnvuZlNDrzxYn+z/
me+1x9U45TDK0ZPD25qyXQ6gcWz1eCZPevrMmd3/+015RYnNClc0yvBy1OlV
FarQ4QrSlFeIUiWS83UqSsnt8CWvR1SSHKXOql9QIXMI6kEcT5HqYi7zwi51
N/Mj5peYX67+Q2US81/HJaHEZWKqmEpLPYuN48e1JOunCqn6Tntk1Z3AmNmz
faE6dOYgk1NqeS7fswxguuuxr9XNW5xrH8DkC1FfqF2fVs9lfQrz4NteqV2y
0KvAiinrO5Vl/Am3Esk3sUSb7T2qTlShwxWkKU8QpUonp07rMt+6kYJ7SCJE
VBgbavpFvdGE3N3L01S9U6U6Mo1u+8nttVk2E0T5UIUOV5CmKo8o5QZt4fHL
qS7obcNDUZYtqpjRiECf1Xm1263kc7P/DbNNQbmDur7ga5ToV+bpYEUVOlxB
mqowopQr9E5TXedTF/TtO0eUqmbGuz+qtuT7enNfsWuFmcbbV6qLH42tgctO
za3J0+XZwg9lQBU6XEGaqiSilIvS+nYevsSf81VOPxVq4wdW3X1nQ0PNyuzX
6xX4aKfbVzd3OuyS7DptXNWu16zZN6zNvh87Zo0qdLiCNFUxRCkXybnSWoK+
8Phlr0cEvzixf6OEk1I28zXrusudbfTHv9jz4ILvvvhOge3f4T6q0OEK0lRl
EKVcJL/01o1ErSXoHRH7xVyoTmqNL0CLZZzBPUcVOlxBmqoAopTr9L6dli7o
Y1MFbg4LINimBgfMTZxdQRU6XEGaKjeiVDnoJejtqb6dTEwBoafaz97Z0OC8
udJsUYUOV5CmyoooVSa2EnR+DQIhJjlK7aOdazvL2aIKHa4gTZUPUapMbCXo
8odqgOpkABTH2Nv6mZY9Tz3yfbVxT75tE4tDFTpcQZoqE6JUmWSWoGfuJwIg
TNRuOCPNj6rNml2fm6IKHaUjTZUDUaqsvnXsinVuaiz33mcAQuHi9hX6hoy1
ta6nKarQUTrSlOuIUmUlwYku6EC1kR/zsTeeKFPdFFXoKB1pyl1EqQqgCzpQ
hcqXpqhCR+lIUy4iSlXA2FTMutnxt45d8XpE4TczFTmxf+O/v3siOnGVgv9Z
8OcBnBoc2PvGprVr1y55ofn1TW17h2b3h8n0xGcH3jn4/u49uzuPDJb1p7F8
aYoqdJSONOUWolQFyK+7jkjMVoLun9NTyMQiJ7o7WtSFVPJbYs49G4Y52xTD
twdQBmY2HLizoUGVdtfX1ta81DNZTKLQxns3/XyO2bhAf5C5jbZ9ouW5ent7
Bz/tP9zXL/L+e/zsX7L9RJcvTVGFjtKRplxBlKoM+XW3bGDC2gW9LzrDSl95
XN31wO3qbJs41T70FvOAxfDrAYydWve382RIkp1kPBOfHVjynQV1tbX6bd7i
96PxAn+gJEq9ePt8/XHW7Bu/OfPxP/+NepCa5tSeg/IDO7J+niodL+Sm33P+
A9nGUNa5KVb6UCLSVOmIUpWk7yljmZviz8kySex2FzvV8sO5qsmPX8JAQPj2
AI63r9RDy7zFHZHEfkzT3S/XG2Gmfm6j/HlS0M+UNr7tJ3pWbJizdih6Q6Jj
12NfU1HHmqbkCEwNDhz6w0eHDn3w0Ucfffjhhzn+Vfb8vn9M0xzHQBU6/Iw0
VSKiVIXpF/S1pfaU8Xo44XHr8PofNB+JxWLmOUXND6jL0vWzpD/CQID48QBK
uqu5w5iGWt4zmfrwXz7ctXnT5r1DhW4rcHn/GjXj9PzRRO/cic8OPPXI95e8
0Jy+0udm9xKq0OFnpKlSEKUqTG+PYClBrzl8yesRhYVxkp1zz4ax9JOp9bJ0
X4SBoPHdARxsUWtq9Xc8bklTmpZlOshZMpI1zFnbF9XDkvxgyperHpvlm+Gh
Ch1+RpqaNaJU5cmvbtueMl6PKAzkDNi/+t7b7rurZumbmad7f4WBAPLXATzx
ZqJcPC1NFefW4fVqYqrmpR5XB5cHVejwM9LU7BClKi9zT5mOCHvKuGC8fWW9
UQBc89Bm0pTr/HMA5SdI3mtV7C1p6v3o7B5m+uNna9QEl/w5E4vF3B1kDlSh
w89IU7NAlPLKwuOXrSt9Y1OxsPw5Oa2a/2zetLmpacPrm9o6jwxO5toxR2/y
I3czCoD1kuC+Q53yhXLb0NE1rBV6WZYYeus5df2+ftHZP647fvYvsdMjp8+c
MffrsYYBtQ4Yi5yQoZpPJ2PI8XRyZxmbef8cNcYFSDtK8lBfXP4y9xfI/eWe
aoRyxNQw9g5dSr8G/6rcbff/flONUHVeyr5ilTrycgfboZDxZH5ViQewqGOS
7Ttn5kJE3tPR0ZHPXn1ADaZu3mJ5mfJ2y5fLsOVHqdAnvHHkqbnz9TQ1/+Gt
Y5WLUnHLkXz+KFXo8B3SVLGIUh5Ku6Bv19kQ/PaTs7bkmQcXfFflmURNS+JS
8YdffGfAeueZqcjQH9/buHp58oS4/P1o/Gb/G0u+s+DOhgbzMvP6uY2Fzdrp
kwzq+n3zZl6ovmxgwp6mVrTJaVpGaw418SXzH17356jD02nj7eueNgeWenV3
PP76sS+LzQ/yMuUkrp66Pvlo8u+9j7yoB5I/vicpQmJbX1Qv3ZG4cmL/xqce
+b48u5qEMUvB1W3diJqX0YYPNKn+APJQy5YukTciMU33j+t6JlOhVF2btu+1
5348P9FVSZ5oqOkX5kjMgdnespIOYE6Ff+fII4+sn2c+o/mv9U2RtztH3zb5
lGrR2XWoWw5CYtgLFj3TskeOvHxckm1RjapmRRtpflSNeekHF1x8XKrQ4QrS
VFGIUh6S7BS6C/qmVcGSnPS/95uNxsVQmh6Zmn5hnp1rVu4xWz6q1j2p06Kc
zv71ueQJ9IE6ywlaryefytPXVJ0iuzta1ADkq76y8LfqzKjHkks31N3MMFC3
olEFOf2JVjRaY1jD3/1LRuOv0T2PfUM9puScSxdH9HhjxCF1+/VHY4UfplSh
ztI3h6I3VJBQx0dNrJlR8MnP9Y4Etn6SEurMFGFdKkotca7cox5WEqC8I+qD
lmN4tfuXX7U9gnpex6ZJf7/7tDXnz/YA5lbcd46avZQ3wmzaWTdvsWShw339
EpDkZr7dzrTxlpo7bHmsPhne9OcygmLhb2iRplWUTUXB+Q/L4I+f/UsRU2rZ
UYUOV5CmCkeU8lbaBX3tYbigTyKBOqXKiS95MZ2m+hSpeY/EnEayQ7V2fVrO
mHJCNE/Eannu3WtT8ilrayP51Jqh67mffWZGnb61j//5b6yTJ8mPJ5hhQN3k
3G2ceadjkRObfj7HHOTSDy5Yvko/16sopUJC4pKxiz1qLkWFnELrdib7ErNS
cxv1V6ofCv1oyCFKHYe5jZID/2PnTglFcuYd+uN7amJKQqa6g5x8JTcu+c4C
9b/6wZnse3ruAnV2lv9VZ1L93xtHVFNK8+P6C7igzwra+n4veaFZxiOfklAq
D2U51z9gXQKb1QF0+zsnufanmk3J7dv3/0zN4xUWIfSoFjs9IgHGPIY1r3Z/
cfnLyMiQfDA6cbWcaWpULWXu2Nm6a8fbknwk/zQ1bdj03lFXnpQqdLiCNFUg
opTn5EQZqgv6RvaaKyZO9SdX1dxOraVQRP22v3V4vTkNcu/6rvGbifCj/5t8
TD1lbR1UqSMfS99FpzJpaxj4QfORtPPXyF5JR2okX2/uM8PAzf43VLQwU4oi
/z30yoN1ReYHs3BaTRalPhE79btvJvpsS6hQE3HqOn19bav5UXMupWbNvslk
wZJexKXqpk68mWU2KXVA5u88qQauEqZ1udD4VCLA6HeZ7FMNxhPj+bfDpRzA
PIr/zlHk8f/6xv9Tm7ymT9JsgfnB7H5gJlv1yObkZ1l3dzK7N5g5X+Vzt65A
oQodriBNFYIo5Tn55SknDtsOfYG+oE9yhTrdO/Ul0KdfJDWZ1UE1K9pS9xls
SawWGXVTaW4cMQNGwWfnQtNUzUObJbmlD3N81wO3JxbLkh2w5cT68bM19Ub5
Vrd8wYVIdOLqFYOcsNRSlBk58o5Q7qCmuWrt+9zph0iOoTlyW6csa/JZ9+fU
YUqkgrief8yKqfRrxKbNA2I7huahUFHEPnhLPLPOvBV7APOa/XdO+kuYTYcE
43uvNr2VetBRhQ5XkKbyIkr5g32HPnVRldejmq3kvEqu06jlPio4JU7fyTOa
wwnRWKXK3C4tp4LT1NI37WEgWVCU9iqSia7WUmhkreky/zuzWagDbbzLmGlx
DA/T3S+bY7N+ytozUwUbp28VTb+Ub89udRGc+pCqJVOVV5nHMFUBld5I3Byq
2mzFdoeiD2BupXznlJymzBVGee8S15MGH1XocAVpKjeilH/oF/RZ6qaCPDGl
qcvMc54TNbP6SJ0T3702lfhMvjRV3Nm5iLmpzM9e7UouKplPp51uN6fONnR0
yanK8SYxppC6F9VZ1HFGSA9IxnSQmvaxBbM8ySe5j55aM4ob10ue2L/x6bkL
6i2XvGVLU1miiH7RWeaEWLEHMKfSvnNKTVOJh9WPzKvdxX6xb1GFDleQpnIg
SvmKfkFfe+qCvkD/6tPGe1PVvHqBkwNVqGNeRZVajfJXmrLvdXuz/43EOtSK
tmxFzlpGrXsW+t3Mwml5zB8d/Kv106m5qbV/yDbsvLFBctS+1xJTLt/7zcbB
T/vNavMi01RqPDLUxiMZLSYKO4B5jkgp3zklpqlY6npJeSMC/QNoRRU6XEGa
yoYo5Tc1+85Zd+gL9tzUxR51TtRTR7JGOpO1gDlV0e3vNGUOT13178IZarLP
XLeSl2wp1xlVK2uqGNv2/VBIbFCdFmqTl0b2XVJdNKezzRflfkx5pWaSrJu3
2KwPdzVNlfadU2KaSj613F4/lqdvaoBQhQ5XkKYcEaX8Rs4a1gv6At0ewXYZ
fo7yIedzX0DSlFrtKj306o9wsUctb6nmn5veOxoZGTJbJ/36o7EcHcizxwbL
utWKtlSH9mSl1izmpszLLa13cDFNlfqdU1qaUq+uNtm8NMh/zqShCh2uIE1l
Ikr5jfyW6x6/aS2aevLzU14PqjTJOuF6Y4eOjojzFjnmek1adyZ/pylVN5VI
KRkLcNav7f7lV1WfgdzjS1wLf7HHfFgzrX3vNxv3Djnn6kJW5ZLzSMvTL9DL
mnDyPqZ5h4Y5ayVv2D7oykpfSd85paUps+lEmXt1VhpV6HAFacqGKOVPafsd
7zvXbXRZ8npQs6bXCZvttTPLgZJS28vWvNST+nD50pTDFfcFhwGzvZWlTNq6
4GWjrg57/uhEQe9j7NSmn8+pW7Do9WNfyllvZipy6eKIdn06x2RCvtiQasok
2SD9UrtZp6nU+2VtrVD0AcyltO+cktJU6nmz1WsFFFXocAVpyuqLy1/W7P9f
RCn/MdojWPY7DsPV2SfeTPWsfmjzcOYvcqNTojonWjsmuZymki2P9LOkpWtT
ZqVNZk+ntDDwUk+y5lyfdDJLoFU9UtoTapoqLJdXnRnenOib1Ki95PRu8BY5
viZvmjKX8xrmrE3fd3i05Ydz63Ne0ycp0aHflPl+Gb3QHdNUYQcwn1l/55SS
pmKnzPak6e25/EKO3l8+3LV50+Zie6RThQ5XkKZM+qyURKl319fs/J35L1HK
D+T3pG2/Y69H5IrEBII6Q9k2d5PQISe+xPSCpbG2Lr2DYtpXWXo9FT6BYHbU
lDOsvlWKxIDYqfbGJ1SlsXnVv8NeMOlJTEUjvW92snwoMU5je9yxqdi1yWtT
gwOq3km+at1I/vOXGb1qkxfcyU3+6omdHpF/oxNX5WEdk5XZvVP1VciQmJtS
41yyP3HwY5ETanjWIz9zIaKqqlJpyoh21odTnRzqkxNT1t7gxR7AAsz2O8ea
pgrf2cd4zPjI3sSOz3c87suZYc28oFK/pmDX2cLbs1OFDleQppRElGJWyq9s
7RG8Ho5L0nfWe/GdAfMUcHn/mtpky0rb5IO5OYv1MvyEE2+alUXyhfl7Y6Y3
upQv/MrC3zY1bdA3sDNqcqwTNbXGlVzWk5R2ut3cGEVVCqnBWJtE1Vq2x7U2
8JQAU9gZOdHEKfNBzC135SMStIaiN1IzEtq4hKL6ZGfypR9cyHjYadWw3dzA
t25F41OPfN8cnnlrfPpJ+YhkJ9vOMnXzH0jNgWjjKpGq9yvtsBtvcbEHML9Z
feeYV0GqW6HLrOp4JcvMMlt7+YO+EJnaS6iYQVKFDleQpuLMSgWBnqZC0h4h
Ifmre3TvC4vNhRs5p69du9Y8rdes2Wc9IU58dmDpwnvMc6i6PdOyZ+/QJW28
d99rz5kfVOfTb9//M3Wezf13urWFUSJaGBVKQ289J09nTRdqgqh7/KZ8ycbV
y+stqcNY4XpYnm4ysYHaVesmMtZHqJu32LrFW/4DZYkcmT3V1f4pxgbHifgn
x0FeTr3lzvVG3FJ7Iju+avUgajccOZhmx+/Eu/CP61Tjfdv+xUameljiltrK
uc7YLlDer+Q35/SJ/RvNbgZFHcByfOfsfWOTWc+WGv+Kxtc3tcl48r4d5rtZ
+A44FWZuuFPcsilV6HAJaYpaKf/TV/rC0h7B0dTggGQAORXWGcHg3kdeXN3c
2XfphvUcJ+doOSdu2bJFToutSXIWaGraYFzXNiof37Xj7R2tO9SnduxslY9s
eu9ovnOKvrObOrkvMix5oVkt5fQd6ty8abM616jHlAeUk69eBxU7ZT6d+a8q
WVFnMbX6JgNub3xiUZIED7mDWpsr8MioxxlZP0+d+tUhSstmyUCln0NX7pmZ
isjA5LXLOOXwJA5F6w41cts2f7HICQkk1rFdUQ0ZJvvkaMgbIXFU3oixjBIy
CV2dRwblLZO0WWfMa8lBO372L9YgJMdB0pQ5DHUMCz+ALn7nyKPJGyHfJ63p
5J2VccmTytud73lSZWaudL0oi8k+9c0mByHbpY6OqEKHK6o8TTEr5X/yK64v
aklT7cNFzWz4n9rcRE7E6jSqppKyVVmrT9k+qCVZP1VYs/HEPc2HVV+lhqE+
Yp5iUpuwGP+hns781/F6NPXI5sgdB593bENNv7jtvrv0avZoYjyxWEy/oO/6
tH5934WIShRyH0v/pbTx5DgU5tKkLbg6DjVz12P18tXX2r4nM0/NsziAeQ9O
Id855ntqG14R70Vy/0dr5wdfsX3HFpWLqEKHK6o5TVErFQjyK07+0rSmqczG
1wgrVar07ft/Zmu+bQYS8xw6sn5eQdsol6DELYMDLHnhQ2ZZewhQhQ5XVG2a
YlYqKORc+fzRiZpdZ81AFaY+zMgl2alSYlK+6930avmaFW0FXxY3G9WTpmam
ItGJq+ZsW6LG3mkHnxCgCh2uqM40Ra1UsHzr2BVr3dQsFowQQJq6RLG+tva2
++7KVp6tL/xFTqgOV+v+XN4TYrWkqeRM1NIPLuiBKtlpqqjS7gChCh2uqMI0
xaxUsEhwSms2te9c+H6fI5P+Lk/2mZfdqSYGm947evzsX6ITVy9dHJFb36HO
jauXqztYuwSUSb4eViFhNshSHd3Vq66f2xjWAEkVOlxRbWmKWqkgSmuPEJpm
U8hPG3orre2D2W/KulufnOhtVVVlGcp4b8sP55rPu2T/6VnUjQfCrf+z1tyV
Rh1/SY9G94lwogodrqiqNMWsVEDV7DtnlqCHrz0CstNUm4WnHvm+rcuW2S5p
03tH03fZK4MbR9b97bzMtgx1C/SL8UM2Y6MnCm1cQtSDCxL9UVVn1DBdRWtD
3RRcUT1pilqpgJrUNGvR1LeOlbXQGH6k18ldiAz98b2+Q51dh7o7jwyePHlS
9a2qxBlQG5fnPdzXLwOQp1b/3dvbK/+xd+hS+EqJzG0QtevT6tWF7AVaycvc
vm2bSlNejwXBViVpilmpgLI3m2rTm015PSh4wNqdydYIq9zPq/7D1s4os8FX
yFgPdYhdm7wmaWpH645YLLRLmaiMakhT1EoFl/xK3zpmaTa162xHJITXaAOo
PPn1cvrMGYlSO3a2ej0WBF7o0xSzUgGnrRm6TrMpAOXQ29sraergwYNeDwSB
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
SPj/AWONa9g=
      "], {{0, 674}, {794, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {794, 674}, PlotRange -> {{0, 794}, {0, 674}}, ImageSize -> 
    288],StyleBox["\"Figure 1.57\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.57: Symmetric about \
y=x",ExpressionUUID->"9397924c-a4fb-4083-9f09-475cb92fb6ba"],

Cell[TextData[{
 "\tThe explanation for the symmetry comes directly from the definition of \
the inverse. Suppose that the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "b"}], ")"}], TraditionalForm]],ExpressionUUID->
  "6ec29c82-a655-4cf6-a692-1c7ed54d3baf"],
 " is on the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0449adb1-3509-46a5-b924-758c38340f6a"],
 ", which means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"f", "(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f42b2058-c89b-42eb-b4b3-c6c438c93911"],
 ". By the definition of the inverse function, we know that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "b", ")"}]}], ","}], TraditionalForm]],
  ExpressionUUID->"138ec116-0bb0-476c-b857-92b6756aaf1f"],
 " which means that the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"b", ",", "a"}], ")"}], TraditionalForm]],ExpressionUUID->
  "32dcf9d3-ff6e-47a0-823d-f6a0da91f94e"],
 " is on the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"283175b2-4c49-4303-80ba-5120f4e1e966"],
 " This argument applies to all relevant points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "b"}], ")"}], TraditionalForm]],ExpressionUUID->
  "c42ea9fb-9873-4800-baf0-d92c49f47b4f"],
 ", so whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "b"}], ")"}], TraditionalForm]],ExpressionUUID->
  "29c2760c-2efc-4072-a780-0848c32f3671"],
 " is on the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ","}], TraditionalForm]],ExpressionUUID->
  "4d795219-ab46-4117-b058-ef77ab37be3a"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"b", ",", "a"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9ccf8bc0-7914-49be-9bca-237e37e9cbdc"],
 " is on the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "."}], TraditionalForm]],ExpressionUUID->
  "5d2c50dd-c1ec-4516-babc-57c7361d3904"],
 " As a consequence, the graphs are symmetric about the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"x", "."}]}], TraditionalForm]],ExpressionUUID->
  "04e06f03-8301-47d7-a852-e539616277fd"]
}], "Text",ExpressionUUID->"78e8b738-de45-44f6-af8c-c8ff813a8254"]
}, Closed]],

Cell[CellGroupData[{

Cell["Logarithmic Functions  \[RightGuillemet]", "Subsection",
 CellTags->
  "Logarithmic \
Functions",ExpressionUUID->"99499ec2-5672-4c5a-bbb7-83013f50055a"],

Cell[TextData[{
 "Everything we learned about inverse functions is now applied to the \
exponential function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["b", "x"], "."}]}], TraditionalForm]],ExpressionUUID->
  "9514b560-885c-44b4-baf0-af67068e6322"],
 " For any ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", ">", "0"}], ","}], TraditionalForm]],ExpressionUUID->
  "91b31af5-11e3-4d5a-b2ee-ace3209803a6"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "94a7bc9d-8b0c-4c30-b6b1-a4d92d2ee3c5"],
 ", this function is one-to-one on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], ".", " ", 
     "Therefore"}], ",", " ", 
    RowBox[{"it", " ", "has", " ", "an", " ", 
     RowBox[{"inverse", "."}]}]}], TraditionalForm]],ExpressionUUID->
  "15be4419-08fd-4f8e-987b-ae776d8a13c7"]
}], "Text",ExpressionUUID->"6d0788f4-e813-4c4e-8972-5e4fe0afde32"],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["Logarithmic Function Base ",
  FontWeight->"Bold"],
 StyleBox["b",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\nFor any base ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", ">", "0"}], ","}], TraditionalForm]],ExpressionUUID->
  "4c885101-fbdc-4bc9-937e-fc040bfc60c6"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]"}], TraditionalForm]],ExpressionUUID->
  "ca3c0af2-3a23-4d85-a181-6ae2768fde2f"],
 "1, the ",
 StyleBox["logarithmic function base ",
  FontWeight->"Bold"],
 StyleBox["b",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{
      SubscriptBox["log", "b"], "x"}]}], ","}], TraditionalForm]],
  ExpressionUUID->"2bfdcfde-feb8-4653-86b4-0c64bc97e5c8"],
 " is the inverse of the exponential function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["b", "x"], ".", " "}]}], TraditionalForm]],
  ExpressionUUID->"38f39214-b58f-4d27-b04b-73b1bee6c3df"],
 "The inverse of the natural exponential function with base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "e"}], TraditionalForm]],ExpressionUUID->
  "b72bee8a-34a1-401f-8ba1-37019f64a6cb"],
 " is the ",
 StyleBox["natural logarithm function",
  FontWeight->"Bold"],
 ", denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"ln", " ", 
     RowBox[{"x", "."}]}]}], TraditionalForm]],ExpressionUUID->
  "e48c64f5-9aab-4296-b515-a5eff415064e"]
}], "Definition",
 CellTags->
  "DEFINITION Logarithmic Function Base \
b",ExpressionUUID->"86f682c5-f385-4213-9b29-637bbac91251"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"539ef4d4-8338-4cd7-80f2-724d38e403b5"],

Cell[TextData[{
 "Logarithms were invented around 1600 for computational purposes by the \
Scotsman John Napier and the Englishman Henry Briggs. Unfortunately, the word \
",
 StyleBox["logarithm",
  FontSlant->"Italic"],
 ", derived from the Greek for reasoning (",
 StyleBox["logos",
  FontSlant->"Italic"],
 ") with numbers (",
 StyleBox["arithmos",
  FontSlant->"Italic"],
 "), doesn't help with the meaning of the word. ",
 StyleBox["When you see ",
  FontWeight->"Bold"],
 StyleBox["logarithm",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", you should think ",
  FontWeight->"Bold"],
 StyleBox["exponent",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Callout",ExpressionUUID->"ec838f54-32fd-4836-b693-d88c20887121"]
}, Closed]],

Cell["\<\
\tThe inverse relationship between logarithmic and exponential functions may \
be stated concisely in several ways. First, we have \
\>", "Text",ExpressionUUID->"cc7bc7f8-6aa1-478e-9952-f1dc37f8d48b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{GridBox[{
         {
          RowBox[{"y", "=", 
           RowBox[{
            SubscriptBox["log", "b"], "x"}]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"Center"}}}], "   ", "if", " ", 
       "and", " ", "only", " ", "if", "    ", 
       SuperscriptBox["b", "y"]}], "=", 
      RowBox[{"x", "."}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"7b0ba9ed-1346-4a8a-a40c-b3ade237a43b"]], \
"Text",ExpressionUUID->"08115b5e-89cd-4f19-b48d-429f4cfdc637"],

Cell["\<\
Combining these two conditions results in two important relations.\
\>", "Text",ExpressionUUID->"eb883997-420c-4ae1-a49a-005ded292e43"],

Cell[TextData[{
 StyleBox["Inverse Relations for Exponential and Logarithmic Functions",
  FontWeight->"Bold"],
 "\nFor any base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "0393fa67-e3c4-4e43-a8cd-e3ab9e02b070"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "3f699f76-ab59-46df-b49c-0e41a179ffd5"],
 ", the following inverse relations hold.\n",
 StyleBox["I1.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", 
     RowBox[{
      SubscriptBox["log", "b"], "x"}]], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"208e8622-1bac-4d43-b199-9ab3605703c0"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "2fe67e75-d2de-42ad-b5b6-3e4707ccda54"],
 "\n",
 StyleBox["I2.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     SuperscriptBox["b", "x"]}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"2755dd9e-0039-42fc-b32b-46c45d9079aa"],
 ", for real values ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e38f8a3c-2f49-4a0c-a68f-333adf34a407"]
}], "Important",
 CellGroupingRules->"NormalGrouping",
 CellTags->
  "IMPORTANT Inverse Relations for Exponential and Logarithmic \
Functions",ExpressionUUID->"d91a78bc-5830-44b1-9223-286784eee4f5"],

Cell[CellGroupData[{

Cell["Properties of Logarithmic Functions", "Subsubsection",
 CellGroupingRules->{
  "SectionGrouping", 
   Inherited},ExpressionUUID->"021f6e05-1b2b-435c-8825-0c12dc76f594"],

Cell[TextData[{
 "The graph of the logarithmic function is generated using the symmetry of \
the graphs of a function and its inverse. ",
 StyleBox["Figure 1.58", "FigureFontText"],
 " shows how the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     SuperscriptBox["b", "x"]}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "b"}], ">", "1"}]}], TraditionalForm]],
  ExpressionUUID->"6fec29f3-4672-4c9f-be81-1ea37e961748"],
 ", is reflected across the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
    "x", Cell["",ExpressionUUID->"c0004722-1bfb-4a8c-acd3-58dbe828c06b"]}]}], 
   TraditionalForm]],ExpressionUUID->"bd603e53-c4ab-4e17-aa9c-a80ea4bbfea8"],
 "to obtain the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "b"], 
     RowBox[{"x", "."}]}]}], TraditionalForm]],ExpressionUUID->
  "018d44e7-b39e-4abd-94aa-53174544825d"]
}], "Text",ExpressionUUID->"a84f1759-d58c-419d-b0c4-c07303247cd7"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"00cb95e0-433b-499a-874d-cba88803c12c"],

Cell[TextData[{
 StyleBox["Logarithm Rules",
  FontWeight->"Bold"],
 "\nFor any base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "3e5eb8ca-5a90-4686-a9e3-ed2d2612ac38"],
 " ( ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "dcec04d2-a396-4cb5-976c-538d2c7e19be"],
 " ) and positive real numbers ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fede3387-3f4d-4edf-ad1b-d76d9b9618d7"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "27999b94-3589-4b97-9a4c-f0cba7edcdee"],
 ", and real number ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]],ExpressionUUID->
  "c065a99a-0914-4783-acd6-6669cd79cf0a"],
 ", the following relations hold: \n",
 StyleBox["L1.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "x", " ", "y"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], "x"}], "+", 
     RowBox[{
      SubscriptBox["log", "b"], "y"}]}]}], TraditionalForm]],ExpressionUUID->
  "59726fc5-b98d-4cba-ac1c-87f0d387e11e"],
 "\n",
 StyleBox["L2.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     FractionBox["x", "y"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], "x"}], "-", 
     RowBox[{
      SubscriptBox["log", "b"], "y"}]}]}], TraditionalForm]],ExpressionUUID->
  "1459ed4d-dd5b-411d-9e90-93ac73155484"],
 " (includes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     FractionBox["1", "x"]}], "=", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["log", "b"]}], "x"}]}], TraditionalForm]],ExpressionUUID->
  "7a6324e5-a12b-4594-bc44-21c5dea5e6bc"],
 ")\n",
 StyleBox["L3.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     SuperscriptBox["x", "z"]}], "=", 
    RowBox[{"z", " ", 
     SubscriptBox["log", "b"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "787b9caa-c1a4-4322-9dfd-dfd06053480e"],
 "\n",
 StyleBox["L4.",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "b"}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"8b89c010-f634-438a-920d-d1e372c8ad96"],
 "\nSpecifically, these properties hold with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "e"}], TraditionalForm]],ExpressionUUID->
  "270250ef-f1d7-476c-a432-376c332be7ca"],
 ", in which case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "x"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "e"], "x"}], "=", 
     RowBox[{"ln", " ", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "45429f4e-7215-4fbe-84ba-99f188898b75"],
 ". See Exercises 92\[Dash]94."
}], "Callout",ExpressionUUID->"852761f4-bb7a-4442-a8ae-acd1892c144e"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 0, $CellContext`b$$ = 
            4, $CellContext`steps$$ = {1}, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`steps$$], {1}, ""}, {
               1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}}, {{
                Hold[$CellContext`aValue$$], 0, 
                "\!\(\*\nStyleBox[\"u\",\nFontSlant->\"Italic\"]\)"}, -5, 5, 
               0.1}, {{
                Hold[$CellContext`b$$], 2, 
                "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 1.1, 5, 
               0.1}}, Typeset`size$$ = {432., {230., 235.}}, Typeset`update$$ = 
            0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`steps$35808$$ = 
            False, $CellContext`aValue$35809$$ = 0, $CellContext`b$35810$$ = 
            0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 0, $CellContext`b$$ = 
               2, $CellContext`steps$$ = {1}}, "ControllerVariables" :> {
               Hold[$CellContext`steps$$, $CellContext`steps$35808$$, False], 
               
               Hold[$CellContext`aValue$$, $CellContext`aValue$35809$$, 0], 
               Hold[$CellContext`b$$, $CellContext`b$35810$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{$CellContext`b$$^$CellContext`x, $CellContext`x, 
                  If[$CellContext`b$$ != 1, 
                   Log[$CellContext`b$$, $CellContext`x], 
                   None]}, {$CellContext`x, -10, 10}, PlotStyle -> {
                   If[
                    MemberQ[$CellContext`steps$$, 1], {
                    Thick, $CellContext`bcR}, None], 
                   If[
                    MemberQ[$CellContext`steps$$, 2], {$CellContext`bcG}, 
                    None], 
                   If[
                    MemberQ[$CellContext`steps$$, 3], {
                    Thick, $CellContext`bcB}, None]}], 
                Graphics[{
                  Text[
                   Row[{"base: \!\(TraditionalForm\`\(\(b\)\(=\)\)\) ", 
                    $CellContext`DisplayNumber[$CellContext`b$$]}], 
                   Scaled[{0, 0.25}], {-1, 0}], 
                  If[
                   MemberQ[$CellContext`steps$$, 1], {
                    Text[
                    "\!\(TraditionalForm\`\(TraditionalForm\`y = \
\*SuperscriptBox[\(b\), \(x\)], \\ b > 1\)\)", {-4, 1.5}, {-1, 0}], 
                    $CellContext`ClosedCircle[{$CellContext`aValue$$, \
$CellContext`b$$^$CellContext`aValue$$}, $CellContext`bcR], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((u, v)\)\)", $CellContext`bcFOR, 
                    Background -> 
                    White], {$CellContext`aValue$$, \
$CellContext`b$$^$CellContext`aValue$$}, {1, -1}]}, Black], 
                  If[
                   MemberQ[$CellContext`steps$$, 2], 
                   Text["\!\(TraditionalForm\`y = x\)", {3, 3}, {-2, 0}], 
                   Black], 
                  If[
                   And[
                    MemberQ[$CellContext`steps$$, 3], $CellContext`b$$ != 
                    1.], {
                    Text[
                    "\!\(TraditionalForm\`y = \*SubscriptBox[\(log\), \(b\)] \
x\)", {1.5, -4}, {-1, 0}], 
                    $CellContext`ClosedCircle[{$CellContext`b$$^$CellContext`\
aValue$$, $CellContext`aValue$$}, $CellContext`bcB], 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`\((v, u)\)\)", $CellContext`bcFOB], \
{$CellContext`b$$^$CellContext`aValue$$, $CellContext`aValue$$}, {-1, 1}]}, 
                   Black], 
                  If[
                   And[
                    MemberQ[$CellContext`steps$$, 3], 
                    MemberQ[$CellContext`steps$$, 1], $CellContext`b$$ != 
                    1.], {Gray, Dashed, 
                    Arrowheads[{-0.02, 0.02}], 
                    
                    Arrow[{{$CellContext`aValue$$, \
$CellContext`b$$^$CellContext`aValue$$}, \
{$CellContext`b$$^$CellContext`aValue$$, $CellContext`aValue$$}}]}, Black], 
                  Text[
                   Framed[
                    Pane[
                    "Graphs of \!\(TraditionalForm\`y = \
\*SuperscriptBox[\(b\), \(x\)]\) and \!\(TraditionalForm\`y = \*SubscriptBox[\
\(log\), \(b\)] x\) are symmetric about \!\(TraditionalForm\`y = x\).", {
                    2.5 72, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                   Scaled[{0, 1}], {-1, 1}]}]}, 
               PlotRange -> {{-5, 5}, {-5, 5}}, AspectRatio -> Automatic, 
               ImageSize -> 6 72, Ticks -> {
                 Range[-5, 5], 
                 Range[-5, 5]}, Method -> {"AxesInFront" -> False}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}], 
             "Specifications" :> {{{$CellContext`steps$$, {1}, ""}, {
                1 -> "plot \!\(TraditionalForm\`f\)", 2 -> 
                 "plot \!\(TraditionalForm\`y = x\)", 3 -> 
                 "plot \!\(TraditionalForm\`\*SuperscriptBox[\(f\), \
\(-1\)]\)"}, ControlType -> CheckboxBar, Appearance -> "Vertical"}, 
               Delimiter, {{$CellContext`aValue$$, 0, 
                 "\!\(\*\nStyleBox[\"u\",\nFontSlant->\"Italic\"]\)"}, -5, 5, 
                0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`b$$, 2, 
                 "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 1.1, 5,
                 0.1, ControlType -> Slider, ImageSize -> Small}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {574., {249., 255.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({$CellContext`b$$ = 4, $CellContext`bcR = 
              RGBColor[0.92, 0.11, 0.27], $CellContext`bcG = 
              RGBColor[0, 0.6, 0.4], $CellContext`bcB = 
              RGBColor[0, 0.63, 0.85], $CellContext`DisplayNumber[
                Pattern[$CellContext`num, 
                 Blank[]]] := 
              If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                
                Round[$CellContext`num, 
                 1], $CellContext`num], $CellContext`ClosedCircle[
                Pattern[$CellContext`coord, 
                 Blank[]], 
                Optional[
                 Pattern[$CellContext`color, 
                  Blank[]], 
                 GrayLevel[0]]] := {$CellContext`color, 
                AbsolutePointSize[7], 
                Point[$CellContext`coord]}, $CellContext`bcFOR = {
               RoundingRadius -> 5, FrameStyle -> {
                  RGBColor[0.8, 0, 0.4]}, Background -> 
                GrayLevel[1]}, $CellContext`bcFOB = {
               RoundingRadius -> 5, FrameStyle -> {
                  RGBColor[0, 0.4, 0.8]}, Background -> 
                GrayLevel[1]}, $CellContext`bcPBS = 
              BaseStyle -> {
                "Text", LineIndent -> 0, 
                 LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                 Automatic, Hyphenation -> True, TextAlignment -> 
                 Left}, $CellContext`bcFO = {
               RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], Background -> 
                GrayLevel[1]}, 
              Attributes[PlotRange] = {ReadProtected}, $CellContext`bcBSG = {
               FontFamily -> "Times", 13}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.58\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.58  \[LightBulb]: Inverses of exponential \
functions",ExpressionUUID->"02d37eec-361f-448a-976c-794f39e8126e"],

Cell[TextData[{
 "\tThe graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "b"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "b8c594d4-ef8b-408f-a09a-f5d4e49b9560"],
 " are shown (",
 StyleBox["Figure 1.59", "FigureFontText"],
 ") for several bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "f10241c7-08f3-4149-af78-a8389d3dab8a"],
 ". Logarithms with bases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "b", "<", "1"}], TraditionalForm]],ExpressionUUID->
  "0cff5b3b-b00f-4d4a-afdd-3f219d54c1da"],
 ", although well defined, are generally not used (and they can be expressed \
in terms of bases with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "5d922a91-b0aa-4211-b1ce-646d5305d1ac"],
 ")."
}], "Text",ExpressionUUID->"7192598e-2b41-483e-b320-597872dacb71"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`b$$ = 4, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`b$$], 4, 
                "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 0.1, 10,
                0.01}}, Typeset`size$$ = {360., {180., 185.}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`b$43649$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`b$$ = 4}, 
             "ControllerVariables" :> {
               Hold[$CellContext`b$$, $CellContext`b$43649$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  Log[$CellContext`x], 
                  Log[$CellContext`b$$, $CellContext`x]}, {$CellContext`x, -1,
                   8}, PlotStyle -> {{Thick, Black}, {
                   Thick, $CellContext`bcR}}], 
                Graphics[{
                  Text[
                   Row[{"\!\(TraditionalForm\`\(\(b\)\(=\)\)\) ", 
                    $CellContext`DisplayNumber[$CellContext`b$$]}], 
                   Scaled[{0, 1}], {-1, 1}], 
                  Text["\!\(TraditionalForm\`y = ln\\ x\)", {7, 
                    Log[7]}, {-1, 1.5}], 
                  Text[
                  "\!\(TraditionalForm\`y = \*SubscriptBox[\(log\), \(b\)] \
x\)", {3, 
                    Log[$CellContext`b$$, 3]}, {-1, 1.5}], 
                  Text[
                   Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(log\), \(b\)] 1 = \
0\\ for\\ any\\ base\\ b > 0, \\ b \[NotEqual] 1\)", {
                    110, Automatic}, $CellContext`bcPBS], $CellContext`bcFO], \
{0.5, 2}, {-1, -1}], 
                  Which[$CellContext`b$$ > 1, 
                   Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(log\), \(b\)] x\) \
increases on the interval\n \!\(TraditionalForm\`x > 0\) when \
\!\(TraditionalForm\`b > 1\).", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                    Scaled[{0.6, 1}], {0, 1}], $CellContext`b$$ < 1, 
                   Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(log\), \(b\)] x\) \
decreases on the interval\n \!\(TraditionalForm\`x > 0\) when \
\!\(TraditionalForm\`0 < b < 1\).", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                    Scaled[{0.6, 1}], {0, 1}]], 
                  $CellContext`ClosedCircle[{1, 0}, $CellContext`bcR], Gray, 
                  Arrowheads[0.03], 
                  Arrow[{{1, 2}, {1, 0}}]}]}, Ticks -> {
                 Range[-1, 7], 
                 Range[0, 3]}, ImageSize -> 5 72, AspectRatio -> 1, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               PlotRange -> {{-2, 8}, {-1.5, 4}}], 
             "Specifications" :> {{{$CellContext`b$$, 4, 
                 "\!\(\*\nStyleBox[\"b\",\nFontSlant->\"Italic\"]\)"}, 0.1, 
                10, 0.01, ControlType -> Slider, ImageSize -> Small, 
                Exclusions -> {1.}}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {502., {199., 205.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({$CellContext`b$$ = 4, $CellContext`bcR = 
              RGBColor[0.92, 0.11, 0.27], $CellContext`DisplayNumber[
                Pattern[$CellContext`num, 
                 Blank[]]] := 
              If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                
                Round[$CellContext`num, 
                 1], $CellContext`num], $CellContext`bcPBS = 
              BaseStyle -> {
                "Text", LineIndent -> 0, 
                 LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                 Automatic, Hyphenation -> True, TextAlignment -> 
                 Left}, $CellContext`bcFO = {
               RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], Background -> 
                GrayLevel[1]}, $CellContext`ClosedCircle[
                Pattern[$CellContext`coord, 
                 Blank[]], 
                Optional[
                 Pattern[$CellContext`color, 
                  Blank[]], 
                 GrayLevel[0]]] := {$CellContext`color, 
                AbsolutePointSize[7], 
                Point[$CellContext`coord]}, $CellContext`bcBSG = {
               FontFamily -> "Times", 13}, 
              Attributes[PlotRange] = {ReadProtected}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 1.59\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 1.59  \[LightBulb]: Logarithm \
functions",ExpressionUUID->"25daea73-fce5-4a8a-879f-4d8ffcfd87f0"],

Cell[TextData[{
 "\tLogarithm functions with base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "6ae70c1c-5f21-443a-87b8-c9e63113d7dd"],
 " satisfy properties that parallel the properties of the exponential \
functions given earlier."
}], "Text",ExpressionUUID->"cafc4a84-1943-445d-8c2e-66041b4df74d"],

Cell[TextData[{
 StyleBox["1.  ",
  FontWeight->"Bold"],
 "Because the range of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "bd004be7-6b81-4e41-b55f-f7226b571585"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"f6c8040c-ff45-4fad-89f5-82bc907a7e50"],
 ", the domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x"}], TraditionalForm]],ExpressionUUID->
  "54d3b7e7-79db-4c78-a13c-8f2e984765df"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"326e05ff-4b7a-4ec1-877b-790da6dba4bf"],
 ".\n",
 StyleBox["2.  ",
  FontWeight->"Bold"],
 "The domain of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "d4635971-7e2f-48de-92de-b0d444d5c6ff"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"805d5f3c-aa40-4dd3-9fc6-d1715805cf7b"],
 ", which implies that the range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x"}], TraditionalForm]],ExpressionUUID->
  "f2c085e6-dacf-46f9-8b5d-537b7642ec33"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"39ef94b6-515c-49f5-b2f5-8d03a2e453e8"],
 ".\n",
 StyleBox["3.  ",
  FontWeight->"Bold"],
 "Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "42e1fdb6-35cf-4adf-80bd-c8655e78da5b"],
 ", it follows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "1"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"41f63f96-ac50-4ca4-936c-736db7f33f03"],
 ".\n",
 StyleBox["4.  ",
  FontWeight->"Bold"],
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "0bcd425e-8e50-47b0-9177-aba4a60915b3"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x"}], TraditionalForm]],ExpressionUUID->
  "deb8c5d3-f285-46f3-87ab-440128af4e35"],
 " is an increasing function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "7196fdc9-988b-4da9-8b8b-a27bcd20a4ef"],
 ". For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", "=", "e"}], ","}], TraditionalForm]],ExpressionUUID->
  "3c58a06f-0748-4f41-9142-45b3b43e5565"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "x"}], ">", " ", 
    RowBox[{"ln", " ", "y"}]}], TraditionalForm]],ExpressionUUID->
  "6b6a2d8d-1395-468f-8e77-06c90ab83a14"],
 " whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "y"}], TraditionalForm]],ExpressionUUID->
  "4ea4e9ad-42d6-4bde-ac52-750b32f5df8e"],
 " (Figure 1.59)."
}], "Text",ExpressionUUID->"175372ff-fdd2-48d3-98c9-9f98fe19dfe2"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "6"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"df3379ff-1ab3-449b-acaf-e2530bf5baf4"],
 "  What is the domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SubscriptBox["log", "b"], 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "38a975f6-8180-4c52-9519-a21ddec74d08"],
 "? What is the range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SubscriptBox["log", "b"], 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "3d14b235-9279-4dee-8aa4-296676bf1d53"],
 "?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 6",ExpressionUUID->"160246a5-5a60-4d68-8b9e-5afb2a7687b5"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"f41ff408-0c51-4503-9caf-9b6affaa9eda"],

Cell[TextData[{
 "The domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "(", 
    SuperscriptBox["x", "2"], ")"}], TraditionalForm]],ExpressionUUID->
  "50cce209-36e1-42a6-954d-6b1e7a927015"],
 " is all real numbers except zero (because ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "cd63b522-7a1f-4511-a7c3-f4f7091908e8"],
 " is positive for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "\[NotEqual]", "0"}], ")"}], TraditionalForm]],
  ExpressionUUID->"e2a9bbe1-4b36-42a3-88a7-9fd0cdafdd7a"],
 ". The range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "(", 
    SuperscriptBox["x", "2"], ")"}], TraditionalForm]],ExpressionUUID->
  "2727e335-e20b-45a5-ab59-94a9580034ce"],
 " is all real numbers."
}], "QuickCheckAnswer",ExpressionUUID->"0b86b46f-36b1-41c2-94bf-ec23ed082503"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 5\t", "ExampleFont"],
 "Using inverse relations"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 5 Using inverse \
relations",ExpressionUUID->"38e9ef53-daed-4792-9ae0-c541f3aa6f39"],

Cell[TextData[{
 "One thousand grams of a particular radioactive substance decays according \
to the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"m", "(", "t", ")"}], "=", 
     RowBox[{"1000", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "850"}]]}]}], ","}], TraditionalForm]],
  ExpressionUUID->"36946114-0199-4f53-960f-06e8715a29fc"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "08fdba7d-a5cd-4600-9aea-f3f6ea614622"],
 " measures time in years. When does the mass of the substance reach the safe \
level, deemed to be 1 g?"
}], "Text",ExpressionUUID->"8be1fa8b-7a69-4a02-aa10-ac142eef7d93"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"8b96221a-e477-46e2-8cac-1f5cbe1f4979"],

Cell[TextData[{
 "Setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"m", "(", "t", ")"}], "=", "1"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "solve", " ", "1000", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "850"}]]}], "=", 
     RowBox[{
     "1", " ", "by", " ", "dividing", " ", "both", " ", "sides", " ", "by", 
      " ", "1000"}]}]}], TraditionalForm]],ExpressionUUID->
  "3e3f10bb-d50d-4fb4-9cbe-e1ffc403f980"],
 " and taking the natural logarithm of both sides:"
}], "Text",ExpressionUUID->"0c8e7b73-35be-421d-9197-f1e595cbc095"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          RowBox[{"ln", " ", 
           RowBox[{"(", 
            SuperscriptBox["e", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "850"}]], ")"}]}], "=", 
          RowBox[{"ln", " ", 
           RowBox[{
            RowBox[{"(", 
             FractionBox["1", "1000"], ")"}], "."}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}], " "}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"84ea5a57-aa26-4e45-8d9e-26de02e4a887"]], \
"Text",ExpressionUUID->"b73c18ea-936b-4028-a643-4da7e25fa2f6"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"745022f0-5a7b-44b7-a2b0-de754ba5209d"],

Cell[TextData[{
 "Provided the arguments are positive, we can take the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["log", "b"], TraditionalForm]],ExpressionUUID->
  "aeabf380-910e-42c2-904b-a9acc2367821"],
 " of both sides of an equation and produce an equivalent equation."
}], "Callout",ExpressionUUID->"dff4c93f-e067-4a1e-af1b-687f3b550258"]
}, Closed]],

Cell[TextData[{
 "This equation is simplified by calculating ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", 
     RowBox[{"(", 
      FormBox[
       RowBox[{"1", "/", "1000"}],
       TraditionalForm], ")"}]}], "\[TildeTilde]", 
    RowBox[{"-", "6.908"}]}], TraditionalForm]],ExpressionUUID->
  "7c12256b-d010-42de-843f-84c21758fbbc"],
 " and observing that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", 
     RowBox[{"(", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "850"}]], ")"}]}], "=", 
    RowBox[{"-", 
     FractionBox["t", "850"], " "}]}], TraditionalForm]],ExpressionUUID->
  "c27b1d78-d186-4744-b273-82fd297fe7be"],
 " ",
 "(inverse property I2). Therefore,"
}], "Text",ExpressionUUID->"fae49915-f408-4750-8454-9f7d71885e32"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["t", "850"]}], "\[TildeTilde]", 
         RowBox[{"-", 
          RowBox[{"6.908", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"3b2f590b-150d-4006-bea5-3507b7b510bc"]], \
"Text",ExpressionUUID->"500e9419-117e-4616-8a60-100b0365470e"],

Cell[TextData[{
 "\tSolving for ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "ab379b7d-aea8-4fa9-8170-c55e475b9d2f"],
 ", we find that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[TildeTilde]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "850"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"-", "6.908"}], ")"}]}], "\[TildeTilde]", "5872"}], 
   TraditionalForm]],ExpressionUUID->"8e96fcf5-d191-416f-9d5c-914cd03a221a"],
 " years."
}], "Text",ExpressionUUID->"c91625f6-d00d-42e9-8dd1-7d037f2fe073"],

Cell[TextData[{
 "Related Exercise 61",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"0877c952-8a63-403c-b2c7-cfbbe9a31226"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Change of Base  \[RightGuillemet]", "Subsection",
 CellTags->
  "Change of Base",ExpressionUUID->"6911c132-4050-469f-82e8-e7759ecf4f6f"],

Cell[TextData[{
 "When working with logarithms and exponentials, it doesn't matter ",
 StyleBox["in principle",
  FontSlant->"Italic"],
 " which base is used. However, there are practical reasons for switching \
between bases. For example, most calculators have built-in logarithmic \
functions in just one or two bases. If you need to use a different base, then \
the change-of-base rules are essential."
}], "Text",ExpressionUUID->"e98303b0-9910-4063-bfa0-40103d7ffbc0"],

Cell[TextData[{
 "\tConsider changing bases with exponential functions. Specifically, suppose \
you wish to express ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["b", "x"], TraditionalForm]],ExpressionUUID->
  "2f05bbd1-48b7-463f-bd42-b22464d68238"],
 " (base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "448fcc84-f110-4b98-921c-e0adfe0fc6ea"],
 ") in the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", "y"], TraditionalForm]],ExpressionUUID->
  "65c84989-3eaa-4533-9abe-94b13a5c5d1f"],
 " (base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "b12013ab-224f-4189-867f-a4cd74e87488"],
 "), where ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "b4f19b8c-83fa-4fb9-ad82-87257798d2db"],
 " must be determined. Taking the natural logarithm of both sides of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", "y"], "=", 
    SuperscriptBox["b", "x"]}], TraditionalForm]],ExpressionUUID->
  "bb795546-1de3-48f4-a315-a8a664901427"],
 ", we have "
}], "Text",ExpressionUUID->"86c09a1d-3ee0-4070-9b9e-e19262293e5e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FormBox[
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{"ln", " ", 
              SuperscriptBox["e", "y"]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox["y", "TypesetAnnotationFont"]],
           TraditionalForm],
          TraditionalForm], "=", 
         RowBox[{
          RowBox[{
           FormBox[
            UnderscriptBox[
             RowBox[{"ln", " ", 
              SuperscriptBox["b", "x"]}], 
             StyleBox[
              UnderscriptBox["\[UnderBrace]", 
               RowBox[{"x", " ", "ln", " ", "b"}]], "TypesetAnnotationFont"]],
            
            TraditionalForm], "     ", "which", " ", "implies", " ", "that", 
           " ", "y"}], "=", 
          RowBox[{"x", " ", "ln", " ", 
           RowBox[{"b", "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"38559e1a-daae-4641-97ea-85d49a3720f2"]], \
"Text",ExpressionUUID->"c2d9fb6c-2617-4a63-9e42-95117c21ab1a"],

Cell[TextData[{
 "It follows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "x"], "=", 
    RowBox[{
     SuperscriptBox["e", "y"], "=", 
     SuperscriptBox["e", 
      RowBox[{"x", " ", "ln", " ", "b"}]]}]}], TraditionalForm]],
  ExpressionUUID->"50f36e2f-9aa0-42f5-bf91-5f017538a7c5"],
 ". For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["4", "x"], "=", 
    SuperscriptBox["e", 
     RowBox[{"x", " ", "ln", " ", "4"}]]}], TraditionalForm]],ExpressionUUID->
  "52b8bbaa-165e-4e7a-a033-497e4eb50fb6"],
 ". This result is derived rigorously in Section 7.1."
}], "Text",ExpressionUUID->"8ae1513f-b96c-4c9b-8e4c-9a2597d98bcb"],

Cell[TextData[{
 "\tThe formula for changing from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x"}], TraditionalForm]],ExpressionUUID->
  "05b6ce71-e1e2-43d3-9f99-696fbf15185e"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"ln", " ", "x"}], TraditionalForm]],ExpressionUUID->
  "370e3bad-0f85-4ad2-8286-f44543dd8450"],
 " is derived in a similar way. We let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{
      SubscriptBox["log", "b"], "x"}]}], ",", " "}], TraditionalForm]],
  ExpressionUUID->"9c2da99e-e3fa-4498-bca9-61d8a20ee214"],
 "which implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["b", "y"], "."}]}], TraditionalForm]],ExpressionUUID->
  "4169c3d4-fd31-4dbb-8302-e53b215c9277"],
 " Taking the natural logarithm of both sides of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SuperscriptBox["b", "y"]}], TraditionalForm]],ExpressionUUID->
  "1aba5396-d278-4414-8f05-8311784a23c3"],
 " gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "x"}], "=", 
    RowBox[{
     RowBox[{"ln", " ", 
      SuperscriptBox["b", "y"]}], "=", 
     RowBox[{"y", " ", "ln", " ", 
      RowBox[{"b", "."}]}]}]}], TraditionalForm]],ExpressionUUID->
  "75f3faef-e582-4da8-ac45-b63ed47d6061"],
 " Solving for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "b"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "9e68dc00-c48d-4fa1-9382-b24d166eef03"],
 " gives "
}], "Text",ExpressionUUID->"3bbee101-bbf0-4d7c-8568-1565fc7850b6"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", "=", 
         RowBox[{
          RowBox[{
           SubscriptBox["log", "b"], "x"}], "=", 
          RowBox[{
           FractionBox[
            RowBox[{"ln", " ", "x"}], 
            RowBox[{"ln", " ", "b"}]], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"db386501-d350-4308-b6e9-eb552fa3cb70"]], \
"Text",ExpressionUUID->"93fe8d01-7322-4071-9599-e0009653116a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"fcc81fd8-c6de-4ec0-8c21-7a38a75b0322"],

Cell[TextData[{
 "A similar argument is used to derive more general formulas for changing \
from base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "a641eea0-e722-484e-92cc-75499eacd553"],
 " to any other positive base ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "59262cb9-cf09-409f-8f67-a48d6e5a3d36"],
 "."
}], "Callout",ExpressionUUID->"852a270d-586f-462f-9560-ff40a39f57aa"]
}, Closed]],

Cell[TextData[{
 StyleBox["Change-of-Base Rules",
  FontWeight->"Bold"],
 "\nLet ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "405c6d4b-4533-455d-8cbf-127e3bfe30dd"],
 " be a positive real number with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", 
    RowBox[{"1.", " ", "Then"}]}], TraditionalForm]],ExpressionUUID->
  "6227f254-d7d2-4b9c-b15f-03f033f00345"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{GridBox[{
      {
       RowBox[{GridBox[{
          {
           RowBox[{
            RowBox[{
             SuperscriptBox["b", "x"], "=", 
             SuperscriptBox["e", 
              RowBox[{"x", " ", "ln", " ", "b"}]]}], ",", 
            RowBox[{
             RowBox[{"for", " ", "all", " ", "x", "    ", "and", "    ", 
              SubscriptBox["log", "b"], "x"}], "=", 
             FractionBox[
              RowBox[{"ln", " ", "x"}], 
              RowBox[{"ln", " ", "b"}]]}], ",", " ", 
            RowBox[{
             RowBox[{"for", " ", "x"}], ">", "0."}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{"Center"}}}], " "}]}
     },
     GridBoxItemSize->{"Columns" -> {{
          Scaled[0.96]}}}], " "}], TraditionalForm]],ExpressionUUID->
  "71e6289d-2681-4524-ab52-254a7e285505"],
 "\nMore generally, if ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "32401e71-3f23-40ab-a58f-46e9c1890c86"],
 " is a positive real number with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "\[NotEqual]", "1"}], ",", " ", "then"}], TraditionalForm]],
  ExpressionUUID->"4f866daa-89a6-4697-9ef4-ed750061b04d"],
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SuperscriptBox["b", "x"], "=", 
           SuperscriptBox["c", 
            RowBox[{"x", " ", 
             SubscriptBox["log", "c"], "b"}]]}], ",", " ", 
          RowBox[{
           RowBox[{"for", " ", "all", " ", "x", "    ", "and", "    ", 
            SubscriptBox["log", "b"], "x"}], "=", 
           FractionBox[
            RowBox[{
             SubscriptBox["log", "c"], "x"}], 
            RowBox[{
             SubscriptBox["log", "c"], "b"}]]}], ",", " ", 
          RowBox[{
           RowBox[{"for", " ", "x"}], ">", "0."}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "3f4d44e2-c136-4652-83ad-a7bae60b42e6"]
}], "Summary",
 CellTags->
  "IMPORTANT Change-of-Base \
Rules",ExpressionUUID->"23027ec3-1ba0-484c-be45-8dc2a9a18f38"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 6\t", "ExampleFont"],
 "Changing bases"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 6 Changing \
bases",ExpressionUUID->"0e494e86-34b6-43d5-a1e6-19d07ad26045"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Express ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{"x", "+", "4"}]], TraditionalForm]],ExpressionUUID->
  "9ff64d2c-ca5f-46ac-8739-a198204d03c1"],
 " as an exponential function with base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "."}], TraditionalForm]],ExpressionUUID->
  "afae2544-74e4-41a2-93ed-429d49b4cad4"]
}], "Text",ExpressionUUID->"823d041d-240c-489b-9d0b-6511e57e2275"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Express ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], "x"}], TraditionalForm]],ExpressionUUID->
  "51c59ee3-b909-40a1-8d34-84094518d52a"],
 " using base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "c55d6d98-3228-418d-afa9-66adb62d7fd4"],
 " and base ",
 Cell[BoxData[
  FormBox["32.", TraditionalForm]],ExpressionUUID->
  "d8d1476a-3769-45e6-866f-b7cf6b9edd85"]
}], "Text",ExpressionUUID->"2145ff79-b69d-422a-ab11-f34f2b02d4d8"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"67c71209-d767-42c2-86f0-466e137c4782"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Using the change-of-base rule for exponential functions, we have "
}], "Text",ExpressionUUID->"c4fe53f3-fb2e-4cfa-bdf5-aaa3dfd6ea18"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"x", "+", "4"}]], "=", 
         RowBox[{
          SuperscriptBox["e", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "+", "4"}], ")"}], " ", "ln", " ", "2"}]], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b8d4ebf3-99c2-4dac-a074-e82355a74254"]], \
"Text",ExpressionUUID->"d7e862aa-74c9-4dfa-b577-8a57414a5dbe"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Using the change-of-base rule for logarithmic functions, we have"
}], "Text",ExpressionUUID->"ce78f7d9-fcc6-4720-915b-23b222103d7a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["log", "2"], "x"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{"ln", " ", "x"}], 
           RowBox[{"ln", " ", "2"}]], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d44b2595-1fb9-4a9d-9fc2-45939bc1540b"]], \
"Text",ExpressionUUID->"3dd4e56c-3909-41f0-9163-e593d12c3ed9"],

Cell["\<\
To change from base 2 to base 32, we use the general change-of-base formula:\
\>", "Text",ExpressionUUID->"bdff33b1-cf5d-4654-ae2c-c1c838974279"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          SubscriptBox["log", "2"], "x"}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}], "=", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["log", "32"], "x"}], 
        RowBox[{
         SubscriptBox["log", "32"], "2"}]], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["log", "32"], "x"}], 
         RowBox[{"1", "/", "5"}]], "=", 
        RowBox[{"5", 
         SubscriptBox["log", "32"], 
         RowBox[{"x", "."}]}]}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b3d72713-d235-45d7-8875-2ebe98471720"]], \
"Text",ExpressionUUID->"44dfa882-c347-4ba4-82a4-82025d9af564"],

Cell[TextData[{
 "The second step follows from the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "=", 
     SuperscriptBox["32", 
      RowBox[{"1", "/", "5"}]]}], ",", " ", 
    RowBox[{
     RowBox[{"so", " ", 
      SubscriptBox["log", "32"], "2"}], "=", 
     RowBox[{
      FractionBox["1", "5"], "."}]}]}], TraditionalForm]],ExpressionUUID->
  "d8b87536-60a5-4f6b-a2f1-98febcfcdef8"]
}], "Text",ExpressionUUID->"19349311-1a4d-465f-b3b6-b67d4d839cfa"],

Cell[TextData[{
 "Related Exercises ",
 "67, 71",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"b7014e15-99ac-454b-88e4-ce084c364c41"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises  \[RightGuillemet]", "Subsection",
 CellTags->
  "SECTION 1.3 \
EXERCISES",ExpressionUUID->"d334ba41-0ba5-4d49-b813-a7411414ae96"],

Cell[CellGroupData[{

Cell["Getting Started  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Getting \
Started",ExpressionUUID->"3e7d154e-a9ad-4c39-ad59-55bac2c4ffdd"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "For ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", ">", "0"}], ","}], TraditionalForm]],ExpressionUUID->
  "ec2304e9-3ae2-4eb0-9201-d9bfe6a91987"],
 " what are the domain and range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["b", "x"], "?"}]}], TraditionalForm]],ExpressionUUID->
  "643473a9-cee7-4b0f-bb79-78fa570c3dd7"]
}], "Problem",ExpressionUUID->"c00a6400-da27-432c-8ec2-7b67d61690d8"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Give an example of a function that is one-to-one on the entire real number \
line."
}], "Problem",ExpressionUUID->"17ead6a4-3562-40bf-9710-02e36ca257c2"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tSketch a graph of a function that is one-to-one on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "0"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"2501c095-3c88-4d74-92a7-8f7617225757"],
 " but is not one-to-one on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"c249b542-8c30-4b7d-9d42-5d0717bc1526"],
 "."
}], "Problem",ExpressionUUID->"c23a4af7-6346-439c-94b1-a8fe8c9e7f0c"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tSketch a graph of a function that is one-to-one on the intervals ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", 
      RowBox[{"-", "2"}]}]}], "]"}], TraditionalForm]],ExpressionUUID->
  "51520559-12fd-4c61-adcb-532bec59272c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "\[Infinity]"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"3ee5afd9-bbbf-4228-ab7c-bb0599fb0c66"],
 " but is not one-to-one on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"4d6d39d8-7b74-40e2-bbf1-cc77d91c5cdc"],
 "."
}], "Problem",ExpressionUUID->"5337dc75-8ce6-4995-abd8-7c099dd12272"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Find three intervals on which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a6919639-bbed-42cc-9252-fbb13e34c881"],
 " is one-to-one, making each interval as large as possible."
}], "Problem",ExpressionUUID->"19184921-6f5b-4eac-9958-e93e22718d44"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
W8jkxpHJTUE7uXFkclOQyY2rrq6WItBT27ZxekwVmdwU7e3t2okxflmUlbW1
srKrq4tmc2QCMrlxZHJT0E5uHJncFGRy49aXlEjhp7GxUXVR1kMmN4u+Jada
ClatcrvdQ0NDqiuFo5HJjSOTm4J2cuPI5KYgkxskToP3L1kiZZ53eziuU0Ym
N8vAwED24sXTx3KxLHS5tmzZ8trhwyIRBYNBGs8xx8jkxpHJ0xMIBDwej7jW
nDh+/MD+/XqXv927djU1NZ1+q0OEc5/PxyZNHpncFGRyg7xeb3wPAXG8q67L
esjkJnK73TNm8thFZPgNpaX19fUdHR20nyckrs5BmGptcbG2+128eFF1LVZ1
9myXnslV15LpRAg/0tz8zI4dDxcWuiJPwSfu4yedGNeXlNTV1YmUPuj7JBQK
qf4lMpe4s14Y3aSPPfqo6losbGNZmbbvdXV1qa7Fkk62tEiHtrjQqC7KkvRM
LmIhpz6DRkdHtetOesvK/Pynt29vamrq7e0Va6OxSGhsbEx7e7KwsGTOssA1
sczqjzhuSeIeh4WFhYXFyLIoK2uipaitzefzqY7GyohMnkzDGgsLS+YvaQRs
MjkLCwsLS9pLwnER01+iiVTkcxHOHdhyTjs5CwsLCwsLCwuLqoWu5pglPONp
HM94xhoZHhZnqkVZWXP8kdb6kpK3O844fOvzjKcpeMbTiPgZPJfn5akuyqp4
xtNEgUDASH/ywoceqqqqOtLc3N/fHwwGVf82sCcyuXFkck0oFBLnqweWLk3+
LCcu1htKS5/ZsaOurk7/SFGc96qrq7ds2fLYo48mM3pV7LK2uFj8OVRvCWXI
5KYgkxsRP7rF1spK1UVZFZncRKmOu3JfTo44FTQ0NHR2djLdJ+YGmdw4MrnQ
398fGcMnibZx8bL6+npxiZHOcrHjk+sbUeR8j8dzsqVl965dBatWJXkuFX8I
8VMO/FuQyU1BJk9bOGbr6UtTU5PquqyKTG6WgYEBkbFnvHZo03oeP3ZMXEFo
DMfcI5Mb5/BMLk5cbrdbnMqmOdGJoPjImjUH9u+f5hH1ZObxFOdJ8V76AJ5T
v11k6oe9tbUjw8Oz80tnKDK5KcjkaRM30TnZ2dLxyMUlbWRys/x48+bpr1AP
FxaKK5TWUuS4qzgyBpncOCdncpGxRZaeZjgUca57atu23t5e7fXTbJ/k5/EU
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
XZFMnoyGhgbpQHhq27YEB8LnPbFPz2XmWVE9LtDqXTu17mv6hxFPXBxRXQ9s
TWSe+QUiTMZ8Iia5/vaGr2rNvH/x4D94w5w2JwnfbKn4m7bfT7VlwtEPwfVs
qT21nWmiA5LLHyirH0XECplcOH7sWPxw7mIR+UR1aRFkchOQyZMT35m8qakp
4Su1rkGZfFZUjwu0cr5TRXfdehTi1sxBwOyY+mCPHt1jV1768zsnnsShu1oC
18VNtNbIM5XIZrx6Rv/8KwNHUoo+2ikH8ifKy1XXZZlMPj7FWBMiCbe2tqou
jUxuBjJ5EgKBQPxnRh6PJ76dPPKVzD4rZggu0CqNXYntehrZyI+9xjBBmD0z
j3gfPW1qeyOPdUu0ab88pw4efPvDac6cEdGPIDOzRSgUCj326KN6O4C2iAtr
RgweYp1MLjJGwik+sxcv7uvrU1sbmdwEZPIk/Ms778R3JhdnmMSvjhn8OdPO
ihmCC7RaH71cGg3ktzL5wtu3d/LkA9TRHjCJXIZe6GG4qoTEFWeGQD4eufps
vX2+NnGGOKgzqufkkeZmV0y/C+3MU19fr7quKOtk8vFoI2H8B/ei/pX5+UND
KhtXyOQmIJMnIb4z+XRPVcRm8gw7K1oFF+hZdPk1bc9s/9Cjt5aLr2TsyGmw
vT/+Zrd2wtx82vNp4L9Vl2NlMU/izHv+jOpqbhkdHV2elyddRsVXRLzMiOcT
LZXJhU/8IyKBx7eWi6weDAZVbVIyuQnI5ElIvjN5RKaeFa2CC/QsuvGR1ilI
myGob8+DehtLwZtXYl53/dbQTMAsun6lZY/r5jQZp7zXVddjbdqkD9r2/Gnf
f2VA2J2QsBf0yZYW1XXdZKlMrv1Z+/v7c7Kz47fqszt3qiqMTG4CMvlMxA1+
fGfyy5cvT/V6cVbUX5ZRZ0Ur4AI9q65373wgcqQf6h+P9kvUb39cMeN2ij32
syPbxJ/guUvXiOWYJWLXGnn/LW2CjNgn/r57qJteVOkRm/Td7fMmPmF87FDm
PCEy6PtE604Tu6wtLp6y/+fcs1Qm17W3t8dncrEcaW5WUg+Z3ARk8pl0dXVJ
O/yy3NypTibaWfHm9sygs2KG4wI9G8a+GP3s2rC+AbVZuUX2vrVbXj2zen50
r3a5Ft6+feLZh2jnlnnPtHE2cJLrvb998/DBQ68bJlbS7p96cJDowS5uvaUZ
e/U5HSJz4jx/xppH/dxtw3jiVnrM+4a+GTOqK9qzO3fGzhqsLb3/8+IUDVYq
NqM1M/l4tGNt/OiIi7Ky3u3pnvtiyOQmIJPPJP5Dt62VlQlfqZ0V9WZecVak
kXxG9r1Aq+Y7NfGc7J2P17S9r30AIT/LGR3fRtvmYlOLO6AblxpFStdext7r
IJ/3RI7BREMfp7Roh+30w92LQ/7fW/9x78sv/eoXe5/b+P34NYil4tzVOfvV
TTOH2zCR6ye2fEd/DGdWfsG0eDwe/aEVfVn3dK02414CSjajZTN5OBz+yZNP
xv/6y/Py5v55TzK5CcjkM1lbXCzdh079wVDkrDixMV/oIdIkw7YXaNV8v/rB
wsn77YL5BVLrmdj4sV3K9f947tI1VWVDjegYeivz8wtWGbXw7oK/+3DK5ght
WL+xL0bDNwdEDQeHPKcOxt6VRwfntOCHjHO1DRMKXXxRO4S/suKXGTWhw5Yt
W/Q2Fv32/w9XeqfsF6dkM1o2k49Hu9euLiqKj+UbSkuDweBcVkImNwGZfFoj
w8Px9/herzfhc83irKi9QJwVL2fOOTGD2fkCrVpk7qrJmfyZnmvxe2Vkp538
sskPewKpmXmk08kv1oxdvSSSmD5mvivDel/MsZS2YcTNCR0W3lGeUbMed3d3
u2I+99SWmpqa6eenMOvimcKqrJzJhYGBgfuXLImP5Xtra+eyDDK5Ccjk0+ro
6JDOJ8vz8hK/NFPPihbCBdpMNz7SP7UR++QrvZ8mfJW4OGr9zCOXzjsfb//Q
84c5bVkBbrp6JmZuWddP+/5LdUHWIA7h7p0PaL3UMu3Ss6G0VH84SPvLZi9e
rHYM7cQsnsmFzs7O+I7lYpnL+T3J5CYgk09L3GZKmbyqqir+ZfpZMeuudZl2
VrQqLtAGaJ87aJ9BCFO1Smk3QfrLPh8fp+s+VAlHB+fUOlxl2lB+GUsbJUnv
mZZRW0yfay/2GtrQ0KC6rkSsn8kFt9sdn8lzsrM9Hs/cFEAmNwGZfFqPrFkj
ZfL4IVWls6KSOu2HC7Rx+ke3bDpYwo1LjZk5vHbG0obeFZsr0wL5eKJ5PR5Y
ulTc+2fEJEESW2TyUCj0482b42P56qIisdnnoAAyuQnI5FPz+/3xT3/7fD7p
lJLJZ0VL4wINOMvVM9qzJBzyydCfYHr+/T+qrkX2zrlz8eFw3759quuagi0y
+Xj0CbjvFRTEb/mntm2bg1shMrkJyORTO93WJnXQEnu79JpMPitaHhdowFFi
JkHmM8fp3bjU6EpilCRVjdLxjeTLcnMDgYCSYmZml0w+Hp3fM3vx4vhYfqS5
ebZ3BjK5CcjkU6uurpb2avGV2Bdk+FnR8rhAA45yMxot+uo/MHTVNLSJMMQy
wzixn/fs+fpdkfEA5/YadOH8+fhM2NjYmLmXQhtlcuHE8ePx239RVpaI67P6
vmRyE5DJp1awapW0V59ua9O/G500zZWxZ0U74AINOMnQqxXaIyTfOPYxR/xU
xKVH+wBxpokbrp1a97Vb8/POoY1lZVZqJB+3WyYXdu/aFR/Lv1dQMKv9+cnk
JiCTT2FgYCB+ZCG/3699N/PPijbABRqwjRvDn4qT6uBIYMpj+ebnYn/xIPfg
U7t6RttK8/7ff/408N+f+Ec+uzbsn0xs5D9c6T3417e5VMzp2dvbm7iRfI7r
SElsJt/0qg2CkLgDeuzRR+P/EE9v3z57b0omN0FsJrfFrmiWI83N0s4s9vCJ
70XPipG5bDL1rJj5uEADzjHmfUOfbuC2nx3+4LO4edVvfKSdLbVBtjniE7t2
QTsrTrPoY1Vpy6HBsWkm6JkN8UN/LMvN/Xz0Rib/TfVZUKONkzaZos7r9eZk
Z8fvIa+//vosvSOZ3Dj9EUU77Yqm2FpZKe3Jf//zn0e+YYWzYobjAg04yo1L
jdohL/7V/qOm7f2bB/71kfffEifVyLfuKD/ljTsbQBPtBhk/r7S06NedSKvR
plfneAowj8cTX5Lb7Z7TIlIR6chx46MDy78ZW/Bzl66ZOJ2oQqfb2uL/HNmL
F1++fHk23o5MboS9d0WDgsFg/Ey175w7Z4mzYubjAg04ivb0jTSlozjGV+bn
6+OdPtvU/tEobRdTiM4TPX1bUPwFaN0/z3UzW1VVlVSMuJKODGfiJ/Bffvpv
b+1/Zd3TtfpGi21Vu3fDlr0vv3Twn05kYumpiB+qwhUdsXw2uveTydPjkF3R
iN7eXqkz+b333CNuYSxxVsx8XKAB59AaecS99is/XS+fJ+cXiCvRwbc//DTw
33yYOK1rvb9987XDh48fO3akufno0aOvT0tcwcVyOTynLWw+n29RVpb0J66v
r5/DEpIlNsvY1UsiCIkl4daL/HvggNgzrb5bah3L41sRd+/aZfp7kcnT4Jxd
0Yj4OWo3lpWJs6Ln1EFtEyVDyVkx83GBBpwpeuxfvzH86eBIQPyrHeacHk0X
jvuPuVFXVydlv3vvucfv92fsmGOfR/+Vigur24CzxOv1JhyxPHYcOVOQydPm
kF0xbRtKS6W998D+/dq3ktwybMkZcYEGHEW/xMT+C3sYGR6Of6KwpqYmYwO5
o5xsaYkfR+7+JUt8Pp+J70Imx2wYHR2N/wButgfbdyAu0ABgD/v27YvrwOka
GBhQXRcmxHf1F8uG0tJQKGTWW5DJMRve7jgjfQC3LDfXxP0WAADbCAaDy/Py
pJbYrZWVquvCLaOjow8XFsbHcrfbbdZnGWRyzIa9tbXSTjurw+wDAGBdra2t
8cOR9fb2qq4Lk/T19cX3ARB/uIsXL5qyfjI5ZkP8veTJlhbVRQEAkInWFhdL
F831JSWqi0IC8V2MxLJq1SpTxqskk8N0Pp8vfo819zkIAADsobu7O/6i2d7e
rrouJBAKhTaWlcX/vZ7evt14DxYyOUx3/NgxaV9dXVSkuigAADLR1spKqSf5
qlWreAIrYw0ODj6wdGl8LDfeH4BMDtOJ04u0o+6trVVdFAAAGUebJ0jqSd7Y
2Ki6Lkyno6MjPpPnZGcbHCeHTA5zBYPB+5cskXbUs2e7GKYPAABJQ0ND7HTM
WrQzpXMyZlVNTU3CoRFFCkp7nWRymOvdHrlf3KKsrEAgoLouAAAyi7g4LsvN
lTK5CHuq68LMxN/ukTVrEg6NmPY6yeQwl3bLH7t/PlFerrooAAAyTmtra3yo
83q9qutCUi5fvhw/NKL4Sl9fX3orJJPDXPEDOjU2NjI1MAAAkvUlJdIV84eb
NqkuCik4sH9//F3Vw4WF6XUPIJPDRH6/P37n9Hg8qusCACCz9Pf3x18xOzo6
VNeFFGhDI0rdA9Ie2oJMDhPFfwy3Mj+fRnIAACTV1dXxV0wjTwhCCZ/PFz+0
hVi6urpSXRWZHCZ6evt2aZ8U5xwyOQAAsUaGh3Oys018PBAKtba2SiPMi+XB
FStSHT+HTA6zhEKh+FH0+RgOAABJU1NT/LOBQ0NDqutCmuLbJMXyzI4dKa2E
TA6z9Pb2xp9hRkdHVdeF/7+9+3up60z0Bv53HJO0E9O0mDbtkJqWFBOavpg5
pGBI56QHpaRj5qRzENI5CNIxIHMQpAx4EdpBkI4hTSYFOaQvCDITwWbMhSdH
8MIpeOGLN454sd/XXAj73GxH35U4JxOfZVJ/bH3WXvvzYTEQG+NX9xqf71r7
eZ4FQLacbGgIRsyyPJydWB4uLv74jTfStXxoaGjzL6tOTrk83gVx3Xs3H5w/
7zcMADztwYMH6fI2Pj5uxKxoo6Oj6Rksr9bVbf7tD52ccjnT2BgsPf7yiy9i
hwKAbPn0ypWguZ1saFDIc+BXn32WvtpqaW7e5Kfr5JRFchloF0QAeL6lpaXa
gweD4bKvry92LsqgWCy+c+JEug59/fXXm/l0nZyy+P2tW3ZBBIDnu3HjRnrt
1cPFReNlPkxMTKRnsByqrZ2dnf3Bz9XJKYtLra3BxJWOjg6/YQDgaY+edr2+
s31y+XLsUJRTT09P+lb5uaam5eXl53+iTs7OlUql9Dtxd+/ejZ0LADJkenq6
JnUT9d5338XORTklpSgp1ela3tfX9/z5Azo5O5ScYMnvk+DESyp6sViMHQ0A
MqSrqysYLuvr63/w9ikVJ7n4euHAgXQ1mpmZec5n6eTs3NXOzuDE+6ilJXYo
AMiQUqn06Ml66++T9/b2mueZS19+8UX6Vvk//uQnyWnwrE/Rydm54/X1wVl3
fWAgdigAyJDh4eH06r+5ubnYudgVy8vL7589m67lyVXYsz5FJ2eHHs2OS51y
8/PzsXMBQIb87OOPg7HywwsXYodiF83MzLx06FB6m52pqakN/75Ozg5du3Yt
ON/ONDbaBREAnigUCukJxoODg7Fzsbv6+/vT9y3fPXWqVCqlm5JOzg6l35r5
zeefxw4FABmS7mYvHz5sM4TcS4r3B+fPBy/9vpp/6O7uTv9lnZydSC7807Pj
JicnY+cCgAx5tC35+rGyvb3dO8rVYG5uLrn+Ss9gSZclnZyd+Ob27aCTv370
aOxQAJAhGy68Gh8fj52LPZIuS8lxsqGhVCo9vROmTs5OpFesPHp8p8nkAPA/
uru7g0r21vHjxsqq8lFLS/q6LJjBopOzbcViMf34zpGRkdi5ACArlpeX3zx2
bF/NZjfEI5cWFhYe7U4fTiyvmZiYePJ3dHK27Q/Dfwx+yRyqrbViBQCeGB8f
T8bKYLh8/vMcyaXBwcENZ7A8KU46Odv2b7/8ZXBqXWptjR0KADKkvb096OTv
nz0bOxRxpGf8JkdXV9faf9XJ2Z5SqfTakSO2WgWAZ0nGyrpXXgnGSo+6rlqF
QiF9PuyvqXnw4MGqTs523R8bq1n/FkxyUj1cXIydCwAyYWVlZXh4OF3AkmIW
OxrRfHvnTvpW+TsnThSLRZ2c7enq6grOqA/On48dCgAy5JPLl4OxsqW52X4r
Ve5Sa2uwvmBtBsv333+vk7NVybX/m8eOBafT7776KnYuAMiKpaWl9O5kJnlS
KBQ23IPlyTbmOjmbNzk5mX7nZX7uL7FzAUBWpGcpJBU9KeqxcxHfhjNYntzt
1MnZvJ6enuBEOtPYGDsUAGTIxYsXg7Hyk8uXn35uI9VswxksOjlb9c6JE8H5
c+3atdihACArHi4uvnDgQDBWDg0Nxc5FVhQKhfT+dTo5W/L999+nzx+PPwCA
J765fTvYneylQ4c8Vo+nbTiDJTneO306djQqQ09PT/AgqndPnYodCgAypKW5
OZiZ0NbWtrJizxXW2XAGy2tHjsTORWVIT1zp7e2NHQoAsuLh4uL+mprgPvnd
u3dj5yJzNtyDJTnWniIEzzE9PZ2+oDNxBQCeuHXzZjBQ1r3ySqlUcp+8qgwO
Dl7bhPQm9mu3ynt7ezfz6Wv+/Oc/x/522WuPJ66sO21MXAGAp3144UJQsT69
ckUhrzbnmpo2nC6+G0dyGRj722WvnWxoMHEFAJ5lwx1X7n33nUZebd4/ezZY
f6eTUy4bTlxJPhg7FwBkxeOnMW4wcSV2Lvba119/3bNp6d3s186c7u7uzXz6
5ORk7G+XPZV+VNDJhobYoQAgQ1qam9MTV2KHogL8009/mq7lVzs7Y+ciizbc
ccWbcQCwZmlpKT1xZWRkJHYuKsD9sbEN5rrU1IyPj8eORrZMTU2lL9/suAIA
TwwODga16uXDh+24wmb8+c9/3nD++TsnTnjaFE/r7u4OTpL3Tp/2SwYAnkg/
AsajgtikZ3VyM1h4WvL75Hh9vR1XAOBZlpaWag8eDMbK4eHh2LmoDE86eXr6
U3KYwcKaiYmJ4NxITpvZ2dnYuQAgK77938PBfc5DtbVmHbBJTzp5+i5ocpx4
+23nEomrnZ3BuXGmsdGbcQCwJhkR/+XnPw/Gyk8uX46di4rxpJP/r/feS59L
azNYFK8qVyqVXq2rq1l/7d/X1xc7FwBkxV//e+mlQ4eCEjU0NBQ7FxXj6U7+
cHExXb3MYGF0dDR9sTY/Px87FwBkwsrq6t27d4OJK7UHDy4tLcWORsV4upMn
f0wu6MxgIfDplSvBKvIPzp+PHQoAMqS9vT2oTxcvXowdikoSdPLVjWZD2YOl
miWXY+k3435/61bsXACQFcvLy68fPRqMld/cvh07F5Uk3cmfM4PFmr4q9O2d
O8GbcS8cOJCcJLFzAUBWPHjwIBgrkz8mY6XaxOalO/nqM2awvHX8uGlRVeij
lpbgTPjZxx/HDgUAGZJ+rN65pqbYoagwG3byxCeXL6dreUdHR6ycRFEoFNIb
1yeXbN4xAYAn3jlxIhgr7U7GVj2rkz9cXEzPjEqOP927FykpEfT39wcnwMuH
D1vwCwBPzMzMpPuSx+qxVc/q5Inh4fBxVMlRX19vBkv1ONPYGJwA7e3tsUMB
QIb89ssvg7HyZEND7FBUnud08kRbW1v60u/ffvnLvc/J3puenk5flNmsHgCe
dq6pKRgre3p6Yoei8jy/kz9cXHzz2LFgb+rkuHv37t5HZY+lV6y8dfy4meQA
8ETSlNJ3LycmJmLnovI8v5Mn9esPw39M74v4+tGj//f/2eEnz0qlUnpBQW9v
r04OAE8MDg6mO9Ly8nLsXFSe53fyNZ9euZK+Bvzk8mX1LMdGRkbSE1esWAGA
p6X3qTPFl+3ZTCdfWlp689ixdC3/9s6dvYzKXrrU2hq83LZaBYCnlUql9KOu
h4eHY+eiIm2mkyfuj42lZ7C8duRIoVBwtzx/Hi4uprcl94xgAHha0o7Sj7q2
YzDbs8lOnrja2Zm+VX7x4kWdPH/6+vqCF/pQba09MAHgaV1dXcFw2dLcrBex
PZvv5Ml1X/oxVclx6+bNvYnKnjnZ0BBc+JsdBwCBpBcFw2V/f3/sUFSqzXfy
xIMHD9Lr/l46dGhubm4PorI3JiYm0lde//WftiUHgL+bnZ1ND5c2Q2DbttTJ
Vzfas3pt9Z9tf3Kjvb09eH09jwwAAv39/enh0rQVtm2rnbxUKr176lR4t7ym
pq+vz3mYA0tLS7UHDwa/ZLy4ABD48MKFoA51d3cbLtm2LXXytWULyaekN+X4
0YsvTk9P735edteNGzeCVzZ5rQuFQuxcAJAhxWIx3YXuj43FzkUF2+p98jXX
rl1Lz2A509hYKpUsN65oyWkQvKz/8vOfxw4FANly9+7dYLh8+fBhLYid2F4n
X15ePtfUFJyN+2oevWuze1HZbQ8ePEhfao2OjsbOBQDZ0tHREQyXl1pbFXJ2
YnudfPXxcuNDtbXBCbm/pmZiYmKXorLb2traghf0rePHrd4FgEAyPgYjpifr
sUPb7uSJ6wMD6Yd7nnj7bQ+XqUSFQiE9Nc7qTgAIzMzMpN9Wnp+fj52LyraT
Tp74qKUlfVq2t7crchXnt19+GbyOtQcPWt0JAIH0LojvnT5t4go7tMNOvrCw
8GpdXbqWDw0NlT0qu2d5eTn9NtynV67EzgUAmdPS3LyvZt2IaT0dO7fDTp5I
6ndwZiZHUtQLhYJrxkqRXj+eHJYGAECgWCzWHjwYNB+7ILJzO+/kSfFOrw1M
juQq0vLASpG+5D/T2OjlA4DA6OhoUHheOnTILojs3M47+erjhz+mZz4kR39/
v1M0+zZcq/L7W7di5wKAzOnq6gpGzJ99/HHsUORBWTr56uOtrfen9mB54cCB
5N8vV1R2ydXOzvTUo2KxGDsXAGTOyYaGYNC8ceNG7FDkQbk6eaK7uzt9uzU5
dbW7LHu4uPjSoUPBq5a8lN7eAIDA/Nxf0mvo5ubmzApg58rYyUul0pnGxnQt
7+joKEtUdkNfX1/w62V/TU3y6yV2LgDInG9u3w4GzXdOnFDHKYsydvLkInHD
h3smx/DwcFnSUl7JZdSbx44Fv14utbbGzgUAWfTJ5ctBw7na2Rk7FDlRxk6+
JrmETHfy144cWVhYKMu/Txl9e+fO/pqaoJOPj4/HzgUAmbO8vJz0maDh/GH4
j7FzkRNl7+SrG11FJsc//fSn9tbLmkdzjdavzE0+EjsUAGTR5ORksJ3FCwcO
LC0txc5FTuxGJ3+4uFhfX5+u5V9+8UW5vgQ7d39sLL1VzuDgYOxcAJBF165d
CwbNc01NsUORH7vRyRPj4+P7NtoaMbnGLONXYSc+amkJXqA3jx0rlUqxcwFA
Fn1w/nwwbvb29sYORX7sUidP/Obzz9O1/Hh9/cPFxfJ+IbZheno6/UZGX19f
7FwAkEXFYvGFAweCcdOdRspo9zp5qVQ619SULn629ciCT69cCZZ2vnz4sElx
ALChkZGRYMJn3SuvWChHGe1eJ0/Mzc0lZ2y6ll8fGCj712Lzktclvd1Kd3d3
7FwAkFFdXV3BrgjuMVJeu9rJE0NDQ+kZLD968cXvv/9+N74cm/Grzz5LCvnT
nfyFAwdsVgkAz/LuqVNBmblx40bsUOTKbnfyREdHR/pW+TsnTpgpEUWhUEga
eNDJ29vbY+cCgIxaWFhI32CcnZ2NnYtc2YNOXiwWk388Xcv/9Re/WFnxQNq9
1t3dHbwQyQngFwsAPMvg4GDQyd86fjx2KPJmDzp5YmZm5lBtrYnl0T1cXKw9
eDB9cRQ7FwBkV1tbWzB0dnR0xA5F3uxNJ098c/t2zUY7lv+fyQel1b/u6pfm
iZ6envSV0fT0tDcsAOBZXj96NBg6h4eHY4cib/askyf+7Ze/TM2a+IcTb79t
x/K9kfycXzp0KHgJfvbxxwo5ADzLzMxMes6n6kLZ7WUnLxaLwbLltZWGLc3N
auEeSM8kr/G8AwB4rusDA8HQeaaxMXYocmgvO/nqsyeW9/b2quW7qlAopH/y
H7W0+LEDwHNcam0NRk9P9GA37HEnT3x75066kyfHyMjI3gSoTo8eduAmOQBs
xfLy8qt1dcHoee+772LnIof2vpMnrnZ2pvthcs7Pzc25bbsb5ufnf/Tii8EP
/OLFi37aAPAcU1NT6e0pisVi7FzkUJROXiqV3j97Ntjqc1/NP7x3+rTzfDe0
t7enL4I8ShUAnq+vry8YPc81NcUORT5F6eSrjx+Jld5ZKDna2trcui2v6enp
/aldKD+5fDl2LgDIupbmZivg2BuxOnlifHz8hQMH0rU8uSbd4yT59lFLS/AT
Tir6zMxM7FwAkGmlUim9PULSXmLnIp8idvLVjd4SWmuM98fGXISWRfKT3Je6
Sd7e3u6HCwDPNzExEQygtQcPJkVdRWE3xO3kqxs9rzY56l55xY3cnVteXj7T
2Bj8bJNL/vn5+djRACDrrl27Foyh//TTn8YORW5F7+TFYjH50ulafrKhYWlp
KUqk3Pjm9u30TfJHE+FiBwOA7PvwwoVgGE3G0NihyK3onTwxOzub3vxzbbO+
0upfFcjtSa5o0qtoXztyxJUOAPygtcnk+2qe3iCu5sGDB7FzkVtZ6OSrj6c9
b7jes6urSyffnu7u7vTP89bNm7FzAUAFmJiYSAr50508qegmk7N7MtLJE9cH
BtIdMjm+uX07brBKNDs7m35I0HunT3vfAQA2Iz2Z/MMLFxRydk92Ovnq40fb
PH1BWvM/D8y6PzYWO1qFSe9/mBx+jACwSSaTs8cy1cmLxeK5pibbsOzQ8PBw
+md4qbXVtT0AbMaGk8knJiaMpOyeTHXyxMPFxeP19elKmXywUCjETlcBkuua
N48dC356P3rxxdnZ2djRAKAypCeT25mc3Za1Tr76+FnwLx8+nK7lZxobk8IZ
O13WdXV1pX90v/n889i5AKBifPnFF0En//DCheXl5di5yLMMdvLE6OjoBtuw
1NR81NKSXKXGTpddk5OT6Q3J3zp+3LUMAGxeS3Nz0MlNJme3ZbOTJ27dvJmu
l8nx6ZUrsaNlVHK1cqaxMb1I9u7du7GjAUDFSMbTlw4dCjr5+Ph47FzkXGY7
+eozdthOjp6entjRsujatWvBL5Dk+Jef/9zkNwDYvMnJyaB41B486B1ndluW
O3lSJtva2jas5X19fbHTZcv09HR6ts/Lhw8vLCzEjgYAlSTpGMF4+sH587FD
kX9Z7uSJv/730j/99Kcb1nLPEnqiVColL196qo+ndgLAVv3s44+D8bS3t9db
zuy2LHfylcfH0tJSki3dyffX1AwNDcXOmAk9PT3pn09yUW+FOABsSTJ0vlpX
FwypHrrHHshyJ39iYWFhw03LXzhwYHR0NHa6yB48eJC+Q36ottaG5ACwVdPT
08HKrKRsmEzOHqiITp5IGubrR4+ma3ntwYPVfPW6tLS04dXK9YGB2NEAoPIk
A2gwpL5/9mzsUFSFSunkie+//37DZwkdqq2t2h2KLrW2pm+StzQ3x84FABXp
k8uXg1G1u7s7diiqQgV18tXH8zReOnRILV/T19eXvHbBW2yvHTlirxUA2J43
jx0LBtaRkZHYoagKldXJE3+6d2+DR3w+ruVVNYkluQbZ8Odg3SsAbM/s7Gzw
7nPyx6WlJU/6YA9UXCdPDA8PP6uWJ409drq9sLCwsOHs+o6OjtjRAKBSfXP7
9v71nbyC2hGVrhI7eWJoaGjDWv6jF1/M/aPkS6XS+2fPpr/3M42NFoYDwLa1
t7cHE1eudnbGDkW1qNBOvvq4lj+6mE2tcEy6+uDgYOx0u2VlZeXTK1fShfzV
ujqbHwLATpxsaEjPCDVxhb1RuZ189dl3y5Ojr68vl/8Xunbt2obfb+7fHQCA
XVUoFNJbmdk2gT1T0Z189fHc8h+9+OKGNbWrqytnD7L89s6dDb9Tz/wFgB1K
GkXQyd86fjx2KKpIpXfyxOjoaO3BgxuW1U8uX87NFOtnbTjzs48/9rYaAOxQ
V1dX0Mk/vXIldiiqSA46+erjjQE33Le85vHjtwqFQuyAOzUxMXGotjb93b13
+vTS0lLsdABQ8ZLCECzwvHXzZuxQVJF8dPLE1NTUj994Y8Nafry+Pvk2Ywfc
vuRbe/nw4fQkt9ePHp2bm4udDgAqXrFYTL8ZPTMzEzsXVSQ3nTyRFNR3TpzY
sJYfqq399s6d2AG3Iynkrx05suF3lPyn2OkAIA/Gx8eDe1+v1tXlbFUaGZen
Tr6ysvJwcXHDvbufrPosrf41dswtmJiYqHvllfQ3klzL3/vuu9jpACAnent7
g05+8eLF2KGoLnnq5ImVx28/XWptfVYtP9fUND/3l9gxN2V0dHTDOeTJ62W7
VAAoo49aWoLJ5F9+8UXsUFSXnHXyNcvLy93d3ekJ2E/ejcp+px0cHNxwl5Xk
m/rm9u3Y6QAgP5La8PLhw8GA+1//OR47F9Ull518TVJrn7VHYnK0t7dnc8eS
5DdDT0/Ps2JbAw4A5TU9PZ2eI/rX/85iSSDHctzJVx8vkDxeX/+sfpv8p9HR
0dgZ13m4uNjS3Lxh2v3ukAPALvj666/TM11jh6Lq5LuTrz5uuc3//M/PquXJ
0dbWlpENzMfHx988dmzDkMkF+/DwcOyAAJBDn165Egy7//7rX8cORdXJfSdf
eTwbpLe3d8Pp2WvHy4cP/+6rr0qlUqyQyZd+zgT4JN79sbGMT4AHgAqV3kjZ
fTD2Xu47+RMTExNvHjv2rN6bHCcbGu7evRsl2HunTz8rVZLZPuQAsEsKhUJ6
8M3IG+hUlerp5ImlpaW2trbnzGNZm0J2f2xsb/IsLCy0t7cHmy8FYf5SeLg3
YQCgCv1h+I/BQPzW8eOxQ1GNqqqTrxkeHv7xG288v5m/f/bs0NDQ7j3A6+Hi
Yk9Pz6Ha2uT3wLM6+dXOzojTaQCgGnR3d6cXmsUORTWqwk6++viG+a8+++w5
81jWjvr6+t7e3oWFhTJ+6dnZ2a6uricPA9qwk79aV7c2i8YMcgDYVR+cPx8M
xNcHBmKHohpVZydfMzk5+f7Zs89p5mv/Kfnf5P+w/f3983N/WXlsq18o+ZRC
oXDjxo1zTU3PvwpIvlZLc3Pyl63oBIDdViqV0o8ysYyLKKq5k68+bsuDg4PP
2oFwfVt+dJxsaOjo6Eg+ZXp6+gcnliwsLIyMjPT09Dy/+T99e9wO5ACwZyYn
J4MB+lBt7e7NXIXnqPJOvqZYLP72yy9fO3LkB2vz08cLBw68c+LEuaamTy5f
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
AAAAAAAAAAAAAAAAADLq/wMVdjiC
    "], {{0, 934}, {988, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{988, 934},
  PlotRange->{{0, 988}, {0, 934}}]], "Output",ExpressionUUID->"e261b80c-25fe-\
43f4-bbde-64e1c8740307"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Find four intervals on which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "da2902cb-75bb-48d4-9cfd-4d053c027bea"],
 " is one-to-one, making each interval as large as possible. "
}], "Problem",ExpressionUUID->"6fbc19eb-0d24-4b50-9163-9f2b1be1fbae"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
t//Oe4BEZ3ZEvLUkc2bnkEy3Gbz+Ufwwyvg5NYmJ1on3NTd99v9d+vQ2B7LH
D5rc+5UbB03abLbDv/yXjAoAMD3d1tamJO3m5mbpogAZJG0gEoksLy5Wkval
8XHd7yieIRNj2v/uoadf2PHlBQ23Fo5fdyf2+4qf15NJ0o7viJgIyZnuHBK9
Ht/dRXsLM31zCeqt6R9PvJOY/vGHM/u0b3vhg2u3C/BJ51omJtUDyMTgwICy
0d/j27dLFwXIIGkDWqhWYrYWvLX4nZM7+7cPXvrSzTHeuU9mN40rf3/IdvO8
nvjGhhn+xd92fiuRtOeauREJBf8QmIzn5/jC0iItZj/xzqc3v6K9r6m498ag
9JKv7L9x9Myvu+MH6NwmvqspnUnawHxojWpi4lbOG1XA2EjaQGz4ZXbSrt6x
I2f3NnPU+M3wqcU/d9ik80ZSNsrbMfjxPM6a9P3k1puRJ95Jk4p9P/n23ffG
J6UcfffXH//dUdvNXa8Tj2f0C39ibFzr99d2Xbj+y5Na9la+La3kyg//Mrt9
DgGLufFB4exh7Vx8UAgYH0kbaGtrU5L2S0eP5ui+ojOjtfabSTu7s9eNTgu6
P/raXTeGpu/dmMkk7QQtk8fektycvJG6c0h8f5LkQTPtLpLn4USTon7yd2q/
ufPpOZGPO/74q/HvN/G2MEDu7Kyuzs/iF8DgSNrA7ro6pUfo7e3N3d3FF0XG
5iTMPibShILvP//lG4sKl/5Ze+bn8tx4TJLmeG//T37lgUrMS0lcad+2fHHh
mPJtGQ2tz8wwmeuuAdzRyy0tSrva1tbGSwkWRNIG1q5erfQIudv6NXozIpr+
dO9Yl6pF5cU3N1pZ0CmNib240+yqff2j3r9amRj0/sGvJtPmZ+2L8YOBbDPb
mLx59jeZPOqJqSMMaAML09vbq5xfk5tDCgCjI2nD4vx+vxKzc3uc2czxhRlN
YChwWtL+9If1iVVRC/h545uQxGdx3Dro5+Yfxffoi4SCmttt1jfznfFvy/Sd
ze/O3VhHObMtzDzmlgO4yev1Kosic3LwLmB4JG1YnMvlUpK29lqIRnP1IeeH
HRVa13PXca/5P0WNXk9MtJ736TOJ25jZP+TGqHjSNn2JP43e/I1+JhOHsJcM
/HM4vKC6AcsLhUL2JUtmta42m9/vl64LyDeSNizO6XQqSdvhcOQoaX9x4Vh8
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
p258JLx80yaPx/PeyM9/8uMfazd+9MUXd9fVpR4FcserpqaG40KQZ9qzTnke
sogAAArXyy0tSquufUW6KFhCOBzu7u7WMnYmk0O0CL2mtHRvY6P2V7xerzJt
Nb5hTvJ+2mk30AkEAi6XSwvn1Tt22JcsURYp3CZva7mdPXmQB5FIJHVrnYtj
Y9J1AQAWKDEMmLi0ECJdFMxPS7yby8uLYvOx7zANu3zTpu+98orb7dZCyO3j
7rxOrrl27drgwMCB/ftTJ1ClvQ4dPPjJ5cv6PQBAGpfGx5XXgvb81N6TStcF
AFigmYbdRsOOvJmYmKivr0886+ZK2itLSpqbm71eb+a3PN8zIuOpPRQKaZF7
V23tHcO29tJwOp3sAoHc6e/7B+W1wNAHABS0SCSiRRo+rEQeaO/gjh07dt+y
ZSkzQ2Yl7YqKijNnzkxNTc339rM8jV17C/ByS8sdj8XZXF7O5G3kCNP5AMB8
UkfzWIAD3Wlv31LPJFWu6h07XC7XgmdEZ5m044LBoNPpTD06RLmam5s52x26
014CyjONJeoAUOi+98orqSlCuiiYR2wou6PDvmTJbYLrNx977PzISJZrDnVJ
2nFain6js3NNaeltat6wYQOD29CR9kpJ/cTn0vg4a3EBoKANDgwo59dsq6qS
LgomMTExkbqTZPL14Pr12jNQl509dEzacdeuXWttbb39e4S2tjbWNUAXsaPE
Zj+7Slas4CgxACh0WhZSmnctWrDsC9kbGhpKXQWQuJYXFx/r6NDxmaZ70o67
ND6+u67uNmFbeyvBsZLIXm9vrzLoUVNTw/aSAGACqZ+Sezwe6aJQwMLh8Mst
LbfZvk/LrtpbPH3vNEdJO05713Cb43XWrl59fmRE9zuFpTQ1NaV+YkLOBgAT
qK+vV1r406dOSReFQuX3+3dWV9vmOBdm1cqVfX19ubjfnCbtaDR69epVh8Mx
13k32tedTief9WPBUpcM//Qfh6WLAgDo4LVXX1VaeC1RSBeFguTxeB64//65
xn5319VpOTxHH4jnNGknnB0evs3OJA0NDexJggUIhUJ2m015fzr16YefSxcG
AMiey+VSAkPFI49IF4XCMzgwkLp5Qvxaard3d3fndMg3P0l7euZU99SPgRLX
lspKTpPEfGlvUZUn0prS0i+mI8weAQAT0JJD6nzaYDDIYhxk7o3OzrnC54YN
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
9N66ZUs8HtddtYUCgUDqrf/F0M9N26XD8KRtyDfefKNe0OS3FxSI0+fUc//R
e+8VFRVJ3wl9fX26q7bWd15+OfX0DRy6F29u6rkzhALYr+zIkVTK+vD6dd21
2E3ELV9yj3KfSJve3hZN5GqpVxXv+wa/PzU3Wzx900a3LqT2qff5ui5f1l2L
3QxP2s8ePmzCnOTp6Wn/+vVSu25ubk79y6nqauk/+QxYPH9d8qbvZGfn7WGE
rF47fz71Lnd3d+uuBTBOekMxA5O2OM1PPXfPJ+0bo6PSnst+n090xKmkre5e
oS5O4jF3k/ZDD5G0TWNI0p7LtrRIZWVl6l/SL0L6OLB/v+56LZe+cmdg0j5/
7hxJG9DF8KQ9P8qR3IDY20k762ZwfmWd7dQhXpOsC257CUmbpO35pK3uWrVr
587Uv6grfzY1Nemu13IkbZI2oIXhSduQMW1BnSKi7miTnliiu1jLkbRJ2p5P
2jfHxrI28Kxn2SZM3yVpk7QBLQxP2oaMaQtX+vsX63al4632dt3FWo6kTdL2
fNIWniwuXk6T35Kfb0L4JGmTtAEtDE/a5oxp356aWmwQWzpM2BqSpE3SNiFp
q5tFZj1OVVd7/gtwjqRN0gY0MTxpmzOmPZfxXi9xGLI1JEmbpG1C0g6FQv75
r7ilW31vb6/uSu1A0jYkaUcikba2Ns+vpQMXMTxpmzOmPZdtrT/1uGDG1pAk
bZK2CUlbRMqCrVvv2+onJiZ0V2oHkrYhSVv05icqKsQ5ZlVVVTAYNHD5dDiN
4UnbqDHtG6Oj9x3dujY0pLtMO5C0SdomJG3hpRdfXLrJH9i/3/vfffNI2oYk
bWF8fDy9M/Kju3e3trQYcjoJZzI8aRs1pp11rb/MY1NenuiDTHgpSNokbUOS
dvJW6CVv0DBhfb8UkrY5SVv4/htvZH7O/T5fZWXl1cFBA999aGd40jZqTHsu
21p/mUfyxijdFdqDpE3SNiRp356aUjeLzDzC4bAh334kbaOSdiwWe3zPnvTn
PLVNW2qntubm5vHxcd0FwiCGJ22jxrSFgYGBJSaQiBdEd4E2IWmTtA1J2sLR
srLFhrUNWd8vhaRtVNIWgsFg5opbqaT95b/7TlRUiA7RwA8D7Gd40jZtTHt6
enqxrSHFEYlEDHkdSNokbXOS9lvt7Ys1+dM1NYY0+TmStnlJWzhVXb3EBR1x
PLJtW1NTE0PcsJThSdu0MW2hvLw86xfOwdJS3aXZh6RN0jYnaYt3fLG1/sy5
jDVH0jYyaU9MTGzKy1v6VoXUIXpGcU4aCoWi0ajuquE1hidt08a05xYf4Gpr
azPnRSBpk7TNSdpCUVHRYpexdJdmH5OTdn19vZlJe26+y1vOqvIZk0x8B/bv
F6+YSAg3x8YSiYQhPWMsFrsDazxz6FDq0xUMBqenp3WXY6t3u7rSl1B112If
ETCyfr38Yujn07dvG/IZqKurSz1r8SWsuxa7hcPh1HMv2btXdy0aHCwtTT39
a0NDhnza72R84DMPESd012WrzPML3bXYLX0v/KWOjttTU+Z88gXxdovvumXG
bPUo2Lq1srLyzYsXxTdGNBr1cOru7Oxc9avEwcFx3yN9X/byT/w5ODg4ODiM
OkpKSsR5a29v70cffeSxPXFI2hwcVh8kbQ4ODg4OTx6P7t6d21+4zucrO3Lk
Sn+/Z0a5u7u7t27ZwmHFkV6JIn/zZu3F2Hwkb5SYf+4b/H7txWh54ulD/In2
quw80tuHmfbExbElPz/13EXb116M/Yex33jpz3z60F6SzYexT3yr2d94W7N1
eavI1eJ4ZNu2qqqqtrY2bpzEihh+R2TquRu19sjc/I0P0jfP7akp3UXZ6gJ3
RHJHpEl3RAo9PT2ZTb62ttagr7x5Jt8RaezaI8LMzEzRY4+tLmCLE/ODpaWv
nT8fCATGx8fTOcG0toM1MjxpG7j2SMpzJ0+mv0zEZ8C0p0/SJmmblrQ/vXUr
M0KI5KC7IruRtM1M2k1NTStK1zsKC09VV7/V3h4Oh0VK110+vMDwpG3mmPbc
/Iys9BdLa2ur7nLsRtImaZuWtIXMqapGre+XQtI2MGnfHBtT502px6a8vFfP
nr3S3z8xMaG7ZHiQ4Unb2DFt8X2S7ncMjBwkbZK2gR/7ysrK1HN/ZNs23bVo
QNI2MGl/8/jxpTP2wdLSnp4eJl3DUoYnbWPHtIX0V42BF8hI2iRtA5N2c3Nz
6rl/4+mnddeiAUnbtKR9pb9/XbbdIcUfbsnPr6+vHxkZ0V0jjGB40jZ2THsu
o9+JxWK6a7EbSZukbWDS/tF776Wee1VVlXHfdyRtw5J2NBrdUVioxuxnDh0S
DcHA8SVoZHjSNnlM20/SJmmbx+SknfmNp7sWDUjaRiXtxsbGzIC9JT//tfPn
b4yO6q4LJjI8aZs8pu1fv56kTdI2DUlbHK+ePau7Fg1I2uYkbfEtlx5KEiFH
fPIN7ObgHIYnbaPHtEnaJG3zkLRJ2iRtbxO9+dGysu0FBY2NjeLrTnc5gOlJ
mzFtkrbuWuxG0iZpk7R112I3o5J2JBL58QcfGNivwbEMT9qMaZO0dddiN5I2
SZukrbsWuxmVtAGnMTxpM6ZN0tZdi91I2iRtkrbuWuxG0gY0MjxpM6ZN0tZd
i91I2iRtkrbuWuxG0gY0MjxpM6ZN0tZdi91I2iRtkrbuWuxG0gY0MjxpM6ZN
0tZdi91I2iRtkrbuWuxG0gY0MjxpM6ZN0tZdi91I2iRtkrbuWuxG0gY06u3t
bW1pEcfExITuWux2Y3Q09dyvDg4al7Pn5t68eDH19A3sd4LBYOq5j4yM6K7F
boYn7fQ33uTkpO5a7Jb5jae7Fg1Sz10ciURCdy12M/kbDwAAOxmetAEAAACL
kLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQB
IGn28+nbtycmJm4v8t/Ff/301i3xzy/mjFuDHQCwOiRtACab+c1HvR09f3Dk
X6S+Cdf5Hvqnu964IUXpzz/+ySv7Uz8gjiNXPtFTKwDAbUjaAAz1+cct//TB
dT7fwxs3in+mg7Q4XgpPpbeKno38xWu/+7X0f/L7fA8c6Fps3BsAgEwkbQCG
+vzj3o6eP/v41keRv4v+1U/+7e99PT2s/cD3r6d/RqTxdMwW/yn5X7/1I5I2
AGA5SNoAjPXFXCI96fqv2/+13+cTQVp8H/6znW03k3829bOTv5WM1vVXRBr/
6P0//vax46d///dFONdZNDxEnOIF+t7nE+V5M7/5aCT8334x9PNAIPCDa7f+
+83fiG+e2fv/PXgBSdtANHmk0dHf86vOVMxOjl0/eOjKzNwn//m8+PcHvvWj
6f9990dSyZzGgpxIjAVSn7ff3tHxG93FwAqz8+/yuV2/lzk5LXX8k8e+/YO/
muL2ahOQtM0xOx+r0nd+0eRBR5+WDM//+MtXv/K19CyR//if3v+3v/f19V+t
GfwHojVyb/aLybcL/2XqMsoDx3/IfCTvEV3q//jhS6nz9/RZvHQ8UH/F8O9e
E5C0DZFq8v6Ft33R5E1GR6/47Mqx30nNxM56aySQQx+/eTTV+pINkHtsPUf0
ueItXqLDvXffx2tBrpR5G0nbBCtt8rrrhR1SHwk6+ky/+WFleqp28tzzpf6/
110SPOnzv7yUHuqkAXrSF9db777FDx76j//p/Y8if/e3kanbn/zyavtZtfNt
+XVMd72wEEnbBKLJp2ef3rfJn/v157rrheVER58eT6OjT0t3jqmDtgBL/OMv
Mxe0SZ7T0QC9Zuon/+p3k+/s098Px+/9aWrgejbyF28X/svMbveBb/2Ik3oP
I2kbYEGTn0039tQ/Fzb55FrBNHnP+8dfphaIJmlLRHO4t9bfg4f+9G+4pIsc
+2Iu0fvvt4hv2q+ebknfNUMD9JqJH4vv1fW/V/H//E08+w9EP1ywSv9XGlK9
MzyJpO19Ez8W7+/STf4//IuvpW/ZoMl7m+joh/9gh3ij6egl85/5qQ+e/efp
7u/EdV4V5JL4jP3D1YbkF/L8nbb/7+kHaIDeMzs/D030p0eufLJYTyr+/Pb/
/VL6CprooMXnwdYqYSOStrelm/zhP59cbAJ2qsmn04Vo8ldmSNreJN7Wz37y
anKwhY4+m8RYoOTrGZd00/vXADnxP3+WumhSee1/zc1+Lk7rUlmLBugtn4l3
1v+VhhuJRXvS5J9/+WFIJ226Xa8iaXvdZ3/6f34l1eQXozb54N+TtD1q/o0W
nTsdvSpzMZb0pBpW40Hu3L1i8uWN55/97ORvcarrPeLN/ej9Pz7/k1/d5+e+
nMXHmLbnkbS9TTT5yf/Sspwmn15JmDFt75I7+p8e/W06+pTZhauupY71X60J
ctMCciF1eVG0tQ3/R/2Xt8h99tN/8zs0QHP94y9PffXLbverNUza9DCSNpIy
kzZN3otmv1zCbkFHT9JO+1Vn6sP/Zx/fSo9siz9h9S3kRHqXKPGJ+nIiH0nb
bNEPRdJOr6+ruxpYiKSNpPkmf3du6mvB9Pok8Ix0R5+xch1J+0uff5xadS21
T03qjtFUc9j1wScZP/fZf7/5m9SG7NpKhRslPml/ILkf9wNvj2T8KUnbaP9w
tWGD35/6AJz5y7/TXQ4sRNLG3Je3w/u+3BRPdznItYyOPuMciqQ9b/bzVLR+
oGM09QeZzSFz0cu/7X7B7/P9wS+nSdpYvvRqP/9sZ9vNBYMYJG1ziU/Fz07+
1t0teg+8w/0g3kbSBk3e2zI7+oU3xhqatBOx6N9GptL5ObVXpkjUqU/+bOYK
JD5fapGW5H/4VWeygbzUb84L5X2zn3/0/h93dnZ2r9nlH/zJYsuopjYOW/f1
PZ2T0gkaSVsTW973pR5f/O//+9P0XSFMUfM8krbhUk0+vYkJTd57Mjv6hZOC
jEzaEz9OLrMj+rgHD53/ya8++c/nU9OzM+98nP1iMnUJILWX0yMd1z//y0si
e6d+jIlV3hH98N5GReIzsdp/LrX6+pcT83Z98IlyKYSkrcn8+76Wd/z+7/vS
Zj9P7V7EUqKGIGmbbr7J3/22//51UoTXLN3Rm5e0/7r9X/szesnUOcgP/ure
jKnZjKsAqdPP9JztP/jltMbKkVvJ77r5ZdaKHnusaM3Wf/3xc7/+fHZW+gZN
ruOX2mt7+n+rJZC0NbDlfb+PL663pr5YlAlF8CaStuFSA540eY+6X0dvXtJO
btK0MGlnvTEh2S4W/tjCWyOBBbJmrdQmgItvSvLZlWP3kjbT9txopRk7KfFJ
6v5r8cH407/hjg8jkLSNRpP3tPt29Jk715jS0X/+cfoijnhlfvBXU1lvbxR/
mJq/nRzNfvDQn318ayoatb9YuNjEj1Oz/RddVmL283tj2hk33sLD7l0ve/AQ
fa45SNrGosl73HxHL4L0Eh39vS3qzOjoUzNDxJGIRYXFlhBJnZWkf0y8Mia8
OMip5MyQ1Dylh078h7psTv/+79+bwvTgoZov/7z2pf+LHQ08Sbyn/+OHLyXP
8b/+eMuvY7zF5iBpm0lq8rrLQc7dmwJKRy9JLxfv4ecI3e7NDEndV5ue8J95
ZP1zNub2qvTyofS5piFpm4km73X3ZoasoqO/MkMKBdbis5/8q99NNa7UfbVq
Q1v0zx88RAP0nvQtUdxYbSCStoFo8gZIdvT36dAX7+gZUgPWaDbyF70dPYFA
oC+bQN/74ji36+5ikv/ksW//cP5PxCH+hZvTPebzv7zE+kUmI2mbRjT5VL6i
yXsbHT2g0RIzlO7OX/ryRonU6kB/L/1XeEViLOCb3war8tr/Wmp72eiHr37l
a6tYMxDOR9I2imjyySX3afIGWE5Hn1rlj44e0IH1tL1P9Lmp3ZFEn7vkD059
8Ow/v7cjLbyFpG2OdJN/8b/+9ZI/OHXl2O/Q5A1g4nragGOQtL3uf/4stXHY
A3/451PRaCSb6du3b3/yyz85+BXfQ+wX6VkkbVPMN/nk6CVNHneRtAGNSNpe
Nhv5i1Sfq96KLt0sc/f/+nwX/5rRLW8iaZsg1eSXaO/y/XE0eSOQtAGNSNre
Ff3wtd/92mKLPmU9Hjj+Qz4DXkXS9r5lN/l00qbJm4GkDWh0b4Gg397RYcom
rSb4cvPlrIs7LXYc/vNJ3XXDKiRtj6PJY1F09IA+s59/9P4f/7Dv/cs/+JN3
rv6afUg9ZGr4v3zQdflyb29vd3d3zzL0dvSE47qrhmVI2l43Jb7MRSsW3+fL
/CdN3hR09IBW6UV+vphLsOAP4FUkbc9bajU/mI2OHgAAS5G0AQAAACuQtAEA
AAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAAr
kLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQB
AAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAA
K5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0
AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAA
ACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQ
tAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEA
AAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAAr
kLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQB
AAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAA
K5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0
AQAAACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAAArkLQBAAAAK5C0AQAA
ACuQtAEAAAArkLQBAAAAK5C0AQAAACuQtAEAAACLzM7TXQUAAAAAAIBD/f+w
5IY3
    "], {{0, 914}, {974, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{974, 914},
  PlotRange->{{0, 974}, {0, 914}}]], "Output",ExpressionUUID->"7bcf08aa-0c24-\
4b36-9644-7075c529ad2f"],

Cell[TextData[{
 StyleBox["7.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Explain why a function that is not one-to-one on an interval ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "2e721fb1-3401-403e-9b5a-27028dcef181"],
 " cannot have an inverse function on ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "9ebed115-150f-493b-9220-31841d5c41f9"],
 "."
}], "Problem",ExpressionUUID->"c88e0e68-53e8-464a-9a2d-0f99917dc589"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 "\tUse the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "34b763b7-d451-46b8-9372-b78f226634c6"],
 " to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "3ad93f43-b11e-4e31-9ee5-ae6ee5b90f32"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "(", "9", ")"}], TraditionalForm]],ExpressionUUID->
  "544677ab-2b90-4577-ace1-7d49b6cf106c"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "(", "12", ")"}], TraditionalForm]],ExpressionUUID->
  "458aa24f-b471-44cc-8b5e-7e5bce0ea43f"],
 "."
}], "Problem",ExpressionUUID->"17da21a4-a5ef-4d43-8516-7a8a7601f32b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
vzp103TP+CJb7qsfIXWqgjqVo04RWdSpCupUjjpVsfzqNJaYjLUO+Eyc7hqr
UTpSpyqoUznqFJFFnaqgTuWoUxXLrE7dNPWdNd1xJpl2dE/oe6hTFdSpHHWK
yKJOVVCnctSpiuVUp6sPX8iladHEaTZNa3eE1KkK6lSOOkVkUacqqFM56lTF
sqnT+wemcif0W/xmTWsZjdSpCupUjjpFZFGnKqhTOepUxfKo06dGZvxP6HcM
j8yman2E1KkK6lSOOkVkUacqqFM56lTFMqjTtvE5/82jOoZHazxralGnKqhT
OeoUKpxM5vyx99/oPlb5NVHmqXbu4759+/Ye3N7W/lp7Z2fXhwdP1/SSqiLU
qQrqVI46VdHoddo9Nhtr97vWdMvJ/rl0fVqROlVBncpRp5BzPu5Z9+O7TeZ9
+uZfTs6lK/kF/2LfGw9/e6V5FfN/3stVTU1/c8uDrfuH6/OsSJ2qoE7lqFMV
DV2npj9Nhfqc0N881DsxXbdQpE5VUKdy1CkkTJdufOgfTODZEbvjpXOXexXz
jNf/m7WrsllYbsSaO0drP4lKnaqgTuWoUxWNW6cjs6lYx7DPCf3NQ23jc/U8
QupUBXUqR52iOl6X2mnPCuvUPN199Ozdi3Sp9wZNoJoH17RQqVMV1Kkcdaqi
Qes0mXbce5WWzppuPLFh9GIdrjUtRJ2qoE7lqFNUYWLTWtN1f3f1g/c93/Jv
X7nOC9TL12nP07kEvf6bzW1x94zVxOT5Y+9v/fd/WTCb2tRk3uajg7U9n0Wd
qqBO5ahTFY1Yp7l7lfrdEMo8AdbvKvx51KkK6lSOOsVSOdmrRnNXhzrJTN9L
lc6dpsfbv3G1qdDYt57eN3PJfVNO/lJ/9+LVL392wfn977XWdJEUdaqCOpWj
TlU0Yp26N4QqnTVtPb768IX6p2mGOlVCncpRp1gqJzvyDq6vtE5PveYufbru
u91js6VPvO4JrJnE96+94fYVuUnUz1/zUxOxtXuKpk5VUKdy1KmKhqvTNUen
fFbom5GYDOoIqVMV1KkcdQqpyurURObohntXNTXdveNMuSc9E6gTm9bml/Bf
9932JGf2qVMp6lQFdSpXWKfurvt+s6axXWMBZiF1qoI6laNOIVXh3KmTfP07
V9rp0LIPMf831n3P51bYt2bqtGsmw9wpdSpEnaqgTuW8Om3dP+x7ram9V2mA
R0idqqBO5ahTSFVWp+aJ7vDm53+1tf8yz3gFJ/dzdVqzZ0jqVAV1KkedqmiU
On3utW2xlr0+tyuty71KF0edqqBO5ahTSFV4Zt9JF66BKitbp/bk/qprf8B1
p9SpHHWqgjqVMz9nN3V0xJ589Yp1Cfe2UIXTp+0navp0VyHqVAV1KkedQqry
VVGVKKjTWHNnTff6o05VUKdy1KmK8Nfpgb7DJk1jj7/yhd9ujbWN5ut085Dv
WtH6o05VUKdy1Cmk9OrUPDnPdP98VXazUzPWfrC0PVXWrFlz+4om8+oVjpUF
O6yuzP7PyscPH3igs7PLPId7P7IZDAZj8RFb327S1B2mUR97xRv3Pd+yqaMj
Ho8HfoR2mGc2nt8YIRnUKaqkV6fmV/XOez6Tmzi94/ml3szU1Kl93UrG4ver
utzdrKhTBoOxtOHOl3pRWlCn5u/Nk0ngh+czuniKYwQ/qFNUSalO3RLNbohq
x9MfLfk8l6lTb96VOmUwGOEZzW3xL619JvZit/vSpKlXp+vbw/k0Es6jYkRw
UKeoktbcqZPc9sAq+3auWJeo4orTS5cu/XUpBgYG7Mn9r33ta39Zirm5OfO+
0ml3nVetuZMq2RkM805r/s6q4l13Ojo6GvSx+Os/2p97luv/KOhj8TcxMWGP
8N339gR9LGV5PyxSqVTQx+Jv586dtqmmpqaCPpYF9s1cim0eci8xfbE79rMt
bqC27HUvOs1u/hwqp06dsp/lxAd/DPpY/Jmnbu9LMehjKctbLzA7Oxv0sfjr
7e213ywjI8NBH4s/8wOaOoWIUp2mep62b+TTN/+yf64eV+M3xKoo75Qfq6Kq
xqooFYVJEPSx+AvnqqjJuXSsY9jdPMoMU6ePv2IC1f1DfCTw/aNKmd8x7cfw
g94Pgj4Wf6yKUsGqKCx/KnWaOvbMJ693d5G67rtt43O6B1hOQ9Qpa/blqFMV
1GkVUk46tuNMbmG+nTu1J/Rb9oZh/6hSds0+dSpEncpRp5AS16l5Ak888hX3
es7rv2nStKa7SBWiTlVQp3LUqYoQ1mksMblg1307d/rYK637h1OzYTnIQtSp
CupUjjqFlLhO+3+z1k3TFbc+/dGs/uGVR52qoE7lqFMVYavTRwenc2nqbbmf
rdMv/Hbr+WPvB3vH0nKoUxXUqRx1CilZnc50/9xbpF+TwyuPOlVBncpRpypC
VafdY7PuSiibpoVzp+vb4/H4hwdP1+0k0ZJQpyqoUznqFFKCOvVWQjUnJmp1
eOVRpyqoUznqVEV46nQ07cS2nMwVaeFo2bupo8PdguPjPuZOq0OdqqBOsfxV
W6d/Sfzabj1q0nSRaQTHqdVzOHWqgjqVo05VhKROcyuhStO0Y3hbb19nZ5cJ
VOZOq0adqqBOsfxVVacX+96wZXj3jjOLPUvPJJqvvuHRwela3PGZOlVBncpR
pypCUqfuSqjSNN14ondi+kj/R/YmoeePvR/Ou9hTpyqoUznqFFJLr1OTpvd8
bsXKphvv6x5ebGI0Pd55z2dWXfuDrhmtY12AOlVBncpRpyrCUKe5lVAldfrQ
WMr8Gv7RRx+Zw2PuVII6VUGdYvkrrNN7X7x8nY51f//aG0yaXvls59nzyQk/
5u/PH3v/13deU/V9oypBnaqgTuWoUxWB16m7Eqr9hHsTqKJATUzaX8PNz1lz
eMydSlCnKqhTLHveyiYTnLE7nh9d/FL/+TT1XqXcvexXNTWZYR7w1MhMjS48
pU5VUKdy1KmKYOs0f0+ooonT7MVLXp26t4/s6mLutGrUqQrqFMtc6lj7N64u
rMrFVt9nLyK1zVkuSr1hF0xVNBlbLepUBXUqR52qCLBOHceJ7RpbsLXp/Eoo
8wu7F6Lm52w8HmfNvgR1qoI6xbJknlr/8z9eWvfju4umQLNJ2dR0z4MP/uQn
v9raP/HnP+dfJ3uv0stGadG4e8eZ2p3/ok5VUKdy1KmKAOt09eELC/Y1nV8J
1T22YBtne2af604lqFMV1CmWH/MLv/Nxz7rnnjSBasZzr23zfWnq1H2k9wyc
Hj+4vW3DCy9s3LixwpfmjeybuVS7fwh1qoI6laNOVQRVp23jc+61piUroR4d
LD4MrjuVo05VUKdYxuzFVOY51lk4UtnhZDu28MFhezamTlVQp3LUqYpA6rR/
Lu3eE6p0nX5isnR2lOtO5ahTFdQpEFrUqQrqVI46VVH/Os1tvO+3Esr3slKu
O5WjTlVQp0BoUacqqFM56lRF/evU3Xi/dNZ081D/XNp3apTrTuWoUxXUKRBa
1KkK6lSOOlVR5zrdMHrRZ9a09Xjb+Fy5V+G6UznqVAV1CoQWdaqCOpWjTlXU
s05zl5uWpOnqwxcWyU6uO5WjTlVQp0BoUacqqFM56lRF3eo0mXZi8RGfc/rZ
jfcXeUWuO5WjTlVQp0BoUacqqFM56lRF3eo0d7lp0Wn9LScLN973xXWnctSp
CuoUCC3qVAV1KkedqqhPnbqXm9o0LZw73XiibXzuspOhXHcqR52qoE6B0KJO
VVCnctSpijrU6chsKtZeckK/9fhdhy5Ucp6e607lqFMV1CkQWtSpCupUjjpV
Ues6dezupku/3NTDdady1KkK6hQILepUBXUqR52qqHWdrj58obrLTT1cdypH
naqgToHQok5VUKdy1KmKmtZp2/hcrHWgdOLU/H3lHxCuO5WjTlVQp0BoUacq
qFM56lRF7ep0ci4d23KydOL0qr7kkqZAue5UjjpVQZ0CoUWdqqBO5ahTFbWr
09ie8dKVUJVfburhulM56lQFdQqEFnWqgjqVo05V1KhOHx2c9lkJtXmofy5d
RZ1y3akQdaqCOgVCizpVQZ3KUacqalGnuTuWthRPnD41MlPF1CfXncpRpyqo
UyC0qFMV1KkcdapCvU5Tdgupoo33zUhMVndWnutO5ahTFdQpEFrUqQrqVI46
VaFep/5bSHUMJ9NO1XXKdadC1KkK6hQILepUBXUqR52q0K3T7rFZ3zuWmr+v
+m1y3akcdaqCOgVCizpVQZ3KUacqFOs0mXZiHcNV37G0HK47laNOVVCnQGhR
pyqoUznqVIVincYSk6UroarYQqoI153KUacqqFMgtKhTFdSpHHWqQqtON4xe
1NpCqgjXncpRpyqoUyC0qFMV1KkcdapCpU7d20K1nyit06dGZuT/cK47laNO
VVCnQGhRpyqoUznqVIVKnbq3hSpdp79rTCUmue5UjjpVQZ0CoUWdqqBO5ahT
FfI6fWpkxmed/paTk3M6p+G57lSOOlVBnQKhRZ2qoE7lqFMVwjodTTvubaFK
Jk43jF7UukKU607lqFMV1CkQWtSpCupUjjpVIalTx3Hcc/ql6/SrvS2UL647
laNOVVCnQGhRpyqoUznqVIWkTh8dnPZZpy+4LZQvrjuVo05VUKdAaFGnKqhT
OepURdV1mjunX7L3ftv4nO7Zd647laNOVVCnQGhRpyqoUznqVEV1dZo/p180
d5qYVD9CrjuVo05VUKdAaFGnKqhTOepURXV16q7TL73cVPucvsV1p3LUqQrq
FAgt6lQFdSpHnaqook7z6/RrfE7f4rpTOepUBXUKhBZ1qoI6laNOVSy1Tk1/
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
TdOCudMv/Hbr2fPJoA/NH3Uq1yh1ytypEHWKyKJOVVCnctRpFfKLobzx5Ktf
WvtMc1s84yRToZywok7lGqVOmTsVok4RWdSpCupUjjqtwurDF3Jb7ts0tXOn
L3Zv6ugI50WnGepUQ6PUKXOnQtQpIos6VUGdylGnS+Uuhmo9nr/idH7u1PSA
OcJkcjroA/RHnco1Sp0ydypEnSKyqFMV1KkcdbpUsV1jC7o0W6rNbfFNHR3x
eJw6rRp1qoK5UznqFJFFnaqgTuWo0yXZMHoxtxKqsE7fOvv2O2/bI5yepk6r
RJ2qYO5UjjpFZFGnKqhTOeq0cu5iqI7hBV1qxuahfTOXtv9uB3UqRJ2qYO5U
jjpFZFGnKqhTOeq0cu5iqKJZ05bjsYS7wenOnTupUyHqVAVzp3LUKSKLOlVB
ncpRpxXqn0vn7gxVWKdbTroNkMn8fufvqVMh6lQFc6dy1Cm0nD/2/hvdx8yP
iSW8jpM0r7Wpo6Ozs8t8I3948PTkXP1+8FGnKqhTOeq0Eo5dDFW0Tr/1+FMj
M3Z6ijqVo05VMHcqR51Czvm4Z92P7759RdOnb/6lycuKvhnT4/2/WWtexcTh
qmwirmy60X254tb7nm+p9I3IUKcqqFM56rQSbeNzCzY4tWPHGe/3YepUjjpV
wdypHHUKCdOlGx/6BxN4dsTueOlcJa+WOrbuy581UWqKdNW1P2jdP9w7MX2x
741/+8p1pldNoP7NLQ/um7lU60ClTlVQp3LU6WWlnLTPYqiNJwqfKKhTOepU
BXOnctQpquN1qZ3zXEKdpsfbv3G1eS0zbIWanztmuN/C6fFf33mNfZufv+an
5j/V9J9AnaqgTuWo08u661DJYqhWdzFU4cQUdSpHnapg7lSOOkUVJjatNV33
d1c/eN/zLf/2leu8QK2kTj969m7bn6uamp7+aLbwP7mBOtbtTp9m2zXW3OlW
a83+FdSpCupUjjpdnLsYavNQ8fb7W04WXaZOncpRpyqYO5WjTrFUJhcv9r3R
un/YpGPGSWb6XlrC3Gk2Pm2dxr7XWrqEyvzvxCNfsSf9zVj7wQXqlDoVok5V
BFWn7mKoPeOl2+8/Olg8K0WdylGnKpg7laNOsVROduQdXF95nY5uuDf34Kam
H/3hnO8vlSZ9bb6WK1gt1KkK6lSOOl1EfjFUi/9iKA91KkedqmDuVI46hVTl
dZo69swnr8+tzb/+m+aHjs9DzDfyTKL56htswdqH1ShPqVMV1KkcdVpOucVQ
3WOzpQ+mTuWoUxXMncpRp5CqvE77XrIzouaRn775l/3ltjZ1kp33fMa+QfPg
1a8PpGrzuyd1qoI6laNOyym3GMr3wdSpHHWqgrlTOeoUUpXVqSnMxCNfyT+y
ubPcKXsnu3LK2wQ19r3WinapWjrqVAV1Kked+qpwMZSHOpWjTlUwdypHnUKq
wrnT9Lg3I2rGFesS5X6jNN/LM90/b8p2o7tX/7U/6JrJ1OIbnDpVQZ3KUael
Kl8M5aFO5ahTFcydylGnkKqwTlPHmq++wVuM79bpom/T26Vq1XXfpU6pUwnq
VEWd69RdDGXTtGgxVPmf9dSpHHWqgrlTOeoUUhXUqZNd6/T9a2+waXr5raIW
1qnv+qlSp06dOrQU27dvt3X6xZtuMom1b9/eyocp27Pnk5n0eK1fdnZ2mV/A
zbPcufPn/jR1IYSjp6fH+4Eb+MH4jgOHDtoj3H/gQOAH4zvMl649wnd27wr8
YMoNr07/ZNT4fU1MTHxq25HYq31Foz2ZTk1MTvz5z+W+Wcww3yxjH0/U59tz
qS979x61R3j48OHAP6G+Y2BgwH6WzVNiGD5ivi/NBzD3pRj0h6vcyM0qdHWZ
r+SpqanAj6d0mM+v/TCaz3jgB+M7zPcIdQqRCudOsyvxq6hTE5DmwZUcyJo1
a+zcrHc8lYyV7qs0eQdW4fjhAw+YZ55NHR3xeLzWL72nYgYjEqOr6wu/3Rp7
7JXY4wvH+nbzHWEeYGelfL8B7TeLfVmfb88lvbRpGvxH+HIj9xEO5cfQvLS/
sAf+Ubrsx9A91KAPo9yxBX4MlQ/qFFWqsE5Pvebtw2/Gj/6w6FKngjo1o/I6
Xbn0OvUOaal1an/QeM8/9g/6LxvheZjB0Brmq/2517a5LfrYwvH4KzZN7bAh
usg3S7yzxt+YS3+ZG43zHR3Cj2Ej/bbeOJ/okA/qFFWqcM1+z9OrCqYoK587
rbxOH2luvvPOO//Hf//vf//3/+OOv//7y47/dvvtuYsHmpq+ftttlQ/zir94
4om333l79+7d7+zeVdPh/gjO/ox4e9c7tX5f1Y3t27fbJ+GdO3cGfjDljtA+
y5k/BH4wvsN86OwRml95Aj+YcsP7YVHTL0XzPRV7sTv25KtF477nW7re+2Pv
u28t8rpeTZnvzcA/XL7DfrOY4wzzl6L9du7q/q/AD6bc8L4UAz+ScsPrUvP1
HM6nbm9FQ/ift6lTVKniM/v3fG6FV6e1mDvNuBe4LuEK9PPH3l+54lbz9r+2
lFVRjiu3GVYdLndvoFVRp8+MBn0s/lgVpcJLgpquinpqZCZ/Zyjv5Vtn7ffa
4lsfsypKjlVRKryy+stf/hL0sfjzVkWNjAwHfSz+WBUFqYpXRVV33akZjw5O
q2/Ibw6pd2LaXmzAmn0Jr07HxsaCPhZ/1KmKOtTp5Fw6tuVkcZq2n9g3c6mS
3wSpUznqVEVuR6lGqNPQzipQp5CqeO60cM1+5XOnNdpRytTpwOCAvU6VOpVg
Ryk56tSKJSaL07R1ILar0t96qFM56lRFI9UpO0phuapk7jTj7nf6zCev9+p0
yfud1mBD41OnTtl3QZ1KUKdy1KnRPTbr3hmq6LR+fCTlpCv89qdO5ahTFdSp
HHUKqQrrND3++neu9BbIL16nM90/XzV/r6jPX/NT97xeDeqU3fhVUKdy1Kn5
Bo/tOFOcpq3HN4xerPy8CXUqR52qoE7lqFNIVXhmP5M59ovbvR2cYt9rTabL
/tgxj/TqNNbcmXLKP1SAOlVBncpRp2uOTvkshtozvqRvfOpUjjpVQZ3KUaeQ
qqxOzU+Zi31v5B7Z1PTpm3/ZP1fmZ5yTfP07V3pn9u86dEF9SZRFnaqgTuUi
XqfmqcBt0aI03Txk/p46rTPqVAV1KkedQqrCOjWFmb30NDd9ev0328bn/H/0
ZNdP5S46vfYHXTO1OnDqVAV1KhflOjVPAu45/ZIrTtccnVrqGRPqVI46VUGd
ylGnkKr4zL4xuuFeb0/+u3ec8b2aNNXztN3oyZ7Wr92eotSpCupULsp16m5w
aoo0e5Vpfuw4U8UZE+pUjjpVQZ3KUaeQKqzTe19cvE69eVH30tM7ni89uW9+
JHXe85nc4qkVt24YvViz46ZOdVCncpGt05HZVKz9xIIuzY7qFkJSp3LUqQrq
VI46hVCq5+n8Wqc7nh+93JVi9pam9vHu9GnBfzJ//kvi195bW71psBZL9T3U
qQrqVC6ydRrbM57d1HRBml7Vl6zuG586laNOVVCnctQpRFLH2r9xtTd3akZz
YmKRhzvZMbrh3tzGp9d/8+mPZvM/ica6vStOY82diyzqV0GdqqBO5aJZpxtG
L+auNS2s045hkx/VfedTp3LUqQrqVI46RRXmPu77z/94ad2P7/bmOb0/uL13
z4MP/uQnv9raP/HnP5e+rg3U/t+s9faM+sajrZs6Osxbs5ekmr9Z/frA7Oxs
rf8V1KkK6lQugnXq3rS0/YS3r6k3yi6WrAB1KkedqqBO5ahTLJWblx/3rHvu
SROoZjz32jbfl6ZOncxi93gyibv13//FLoAyXeqm6YpbTal+ePB0jbaQKkKd
qqBO5SJYp+5NS0suNzV/KTlfQp3KUacqqFM56hRVc7Kb5Nv7DBaOVHbYOdKy
r2tf3T54YnJiYuLs+dzFZjW91rQQdaqCOpWLWp265/RLZk1jW05OltsDuTLU
qRx1qoI6laNOETin5A/1QZ2qoE7lIlWn+XP6CydOl3TTUl/UqRx1qoI6laNO
EVnUqQrqVC5SdZpbp180cbpnXH6E1KkcdaqCOpWjThFZ1KkK6lQuOnWa23u/
6HLTjmHhOX2LOpWjTlVQp3LUKSKLOlVBncpFpE7dvfc3DxWf02/JrtPXuNqc
OpWjTlVQp3LUKSKLOlVBncpFoU6dTCa2a0x9nX4h6lSOOlVBncpRp4gs6lQF
dSoXhTq9f2DK95x+Mu1Qp+FBnaqgTuWoU0QWdaqCOpVb9nW6b+aSe0K/ZJ2+
ZO/9UtSpHHWqgjqVo04RWdSpCupUbnnXaTLtxDqGfdbpJyZ1j5A6laNOVVCn
ctQpIos6VUGdyi3vOnVvC1V6Tj8+kkwr73BMncpRpyqoUznqFJFFnaqgTuWW
cZ3mtpAqOqe/eWjfzCX1u8JRp3LUqQrqVI46RWRRpyqoU7nlWqf9c+nc5aYL
504fHZyuxQ2LqVM56lQFdSpHnSKyqFMV1KncsqxT93LT+EguTQvnTveM1yJN
M9SpBupUBXUqR50isqhTFdSp3LKsU/dyUy9NW/JbSKncFsoXdSpHnaqgTuWo
U0QWdaqCOpVbfnXqf8fSjSe6x2aVl0IVoE7lqFMV1KkcdYrIok5VUKdyy6xO
eyem3TuWliyGuuvQhVRtzulb1KkcdaqCOpWjThFZ1KkK6lRuOdXp5Fzavdy0
dOJ0x5kaXW7qoU7lqFMV1KkcdYrIok5VUKdyy6ZOnUwmtmusuEuzl5uOph3q
lDqVo05VUKdAaFGnKqhTuWVTp6sPX/DZ3TR7uWkdjpA6laNOVVCnctQpIos6
VUGdyi2POt0wejHWOlC6u+n9A1P1OULqVI46VUGdylGniCzqVAV1KrcM6nTf
zCV3JVTpOf0943U7QupUjjpVQZ3KUaeILOpUBXUq1+h16q6E6hj2SdMdZ5Jp
p3ZbSBWhTuWoUxXUqRx1isiiTlVQp3INXacpJ20qtPhaUzM2j/bPpWu9EqoQ
dSpHnaqgTuWoU0QWdaqCOpVr6DrN3xNq4UqotvG5us2aWtSpHHWqgjqVo04R
WdSpCupUrnHr9P6BKZ+tTbMroeqcphnqVAN1qoI6laNOEVnUqQrqVK5B67Rt
fM7nhL4Zicl6ntD3UKdy1KkK6lSOOkVkUacqqFO5RqzTsov0d5xJOen6T5xm
qFMN1KkK6lSOOkVkUacqqFO5hqvTkdlUbMtJn4nTjmHzn4I6QupUjjpVQZ3K
UaeILOpUBXUq11h16u4fteOMz+Wmm4f2zVwKZNbUok7lqFMV1KkcdYrIok5V
UKdyDVSn297syO0fVXTH0uwi/WCPkDqVo05VUKdy1CkiizpVQZ3KNVCdxta3
u7cr9V2kH8RKqELUqRx1qoI6laNOEVnUqQrqVK5R6vTKZzu/tPaZ2OZRN1AL
J04TkwGe0PdQp3LUqQrqVI46RWRRpyqoU7mGqNP7nm+JPflq7PFX3DQtvOh0
z3gY0jRDnWqgTlVQp3LUKSKLOlVBncqFv06fGplxu/RnW4rnTnecSaYd6rRC
1KkcdaqCOgVCizpVQZ3KhbxOc7vuP/aKDdTYq32xtmygdgxPzgWztakv6lSO
OlVBncpRp4gsr05X33xzb1iZZ2Dvh0XQx+Jv586d297sMEfY09MT9LH4e2f3
LvsxNH8I+lj8mcK3H8Pt27cHfSzFfrW1310J9WK3e1rfDvPn7NjW25f44I/7
DxwI+hhzOju73uzqMh/JoA+krLd3vWO/FHfv3h30sfgzvx/ZIzSpH/SxlPXm
/OZmQR9IWd7ztvkGCfpY/Jnnbe834qCPxZ/5HqFOEU1enX7xppvi8bj9ueY9
7zEYdR2h/PJ77rVtbo7aE/reH7Ivm9vipgbDdsz2eMJ2VD4jlJ9uBiOEgzpF
1Ng6NcPU6ZvZn2jeL7wMRj1HOEPFTdPHX/FO6OcC1fz5yVdNmuaOmcpa+uAj
xmBUPqhTRI03d/rVW245NTIczuFN6p7KGgn6eEqHd/7l0KFDgR+M70h88Ed7
hIlEIvCD8R1Hjx61xbJz587AD8aO1v3Dn9p2JNayNz/mz+yb/zQwOHD6zKj9
ggzP16R3sZ85vMAPxnd4F2mbr8nAD8Z37D9wwB7h7j3vBn4wvqN3YnpTR4f7
xBh/K/CDKTe8i0zMT5nAD8Z3eM/b5jMe+MH4Du95mzpF1DTiqqjwrEDxsCpK
Lmyrovrn0m6ats2vzbf7Rz3mzqPe93xLMrsQyn4phuoLMvyrog4fPmyPkFVR
1Uk56YyTNGnqnuqKh3pVlP19k1VRVWNVFCKrEes0hKhTuVDVqUnT2JaTC9LU
bh6VTdNNHR1OyKLUE/46Zc2+nAlUe4Ss2ZegToHQok5VUKdy4anTkdlUrGM4
m6MFaZqdO/3Cb7eaNO3s7DJ5QJ1WhzqVM19+9rQ+dSpBnQKhRZ2qoE7lQlKn
o2knl6aFt4LKjqv6kt4KfcdJB3iQi6BO5RqiTu3XIXUqQZ0CoUWdqqBO5cJQ
p+6saXykKEpzIzHpZDLeSvN0mjqtEnUqx278KqhTILSoUxXUqVzgdZpL05Ip
U5um9jFvzm/wQp1WjTqVo05VUKdAaFGnKqhTuWDr1F0G1TFcbtbUexh1Kked
ylGnKqhTILSoUxXUqVyAdeqmqZ01tQvzi07oF1xiSp3KUady1KkK6hQILepU
BXUqF1Sd5jaP8lsGZdK0qEKpUznqVI46VUGdAqFFnaqgTuUCqdMFaVo0cbpw
1tSiTuWoUznqVAV1CoQWdaqCOpWrf53um7m0IE1bitO0dEdT6lSOOpWjTlVQ
p0BoUacqqFO5Otdp78S0m6blNo9y/Pfap07lqFM56lQFdQqEFnWqgjqVq2ed
do/Numm66OZRvqhTOepUjjpVQZ0CoUWdqqBO5epWp7k0tXcpXZimqw9fSC16
EyjqVI46laNOVVCnQGhRpyqoU7n61Gnb+JzPtlHZcdehy6RphjrVQJ3KUacq
qFMgtKhTFdSpXB3qdMPoRTdN/ep0zdGpSt4CdSpHncpRpyqoUyC0qFMV1Klc
rev0qZGZ3Nn8kstN7x+oKE0z1KkG6lSOOlVBnQKhRZ2qoE7lalqnpj/9T+hv
PPHo4BIqjjqVo07lqFMV1CkQWtSpCupUrnZ1uubolDtfWrpCf+OJp0Zm/LeO
KiP8dXr06NFDWXNzc0Efi7+xsTF7hBMTE0Efi78//elP9ghPnToV9LH4o05V
UKdAaFGnKqhTuVrUqSnP1Ycv+NwHKpumG0Yvlt4NanHhr1NEAXWqgjoFQos6
VUGdytWiTmOJSd8LTWObh9rG55aaphnqFOFAnaqgToHQok5VUKdyunVqytNN
U99bQW0e6h6bvezmUb6oU4QBdaqCOgVCizpVQZ3KKdapKc/YnnH/NN1y0qRp
1W+ZOkUYUKcqqFMgtKhTFdSpnFadJtOOm6a+15puOblv5pLkjVOnCAPqVAV1
CoQWdaqCOpVTqVM3TXec8Z817Rjun0tXca1pIeoUYUCdqqBOgdCiTlVQp3Ly
Op2cS5dN0/iIPE0z1CnCgTpVQZ0CoUWdqqBO5YR16qZpfMR/y/34yMhsSuUg
qVOEAXWqgjoFQos6VUGdyknqtN+mqe+s6Y4zJly1DpI6DYNUKnX2fLJ3YtqO
0bRTyay4eS2tX1Iy2U0hzFtb0q0cFFGnKqhTILSoUxXUqVzVdZpL09JNTbNp
mnTTRS0iqNNgpZz0G93HYm2jsdYBd57cDvOpf+usadRyr2VKsnX/8BXrEp/4
3YXU7LTKV4OpYvcY3jorXGdXHepUBXUKhBZ1qoI6lauuTt00bT/hf0J/z7ib
pqoHSZ0GyKTpr7b2Zz/XA7Ge6cm59PiR07nNGVqOX9WX9N3D1uToP7466Aat
Xkma3HW8g2kbfWpkRuXNVo46VUGdAqFFnaqgTuWqqFMTG7EtJ/3vBrVn3LSK
+olX6jQouTS1s6Y97vynGb17j+Y+++Zlz7TPa01M5mZZF51crYKTbVR3Ite8
8c2jD42l5GvuKkedqqBOgdCiTlVQp3JLrVM3TdtP5OOkME0TkzWqR+o0KB8e
PO12pvlct4162y/k/jJ7fr907tSdWd08ZM+/9+tde1zINKobqNljMIFai3fh
izpVQZ0CoUWdqqBO5ZZUp+5Vf1tO+l9rmpis3SwWdRqM9PgV6xKxze7EqalQ
+3fms5yanX7Ynl7PnrUvnBt1Z03tby5to121PPGeKjjF/7zP9G1NUKcqqFMg
tKhTFdSpXOV12j02m0vT0stNE5M1PUjqtP4cb4601U1Nt0Lnf/uwp9ftHwqZ
avWu96jpOffc+3WSuXndzaMq2+peFnWqgjoFQos6VUGdylVYp7k0tedzF86d
rj58odZhQJ3Wn5ua85/uT/zu8p/i3GSmfZWead+lUorsFbDuVQTZCwzcbQFq
cMFzEepUBXUKLCY93rv36KaODju63vtj70S9zg9Rp0qoU7lK6rQ4TQvmTt00
rf1BUqf154af/Yy3HvdO6y8ifzHqwonW2nKS7s4A2fdbyUEKUacqqFOglPlJ
ev7Y+xsf+gdThrevaDKJuKrJvLxxVfYPX1r7TOv+4TocBnWqgjqVu2yd+qTp
/NzpmqNT9dkXnTqtswVL9Su4sLNwotVd2l+vdfTOwipuT9Z2+pQ6VUGdAqUm
Nq21OWrK8L7nW0yLpiYme99969d3XmN71bw0v4zX+tmVOlVBncotXqdumm4e
8l0Gdf/AVN0ihDqts9zipoKrOhd5cG6Pqfm9+k3K1vq0fv5dO+n8obYet3te
1Q51qoI6BYqkep42XeqO67+5/kN3HYf75Jbd4dm8/OjZu00u2nnURwdr++s/
daqCOpVbpE7dNG332zkqm6b1PEjqtM4KT+v77mi6gLc6qTW38VRdjnH+nS+c
5q3p9Cl1qoI6BRZIHXvmk9fbOr17xxmf+HSS7d+42k6rxu74j3O1PBbqVAV1
KleuTheZNa31726lalqn9tbtHx48bX5jdS9i7Bh2/+FbTvpex5g75b3lpLvP
Unyk6rsg5Wb8dIdg8vDs+eSP/nDOjObEhHm5YPlb26j39+al+ewXvmJuaZL3
K0xlp/WTyenW/cPmedh+qN0PZunmqE7y2daE+Xv3V6QtJ+865L8yy/ylO3Nr
89hv/1VF1KkK6hQoNNP9c5umq677btdM8V4odo+UVM/TphjN8H2MIupUBXUq
51uni8ya1j9NMzWu09ydj+y/1G4jb/9n22jRfY4c7y5I5pHl75RUifzdlGwB
yl+25o6nimctezX+6tcHvN1NF15jPJB7aUfJu8gv1W9xV8ld7p3Nr2NqK3hH
2Q/p3x7JT8inZqfN8eQfk/10lDv43Mp9+xFoG52s2eQtdaqCOgUKjW64N1ee
1/6gbHkeXE+deqhTuUas07KbR208UTRvVje1q1MnOx06MpsyL3snphfkWfY+
RIUTce4TQnp8QVa1jVaxkVGucs076hiOxUd0XrpTvqP/83Q1237aDfbXfzjZ
un/YDHfGsuCDsObolPlL+1/Ny6L1+ObP+Q9Idv3UIh8N9z9lZ0Tbxuf659Jj
H08U7AIxkJ93dZL3dQ+7nwvv69B8+b11ttxbzt8CIHvA7cl0jaZPqVMV1Cng
MU96pk7tWfuVK259+qNZ/8cV1WnN5oioUxXUqVxRnS6yeVRRqtVTTevUyeal
/WY3kVYYqO4+nyUPLryPp0mmKt9pyVb2Qt4/RPhGMoUXnWbzu2gqsuhZ0bzK
fEDmLvu87Nt3CkZu4rrleOHNUnPXkWbP9bsfbfMFGR8xQVv2CblgXynzhVpd
oleCOlVBnQKFvLlT06ix77X6Xjv/0bN32xX9n7/mp1VfUVYJ6lQFdSpXWKeL
bB4VyAl9T31WRXk3kc8Hqt/WnU7hZF21Z/ZDyyncVL+ySxdyv79UsLq/+H0V
XuGQvcDVxG0u/t86ay+rKAzaio655XjtLj2lTlVQp4Cn8JrSpqzVm0q2jZpJ
fP/aG3L52txZ0zuPUKcqqFM5r07Nz/dPbTuy8GrA/KxpgGmaqeOaffPPPHs+
GXu1z/s4/M/T/qeJ3+g+Zh5w+cssG46TvHvHGa/PK9niPn/tx1tnl7SY1J7o
L/xt6K5DF9x33Ta6pAuriup0kWsAhKhTFdQpsMB8fHrjH18dzP/ccZKJR75S
eGFqTVGnKqhTOVunz722Lba+Pb8vUNDLoIrUrU4zRXfkLLO3vHnMw9mzz5fd
pr7h5CYzN+f34b/sPGR+7rRtdKl1mgtLb22U+cPm0aU2f/F8L3VKncpQp6gb
+zQ4sWltYZ2aceWzne4p/vk0tSv6F7vASQl1qoI6lTN16qbpk6+6w5s4LUjT
oA/QVc86zZRceGkvhvT+a/58dPaazMDTXdf8+vcB+2+v5AKn/I4BS6xTa8Gl
FNmZz6VuWVr8CwV1Sp3KUKeoJ7s411ToqmwWunOk9jamK269fUXufqaxe180
P4nqsPSDOlVBncr1Tkx/ae0zuTpdeEK/zlvuL6Kedeo4jhufBds0PTSWKnqM
vTay3En/yt6Lu0VA6/5h3ZfyG9wX3vWpwlCU1Kk5WreHN+d/LTIf7aXWadHN
qmLxEeqUOpWgTlFn7vN2enzbA6tsoNrtT72lUncdck8n1ee+4dSpCupUyPwu
5l5jabr0Z1tydTqfpmuOhiVNM/W/V5STfHhrf+G1lwsq1Ema//SJ310YFVyZ
nj+Bnl1MpPZSdivPBafIWytdXiScO03NThfOVFdxscSCjRTMG6FOqVMZ6hSB
ME9l/b9Z682geiP2raflMw8Vok5VUKcSI7Mpd6vMlr2xx1+JPfZKYZ2GKk0z
da9T8yTwbKvbnzZQzR+8NZKOnThtG5UsDM9Nzxbucl+46b3kpfBG805y9aZB
L/P+5+mK/oGiudPC8/Lu2xn42yNTS/3AUqeFqFM56hT1l9vYcKy7qE7tPOrK
67+5/sPJKt7szp07X3755Y0bN1b4csMLL9j3+8WbbjJ//sUTT1T+cvfu3SZu
T9VePB5/s6tr25sd9Xl3VXhn9y77HHLw4MGgj8Wf18/mD0EfywI9h4+5Xdqy
1w0we1p/fbv9m3/aN2h+1o99PBGez7tXp0MnpYdU4Xd07tLT+cVB+Y2S0uPu
R6z0tptL4WQnDNVP65uXwn3w8jtlZfd3qnBxqHTu1LzTwntCLT2wHbuFgrcN
2qLXnUq+eMx3hPelKPw6rJ3Ozq6QP2+bH2H2Y/jhgf1BH4s/08/mA0idos7+
kvi1d0K/aNgrUU2gLvWX9zVr1tgrVyscRVXc5L5uUyUvzXv54QMPmOcf+73D
aJQRqs/Xpo4ON0e9KdPH8n+48tlO81+X8ReY41TWPunx3KxmNrrak2lvN1Th
xGntyM/7uE3u7XNbciPXckR1mr2IYsEmZhW/3/zbWMqqqO3btwf+RVjT4X3n
Ltdv4XoO6hR1M7FprY3D3H776fGPnr27sBUvczOpMkydrqyqTpc07OtSpwzJ
yKWpLdKiOl3fnv/S6lqeX2OV1KlTsGeUPeNsz3F7S/UlE6dh5q4tWso+/Fa+
Tpe432mmaMG+fb92s9OllHbR5bK+m4B5vBPfDMZlB3WK+nDTdMWtbuZd/80N
oxczdpd+J/2XxK9vX9FUGIGfvvmXS/oBtOGFFx5pbn7wJz+p8KUpTNuoX7zp
JlO25n9W/tK8rwN9h83PkVoPL1R6e3s/PLA/hGPnzp32CHt6egI/GN/hncN6
Z/euwA/GjPf373dP37/YvWBkz+xf+WxnHb6ohF+K+w8cEH4EKqxTZ2GqXdWX
tBejmnZyb5RZ/ZNQeOVvIZr9V1c+P1y43+mSLi3wloaZHM3NoGZvabrUe+am
Co/8cveK6uvrq/qLp/BLMfDv5XIj3hm3zzmhfd7+/c7f2yMM//M2dYp6GOu+
53MrbH+a39YL/4t5Wr7Y94b3X22grn59YElv3ql8OI5dFWXey1dvuSV7AE7F
L9OZ+aiu6TDvglVRcqFaFWU+p7E947ndLL3xap87cbq+vffdt2r9RVX1l6I3
kVunNfveTkct87OCPdNuSm0eNcPd47Q+B1Fn9rZN86fXn5+udAIzf+8G+1oV
v7t/fHXQ25grd+Fo9qNdmJd2661F9pjK33DKXpPgtwOYCvusa78OWRUlwaoo
oNDohntz5bniVjtxWqwgX1c1NcW+11rFFf4V8tbsf/222yq9EK7uqFO5UNVp
LDGZXzlih/lzdkepTR0d+/btDfoAy/JOtNWtTjNFS4RMl7a7VW/qa6m7cTaE
Bbe8X+IsqI1Mu2nA3x6paLcHx+ZodpMB+zcLfhco2GfVvdD31b5FtpZ1ql3M
VQXW7KugToG89Pjr37nSnkz/9M2/HE07RdMCdi1/qudpb+409q2na3d1GTtK
qaBOK7f68IUFdyltyb381LYjJk3j8fi77+0J9ggXEUidFt0CPjeDGr7FUCqc
hXfIsptoVfiKC64dLXO1qnl2HZlNLWhO8+C3ztoFUOUK0wazOZjFJwoW3Nvr
rbPe9l/qqFMV1CmQ5yQ77/lMbl/Te1+cLJed6fF1X/6s3Wxq1XXfXerF+ZWj
TlVQpxVac3Qql1itxxeMHWfGPp6w5817enpCOydY/zotuQX8ki+qbCzm1/X8
pkwV78OffcX02fNJdwbeXvb51lnfZ9fW/cPuA1qO33Xogvvn7OIy9wk2/4Zy
J/pzvzr1TPdOTLvRW8FcaG4aNvvlLbmB12VRpyqoUyDPSXpzp+UmRd3nyfS4
iVivTtuTzJ1SpyJhqNNHB6eLblGaG/ERExJnz551j7Cra0/Pe0Ed4WUFM3fq
TfFlP3oVnrNuULk9CuZXgT01soSz4/nT9OVX3K//cNK7rNQ+0ryLwozM71nq
PSa7YOrydwTwsjb73mu6nQJ1qoI6BfKc5LYHVuU2Zbr+m97uhaUP8+o0dsfz
kjsVLo46VUGdXtaG0YuxzUP5zXa80TFsr285f/78tjc5s+8jtzAq+6H7xO8u
1O391p9TcjvR/qWs/HKvifJufVVmyXyuTuevLPVN/QUXvmZfulslXO69F75W
rfehpU5VUKeAxzxljW6419swf/WmQf8nvfkz++YxV6xL1O6JjjpVQZ0urnts
Np+mhXOnW06a/LBf3ufOnePMfjm5Oq3lQpswKF4SVfXdmrILx3xP7vdOTK9+
fcAO390AnPkbknoPq2T+dsFdomq/Dy11qoI6BRZIHWu++gZ7cn/Vdd9tG58r
egZ2shui5go2u66/dj+sqVMV1Oki9s1cyqZpyQn99hPmP3l5cPbsWXvLWs7s
F7OnjDeeqPB2840rt7nr/E6nVf57C86wF21Y6mS3BcvtD1b+nlb2Jgh2VPg+
81Hd6u6SWqNlAh7qVAV1CnhyT489T+fuBtXkBur6Dye9B5jnw4Pb27w9+c3T
bE2PhzpVQZ2Wfb9z6diWkz7LoDYPdY8tuA/auXPnOLPvKxdsi954aHlwChcW
Vbv4K7/uvvV44ZZQtbNg2VpdPk3UqQrqFCh1se8NO4Oau53oPQ8+99q2//yP
l/7tK9e5/zM7cfrw1v5a7xtDnaqgTn1NmjTtGPZZCbXxhHvKYOHXNmf2fbnn
9M0HcPOyvWnpAoV7Zy39tH4h70rdWl8Cmilcs7b0O6hWhzpVQZ0CRXLPuk7y
8ObnH/72SntXU2+DU1uq9dk0hjpVQZ2WMkkQ23Emv7SkoE6fGpkpnV/izH6p
3Bzgcr/c1MrtdNqeW0pf+S2ifN+UvXbUbn9a0ysi8nuc2jVcdZnfpk5VUKfA
Iuz+URMTE+bl2fPJ2dlZe8/E+rx36lQFdVrKvSFU6bWmrcfvH5jy/fLmzL53
PWTuf9rV660DRVseLQ+9E9N2p6bCCvVO63/idxeEZ+Tt9aXPtibMmzKNWqOb
irq/PtirZLNpWrdPE3WqgjoFFjF/y/vcM1udz2lSpyqo0yK5XfdL0tTdmafM
T/CIn9nP1Vrb6F2H3D2jTJqu3pS/+bvu+wqc+Rpwd3ZqWXi30PT46tcH7AdB
a4fn3IWsm0ftCind3/rzu1dlbzVVzy9a6lQFdQqEFnWqgjot5G5tWroMyow9
44v8BI/ymX17F87cLTjNh27LSTtramJe8b2ER75Os7e+smnnLizKzkNqnYh3
5l9614UqXoPq3pcq+zZXH75Q/9Vq1KkK6hQILepUBXWaf0dzaXf/KL97lS5+
2/Eon9k3eeNuCevdqiB7mySTPYrvIlQK507tSfz52zMNqMeeM7/J/33dw8KV
VoVMnZoj3zdzKZCZbepUBXUKhBZ1qoI6tXIroUrP6XcMT17upj9RPrNfPHe6
We3UdjiZ/vTmHr2blsbaRmt0ha29dMrRu25qkb1S64M6VUGdAqFFnaqgTi13
JZTf1qaV7IYU5TP7mWzwjMymkmnHXoQZ2j5XYbd9di+2n502/2o7gj6oRkKd
qqBOgdCiTlVQpxnvctOSidO28blKXj3KZ/Y9yztKizgFA0tCnaqgToHQok5V
UKejacf3ctPKLyOM8pl9YEmoUxXUKRBa1KmKiNepicnYnnGfRfrZlVAVvpGI
n9kHKkedqqBOgdCiTlVEvE6fGpnxWQm15aS7U1DFdcqZfaBC1KkK6hQILepU
RZTrdGQ25e7PWXK70govN/VwZh+oEHWqgjoFQos6VRHlOvU/p5+YXOqWO5zZ
VzEyMjyUFdpvlnPnz9kjnJqaCvpY/E1PT9sjdG8wHUrUqQrqFAgt6lRFZOu0
bXwuv4d8we6myaXf2JEz+yp+v/P39ghNYgV9LP7Mz1l7hOYnb9DH4u/06dP2
CD/o/SDoY/FHnaqgToHQok5VRLNOTYKaEC2dODXJWsWpec7sq6BO5ahTFdSp
HHWKyKJOVUSzTu86dMH/nH5Vb40z+yqoUznqVAV1KkedIrKoUxURrNP+uXTu
BpQL1+lPVnBbKF+c2VdBncpRpyqoUznqFJFFnaqIWp3mNjgt2UXqqZGZqu8/
zpl9FdSpHHWqgjqVo04RWdSpiqjVaffYbOltoWI7zlSdphnO7CuhTuWoUxXU
qRx1isiiTlVEqk7didMdZ4onTjee2DdzSTLnyZl9FdSpHHWqgjqVo04RWdSp
ikjVqXtnqNKJ02oXQ3k4s6+COpWjTlVQp3LUKSKLOlURnTpNOWmfXaQ2Dy3p
pqW+OLOvgjqVo05VUKdy1CkiizpVEZ06vX9gqnQXqbsOXZAfIWf2VVCnctSp
CupUjjpFZFGnKiJSp+7E6ZaTxXWavTOU/Ag5s6+COpWjTlVQp3LUKSKLOlUR
hTp1ykycPjo4rRKTnNlXQZ3KUacqqFM56hSRRZ2qiEKd+k+cxkccR2PmlDP7
SqhTOepUBXUqR50isqhTFcu+TstNnEq23y/CmX0V1KkcdaqCOpWjThFZ1KmK
ZV+ni0ycah0hZ/ZVUKdy1KkK6lSOOkVkUacqlnedOpnMo4PTpXucPjUyo3iE
nNlXQZ3KUacqqFM56hSRRZ2qWOZ16jix+EjxzaHiI7rn3zmzr4I6laNOVVCn
ctQpIos6VbG863TD6EU3TRfOnT40lkrpndbPcGZfCXUqR52qoE7lqFNEFnWq
YhnXqZPJxHacKZ443XJSa6m+hzP7KqhTOepUBXUqR50isqhTFcu4TrvHZkuv
OL1/YEpxPZTFmX0V1KkcdaqCOpWjThFZ1KmK5Vqn7sTpnvHipfpbTqrcHKoI
Z/ZVUKdy1KkK6lSOOkVkUacqlmud9s+lS684XX34Qi3mNjmzr4I6laNOVVCn
ctQpIos6VbEs69Qk6FV9yVjrwII63XhiNO2on9bPcGZfCXUqR52qoE7lqFNE
FnWqYlnWaTLtxDYPuWlauCRqz3iNjpAz+yqoUznqVAV1KkedIrKoUxXLsk5z
O/AXntnfeGLfzKVaTJxmOLOvhDqVo05VUKdy1CkiizpVsSzr1N1Iyp7W9+ZO
d5ypUZpmOLOvxKvTZJI6rRJ1qoI6laNOEVlenX7xppt279799jtvv73rnbAN
LwnCeXhmdHZ22bIybRD4wfiO7du324+h+ZFRyeOfe21b7MlXi0ZzW7x2R2g+
dOYD6P7AjdfwvQiH96UY2m8Wkyv2CHfu3Bn4wfgOL1rM12TgB+M7tv9uhz1C
83tx4AfjP955O/+sGPjBlBnhf942X4H2Ocd8xgM/mHJHSJ0immydmmHq1Hsy
YSx12Ke45TO6umLr22OPvbJgPPnqpg73zHut3/Vy+2AyGAyGbFCniJrCudOa
hwejEYaJQ1OhxWn62Ctf+O3WWncjXcpgMBilgzpF1Hhzp1+95ZapsPLOm58/
fz7oY/HX09Njn0MGjw8GfSz+Dhw6aI9w/4EDl31wc2Ii9mpf0eidmM6kx8+e
T9boCE+dOmWP8J3du2r0LuS8Hxbm41DTj0bVvLPSExMTQR+Lv969R813tPl2
Pnz4cNDH4m9gYMB+DBOJRNDH4u9Pf/qT96UY9LGU5a0XCO2Xovn82t+IBwYH
gj4Wf+Z7hDpFNDXEqii3TrPfoayKqlrlq6IcJ+2uh/KW6tuXu8bM39duSVTG
rorKHmH4d5QyP9HMhyJVy49G1bxVUeZHW9DH4sN83I70f2STIOSrosxBsipK
IuSrohzHYVUUEFoNUaes2ZervE57J6aL9zhtPb5h9GKtj7CB6tSMmoa6hFen
MzMzQR+LP9bsy1GnKqhTILSoUxXLpk7didPEZNGtS2NbTtYhxhqrTsO/oxT7
nVaNOlVBncpRp4gs6lTFsqnT3P2hWhdMnK4+fIE6tahTOepUjjpVQZ0CoUWd
qlg2dfrUyMyCm0OZ0XK8f662V5xa1KkK6lSOOlVBncpRp4gs6lTFsqnT2K6x
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
D3WqgjqVo05VUKdy1CnqZ6y7cOLUjmyUul26av6lfUzs3hdrfdKfOlUR5jo1
YonJK9Yl3EBt7szNne44E6o0zVCnSqhTOepUBXUqR52iPkwPjG641yZoYZ1+
49HWTR0dve++tfXf/8VrV5upn7/mpyZQa7ecnzpVEfI6/dS2IyZKC8/sh+cW
UR7qVAV1KkedqqBO5ahT1I2p09y5+2yCxr71tI1PJ3vdqXnA3Md9v77zmtxO
U3aX/ubOyq9E3fDCC480N1c+fvjAA/ZIvnjTTebPSxrmfZlvmf0HDhw6dOhg
LZlnYPsdat5XTd9R1Xbu3GmP0GRqHT4gS+LuJWWK1AyTprZOX+w2f3mg73Co
DtUr/O3btwd9LGV5dRraL8XOzq43u7q2vdlhfvIGfSz+3tm9K/dryJ49QR+L
v56eHnuE5vs66GPxZ778vC/FoI+lrHg8br8UzdGG6qnG4z1v79u3N+hj8We+
R6hT1IGp0MQjX8mf0L/uu10zGZ950dQxL1DtIytfwLJmzZr5bVQrfVn4jpY0
TKCa5x/z5OM9T0Z8hPBDYQ4ptwm/6dLHX3HvZJptVPP37s+OoA+PoT5yX4TZ
Kgj8YBgMhsqgTlFb6fHOez7j1V3se63nyj2y7yVvitW8vGJdosKT+6ZOvVuj
VjKqiNL5oG0yddrZyQ/BUA+ToLkpUzMem6/T9e3Uy/Ie7m8fnfz2wWAsk0Gd
oracZGGdLtac6fH2b1yd79g7nh+t7Nz+9t/t2PDCCy+//HKFL9c996R3Zv8X
Tzxh/meFL83r/tf27qGTQ3UY3hmiIasu73RJY/fu3fY5ZP+BA4EfTOHoOXws
1rI3tyRq/sz+tt6+3onp88feD9XL3r1H7S87O3fuDPzjVm54PyzC+XVohnex
39GjRwM/GN+xb99ee4SJRCLwg/Ed3nlz830d+MH4j6GCL8XAD6bM8J63B48P
Bn4wvsN73v7wwP7AD8Z3eNc7UaeoLSf5+neuzM1YNjW5dVrugU76o2fvXjV/
5j1274tlZ1llPjx42q7D+vptty3pFS9dqt8dBFgVVbWHxlJ2/yj3clN7Zv/F
bvcy5uyvReF56V50nR7f1NFhAvXd9/bU7wO0RF4SsCqqaqyKkmNVlApWRQFW
KnvdqbepqanTVJm5U8fe7TR3deiNq679gXuFqvbxOPNr9s27+Oott2i/eTXU
aXXM5ze2a8y9LVTr8VydPv7KF367tUa/6UiYRj17PmkvNmDNvgR1KkedqqBO
5ahT1E3hjlKfvvmXi52vP7jeuy40t36qBsfj7Sj19dtuc8K1O3sedVod87tP
bPOoO3e68YRXpw9v7S/3O1Gwzp0/ZxdqUacS1KkcdaqCOpWjTlE33o5SplEv
c76+oE5jd7xU4XWnS8V+pyrCWadt43O5NG097t3JtHfv0dptnyvBfqcqqFM5
6lQFdSpHnaJ+Dq7P38Y0e75+kUcW1Gmlq6KWijpVEc46jSUm3TR1z+wP2DuZ
mjo90v9R0MfljzpVQZ3KUacqqFM56hT1kx5f9+XPencs/dEfys6eznT/3FsV
tcgVqkLUqYqQ1ml8xL3i1Iy2UXtm3zQqdSpBncpRp3LUqQrqFLCc7OqPwktP
Y82d5aZEj/3idq9OHx2crtHZWOpURQjrtH8uPX9af8CdPs3W6XOvbes/2h/0
ofmjTlVQp3LUqQrqVI46RV3NJL5/7Q12U6mV139zw+hFn8ekx5/55PXe4qnJ
udqc16dOlYStTs1Xy/0DU7nV+iZQ7aqo7C2iqFMJ6lSOOpWjTlVQp4DH8XaL
mr+FaOyO5/vnFvykc5z0xKa13u2cnv5otnbLWKhTFSGs09iOM/MXnR7P1en6
9ng8zpl9CepUjjqVo05VUKdAIaegP73N9vfN5De3P7i9ze6Qbx5w944zNV1h
TZ2qCFudJtNObsq0NV+nzW3xTR0dA4MD4dw6jDpVQZ3KUacqqFM56hR1ZgPV
q1A3RFfcet/zLf/5Hy9te2CVN63anJio9daU1KmKsNXphtGL3l5SuTpt2WvS
lLlTIepUjjqVo05VUKdAKZOdbnmmjm39938xjbqqyR2mUd00vedBk6m9E/X4
4UKdqghVnTp2Lyl7Tt+OluOf2nbE3onp6NGjQR+gP+pUBXUqR52qoE7lqFME
ws6guidZneRE1tjHE6nZaVOtyVqtgipGnaoIVZ0asS0n8xOn2bnTf9o3yNyp
HHUqR53KUacqqFOgcnW+jw91qiJUddo9NhvbPLTgzH7L8W29fZ2dXazZF6JO
5ahTOepUBXUKhBZ1qiJUdbr68IVcmnon93ecGRgYsGf2qVMJ6lSOOpWjTlVQ
p0BoUacqQlWn7l5SCydOr+pLHun/yB4hdSpBncpRp3LUqQrqFAgt6lRFeOp0
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
z2giaZqnTjVQpyqoUznqVAV1KkedoslMeQ7/x8NrC1kY3oJMNVuqo3es8WOo
K65ON5ycjk/TgxdH57JJ7SF1KkedqqBO5ahTFdSpHHWKZjJpeuLp+4sVmk6v
WdjCsWoz1QRqo8/yr6w63XJiLrX7bKpzJDoTqmd0aj7JWqBO5ahTFdSpHHWq
gjqVo07RTNmBLcUEvfneju09RydnspNTl0/9fu9PvrfWz9TVdiuE6+pNp2ca
eop/BdWpOVapV4ZS28eiddozmuCoqUWdylGnKqhTOepUBXUqR52ieXITu++8
wVRo6mtb/HsYFaafB/3pfTTw7Bc/HT7Xn/pGZ6aRo6crpU6f2bUv9eQrfpfa
NN1WOg0q6T2kTuWoUxXUqRx1qoI6laNO0Tznd/mzn276et/43NKm8mf0zA7+
y42fvWNV8Sz/33zqX23ENsiKqNPe3v1+mv7w14U6DZ3Q3322CXcprQZ1Kked
qqBO5ahTFdSpHHWK5jCRObb1wbXp9P0HL5Y7X29aa3LHw8Glp6Zjd2fa+sy+
OWip53b7aWrrNDin33XWL3wH0jRPnWqgTlVQp3LUqQrqVI46RZN4md/843V2
OLTsl5j/jfc98JlVxTWmbvr6/tl8O4+dbh27mvrRr/2tdOx08+isI2map041
UKcqqFM56lQFdSpHnaI5sl7u+M7nf7Z3eJmJTqGT+8U6bViGOV6no3NZf5J+
uE7t2OngVNK7VoI6laNOVVCnctSpCupUjjpFc5jIDM+BKqtQp/bk/tobv93O
152mDl70czQydnrwotfE22lVgzqVo05VUKdy1KkK6lSOOoVbQnWa6uht6Plr
l+t048i0PzffbDZNbZ12X0h8/ailqFM56lQFdSpHnaqgTuWoU7jDM3Ha9+/B
wqcP//FKTf/5hg0b7H8buQtVI7bvPvRQb+/+fa91B2/Zipu/hFQQpaGfdGzv
adDfyMbGxsbG5uBGnSJxWS/X+8BfFwdO736+1puZmjpd05Q6NX9LQ+vUX0Jq
SZ1+7pd7SVM2NjY2trbaqFMkyy/RwoKodttyImZN1MqaNnba0Dr9zvPbFtM0
qNMnX9nR3d3T05P4CwUbGxsbG1vTNuoUCfMy+x5aa/PvL54drOOKU69wSVKu
aqfPnA6uO71WC3vdnZ2d5Kkay3mpnWPF20KFrjt9Zte++fl53b9LS3Dd6djY
WNL7Em/45HDxVW74RNL7Eu/SpUt2D994sz/pfSkreLMwT4Gk9yXeoUOH7AfG
6enpvPZzU8Xx48ftMRwZGUl6X+KdP3/e7uHgH/+Q9L7Ey2azwUMx6X0py96B
2mxzc3NJ70u8o0eP2ifL6OiFpPclnnmOUKdwQXZgi03TT9760+H5Zky7cG1W
lL/2/uBUyb1KOwt1+tzu1/bv//Of/5z0DsZjVpQcs6JUMCtKznzGtHvIrCgJ
ZkXJMSsKTsieeuovb/ZXkbrp69sn5pvzd7pWp0dmr/ldGtwQym4L5/Sp07pR
pyqoUzn365Q5+yqoUznqFInLernBx7/kX895870mTZt2FySn6tQLFjgND5x2
nunYbsrUn6qfzTq3lpRFncpRpyqoUznqVAV1KkedInHD//Gwn6arbt9yYq6Z
f69TdWqyPGbgtH+it3e/fYYydlo36lQFdSpHncpRpyqoU6Cy2b5/DybpN/mv
dqdOPS+X6hmNDpzuPDc8n6NO5ahTFdSpHHUqR52qoE6BCoKZUB2Dk83/292p
082js5ET+ma7fihjqjWY+0md1o06VUGdylGnctSpCuoUKOd/Bn9u7wll0rRp
15qGOVKnnuf5A6elaZrafTaT87x8njqVo05VUKdy1KkcdaqCOgViXR161Zbh
/QcvVkrT2cGOGz676fRMtgH56kidxg6cbjg5bQ8LdSpHnaqgTuWoUznqVAV1
Cixl0vSBz6xak179nb4LlW4IlZvofeCv19747f2zDdkNF+o0fuB0zweZhbu4
Uqdy1KkK6lSOOpWjTlVQp0DUeN+/3PhZk6bXPd176XJmMo759cunfv/zez5V
932jquFCnW4du7p04HTjyHTwBdSpHHWqgjqVo07lqFMV1CkQ5n00YNN04Yb1
8Zv93bXptPn55tHZSuOrAonXaXGN08hCUns+yHq54J9MncpRpyqoUznqVI46
VUGdAosKF5Ha5rT9WS5Qg99KPfjCxw3bncTrtG98LrXzXKpzJFyn/hWnoa+h
TuWoUxXUqRx1KkedqqBOgaLCvUqDKA1v5erUzplqxHwoK/E6TfVPRE/rL0zV
D1CnctSpCupUjjqVo05VUKdAUW7i2IHtW3/xi66urip//NWLLx2Zvda4PUq2
Tofnc9E7Q3WeWXf8SqTGqVM56lQFdSpHncpRpyqoU8DyvFzjRkHrk2Cdevm8
CdHIOX3zc5OskYtsqVM56lQFdSpHncpRpyqoU8BZCdZpJuf5V5xGbl3aP7H0
K6lTOepUBXUqR53KUacqqFPAWQnWaXEF/tKB0yOz15aunUWdylGnKqhTOepU
jjpVQZ0CzkqqThcXkgpfdFrmnlnUqRx1qoI6laNO5ahTFdQp4Kyk6jR2ISl/
WVfqtDGoUxXUqRx1KkedqqBOAWclVaepwalimm6LX4E/jDqVo05VUKdy1Kkc
daqCOgWclUidTs3n/IHT0tP61w9lyt2tlTqVo05VUKdy1KkcdaqCOgWclUid
bhyZXjofanQuS502DnWqgjqVo07lqFMV1CngrObXqT8fqmc0sgJ/qn+iXJrm
qVMN1KkK6lSOOpWjTlVQp4Czml+n/nyoyP2htp3ZOna1wn9CncpRpyqoUznq
VI46VUGdAs5qcp164flQQZ12X6gwcJqnTjVQpyqoUznqVI46VUGdAs5qcp36
86EiA6edZ+5770rl/4o6laNOVVCnctSpHHWqgjoFnNXkOvXnQ0WuOO06O5bz
GDttNOpUBXUqR53KUacqqFPAWc2s0zrmQ1nUqRx1qoI6laNO5ahTFdQp4Kxm
1mns/aEqz4eyqFM56lQFdSpHncpRpyqoU8BZzaxTfz5U6Qr8y86HsqhTOepU
BXUqR53KUacqqFPAWU2r06xXuD9U6ZSodcevZKnTpqBOVVCnctSpHHWqgjoF
nNWcOvXy+c2js9GB021nhudzjJ02B3WqgjqVo07lqFMV1CngrKaNnaZeH4/O
hzp4sZo0zVOnGqhTFdSpHHUqR52qoE4BZzWnTmOXOf3BeJY6bRrqVAV1Kked
ylGnKqhTwFlNqFOvzDKnmZznVfcnUKdy1KkK6lSOOpWjTlVQp4CzmjN2mjp4
sY5lTgPUqRx1qoI6laNO5ahTFdQp4Kwm1OnwfC6yxmmVy5wGqFM56lQFdSpH
ncpRpyqoU8BZja5TL5+/770rfpqGJ+zv+aD6gdM8daqBOlVBncpRp3LUqQrq
FHBWE8ZOC6f1S8dOB6eqvOLUok7lqFMV1KkcdSpHnaqgTgFnNbpOF0/rh8ZO
+8bnqlmEP0CdylGnKqhTOepUjjpVQZ0CzmponZac1g/GTqu7e2kYdSpHnaqg
TuWoUznqVAV1Cjir0WOn/ml9m6bbiveHSg1O1fqHUKdy1KkK6lSOOpWjTlVQ
p4CzGlqnJaf17dhp19m+8TnGTpuPOlVBncpRp3LUqQrqFHBW4+q0uAj/ttJl
TmucrW9Rp3LUqQrqVI46laNOVVCngLMaWqf+af3IDUxrP62fp041UKcqqFM5
6lSOOlVBnQLOalydTs3nosucdp7ZPjHvVXv/0kXUqRx1qoI6laNO5ahTFdQp
4KzG1enm0dmSqfpm23mupoWkAtSpHHWqgjqVo07lqFMV1CngrMbVaap/Ijp2
2j9R3x9FncpRpyqoUznqVI46VUGdAs5qUJ16Xi61u/SK084zPxjPMnaaFOpU
BXUqR53KUacqqFPAWQ2q077xueh8qK6zo3PZ+v406lSOOlVBncpRp3LUqQrq
FHBWUKefv+WWI0feeuPNftMGws38IZ/75d7Uk6+UbC/0mV8fGBio468IkqC/
X2H3GrEFr8O//d1vE9+Z2O3QoUP7Xus2e2h+ovJdVt8OHz5sj2Fv7/7Ed6bc
FjwU3TyGZuvp6Xlt/37zvTbHM/Gdid0O/OdBewxNSCe+M7GbeY7YPTTP68R3
JnYzD7/FV8Wkd6bcZsrZ7uHh/jcS35nYzf3X7eDDJnWKdmPr1GymToOXO+Fm
3h/9HP3Rr8Ob6VVbR2xsy2yFuEp+N9jY2Njc2KhTtJvw2Kk/6qLxPHpm1z6/
SP9tzxcefir40fziju7u3l7Cg63SxsODjY2NLbJRp2g3wdjp395226WPL8m3
jy9//NzbU6ltb/mzol4ZKm7b3pr87/+enJw0v1vHn2ma1o6nTRbU94c0dHvz
zeI53+FTJxPfmdjt7XffsXt49K2Tly5nHDyM5qFo9/C3r/8u8Z0ptwVvFuYA
Jr4zsduBAwfsHn744YeJ70zsFlzsd+zYscR3JnY7ebJ4kfbAwEDiOxO7mYdf
8FBMfGfKbe6/bpvvb/F1++Rw4jsTu73z7rvUKdqT+qyorJdLDU4VFpIa8X+0
S572T9S8BH+I/ypXeIYyK6pudlaUead4f/hEHTeTbQJmRalgVpQcs6JU/L8D
ffZUCLOi6sasKLStRszZT+35oDhh36532nV202nRGyVz9uWYs6+COpWjTuVW
Sp3anaRO60adom2p1+mR2WvRRfi3nRnLeZLxOupUjjpVQZ3KUady1KkK6hRw
lm6devn8xpHpyCL8qZ5R4alk6lSOOlVBncpRp3LUqQrqFHCW+tipfwPTSJ0O
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
qts+NmI3v0kKWXLHqvTGb33z2WeePHLkrenpRk27hpvqqNNMzosOnG47c2T2
WuOeO47XaZ6xUw3UqQrqVI6xUxWMnQq15NhpvvDvmpmZMclRYew0vNkno/nx
nnvuebyjY/eu3SdPnlwRR2MIAiYJbJ2uu/XWKv+TzncuXPd0b2R7d+i42YxG
7KR5s7DbO+++24g/X+i9994zzxqbBObFJOndiWfexewxNC/FSe9LvCAJTF81
7rEkFDwUzTc96X2J97e33WZf0ru6upLel3j7Xuu2x9C8+Dh4GM0Dzw7smG39
+vUO7qFx7Nix4KHo5jPF8GdnFx6Khw4dSnpf4pnOscfQzT00j73vPvTQ2sIb
9MZvfdPZV8Va2X+Ff4aiujq1T8bwZq9QNR8ezVP18OHDf/rTn5Lu0Bh//vOf
K1+9wLbit4VBfve3NctdS5P07q2ucDIl6X1L23OpLu9kevVq9/dwRWwuH8bI
m6Czm+P76eZelTuMie9G7GYvznR5D4VbcO3HstvSOg0fn3ThOtXHOzpefvnl
999/35ETW9QpG1srbe6/FLu/hytic/kwulx9K3E/2erbHP8AIt/+7stflhyN
pWOqpga/+tW7fvzEExcvXkw6TvPZbPbur3717rvuYqtvM5847DfafAzhSNa9
BZ8B//a22xLfmRW62QsmzWYOpvn5Pffcc9dXvsJjstYtOJ1qjiEHsL7NPIuD
h6Ljx/Cx9Wv+4YZH3Pxx7cJpL/NQdPkYuryZR6C93sn8pMWOoXlmBS9WtQZq
+FfMH2JnTr3xZn8mM5MvzCZLukyhoDgrKp02n2L4ntbHHDfz7LBPlp4edycp
uMw88o4cecu+7Kxfv97+CmplHoqm6u1D8ejRo0nvzkplFww3j8bvPvRQ3uGH
YibnmS3r5Rz8Me9l1t16q22JycnJpA/VShVcnPnjJ55w5IS1lmDCV62BanLd
vEfY6VHnz5/3Cs9QZ5+kqFt9K0ohzDwvqFM5U6eFF5+0rVPUhzqVM+969no2
U6d8Zq9bcM9K6rQ+5rFn69Q8FE3LtdJDcWRk5I5VNVyTaT7pmCejORoDAwNz
c4v3TG+dI4IlqFM56lSFrdNg7BT1oU7lCnW6OHaK+gRnpanTuoXrtJXGToM1
GCsUqXnwmCegeTKOjY15Xo67R7Ub6lSOOlXB2KkK6lSOsVMVjJ0KterY6Y7u
7sojpaZGzL/XPGyuXbuW9M4iMdSpHHWqgrFTFdSpHGOnKhg7lWu9sdNMZmbd
rbdWGCw9dOhQ0vsIJ1CnctSpCsZOVVCncoydqmDsVKglx067fvBPa1bdHunS
v7/jDvMvHf9okilOCFCnctSpCsZOVVCncoydqmDsVK7Fxk4Hjp9aG1qg/o5V
afPW+cab/VkvR5EigjqVo05VMHaqgjqVY+xUBWOnQi02duotTIYKD5bmGSlF
GdSpHHWqgrFTFdSpHGOnKhg7lWulsVPztLJXlg4ODq70fwuagDqVo05VMHaq
gjqVY+xUBWOnQi02djowMHD58uU893JCdahTOepUBWOnKqhTOcZOVTB2KtdK
Y6dATahTOepUBWOnKqhTOcZOVTB2KtRiY6dATahTOepUBWOnKqhTOcZOVTB2
KsfYKdoWdSpHnapg7FQFdSrH2KkKxk6FGDtFO6NO5ahTFYydqqBO5Rg7VcHY
qRxjp2hb1KmcrdPC21maOq2bqVNzANcydipj6rQw7pemTutml75JF1a/YcCq
brZODeq0Pnbs1H5QYuwU7YY6lTMvGa/2nfrViy91dXWZ45n07qxU5i3s5Zdf
NsfwwIEDvA7XzXw+soeRJKibeRbbY3j48OGk92UFM5FvD+Ps7GzS+7JSvffe
e+YAmsPIh004zctcPvX7Hd3dvb37973W/faxD6fmpUP91Klc1suZLem9aBF0
KRzBQ1EFhxFoZbmJ4f94+I5Vfkba29SuSfuXlq1Zdft3nt9mGtWrt46oUwAA
ANQme+rZL37aXl6+9sZvd75z4ejkzNWhV7//pZtMr5pA/cRtjxyZvVZfoFKn
AAAAqEFu4jf/eJ2dhGsr1J5H9ls0N/Hzez5lx1H/5lP/an6rjj+eOgUAAED1
Tjx9vz2Vb37ccmIu/Ft+oI73+cOnhTl9qY5ev1pr/POpUwAAAFRrvO+Bz6yy
A6epb3RmlrSn+f+Dj3/JnvQ328N/vFLr30CdAgAAoEp24NSfAJVO/+//+jj2
ytKrQ6/ak/v+8GlcwVZGnQIAAKAq2VNP/eXNNjvX3Hzv9on5mC8xvTo72HHD
Z/3xVdOxhS+rKU+pUwAAkDh//TEvM/7R5OjohdgFM03eZCen5j8aOjo50/zd
Q9HQS8U0Ta/+5K0/Hct58bPyvUzvA39tz/6br1z3m5Ga1t6kTgEAQIJMcP7q
xZceW79mzarbbc+Y7BmOrJaZPdX1g3+yv7s2nf7nV04nt7/tyxSmvaC0eNFp
R2+5U/Ze4QKAoE5T3+j8uJa/iDoFAADJKJwmNhFiV3QPb+ELGr2PBoqniYPa
ufvFmmoHOnITwYio2f7i2cFyX2jqdLbv39MLHbv2xm/vn81Xf3KfOgUAAM3n
t0rWvw/4vqNDdiH3YCa46U9TPsVzwQsFG95qHYuDjuwp8zEhmIxfoU59x54L
vl9rb/o6dQogwitIei8AYJG3cCvwYIx0bOuDQc/Yk/t2sM7kUOrf9piCPXZg
+8ZvfdNsne9cSHbn25BXmOv0Lzd+NrjudOPIdKWrSUvrNHb+VDnUqdD8R0NH
jrxlni87urvN9vaxD+tYdRaxzOdoc0h5Caqfl7l86vfmwfnsM0+aF/PH1q/h
YFaSmzj61kn7RDbb/jf/wMyLZZkH2Kt9p2pbK6bwsDRHuLd3/77X/NfM2Pkv
baWew9iK7z5+/IR6Zs3N9+7O5Oxt3FPf6DSPEz+EvIwN2qR3tl0VZuLbNDXf
o2UWMg1/N9PpmlY9pU7rZtrJvN3bExDBddpm+8Rtj5gG4LkjZA6vve7afHye
ilwbj+WYo9f1g38K5heY1/YvPPzU052DYyv7vatRvI8Gnv0/99vL3oKL3+zT
2Rw386Zfaza0g+Cg1fAMzU3Y0rCHN3jxNA/U7zy/rT2f5vUcxtZ+91mIH/uv
Mw+MBz6zyp4UhhPO7wpfIVx9nS7/xaWo0zqY5755jQ3mrIWv0168JKajlxKo
X27i2S9+2l7ZknrwBS4uqp552/r5PZ8KujT9wCM/2zvsj015GW+Fj6s0yOSO
h4PDZd4K/Tf3yamjb/xfe59o+zT/51dOc+gCJqiCqdP+a93dL1X1DM2eCp7U
a2/8tjnOJvvNw/X7X7rJv+PhqtvtrbrbJ1DrO4z23Sfy1tNS7z5e5jf/eF0w
NGdDyFTNyk7uFpId2FJch586dYx5jgSLJJTb7DeuvnvLIrwMRQ3vfchNmDe7
4EOTebt/bO8wg36VmVfa4Bzic29P5QvnFu1VcPaZHtxIetPpmfYJp3KCoCpp
oWqeobmJ3XfeYJMjXKFe4bfsBwHzW3/zqX81v9Xwf0bS6j6M7fDu45Veelr8
t8zx7HPG7GAwc406dUr47axje8/RyZns5NTlU7/f+5PvlYymFj5cmHc0PvHV
6n8Gf17y0sSyIVWwy60EJ1xSX9tiHpkr8b2pqRbueGKO2P0HL8YcrsIwDp+S
LH+QOZ3+hxse+c7z277/pZuCsqrmyNim8kdN0+ktJ+aCX/fspYbjff7wqb3j
4YrNqipJDmM7vPv4HwwHtoS7nQ+G7vAW7gBV39hpTY9J6rQ2hREAf/Lg17bY
z/he6PJs/wqiL366pKxqv7dsuys88sMnDqjTZYVXArTXQgy3/TSTasz2/Xvx
RHPcVW02nI4d2F68TrLG5VBajFe4aMRe05gtTF2pIasK8ZleXfZ22+b/2/W9
baDWNMCysogOY+jdxy5Tbye8F//kFnr3Mf+WxXWlytwoE4lZmLNfa52yolRj
nd9lD3Lf+NzSgxwsthAMYdkTVSvyBSIJ9iYU5rh94eGnHlu/5vO33EKdLq90
JcDiGiyowtjWB4sn7sssE20ekHYkPyjYtn0ue/nSf3stWbV4ojadDq+vHmaa
zR7ncgXbGiSHMfzus3QAqmXefezFHsE5C3N87nuPi05dYdenDU45pSuuxu9b
WqeMnTaAt/B2dv/Bi+WeLObIT+54OLj4x3w7dmd4WlXFK5zz8meeFg7af21M
FWdFUacVeBnb88G1plvHrnIWrBqe5wV1ao5b+HRziYVX11pfWltc9VkVei8r
Nw6WXThdWDwrXfiyFZdV9aj6MLbVu4/5qBKeFb64Jj+SFnx2KD5u0+nKdRq+
V1Tx4xJ12giFi9AqX7fvf+/G+4KzEm0+3lKbwnELXn6DaZvUaQXmuR++QOuv
9r2fnWOJzmot1mk6XW68zk6Map8JO9Wqvk6HXgrmX3/y1p+O5bz4tycvE9we
0Xzxut+MtEWQVH8Y2+fdJ7S2Q3BkVvASBK3o1I/vKF7nbF45K85ZM1+5+H2s
8ZJy6rR65sAe3/n8z/YOL/OyGTq9wnhLtRZO5ZgHsFdYb9neHIQz+5UU7igX
PPf/4YZHyKfqmUgKJl/YfFq343T0qRp6Lrf8bJ3aVJdVwbU6wdtTuVP24ZU6
7Mn9tnjWV12n7fPus3RRglrvz46GstdOr1kYEa10LdnC4mD2K2u9QoM6rZ63
sM7MMl9XeH0oXqt247dX4pU/zWevTLMjA1nqtAr2LF544HTdb0bsb9kJF+bz
LDW1jIWnarD565ouPMFtWYUvTMWiKrOqcA/K8Cnacl/olZ4EbJcgqf7Mfpu8
+wy9ZL/7ne9cCI+gbjkxt+Iyu1X534jC5TrFE08VrsMJvcDW8RJKneoLvT4U
RwJRkZ0QYV+Cii+/1OmyQhMH0gu3MPZvWlq470ww/Tn9wCPcvTSWF7pOLxiy
Mz9e93RhfK9wQW8wo99/+eWJHFZlVhWG94NHY80TKPT32zE1zYqqxop+91m4
RLljcDK/sIxD8UqPHaHbYXiZ4j1bV9a/rrXYy6Ls8zp+Ob7CAmjB9cN3buqs
9fIM6lSXF1qmxi6N0vovsEILU87NO9fiqw11uqyFVXpKToEtvJjbzfzf4lnp
B1/gpP9S3pJTz/Z2kGtW3R4Uvl2eqy2ugaxJFVkVzCIPHpMbR6YrHcnSOm2L
dYRU63Rlv/ssTPC0bwTBJNnizQVCl4Xbm+FuODlNnSYpfNXT3c8vPblvnun2
vIn/aCxM1631b6BOdYW/I+ZbxrXcldk2sPeYLnl4U6cVeaEZPeHNfD7d0d19
9I3/u/cn3wva1WZqrfMl24R/QHIT+x5aGxyroBbsmABXR8SrMqtK1ziqfmlE
8660wuKqPqp1urLefbJzM5OTk0Fz2umHpkIXdzv4AG4+MwbnhQun/rl7lAvs
dfuxw6de4a46wRM/5pL+KlCnivzvTmFJuuA8tdOvDg4oPrztOkjh36BOlxOp
U3t7iPAC3fMfDQU3iGyTu/DUzYu7d7l/xBaOatI76J4qs+r8rmAd/uWX2S+p
09X/+7/a4HmvV6dL33209rEhzu/y1xYorB722N5h++wLX2wcvrjRHqJ1vxk5
dmC7v66L/TKelYnyQvec9Z/dN99bcm1wYe2I4H2nvuWLqVNNXiYYhCk5T41Y
C2f9YlaPoU4r8kITdtIVJueG7mBuvzL6KQChm2mGp5gtVv3N9z739lTS++ie
KufsD2wJHqU11akdaG39x6ri2OmKevdZeupnzarbzROtZPyt9FUu2OxVqUic
DVTzySL4HtmTd3buQ3phru7cXJ0flKhTRcFNkLlfz/IW+jP1jc6ppceKOq2s
dCp07PI7dpJveLVJOy3F8betRNgbQsVu9kpU877Jpaclqj6zHyy/WdOZfbMx
dlqTFfTuY2cjRrJz6U3E/DUKQp9ugnPESe02ypn/aMheS7bGXrdfuHTflKqd
vFb3H0udqlmYb9gu1/PLBLeFip+ZW1gnLXjRdvwCqgSE6j1d+V5yhXtzL3as
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
    "], {{0, 896}, {
    906, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{906, 896},
  PlotRange->{{0, 906}, {0, 896}}]], "Output",ExpressionUUID->"b78f71da-cf02-\
419c-b48c-2ebe1ec187d2"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 "\tFind the inverse of the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"2", 
     RowBox[{"x", "."}]}]}], TraditionalForm]],ExpressionUUID->
  "bb2230b1-685f-4033-8290-688c15d61120"],
 " Verify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], "=", "x"}], 
   TraditionalForm]],ExpressionUUID->"c076c310-8b38-4e23-8a96-1165f0823e7b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"f", "(", "x", ")"}], ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"d26733b0-92f7-4e43-921d-9de147a7bb59"],
 "."
}], "Problem",ExpressionUUID->"c234863b-06d1-443c-8a78-ce80b9330b70"],

Cell[TextData[{
 StyleBox["10.\t",
  FontWeight->"Bold"],
 "Find the inverse of the function",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox["x"]}], TraditionalForm]],ExpressionUUID->
  "822ead59-1fe1-432e-a33e-8535c3110da4"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "cdb635a2-98e2-4222-8068-970b9eb335a8"],
 ". Verify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], "=", "x"}], 
   TraditionalForm]],ExpressionUUID->"fe9a8b65-4a5a-46ee-971e-30422d4e658c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{"f", "(", "x", ")"}], ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"2314442a-f56b-4f47-a574-dfa26752b7aa"],
 "."
}], "Problem",ExpressionUUID->"3b983292-0727-44b0-910d-3078f930253c"],

Cell[TextData[{
 StyleBox["11.\t",
  FontWeight->"Bold"],
 "Sketch the graph of the inverse of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "061a99d9-5091-4b78-ba2a-e18bd2d21bcf"],
 "."
}], "Problem",ExpressionUUID->"ff257976-e5aa-40b8-b4ec-491d2d58b5d6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6js3dxNI4VSiFnFa5vlEnObfZQAAcBSELK0cPWncvj5bnI7UObZ8EKSh09gx
VVsWmXl9/9hsZP149BffW6r6locnbln+3k6NvlhdVSX+dOGdm+1/Wrp4erNH
9dz7XxqfZisiAAB2wcnSQmxCzsTLXqBestE4dcZ8D3qkoddbu7+mis+pqVi8
nL41lXzdPk9jcqj5jnnqvR5/88PyrS0+81h3VVd/8kt7ZM28fA8GAIA/BSpL
q9/+Ixdlj3T2RP3gU8aVKEEamk0ObbpzfrKRY1t++2RTmqsz9VG7S+2CVF3Z
ZsIHAABK8LJ0so4n9yTWZYnTtyJff7jx7yMvPEmQhhbxlGEd4qo/+V4+7zV+
cIvakKjq2OXeFSi/ET4e3fOJuXdVV4tLLJJvDQAAUgUsS6e5dl1uOczWQb3i
SuTvPrV1Y+S//oQgjUqLR1/82h0qSOfZkDz97sCmO5PN1XJDYkVKxOLbYexn
DeqnhFjnrz5yYfIeAACBEeAsnYzEw+cTLR+Zjx2PrHjjC2siu7/PZkNU1B8P
L5+XLEqrbuScZod7zL+340qFAq1c19gxc6lqah8AAFACnKWVZMtHd1/2lg95
rW2R57+gImRtMx49/faYeMW5zhmPXf3TVdXGEMge3fGDW8zzDUVAzf0OKVsO
88zes+KxqXfkJ3NyctL5sx0dF3/63vvj9j+Vj2MroRfy2AAABFngs7Qx00Rt
XLt+bv22W5GvZ03UNbItJDoeyPCmWWxicmzk7Cv79/1k96Nr1iyflzwj+56D
FxxuHI+q4/zurloY+dunixz7lhg3Vz3/XhcvsSSx4OKaHKbfHRAfu7ie6+ho
e+aZ7V+4x8zSIqCafyRePvuqw+lCqc3V+RSH4/G4+IQf3LdXfLbNB0qO40i9
849Hn/+Hb6gB1+KeN79ywfGgQ/PsGPElW9ZzkcMQAQBQwpCllciZX8mO6N3f
/+Vf1+coUEdqjR1dst0aLoknhr+p8DwbIGUsrIp8/WdXbTc2zu4zb6miYxGP
OD3YpoYwu3sVsRi1HlWIVmHY/NDMgGp+csTL29p/a43rqZXhqgVbBt4XUTnb
4yU2DDquX77vzK1EvG++Y17qYsSXw35eufpkptym46rtNgAAhFNIsnTkjddk
kD68K3KgVbz81NaNb3xhTa5EXWfsPWTcuKl77UGgOjree388ljiwb+Xcz6lC
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
MFb+hXJLu3og/7icf2LXAyj8V6nAlYX0vffck4X0sWPHErpVddbSz1AJnf8m
yn4TFn0sdLdm9w+/sv1vwvrynZvC+3XZN76effPgvqeskq9t27aFtyz7qC/6
txJ96Xwq7nnssaKPhd6ytymU5J9ed13Rx0Jfst5YzTy2MTaW/fQtmzeHDR7u
nECxwv9fcB+PMms/kGXhXe92/7DT0iea7QclzN0V3yrnarU6j/pyH49UfOub
3wyDPg84Lr/m3H082rsm/uLb3y76cOjLjx95JGKWftONN4ZdHNk73jnxFf2v
Am1ausy6PNlwtqWz96t9xXrRh0dP2Uf97Fmj/UdMS6eicx8PLZ0ELZ2W7P3K
v/yns8IN8Xbv2rXo6kLnPspGS5dW90eE/6GlN2/aVPQB0pcwl9bSCencX1pL
J0FLJ6TZbG7ZvLlnRYenHya085ma09Ll1D2kZ1s63Eco+zhqeiBU6ZlLp8hc
Oi1aOiHPPPNMzq3wsiDZ89hj7RtxFH2csCJaumyaOSF9eP+ht94JQ04tnQpz
6eSYS6dFS6diampqNjmW3uNubNu2bXNPNnReI0FaumyWDelf73339+cnXjnS
efCHz5zyM5dOkbl0WrR0ErIT1sM7dy66g19nEB2+oOhjhEhaulRyQvq9Lz7L
PmiOHTtmLp0Wc+nkmEunRUsnYfZtmr8b9t133334N4fD7TiKPjRYLS1dHnkT
6c8nm7PbP8bHx82lE2IunSJz6bRo6fLLPglv3rgxe5uyP1y7d+3KekNCUyVa
ugzae6QnXswP6eDo0aNaOi3m0skxl06Lli6/w785HAbR4a77UDFaugzaIf38
rkueydItpDMTExNaOiHm0ikyl06Lli657FRlCk21aenCzU2klwnpRV+ctbT9
0mkxl06OuXRatDRQLC1drPmJ9KK5dLeQbmnp1JhLp8hcOi1aGiiWli7QJRPp
PkK6paUTZC6dHHPptGhpoFhauhDNpRPpzlx6+ZBuaenUmEunyFw6LVoaKJaW
LkSXiXQfId3S0gkyl06OuXRatDRQrOyssaHRyNaZs+dcaTsa3SfS2euhJ977
4rP8n6ul05L9mfrHn/wk/BHT0qm46cYbw1umpZOQtXR4v27euLHoYwFqp7mg
xoTZaERPpAMtDQBADS27Rzp7fenJ8IjwnrQ0AAA1lD+R7jOLtTQAAHWz+ol0
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
AAAAAAAAAAAAAAAAAAAAKJX/B8J+a0I=
    "], {{0, 916}, {964, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{964, 916},
  PlotRange->{{0, 964}, {0, 916}}]], "Output",ExpressionUUID->"2c06daf6-8ed6-\
48df-89a3-9be001a6c05d"],

Cell[TextData[{
 StyleBox["12.\t",
  FontWeight->"Bold"],
 "Sketch the graph of the inverse of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f38423de-eafa-4efe-888e-89d0d1f9368f"],
 "."
}], "Problem",ExpressionUUID->"bda6e718-0d04-442a-8a48-424a60ef62cd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
1qzwWeaDTCa88sor8avizYsXe/MCapYbGAgjcfhiMiYVr30i6fNiUhWm4vK9
xOYSN9NIKp4lFWfF3CuvjD/ISMWZEKfi8CHr7u6O9mkFqEn48hGXRMJjNBX3
HPSyklqVpGJbdaSKVJw5I6lYrTgbilNx0ucCZNjg8RNxrbgoFc8PzmilS68p
U7FInDZSceZIxdmiVgzUL3rt2Pny+FqxScXpVj4V6yVOIak4c6TibFErBhpj
7RPja8XL1litkGZlUrFInE5SceZIxdmiVgw0xrI142vFltql22Sp2FYdqSUV
Z45UnC1qxekXPpVyAwNDPrOQcp+8c2yteH6w8+Wkz4lySqZiVeI0k4ozRyrO
FrXi9Hv66ac/cdVVa9asCZ9T/j2a9OroHlsr/nRw5LjXlDSbmIpF4pSTijNH
Ks4WteJMuHnx4ngMbPjm9YudO5WOSZ1or+frx/cVG0CRbuNSsUicflJx5kjF
2aJWnH7h43Lo0KHLuob3RwiP8Fm2Zs0a2xGSIkeOBx2fHlsr9kE77YpTsV7i
TJCKM0cqzha14qwIY3D8zCoc4bvZzYsXP/PMM7mBgQs+0ZCsnoPja8Vzl2r4
SbniVGwucSZIxZkjFWeLWnEmhA9Mf3//J666Kn6wxh1KxyRv58vja8ULViZ9
TkyhkIo/8uWbO/7p70Xi9JOKM0cqzha14gz5xc6dJVNxVDfOR5GbFy9++umn
o65jNTqabOvz42vFt33f72HKFVLxRfM+JhJnglScOVJxtqgVZ8tXvvKVQnfx
uFRc+POcyy8PXzkPHToUxmOPKE2yZcf4WvFXf5D0OTGFMBWHD9ZlXV0dn/nU
xEh8+sL5pE+Q8aTizJGKs0WtOEPiZXdh6C0ZjAtH+B4X5+TwkjcvXrxmzZrw
vc/zken10LbxteJV69WK0yyaOPFPfx8v4x1fKxaJ00oqzhypOFvUijMnTLld
k6fiQmDunDXmCB/lv/7Up1asWPHoo48e+fWes0ODGXqww9/Sb6xY4Ujz8fXF
3cvnXh7/Zoa/b+GfV36+K/Gzckx2hD7y5ZvDMBzXiqNU/JlPRd3F+a+3Lv1G
4mfoKHmEL+PxK3z4lr0i6ZNxVHKMzI/qXH7HHR6y9B83L14cp+Lw44zHK/1H
bM7ll5epFU+Sisd8Dd8Eb/nMjd9b9+DPt/8y/R9gH3/88XF3x5GJI347cKT2
KPMATXwNcaTkKH4xdzgcDTzidRadk1QXHak9akjF447Cv3THxb1PXHVV+DH2
0UcfTecgizAVF35XHVk5vKSk/PAAORwOh6MFjilbi8u/341bnffXn/rU3Xev
CpNnGInT2QgantjTZEG02i7/+eWJJ55I+lwoYeuPf9zxT3//kS/fXDji14So
g+I/Ln9qw8afb/+lxy7N8v+8Gz1kK1asSPpcqEj8fh0ejz76aNLnwtTWrFkT
P15hNEr6XKhI+MzKr6crPaKtfCrOf1fn3CuvXLJkSfjQv/LKK3H7RIZ6jEmz
wr/I9/fb6zl1ouV1L/+4eFVd3Fp8xexoBsWfBoILuVw6PxcTy+VyVttlTviG
G78qpr9ZkWBktV34eFltlwnhY7RixYpCybfCVBw+xH97ww3hy2kYqtPZI0Fr
kIpTK4rEE3ev+6e/jx+vmxcv9uqfCVJx5sSpOHwXloozoTgVJ30uTC3/eE2R
hy8d2fDu64u716+7L/wWEYXmkIrTqXQk/i//UKgVh6k46XOkIlJx5pjMli1q
xRmSGxj46099qsxYtvAI/+tXvvKVF154IfrH0PwD6kGlaaTiFApfCkpE4rG1
4iVLliR9mlREKs4cqThb1IqzIgy3Gzds6Jy8nfjqq69es2ZN+LzL5S8sDNN8
UnHalK4Sj2zV8fPtv4w3/ZGKs0IqzhypOFvUirMifEIVlrIWh+HwTW35HXe8
uOtfkj5BkIrTpXwkPn3hfPi6Ea9BkIqzQirOHKk4W9SKMyH8wBJG3+I1dPFE
tfXr7is80XykIXFScXpMGYnDV5UXXnghfv2XirNCKs4cqThb1IozIV/SGd7G
Ii4Ohw+cGUqkjVScElNH4vzFpOLMkYozRyrOFrXi9IsX2cUzpTdu2DA8YdhH
GNJHKk6DaHnd2LnEJSNxIBVnkFScOVJxtqgVp1z4oISvfitWrAgfqaTPBaYg
FSeuwipxTCrOHKk4c6TibFErBhpFKk5WVZE4kIozSCrOHKk4W9SKgUaRihNU
bSQOpOIMkoozRyrOFrVioFGk4qRU3ktcTCrOHKk4c6TibFErBhpFKk7ElFXi
yb5RKs4cqThzpOJsUSsGGkUqbr4aGicKpOLMkYozRyrOFrVioFHC1/85l18e
HrmBAfO0m6CeSBxIxRkUpuL4KfbEE08kfS5U5Oqrr44fsv7+fq+K6bdnz574
8QpfFaVioH4587SboubGiQKpGJojl5f0WQBAC6qzShyTigEAyK6GROJAKgYA
ILMaFYkDqRgAgGxqYCQOpGIAADKotq06ypCKAQDIlsZWiWNSMQAAGVK+Svyn
gaC2OahSMQAAWTFlJM4NDNR2zVIxAC0rd3bw+Il9p985OzQ4VHJg+Km+3t7e
8AJNPzOgFucHB8s0TtQTiQOpGIDWksvlBk/tf2rDxpWf7wrf3eLjAx9f+0Yu
GBOMLxze+s3PxP+1a9as27cfumCfHUi3qEo8bZE4kIoBaCUXDq+9aEb4pnZZ
VxSJL+2cVQjGd776diH1Dr21Z9WHL4n/Pr5Mxw2PnE7yvIEpNHzixERSMQCt
IXpPvHD4qQ0btx86tu/0O+/8ZueNH51ZiL4d9+0eXoAzkpyLj45bn5SKIbWm
jMQNuRWpGIDWkMsPa8oNDMT/ihr+3z+s/1zXSDU4bqIIcid3LPpgFIPv2vFv
Z/p+9+Smry/uvnXpN8IgrX+CadJ/dPfGba+Hfyjd3M5UmhOJA6k4szzFAKa2
b0OhiWL2jO6fvj1w4LGVV8zu6rhp84lgeHZT+IYbvpB6JaXhcvlenXX/4e/C
X7nwQ9mJpM8no8ovr2tgJA6k4qzxFAOowvs9yy6+JHzBjJsovrfuwRs/OnP2
xcufP5v0idHqwjfrrd/8TNzfrnG9ZuWX1zU2EgdScaZ4igFUJ3c27pcII3FU
NO7sDL8WL7uDhovfrMPftML7tbfs2jStcaJAKs4ETzGAasXRt/fhJWNW1d21
4+zQYMJnRus6vfVr0dLOv1q6ft19y+de7i27ZlEkfunJZkbiQCrOAk8xgNoM
hV67vzgVf+e37yV9UrSsXC73zm92/urQW1Gz+tBQsG+Dt+zaTLlVR20bOk9J
Kk45TzGAegy9tacwny1ecGeRMtNnzMrN/d6yazF9GzpPSSpOP08xgNpEL54j
o9ji7uIvvn5smqpMMJ637OqVb5yY1kgcSMWZ4ykGUI13frPzuplFfcX37U76
jGgb3rKrlGCVOCYVZ4ynGEDlLhx+eM5oJI7WaNzwiJmWNIm37GpMubyuCZ1P
UnHGeIoBVOyNB75Q2NtuuLXYsGKaxlt2xZo/hK0kqThjPMUAKnTgka58DN5+
6FhxxfiHvz93wYI7msBbdmUSGcJWklScMZ5iAJW4cHjtRTPiPTuGhoZ6vv0X
ccU4/HrNtiOjmTh3dnjIj5xMw3nLrkBKqsQxqThjPMUAppQ7G8bgrvB1cuO+
+C/O/uK7oy+etz4Zb+QR5uA/Pnp7PMRY9ZjG85Y9lfRUiWNSccZ4igFMdKa/
t7e3sGndGw984bKurjD9nshH3yjvHvvZtZfkXzw7O0dbiw88Eq2/u2uH19IW
lzv7uyc3PdoID2986KdvD1Q6CcFbdlnlt+pofiQOpOLM8RQDGOfYz2786Mww
Bs+e0X379kMHHltZWFU3Wv/NN1QUJlH8+VMH3+vZdN3MCRejJb3fE/6GjLTQ
dNbxNbqGL75+rNLb9ZY9uXKNE7seTiQSB1Jx5niKAYz1h/WfK97TOUovM6/5
4e/PFV+m0FpcPI8i/PN3fvueTT1aW/SR5/2eVR++5BNXXXV13cJfrSo2DfeW
PYlyjRPJReJAKs4cTzGAsU5v/Vpn/o2scMQr7IovE0ajodfuD9/vilPx7dsP
FZouoPG8ZZeSzipxTCrOGE8xgHEuHH70S/OGxxHP6H5g7x9Ll39zZ9944AuF
i4WRuOknSpvxlj1B1Euc1kgcSMWZ4ykGUCRaTDcwEMXgM/2hMrXfobzwYkHu
pIkTNIO37LHSXCWOScUZ4ykGUEqFA4fDi2kkpkm8ZRdJbS9xMak4YzzFACAT
vGWPSH+VOCYVZ4ynGABkgrfsvExUiWNSccZ4igFAJnjLLr9VR8oicSAVZ46n
GABkQtu/ZZdvnHj3wv9M+gTHk4ozpu2fYgCQDcVv2Tdtbre37PKNE2EkTuEg
GKk4Y9r7KQYAWTH02v2FXRQ7bth4IunzaaasLK/7/9u7nxc57zqA43sI3rwJ
Nm3WiyWHeLDGeKm3QoUcRfDuQTzFHuKh/0JQw5DsHiQSCIVUQi82XiwNKYgY
a8A0HpTixUsTipUak6LZnWecycC47s48zzzPPD++P14vHsJAdjNPFoZ98+Xz
fb6HqOK45PwRA4AoFEUxefrhlRePHzt96uSJ7fkv7vP3HhV7ewEukLYu8KM6
SqjiWGT+EQOA8O1/fP/6zu7o3NmDR5AvzhnfevW110cXp1+Q8KJWpKvEc6o4
fD5iABCF8cM7l0YXpr+UV11Xdi/v3rg7LtI8XjGih7AtpYrDl/lHDADiMo3D
8Ypr/gVJ/r6u3F439A1WU8WxyPMjBgCEL8YnThyligEAaCyNJJ6oYgAAmkom
iSeqGACARlJK4okqBgCgvsSSeKKKAQCoaXZUx29vpJTEE1UMAEAdsT+XeBVV
DADAmlJN4okqBgBgPQkn8UQVAwCwhvJZ4tiTeKKKAQCoksCBzpVUMQAAJdJ7
CNtSqhgAgFUySeKJKgYAYIV8kniiigEAWGa2ve43v8gkiSeqGACAI7JaJZ5T
xQAAHJRhEk9UMQAAB5Ql8a2rCTyXeBVVDADAXNkscdJJPFHFAAA8k+0q8Zwq
BgCgPInTOL2unCoGAMhcZRInub3uEFUMAJAzSTynigEAsjXbXieJn1HFAAB5
ksQHqWIAgAxVJvHQN9g3VQwAkBtJfJQqBgDIyuOxJF5CFQMA5MMTJ1ZRxQAA
mbC9roQqBgDIgSQup4oBAJJnlriSKgYASFvlLPHQNxgEVQwAkDAPYVuTKgYA
SJUkXp8qBgBIkiSuRRUDAKTH9rq6VDEAQGJsr2tAFQMApMTgRDOqGAAgGY7q
aEwVAwCkoXKWWBKXUMUAAAmonCWWxOVUMQBA7MwSb04VAwBETRK3QhUDAMRL
ErdFFQMARMpRHS1SxQAAMXJUR7tUMQBAdAxOtE4VAwDERRJ3QRUDAETELHFH
VDEAQCwc1dEdVQwAEIXKwQlJvAlVDAAQPrPEXVPFAACBk8Q9UMUAACGTxP1Q
xQAAwZLEvVHFAABhksR9UsUAAAGSxD1TxQAAoXFUR/9UMQBAUCqP6hj6BtOk
igEAwmFwYiiqGAAgEJJ4QKoYACAEZomHpYoBAAZnlnhwqhgAYFgGJ0KgigEA
BiSJA6GKAQCGIonDoYoBAAZhe90qxWTy5K+/271xd/p6XBT9vKkqBgDon+11
q4wf3hmdO3vyxPbnvvqTj3p8X1UMANAzgxNLTXv4zR9+60vb29M0nV5br/z8
kx7fXRUDAPRJEh817+EXnj++SGJVDACQMLPER33y5g+mObr19e9dGl34/le+
rIoBANJmlviooig+/ePNP/zl4fSHM9tW98GOKgYASJjBiVXGxYHHTNxXxQAA
yZLE61LFAACJksQ1qGIAgBRJ4npUMQBAciRxbaoYACAtkrgJVQwAkBBJ3JAq
BgBIhaM6mmuvisc1Haziut/b2n8fACAV6awSF4/v/Prt6zu7m19Xdi+/9fe9
Ym+v+k3bq+IzZ85M/5EXnq9xLd667jdOi3qDOwUASE06STz12fvf/sJz80Q8
dvrUyRPbjV9Mr+/e/dtab9pqFdcq20NVXCuMVTEAwEJKSTw7bO6z93/0+S9+
8+WXzzzztZdemr+u+2JWp8994/y9R2u9cUhVvH4Yq2IAgLkkZ4nH4/87jXkx
QFvrRT1t77Yr1r5W7bZb53sBAJiktUo8MM+gAACIkyRukyoGAIiQJG6ZKgYA
iI0kbp8qBgCISpLb64anigEA4lG+SjwNZs8laEgVAwBEwuBEh1QxAEAMJHG3
Dlbxd36migEAAmSWuGvj3/94cajc1iu7H/X41qoYAGAdVok79/TDKy8eP3b6
1MkT2/M2Pn/vUcMz8upTxQAAlWyv687+x/ev7+yOzp1dzE7M14qnf24fP771
6muvjy5Ov6DrdWNVDABQThJ3avzwzqXRhWn3rrqu7F7evXF3XBSd/pxVMQBA
CUncj6dFMV5xzb+g65+zKgYAWEUS50MVAwAsJYmzoooBAI6SxLlRxQAAh0ji
DKliAICDHNWRJ1UMALBglThbqhgAYM7pdTlTxQAAk3kSv/eGVeJsqWIAgNks
sSTOmyoGADJnlZiJKgYA8iaJmVPFAEC2JDELqhgAyJMk5iBVDABkqGx73e1r
kjhDqhgAyE3ZKvGzJB6Px0PfI31TxQBAVsqT2FEd2VLFAEA+JDGrqGIAIBPl
s8SSOHOqGADIQeUsse11mVPFAEDybK+jkioGANI2S+Lb16wSU04VAwAJq0xi
q8TMqWIAIFVWiVmfKgYAkmSVmFpUMQCQHqvE1KWKAYDElCex5xKzlCoGAFIy
O6pDElOfKgYAkmGVmMZUMQCQBknMJlQxAJCAsiS+dfXxeH/oGyR0qhgAiN2T
/b3yJPbECSqpYgAgapKYVqhiACBekpi2qGIAIFKSmBapYgAgRpKYdqliACA6
kpjWqWIAIC6SmC6oYgAgItVJXIhimlDFAEAsrBLTHVUMAETBKjGdUsUAQPgq
k3joGyR6qhgACJzBCXqgigGAkEli+qGKAYBgSWJ6o4oBgDCVJfHta9O/HfoG
SYoqBgACJInpmSoGAEIjiemfKgYAglKexB7CRkdUMQAQjsokdlQHHVHFAEAg
JDEDUsUAQAjMEjMsVQwADE4SMzhVDAAMSxITAlUMAAxIEhMIVQwADEUSEw5V
DAAMQhITFFUMAPRPEhMaVQwA9EwSEyBVDAD0yYHOhEkVAwC9cXodwVLFAEA/
JDEhU8UAQA+qk3joOyRzqhgA6JrtdYRPFQMAnZLEREEVAwDdkcTEQhUDAB2R
xEREFQMAXZDExEUVAwCtk8RERxUDAO2SxMRIFQMALZLEREoVAwBtkcTESxUD
AK2QxERNFQMAm5PExE4VAwAbksQkQBUDAJuQxKRBFQMAjZUn8ePx/tA3COtS
xQBAM5VJXAx9h7A+VQwANCCJSYwqBgDqksSkRxUDALVMo1cSkx5VDACszyox
qVLFAMCaJDEJU8UAwDokMWlTxQBAJbPEJE8VAwDlrBKTA1UMAJSQxGRCFQMA
q0hi8qGKAYClJDFZUcUAwFGSmNyoYgDgkFkS37oqicmKKgYADpLE5EkVAwAL
kphsqWIAYG52VIckJleqGACYWCUme6oYAJDEoIoBIHOSGCaqGADyZpYY5lQx
AGTLKjEsqGIAyFN5Ev97f3/oG4ReqWIAyJAkhkNUMQDkpnJwYugbhAGoYgDI
iu11sJQqBoB82F4Hq6hiAMjELIlvX5PEsJQqBoAclCex7XWgigEgeeWzxE+L
maHvEQamigEgbVaJYR2qGAASVp7EVolhQRUDQKqsEsP6VDEAJMkqMdSiigEg
PVaJoS5VDACJqXwu8dA3CCFSxQCQEkd1QDOqGACSIYmhMVUMAGmoPqpj6DuE
kKliAEhA5fY6SQzlVDEAxM5D2GBzqhgAouYhbNAKVQwA8aqeJbZKDOtRxQAQ
qdkq8aokfu8Nq8RQiyoGgBhJYmiXKgaA6JQNTkhiaEQVA0BcypPYgc7QjCoG
gIj88+l/ypPY5jpoRhUDQCzKHsImiWEzqhgAYrF1/93lSXzrqlli2JAqBoBY
/Olf/9j65U9tr4MuqGIAiMgsjN++KImhdaoYAOLyvxVjSQztefDgwWg02t3Z
+dXNm0b0ASAKf37y6dYH70hiaEvheHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwn8BkY/TEQ==
    "], {{0, 916}, {946, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{946, 916},
  PlotRange->{{0, 946}, {0, 916}}]], "Output",ExpressionUUID->"37067e09-4424-\
4b02-a34f-8cacd9fc12d4"],

Cell[TextData[{
 StyleBox["13\[Dash]14. ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The parabola ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"87336135-1880-4332-a8ed-8a69a61a7f3d"],
 " consists of two one-to-one functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "1"], "(", "x", ")"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"85723fb9-0e64-4498-9dc2-b3e715a8b68b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "2"], "(", "x", ")"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"1806b888-0904-4598-8aac-522252611a3f"],
 ". Complete each exercise and confirm that your answers are consistent with \
the graphs displayed in the figure."
}], "ExerciseDirectionsCell",ExpressionUUID->"9ff8dee5-bc64-4086-9159-\
130f424cd0d4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Wf2HM0fy0vq1gDLIRldhSYM3WktEXFnTbqOOITH54sUys11AaIEvDSqxurdX
bXhHy2Ai0fpqmbXsmyU6q9WLaCVMS3+2MJs686eTIuPh1C2tkE4frb92W/9B
OhrL1ykqAUohfee/HmmgqHV+5m8HL1Z805zwpUWzleqmehVEMUBZDtHLcw8h
pAOJHhWQqWDth36hG4VffdeEM36sWKezt61jyulBvbKc0MNqbqFmg0XStHSB
r0/hHDEiKMNXqvyhA1padlpRjOVGf7XkY5Dxm6aSPLyZuHrRoTUTb3QlIMDA
lwZlSafT0kWUCooedGbtRmBARmeFMBMJh80nZp3ZivcQJ3TT4O3qpYM8if83
Xn5G7XL49LH3615jRtT9oD8vWxVEe07LvrRWWUW9sGp4ZqitLp9XJ5ZCSAcV
4S5yVWbkZr9xWfuysKzUV0F1k5jRLcvs2CLSvwf1vth0HTGbW6guAC6mjCuR
0hyL1oKw0jfaMu+v8Z6Slj83xHD9IQ1Wqucbn1nJbJFpIaoPITINTOBLg7IM
JhJqWpiW1b29jq2dZX6/ZZlUVvpENk1gi6R0UHdFeVITBbSlvtVV9H2PPb//
qK2wSeV1ZSaG98nG3Ld9Zeu5uY/LniNsVTga9YSZcY2j7gwP3rN1LFv/Oux6
XnR79JouhZAOMOKzMyfZGdMPxa//Zbu3BIw3zl8TopRe+FzmYzpc0MKPNlpY
q/rL5/EYKWWP8Ybdpj0r/d5yQWuzo6Ixc7ChFq56lvvQ9OEbS7o7bcyOrN/6
s9TEO9hkX0s6K1lS5dptaactEFrgS4OyRKNRddYh7SGxWMyRNYv83nu/XC2F
mWhZMr7joUrdW4IEvfYLv3taeLwbX/9gYTZFTLx9ic5retvHmi9fU9FS2Yrb
KlqaVijrWncbzRbrH7BIcZN4Pnb2vHCnZUClgSOGVhNPfuIe7HuIhiyBh6ma
UKtowaXa8BWSap5NHDmCvGTgmnb4ijxKiI6ltV+5yJNr5rNUj3SrO9VKfqO0
wgZTy5sk9Coc9X73jdIr4kpHzTzT5YCZjtNKEVazmuX4K3e9rDEQ3n+xaF5B
GJFpOltBNQEBfGlQCh05VvT02MLSyWSSOfe7PKk7uX7eKzz1Gt25Y+Mf/jPv
UPNab6KUj45sSXyidJCs850VkysfvLdfhEOkvV9FSxe1tLN5WXTfYw00GtCK
rsjfDkTmWRwx6ArIXAnL0om14taLehJein+vXTHBkQ4D9krFh6a5thwpU2s6
YOiv2giK07ev/msH8wLEGs9gtvfTqLBR5nutBp6159Q1ZimejSaVlm47SruW
6oXBLR3kK7R9rBMemVanH9L9k3PNrQoED/jSoJRUKmULeNCSyWQc3IRaZZp0
4A/W85zDixdvOrgJD0IyWO1peOzs+UZnWTLlDlOaJFbPeAhJrIZq6qrCwbJC
PPOLHaXPjj5/UKl9nf/1T0TR6YrHEKN3vHjhniouXVNIuz1A4BxWi9LxEnAe
hHZvS3/woSl92uDJuZpVOIoyIFFZglqaKlaIeVgyzxXecNrQbG7BppBlDFvX
7QcNHWtEpvUHq3ZCXHr/sp5wbrxnosors4uWTuIJHjuHagIC+NLABh174/G4
rbL04+vXOyx+NKOyldIQfkQGj02XuKv3+f1H3zh/TfWo64SffYwgdHVfulhH
aeuiVtSLrpjkSmi0dL1DmtmcVfThqCzcLeraFY2C3lXayjDrzxAiLN3QK20f
ENLhwT4NzYjvBv6wY6kgLRW1MY9v1fn5anM0xNVHJQFMfyUbqVSOTPMByMmD
5aYf6taxURWEjoefOTr5peEPVAFPhzvubyvboiMel+iarq40fnrcnHGpBTya
O5ExrayircQ03Vac8Q1CBnxpUMrAwIAtLP3Czp0Ob0NpbC3msjUU4vUjTKkg
bbtUsUw8bKRusyjaXFNL86P9h6PimRVbLn44qhflu+8xOmdd+N3TpJDtq83P
SH9bBN2F015TyctwiLCvPXL2qZmRdnuAwHlUH5VkpNvDaTv8e672fFTivnwx
qnncNZEr/f6KuS2ij3lZCcpk/3GjrUzZMVjSzuWqcEyIOaHqkA5a2i8yqYrl
bwoH9aCOXo+l4utXXvvwlRZLiEdOzFgi00NTtAt55GgG3AW+NLCRzeZW9PTY
lB7tJ85uRS0u0UDqwO9oWrS8ll6mV+QgHVu/bSubktdUs/T2ykoaD97bX1qF
QzWuxUJa+qV3Mmp7OFoJqWK1AomUx1Vf9SX5qlspHu4syEiHEL2sxEG9NloY
7KPLlzPSEKav89PH3re3w5b5h8bjLkKoy+hFpWsTM6FhlOBTxYZlTuhgtVi1
vUWjtqrqIzT/ZNC+3SagF2i/HjkxgwMFKMKXBiXQLmETeyStSWA7uxU1fOup
H/3bx8KZw2L+3Zf/8eWhoeSBH//UpqXVwiZ1XlnUqaWZ0XVRZtQ3n5hVTytq
rQ+5lJa5VttKymXj6x9UP3Sobrxtu24BIR1OmKyT3GAjaZ8iTXjVPqVjC398
RIkrGAp2V7pGlWkb5sw+I8Nc6YtDj5tZC2vMgw9MzE80jOvnZ/KlRwmm1Ur9
9xNpfQaiNomy+mgtG23NlBaMzd60aGntfaPXgsMFgC8NbLywc6etdfjAwEA7
NiTEm4zdBpsLv3tavJl0yuD/zbJcLWvV7X74Dw/KRi1yqXMaZv2+dFE7s7z3
y9V6zKO0ynT+kqwK8uC9/aojra6Bl+zQctQil3Ls7PmaXVdkwMMjpjQy0uFF
KbPm9lDaC53N6btJV+UkmO+asHQGl4U36YjB3w1VTjfenvuUjGfQ31Y9FNAR
T49bDFoKRDNjSHT4yuYKNQ9ifFpHgX1SR4H6pUxOhlgaKkldadO0Bn4NYq2M
10CVPxBc4EsDG4+uW2fzJ+PxuPObyV/a99A9HiyP5jya+BSKt7yFy7ILZw6L
Siby+oVPD6zDmq5fSzN9opAetzBb5Mh/XbrF683mbmSz/Mxb6bQoznriabS5
2j8oaBU8hPamCwTXP2sI6TCjC7+3W/2t3/uYqYkKlSukgjUD5Acbb88tAx61
fH6mmtjlRlVXpWvlyTUx26YnnPzEeWU8WzUPNBMH8KWBlUwmU5rjTaVSjm/o
vV+uJn1Vp2L0NWqUpezlqt77YOmW8Htlrriek1pDvrSApV4T2eyylTfqLCFe
d3XajJxh2vX7864fYSCkw4zegM+J3/o9ji4jNbFXvZ4zs7UFbERLM2XOYP1R
ZCnyW08vV8e8Rmi8cXkl7M3EhZl/bDrg+xOoA/jSQGV0dNRWaOLLK1c6vhWR
uY1s2NeYB+JHlN7ZtedXsuzhvr+nZ3Khu/a3bdLSRUPe01Y2vv5BW09nosxI
xcohnQVCOsxwR1QT0mFIlJml/7RqGNUPCxZruhHZqXeNpD/843ydRx7hhPNf
B7Q/bF/ShteUNjotOlghit4auhAz5z8aSY9qRQVBOIAvDVRisZjNl45Go85u
gqVee6RLr04c/F3OqqWrPVE70QhtXL/4bMaX1hCxE5H0aJPGFVMOaWx00UTn
GneVNIR0qPikYOmCp9dtOzjZ6Nw6n2Jq6TqKV6gF6+r3ivVNJBqe08esW2xH
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
jaO3ppPXGm/CE8W9ry+9f1kv9fbRVV5i2pifWIz8vLGEg//z0ip6kcALb7LP
foOuO5zJM2vJGfbF+FImhx9zAQg529+dt6SmD/LU9Cuzi5g9UQ/Q0o3CGHt8
/XqbKb26t9fWTwGowJG2cGNcbUUnxIzbY3IBphdSnpn/t71Gy+y1ZmcWw7pn
39n1yZELDX+5ApGXtiE6jDt5qKG11TOREwAQaJjwuw4ZLcVF2ENrKY7jQz1A
SzcKvWO2KYe0xONxt8flXZCRtqH1reN9/fgP6xMfhDmkKnr86UWkJz7gRvTr
Y7TIN6feJiOlBCUv3T7qrTsNAAgHq87P2/u2DPKW4qE9Q9UPtHSjqE3DxbKi
p4fO+PiRtCxwpEthsrUfDlAKQtfJ94Qpt80QrLw0AAC0FTrYzuYWuDWtTkLU
Worjorsm0NINkUqlxNul9md5YedOt8flUXQhDUcadB5rXhrnAgAAqIm9pXiC
L6cW4fzUAFq6fhhj0WhUammxiKbh9E9uj85zwJEGrpGfUSqlrA1LyW4AAGgN
e0txoatPzrk9Lq8DLV0/6XR6eXe3KqS7ly2LxWIQ0qXAkQYuwLK3/nDEmMm4
xqyUQop624vF+IjjxZkBACAwmC3FrYWmIyNTpLE9bk0vzKbO/Onk2eNHRkdH
k8nkO3+53MnkLbR0nZBgJtlsM6VJWpPAhpa2AUcauAPLcCEdHym70D/BoAYA
gOqcWixYrGkt5hEZv+r2uCpSuPDmD9Y/8EjXMmlykjaj5bavbH3pnUxn/BNo
6TrJZDLyk5JLNBp1e1yeA440cBdR5M12i8pvAABQE71vy8k5MzJNolqzpq8w
z1nTpJMv/O5pGRhQi0JInXbbM8evtN/whJauB8bY8/uPik9K1dKpVAqmtEqu
iiP9P//f+fwnbg8QAAAAANUYm71piXl40pomIX1x98bS5K2qpcUdktPtzntA
S9dD4aOrpab0wMAAhLRKNUdaE9J4swAAAAAvo6emT8xYZiBq1nSm4CFreunM
Xl053/fY8/uPnpv7mKRa9tLpN15+xtYEhP7zxYvtrZINLV0Tev/37N5dakqf
evttt4fmIaplpCGkAQAAAP8wPJc3+4kbBvWq8/Nuj8uAZQ73/T0psciGfacW
uUhmmg7R/3XurX0P3aPWLo5sSeTaaU1DS9ckm82t6OmxmdKbvvlNmNISONIA
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
yhipTg9rnJbPWxd1jMWvBiwiqKea9JNJvqcaa42apxoUktW7S5ZuCPVINB+8
5mQ8t08K8BIjunfBX+hRNks6IxOG7CUxXREaP975za9a60Uzlu/g3ajHNbgi
LahLV0y9tVmxcltWabopMyIvSL9CLe2pxqxRy1MNIQlZJoaf+Mu/tf46gyzd
IKP95mQ89V64Z3zC7RMCvOT3veo9/tf/Zln/2Oe5EUjXha68o567zBe4G/+q
/eQ1nrm8q/EVaUFdumLqJzIyEm1p2Zi7GeKmzUfcPrva+X2vuoc4P9WY65t4
qkEeRuyddd9U941v/fC5H911/S1z5+r3XGTpxkgNwTMLa0sHPwvUO32gCtIE
pbL0PXvOO9QS4/vXmS9w6qXwyNUkYcmbXKlIC+rS1TBk95bsIC3NHgcOvxuA
oGA+1dz75lihu4d6VrE91ey9MhWA645akbuHjI94Z/UMNtprJCOyyxy8k96x
hRgAiNTiXKn/FLqIfrxYfrmjy0rBHDDge25VpAV16Sqpn86mzUdyS9MqUZ95
b8T3N2mlTzWEJKSl7hvqGUa9HbOOlSBLN4JlcIp5szNsBxDqxWvo2Y6Dp4eK
PBelfvcq70mpS3uTixVpQV26SkamcTp3rEdLy8aRkaivH3Tqqg32dHbu/6DI
fSP7qYa6NNIyDQbpAS9k6QayDU5Jv9X96oNU1QChHiMqZRUPWpk+RvU4Uo8g
mhi9pjE7GzqjLl0T49HLrYs67NXpJj3WQ/2R22dXOXNntCKX46kGOcyBbPJ7
Df30Ir/mkPnSZOk6k8Ep6vF48PSQVKclTjNpByiP5QVu5tpDPG15SsN2NnRG
XbpWzkVGc9chNjc9vWLlNl/H6ZJkP9XwSo1kqlNX7hIqvKWfW6hLN8zE8M/+
ZJbszKL+T9Z+yo/j73rOT1/MiEUiEWZ8AYUYqRUf5jxPvdURL3Ce4VyR/qKB
I8WoS9eKYRj9/UO5nR7qUHE6MTUZ1JuXpxrkkcpy6l6RtdiNunRjpAanyI1v
ZB6huVMr1THx/P+UodMUUoC81Gv3q8tvkA5Glht4inNFWgfpBv6wqEvXVs+u
gdzStPq4avWLQY3TPNXARt0lVJb7UsutX7ntmciE5f5AXbo+jPiVaDRqlpfP
ddyjgrTKzNMPxt/3yiNUurCOXNVfmzq1Rf2M2HsCnmbETh/a19XV9UrV1Dfp
HyuvwUk/fn7fm94VMfUrtrpdT5SneEW6sVGEunRtyVgPyc+2KXmyh0vAbmR5
qjF/fcxTDZKpkKaS25zZ87eNXct6OqMuXQ+/75VJKXNmfefxvefe/+UjKiHP
vP3Bs+OXp0PyxOjP/mSWORnv73rOy8/IfjHAa668o+7e1lk0lR3y1/V89bJe
go3Yq8tvUA8o9WDRv+WhUuQNXgvSSerSdaB+hE9t2J232SOAcZqnGthkmudV
YLPf1alL14Es8LQe6vH47Jmo+XxuZH5TkBsw2FIcXqafIFLbDt4xf371h3p3
X+4dXt5yqkeK/VdscI8Hg3SSunR9qFcuFZsLxelYPDgZgqcaZMlUnmcs35En
KlOXrjXbTklyPHLwQ9vFjNRD1XYx573eAI+Q3n4jlZAq/ljJP5xa9CGDXnvG
J2p9tVAJbwbpJHXpulFxetXqF/PE6SbdOx2LJ4LwzoWnGmRLb3FYaDuD7Lo0
rfW1MTH86vLM+Oi/WWatSJv0DW3EZNy0fsKf9Z2Dp4e4/YFC5Fc5+o3/rO+o
V7cgvF77n2eDdJK6dH3I+2gVmFVszi1Ny2SPWCzu61cyeaqRLk2eaqBlFrjp
WS5Tk3kuYM3SmWkSqIb0b+g58PEr6inFYQaUuox5sZL2pwBC7P1fPqKj0ez5
LALyCC8H6SR16bqRH6rE6bzNHkvufn48etm/EVQ91eggzVMNhCUnX7/yXw88
t/ahH9zXnk19RVrrpTT64Lp18vUnnvgF+/tUqcTXEW5koChzhqR6deMh4wVe
2NnQGXXp+ikap1sXdZyLjLp8lhUxB0oTpJGWytLqLmGmZXPtvBzqDmP7+vTG
1uw7D8AbZGUBeyV4h/eDdJK6dJ0VjdMtLRvPvDfihXtC6dRTDduywM6I7V3w
F9YJVObmINbYbH49609nfSd/fzUANFBWkM7bqIbG8kWQTlKXrj/5QatH5VMb
duftnVYZu79/yC83Pk81yEvfz8eP7+ze3tvbu3PHjtxDf717+z//t69LdXrm
7Q/KheXrDIEB4C4jskve3d/75pjTq1tqTB/zJBvAO1uEF0VdujH0wp+pyfVP
9uatTqujc+tRt8+xOJ5qUIiRTBeW8zbupr+U6anWM/FSQ/OMzJq4hp4rAGRT
r26y59EjBz90ekYyoupJzNw8FPXj8cWGNtSlG0xl5rylaXU8tWG3l0dPW59q
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
ksxmfzPXHtJzuWWb7KnJ04f2WXeTlKEWXr4dVRg2+6XV2W4bu1bGX54Yljkw
sjOLeXtKHp6+mBE7Fxl1el9m3TmxyhmMAEEaIUCWBrxl/LjMIlOZ6iu3PfPQ
D+6TTBXs34EakV3pqnKTLqs+eyb6/yZKjZHmGxAVpKOJ/BvcmMmwyp7zuktt
bWmGf5VjS0waOjyn2mNkpaH6X32bZBpdrH0aMqND5+189yj9RsNyizEQD1Ui
SCMMyNKAd6SmTKergrqOetMLMnEu2GEma9/Dpuke6fXd+w8MfapebZ2vvrkl
Ym7qk5F01iZkL7d5GJlta8x5dA4jOIz4Fel+kasjizSz1glaI3Fm43I9FFG/
6SjYAm2kumXMLiOapVENeqQREmRpwFuMmCRDqSiqT05eC/grjk68qUbfrPZm
S2PG43vPOS08TL37KBSSzUKr9E6UMlLPRTLLxYyyBZcfmrtApm4cCdLWNYa2
rX/UN1RXXAfpm16QixV6QyED8cy7X6HyNVAUQRrhQZYGvMasTMpv+T3dk1Ar
luBXaEcYFRpza6Qyd+KPr507crVgPrQ2AJc7bLnBDEuZvdAIDsOyL2GzpYz/
7Jmo9WK2MdFyqM+L9D9bmkxqMM8cYUWQRqiQpQFPSe86l1p+GJLfsF89tVey
7gOrXjp4eujYo93mojnboXc8zHlnoVcaFn67kZpcPd0244v3Jon3j5hR+d43
x+x/mr0voZTx1fWypV7dG/P+Edt8PL0xfeEYI78gSH/nfP80UAqCNMKGLA14
jSQl6e4I/OvOYE+nDntNTz9y8EOZfaeXI02Mnj60TwVg24xoddiqr0UZluEY
Ztuwx1lHI+a2eVj3tdH3k1RFOvcNgpS45fvIxUrZsMYsZVOURmUI0gghsjTg
LZl96wLfqipJb7peakmDRuajdR9DKSxXsBLT/Ff8sorT2u0stXTrn0pI1gNL
4ldisbjDJATDMMyLlfQLjkwbtvpHyxtJDaQQpBFOZGnAO2S7cNmlRUUgt0+n
vpxbWdLblMevqD+S28TcDbC87QszDR5lbf/nOms5febaQ3mTcI2rxrKDeaaX
hmFlKBdBGqFFlga84+qpvRIXg//rdUtyK97DbLlwWVnaOm3Pj92/5tsNW92+
HswbSr21CfjGQKgDgjTCjCwNeERseGDxzRv8VT6tXCoeS0tw0Z31rDOiC46J
y2v8+Lx569Sh8qHvCq1GpnG6AfsPqjdxUgOX93EkH5SFDVkQcmRpwBXpRXam
8eNr/8eG3MlmgZXJ0tLQ4nxZ65g450kUef6J1Kbk/q3zmxsaqncEm859Xo+r
IW/iCNKoDEEaIEsDjTYxao59e3zvOfWFq2MRWWhW19qjpxiZJYEqS8vICIcI
d/XUXtleXC5Z4quzfH/1V3y92c0Xqdkmn67dK3cYPbKjpllXgrS5xSHJB2Uh
SANJsjTQcHr7uaanzcEU3/rhc1IV9GNDb8Vkgz9zk+uZaw8VKh2rm8vc46/0
or3MFfR7kE5mNqNRcXry8D6J0/fsOV+r6rT6nnL7P3Lww2TNFzMi6OiRBgRZ
GmgwszfVevhiD5HaMiw5WaKySnRn3huJJoypaDwajZ4+tO/Yo903/lW7et/x
ldue6R8rdUqbiogSpM+OXw7GZjdSnY4ND3TevEHGelSfe9U3/D9Ln5qxfIe6
YWtwiggZgjRgIksDjZaa0qaX3aU20fjSPYcPDH3q9jm5Z2J0Z/d2vehSdsTO
HLrr4PYH1Ve+9cPn1O2jt3Ep7dVZyv56CefY53l/xSxz9vxYgzVSobpWJ2/k
Nu0DpXEO0kZZUysB/yNLA41kZHbi+ONr5zr3f3AuMhrmMJO+NVKhLjY8oG4T
lasPHH5XHSdPDKsbZyx+VSJfid9Qhgo237ypZ3yiwD8Z7bx5w9LBz8L2WwCg
VgjSgA1ZGmg8+ZW93ovE7TPxCHU7mAvfJGBX8BYj8f4R2ZPFIUjLPJDS20UA
WBGkgVxkaQABYA52a755U+fWo0888YunNuy2fZQNEPVO4hSlgfIRpIG8yNIA
fC81nVuCdNaizqb0RxlkLV989kw0zH01QGUI0kAhZGkA/pZay2lmZtuAFNsh
E6rdPmPAZ3SQ7nuBqR1AXmRpAP5mRHd2b+/ZNVD049Y3Lxw4/C5FaaAs6SD9
xk8J0kBeZGkA/mVYPpG1nAU/Tk3Kek83TxfwGyrSQFFkaQAAkMu5Ik2PNCDI
0gAAwMa5Ik2QBkxkaQAAYEVFGigdWRoAAJioSANlIUsDAABBRRooF1kaAAAk
qUgDFSFLAwAAKtJAZcjSAACEHBVpoGJkaQAAwoydDYFqkKUBAAgtdjYEqkSW
BgAgnKhIA9UjSwMAEEL0SAM1QZYGACBsmNoB1ApZGgCAUKEiDdQQWRoAgPCg
Ig3UFlkaAICQoCIN1BxZGgCAMKAiDdQDWRoAgMCjIg3UCVkaAIBgoyIN1A9Z
GgCAAGNnQ6CuyNIAAATY2fHLhSrSXyQI0kC1yNIAAARVwkiowLz3ypQ9TlOR
BmqELA0AQIAlpibVkRWnT+ylQxqoFbI0AADBljAS03E6FaTJ0kCtkKUBAAg8
idNnxy/TIw3UFlkaAICQoBwN1BxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAA
AKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgM
WRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoA
AACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACo
DFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFka
AAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAA
qAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZGgAAAKgMWRoAAACoDFkaAAAAqAxZ
GgAAAKgMWRoAAACoDFkaAAAAqIzK0nNuuEEdS8nSAAAAQDkSU5PRDLfPBQAA
APANI3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAd/z9R7LVO
    "], {{0, 890}, {964, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{964, 890},
  PlotRange->{{0, 964}, {0, 890}}]], "Output",ExpressionUUID->"9186712c-9d7b-\
43c5-9aa9-6fade2067fdf"],

Cell[TextData[{
 StyleBox["13.",
  FontWeight->"Bold"],
 "\t",
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Find formulas for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "1"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"da672db8-1a96-4ab0-9546-74275b087904"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["g", "1"], 
     RowBox[{"-", "1"}]], "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "bd999acc-93fb-4b6b-a1c7-345e9757b852"],
 ". State the domain and range of each function."
}], "Problem",ExpressionUUID->"1018fc22-86f6-4f5e-a8db-8860657ae986"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 "\t",
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Find formulas for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "2"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"516b2faf-9e10-4a90-af64-a859f8755774"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["g", "2"], 
     RowBox[{"-", "1"}]], "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "19253cc8-f44a-4faf-85b3-fad5983a01c0"],
 ". State the domain and range of each function. "
}], "Problem",ExpressionUUID->"53e62270-bc37-405d-b651-8f9788be813f"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Explain the meaning of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x"}], TraditionalForm]],ExpressionUUID->
  "8dada5bd-c7ef-454a-ac6e-ccd5f54ddfc5"],
 "."
}], "Problem",ExpressionUUID->"a5c78502-ab2f-4c5d-983d-966b548cf3e0"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "How is the property ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", 
     RowBox[{"x", "+", "y"}]], "=", 
    RowBox[{
     SuperscriptBox["b", "x"], 
     SuperscriptBox["b", "y"]}]}], TraditionalForm]],ExpressionUUID->
  "b46554a7-01b7-41b8-a99a-52fc4c395cd6"],
 " related to the property ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "(", 
     RowBox[{"x", " ", "y"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], " ", "x"}], "+", 
     RowBox[{
      SubscriptBox["log", "b"], " ", "y"}]}]}], TraditionalForm]],
  ExpressionUUID->"b2ca68ac-bdf9-465c-a5d3-97e94556f811"],
 "?"
}], "Problem",ExpressionUUID->"e0eb4611-9710-4fc1-bf6e-3aab05c885fd"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "3edfa6d9-0616-4644-9deb-d51b25855f38"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "ed1a6333-f6c2-4be4-99c6-95f0142a0308"],
 ", what are the domain and range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SubscriptBox["log", "b"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "18d0e92a-eb81-4ff3-bfcf-97fc2d79b775"],
 " and why?"
}], "Problem",ExpressionUUID->"cfc3fe50-e707-4645-a55b-4d148e648701"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Express ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "5"], TraditionalForm]],ExpressionUUID->
  "6862ecfa-d7ff-4af5-88b2-a688d3072cac"],
 " using base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "."}], TraditionalForm]],ExpressionUUID->
  "05e88259-d970-4fb2-b8aa-f14566cdfc91"]
}], "Problem",ExpressionUUID->"d1af6842-8387-460c-b390-9b79b3d39213"],

Cell[TextData[{
 StyleBox["19.",
  FontWeight->"Bold"],
 "\tEvaluate each expression without a calculator."
}], "Problem",ExpressionUUID->"cb7ea088-876f-4a0b-9990-d71692c27f61"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "10"], "1000"}], TraditionalForm]],ExpressionUUID->
  "ff96eb32-1e7c-450e-be18-0f4b898a4132"]
}], "SubProblem",ExpressionUUID->"ac436fcb-a70c-405e-b562-dbf97ab74883"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], "16"}], TraditionalForm]],ExpressionUUID->
  "79953053-3552-4fc7-a381-10caed814dd2"]
}], "SubProblem",ExpressionUUID->"a4c172f1-3fd8-4ea5-867d-08537ed19a53"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "10"], "0.01"}], TraditionalForm]],ExpressionUUID->
  "d57b49fa-5b45-44a4-8dea-9435e17a2a90"]
}], "SubProblem",ExpressionUUID->"c3c9807e-2e94-40d0-bbef-f873fde6c901"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"ln", " ", 
    SuperscriptBox["e", "3"]}], TraditionalForm]],ExpressionUUID->
  "ac3881e8-d553-43f4-8118-cc71bd107fb4"]
}], "SubProblem",ExpressionUUID->"c9417f34-49ca-40fa-939e-4f541630452f"],

Cell[TextData[{
 StyleBox["e.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"ln", 
    SqrtBox["e"]}], TraditionalForm]],ExpressionUUID->
  "4f84a48b-cd0b-476e-9dc3-8454169069e7"]
}], "SubProblem",ExpressionUUID->"6b97dc77-2ad3-4e19-bf1c-c42fe604c45f"],

Cell[TextData[{
 StyleBox["20.",
  FontWeight->"Bold"],
 "\tFor a given constant ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "9019bb06-f759-4c62-80ab-17410e5a2002"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "a"}], "\[TildeTilde]", "3.8067"}], TraditionalForm]],
  ExpressionUUID->"228aa527-f073-4aa4-9513-f7a1db7decdd"],
 ". Find approximate values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], "a", " "}], TraditionalForm]],ExpressionUUID->
  "25c9c944-e02c-4698-88a2-b2da1fd73a4e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "a"], "2"}], TraditionalForm]],ExpressionUUID->
  "67943372-60a8-4043-a5ca-3d5f94bcb85c"],
 " using the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "2"}], "\[TildeTilde]", "0.6931"}], TraditionalForm]],
  ExpressionUUID->"fde79398-5ab1-477c-bd43-0d0e2e4036d2"],
 "."
}], "Problem",ExpressionUUID->"f25fb9c3-6c94-4a44-96fc-7d56092f2507"]
}, Closed]],

Cell[CellGroupData[{

Cell["Practice Exercises  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Practice \
Exercises",ExpressionUUID->"e19b357c-b65e-472f-b21d-24a4a28d06e4"],

Cell[TextData[{
 StyleBox["21\[Dash]26. Where do inverses exist?",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 " Use analytical and/or graphical methods to determine the largest possible \
sets of points on which the following functions have an inverse."
}], "ExerciseDirectionsCell",ExpressionUUID->"fbbb00aa-82fb-4efd-b569-\
77981ad74e41"],

Cell[TextData[{
 StyleBox["21.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"3", "x"}], "+", "4"}]}], TraditionalForm]],ExpressionUUID->
  "9259892e-11da-463e-8efe-21d29e656abe"]
}], "Problem",ExpressionUUID->"2a512e08-2f2d-4681-a609-7ab9961db740"],

Cell[TextData[{
 StyleBox["22.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"2", "x"}], "+", "1"}], "\[RightBracketingBar]"}]}], 
   TraditionalForm]],ExpressionUUID->"d7ee7cd8-96a4-4ecd-bbe8-421ca2a30231"]
}], "Problem",ExpressionUUID->"4ce21eb0-937a-4457-94ec-6663faec36ce"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "9e950985-5b97-4b4a-af09-1c29d2973218"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "551d543b-6946-4087-979b-2d1fbebfa9f1"],
 StyleBox["23.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox["1", 
       RowBox[{"x", "-", "5"}]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "30e64f05-8e14-4120-9f28-50ff68999f10"]
}], "TProblem",ExpressionUUID->"c57135a4-505b-4a4c-ba40-aa7569bf06c1"],

Cell[TextData[{
 StyleBox["24.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"6", "-", "x"}], ")"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"7c516698-572b-4121-aa8e-871b15e9f6e5"]
}], "Problem",ExpressionUUID->"e2a6b826-1787-4e52-afe8-9e96f7a2d037"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "6465c324-3774-40a6-84fb-7907dd998f6f"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "7c23a470-25a6-4517-b9f7-e65ecb7f3e0d"],
 StyleBox["25.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox["1", 
       SuperscriptBox["x", "2"]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "53593103-1292-41e7-a428-ddf5144bf4a7"]
}], "TProblem",ExpressionUUID->"f6fb676a-11c6-4a9a-806d-28a715c205fc"],

Cell[TextData[{
 StyleBox["26.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"2", "x"}], "+", "8"}]}], TraditionalForm]],ExpressionUUID->
  "128c5346-2112-44a9-9271-cb667340ae25"],
 " (",
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " Complete the square.)"
}], "Problem",ExpressionUUID->"f6d75e0f-8d17-462b-a708-91c5ee701a2c"],

Cell[TextData[{
 StyleBox["27\[Dash]32. Graphing inverse functions  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Find the inverse function (on the given interval, if specified) and graph \
both ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "5d3d1e0e-4a64-4ff7-be4e-2246dd65ef32"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "ea787de6-fc75-4689-a561-9c188ae6cefa"],
 " on the same set of axes. Check your work by looking for the required \
symmetry in the graphs."
}], "ExerciseDirectionsCell",ExpressionUUID->"ee55a2c4-740d-4478-b042-\
623b39f8d1d5"],

Cell[TextData[{
 StyleBox["27.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"8", "-", 
     RowBox[{"4", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "f2512565-521d-4965-a3ed-b88b45861c4d"]
}], "Problem",ExpressionUUID->"546f1eb7-47a6-45da-89e5-99ae75aa7b10"],

Cell[TextData[{
 StyleBox["28.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"3", "x"}], "+", "5"}]}], TraditionalForm]],ExpressionUUID->
  "7fa7e548-1656-4ae5-a412-826537aa45ab"]
}], "Problem",ExpressionUUID->"fa706bc0-0185-4861-bd8e-48de70bf113f"],

Cell[TextData[{
 StyleBox["29.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"x", "+", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "6de2cf67-c375-4be0-8ad3-64e3caa78a76"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "0bc70ad1-fb97-40db-9b7f-62bdeaa1e7db"]
}], "Problem",ExpressionUUID->"54f3c19e-ac0b-4e3d-af57-c0754f7b90b1"],

Cell[TextData[{
 StyleBox["30.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"3", "-", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "490d9f59-c88f-4f06-a5cf-261f85bc1cbd"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[LessEqual]", "3"}], TraditionalForm]],ExpressionUUID->
  "95b7d24d-bb78-4d14-8320-e6b3e1025e2b"]
}], "Problem",ExpressionUUID->"7312251b-c251-4d78-9377-eff535424163"],

Cell[TextData[{
 StyleBox["31.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "2"}], ")"}], "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"b6ae7c9c-58b3-4cf7-bf75-170aa8ccd571"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "2"}], TraditionalForm]],ExpressionUUID->
  "e86d35d5-d8f0-4748-93cc-23562d979279"]
}], "Problem",ExpressionUUID->"c1d58d3d-f2c7-4844-a1cb-93d1c27cea0e"],

Cell[TextData[{
 StyleBox["32.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "4"}]}], TraditionalForm]],
  ExpressionUUID->"286cfa7f-b6ec-40b0-a929-e98588f37a89"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "edfb3b90-c797-4d1b-b22c-c814bd152049"]
}], "Problem",ExpressionUUID->"86a068e3-949d-4af0-a436-251e95f11073"],

Cell[TextData[{
 StyleBox["33\[Dash]42. Finding inverse functions  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Find the inverse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"-", "1"}]], "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "a118db81-5de6-4ba3-b14b-6e87a8e9b215"],
 " of each function (on the given interval, if specified)."
}], "ExerciseDirectionsCell",ExpressionUUID->"b408f891-dd4c-47c9-b292-\
56e0bb47150c"],

Cell[TextData[{
 StyleBox["33.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox["2", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "345cdf95-21f0-43c0-9f82-4fbc42428b90"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "1c61e84b-d7b9-4cc8-8082-b18d6e79abbf"]
}], "Problem",ExpressionUUID->"bc122ac8-1ae9-4b9d-b444-91cde12a6b36"],

Cell[TextData[{
 StyleBox["34.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox["6", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "9"}]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "2b25c381-49c2-411a-b3ac-40bc5ab13ffe"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "3"}], TraditionalForm]],ExpressionUUID->
  "b201b40e-a03c-4dc0-9fea-603ee0fe1c23"]
}], "Problem",ExpressionUUID->"5648fb45-a407-4d35-9b33-6b5fd25094ec"],

Cell[TextData[{
 StyleBox["35.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"2", "x"}], "+", "6"}]]}], TraditionalForm]],ExpressionUUID->
  "c5bec2cc-213f-49b5-a681-da8805937912"]
}], "Problem",ExpressionUUID->"223931f6-c268-444a-94e3-8245e29856e7"],

Cell[TextData[{
 StyleBox["36.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"4", 
     SuperscriptBox["e", 
      RowBox[{"5", "x"}]]}]}], TraditionalForm]],ExpressionUUID->
  "117fa295-7aab-443e-89ea-b0c89ac3e952"]
}], "Problem",ExpressionUUID->"e6d644ab-1aa2-48c3-a2b7-4e428d3e6336"],

Cell[TextData[{
 StyleBox["37.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"ln", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "x"}], "+", "1"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"c8531461-9628-4663-a445-5b8f93d01506"]
}], "Problem",ExpressionUUID->"02e855b3-cfcd-4bc3-a3cb-dd615adb73d2"],

Cell[TextData[{
 StyleBox["38.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SubscriptBox["log", "10"], "4", "x"}]}], TraditionalForm]],
  ExpressionUUID->"63cafcf5-e35a-4f44-a263-d3d3db802a36"]
}], "Problem",ExpressionUUID->"74d5ecd0-9592-406c-b2b3-48b790764a3a"],

Cell[TextData[{
 StyleBox["39.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["10", 
     RowBox[{
      RowBox[{"-", "2"}], "x"}]]}], TraditionalForm]],ExpressionUUID->
  "0eb3a422-a3fb-4bc4-8dc4-cde620b9015e"]
}], "Problem",ExpressionUUID->"fbcdff27-3114-44ee-a1a0-9dd8945ffe43"],

Cell[TextData[{
 StyleBox["40.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["e", "x"], "+", "1"}]],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "98021bf1-8c3f-4e00-bd01-966d85771dc4"]
}], "Problem",ExpressionUUID->"9198c1b2-119e-44ce-bd9d-546a476db8c5"],

Cell[TextData[{
 StyleBox["41.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FractionBox[
      SuperscriptBox["e", "x"], 
      RowBox[{
       SuperscriptBox["e", "x"], "+", "2"}]],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "4f51b55f-fafd-473d-9af8-e60f905fd5a7"]
}], "Problem",ExpressionUUID->"9ccbf6ab-b0fc-4084-80b8-622b3e2385db"],

Cell[TextData[{
 StyleBox["42.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FractionBox["x", 
      RowBox[{"x", "-", "2"}]],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "d8f429b1-f0df-405c-bf65-fb237043edce"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "2"}], TraditionalForm]],ExpressionUUID->
  "975204de-caea-4566-be5e-ade2be39cf2c"]
}], "Problem",ExpressionUUID->"d9e51f99-15b6-476f-9613-10b2659eb317"],

Cell[TextData[{
 StyleBox["43.",
  FontWeight->"Bold"],
 StyleBox["\tSplitting up curves",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The unit circle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"0d804742-6da3-499a-b7cd-f590729ff522"],
 " consists of four one-to-one functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "1"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"f82a2a34-e20d-4604-a2fc-4dd6e1cafe11"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "2"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"6bab6288-38f5-41b1-ab9a-6c7ef78b9b8e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "3"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"a9bb0193-2c68-4119-ae75-2e5371d6fbd8"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "4"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"758e6137-f19a-4ea7-9fb9-42a775e6b3fd"],
 " (see figure)."
}], "Problem",ExpressionUUID->"41f64952-dd65-4f0c-a396-1862647d7ed8"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Find the domain and a formula for each function."
}], "SubProblem",ExpressionUUID->"00472600-82f1-4120-bece-3131ae16637d"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Find the inverse of each function and write it as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "x", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"74602281-ac8c-42cf-aade-92e630136e02"]
}], "SubProblem",ExpressionUUID->"e7c52f54-35e1-454a-b5fd-efa7d62238dc"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WG5zyW17P/bi1o61/aHcmgwvNjFJ0AUwq0T677cmQ3+bSzXmeqKp1p8lU16E
EyOZ2vctMxF129+kLvvW0qtlqM3G5l3mDCG9mNySu1GVJeSF21mirGMiN5ts
oyfTyWTRwlof+ZtyZ6eneSXxrm9pKSnuStDVx/1btkhmHhsb8/tHQW0zpi7p
0CjHX/W+demza+P9D1uPtEWHYi5jZGr0jR9/dYVXoVTP3+oxh+5Yc8Oa+46N
JLx5qgIQOHKuSG/4j+klKq5c+3/elJQi5zdr4bx8xmVcmRg9mx9K3b7oVmc4
PWaVvr599U0PJgbqU2ZBmaq5LVqWULRvbTb93nSfmvOPnlzgLzQWcsq1yB0o
idea4y21Ve+qlSt17a4HLyFRjxISF/U7Czc8lVnwqOd19Ysv+aSb83Yq1nf3
F5aqiNvxysWUZwUG5u0k/u37ZhXQ0jV7zn46yYMfgIORNOOiCjA64srn1Lzr
ksxOVfJJNzcv5zednTybFjapp3IZ+UNmG6vQRoJuyUbOq9lX1QdsXf4asbn6
1m7Yln62T1cj2BdeLVg1kXK1zAyVWdUgo21va5PgMc+ga/Ui6+rqovUuSjLy
k4d1lcKf/8mj1kTraM8m68Fmptwy/8yvDe/TD1HPKh9s9PlHgq6K6GbQXeCn
IwBVli0kkADTrVOonCXk/GZN67lJuXJ+07djbN5VibeTVCZXQbeJoDtfyWT6
wCtmZUJhD4RZFpdtVLswmAUJaV+LbMtQQym3UCKROPryq5FIRPfmnTPoWvUM
61ta5AvHzd8XMIvUpQE90SoPodaRT/VEhwRdXWMg0fGOb+8688nV8qZJU7E+
/cj80ue/OXDN66Hn+vsldLnFl7549+HRz2ro7ASgssaHrS5Pv49+aJ0cVI2B
WabrpsbAmsVNhx7xpFDBIZu1ElbpQiW+S3DkJm+bilUjFNuAbNEmVZNwaiT7
xFeTzx01nXLT2aYN8ivQFby33HzzfPru6svVjY07duxgahezeGfvXbpW4c//
5NGhCUdnv5Q88HTHv3Jueny448ab9KOxouUEaszm95IfZMlte1mMBiCdm7PV
b0w/kkzlJujkzGae3Fy8Hy35OTsbXNFZVn1+y85Mdtt/CqStylu9rGzxuiIV
CEXKcTeqPHzitKOfbY2q9ZRrp4PHy8fPP9TRUbjz2iy1Dfdv2SIh2e/hY+HJ
BlFdNOtpOExYy9lueGq4ChWz4/0P678C+UEo0AVgC6JNF3/wmqdNwxL2Wl/v
bnZGxtEn9eq5z77zy1pPZV5RbROe7VPzsUsK2yMUvcyUJZQ/dbMgBSnlprOv
QNPZ2d1IJKIn4mZp0WDF4HA4fPDgQcoYoMmpUidDfbSOfDqe9OwPX7do0LUK
5hRxZU8p6rQ/+e6exX+mm0K0vX65ot8OwMKXa6QQav599EOvb1kHqkeqMLmq
z28V+llqkep5u21PdquymcpubceGbaqNWEDDT8BSrmZ/n2VsbEyy6/qWllm6
71r7SsgHt9x8844dO+LxuN8/BHyXOLjmc5ksala0enW7qdE37v7CUr2izWV/
hvnT705aP87AtXSQXq0DKE2m5Wxm31UPK1rl/GZfuVa1mdXMMjr1fb89ngzU
bGQJRs4bm3flh9uZ8+2iTemdByQSe7v3x0ITyJRbVCwWk/iq9xSeZUZXfywJ
5KGODkp261nqg3+Sh4Hu45EtZ/XmdJ3rz7B0zf7E9aqdYVKXBqyfqGrpGsBC
o2r7Lg1kyzLXWd0VPJHrQmaG52qe36xFVWa6rrPz24nTakrWbHFsC7dFy26b
VYNcVZlQA33A3KuflKvpSob2trbZg+7y7DZqkUhkaGjY71H7QC09mLo08uv4
5ExbxBrJuLhyJajbDeiiAv2Q8DIT2mp9dXgu4WuNpLzuPvPJ1eQMbXXlX+V3
cvnj8cJ/1YuR7bPTTOeiPsnfgpzf5I/F6vlZ7ErJ6XNx+xal5X0jz5X/Y+cz
iwp0Fmq22uR6YPLdbKPdppLCs2H2v1XziufiRX8p6pRn/spUuWlxCb33RF1N
56o7Sudbxza7RXdzyE7eBj7Z2tVbyrX+fIpO7RZ2Y9CVDPdv2RL8rJtMToye
PX3shR89vecb92zW7bPkZ/+r3reKnHBse4GFWveXV1mqm3Q1LF3j4bHc3Jus
vDN2avQN+dnlkL+Frl2722+/RRcVyCNBMqH+vJAP9v30TNlnCasid54TqvKN
5Pfy/DP7/+6uFaE71ughFWmVMPnu8x0t1mO49fCForemp5H1df76p+dZhoZ6
YZ7f0kePGvt60n+/1Upi9vZZFrWvVubd/GbjL58tryDfnFpsNhs3eXiUv0eD
KiTo7JGQo+6BnQdyK5LMTKg/qS/N+6ScH1mvZbDmD+c5oSq/l/xfSnOReCzh
WW9AvDjzWyt6kre1+Z3xOoEi+TaveYK9RVh+CwW5Wt9xnfzrKuKm6y/l2qk/
yWTy4MGD4XDYWqRWtO+u/iDAWVfuitjutTrW2n92+d/Qnc9dzD/hqL+Rt3rs
LwTKmOqUG7k2vG+mJYFuDhlMefeANXkrlzpMLs9vvGy96invW5hyrRXk+M6b
V+c4D5tLxvR4HEOyf608f+mrWVeQ31ph7x51fjv6pBWVQ3f2XAzoPDzgoPKP
LlaUKLUkV6koIbbIa72RA7kEmNnitpzzW/GWTeVfZgZTxo+fzZ/Zm3KGIttb
20tcvN2fq/VVQ517FZhaMrZOX9k2A6yGcfXNj63zm3p5kruCuo6x+lBhWtPn
NyvyFf/NBsapkfx8u875ULHmb1s7a73hrUv1nHLtBqJRCbGzZCcr58jVYrFY
wN4KMf8EEvErqgo9efbn1j4I+md/5FzS8fNaFZ6Z5lSl5yX19lOs796vtMv9
GYlEvLqUG5w7OhYfT0pOuUdfflUeCXLYs2jD0jXbDux++fh5/a9yWf42EHr6
Wu8E8cW79yeuz/JAMsyFw88/s//ov7+pqhSyvxcrzGd+zGwStr9AC93bWyzl
GrrYOPN4NquCA/ZIBgqp/DN1Sb3TbSTl78hWo9hctJtrZhp2cTZTlZWX1J4I
tz6Y/vp3vTxufdAe/0ojkbLvuDqiJ1WbryVWItqY+fzRo/oDcyVayT9vttY3
m7Xms6JNhrT7Rclgck31e7EltIs/eC13nYK2rpJyi/5G1AByb9lvlJsNYNAd
Oa+Cq7Nzgv01S/a+2vqky5KbYCDlWgxz72DdfGz2uCuXcrWArU3Tfwu6UZ61
4VdmYvDRfy086Y385OFcyi2WqebxHTO7SWa3w/bkssxaLNuXG9a8biYx3vmc
evvMSFr3T9mviO3T1/OpjLU2ntD/ay1b00UL5o7AanJYTbl3vCJJ2Dj6pOT8
b9yz+dhIovgtZyOx/s22vX6ZcyDqgf0UkQlU2Q75RVvFqlnBbF6aav3ZAglL
Ls9v2Q+MbKevTEmGVz+dmr7ORa9vX/rs2pznN/sV1LK1XEbVRQtm393F61QX
3KlL6pciAa+1s+iiNiOvn1iTbikWpNnL6XNx1c+2eOcE+6sAtaeDfonB6T1N
yi0mHo93bu9ctXLl7FlXooVcLXg9x/Rp0B6oZurpKmFYL6QK2oJ9I2mfy83N
mrq8VSOV666wfHmpS8/UPWwWilghuf/3SXmtsXbZcnmVkbg+LU9V+tlqtucs
24/m8ao6oHbYCjid236ls68uVSHrkurta1A98oLdjI46IOVmTV3eqtxruZiq
lp5NlrJcTl1TFYqss6aCJSTr5mDyKkO/2Lf2mpzxhKx/tGwVRGB+ceptCLU5
b7OzOGGxYyJ3o5obT2YmZPwe9UJByp1JIpHo6uqaJevqGga5Qnd3d8D2ktDv
PVk1CboK1PFXoycHhr4VctSIBoE54WkVAHi2h0J+eA617i95AtzWn0GGt+3A
7ru/sDQ7Jzz3s4lexWxPueWMAahx2ffW86pAC1OBOqdt+I/J0N8GbZeB3ISn
p3so2BNmNpqWdgu2TYHVJPM+netK6ZbgfgwLjBr/s3164aEt2eZX3upFjma+
DdLctVdIuTPRjxYr6xbdUcK+b1pvb2+wHmCZdVJWK60i7xBNXTq45nN6x4Qg
/ex5Cd+j4tUiCfPOAyUnzPxb0G8olPYSg5QLKHoL2tz+toXXkPObWtTv6Y4J
C0E24euYtPHyx+PeRMFMwsys2pupdHYet5C3nKq0qgP7LZQ3hgUlejK96oEZ
kq115OZvURQpdz5mmde1OjDI5fqWlsA0YXDUpv75nzzqaF1lzfcWNmGoaVbz
Bx0j5QcfmvDoCc4xl1tiytWn+nf23mXvBxLqeKW0jpRmy1xrAVrJDXuBQLD1
HJihdVV2DZokpYC1BDebP1hrlLzbDyKTMDMxrGgbhDluwFnz0DTV+rMSb0S3
zM32bfB0t4tqUlv0Flli5jia0zsPlLdUsK6QcudPsm7n9k6rodNMRyQSkWvW
+gNPrUGL9Vnry+Ry50VnL245IxUtZpj390ieGXzv7Ns/l8sTg4OeXX7iqnzC
Xj2rsqgZI93/Nh1zuWWkXM2ewJeb7S9KvQXJydYt6OLe0kcB1Dbd48XeLqxI
pwWzKLRoMcP8vkdStTOV49SIZ8eJ0643qkhlk2QmRno222mfy525DcKsY8u2
X8tuUFv4S5lT/hK22tsbQjVn3mk2snNuWJafbzt79OYOtZ40qoCUWxL5s5UQ
9VBHR9ECBmtSd9XKlXJ/mqXytfwILFiPn/e62KwRLbvnqj6h2XvAenKZXQrn
4m53ZNFD5z37JbpOuXr+3Gp/UUatiF5XaE0F65re2n5TDyiL2vrB1lLMuRXC
5LvqLW83/Qfe6slfHOT+WOfBPmW59/RViJr42W89C4Gu53LTeusKq4dA6bUi
mQxv2+1izj4PC0v0ZPqm++aYwm3tNLeH46Q9X6TcklirO2OxWHtb2+xZd31L
y4nBQb+H7Mq/fb/RCqKhjlfsJ3wdllpHPi3vlOsoDPDksFJu2T+v7kUj6d36
qQt7BZd/y17M5TpupIz7X7dlWJ7tnsE+v6hDmUmwhzZm4oTuVZX9Q7DCUvnN
aTOFAVYbB492hQg1ue0bkGk/u85adufq1uy8mMvN7dKbe+lRYk6WX1xug4lH
ytu3rvrUxOzmXbaRF8u3ayNqPh8lIuWWwfq7G4hGrX3TZlqY1rm9M5FI+Dvg
8ujSNfuusr+1fnZzIjfbsrXMG58YPSuvAuQYGhr28NK59W2JUh/8k/Ub9DgE
ejKXG+uz18yUPHFtJOWVi/VCjNVnqGeq/2pucwRbDada7O+2ZlXt2KUrFjw9
VFMpF+T8ZsvM+g39hVKXm85t69CkX3qUuguburK8csn2IqiJ1WfqLjrwilpE
NmN9wrr0ok3pvuPUJ5SHlOuSPOrkrlvd2DhL0JV/7e/v93uk5bDeH9fvbh8e
/Sxt/sjv7L1L1zD4PUAnl32wdbC3lnd5uLDOk7lc3dTC/hgreYQFfR6CtHIQ
KI2k2SVN2cnSb1vvj5sTuU3uW2x5nkk8WCBg2+3C44V17udypy5lJzMzObzk
G8kl7drosaA2etiwbbZ8a5bg1lx18YJCyvWEXphWuGma9U66XH7jns3xK1dq
7bVYwgpF8tPpt+919F1y296LKSN4f3r2xVluS3zzOfbaKHUeVb+4sFcgl1py
UCRpe7S2Dqg5etvfzJJ8c/5Qv32f3aa2Vpfnz87cDiMzWVrqTOns8jsklJww
bV/eZE3GljzbbCVtMyQvnE3rCql7/tm+OVaZbdimS3A5RbtByvVQLBZb39Iy
SwHDLTff3N/fXyvJUO/7YLWukp/ir396Pm0W67pqrbCgJazJUjdVx0XJ3WU1
ZyunR9nIAR1rX/uf79pndPec/bSUM7n6Aa1fKHufoc5lU5+aNJv42W/V37v5
lnf5rRUWNKvRlkpW86x6VV2tdL1E9KQZuorHzmxzNmvlV3dJr6BVyws1kftt
9e1yE+ylVg7rHzATkhfs3mdqCndtJJvGi1XhLtok93YQH4E+IOV6xfpz7u3t
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
+Cjzqv+FRzNzudlLIi4A1CjzHbr3cxO55iGnek7sqD5SLnwkJ73jH1/MzOUe
zs7ovspDEQBqWOjY7/LmcnsvHB79zO9BoR6RcuEjSblPxd/RtbiZrNv7w9Dg
EYpyAaB2hV6/lJdyD13YeXGCNX2oPlIufCQpV23vqydyD5tZ10y5fo8LAFA+
tf2ZvWLhkNrkl9JcVB8pF/5SG5/pcty+Ll2Uy/a+AFC7DMP48ttjjtVnbH8G
X5By4S+18ZkKt49Zl2x8hoXLSKYuXznzydVkqnhLVfnXeDxubijAm7OoX4+c
Szrqcs3tz/ijQLWRcuEvtfHZS49nJnLNy0MfvsfJEAvKxOjZ55/Z/3d3rQjd
sWbtMrW73JLb9pprxm0P1Ml3n+9o0RvPydF6+IJ/4wV8dnj0M0fFQujY7/we
FOoRKRc+ym4J8ZhtOveJM59c9XtcQNbku3sW/5mcISXc6nxr5djvvHnVWiaZ
Gn2j48ab7FcI3fncx/6OHPCPahHpmMt9iekL+ICUCx9d+uyaVY5rXU6ylxwW
BvU4nHz3+Wf2H/33N1WVwtmf3/2FpfqEKccNTw1nUm42CVsBWKXce3tJuahb
EmhpmYuFgJQLH6lmubZZXHX5ag+v97FwyKPR3Ikv85gc7dlkpdwlt+39rfpc
4ljbH65oaAh1vCJJ2Dj65L1faf/GPZuPjSR4JCOoJKwmz518+fj5ZGrG1ErL
XCwEpFz4Rc6TP/wfv8mfy30s9M8vzPlVc55dgUpQqfWtHivlfumLd/f/Pjny
k4fXLlMzt4nr05OGoXsl0TEJAZYafUOXoMsLvYuzpNzB0dCh8/aU+503rzKX
iyoj5cJHf3H2X5xzuad/Mcv153l2BSplfLjjxpus4oRtB3bf/YWlEncHrqV5
+kbgWWfgbPH5gZnKctSai9MfOZqJ/dHbY7zBgSoj5cJHqo2YrSJXLr/2zhtF
rzn/sytQQUbyWNsf2ktwVzQ02JehAYGkz8DyaJfHvPV2xuznYWczsUPnQ69f
qt6IARMpFz4KvdqT2fgse/lU/B3Hdco4uwKVoGdr39l7l340ZlaZdbxC8QyC
bbz/YXmo37Dmvh89vaf99lusXiKzz+X+8uK4uQDtfG5jiP4PeMsDVUbKhV8m
dRuxl8yNffVlX5ejjVgZZ1egoq4N77MmcuWDR84l/R4RUEGGkUqe/fmxkYR8
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
AAAAAAAAAAAAAAAAAAAAAADYcf8feOQ9lQ==
    "], {{0, 920}, {930, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{930, 920},
  PlotRange->{{0, 930}, {0, 920}}]], "Output",ExpressionUUID->"573cb055-e921-\
4986-8859-aafffbb50638"],

Cell[TextData[{
 StyleBox["44.",
  FontWeight->"Bold"],
 StyleBox["\tSplitting up curves",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["y", "4"], "=", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "cc363216-fc4c-45f3-b077-6b0784f6193d"],
 " is associated with four one-to-one functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "1"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"66760991-2b7a-477f-a540-6a3446b4fb03"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "2"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"858bf5d7-6456-4eee-8ed1-0a030a86b02e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "3"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"c47e74b3-b73f-4c62-a08a-fdcd034947b6"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "4"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"584c4ac2-4bbb-4c1c-a379-890182a4a8ce"],
 " (see figure)."
}], "Problem",ExpressionUUID->"7d6ae4ac-f305-4119-9c34-2fd20e585b9b"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Find the domain and a formula for each function."
}], "SubProblem",ExpressionUUID->"45776965-5cb6-408b-b360-d95de8d1318d"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Find the inverse of each function and write it as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "x", ")"}]}], TraditionalForm]],
  ExpressionUUID->"e38e8b0c-a514-452c-a579-c67f8f368644"],
 "."
}], "SubProblem",ExpressionUUID->"7b1192b7-7eb1-47ef-a0c2-63ab70659c37"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Oobn/JJ1u2xJ58PWRuq0c+PzBk3djwfz8bhjP+XHLYhs3MqMAmN7NvZm4J32
oLn4i0s/fP3V74b/6pnNnepM+t6KO3xx+oGa46Ya85q7N1REPGge6JBt0Fw8
xCmJc67usUA8aIqrLw5x+7/6d38vzk0VVKgkqT4+NTUl3vm///uvq7vKqtK4
/Ikh4hFE/Fx+PD390vNfUtdOhWrrlOq1D89+f1Sdqji+ccX5AUWcs1q1Vr94
4oby54IS6kHvVLYplMuBphYBIvoW/ibI6BLLFYVqSay6NVVxOfrYCz3sufJ2
sOopdbnUGpK3Q3vIqWfCkPGp6peRzTXM7aGN98SJxNtu5GFzizPZ9s24N5PP
awr3r2W+8hP7n7BcbRYZOzeBzv7D9Yl81cSb14u0d9NukCs3vD5TNBTZuDWJ
O66XT51yHAOtGrUtLt5pcB2F+HaqU5lKTUbEkj0Nhs4tp20Pmu+fNZ+2yHhV
nLB60CxWaF3LUfX55MdAiyueS8WbbTO7xa1U5TKyadlWHEdvJzd4zMrtnjPO
xLi5xL/Nd5N78K76MuNU24YuOE7GUg+axlWz/3ARYGo8hHwhPrOyuvQzUwIZ
UhnM+vX6eq8eV6qOWHLyxbax7J4jbh7bxsyhsTIiiIq4JY75W7LBWr7yYUT/
+Nu/VO+I26q6e5KCm66c/X3ilM5czN5eEl8pfzSmKXKf/u27+a/Jh+fckxqn
bJzVf3ah3FOJPf4aBeLo9pIcAlIwE2QwH5iPn6uyVSaaENm4BZkLjO3ZeNfw
cOLjjxv/MreqoJDfev2xuGc2imzV8YO7K5ZTMspWc0msmoglH0E+eGv0698S
N8jBsTHX3n79W+bcWMGNIP7J2odv//SX89GoOIwh0aow+Hv/cOZ/vPOra3Nz
4lPia6oc9qGtkxslDec/KjXwQ3WW+PH09Nv/+i/i25l/LubR1UZ+Ngf4ttFL
xabGGkXURsFzpdcCTUq1CFBvxaFnMOPV+b991x41c81yZUpZ/8acf/KVai1e
xT801irVO7liY+viufE11Z2eXCrPP/UY/+izT0vfXaifSH7giF4RYdoeqPok
t4dk++X0A/lz+dqR7N6TjuOh853cTAvXTRAsHz6SV8pcU2FuZLE7kl2h/Lgl
kI1bTTwetxQYm7PxiYkJNUjCk3NT31cfZmGKcDJoTfyz/euNMcpy+bF4EivN
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
nPmqcb363pJXRBUh19Sews8KW5xVtjaefvA/3vlVsacM4uYy2uKpao3KWsPF
Lqgw/P/8fwWrx68t/aHSF1stnasr+LcIIlmo+Xb+pWq5iCri2aaQKpT1+uzq
Y+3DfHeOTeF/f7RaIk2tLv1M5sxNoVwXaC2JbQqLJxHF/om8AdXtuUnvMlHu
3YjcIRjK73/Ua4ZDeicN40IyK6XzuT5ZL9eFI4DPcZbuyhHSDvUVg+zOa3Zk
4wBQO+8ct91t1kZ7JJNJr8+xJuYCAzkB5IO35GLj6KWHj9e9PrX60EqpVez8
iz//5vmPyps5l36gj2/u773x70W7LYlbz8jGFVx4Nt8zRDwlUeMIjTYa4glL
/mE9s/L+bxJrpcdGFw7Xc5x4iFajdznWk8a4imRutm7wE72rc35JttS6rl6W
XCSDfXb4n5z/2PMFw0MVNPrIrKjlerXMm19/btfHfxh/6Ub/kKLXsWDkX7M2
qShNbsYsMRzklQvBu8otgmzc7FKplEi/jsvF4jgxMRGA1KHCsP76e9+3X3r+
S2qt0uvzqpvYBeOn6TjxxCr9YPEXl+QMFG0hV7ULdlyDMiYJGr8h5c7azqz8
aORJceHGGm9BRfToJfXIboxrkXG3+Dmbp4HT3Bg6rY9xbkVUvhOYV+Ed5TOn
1rau2KKxDMabQnriEjFsz5Fc4jXWkB1ayem7HvSS45I35spq9mF+RVf9E/PG
wFy3iiFzMw31RKZ0CbFpp2Fwio3NVHGFtrR+2va0JfebvPdkc21+h0I2bmrL
icTOgQHHUgrxwdnZ2YCUPJmWGd3pkOZv4kFTL+XdcOqHlorVbWKUAZdOm+Lj
xtyNUvUMK6vJZNL41vqKdK6VtBrja+RbVXKc1brIbt5oUp7Kz0Y9BsXGyOaq
0OXWrfzqqKs9zXymsL/ZoHXciSFXdyGzpQql4lh/bIqdQ8ZgDsttJf/Qln5m
fJljCzWZe/W6C1meoS0Fj4hbXvxJqktTXY5NaVzmcO1iy2g6Z2rgFsCCCgu5
O2/INF/G9NPZoZVto6mQjZvX4uKd3p4eY0HVnI3FxxduLnh9gu4p7DymqmSD
ek8rHr+Mls7i2PfORyVW/kUWbev79k9v3L390f/80ciT5nXjYrePpUFc2+gl
+2ui4gtUbxBxUd/7hzNqUdoIwFn1yF64/tz3VlyejMjPfd9eTP6+dNwVV9Bo
3Xz0dnMX/MAt+d4I7fp0vAA//80FTn3rlmNlglyU1Gqw1aKrQ6zNxzDnm0ve
dezemftG1qqGgl4W+vLykOVkcuui+/XajHZtZ592gRvEXT3Vh1xpT+1/hbvz
bPUVm8KyOBnNg2zcpOajUXO7AHM2buqdd3bqdSuju4JKU8F7eS7PtBGv84ln
S5SOqIctYy3IuIk2rlLQnmsY9cz2AgzVJUPe2k88q9/stjOx9Cg21q43zrq5
UC3+bY3tqREwue14gyVqDAJC7lMzVheLREe9B5pDpa7+ar5pIrNjWYX8Gn1H
nsxplvxc0MsiVwZgL0uW3/r9s6Yy2iF1UaWr9fI7AW3fN8hEABYx2FoZnhst
LcIzmgTZuBlNTU1ZUrGRjQOw885OdVdolX5fpgISER0/+uzTMp8IGFOYy6rg
1UqajaVp87cwbm1z6HVsCWIfKai6iGwg9603a0PAg/w0B5UwRbVg7tsqELtg
rPoW7Wws8vOmUn2P9YEpuQuxf4Fl1dehy/Hah2rnndouJ4KxuOVLXkiodHMM
45+YulsEf9G4wMNHptl5lng8lH3zutfnh7KQjZuLvSWFORsfOXy42YdyFqN2
eJlf1g8k+bN7/6y5uVmZCUEtrZefjcXvyQdnvqoWhy1djtV+vR+NPKkWjcWl
vbb0B/sakSoQ/e0b+43F6tff/3/L2fhpVIywaIwCsnXYkP5iffPvIC4tv+Tb
Xrw4If0ge+WGCKtF79L1uoXBDfYtqhtWq4Ww1EuIC5dheGVVTXPb4LEjs1Lm
jGwZ2nMtMoLaacSRWquXP7J9kw61x+oj2mhpr88UGyAbN5GPPvtUDYO2HCoR
nZ+ZCexfXG4W2753PvL6VOpObZRTP9OKanErysbmhhXiX8mJKrmvz8/1Sz8Q
D4WpPxZ9xFTbgmSb08R9uXmnjDyjdvCpb1pxV2QEmpr9IZdJAx+M82XAG3Vv
K/4Homr+zXULpb6j6o+nduTZ7hnKWU5RX1PWwouI9LldeMHuNFKMfv95/Jxt
LEhuDZnmFb5HNm4Wy4nEc4OD9mAsju6urvloNMB/aB+c+ap6vd7+el/AiDtM
1SrN2HJY5j+sdN04m+uwamnCVvDZDdeRcl9Z7ksVuZEfckk8+qvA/zRRPtV4
IbNtJvCvv6unpcZUDpEeq36lz9QROt9ZohijZdyGpcI1kkvi2i68QPZtq8yV
G+opicNo6R3j9tYi8A+ycVOIxWJPb9/uGIx7e3oWF4M8VkxvCzZ0LvCvv8uH
yFyxsYislfapqzQbK6pYRfzDb1y5W+87amO3oD2Ko5UZPcE2DHgBIP6oxX1a
LtOOiIBUdYDUVtpl4vr0b9/d8JtmTam1fh3V9KvWNtgKT3NK0++9F97TmlcM
mlaP9W542Y796cT9wP/CNymysf/NR6PdXV2Owfi5wcHlRMLrE6yj9AdvyZEW
WluwVliCMHa3dT7xbAUT66paN87myidUzXC926mJq6bvpvzGtHia0wo/TTiy
tkF48K4W2Jz7mDU1+bq56hi8bcwY2ax3NtYKKkSmrX4JN19QUdbWRfkFuZl3
2bY99bi19XbK7SEVjAO586UiequQ+D05Wto6GWRIb15xe8nr04QDsrHPXb58
2ag+tRzBa0khHiYKGiY8ePfY5zva+nt/HksG7FFTXFM1TeOl579k9EZTnY31
ldVj1ytNj9WtG6tHTNWNrXTLuFqo5zhq39/GY/4QVKoSVUvCctJEJi2DcW7/
XfCilFHlay70zY3bkA2Hq35VPd8LWrVTK/+PPf8j2OPunkcjGBedYd2q5C+2
al5hbX2ci8f0dvMfsrGfTU1N2ed6qCMSiQRqx4rWGEFOjujvff2ncfnSqhaM
Vb/c4N3Tqqwosqg4jK504kHTmLhR6Rjl6taNTf9ei8fa+Th2paiFeNBU10tc
UzVWDy1IryXYZNqa9LUjaqdS+emuieRqJ/T5F3r/NL1l8VCp9hRlMLq3iSBa
6YXoY/XUwrV4huLGH7s+p689JC4weM9xaidvk5XV7N6TpuKKwpB85Ubw/gSa
GtnYn8SfierV5piNRWYO2t/R+2fVuqJ6+2d/uU+lqX3vfBS8e1rxs1MFBkYT
Y5kYc7P/qq5tqDob67WIWnGF6tsma49disfiQVNdzWNzHwbvOQ4qkitGzfWz
Cm4wVrQEqy8Prn9jTi9pyI3hqP5apx9oAbvKml7Vr1gt8zq2raj4dLS2G+Jk
2FxWmt68It+5ojAkn7kYvAe75kU29qFUKvXd8F9ZeherH9OWzs5rc3MB+wtS
Cyz2ohE5Ljmg97Tpf/tHVSoj3rYduy4e7H408qTablldn7pa142NE/vgLfGs
xLUBK1rg/9x/+86Nf+dBE8YwOH2tTKSpAO9F0pueyQXVQb2yIje7ucZiBq2G
2YWZGqqNWI2PJqqkVjZyzAR/H2WN1P6O7PRVWzbOHYdO1/4TgSvIxn6TTCZ3
DQ+r4GTJxt1dXQs3F4J3/2Puz6A3+Ppv3/l5LFCl1Hbm2XNqQnSxKRtlciUb
S5kVF/fRWGrI0crkL1X6QfbtX4ojHb/XIjFA5H91lWUour1UY+vC3OjAKV+N
DmyFn6Nb5G0le7uN2BaQtZdU9p6U1RfwGtnYV+Lx+M6Bgc22YdDi6O/ri8Vi
Xp9gXegrD+kHi7+49PZPf/n+bxKBT1NqjUU8aMqr/E9/9+Pp6bf/9V9qedB0
a93YXTxiwkz/S2+lXwx9kk5u0EOti7SqrLftB74KxqiGc2837dgxLvfuwVNk
Y/8Q0be3p8eeisUhAnOwe7XpvW4y6cCnYoN+lXMva9b+iqQPszEAt+R29v2g
aEvkcuY+wx/kj2npbrZtT2FLt1w87j6QTtznR+khsrFPLNxc6O7qcgzGu4aH
U6kUUQcl+HPdGIArctsYx4sG4/QDvfdFkPoXBZ2st+k+UJCK88ceVXfk9Tm2
KLKxH8xHo/YCY3UcHBtj8DrKQTYGAinXJ7lkMJadKxhD3IRWVrXWx0NOCZnJ
IJ4hG3tudnbWscBYHCcmJtbUzlagJNaNgUDSZ2poDS6yL70mu8AdOm19K0LU
Jjk5mr/65qL3z1x/rLU+dozHQ0wG8QTZ2FvnZ2aM5gyWYCw+xR0dymdk4y1f
GBfZmFo1oNnJuYF6N4OR3IRop0NrFh28odutwGgvL5/4WONx7ud75YbXp9ly
yMZeEX8RJyYmLHM91P+qJsYEY1Qg/eBsxxdVLzjxi/SDuyuUHQLNbe1DU5uv
odyIPfuhvqDWdsfw3pmLhfvyQvkf/fRVr0+utZCNPSFyywvj444z77q7uuaj
Ua9PEE0is7L4i0uXrpwUkVilYuNom/jnH09P/zyWJCQDTSn9IPPG2ezbv1Rv
ZToqftQygRo+IdeQ37xueio0lHtyNMTgvAYjGzdeKpUaDYfNm++MPNPb07O4
eMfrE0RzMJpC//D1V0UMVsdPLl48PzOjeiaLj8tszCMm0GyMRtDiuW3+ba7f
o/mtcXh9ynCJeB5knQySW0Y+fo4fdGOQjRtMBWPHedABnu6BOpE9TLRlYfNI
BTVrQH0B6wwA0GTmbzkNztPi8aHTvBTYAGTjRlLzoO3b7sRH1HQPkgwAAK3u
9pI2OM+heUVm36R6HcHrUwwysnHDiGAsAnCx6R7is7xWAgAAhHT8nmlwnmnp
uD2U3R1pqcEH//n+r356424jd5uSjRsjHo+LYOzYq200HP7os09b55ccAABs
SA7O69hfGI+H9Lc7xtWUcK/PsY5kRf2Dd89+f1QEpz/5yqvL6cYtlZONG0AE
46e3b3dcMRbBWI7FAQAAsHj4KLttTO9u3R7KLx1r8TjAkxBVKjb6L7UNXWhk
/26ycb3FYrHenh7HYPzC+Dj7iwEAQFH6XOlQvreb0d1axOaHQZv5YknFak8W
2ThIFhfvPLV1q2MwjkQiqgmP1+cIAAD8KKOR8Xh3JL9ubA7J28Zk6UVQrF57
UQSktr5v//D1Vw90PGkMtCIbB8bCzYViwVg8J2KGEQAA2JCIx2ur69m9J60d
j9X/duwX8TgAS23pTHp16Wc/jyVV7+5P77yhgrFMy2TjQBDBuLuryzEYi2dD
1FEAAIAyqREw2UOn9WLjgunSWjyO3/P6HGulL5Ib3j9rtC8gGwfAfDRaLBif
n5nx+uwAAECTycfj/OqxuYXFngDE4wJaNmYvXjCoYOw44OPy5ctenx0AAGhW
cmX1pddMbSuM3m4h2Q956a7XJ+gesnFQiGBszIA2x+MtnZ3X5ua8PjsAANDc
ZDw+fs60aBwyrSQHKB6TjQNBpF+Rgc3ZWMVj8UGRmakxBgAA7njlgmWcdO4Y
CUg8Jhs3PxWMzalYHc9slsHY67MDAADBIVePz1wsnCht1FcEIh6TjZucCMaW
5WL9p9nfu/iLS2vN31kFAAD4Si4eDxWWVQRl9Zhs3MyKrRgTjAEAQH1NXy3s
6ma8bfJ47FI2TiaT52dmKjp2DQ+r73twbKzSf+vmLdC0igXjp7ZuXbi54PXZ
AQCAIJOrxyoet1u25umrx806FsSNbCyu++LiHXtIK30YlQCOJQElju6uLjaX
FSulEDcOwRgAADSIdfW4+eOxS+vGsVis0ohb9UE2LhGMxZMUr88OAAC0kvzq
sUM89vrkKufSuvFyIvHyqVMVHc8NDqrvOxoOV/QPJycnXb4RmkqxUgqCMQAA
8IZzPJa1x+n4vSZbPWYvXlOZj0btfYyNYNziy+kAAMAzb14vXDQO5eLxniaL
x2Tj5qEm3xljoFkxBgAAPiLjsaXpsUrIMh57fXJlIxs3CWPF2JKNn9q6lWAM
AAB8Ib81r3AsSMf+ponHZONmsHBzQQRjezZmxRgAAPiLjMeWpWMtKnfszz58
1ATFFWRj3xPBWGRgIxUb2Zh2bQAAwFcyGtPUvMK33QfWk6t+3x5FNva3X9/8
XVt/7zObO1UjaONQwbgJnnwBAIAWJOOxZaK0toC8Y1zEY18HGLKxj8Visae3
bzcmpBiHiMpv/+u/ZFdWvT5BAACAIl65YK06btfjcXr9sX9Xj8nGfhWPx3t7
eiylFOLY0tk5H42KXyqvTxAAAKAouTh8/Fzh0vGgXl+xO7K2uu7T1WNzNv7G
NNnYJ5YTif6+vqLB2LdPtQAAAMwOnc7XG7ebqiz2nhR5xofx+NM7bxgv2bcN
nVtON+4MycbFJJPJnQMD9mAsjmtzcwRjAADQLGT6FfG4PWRrfTwoPu67bLz2
4dmOLxpbvcRx9HayYd+cbOwolUrtGh52DMazs7Nenx0AAEAFRPqVhaB7T9qa
HmvH8XN+WPT75OPYj6enz35/VNZRFPZA2NLZ+Wd/ua9t4p/FF9R7DZlsbKeC
sbmPsXGcn5nx3XMrAACAMsh4vDtiGwuivX/morcJR6b3B+/+8PVXRdYSAdh+
vP1Pfyfevv7TuN6hrm7Ixhbi12Y0HHYMxlNTU354VgUAAFAdGY93jDtNzRuU
w6Z9Q6Vf460IYKqrRr2DcZZsXEjc5i+MjzuWUpyYmPD67AAAAKqnp8qV1ey2
MdM0EFN7tys3vD5H75GNzUQAtvcxFseRw4e9PjUAAIBa6euuDx9luw/Y4rH2
v/O3vD5Hj5GNDVNTU2oMtCUeHxwbW6v/Aj4AAEBjyCqFxP1s2x7rWBAZj0ey
t5e8PkEvkY2V2dlZlYSNbKzi8Wg4nEqlvD47AAAAty3dlUnYPlG6bU86fs/r
k/MM2ViYj0a3dHaaU7E6dg0PE4wBAEBg3V6S8bg9lJ8MokJyx35Zd9GSyMaL
i3e6u7rswXjnwEAymaSUAgAABNn8LS0Sm0qO1dsd43LXXutp8Wwcj8d7e3rs
wbi/r285kSAYAwCA4Ltyw7Qpz/R2d0T2fGsxrZyNRfoVGdhSYyyOp7ZujcVi
Xp8dAABAo0xfdZiXJwKzDydK11nLZmPzVGhzMO7u6lq4ueD12QEAADSI3tjt
+DmHeXnieOWC1yfYUK2ZjdXwO6NRmzkbz0ejrfb8CAAAQE6d2zep7cuzrR5f
udE66agFs7H44UYiEXuNsTjOz8x4fXYAAAAekE2P1x9nd0cKg3FI35q38J4I
z16fYyO0YDaemppyDMbi463znAgAAMBCBiF9orRlIMiQbPW2dNfrE2yEVsvG
1+bm7JvvxHHk8OEWeTYEAABQjGlk3pCpvkKLxx375aeCrqWy8cLNBcdWxqPh
cHr9MYvGAAAAkj4yL2Tt7dYCTY9bJxsXa2W8c2AglUqxaAwAAKDIBUN9Johp
GohaRt57MtjLiS2SjZPJpMjA9moKZnwAAAA4e/N64TSQXEg+fs7rM6ujVsjG
Rsc2y9Hd1bW4eMfrswMAAPAr2fTYPjIvyF3dAp+Ni3Vs69y8eT4a9frsAAAA
/EsOBdGbHpsrK7R3bi8FsiQ18Nn4/MwMrYwBAACqoDc93jHuUFnRNpJO3A/e
6nGws/F8NOrYse3ExITXpwYAANAEZPp9+MjW1U07to1lV1YDFo8DnI1jsVh3
V5c9G9OxDQAAoDIOXd20ZeS9JwNWWRHUbKwaU9hXjJ8bHEylUgRjAACA8uW7
uplrj1VIDlbbikBm42KNKXp7epYTiYA9uwEAAGiQ6asFi8ZGSL5yw+szc03w
srFqTNG5ebOlmmJLZ+fi4h2CMQAAQBUymuyh06aSY2OD3kj29pLXJ+iO4GXj
2dlZEYMt2Vi8L64gpRQAAAC1WFtd19pWDFknSm8Kyy17zS9g2Xhx8Y4RjM3Z
mMYUAAAA7tDbVgxat+btjsiGb00uSNk4mUz29vTYs7FsTJFJs2gMAABQO5mp
bi9pqdi8NU+Lys2/Ly8w2Vg8T9k1PGwOxiob7xwYEJnZ67MDAAAIlis3HDoe
i6PJ9+UFIxub99+Zj+6urng87vXZAQAABNHxc4XtjnNVFkt3vT6z6gUjG4uT
N/bcmReN56NRSikAAADqQVYX744UDpIelG879q8nm3VeXgCy8eLine6uLnNL
CnVMTk56fWoAAACBJdKvyMAiCecqK0xv955s0n15zZ6Nk8lkf1+fvWPbaDis
d+EDAABAHYigJSdHyH15IwXz8uT7oewrF7w+wWo0dTYWPw6Rge0d29h/BwAA
0DhyX96gw7y8+Vten1nFmjobT01NmYso1BXp7uqKxWJenxoAAECrkK/UHz+n
Lx23m4dK70kn7nt9dpVp3mw8H43aO7ap/XcMhgYAAGgYkY2LzsvbMd5cYyaa
NBsvJxK9PT32xhQnJiaa6MYHAAAIDjkvb6RwIMhQ0w0EacZsLMuMv/4te2OK
XcPDWbWqDwAAgAbSeyDM3yrseJyrsmiewuNmzMYvnzqlqinM8bi3pyeZTFJN
AQAA4KUzF61lFfL9kWYpPG66bGwuMzZn44WbCwRjAAAAD+ld3QoGguTisVZ4
7P+01lzZWJUZ25u2TU1N+f+mBgAACDxZWSELj/c4xONXLvi/9rWJsrHqZmxv
2iY+2KSDVwAAAIJHBuCF9xx6Voj3F97z+XpmE2VjSzdjlY0pMwYAAPAbGY/1
wuPBwmPPenLVz8mtWbLx4uKdLZ2dlsYUqszY/4vzAAAArcZUeFwYj8UHfawp
snEymezv6zOqi414TJkxAACAP8l9eYn7esfjfELWWrpNX/VthGuKbHxwbMy8
804du4aHm2vMCgAAQMuRHY/tLd2Gskt3/Zni/J+Nz8/MWLoZqzLj5UTCnzcp
AAAA8o6fM03Ky1VWbBtbW133YZbzeTaOx+PdXV2Wjm3imI9GfbsUDwAAAEVW
Vqw/zu4YL4zHITVL2odxzs/ZWNySu4aHjepiIxifmJjw4S0JAAAAOxmP4/dk
4XE+HudCsv9mSfs2G4ubcXJy0lJjrMqMU6mU12cHAACASly5oWXjQVPVcUi1
dPNVZYVvs7G5aZtxiI/EYjGvTw0AAAAV0GdJ7z1pauamx+PMvklf1QP4Mxun
UqmdAwOWGmPxv+dnZrw+NQAAAFRjPbmqzZIurDpuD8klZd/wZzaORCL2/Xdy
NrSfnlYAAACgTBmN1tLNXHKs3o7ITsj+4MNsPB+NqqZt5mysmrZ5fWoAAACo
zaHT+gQQfelYe7v3pE+WQP2WjVOpVH9fnzES2sjG1+bmvD41AAAA1Eq2dOvY
b21Y0SYrK/wQj/2WjY8cPmw0bTOy8Qvj416fFwAAAGqlt6S4vWQdBSKPEdnq
zWu+ysbz0aiRh41s3N/Xl0wmvT41AAAAuOf4ucJ4rO3L2x3xvJ+bf7KxCMC9
PT323hQiMHt7YgAAAHCXrKzoPuCwL8/rygr/ZONIJGKf9CE+6PnTBwAAALhI
T3dLd7U8bNqRpyorPO1Z4ZNsrKopLIvG/X19qVSKbAwAABA8MuO9csG2KW/Q
254VfsjG5t4U5my8cHPBD9sVAQAAUA+5yopQ4by8QQ+ngfghG6tqCks2Fh8k
GAMAAARcvrLCOMT/jqwnVz2Jgp5n48XFO/YyY3pTAAAABJ4+LK+gZ0VuDfnQ
aU9OydtsnF5/vHNgQE3BM2djelMAAAC0CKdpINrb20uNXzr2MBuLpwlTU1P2
aoojhw83+EwAAADgCb3rwsJ7tnbHgyIwi9jc4LYMHmbjeDz+jAjFhdUUvT09
VFMAAAC0FBmAD512WDp+5UKDz8TDbDwaDqtFY3M2vjY3R9M2AACAVrOeXM22
jchI3G4UHot4PNTgQdJeZWORge1b8ERapjcFAABAq9GXRq/cyC8a6wl5qMGD
pD3Jxslk8unt2y0rxt1dXfF4vGHnAAAAAN/ZHfG23bEn2TgSidgnfUxNTTXs
BAAAAOBDsoJCK6UoLDyW7Y4bs3rc+GysGhpbsvHOgYH0+mMKKgAAAFrdmYvW
XsciHh8/F8hsLNLvruFhe6Xxws0FtuABAAAgN0jaXFahrR4v3W3Ad29wNp6d
nbWUUojjxaPHCMYAAADIqn15+XbHpre7Iw2oMWhkNk4mk709PTQ0BgAAQAly
kvS+yVyrisF8iUX9N+U1MhufmJiwLxqfn5mp9/cFAABAExHROJ2477Apb1O4
3jvUGpaNY7HYlk7rFLxdw8PsvwMAAIAD66Y8rfD4zMW61uI2LBuPhsOWRWPx
vws3F+r6TQEAANCk5Ka8jv3WquO2IbmkXDeNycbz0ah9PPQL4+P1+44AAABo
evO3TJ3cVDwezB46Xb/CgwZkY5H5+/v6tnR2mrNxd1fXciJBewoAAAA4ymi0
SXmD1k15S3frFI/rnY3FNTo/M6OCsTkbMwUPAAAAG8pNyhssOOrWz63e2Vj1
bVPB2MjG/X19qVSqHt8OAAAAgaEvHR8/Z+rnlls9nr9Vj3hc72ys+rZZsvF8
NEp7CgAAAGxIZuOHj7JtI6bCYy0ed+wXedL1At26ZuN4PK76tpmz8a7hYcqM
AQAAUAHZz23IFI+H5Erym9ebKxu/MD5u7timsvHi4h3XvxEAAAACLNfPzbwj
Txx7siur7sbj+mVjkYEtvSlU3zYWjQEAAFA+PT1euVHY6FgLya9ccPd71S8b
j4bDlil4IiovJxJUGgMAAKBSMiHvGC/clCeHSq8nV12Ml3XKxvPRqH3R+MTE
BIvGAAAAqIKMkXIUiGnRWL1//JyL36VO2XjX8LCloXF3V1cymXTxWwAAAKDl
yFEglnjs5hTpemTj+WjUsmIsjvMzM1RTAAAAoCZLd7WyisKeFYdOu3Xxrmdj
EYB3DgxYCip6e3oY9gEAAIBaZDIZuda696R1R17bkByf5wbXs/G1uTn7hOjz
MzOuXDgAAABanDZFerBwR14oe+i0KyUK7mbj9PrjnQMD5m7GakK0+DgFFQAA
AKiR3tjh0GnTorGekF1ZOnY3G1+bm7NPiJ6dna39kgEAAICsqqyQS8dDhavH
g/aq41gsZt8EV6eju6vL0pBNVRpbJkSLj6TXH9O6DQAAAG6SS8fmHXnWpWOR
Px1H0dUvG1vKJCyLxuoQHyQYAwAAwF2yb5tRbFxk6TgWizVm0diejdcymZ0D
A5ZgrBaNG35TAQAAIMgyGm3peNCyL09kZpVR1fKs3PVWyXHk8GGjKlhcTvn/
cE2dUs61uTlzNYU6Ll++7NlNBgAAgEDTlo43qDrOVCKb24snc+ylSxX9Q8s3
3TU8rDK2ZdGYggoAAAC4ztSwwtLPbSj78FHVEdSVPhXz0ai53IJFYwAAADRA
rmGFuZ/bUPb4uaov0JVsvGt42LIBUPU0ZtEYAAAAdZXZN5ndZBmTN7KeXK0u
iNaejRduLlim4KnqZYIxAAAA6koGzqW7xuTofDyevlrd4Lnas/FoOGzJxr09
PQzCAwAAQIPsPZltDxUWHu+proahxmwci8VUR2UjG4t3zs/MEIwBAADQADIA
315y6HV85UYVibTGbHzk8GHLhOjurq5UKlXFRQEAAABVkPF4x7i1rKL7QBUX
VUs2Xk4kjEVjIxu/fOpUFacBAAAAVG/+VmFZhRaSxQcrVEs2npycNDdtE+88
s7kz8fHH7MIDAABAw4jwKWcxd+wv7FYxlN0dqfSiqs7GqVSqt6fHPAVPXMiL
R49VegIAAACAC6av5rLxkLGGnI7fq2jZtupsPDs7a5kQLY5YLFbhdQAAAADc
sLKabRux9nMrHCG9oeqysYjfOwcGLMF4NBymmgIAAACeOX7OvGisRkivJ1fL
b1hRXTaej0bNu/DUIT5Y1XUAAAAAXJBO3Nfy8KBphPRgdvpq+eu31WXjg2Nj
xhY8dewcGGDRGAAAAN6SI6TbQ/nCY/G2Y39ds/FyImGe9KGO8zMz1V4DAAAA
wAW5OSAh09JxZc3cqsjGRus2Ix4z7wMAAAB+IOPxtrHCbhVDcqh0eSrNxun1
x6p1mzken5iYoKACAAAAvvDm9YLh0VpOlqXIZagoG4sAPB+NmqfgqYPWbQAA
APAL1cytYEzeYPbMxXLWcivNxqPhsDkVi2P0698qvy0GAAAAUD8ZjWxrnJ+R
p449+qdKqigbx+NxSzDu3Lz52tycS1cFAAAAcMPS3YIJIKr2uIwdeRVlY8su
PHH09vSk1x+zbgwAAACf0BeHd4zrzdyM4ooyduSVn42L7cJz5SoAAAAAbpI7
8szzo+WMvOzDR6X/UfnZ2JiFZy6oiMfjdKgAAACA78gdeUOmdWMtHk9fLf2P
ys/GB8fGLB0qdg0Pu3f2AAAAgGtyO/JCBZvydoyXLgYuMxsnk8nuri7LLrzL
ly+zaAwAAACfWnivsKxCe3/pbol/UWY2Pj8zYymoULPwyMYAAADwIRFT5RLx
pnBho+Oh7PFzJf5Vmdl49OvfsnSoeGF8nGAMAAAAX3vlQsGisTg2hUuUVZST
jW9/9D+f2dxpycaLv7i0RjYGAACAj6Xj9wpbVWjx+PZSsXi8YTbOZDI/fP1V
VWBsBOOnt28nGAMAAKAJ6I2Oc4XH4v1Dp4t9bTnrxjsHBiyLxme/P5r6I/M+
AAAA4GuyBnj6amFZhXh/JL3+2PHrN8zGsVjMOif6iWd/ffN3zMIDAABAE3j4
SMvDxnY8LR4XmR+9YTaenJy0zMLbOTBQLGkDAAAA/qH3jtgdMWVj7ShSVlE6
G4tLE0nYko1/+Pqrdb0KAAAAgJvk/OhQYTx2LqsonY1jsZhlFp444vF4/a8A
AAAA4BK9rGKoICE7lVWUzsYvnzplKTZ+bnCw7icPAAAAuKu8sorS2dheUDE1
NVX/UwcAAABcdeVG4YA8ceyxN5cokY3j8bglGFNQAQAAgKYjd+Q5dKsYzN5e
sgx6LpaNxZedn5mhoAIAAAAB8bUjhQPyBrPHz1m+pEQ23jU8bMnGk5OTDTx7
AAAAwD1yCIh5Akgo27Hf8iXFsvFyIrGls9NSU7G4eKeBZw8AAAC4I5PJpOP3
bAPyQuKD5rKKYtl4dnbWko37+/os9RgAAABAM9k2pqdiY1/e9FXzjrxi2fjg
2JiloCISiTT87AEAAAB3yGXe4+dywTi3gLw7suG6cSqV6u7qsmTj+WjUiysB
AAAAuOT2Um7FOJQPySurxucds/HCzQVLMBZRWQRmL64AAAAA4AJZcrz+ONs2
YmrjNqQG5BlLx/ZsLD516cpJczDu3Lx5NBz27noAAAAALtl7snBHnuzkJjOz
xp6Nxafa+r79zOZOczw+PzPj3RUAAAAAXKIPyBvKl1WYOrk5ZOPEfRWMjSYV
4h3G4QEAAKDZybKKxP3conFBJzf1BZZsvJbJ/Hh6uq2/17xu3N/X5+mVAAAA
ANzTfaBwePRQ9soN1cnNvm784tFjxnIx3dsAAAAQNLKTWygfj9tDmX2Tjtk4
k8k8vX27vXubuSUyAAAA0KRkS4r5W/mx0XontxH1WUs2jsfjlmDcuXlzMpn0
9BoAAAAArllPrtpKjgfV8GhLNp6dnTXPiRbHruFhRkUDAAAgUHaM690qjFEg
b17P2taNjxw+bM7G4v0TExNenzoAAADgmtzwaFPJsQjJh06n1x+/ePSYCsMq
G/f39dmLjVk3BgAAQKAUlByryoo9WdNCscjGy4mEpaBCHBQbAwAAIEgymYws
OW4vXDduD6UT9/PrxpcvX5ubswTj5wYHvT53AAAAwE0ZjanLcS4kX7lhrqk4
MTFhycZ0NgYAAEAwHTqdb+Om3h4/Z96Lt2t42JKNr83N0dkYAAAAAXTlRr5J
hXq7Y9zIxvZR0Z2bN8fjcTbiAQAAIGBkxF26a6o31kqO24aOHD6sYvCrf/f3
llHRvT09LBoDAAAgkGQ8bhsx9amQCfm74b/a0inXig+OjYlUrA6VjUfDYa9P
GQAAAKib3ZGCeuO2kMjGxvw7czYWb6empiioAAAAQCDlJoAMmauOX3r+S51P
PKsqKIxsrI75aNTrUwYAAADq5soNS6uKAx1Pqv13lmAsjuVEwuvTBQAAAOol
Hb9XWG8ss7GqN7bE496eHq9PFgAAAKgj03Y8VVmRXzc2x2M24gEAACDwZDbe
MW4qOZbZ2Ny3zTgmJyfZiAcAAICAe+k1c4tjy7qxeSKe1ycKAAAA1Nmb13PB
OFRs3ZiJeAAAAGgJt5dK1BurY0tnZ3r9MdkYAAAAASbi7npyNVdsXLTe+KXn
v7ScJhgDAAAg4LRWFXtKrxt/86+/l86kvT5TAAAAoP70ydHO68ZbOjt/+Pqr
ZGMAAAAEnlw3PnS6RH9jmlQAAACghUxfLVFvLN6PxWJsxAMAAEDgydA7f8vc
w81SbyyycSqVIhsDAACgFaTj90qsG/f29Hh9ggAAAECDpNcfy3pjLR6rbGw+
dg0Pe32CAAAAQAN17DfPxTMXVBw5fNjrkwMAAAAaRNYSf+2IalXR1t9rqTee
mpqigRsAAABayKHTsodbe8hSbyzemZ2d9frkAAAAgAaR68bHz8l1400h+1C8
+WjU6xMEAAAAGujN66re2N7ALR6P08ANAAAALUS2OJY1FVs6Oy2DP5LJpNcn
BwAAADSIXBa+vZRtG0q27bQUVHR3dXl9dgAAAEBDpRP3RTb+7L/utBRU9Pf1
eX1qAAAAQEPJ8R+bQmc7vmjp4Tb69W+tUWwMAEDZxENqMsfrc2liqVRK3Ybi
Ha/PpVmlM2l+Fasmyyra9liycefmzQfHxtiIVyl+FV3BvWLt+FUEPBGPx9Vj
6M6BAR5DqyYSiLgNxXFtbs7rc2lW4ldR3YaUAVRp25jIxioYq1tSHJFIxOvT
aj7LiYS6DZ/evt3rc2li4nePDts1EpFY3Ya9PT08QAMNYwQSkY29Ppcm9sL4
ONm4RuJXUfVYIBtXQT5uatm484lnjUVjhuJVR2Rj42kagaRqKhuLg2xcNZGN
1a8i2RhoJHM25k+vamTj2pGNa5TZN3mg40lzsbG4Mc/PzHh9Xs3HyMasG9eC
bFw7sjHgCdaNXUE2rh3ZuBZycfjQacvAaHGIX0geUivFurEryMa1IxsDnmDd
2BVk49qRjWt1/JzKxgyMrhHrxq4gG9eObAx4gnVjV5CNa0c2rtWZi/ZsvHBz
wevTaj6sG7uCbFw7sjHgCdaNXUE2rh3ZuFbTVy3NjcWNGYvF+LuuFOvGriAb
145sXJ30+mP2IKMWrBu7gmxcO7Jxrd68bq83Freq16fVfFg3dgXZuHZk4yqI
G+r8zMyu4eHLly/TWxvVYd3YFWTj2pGNa3XlhrgB1W1oZGPx2Mr6SaVYN3YF
2bh2ZOPqiDu95wYHxe9ed1eX+D3k5TNUinVjV5CNa0c2rtX8LXNBhVpAZtmk
Cqwbu4JsXDuycRXUDbVwc0GtEqgbcNfw8PmZGe4PUSbWjV1BNq4d2bhW87fU
L6E5HqfXH/N3XSnWjV1BNq4d2bgWx44eNQ9CEo8vahl5cfGO16cGv2Pd2BVk
49qRjWu18J4lGIvbk8fTKrBu7Ir/v727i43rvO99P3IvugEjBc5FG8NqApwm
gPdG3IvYylUKdKM3KbQ3jpoW50QucAp0pxtCNiI7Pi584W6bUAFRUhEG8aYt
S4CA7DjkTEmRipkpYaqUbRilZYuU6kgcWW8kZUnkSNSQEilyKL7N8DzPetas
t1kznJc1s17m+8GAUWRquDgcrvWbZ/7P/082rh/ZuB7i0ROPm3oAjXUD9dFY
RqbkDK5YN/YE2bh+ZON6yF/eomz87ad3rvFLXT3WjT1BNq4f2bge4hETzz2j
rKI4IYsz5N/98Iejo2MkZDiwbuwJsnH9yMb1EOf2h5c+s2Zj8Wdx5ud6WgPW
jT1BNq4f2bhO4sT459/7XnE8Nk6VRv459s474tH2+3gRFKwbe4JsXD+ycT1K
ZWO/jyuUWDf2BNm4fmTj+o2Pj1tjsCMbWwuSxU0EoZdefFE8Y8W/EidVHvOW
xbqxJ8jG9SMb16M4G4tbbNeza9kNvw8tfFg39gTZuH5kY0/8w2uvlVo3dr2p
//rNb3zjhb17//HAgaH33w/dkrI44EOog3H6Er96fh9LiP3nP/1T9esmfpV+
9rOf+X044SMeNPFUVGek//TMM34fTvj89OCRl198yVFsLG7i77lVexNPRfEy
TV0c+XWu2Z9/73vqN1qcFf0+lrASoU79Oounot/HEmLiYRQPYOXZ2LHObCwp
/90Pf3jsnXfGx8eD3wtOHKSj1z03bn7deB568rhVeOLi5ngAORN69WA6Nuxw
q+1h9P0YInDjYfTkMRS3GrLx05aLkfUcq+5NvPQzlpQDuKR/48YN3x95bty4
cfP3VtUJn1uFDyaPJzduEbjVnI0dd2LcVLnFTw8eEdk4gI3gRFYXif1nqIPx
ls2z3/qW38cSYmonrLj93Q9/6PexhJUqCXtaq6nw+1hC6SfH/+krf/WD2K5n
1VMx9n/9qfi/P3/zp34fV/i89coLO5/6ztOFmgrUxjgrihRx7J13/D6cUPrH
AweM2le/jyXEDh06VH82/s9/+qd///d/3/WrX42Pj29pWzyMIOprEEZDqL14
T2u1NPyIayMeNxGJ1bst7MWrGXvx6pHbWD+5uBBLtIlIrGfjl34Q6zsYtAWN
4FvL56fv31ePIXvx6qE2s4jfaBGMt4gQNbHuxeN3uWbGU7GqbCwec7WB6JOR
T0K3Fw91smZjv48lxOhTUT+ycZ1csnGi3e+DCh8R4Wamp9WVlB5u9TACCX0q
akafivqNj487uhmXysbiAvTn3/ueeN6K67i4HqkHnIe9NbFu7Amycf3IxvUQ
v7xkY6/Qw80T9HCrH9m4Tsbsj+KyYetfGiOkycNQWDf2BNm4fmTjepTKxrwP
WwNmf3iCbFw/snGd1Mxo1111qopbPEtHR8f8PkwEDuvGniAb149sXA/xy5uY
XXVm43ib38cVSqwbe4JsXD+ycT3EoyceN9fyiT//3ve6fvWr4Lcphl9YN/YE
2bh+ZON6uGfjRNtaPs8ltVqsG3uCbFw/snE9Xn7xJWv5hPjDf3rmmX947TXV
aAIog3VjT5CN60c2rof45T2WXonFndk4s77B73W1WDf2BNm4fmTjmo2OjjkW
isXVmYViVIh1Y0+QjetHNq7ToelsLNHuqKm4urpOyXG1WDf2BNm4fmTj2hhb
8MTj9g+vvWY0nQAqxLqxJ8jG9SMb10P88u678Uhk46/81Q+s2fjcYsbvQwsf
1o09QTauH9m4NsfeeeeFvXuNhWIeOlSLdWNPkI3rRzau095ri2rdWP1Gy2zc
+8bQ/IzfxxU+rBt7gmxcP7Jxbdbyed4vQz1YN/YE2bh+ZON6iF/e5y4vxBJv
O2oquu9N+X1o4cO6sSfIxvUjG9eABwr1Y93YE2Tj+pGN6xQby4hsbKup6H3j
ePo66yfVYt3YE2Tj+pGNAV+wbuwJsnH9yMZ1UtnYVlMRb9s/ecHv4wof1o09
QTauH9kY8AXrxp4gG9ePbFwPcd2MjczG+t+z1VT0vrHnylm/Dy18WDf2BNm4
fmRjwBesG3uCbFw/snGdYsNpZzaOt+24OOz3cYUP68aeIBvXj2wM+IJ1Y0+Q
jetHNq5TLHk71jfoWDeOnU/6fVzhw7qxJ8jG9SMbA77I5XMbc9m781nmxdRj
SSPOY7SOqZk484sHUD2Sfh9LKMV6b4ps7OhvHBvp4ZJaLZ6KnjDOirkNBtDU
yLhAb+VmxcPo9+EArUL86okbV0+v8EjWiQewNuJFWaxrYsf7n9n24iXaYmdO
+H1oYcVT0Ss8kjUzLtC8uAAAoCpXV9dlNv7ZmK2mQmTjgQ6/Dw0AAABonnw+
f/puNtZ783cSV53ZuOeA30cHAAAANI/Ixoems7GuCXlzZONEW3r1sd8HCAAA
ADTPvhuPYt2T4mbbi6dl49G5BXbxAAAAoEXIwR9jmVh8KtY14czG2thovw8Q
AAAAaB45FK970pmN421qbPQajQIAAADQMuRQvOJs3PsGo/EAoKT8cm763ujc
wtJmzr1RXmZe/Ne781na6AFAuMT6b7nUVMRlTUVspMfvowOAAFm5P/7Lo0f/
v93/586nvqNOmL/7xz8dXdm0fdLatbdeeeHbT+9Un/AXiQmfDhYAULWlzVys
a1JbNy7ei9fO+A8A0InE+9U/EGdII/SKm5qX9OK5OWNxODf7qfo09V/FLfZn
J+b9PXIAQMVGVzZl9za5bjzpXDcW8fjUEb8PEAD8J0c0rl375dGjA5c/H51b
yKbe+5uvft0IwLHXPtY/T8vPKhKr2CzPqC90k40BIBTE2f5YekVfN45P7fgv
/93Rw40WxwCgyDHcG+tqfVh8/KLzr41s/Lt//NOrq+tbudnffP8/aKfQ36SW
Hoz+S/e+vf/P9//bT5Ljc5QcAzV4eOmzX5+eWNrk1wfNI7Lx7ksP1aKx+Fjc
3zgWbxuan8nTqgJ+4KyIwJJZ99JbRmXFH/7+908uLoi0HNv1bOwvjmbWN1SQ
FidPUjFQA1mb9MoLqp5/JkcIQVPJ5sZaMI51Tez4L/9dvQloXTd+/cuLfh8j
Wg5nRYRAduyl3/uqsXT8k+P/JP6vCMnvr/h9YECYqfO/UdVPuT6aT2/g1l1i
3TjR9kzqI9Y90DScFREa+eXffP8/OEqLrZvyAFTFcf7XF+u4CqDpZAO3brPe
uHjdODbSQ00FmoCzIkJEnRXvv/V/f23nTiMbx176DSVAQG2yfS/LX6Ln//bn
b/70b7769diuZ9XlgKsAmmwml5dNKrr1Hm6ue/Fig51kYzSaOCvKzf6cFREe
uXzu8Vindd341Yllvw8KCCXx25RNvZccn1Ml+uI3S10CaIGIJhPPwMTsql5s
XLqmItZzgJUQNBRnRYRUbmbI6OT2h7//fXFGZSUBqEFeY/5/baMr7cHhi303
HukN3MrUVMTbzi1mqKBD43BWRFgVmrap2+5LD3Mb634fExB+liYwXAXQTCKN
WJpUlF43jtOqAs3FWREhkU29Z52Rt+NnY6wbAx7gKgD/yCYV264bJ9p2XBzm
hI/m4ayIUNBG4Bm18erpSstBwANcBeCTXD4X6725/bqxuH34LtkYzcNZEWHw
RedfO9qqfO3/+NH7K1ucLYF6cRWAT0ZXNs0mFWXXjWOnjnC2R/NwVkTwjZ9Q
YXj4lm31uCO1uMbZEqgTVwH4QWTdVyeW9Q4Vlh5uqldn7Ed/Ges5EIub8Ti1
9MDvQ0bL4KyIgNOqKcSp8sVzsrnK6Mv/UZw51TP2+Z4b5kpCfvnSb6fp8wNU
jasAfCI34lmzsbZurFY/vvJX9nXjeNvx9HUWQ9AknBURZPnlX/zXr4vz5I6f
jam/yPa9rFYV5DP2hW4VhkVCVrMM9t14RJ8foDpcBeAT20Y8ceu9+f3/9hP1
VPzmL14XN33puPcN8fGp8Q84vaNJOCsiUJazc3NzxvLvF51/Hdv1bOzP3lbb
7mRT7pkhEZVVPFYlx8LjsU4m5SEK8suj/9J97J13/nfdxJ0kx+cq+qJcBeAH
fSOepaAi1jVhZOM/+effyGwsUnGine14aDbOigiM3O1+Nd3jD3//+y+dvCaC
scjAsef/dnRuQb2VJhcNtBIL40n7fM8NEYxlftY+jWyMcMuOGQNu6ryJ3529
1xYrWmfjKgA/nL6b1ZpUTBgFFeL/7v/xj9Xbgj85/k9mKla3voPUVKBJOCsi
MFQYtl7fdz71nY7UonWtQFzrR1/+j+rkady+/fTOF89VtkQGBJV8nmfHXvq9
r/7Jd7+76/nn67yJ351XJ5Yrmo/DVQB+sE3EU+vGw+mXXnxRNSPq+tWvbIvG
2o3peGgSzooIBjnNvO9lR+gVibf4TKgqKKy353tu+HLMgOfEE96Tq38V98NV
AE1nm4hnxOOxzMsvvqQG9cbj8diZE7Z140Tb/skLfh84WgNnRQSDXDRbu/aL
//r1nU99R5VVdKQWi1e95Kfll7/o/Gv1pBWf9ualf2N4NFA7rgLwQyx527Zu
HJ86NJ3d/+Mfq6divLs7dj7paOMm/oaSYzQDZ0UEg9xnp1a6crMbc9mlzVyp
c6D8NBGG88u56Xvi0wjGQF24CqDp0quPbSvGWk3F1dV1tW4ss3E8fvhOymhS
oWfjwU6yMZqBsyKCRMXjSs5+FX4agG1wFUBziVP3oemsbSKeuCVvi7O6qjdW
2VhEZdXZ2BqPRaim5BgNx1kRAFoZVwE0nSw2ti8ax0ZmRWY2snHXr34lm7wN
dMiyCssEkMN3Un4fO1oAZ0UAaGVcBdB0stjYPhFPtlXJ56w1FfLTRnqKS479
Pna0AM6KANDKuAqguWZyeWdBRdfk6Mqmdd043t0tPnP/5AVHq4rYYKffh48W
wFkRAFoZVwE0UaHY2N69rf+W2j/iyMappQfObNz7BiXHaDjOigDQyqxXgb84
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
QHWEqmIkrr8X4PtFEOEiT1mZebO6VSRALf6J53Mk34PQW2cY+9S2W9ctvHDQ
59PZbtpLCZdzfiHiqk8TL8krOTBjPLexzGtbf7Z0YL702+nfSVwtdbf6D1T9
q2A0cEvMrsrnlWsdRXzK9SUGIoNsHG2qAtY2O8++dCxvQ0flTI2694k0iC3O
aeOJ5XpjzwFHr+MokeHfaCtX7dQPY6yG2y45W1s8cefaonSFd6vvniv039Ar
orUvZC2KUM3Ztrlb68g/GrihNsYyY2GAsohnEX6RpWdO9f1a2ta5yBRW1JO3
O1KL4gQi+9oZLe+0O3Gds2kOFildzyyuFOnVx9bEq32hObVlQF9/NiZ6F5pp
aD3xJtRhl4qU+ugQFY/9LjYW0bdko7bemyI2E4yjjWzcOvZcOWvOWXM0K+s7
2H1vyu8DLM26jqq+hU+vR/idLEvZQ5ujbV15ev2JeojER7daBbNGJeG+tlz4
vGXbFVDdbaGVtP6CxbJHUr8Cakv65Sfl6SP/3HI1UCG149jculUYoBzVxKIv
zxa+2TLFxkY3NuNz5J4M8XCpemw1WcMt+tpibanteGoiodYlb/elh8nxOfVn
244Da8MKcbSfyjeSZCzXPq3Uedtcfy60bvbrZc42BcbaaI8IX32gkI1bigjA
sVNHiprxtqvMKcKz3wdYgloLNd6FT7xd5+jVIFszWjon9PrqKjZ628cIlsq9
+qcV2uIVXwHN3JtoF88KfWNg/3u2K6B9LIv4Wqkv3lML+2WugFuOBm69b0R1
5xSawDoqotJ3QMJJJFs9cGqLuoemS36zqvTCPTxbR4e4LQubAbXbZfRGoVGG
tUJjQh2M9VfYjPFq6Vi12tP2SJb7DlVFR6Ha2a9OI9sUGDPao2WQjVuH+o1O
LT3Qyo/tzSvitvLjAGYVywDl7d6vDzuVOfXs2l7mIuj+D60veUpl44317sT/
LHwJly4TejMK7QD05WXtSGxXQFVyrF6w9GoHrK1Xb591zaKOettTo8WZpa1n
FtXqqN9H1DDWAhItOpb6ZmV8dduQ6FxpL5GNrVXNxQHbrOvo1qOj69lYnypo
RErtrsqfFsyv6+ks7KroHYyNYGxfN37u8kKUn2CwIxu3IL382Lp0bC0/Huw8
t5jx+xhtxBnJqG7d8f5n+dLv10eBsU+tyuiov3z49Lpe/1C2/4Ne0pzQB1I7
VodkUYd9tKK4ArrsbTdGChZ2em472zqvBhEWum1XtSoOWMnJ46rY1dMJcQGU
N2ZYd5feSWf55FJFSoUmaXr+dP1V1RtNqH189rIK+fmqXqIQ0V0b1KgQbtZv
JGb23Xi07XqLWTFinXLYLOKYRfS1la9b1417b4rYzJmqpZCNW40RLGX5ccKy
aGzkZNkCQnY/Ds7qsbwIirwnS3C9mxAXSHljhnWhKUeFJ2RZwavVA8t9N9pu
uG2ysSpsUFXN9rKKNW2/ntlTOvG2vAIWbdWUB5ZfLvRhlvH4xXNzlTxnCqvN
7Swaoy6Futa/nI74xii5R0C9CtDWYGufIK8Wn7u3a3NhNKzolg2KjSVcde0Q
v+Mie69lN7bdJqB27VW0nq+XMcs4av2KzaFNkp11CcZdeoFxhOvYUQrZuDWJ
85U4/4gALNORtX+FZZverssfB2WTlLV7WGASeyPoG+UKDesqvQiuXVPLvKp3
h7yHQg1wuX+l12C0qwbF1iugfGtVXAGXltQVsMz2GZmZtV176p9sf6iqQ4X2
HGv+RRBRMnD5c1k9++lytM8JW459alVO5XDeiVauXL7Jj9lOTXyypQmb9RM8
zIrmanb3ZPN/muLB1FtAu/Zq0wqMI/8EQzGycYuT5ceDnbbxedbbSI+IPf4e
odlXoeJF1PAyK4G1qX+VXATFP9E3Kn4yrR6fStaN9QBsbMrrf6/mK2AVPxTr
OLxPprnioGa5G3ciPB7ayVpsXLagohTxu5Ycn1M93Crpfim+hFFa3OjqX7Nx
XPWDquv06sSyrB4p0cF496WHW1Wd3xAhZONW5tL92BqM1f8d6Bian/HxIPVK
477BlrgIqhXgeFvlrwX0hm99g6q72lbl68bWuSo9Bxpd+mvtL7fj/c8iO7cF
TaCmfkS9zFiRL2NV41/tjf7tx+EVmZub01tAqObG/be2rZ5VbwMZbUBqr+LY
jvmtaS9zmvZ6WaT92FimZKM2Ohi3PLIxzPLjQk9d5za9ngP7Jy/4cqIoLGxG
vMzYYBYbaxPrtn/Ms2Oqm4R1vF0l68aKuECsWUZyN7RkxfzWqp1mgtamnqXm
/1/OGq3DIlaTI37f9dXd5JyIr8Zfmi3RqpmIoVcpyzxs6aWm5npUUNar3lqq
sAyjRkaZsRaMm/bT3KZRm9bBmGDc4sjGMMjuxwMdRUvHhf4V55ONbu3ovAiq
2cda97CIXQT13YVaC7WTiwt6i37VFa0w8mP7i2Ch29sTqfvWv6583XhLXQHN
r9suroCN+BGbDZO19X+uO6iI2m2njXhTb3CLYKw69EZyzrg+PE6t7hoxODer
NyWucoyySto/+CAtHjr5z9WkPMtQ5opKtuzx2MPXzmbTtpHZmVzzWg/JSdCl
G7XFxjJB2WUDX5GNYSVfUA8ddU6Xjhd6WQwdTS09aMhJzGyMIIdNyDPw2rVv
/uJ1NRsighdBbX6cmkhoxmBzknJFY5TVem9xiq583VhRHSdkPJaH1O7alaIe
RjAWhzojd61z6UFFrD1vCyUBk2rim9+H1hB6NpY3mV1VYjQ6Eldb2KDqIvQN
s1vyZYW8KyMhV1xIbHbJ8K72WN6h9k09d3mhaScE8YX0Rm0lCoz33XjUnCNB
8JGNYVDNdmQh1vmkuVzsCMlaezfPw2rudr/RCkze5PJ1u+p/G8koZekM3KaX
Chuz/yprT1EoUSgxuaPidWNFvX8qB9upn8LFSa9eAcn71J5I8iLoaeRGtJlN
fe3vfYsnkt+H1hB6dwhjrIa2bmx0/a0zQxrNZ8yxd1qFRoXZWP0s5PK1W9uK
aumH0X9LnLuatu6RXn0sDl5/aeBWRzE617yUjuAjG6OYOBO+/uVFuYpo3aBn
6fO24+Kwh+c0s6lv3LYNsJlLCs0kL4KyTlivK97x/mdr2Y1Co+D2ijKkpald
8X80142r6QWhLzHNfvrNX7xeUUVHJfep2m58+O7pu1GrikEzGP141a3/VlVF
BWGkr9CqicxqtTwx42VRmdG7WLtnYwPvNv9IWzNRnY3rPwS1lL3WxBFO4vwj
C4xLrRgPp3k/Cw5kY5QiXkfL9VujvsJYSVa3MyfktmIvVgLlGVIvLS7c+t+L
8EVQrcMYC6r6wGVjLvN2D2mhPFjWKouf0bn0pOOmD9dQXeC0TxAfK+kLYXY2
9q7irskXQUSGvly5sZ4cn+tILYrncKu8vFrOqm9Z3Tzf5eFjzzRf7L22WLIf
RWESNCcoOJCN4UqdLrSBQT22FV3rNr1TR7rvTXn15bZyswOXP3/z0r+J1/iR
f/NdpVD1LXd9Ft8/eUH8ocI1nEKXYOtLlXb9Y+8b5kd9FLj+OX90O5olmmgR
LbWsp58fGnTPRhV3xevGISWvX59MuxdR0KgNZZGNUYbZ3q14OEihCPmZ1Eee
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
qek=
    "], {{0, 946}, {948, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{948, 946},
  PlotRange->{{0, 948}, {0, 946}}]], "Output",ExpressionUUID->"869911c6-c4ed-\
4a51-819c-99ca09fad1fc"],

Cell[TextData[{
 StyleBox["45\[Dash]50. Properties of logarithms  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "x"}], "=", "0.36"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"bd15e52e-ff53-40ff-9f14-c8ee85ebae1c"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "y"}], "=", "0.56"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"ce886067-74b3-4623-b17c-566b4ebd0714"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "z"}], "=", "0.83"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"23cd23af-0e58-424f-9c8d-36a685e485ec"],
 ". Evaluate the following expressions."
}], "ExerciseDirectionsCell",ExpressionUUID->"d7a4d03b-c187-4f06-8930-\
6ae5675d1f1a"],

Cell[TextData[{
 StyleBox["45.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    FractionBox["x", "y"]}], TraditionalForm]],ExpressionUUID->
  "a276bed5-8dc1-4781-b485-ef62fe61f7ba"]
}], "Problem",ExpressionUUID->"07381dfb-d50e-4ffd-9d07-de2d8823b8b4"],

Cell[TextData[{
 StyleBox["46.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "60b9c252-a73a-462d-81ea-8e87867ee021"]
}], "Problem",ExpressionUUID->"716557a3-5cc3-4cca-b349-0db235723e0b"],

Cell[TextData[{
 StyleBox["47.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], "x", " ", "z"}], TraditionalForm]],
  ExpressionUUID->"3e00bf27-cd69-4f02-bc25-02f20596f5f0"]
}], "Problem",ExpressionUUID->"eb386261-013e-411c-a710-79defccca79a"],

Cell[TextData[{
 StyleBox["48.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    FractionBox[
     SqrtBox[
      RowBox[{"x", " ", "y"}]], "z"]}], TraditionalForm]],ExpressionUUID->
  "3b97045c-6b5a-4e8b-b5f6-c8160587e694"]
}], "Problem",ExpressionUUID->"73844fe8-4086-4a1b-9041-97ef59a9ff6f"],

Cell[TextData[{
 StyleBox["49.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    FractionBox[
     SqrtBox["x"], 
     RadicalBox["z", "3"]]}], TraditionalForm]],ExpressionUUID->
  "f788de4b-d010-44a5-aac0-49d554f53cfa"]
}], "Problem",ExpressionUUID->"85f1ec4c-c973-4fda-a3df-be670cae33d1"],

Cell[TextData[{
 StyleBox["50.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    FractionBox[
     RowBox[{
      SuperscriptBox["b", "2"], 
      SuperscriptBox["x", 
       RowBox[{"5", "/", "2"}]]}], 
     SqrtBox["y"]]}], TraditionalForm]],ExpressionUUID->
  "37ca7c89-4746-4cfa-a859-6dfc0fee543f"]
}], "Problem",ExpressionUUID->"a373b48a-2f57-4b44-ad20-341be33c0981"],

Cell[TextData[{
 StyleBox["51\[Dash]60. Solving equations  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Solve the following equations."
}], "ExerciseDirectionsCell",ExpressionUUID->"7fb5135f-c5b9-42fb-a172-\
ed24dafe8fae"],

Cell[TextData[{
 StyleBox["51.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "10"], "x"}], "=", "3"}], TraditionalForm]],
  ExpressionUUID->"73174545-5ab3-4079-b839-d0fd5466c2c2"]
}], "Problem",ExpressionUUID->"acef02f9-05b7-497f-ba30-60ded9b39d37"],

Cell[TextData[{
 StyleBox["52.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "5"], "x"}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "f9097971-e445-4647-bf66-ccf6d878fe6b"]
}], "Problem",ExpressionUUID->"00b49d18-c891-46e7-ab57-67c8b84b6f4f"],

Cell[TextData[{
 StyleBox["53.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "8"], "x"}], "=", 
    FractionBox["1", "3"]}], TraditionalForm]],ExpressionUUID->
  "10ca63df-c11c-4e91-8219-b0e4cc19ee74"]
}], "Problem",ExpressionUUID->"7e96917e-8f75-4fb9-b7af-49b94bea10b3"],

Cell[TextData[{
 StyleBox["54.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "125"}], "=", "3"}], TraditionalForm]],
  ExpressionUUID->"b99212b9-b9b5-43e8-a587-88aa837a21c4"]
}], "Problem",ExpressionUUID->"c2872cf0-4ba7-4f32-a829-af2faa182f9e"],

Cell[TextData[{
 StyleBox["55.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "x"}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "46f20a00-bd63-4e25-9cd8-664b9cd72ed3"]
}], "Problem",ExpressionUUID->"27b94b76-2766-4a73-9210-30cdca7c1eb7"],

Cell[TextData[{
 StyleBox["56.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", "y"}], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "cfa45f08-c203-41e5-b1ed-5be675825d45"]
}], "Problem",ExpressionUUID->"a2a0c76b-6337-4217-abea-1caca4fa51c2"],

Cell[TextData[{
 StyleBox["57.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["7", "x"], "=", "21"}], TraditionalForm]],ExpressionUUID->
  "8ba0a537-1c48-4bf8-834b-c1d55a304ae5"]
}], "Problem",ExpressionUUID->"facb36f4-e48f-42a3-97ce-24050d7aa71b"],

Cell[TextData[{
 StyleBox["58.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "x"], "=", "55"}], TraditionalForm]],ExpressionUUID->
  "40934c09-c2b9-4004-861a-8c9724dc5cc9"]
}], "Problem",ExpressionUUID->"be98b2de-d96f-4a2d-8893-771e9dc73abe"],

Cell[TextData[{
 StyleBox["59.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{
      RowBox[{"3", "x"}], "-", "4"}]], "=", "15"}], TraditionalForm]],
  ExpressionUUID->"6f12e5b2-80f9-4c00-9687-2bcf9762c2b4"]
}], "Problem",ExpressionUUID->"63abab37-a74c-46f4-9267-df651f82b1be"],

Cell[TextData[{
 StyleBox["60.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["5", 
     RowBox[{"3", "x"}]], "=", "29"}], TraditionalForm]],ExpressionUUID->
  "83b12c27-61ea-4cdf-9844-25b61dfe842d"]
}], "Problem",ExpressionUUID->"5a10f04b-e128-48da-a860-67315e6aa4a9"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "7ba94399-5ca4-4476-9f03-1fe7c5b4f2ee"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "8a9bc957-7d54-41aa-ad5a-b1dba15ae644"],
 StyleBox["61.\tUsing inverse relations  ",
  FontWeight->"Bold"],
 "One hundred grams of a particular radioactive substance decays according to \
the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "(", "t", ")"}], "=", 
    RowBox[{"100", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "650"}]]}]}], TraditionalForm]],
  ExpressionUUID->"e8a11eb3-d5e5-4176-a892-4390e8dc8783"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "956ac7cf-ff45-4d9d-9802-f5a2907e294d"],
 " measures time in years. When does the mass reach a level of 50 grams?"
}], "TProblem",ExpressionUUID->"cfb11d86-04bd-49da-b7c1-81824b303739"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "1741e38f-2b89-423b-b4b7-489b8115dda4"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "8f285504-2a02-4c48-bec8-b331520ef3b2"],
 StyleBox["62.\tMass of juvenile desert tortoises  ",
  FontWeight->"Bold"],
 "In a study conducted at the University of Mew Mexico, it was found that the \
mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "0840d17f-13b4-4b5d-99d5-7766d0b97bcd"],
 " (in grams) of juvenile desert tortoises ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "9486f0f8-111c-4e54-a4a6-08aa4eb78905"],
 " days after a switch to a particular diet is accurately described by the \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "(", "t", ")"}], "=", 
    RowBox[{
     SubscriptBox["m", "0"], 
     SuperscriptBox["e", 
      RowBox[{"0.004", "t"}]]}]}], TraditionalForm]],ExpressionUUID->
  "cb8ea4f0-d011-4d6c-a86d-c8af12fc5985"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "0"], TraditionalForm]],ExpressionUUID->
  "b868bca2-f0ab-4303-b09c-bfdd58e1f2a7"],
 " is the mass of the tortoise at the time of the diet switch. According to \
this function, how long does it take a juvenile desert tortoise to reach a \
mass of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"150", 
    StyleBox["g",
     FontSlant->Plain]}], TraditionalForm]],ExpressionUUID->
  "581f83b9-2ace-4a2a-80e0-3b698f236367"],
 " if it had a mass of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"64", 
    StyleBox["g",
     FontSlant->Plain]}], TraditionalForm]],ExpressionUUID->
  "af7efff2-9a36-4f96-9212-a28033e9fe26"],
 " when its diet was switched? (",
 StyleBox["Source:",
  FontSlant->"Italic"],
 " ",
 StyleBox["Physiological and Biochemical Zoology",
  FontSlant->"Italic"],
 ", 85, 1, 2012)"
}], "TProblem",ExpressionUUID->"44a28339-c9d9-4372-83a1-ab28be717e74"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "be18bf25-c224-49f6-b2fb-48315ad4baa8"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "515e2a95-1091-4bfa-9402-fdca7e9b85da"],
 StyleBox["63\[Dash]64. Investment Problems",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  An investment of P dollars is deposited in a savings account that is \
compounded monthly with an annual interest rate of r, where r is expressed as \
a decimal. The amount of money A in the account after t years is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"P", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"r", "/", "12"}]}], ")"}], 
      RowBox[{"12", "t"}]]}]}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"c84d8a95-6833-44e0-9dc5-d831cf9ac632"],
 ". Use this equation to complete the following exercises."
}], "TExerciseDirectionsCell",ExpressionUUID->"91bb04b5-ba65-4856-897d-\
31f6feb6c03e"],

Cell[TextData[{
 StyleBox["63.",
  FontWeight->"Bold"],
 "\tDetermine the time it takes an investment of ",
 Cell[BoxData[
  FormBox["$1000", TraditionalForm]],ExpressionUUID->
  "e9682ad2-f255-4298-a76b-36ef71481ce8"],
 " to increase to $1100 dollars if it is placed in an account that is \
compounded monthly with an annual interest rate of 1% (",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "0.01"}], TraditionalForm]],ExpressionUUID->
  "10238c78-3486-45fa-b2bb-935b7cfaed16"],
 ")."
}], "Problem",ExpressionUUID->"8e29b2a3-ca54-4e25-ad5f-d155acc7ca71"],

Cell[TextData[{
 StyleBox["64.",
  FontWeight->"Bold"],
 "\tDetermine the time it takes an investment of $",
 Cell[BoxData[
  FormBox["20000", TraditionalForm]],ExpressionUUID->
  "fd26f415-e885-42ac-8b34-fe92c1168496"],
 " to increase to $",
 Cell[BoxData[
  FormBox["22000", TraditionalForm]],ExpressionUUID->
  "61b4774c-2692-4434-b55c-bb98b3a7419c"],
 " if it is placed in an account that is compounded monthly with an annual \
interest rate of 2.5%."
}], "Problem",ExpressionUUID->"2b8bcdc1-6f5b-4f82-83e0-96e19af80b66"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "abc4998d-ea1c-4004-88d0-3cb1518a7eca"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "b04c497b-e592-41dd-9bcb-8577f3683e64"],
 StyleBox["65.",
  FontWeight->"Bold"],
 StyleBox["\tHeight and time",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The height in feet of a baseball hit straight up from the ground with an \
initial velocity of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"64", " ", 
    RowBox[{"ft", "/", 
     StyleBox["s",
      FontSlant->"Plain"]}]}], TraditionalForm]],ExpressionUUID->
  "d51c1164-12e7-4c8b-b0a4-d7706a515d5f"],
 " is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{
      RowBox[{"f", "(", "t", ")"}], "=", 
      RowBox[{
       RowBox[{"64", "t"}], "-", 
       RowBox[{"16", 
        SuperscriptBox["t", "2"]}]}]}]}], ","}], TraditionalForm]],
  ExpressionUUID->"afa65de3-3aed-444f-bfdb-ef196a40e076"],
 " where ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "c01263a3-9f4d-408f-b62f-b3d6253e5433"],
 " is measured in seconds after the hit."
}], "TProblem",ExpressionUUID->"90eb57ca-7a7d-4ee3-90ce-e83be92140c8"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Is this function one-to-one on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "4"}], TraditionalForm]],
  ExpressionUUID->"0a2ea456-116b-4bce-8192-3dbf34d01b55"],
 "?"
}], "SubProblem",ExpressionUUID->"dd713de0-bf56-472d-9c54-36162e26c0b5"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Find the inverse function that gives the time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "fa3563dc-5679-4790-a4ae-c3e26d62dbd6"],
 " at which the ball is at height ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "d939911b-56fa-4fff-94e0-181bd0c66ada"],
 " as the ball travels ",
 StyleBox["upward. ",
  FontSlant->"Italic"],
 "Express your answer in the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "h", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"2ed6ddb5-326d-4754-8344-12a7d96bdaa4"]
}], "SubProblem",ExpressionUUID->"bed8d0e0-a729-4b64-aa04-edc7fa05e0d1"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "Find the inverse function that gives the time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "e11815c8-61f2-446d-b3cd-1024a7493499"],
 " at which the ball is at height ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "d36d8a4b-04ec-46fd-b9de-fa672d003720"],
 " as the ball travels ",
 StyleBox["downward. ",
  FontSlant->"Italic"],
 "Express your answer in the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"-", "1"}]], "(", "h", ")"}], "."}]}], TraditionalForm]],
  ExpressionUUID->"1d352a46-8236-4897-b555-ade8f1804323"]
}], "SubProblem",ExpressionUUID->"229e54b3-a936-4a0a-90b4-2365060597d2"],

Cell[TextData[{
 StyleBox["d.\t",
  FontWeight->"Bold"],
 "At what time is the ball at a height of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"30", "ft"}], TraditionalForm]],ExpressionUUID->
  "aa38388d-b572-4ffe-b272-7f892ec4b12c"],
 " on the way up?"
}], "SubProblem",ExpressionUUID->"579fa841-34f8-4081-ad5a-3c2e068b18a1"],

Cell[TextData[{
 StyleBox["e.\t",
  FontWeight->"Bold"],
 "At what time is the ball at a height of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"10", "ft"}], TraditionalForm]],ExpressionUUID->
  "1812de91-5cd3-46d9-b7a1-962494e49387"],
 " on the way down?"
}], "SubProblem",ExpressionUUID->"447fad1a-88b9-4b32-9786-c7a0fc28e6db"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "a101448a-2853-4245-9ef4-00c19fa2594c"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "0d7bbca3-3f45-4ab2-8659-bb4ac5d03495"],
 StyleBox["66.",
  FontWeight->"Bold"],
 StyleBox["\tVelocity of a skydiver",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The velocity of a skydiver (in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["m",
     FontSlant->Plain], "/", 
    StyleBox["s",
     FontSlant->Plain]}], TraditionalForm]],ExpressionUUID->
  "bd4c9efa-b9f1-4ecb-8bee-8631a29f9d2a"],
 ") ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "5e8bb2e7-bc37-4b78-be6f-7f0d3ea156e2"],
 " seconds after jumping from the plane is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"v", "(", "t", ")"}], "=", 
    RowBox[{"600", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "k"}], " ", 
          RowBox[{"t", "/", "60"}]}]]}], ")"}], "/", "k"}]}]}], 
   TraditionalForm]],ExpressionUUID->"c97213c0-c9db-4946-867a-e8cf94be4018"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "8b9a73b7-4818-4bd6-93f7-1c0f455dbbc8"],
 " is a constant. The ",
 StyleBox["terminal velocity ",
  FontSlant->"Italic"],
 "of the skydiver is the value that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "3200f80d-08f5-40b0-ac22-0662b50c0521"],
 " approaches as ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "e7403d71-00f2-432f-9f56-8a79c3c6b2b2"],
 " becomes large. Graph ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "ab3fc93d-d639-48a2-85e8-9e69318eaea3"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "11"}], TraditionalForm]],ExpressionUUID->
  "f62b6dbf-582b-4afe-b65f-5be306720aea"],
 " and estimate the terminal velocity."
}], "TProblem",ExpressionUUID->"fa394d48-8858-4a03-8aa6-1a68c621323e"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "b3a30c94-e1c8-4983-95b4-b5df3f6aea6a"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "10735afb-00a7-4245-a97b-5afcf64593f2"],
 StyleBox["67\[Dash]70. Calculator base change  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Write the following logarithms in terms of the natural logarithm. Then use \
a calculator to find the value of the logarithm, rounding your result to four \
decimal places."
}], "TExerciseDirectionsCell",ExpressionUUID->"68605431-e5f8-43ad-bf3c-\
c59e63c69a24"],

Cell[TextData[{
 StyleBox["67.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], "15"}], TraditionalForm]],ExpressionUUID->
  "77342082-b975-419c-bd0b-77e5998b0956"]
}], "Problem",ExpressionUUID->"0dcd945e-29fe-41c6-8d68-89c21b86184f"],

Cell[TextData[{
 StyleBox["68.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "3"], "30"}], TraditionalForm]],ExpressionUUID->
  "679b13b8-8001-40ab-8efb-747f5499fcf7"]
}], "Problem",ExpressionUUID->"99d8381a-de37-4189-96c3-8ac25c58ec07"],

Cell[TextData[{
 StyleBox["69.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "4"], "40"}], TraditionalForm]],ExpressionUUID->
  "f39aac8f-85d6-4a7a-af4c-7ab14b000b61"]
}], "Problem",ExpressionUUID->"ad4e2f88-20c3-48e4-98cf-72832ce85f25"],

Cell[TextData[{
 StyleBox["70.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "6"], "60"}], TraditionalForm]],ExpressionUUID->
  "a97e7e5a-c5c6-4ca7-8227-f7e35ded96f4"]
}], "Problem",ExpressionUUID->"04e5d64c-ca24-43e4-83fa-cea683e5e62d"],

Cell[TextData[{
 StyleBox["71\[Dash]76. Changing bases  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Convert the following expressions to the indicated base."
}], "ExerciseDirectionsCell",ExpressionUUID->"bda4047b-0816-4450-809d-\
4fee0bd09476"],

Cell[TextData[{
 StyleBox["71.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "x"], TraditionalForm]],ExpressionUUID->
  "1c788350-be8a-499a-ae16-bd5c3239e8d9"],
 " using base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "2251696b-2f95-48c9-bace-0d9d3e122dff"]
}], "Problem",ExpressionUUID->"06ab72b9-3703-47f4-b93a-1f4e9b7116ac"],

Cell[TextData[{
 StyleBox["72.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{"sin", " ", "x"}]], " ", "using", " ", "base", " ", "e", Cell[
    "",ExpressionUUID->"1bb734e5-f86f-4d0c-a058-4fb059793afe"]}], 
   TraditionalForm]],ExpressionUUID->"66f10d12-7f50-4f86-8e23-a7e6f79b2c1c"]
}], "Problem",ExpressionUUID->"8ec6cab3-ecf0-43b8-a260-4d99ad0c9c8a"],

Cell[TextData[{
 StyleBox["73.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"ln", " ", 
    RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]}], 
   TraditionalForm]],ExpressionUUID->"8668874f-c42a-4240-883d-6d5e152cbfc3"],
 " using base 5"
}], "Problem",ExpressionUUID->"635b1c93-6499-4ada-abcb-cfdf36ec1b06"],

Cell[TextData[{
 StyleBox["74.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "1"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"fda4674c-d067-4d71-be66-3fb6e562d3fb"],
 " using base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "ef36f760-7a7d-4d54-8307-26bf18be5275"]
}], "Problem",ExpressionUUID->"b4f3b217-8b00-471f-9ac7-6ccb4f740270"],

Cell[TextData[{
 StyleBox["75.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{
     RowBox[{"1", "/", "ln"}], " ", "a"}]], TraditionalForm]],ExpressionUUID->
  "95300f77-5178-4b46-9534-110d845127cb"],
 " using base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "e7fe24e2-6726-4efe-ae19-88d40189c712"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "6815228e-58f7-44b1-b92f-24714c2b07f6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "ad91a010-1026-4f78-a0e0-69ad57d883be"]
}], "Problem",ExpressionUUID->"6933d856-6424-49dc-b815-a03a22592d39"],

Cell[TextData[{
 StyleBox["76.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{
     RowBox[{"1", "/", 
      SubscriptBox["log", "10"]}], " ", "a"}]], TraditionalForm]],
  ExpressionUUID->"fd216a79-5f67-4d4b-a0ed-bd9bba518699"],
 " using base ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],ExpressionUUID->
  "e7e58c54-cc46-4897-90dc-4f2576f0700a"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "7b3a1485-12d6-4061-85c8-97419151e0f1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "95982082-758a-4225-8a6a-288a2090390f"],
 " "
}], "Problem",ExpressionUUID->"fe1f7975-3c57-4fff-b3a2-cc6d1005f341"],

Cell[TextData[{
 StyleBox["77.",
  FontWeight->"Bold"],
 StyleBox["\tExplain why or why not",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Determine whether the following statements are true and give an explanation \
or counterexample."
}], "Problem",ExpressionUUID->"f9378353-f718-4a99-b384-f7a4531b3f85"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     SuperscriptBox["3", "x"]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "x"}], "=", 
     RadicalBox["y", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "ca72ebe3-9182-4576-aa84-be0d3629e3b5"],
 "."
}], "SubProblem",ExpressionUUID->"bed6d6b2-05bb-42fc-8164-81446d2dac62"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["log", "b"], "x"}], 
     RowBox[{
      SubscriptBox["log", "b"], "y"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], "x"}], "-", 
     RowBox[{
      SubscriptBox["log", "b"], "y"}]}]}], TraditionalForm]],ExpressionUUID->
  "dc059e5c-87ea-4c4a-92c9-1a607f573fe9"]
}], "SubProblem",ExpressionUUID->"e7badbe0-89d0-4e2e-9685-04cdda5f8397"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "5"], 
     SuperscriptBox["4", "6"]}], "=", 
    RowBox[{"4", 
     SubscriptBox["log", "5"], "6"}]}], TraditionalForm]],ExpressionUUID->
  "c7766e72-fd25-437f-ab71-9403419420fc"]
}], "SubProblem",ExpressionUUID->"874e82e3-07a1-4040-89be-b06d3dff46e6"],

Cell[TextData[{
 StyleBox["d.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "=", 
    SuperscriptBox["10", 
     RowBox[{
      SubscriptBox["log", "10"], "2"}]]}], TraditionalForm]],ExpressionUUID->
  "8a800a5b-7ed9-41e9-b816-06c535e1db63"]
}], "SubProblem",ExpressionUUID->"0fef3b8d-013e-4724-a48d-a76b54f4bac7"],

Cell[TextData[{
 StyleBox["e.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "=", 
    RowBox[{"ln", " ", 
     SuperscriptBox["2", "e"]}]}], TraditionalForm]],ExpressionUUID->
  "e067182b-79d2-4450-9165-c3bf19b36d29"]
}], "SubProblem",ExpressionUUID->"97dc227a-3a6e-406f-8ff2-60a07f2d264c"],

Cell[TextData[{
 StyleBox["f.\t",
  FontWeight->"Bold"],
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "1"}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", 
      RowBox[{
       SuperscriptBox["f", 
        RowBox[{"-", "1"}]], "(", "x", ")"}]}], "=", 
     FormBox[
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]],
      TraditionalForm]}]}], TraditionalForm]],ExpressionUUID->
  "9c997d3f-499a-4be2-8ce9-a693b6313a91"],
 "."
}], "SubProblem",
 FontWeight->"Plain",ExpressionUUID->"3a963854-d5c9-4fcf-917d-334db9df3ea2"],

Cell[TextData[{
 StyleBox["g.\t",
  FontWeight->"Bold"],
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     FormBox[
      FormBox[
       FractionBox["1", "x"],
       TraditionalForm],
      TraditionalForm]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", 
      RowBox[{
       SuperscriptBox["f", 
        RowBox[{"-", "1"}]], "(", "x", ")"}]}], "=", 
     FormBox[
      FormBox[
       FractionBox["1", "x"],
       TraditionalForm],
      TraditionalForm]}]}], TraditionalForm]],ExpressionUUID->
  "c1ad162e-6a51-4547-bda2-60dc31a6f0d5"],
 "."
}], "SubProblem",ExpressionUUID->"f1e5935c-7758-4c3d-8347-5cac69bea3f2"],

Cell[TextData[{
 StyleBox["78.",
  FontWeight->"Bold"],
 StyleBox["\tGraphs of exponential functions",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The following figure shows the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     SuperscriptBox["2", "x"]}], ",", " ", 
    RowBox[{"y", "=", 
     SuperscriptBox["3", "x"]}], ",", " ", 
    RowBox[{"y", "=", 
     SuperscriptBox["2", 
      RowBox[{"-", "x"}]]}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "y"}], "=", 
     SuperscriptBox["3", 
      RowBox[{"-", "x"}]]}]}], TraditionalForm]],ExpressionUUID->
  "d907916b-85ef-4c90-b7f3-63ae3e0bfdc7"],
 ". Match each curve with the correct function. "
}], "Problem",ExpressionUUID->"14484dcd-cc2d-4e09-9732-2ce62e19f676"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3bNHvko//PDI+/8oHUwvLcvVdVxqHh6jO2zEGzZ0+uM4eLz7n/xKZIa3qKT9
tHMUI4yYnIfH0k3OU1uX/Ne/kYYNltjR6gwZQ3IGDYTDSZYH9qa8Jal6znkN
5pxFPp+PpVMy59za2qrBt068i03X6jmtxAYbuWURNyMwPjYusZeN0jNre3+Q
hTflv/zo449iqIs/TfTeXkMmNmwop52r+lZcu6fbnzarxAfNW6l+i2qGL4kn
Z8U6wXifeQZ/LhuUhPqDgqtEGZ5ddwYy/2HA9pCcQQNXvKrlgYVpzIuqtwWO
36Eg3qqRkJwXLVqUfTrN4C5GvvzbuveVf1+YcAYTedhVL/3rnfkfrfhES7a9
hn4vD4XOYbI3ndDks0z7EzmT8ak7WJI556TLCVMknHORVudV189n9q0AYkjO
oImq5oiwNCE5r3amtdYs6d4alrllZGz9unXKE7fZ9avt27Nv1Yip7mLCjz9N
Yx9m1XsEum7YBaAlxb4NT09iqk0e9NteIyY1bJC96ar7k66hMx/VMvBnPv7j
TL89sZ0sy5tCnvcPZM4ZiwQhG0jOkCVxKNtcSuecP6hI/cvZIEmCHJIYEwgE
pDeUlcm5tbVVg+Sc5l0sQXxLDbKEKo0vB+DqxsnyVCacZWRo0u+Epmh8XYNQ
d5McJrjxxrdWSM6qvd+f8hok3EPGKGm3+cweCnGRYGKfs9CU8vm2ACpIzqAB
cXngMrI8MPWvjsY3ViXv/rM7VNqDZDh845O3hDWfWmOWptrlklf6S0/Shfn5
4+NanNCnuott7w+muJNz0j2cxyNRCzzgYH2P2lgek55NqbTls99A/sHrur0G
I7QF6DpBj98CGU/eOjvFCWT2sJMdLwVXT8aPg3/sEZ1zrtnFPpnp9wO7Q3KG
bIVHVU3Oy6KDf0lvlIu/K6ocKud9Z0d6rc7hURabcx0O9oUXg2kc52FYbxYV
keTsdKbTAzM9cheTHrFUvjP5QilIDE9iB2cwB/HtkvheGWkc2fPVJ6SvSddt
f2qGHql32DD7ifZS64VybkQoqp5pDbhqM+dnCzb2+4cze80ytV12/UHS6uy6
M4DX+5AZJGfIhjiQicsDl9HlgWl+HzaCsVRGdjlLp4Wg5/fr57EvT2ulm5EF
AoF5ubkkOXs8nuy/s3QXS3txX3w+X0odT76wrHJqCwIAw2MjjPzufxprzRLf
oNF7e40kDRvV/RtvfKvbHzgr4q0XKTa9POyqJ8so2N9a45++znIBsnDhOEnO
r/35XDbfEOwMyRmy9ds6mpxXOzP5PvEGWhKe32roe2oXgTTSspzJYrOuK99n
U7XLpTyagf16wfz5ExMTGjQ5J7uLzfQgh8PsEf75qr9/ad6Lyth8yN2JzAym
oVjWmt7WPar5zwz2RkuL2LDhslTDxviXJeS9qqRzzuE77Ufe/0fStvdswcbs
t7tkj96q6+fpSYLnXNl8T7AzJGfIlrg8MDE57zmSyfdh4S1xVYjcD+Afe5Q0
pD3ovcBGWrlxrmbokTVicyyxVUO6iouLNbl7qu9i7BFOmpyjg3+5cbKcZWaS
HAr+v982D2O4AHOIxiMZ2VxOnHMOh2d4Qknr9dgX/n79PDIiCSv/Wfz3P+OX
Z0Ns2HBZoWFDfHzC4fFLH5FVFfLDePTI0cY/fX3xdDP7BRtn2ONMYjMbavr9
w5o8zq47AzQ51+3X4huDHSE5QzbEMW1OEU3ODRke1SFtoKq8VckD6S/+/VM2
xrKo3NZ9p/PSGWmkVWY/dmcx9bSMEmnVkOacPR5PNj/gzHex7zmrTrrrpLsY
+8WXpT9hDy/pzWD/yf4WxBO6U1tLCMBf/J0s9T/4OY/PsEv+jzk8ykahl/Py
2G8jWU75dGBfrsdLdfHkjrqbCUeimLNhQ72aWHkp315kD7LyLa1nCzZODTWx
TI7bTmp4MqJeJCi+HsFoBulDcoasBB+qmpyXxYZGsgyxN06Wk3lOMtjKU0DS
e3nsTmeZ2My43W7yg7ObeCgUyuZ7znAXU2cDZWaW7mIsVEvn1VrpcQbrC4fZ
YMJeaFcePnzs2DH2C+mSfn3I3anunpX+hbOXkL+r+ET9hfKXs/83g8OgU0Qb
NliKPnvbXE899sg87KqXHkP1xR5A5QPLfs1esLe0tFy81t/vH9b8TKWpRYJN
5Qlzzq6S/b5r2v5BYBNIzpAxcSQ/fUW1scba7L+t+J0jQ+yWVzSXNm8op0nZ
MGu9c+ui0eibRUXkhy0uLs7me0p3saS3MJINql0ultvZLezypctt3XdYXJce
YXPdtQFij//RJn25J20jnzT3Su/OPDUSR/V8UogNG8o553h49o+ZqRstms50
cfTxX5OuP6Bw+WRCcq7dLVzVYM012BCSM2TlQFVibF4ee2OnJt9Y3G2DDaXh
0fCddpbiWuI8Ho+U6OJN0SltpGY6LKzOy80lKyXZz57lt03lRi/fuaKP/xMA
Zll0moaNLb0P8JTMxpa+dtrq/MUx3kWBKSE5Q1bW7qBzzixLayc6TeSzZGaO
xSec3W631NusYasGAJhLkh02zt7mXZSJsZtIy91bNDmf2KfBbkVgP0jOkBVh
LW1y/rKTd03m9mZREZlwzrJVAwBMp8I/So9Eqe73hyNIehkbj0TpGdw1u9ru
B/CAQrqQnCFz/r8mWR4YfIiBKGOhUGjB/PmkybmxoYF3XQAwq+IxbyAhPFf1
bel9YNW322aHcKaSJOdff/0n3kWB+SA5Q+YaWmlsXvA2BvaMSa0aJDY/t+i7
7MUIzhwBsBuxYYOsE0TDRhbE7TU6GmnDRkcjxlZIF5IzZO6DCtrkvLkUyTkb
pFXjpXkvigeg4P1ZAPuZ2mEjsWfDXDtsGI1zoJM2bJypxPAK6UJyhsytdtI5
59/W8a7JxEKh0Avx5yNaNQBsLio1bJz4mrQ6o2EjG233A3TOuXa39bY2Bb0h
OUNmxIlQoZAm5yte3nWZ1eNdNRJ2rsauGgB2lmSHDY+fd1FmNbXd34l9JDy3
3L3FuzQwGSRnyFDvoGp54Eqr7rE8C6QDUEhyxq4aAHaW5EgUNGxkR1wkmNiw
saWvHY8npAXJGTJU1UybnF99Dw1jGQuFQi/NezHHMVeZnFtaWvCQAtgTGjb0
IFz1JFkkiLUkkA4kZ8jQtnI657ytHON5ZuQDUKQnI1o1AECChg1t7fddo8m5
qRy5GdKC5AwZWlJMk3NVM++aTExu1ZCTM1o1ACBpw0b36DjvusyKPXTCf/1b
YsPGXv/YI951gZkgOUMmwmGxq5kkZ28f77LMKhQKzcvNlZ6JcnLGrhoANjfV
sFF3MyE8V/VtvPEt79JMKRIRd8YX6g8KrpIn4dlV4g58gzdMIXVIzpCJK17a
5CwUYuTJTDQarXa55AlnKTmjVQMAJGjY0JZwzkUaNlZdP4+GDUgdkjNk4kg9
nXBe7URyzli8VWOuMjmjVQMAJGjY0NZrfz5HW50vHMciQUgdkjNkYnMpTc4f
VPCuyawCgcALj5+G8uXxeHjXBQCGwEKd2LCRmJzXdN1D1MsAe9A+83fTkwTr
D+LBhNQhOUO6xBFmThFNzg2tvOsyq2PHjpHY/HJe3vg4JpQAYIrYsFGdsDed
4PEj7GVmeDKS0Occv7pHx/G2KaQIyRnSFnyoOgNlWWxoBMN4ZtavW0eSs9Pp
xFuHACBrHh4jiwSlhg2EvXRF45fQVE4aNvb7rvEuDUwDyRnSIua501dobH5u
AwbwzAQCARKb0aoBAEpTx0afGiTdzmu67o1H8BI7E8Llk7TV+SpGXUgVkjOk
bc8RurHGGzt512RWlYcPK3fVYNfC/PxYOIzbIQAoCZ3DdIeNJh/vosxqS187
Tc5nKnkXBaaB5AxpW7uDzjkf+px3TWb1emEhSc5Op5N3UQBgOGLDBknOrv6O
BxO86zKllru36CLB2t2YwIcUITlDWsSuDKGQzjlf8WLEyYDP52OxWbkfHbta
W7HWEgAosTtX1bDxg64R3nWZktj9IibnvcqlgixO864LzAHJGdLTO6g6A2W5
uGYQ0hdv1ZirTM4L8/MnJjCJBABJiA0b1bRhA7MWmRHOVJKGjS197XgwIRVI
zpCeqmaanF99j3dNphSdatVISM47fv1r7KoBAEmJDRvVtGHjYjCMQSMDwlUP
bXW+fJJ3UWAOSM6Qnm3ltMl5WzlG7QzEWzXmkuSMVg0AmIHYsKFMzlV9z169
y7soU9rvu0aTc1M576LAHJCcIT2vvkeTc1Uz75pM6VB5OUnOBQUF2FUDAGbA
crLg6nky88x+cWoQg0YGukfH1eeh+Mce8a4LTADJGdIQHo0JK2ly7h3kXZYp
rVyxYk7uC8prZ0kJ7oAAMIOOBxNiWk5cJ9g8PIahIy1TW2TXHyTTzq47Azib
AJ4KyRlSJI7MV7yq0wML0WKXAa/Xy550JDlfvNYfC4d5lwYABvX4/Dsf3Z6u
cxijcAaEC8dJcn7l2jneRYEJIDlDGg59TpPzamw+nIkDZWUkNv/wtdcQmwHg
qVZcu0eTc91N7EWcgVXXz9NW53MuPI7wVEjOkIY3dtL96PYc4V2T+USjUZaT
SXIu/fBD3nUBgNFFpQZd1Q4bNUNo0E2bO/ANTc4n9uFdVHgqJGdIg7CWbkl3
+grvmszH6/WS2Myu69ev864LAExAbNjw+Om0c1sAgS9dwclJepJgza62+wHe
dYHRITlDqvx/VZ2Bsiw2cp93WSYTjUZ3lpSQ2PyjpUt51wUAprHxxrc0OdcO
sBzIuy6TiUrnoSTusOEc6ORdFxgdkjOk6vhZmpwXvM27JvNhyXnRokUkOR8q
L8dbhACQoiQNG9X9Ff5RDCJpEZNzRyOddu5oxMMIM0NyhlR9UEEnnDeX8q7J
fFpbW9W7ajzovYAFPgCQOuHsbTrtfO4276LMp+TmVZyHAulCcoZULSlWn4GC
tJcup9NJkvPrhYWIzQCQlu39QTLnLDVsYChJS1dwJDE572Ufhycj2NUZZoDk
DCkJh5OcgeLt412WybBn2cL8fDLhfPTIUdzsACB1bMRg6Y42bFT17bwZ5F2a
+Qh1+8XA7CoRk3P8o+vOAO+iwNCQnOGpHp+BQpYHFuJVeboaGxpyHQ5lbGb/
GQhgUTwApGHqSJTzQ+QwQeEsGjbSJpxzTU04P254fu3POA8FZoLkDCkRz0BJ
TM44AyV9xcXFZML5jQ0bEJsBIAOlgyExOVcn9Gz4w+j9Sk/S81B4FwWGhuQM
KfnpbtqqgTNQ0hQKhV6a9yKZc3a73Zi6B4AMxLcjHiANG1t6H/Cuy0zYqwzX
nQGanOv2864LDA3JGVLy3AaanE9fwcxGWlhIznE4lMsDWZBmcZp3XQBgVmLD
Bul29vh5F2Uy4gsQkpxrdnUFR3CDg+kgOcPTDY3Q2Mwu9klIx5tFRdJzTU7O
727ahMEZADJW4R9Vn8TdPTqOgSVFUx3jLRUkOZfcvIrHEKaD5AxP19BKY/Oc
It41mUwgEJCfa3Jybmxo4F0XAJhYJBIR6m6SdYJruu5ho8u0iOehkGnnjkbe
RYFxITnD0+EMlKxVHj4sPdHk5PxyXh6edACQJaEtQKedm3y8izIZnIcCaUFy
hqdTn4FypJ53TSbzemFhjiMhOTudTswKAUCWmofH6GGCrn72Sd51mQnOQ4G0
IDnDU+AMlKz19vTIE85ycm5tbeVdFwBYgXBqkJ4n2DnMuyiTSXoeCiY3ICkk
Z5jB4zNQyPJAnIGSngNlZSQ5L1q0iHdRAGARP+gaodPOdTcxSqdFfR5KnvcP
vIsCg0JyhqcQz0BJTM44AyVNSxYvVibnXIdj7549mM0AgOyxkaTjwQQ9TLC6
v2boEe/SzCTJeShfHONdFBgUkjM8xRs7cQZKNrxeLzk3kF3sk7zrAgDrEDx+
Gp7bAryLMpOWu7docj6xD/P2kBSSMzyFsFZ9BgrvmkwjGo3uLCkhsflHS5fy
rgsALGXjjW/pDhu1A8HJSd51mQNLyPEDGXeT8Nx67w7v0sCIkJxhBtHBv6ia
nJfHgg/RaZAiNiAvzM8nJ25//B9lvOsCAEvxjz2iybm6v8I/ilnT1AlnKkly
3tLXzrsoMCIkZ5jJ8bM0Ob/yDobi1F083axu1fD5fNEoXnwAgDamDsI7ezsh
OVf1CeeHeJdmJsJ/t9CGjcsnMVJbXigUYjflQCCQ+sdchyPH4WDJOd0vZH8W
7v7Wt60cZ6BkjD09iouLyYTz64WFvOsCAAva3h9UTzsPT+I0wVTt911Tn4eC
R8/ydpaUSDE4xY85jrnKK/UvlM5x4P3jgv5efY+2alQ1867JNNirywXz5yuP
22bX0SNHedcFABYkdupW95PwvKX3Ae+6TEPseHGVkG5n9kmEZ2tjyVm5+dVT
L5KcU7ykr0Vytr7gQzEqkznn3kHeZZmG2+1WHn3CrpfmvRgIYME7AGhMSnfC
+SG6sbPHj+CXiqmOl/qDZNp5v+8a79JAXwfKyhbm56d1yfk53S/8za6dvH9c
0NmXnarkXIhBOHVvFhVJrzTl5Pyzt99GjxMA6KTCP0obNlz9HQ8meNdlGsKF
43SHjaseDNlAYIUgTOtAFW3VWLsDywNT5PP54osIEpJzY0MDBmEA0Akbn4W6
m2SdYN5XI7zrMo0tfe201flMJQZtIJCcYVqrnXTOmWVpSM2h8vKcxOT8cl5e
KBTiXRcAWJnQOUwWCQqnBpH9UhGVzkMhc861u7EtNhBIzpCUONIKhbTJ+YoX
c84pWrlihbwuQErOv9q+Ha0aAKCr5uExwdVDejbYJzF0p0KctD+xj0w7sziN
gRuUkJwhOW+fqslZPAOFd1nm4PV65RUEcnK+fOky77oAwPqEJp/6JG5kvxSJ
56EkTjtv6L6E1x2ghOQMyVU1R4SlCcl5STFGjxTt3bNHuYkNi80/fO013LkA
YBasuHYPJ3Fn7PmuL2ir84XjGL1BCckZ1MRRYnMpbdX4oAKjRyrY64uCggJ5
/0bpOlBWhlYNAJgF3aPj6iNRSgexyOLp2Bj9mb+bJue6/Ri7QQnJGZKbU0ST
8/GzvGsyh6Qnbvf29PCuCwDsIulJ3Ih/qRDPQyHJuWZX233sww9PIDlDEkMj
NDYLy9knMfA+lXTiNonNq1et4l0XANhIkpO4Xf3+ME7iTonQVE5anX/99Z/Q
rAgyJGdIoqGVJuc5RRg3UiGduE2SM07cBoDZJJ7EXTtAkvOarnu86zIHoaOR
Tjt3NOJFB8iQnCGJbeV0Y43NpRg3UlHtcuU4HMrYjBO3AWCWRaWTuKsTN3bG
Sdyp2e+7RpNzUzkeOpAhOUMSr75H55yrmjHnnIr169YpDw1k17ubNvEuCgBs
p2boUcLedOzXVX0dDyaQAGcWlZZY/te/kYYN/9gjPHQgQXIGKvhQtZPzMnF7
Z3gan8+X43CQ5NzS0sK7LgCwHXHaue7mk2nn+C+evXoXcyAzi0rnodQfJNPO
+33XeJcGRoHkDNSXnarlgYV4rZ2K+Inbc5XJeWF+/sTEBO+6AMCOWE6mR6LU
3URyToVw4Tg9hvuqh3dRYBRIzkAdqKK7aqzdwbsmE2AvLpYsXiwffSJdO0tK
8KIDAGYfG3k6HkyQRYJCdX/N0COE56fa0tdOW53PVPIuCowCyRmUxJi32km7
NQ59jvj3VO3t7VKrhjI5X7zWHwuHeZcGAHYkNmx4/HTa+fwQ77qMjj1ubfcD
NDnX7sY5jCBBcgYlcS5CKKTdGle8vOsyAafTSZLzj5YuxdwOAHC0pfcBnXau
HRiexMbOM2EPzngkKpzYR8KzO/AN79LAEJCcIYG3T9XkvDIWDmOYnVkoFHo5
L08+cVtKzofKy3nXBQD2xcZtFpLpkShVfSxO8y7NBIRzLpKcV10/j8kQiCE5
g4IYj39bR5PzkmLedZmA2+2Wnkdycpa2cY5G8ZoDAPiIyhs7u+jGzrxLM4HX
/nyONmycc/EuCgwByRkS/HQ3XR645wheZT/V+nXrch0O5Zzzm0VFvIsCAIhV
+Edpq7Orv+MB9vx5CtedAZqcT+zD3RBiSM5ACGvpnPPpK7xrMjqfz8eeRyw2
y8mZXY0NDZhuBgDuxN2J626Sho2cq3d512V08RPMd5Pw3HL3Fu+6gD8kZ3ii
d1B1Bsry2Mh93mUZnbSNszI5L8zPD4VCvOsCABAJncN0nSA2dk6BcKYyMTnv
3dB9iXdRwB+SMzxR1UwnnF95h3dNJiBt4ywnZ/bR6XTyLgoAYMrFYJg2bGBj
5xQIVz0sLQuuEnHymX1k4fnCcbyZCEjO8MTmUpqct2F3iKdob29Xrg2UkjP7
JO+6AABEU+sEm3wJm2ywII2NnZ/mM3+3cj9n8WPdft5FAX9IzvDEnKKIsDQh
OR8/y7smo3M6nSQ5L1m8mHdRAAAJxI2dVdPOw5MRTDvPwD/2iC4SrNnVdj/A
uy7gDMkZpgyNqJqcl7FP4p2pGYRCoQXz55PkjG2cAcBQnmzsnLi3M4vTSM4z
E1oqSHJ2DnTitmhzSM4w5fhZOuE8B/uqPYXb7ZYP2pauXIcD2zgDgKEk39iZ
XU0+DFUzEzoan7Q6S+H58kneRQFnSM4wZVs5nXDeXMq7JkNj8Xj9unUkOf/s
7bcRmwHAgGqGHqkbNi4GwxiyZrDfd402bDSV4/GyOSRnmPLqezQ5VzXzrsnQ
fD4fic3samlpwW0IAIwmKm3sfGowITyzX3cOY8CaQffoeMKEc/xin0SXi50h
OYNo5H6SJufeQd5lGReLxwfKykhsfjkvb2ICJ3MBgEHlXL2r3th5PILsnNzU
y42mcjLtvN93jXdpwBOSM4hOX6GxWVjLuyZDY8m5oKCAJOff7NqJiQgAMKyO
BxO0YaOqr8I/ioFrBsLlk7Rho6ORd1HAE5IziD6ooHPOb+zkXZOhtba2smcN
Sc5er5d3XQAAMxE8frLDhnB+CJPOM3AOdKpbnXkXBTwhOYNoSTGdc/5tHe+a
DK24uJgk59WrVmHeBgAMbnt/kMw5syDtD2Nj52l1BUfIGdzso3/sEe+6gBsk
Z4gFH8YnnBPnnL19vMsyLmkbZzLhXHn4MO+6AABmMt3Gzmu67iE5T0fc0K/+
4JPkHD+G+zN/Nx4x20JyhtiXnaom50K8eTedaDTKQjKZcH5p3ouBAA6WAgAT
EDd2rk7Ymw4bO89MuHCcHsP93y28iwJukJwhtucITc5rd/CuydBWrliR40hI
zsXFxZh/AABTaB4eo3vTufprhtB+MK0tfe201bmlgndRwA2SM8SWb6XJ+dDn
vGsyLq/Xy2IzmXO+eLoZyRkAjO/xTms+Gp7bAph2nk7b/QBNzjW7hifRHG5T
SM52Fx6NCStpcvb2YUCYzo5f/1p6ysixuaCgAA8XAJjImq57dIeN6n4WBRGe
pyPU7SfJ+TN/N++igA8kZzsTB8krXnWTcywc5l2aQbGnycL8fDLnfKCsjHdd
AABp8Icj0q4ayvC8vT+ISYDpJLQ6S9dVD++igA8kZzsTk/OBKpqcVzt512Vc
brc7x+Egc84+n493XQAAqYpK+0WcH6Knonj8vEszrg3dl+gx3GcqeRcFfCA5
2x3LyQnJebmYpWEabxYVSRPOcnJ+Y8MG3kUBAKStwj9KT+J29V8MhtGwkVSS
Vufa3cHJSTxcNoTkbGvhsNibQeacr+AgvOR8Ph+LzSQ5n3TjyBgAMB9xnWDd
TXoqSucwoqAae6zGI1HhxD4Snl13BniXBhwgOdtakibnlSxOY+RMau+ePTkO
hzI5v5yXNzExEY3iAQMA83n26l067Vw7EJyc5F2XQQnnXCQ5P9/1Be+igAMk
Z1s79Lm6yRkrRJJiD0tBQQE5N3BnSQliMwCYERu5ukfH1TtslA6GcBdIatX1
8+pWZ9wAbAjJ2bbE57vY5Jx46PaH/8m7LoNqbGjIdThIcr5+/TrvugAAMjG1
TvDsbdqwcfY279IMquXurYTYjFZnu0Jyti1xVkHd5PxlJ++6DOrNoiKSnF8v
LORdFABAVkoHQ+p1gh0PJnjXZURiZ3iyVmckZ7tBcrYvscl5uarJeRTv06n5
fL55ubnkxO1ql4t3XQAAWYkvfPuaTDs/e/UubgRJJW11xmNlN0jO9pWsyRln
oCR1qLyc9Gm8nJcXCoV41wUAkC2hc5hOO9fdHMdxgsmg1RliSM52hSbn1CVd
G+h04rwYALCCjgcT9EgUl7hOkHddRoRWZ4ghOdsVmpxT5/F41GsDL17rx/w8
AJjd1DpBjx/rBFMRjWJXZ0Bytis0Oafs3U2bSGz++aq/x5anAGAZ2/uDZG86
9rF7dBx3BDV1q3Oe9w94oGwFydmm0OScmkAgkOtwyCcGStfRI0d51wUAoJng
5KRQO0AaNp69epd3XUaEVmdAcrYpdZPzniO8azKiQ+Xl0qGBcmx+btF3YyP3
sXwGAKxEaAsknIpSjXWCyYmtzolzzmh1thskZxtK3uR8xYv3m4hoNPrD116T
z9pm10vzXnx/61aMkABgMReDYfU6wQo/Wvio6XZ15l0XzB4kZztK2uQcfMi7
LMNpbW2VJpyVc87t7e286wIA0FLydYLsOnsbEwVqaHW2OSRnO0rW5Ixnvdq7
mzZJzw45Of9o6VLeRQEA6IKuE4z3bGCdoJrY6kwaNtDqbCdIznaEJucUBAKB
ebm5JDlXHj7Muy4AAF0kWScYP08Q3c4EWp1tDsnZbrCTc4oOlZfLsVlKzi/N
ezEUCmH6BQCsiq4TfHyeIDKhElqdbQ7J2XbEJudltMkZOzknks4NzInvRydf
72/dikcJACxMXCfo6iHhGecJqqlbnZ/v+oJ3UTBLkJxtB03OKZDODZSXB0oX
1gYCgIVhnWDqku7qzLsomCVIzrYijn7qJucP/5N3XYajPjdw5YoVUbxjCQBW
J64TJA0b8fME0e2sJLY6K2Oz3OqM24QNIDnbSzgcEwojwlLs5DwDn883LzeX
JGecGwgAdjC1TrA6YZ2g0DnMuy5jYQlZ3er8mb+bd10wG5Cc7SXpTs44dDvR
gbKyHIdDGZtxbiAA2AfLyQmnosTPE2SJmnddxiK2OpNp56se3kXBbEBytg8x
9u05QpPzaifvuoxFWhuoPPoE5wYCgK10PJgge9Ox8Fw6GMIwqLSh+5K61Rlv
4NoBkrO9rHbSVo0DVbxrMhaPx0MODWTXxWv9mJkHADuQ4nHSdYKcKzOYtvsB
uqtzzS7/2CPedYHukJxtJPhQ7M0gG2tc8fIuy1h+9vbbJDmvXrUK0wgAYCul
g6GEho341fFggnddRjH1+qJuv7rVGfcLy0NytpEvO1U7ORfiOa7k8/nkZ4Sc
nKtdLt51AQDMnqi0TrDuJg3PWCeYSLhwnLY6dzTyLgp0h+RsE+IL5A8qaJPz
2h286zKWvXv2yKefSLH55by8UAinAACA7YjrBEnDRu0A1gkqbelrp63OTeW8
iwLdITnbyJJiOud86HPeNRnIxMTEwvx85XHb7PrV9u286wIA4KB7dJzOOVf3
b+l9wLsuA+kKjqhanff6xx7hzVxrQ3K2C7HJeTmdc/b28S7LQNxut/LcQCk5
X79+nXddAACzLRrfaEg4e5tu7OzxY4cNmXjkYv3BhOTsKtnvu4bkbG1IznbR
0KraybkQA6DS+nXrWGxWJmf2GQyAAGBbFf5ROu1c1dc8jLTwhHD5JJ12Rquz
1SE528UHFYn70S2P/XQ3krPM6/XmxCeclcn5pLuOd10AANyI086nBml4Pj/E
uy4DKbl5lSbn+oO8iwJ9ITnbgZiQX3mHNjkfqeddl4Hs2LFD7nCWroX5+ePj
47zrAgDg6QddIwkNG9XiOsHhyQjej4vF761iNzhZJFi7uys4wrs00BGSsy0M
jaj2o1sW6x3kXZZRhEKhBfPny7tqSNfePXt41wUAwJl/7FFCco43bKzpuse7
LkOY6gZvKifTzlv62nmXBjpCcraF42dpbH5uA++aDOTYsWNkwpmlaJ/Px7su
AACeotIiuPNDZIcN4dQg5pxlQkejULM3Yeb5wnHeRYGOkJxtYXMpXR7IPgOP
/WjpUpKc3ywq4l0UAIAh1Ayppp1d/RX+Ud51GcVn/m7asFG3PxrFQiLLQnK2
hec20Dnn42d512QUra2tpE+DXR6Ph3ddAABGITT56KkoZ2/zLsoQolJDCzlJ
sGZX6707iM5WheRsfb2Dqv3olomdzxD37qZNJDYvWbwY0wUAALItvQ9ocq7u
7x4dR8+GRDhTSZLzhu5LeHCsCsnZ+o7U09j8yjvIhRKfzzcvN5ck50PlOD4V
AOCJ4OSkUDtA1gkKncO86zKK73x1lu5Nd87FuyjQC5Kz9f10N03O25AMpxwo
KyOxecH8+aFQCHMFAAAycZ1gW4B2O9cOsETNuzRDcN0ZoMn5xL5YOIxbiSUh
OVub+LQVCmm3xukreDozExMTC/PzSZOz0+nEgwMAQHQ8mKBHolT3b+l9wLsu
Q4jPye8mO2y4A9/wrgt0geRscd4+1U7Oy2PBh7zLMgS32y2dG6hMzl6vF03O
AABqwtnbtGGjyYfhUiJ8cYxMO+d5/4AHx5KQnC1MfM7+ti7x0O1lsSXFeC5L
Xi8sJK0a7DOIzQAASVX4R+m0s6u/ZugR77oMYdX187Rh40wl76JAF0jOFiZG
wNVOOue85wjvugzB6/WS2Myuk+463nUBABjR1Hl5pwYTwjP79fkhTDcwLXdv
0eRcuxvHlFsSkrOVhUdjwkqanK948URm4/z7W7eS2LwwP39iYoJ3aQAAxrWm
6x5dJxjfno53XfxFo1Ghbj8Jz5/5u3HDtR4kZ6sSJwFOX1Ht5LwyFg7zLo2/
QCCwYP580uF8oKyMd10AAMYlnvoRjojJuTohOed9NYJ8yAgXjtNp545GTMhb
D5KzlX1QQdcGrt2B8Y05VF7OYrMyOc/LzfX5fLzrAgAwrqi8PR3pdq67ie3p
mC197TQ5N5UjOVsPkrOVvfoebdU49Dnvmvhjrx0KCgpIci4uLsZrCgCAp2oe
HqMNG1V9O28GedfFX1dwRH0MN/sk77pAY0jOljVyX7Uf3TJxkzrb83g8pMOZ
RejW1lbedQEAmIPg8dPDuD1+3kUZglB/kITnLX3tvIsCjSE5W9bxs6rkvJZ3
TYbwxoYNJDmvXLGCd1EAAKZROhiiydnV3zyMFBETOhppw8aF42jYsBgkZ8va
XEqXB24uRUNCb08POTSQXdUuF7ZxBgBIBRsrxyNRoe4mDc/nh3iXxt9n/m6a
nOv2485rMUjOlvXcBjrnfPws0qHT6cxNPDdwYX5+KBTiXRcAgJnkfTWC7ekI
ce+RsUfqVueWu7d4lwZaQnK2pt7BJE3O/r/yLoszeTM6ZXLeu2cP77oAAExG
jIiqdYI5V+/yros/4UwlSc6v/fkc76JAS0jO1vTbOhqbX3mHd038yZvRyck5
1+HAZnQAAGmZ2p7u/BDZ2Bnb0zF53j/Qho0vjuENXytBcramtTtocv6gwubP
XGkzOmknDTk5v7tpE++6AABMiW5PV9XH/nN7v623p4viGG4bQHK2oHA4fuh2
4vLA01d4l8VZY0ODem1ge3s71gYCAGQm6fZ0dh5Sp5ZPntinPobbzg+LxSA5
W9CXnUkP3bb5C97169aR47axGR0AQDbE7emU5wnGf10z9Ih3XZwlPYabd1Gg
GSRnCxIP3U5MzqudvGvizOv1ktjMLrfbbfNXEwAA2Zjano70bJy7zbsunqLT
HMPNuy7QDJKzBeHQbZXi4mJsRgcAoLkV1+6RvenYx+7RcTvPS4jHcNfsFVwl
yh3qcAy3ZSA5W83QiKpVw+6HbgcCgXm5uWTC+UBZGe+6AABMb3gyIqZlskNd
5zDvungSNx5pKifTzjiG2zKQnK0Gh26rsJBMWjVYkGZxGmsDAQCyMbU9XVuA
rhOsHWCJ2s4jLI7htjAkZ6sRD91OTM7sMzYWCoUW5ueT5FxcXMy7LgAAi+h4
MEGTs6t/441vedfFU5JjuE/ss3MHi5UgOVuNsJZ2axw/y7smnqpdLtKnwS6v
14sJZwAArQhnb9N1gqcGbRsUo1ITS7JjuG37mFgJkrOlePuSNDkP2XpVwsoV
K8iE8/p16zB2AQBoqGboUcL2dPGrwj9qz8E2Gj97S30Md573D7xLAw0gOVvK
oc9pbH71Pd418dTa2jon9wVyNTY08K4LAMA6prqdm3w4FUXptT+fow0bZyp5
FwUaQHK2lNVO9aHbvGvi6c2iIhKbf/jaa/acAwEA0NWW3gd0hw1Xf/OwfaNF
0mO4/WN2PybGApCcrSM8qjp0e3nsite2QbG3p4f9wybJ+XcVn/CuCwDAgoKT
k+KpKKRn4/yQbaedo9GoULefhOf9vmu864JsITlbgzg0nb6i2o+uMBYO8y6N
G6fTSZLzy3l5oVAIawMBAPSQ99UIbdioFk9F4V0XN0mP4cYdyOyQnK1jWzlN
zmt38K6Jm0AgsGD+fDLh/JtdO3nXBQBgTSwQ+sceqRs2hM5h22ZF50An3WGj
/qBtHw3LQHK2jgVv0+R8pN62z9ADZWVkwvmleS/6fD7edQEAWNbUqSikYcPG
p6KILyUSz+BmV+u9O7zrgqwgOVtDdPAvSfaj6x3kXRcf0uknJDkXFxfbtuUb
AGB2XAyGxeScOPO88ca3Nhx+p7YcaakgDRurrp/nXRpkBcnZIo7U09g8p4h3
TdxUu1zSHs7K5Nze3s67LgAAK5vKimdv04aNupvjNp11jglXPULN3oSZ5y+O
8S4KsoLkbBFrd9DkvK2cd018RKPRJYsXk+T8emEh77oAAGwh6akopYMhG047
M+7AN+q96YYnI/Z8NKwBydkKwmHVfnTLxK02bMnj8cjHBcrJuaWlBVtqAADo
bdpTUZpsusxkPBIVTuwj4fkzfzeSs3khOZvd4/3oSJPzyljYpseerl+3Tj5u
Wz79BLEZAGDWbO8P0k02qvtrhmx6CEjSvel4FwWZQ3K2gg8qaKvGaifvmvjw
er1ybJaT87FjaCoDAJg94kRr3c2E5FzVZ9tTUcS96Uhyrj/IuyjIHJKzFdD9
6JbHflvHuyYOotFocXExSc4v5+XFgg9tuzgFAICLFdfu0YaNqr6OBxO86+Kg
e3RcvTdd2/0AbksmheRsev6/qo4OtOl+dD6fb15urhyb2ZXrcBwoK7Nn1woA
AEfDkxGhdoCG57YA77pmG4vH7B6EvemsBMnZ1MRXrNiP7rHf7NqpjM05jrks
SAcCthuoAQD4isqnopBu59oBf9iObwHG96ZLbNjA3nSmheRsetiPLi4UCi2Y
Pz/H4VCGZ6fTibWBAABciF0K1bRhI++rERsOytibzkqQnM0tPBoTCiPCUrIf
nd3GJRaPD5WXs9isbHJmV29PD+/SAADsaGra+fwQbdioHQhOTvKubrYl3Ztu
v+8a77ogE0jO5vV4PzrS5LwyFnzIu7TZNjExUVBQoDwxkF1vFtm0awUAwCCa
h8docq4WD+PmXRcHSfemw5yzGSE5m9u2cpqc1+6w24RzbOq4bQdJzq2trbzr
AgCwO3oYd1WfcGrQhonx11//iSbnuv02fBwsAMnZ3OYU0eR8pN5uyTkajf5o
6VLliYHsWr1qFe+6AAAgVuEfpYdxV/XZ8DBu/9gjmpxrdrXcvcW7LkgbkrOJ
9Q6q96OLDv7FbslZPm5bmZwbGxrs9jgAABgQDuOOyV3fZypJcn7l2jnepUHa
kJxN7NDnNDm/8o7dXsXHFMdty7H5h6+9ZsPHAQDAmKY7jNtWAzVLznneP9Aj
Uc5UYpLHdJCcTWy1kybnDyp41zTb2tvbWWwmyfnokaO86wIAgCnJD+M+e5t3
XbOt5e4tdcOGf+wRwrO5IDmbVfChuI0GSc5fdvIua7b97O23SXJemJ8fCoV4
1wUAAE9svPEtbdhw9TcP2yt4RKPsFcR+kpxLbl5FcjYXJGezamhVNTkXxsJh
Wz0Be3t6pNisTM4Hysp41wUAAE9E5cO4Sc/G+SFb3bMY4fJJOu184bjdHgSz
Q3I2q82lMWF5QnJ+Y6fdesaKi4ulU7bl5Pzcou/G/H+14Tb7AAAGl3P1Lp12
rurreDDBu65Ztd93jSbnE/vG7XgguYkhOZuR+BwT1tI556pmWz33fD7fvNxc
5YmBLDn/Zpe9Xj4AAJiFPxwR55zJtHNbwD53rqi0N51yhWD8ct0Z4F0apAHJ
2ZSueOmEM7v8f+Vd1qzaWVJCztpmQZrFad51AQAANbUtW1tAfaRg9+g47+pm
lfDFMTrtfNVjn5cPFoDkbEoHqiLC0oTYvKTYVnOtgUBgwfz5JDk7nU5bPQgA
AObCQrJ6ezqhc9hWuXFD9yWanJvKbfUImB2Ss+mIz69X3qFzzgeqbPW8O1BW
pszM0tXb02OrBwEAwESmpp3PD9Fp59oBf9gunb7sx2y7H1DvTcc+ybs0SBWS
s/kMjaiPDox5+2wy7DChUGhhfr7yxEB2vfX/bomFw7xLAwCAmbSOqKadq/ry
vhrhXdesEprKSXLe0H0J75maBZKzuYjxuKpZlZzX8q5rVh0qLydnbbOrvb2d
d10AAPB08Wnnnif5uVqcdh6etFFuFP67hU47n6nkXRSkCsnZXMTkvHZHYmxe
Lu5QZxsTExMFBQUkNq9ft84+U+4AAObFxurm4THxDMHqhGnnjTe+tc+kq+vO
QEJsrt3NLvbawT6PgKkhOZtMeFQ88YTMOZ++Yp/ceOzYMfWE88XTzRhwAACM
b6rb2eOnPRt1N+2zrbF4HPmJfWTaeb/vGu+6ICVIziYijimnr6haNVayOG2T
3Mh+zCWLF5PkvHrVKruMtgAAllDhH6XJ2dW/pfcB77pmj3DhuPowQd5FQUqQ
nE1mWzlNzqudvGuaPW63O8fhIMm5saGBd10AAJAeoclHw/OpQZvMAjElN68m
Jue9wol99vnxTQ3J2WTmFNEm5yq7NCpEo9GVK1bIB21L15LFi9nneZcGAADp
KR0Mid3OidPO2/uDvOuaJUkOE6zd3XL3lk1u6KaG5Gwm3j6yjbN4Hoptjg5s
bGiQJpyVydntdmOcAQAwHbHb+dQgWScoNPnsMxkinKlUHybIuyjbaW1tPVRe
ntYlR5EDZWVpfaHHg7/fWXegirZqvPqeXYaYWOz1wkL50EApNhcUFExMTPCu
CwAAMrG9P6judq7w22Xlzqrr59WHCfIuynZ2lpSoD1ZL5WL5WY7QKf5+p9NG
7bVGsaSYJuc9R3jXNEvYq0LlWdtScj565CjvugAAIEPiFhOnBmnPhsfPu65Z
kuQwwdrdXcER+0yIGQFLzmkF4GwuJOfZlvTowCte3mXNkvXr1pHkvGjRolAo
xLsuAADI3JbeB/Qw7qq+mqFHlp92ntqdD4cJ8ubxePbu2ZPWJSft3+zamdYX
YkOD2XaknjQ5x4S1Nnll2t7ezmIzSc6/q/jEJj8+AIBVBScnhbqbNDyfvc27
rlmCwwSNQ2qwT+UjWSGY+hfCbKNHBy6zz9GBbxYVkbc8FubnY8IZAMAC1nTd
U3c7Nw+P2WHq1R34Rt2w4R97hJhlZNhbwxyCD8UTT8h+dKev8C5rNni9XuVs
s7yglXddAACggeHJiFA7QMOzPaadxU7vuv0kPDsHOnnXBTNBcjaHhtakRwfa
4WXpu5s2keS8YP78UChkh+kIAAA7yPtqJOm0sx3uccLlk+rDBO3wg5sXkrM5
bC6lE84/3W2H6ChNOJPkvHfPHrQMAQBYxtS0sy27nT/zd6sbNoKTk7zrgmkh
ORufmJCFQro8sKqZd12zQZpwVibnBfPnBwIB3nUBAIA2pF0mcq7epcm5Wpx2
5l2dvqJTrxqUhwnuZR9ZnOZdGkwLydkErnhVrRrLYyP3eZelu96eHvUuiztL
SnjXBQAAGhMDZHU/PVLw/JC131+c2pvunOtJcnaViEG6o5F3aTAtJGeDEweN
Dypocl6+lXdds6G4uFjd4ezz+XjXBQAAWpIC5LNX79JTUar6LD/tzGzpa6cN
G/UH7dCQaVJIziYwp4gm50Of865Jd709PbmJE84sRe/YsYN3XQAAoD2WnP1h
1bQz+7XVp52Z7tHxqalmRXhuuXsL4dmYkJyNztuX5OjA3kHeZemuuLiY9GnM
y83FhDMAgCVN9S10DpM5Z2mTDd7V6SgaX80knKmk085XPbxLg+SQnI3uw/+k
sfmVd3jXpLvenh6Wk3HgOwCArfjHHtFNNqr7hXPW32Rj1fXzNDk3lVt+st2k
kJyNjuVkkpz3HOFdk+6mm3DGZnQAAFaVfNo5frWOjFt79G+7H6DJuWZX6707
vOuCJJCcjSw6+JckrRrePmv3PmHCGQDAtpJMO7vEbmfedelOaConyfm1P5/j
XRQkgeRsaIc+p7F5TpG1Y3MsPuGc63Aod9VAhzMAgB3MPO3Muzp9feers3Ta
+Uyl5e/4ZoTkbGirnTQ5byvnXZO+pAlncvoJJpwBAOxD3GtCdRi35TfZaLl7
S92wwR4KhGejQXI2rqERem4gu654rf0ken/rVik2y8kZE84AAHYjtAVoeK7q
s/a0czQaFeoPkuS8ofsS77qAQnI2rqpmVXIujIXDvMvSUW9Pzwvxf5DK5Ox0
OrEwEADAVpJMO9tgb2eho5FOO39xzNo/shkhORvX2h30xO3NpdZ+Br2/dSu2
1AAAgJgt93Z23Rmgybl2t3/sEW6BhoLkbFDBhzFhJW3VaGjlXZaOxEMDH/9r
RIczAIDNJd/b2brTzuznGo9EhRP7SHje0tfOuzRIgORsUMfPJmnVYHHauoqL
i3MSj9tGhzMAgD1Ne6RgVZ+1p52FyycTk/Ne4ZzLqi8WTArJ2aB+uptOOL+x
k3dNOpI7nDHhDAAAEjrtXB0Pz9addmY+83cnJGdXiVC7e3gyYu3NAcwFydmI
wqPiDDNJzsfPWnismO7QQN51AQAAH9Pu7WzdaWf28wYnJxMaNmp3s4/7fdeQ
nI0DydloxHjc0Kpq1VgZCz60anLu7ekhsRkTzgAAEJuu2/nsbd516UV8sXDh
OF0neOG4VQOAGSE5G9HmUjrhvFqMkVZ94ry7aRMmnAEAgJh22rla3GTDqtOw
+33XaHI+sS84Ocm7LpiC5Gw44XC8VWN5wn50Vc28y9KL1+tVTzj/avt23nUB
AIAh+MMRcZ6ZbO9s0WnnqDTNfmKf1OEsh+fP/N1WfaVgOkjOhvNlJ51wZsl5
5L5VJ5zfLCoiW2q8NO9FTDgDAEDs8bTzs1fvSvs5K6+aoUe8q9OLcM6lbtjg
XRRMQXI2nF98pG7VsOorzfb29lyHQz4uULp2lpTwrgsAAAxkeDIidjuTaWeP
36pzSs6BTro33Yl94xGcCmYISM6GIiZkYS1Nzr+t412XXtavW5eTmJwXzJ8f
CARwaCAAAEikaecfdI3QbmdXf4V/lHd1uoivi9ydsDddvGGDd10gQnI2lite
1a4ay2L+v/IuSxft7e0sM0uXnJz37tmD0AwAAErR6aadm3xWfU9W+OIY2ZtO
uHySd1EgQnI2DjExqls1lhTzrksX0Wj09cJCacJZTs7ShDPv0gAAwIhWXLun
3mSjdDBkyfC8pa89Ydo5vsMGGjaMAMnZOMQWBbFVI3HO+dDnvOvShcfjkWOz
nJwPlJXxrgsAAAxKPCWk7iYNz6cGWZ7kXZr2xIYNskgQDRvGgORsIGKrxjI7
tGqw1wgrV6xg/+qUyXlhfj4mnAEAYAZbeh+ou5239wctOe2c0LAhXR2NFnyR
YDZIzgayrZxOOC8ptuRzpLGhQc7M8nWovJx3XQAAYFzshjgeiQqnBukOdacG
LXlQiNiwoToSxZKvEcwFydkgxFaN5zbQCWcrtmqwZ/2SxYtJbF6Ynx8KhXiX
BgAARre9P0jXCVb1bbzxLe+6tCc2bCSeh8J+7bozwLsuu0NyNopku2pEB/9i
vTnnapdL2eEsXZWHD/OuCwAATCASiYjTzonrBIW6m8HJSSvdMadOHj9TKW7m
rMzPHY28S7M7JGej+KCCTji/+p6VBgEJ+2dWUFCg7HBmF/vMxMQE79IAAMAc
SgdDtNu5qu8HXSO869Lehu5LtGGjbj8aNvhCcjaKOUU0OR+o4l2T9ioPH1Z3
OLvdbowDAACQomg0KjT5Eno22K9rB4YnIxa7m3SPjtOGjZpdaNjgC8nZEJIe
gNI7yLssjYVCoYX5+SQ2L1m82GIDHQAA6K3CP0q7ndnVOcy7Li1FpdYUsWGD
7rDBuzRbQ3I2hGStGrxr0t6BsjLS4cz+4TU2NPCuCwAAzEfw+Glyrh3oHh3n
XZfG0LBhNEjOhpCsVcNiTc6BQGBhfv6c3BeU1+pVq3jXBQAAptQ8PKbudhba
rHYuQJKGDeywwRWSM3/2aNXYWVJCYjO7WltbozhKFAAA0jS19cT5IcHVQxqe
Ox5MWOa+goYNA0Jy5k/dqvHKO7xr0pjP53tp3ovsn5kyNq9ft84ygxsAAMwy
dgdpHRkXYzM5GOX8kMVuLkkbNix55rgpIDnzJc64CmvpnLPldtUoLi6WupqV
yfnitf5YOMy7NAAAMDFx2ll1MErz8JiVYmWSI1Fqdn3m7+Zdl00hOXMmtmos
I5fFDkDxer258YWByuT8s7ffttLPCAAAXIhtwOpNNjx+3nVpZpojUfYKl0/y
Ls2mkJw521Zu+V013iwqknfSkGLzS/Ne7O3p4V0XAABYgdA5TJOzq7/CP8q7
Li1t6WunDRsn9o1HsFKIAyRnjsRdZcRWjcTkfOhzKz0RWltb5Z3o5OTsdDp5
1wUAABYxPBkRagfoJhtNPsusQI9KDRuJ3Rpo2OAFyZmnK96IsFTdqsG7LC29
Xlgon7UtJefnFn2X/YzByUnepQEAgOlJzQw/6Bqhm2y4+rf3B3lXp42pho0v
jtFp58snLfLawFSQnHkR/7VvLqUTzkuKrfQsaGxoUB59IiXn0g8/xIpgAADQ
UHByUqi7SaedTw1aaZYmacOGlX5As0By5mW6Vg3edWlmYmJiyeLF5MTAhfn5
0cG/IDkDAIC2tvQ+UB+MsqbrnmWyZdKGjf2+a7zrsh0kZ25OX1HtqrE85v8r
77I0U3n4sNynIV+/q/gEsRkAADTHbi7CqcGE5FwtnsftD1vkriM2bJxz0Wnn
C8et8dOZCJIzN+pWjdVOy5xEHwqFFubnk9hcUFAQC49a5mcEAABDqfCP0lNR
2NU5bJlsWXLzKk3OtbuHJyO4sc4mJGc+wqMxoZAm5yP1vMvSzN49e5QdztLl
drvx7AYAAD1MLaPz+On2zvHzuP9/9u43pqoz3xv+enOevmjOi+dVZ3DQjHjf
pCnmISn3kAZj6xMI3qE5c0ebUOkZT+8eW03IEzvZkzhDDzreEMVgJzM490Nn
1GZ4DhsPxY1RIJDdYmM3tgqEOdbtWP7IWLa7SjdiYW8R2LDXc13r2iwWa137
/5+11t7fT1aMtQIXiPrl5+/6/fQ+XXLQdm7asKEc7HzMMjmi97myC5Jz+tEv
frscnFaN2bnM+LrY5XJty8tTxeay0tLMeO8AAMCwemcW1TXntgzZxx380uB6
h7rsfM2aAe+diSA562PfUXVy3lOTMfVYi8Wi3LLNHofDofe5AAAg89F93JrF
KCRRZ8Zfsqdcd9SbuNuPuxefITynDZKzDrxPRaGMFpmVybmjPzM+7Z1O56ac
HFVsfquqSu9zAQBAVqD7uDXJOWP2cdOLkBdPqMrOhyaG9D5XFkFy1kFHv6ZV
o4zE6cxIziQkawvOd+/e1ftcAACQ+QLS0FfuPu6GKZ/ep0tUsGHjxiV1w8Zn
5/Q+WhZBctbBnhp1ct53VO8zJYfdbs/VFJyxaxsAANKJv4/7ylRmjEX9yD26
MTnXk29HF5ZEv1/vo2UFJOd0m56V+jQ2tmp0OTLgNzP5Mr+stFQVm7FrGwAA
0okVZn9++4l6yIb13pvf/JAB3c60YaPz1HpyttaSb8vvDmRAkDAFJOd0O39Z
06pRkRlTjltaWlQdzls3b2k4eRK/lwEAIM3oALcrU+rxzu2TmTH9WBjuVt4Q
pN/2NOl9qGyB5JxONEPuqFYn54MNep8rCdjqE1WrRmFhIflxvY8GAADZqGHK
R5OzqvI86NH7XEnQ9/iBdiWK48kjvc+VFZCc02p8St2nQZ4vMmGGubz6RJmc
26xWvc8FAADZKHhV0O5Wl53NvxgleE+wp0kdnm/Z9T5aVkByTqvTrZpWjT0Z
8M9GbPWJqsP5tZ07AwF0agAAgG44i1GsGbIY5Ue3r6oHO1/+EH/tpgGSc1pt
269Ozh80632mJKiuruauPsFvYQAA0EuwNqtajCKVoC9Mm351yOCcR11zvnDM
5vlW73NlPiTn9HFOaArOr5IfNPtv3qGhIfL5g9UnAABgQHQximbIhtDjyoB/
8BX6mtXhebjb7KHC+JCc04N+Jn/QrI7N2/ab/XduIBB4vaJClZy3bt4yPjam
99EAACDbBcvOIzPa8HxofF7v0yWqcvQrdXK+eAJjYFMNyTk9aEIW9qiT8+lW
s39taLPZ2OePMjn/+sgRvc8FAAAQRBejdN5Xl50v/p38uHn/Fg6wcrqyz1l6
Trnu6H20DIfknCaf3uS0aoxP6X2shPh8vqKiok05G5Lzi/n5Hk8mzPwBAIAM
wMrOR+551cm5dUIYmTF1cqbDQ65Z1WXna5hqlVpIzmlysEEdm3dU632mRJ1u
bCSxWZWc/9z8R73PBQAAsC7A9u71uNTh2fwT6mrv39IOdnYvmv7+o5EhOaeD
9yldFKhKzucv632shLBJdKrkvKOkZHnZ3H8KAQBARrow/Uw729nsE+roqsT2
46qejUMTQ6Z+pwwOyTkdOvpXhZ0bk3OZODun97ESUl1dzWKzMjnb7RjDDgAA
BiVce7jhqiAJ0q0TJFGb9LY+i8fC9Q7hQv2G2c6fndP5ZBkNyTnV6Cf2bot6
deCeGr3PlRA2iU6VnPdVVuKLXAAAMCz1hLq24IS6JRPfFBStjybVK1EuHLvt
ndX7XBkLyTnlpmc5G7e7HHofK37ka/Pd5eXs00ZOzrk5OeNjY1h9AgAAxhRm
Qt2b3/yg9+niFGzh7jyl6nYu/ts1kxbSjQ/JOeXOfKKZqlEh+v3mjZhtViv7
nFE+NTU1+E0KAAAGx59Q1z7p9q+a928x4a996nuCPU16HypjITmn3EvvqJPz
wQa9zxQ/n8+3vaBAFZvJj2ASHQAAGFzICXXkGTTx32J9jx+oW50vHCM/aN6v
BYwMyTm16MZtVavGLvGm06QF50Ag8NtjR1l7hvyQ/zx39qzeRwMAAIgsOAbZ
7lbP2bDe650xcRASeprUW1GwiTs1kJxTS7tx+4Uq0e/X+1hxGh8b25ybq0rO
ZaWlmEQHAAAmQkIyZzGK3a33ueJXfncAm7jTA8k5dfgbt+vO632u+L1VVSVf
CZQLzg6HiW87AgBAtgkOcxuY1l4VPHLPq/Ph4kXHhvz7v6nKzqdcd9CwkXRI
zimUWRu3u7u6NuXkqJLzuwcO6H0uAACAmNGo2T6pLjt33p9ZMd+IuvVN3Krx
dNespntfjA/JOYV+cVy7cdukn8M+n29HSYm8Yps9zxf+1OVy6X00AACAePz8
9hNt2VkYmdH7XHGim7hVrc7tx8kXCCg7JxeSc6rMztFFgark3Npr0k/g042N
qti8dfOWP/y+0aTvDgAAZLngJOQrU+rk3HZveH7ZjGUuuon74okNydlaW353
QO9zZRok51Q5f1nTqmHWjdsul4vkZHnFNnuKiop8Pp/eRwMAAIhfs3uBU3bu
f6j3ueJB97wMd2+8J1gv9DSZ8asAI0NyTpWX31PPozvYYNIK7T//6yFVwZk8
fX19+M0IAABmR68KaibUNUyZsjQkDXY+pnrID+Lv6yRCck4JzhjnV+mFQROy
2+3a2LyvshKLtgEAwOwC7Kpg2z115bnzvndlxVx/zwXvCfY0qcMzBjsnFZJz
SmjHOD9facaC89LSkvZi4NbNW8bHxvQ+GgAAQBKQVPmz27PabmdhZMaMgbP4
b9fUEzakwc5mfF+MCck5+fx+7hhnM37Snm5szM3JUSXn+ro6M74vAAAAXPRu
nfaqYPvk8Lz59nzREjpJzhvLzrX3b+l9rsyB5Jx8XY7MGOPscrm25eVtytlw
MbCwsBAXAwEAIMPQq4Kqbmfyn/0PzVUpWh/srGrYuNqi99EyB5Jz8u07qh3j
rPeZ4vHugQOq2EyeS7ZOc/0xAgAAEA16VdA6tt7w3GbWq4KnXHe09wRve2f1
PleGQHJOsulZ6W6g8nrgLrG1V+9jxcxut2/S9Gm8sXevGbu1AQAAwgtzVdBc
WwUD3MHOF47lOz/X+2gZAsk5yc58whnj7H2q97Fiw90YmJuTc/fuXb2PBgAA
kHwB6cn/WnNVsHVCGPSYKDkzdLCzap/g5Q8xFCspkJyT7KV3NsbmXeLBBr3P
FLP6ujrV3hPy/PbYUb3PBQAAkELBq4LKhmepCt07Y7KMRAc7qyZsXDhmfTSp
97kyAZJzMt10csY433Sa62u88bGxrZu3cC8G4stVAADIbJytguQ/7W7T/f0n
9DWru52vd+h9qEyA5JxMBxvUyfmFKr3PFLN9lZUkNqtqzt1dXXqfCwAAIB2k
q4Lqno0j97zmuulTOfqVOjm3H3cvPtP7XKaH5Jw03qeiUKEuOJ9u1ftYsbHZ
bLk5Oark/FaV+fI/AABAfOhVwfZJ7Xhnt3/VROGZhGSpW6Ne2bZB4rTe5zI9
JOekae3V3A3cJbq/1/tYMfD5fNsLCjZtTM5bN29xuVzo0wAAgOzx89tP1D0b
5BmY1vtcsRGud6jLzj1Neh/K9JCck2ZHtbpVY0+N3meKAcnGFouFFZyVyfl0
Y6PeRwMAAEirpdWA0ONSJ2frvQvTz0xUdrY+mtyYnOvJt32PH6AWlggk5+Rw
TnDuBnY59D5WDIaGhuTYLCfnV4qL8YkBAABZqHdmUZuchStT3pUVvY8WrUAg
IFz+cH3CBmvbGO5Gck4EknNy/KpJ06qxx0Rfli4vL5eVlsqxmSVn8jgcDvRp
AABAtmHjnYVBj/aq4KZbj/U+XQzK7w5o7wnOrJipYdtokJyTwO+X7gZurDnX
nTdR4jzT1EQ+B1TJubralEvDAQAAkoIkTKHzvnpCXdu94fllU/wVH1yMuGGq
M70weGhiSO+jmRiSc4Lo752Ofk3B+dXA1Hem+G1FuFyubXl5ythMnu0FBR6P
R++jAQAA6IOVnRumfBsWo7DH7jbFP8iSI66urgrXrBvCM/n+Z+dMcHqjQnJO
gt0WdXLebTHL5yT5vf9WVZUqNpOnzWrV+2gAAAB6CvZs9D/Uztkw0Xjnj9yj
6oaNC8cG5zxmOb/RIDknanyKczewo1/vY0Wru6tLtWWbPK9XVOh9LgAAAEOg
DQ9Sk4Z2vLMpKs+07Hz5Q3V4Hu7W+1xmheScqLrzmlaNCtHvN8HvJVH0eDyF
hYWq2Lx185bxsTFTnB8AACClWNm59M4TzpyNgWmz/F2Z7/xcnZw7T3lXVsxy
fkNBck4IvRu4R7395INms3wqWiwW1ZZt8jScPKn3uQAAAAwk1HjnZveC3keL
jGSS295ZbcOGZXJE76OZEpJzQroc2ruBdLazGTgcjk05Oark/Epxsc/n0/to
AAAAxkLHO2uvCnben1lZNUW5TLjaog7PuCcYFyTnhGjvBu4wxyQ38su9o6SE
/dIrkzMGOAMAAKgEh1SMzHDC88iMKf7WPOW6s3E83TG2T1Dvc5kPknP86N1A
TcG5o98Uv4Pq6+rYxkBlcn7/8GHctAUAAOAKjnfWzNnonTFBgqLJv/OUOjxj
n2DskJzj90Ez727ggvHDp9Pp3Jybq9yyTZ4X8/MxwBkAACCMZvcCp+zc4zL4
Sm4Wj1+6c03dsHHxBL0niH9rjgWSc5w4ewPNcTeQBPvXKyqUuwJZcr5k69T7
aAAAAMYVHO88MK0Oz60TP7s9a/C6GW+fIH2wTzBWSM5xonsDNWOcx6f0PlZk
f27+o2rLNonN+yor8SUnAABARFL+nFT3bLTd+9Jr6IG06/sEtfcEEQBigeQc
J97eQIN/vUkMjj56vvCnWzdvUd4KJD/icrn0PhoAAIA5HBqf13Y7Cz0u48cA
7j7BvscPEJ2jh+QcjxB3A/U+VgTkd/S+ykrt3pM/N/9R76MBAACYBu3ZsLs3
hGdpyeCb3/xg5PAcCLVP8MYlJOfoITnHin52/fJ3mlYNE9wNbGlp2ZSTo120
bfBjAwAAGA1nJXfrhNA+SX7c4H+rFv9Nc0+w/bh78RnCc5SQnGPmfSrdDVTv
DdT7WBG4XK7tBQVYtA0AAJAgVrx985sf1A0bJDzb3Ub+W5WcjYRk7T3B8rsD
eh/NNJCcY3b+sqZVY1dg6jsj/04h3qqqUsVm8pxubNT7XAAAAKZEOx/s7g1z
NqQSNEnUeh8tpOB4kOsd6rLz5Q8NHmOMA8k5Zi+9o07Oe2r0PlMENptNG5vL
SkuXl5f1PhoAAIBZDc8vm7Fnw+b5VntP8CP3qN7nMgck59jcdHLuBn56U+9j
heNyuV7Mz9cm5y/v3KNTqQEAACB2rH77s9uz6jkbJDz3P9T7dBEIPU3qno1r
Vr0PZQ5IztGj/5Dxi+Pqu4EvVBn8HzjePXBAG5sbTp5EbAYAAEgQ7dnocWmH
1B0an9f7aOEcmhjSlp1ve2f1PpcJIDnHYHpWis0bk/OZT4ycnLl9Gq/t3Gn8
SSAAAAAGxwKAY3aJU3aWejaMmRDIqWZWVmnNWVV2vmXX+2gmgOQcg5N/0bRq
lImzc3ofKySPx/Nifn6uZhLd0NCQMX8vAwAAmFH+17PqORvk6X9ozCIVywDC
cLe67HzxhHdlRefDGR6Sc7T8flHYoy44H2zQ+1jhvL1/P/vFVcbm3x47qve5
AAAAMgcJokurAdqzoQnPh8bnjRmeicE5j7ZhwzI5ove5jA7JOVod/ZrtJ6+K
zgnD/o6w2WzsV1aZnF8pLvb5fHofDQAAINP0zixyVnIbeM4GHU93tUUdnvuM
vp9Cd0jO0dp1WB2bd1QbtueBu/eE9WnofTQAAIDMxO/ZsLuNmZyJU6472rJz
3+MHhj2wESA5R8U5wRlG19Fv2OT8VlWVqkkDfRoAAACpE7Jno824u1HoYJDL
H6rD8/UOvc9laEjOUTnYoGnV2CP6/cZMzm1Wq7a9+bWdO9GnAQAAkFK0Z8M6
pm7baJ8cnjfo6rHiv10TLtQL1tr1ORvtxw3bYWIESM6Rzc7RGRqqgnPdeWPG
ZpfLtS0vb1NOjio5o08DAAAgDehuFPP0bLgXn6ln01049o9f9+t9LuNCco7s
dKumVWOX6P7egMk5EAi8sXev9mJgfV2d3kcDAADICsGeDc2E55/ffkL+l96n
24CtQRRuXFI3bHSewni6UJCcI+AOo/vFcWN96q85d/asHJvl5Pzazp34xQUA
AEib4flldXJuoz0bX3qN2OfpePKIO57OgEc1AiTnCLjD6G469T4Wx/jY2La8
PFVyzs3JcTqdgQA+/QEAANKBFXLf/OYH9VZB8vS4DFjLxXi6mCA5R7CjWh2b
X35P7zNxrK6uvl5RoYzN7Dnd2Kj30QAAALJLcM6G3b2h5szy88iM3qfjoOPp
lJcEpcfm+VbvcxkRknM45hlGRxIyuxWofMpKS0miRsEZAAAg/WjPRvukumfD
eu/C9DO9j6ZGogJ3PB0ChBaScyj0s4UOo1Ml5z2if8Fon0hDQ0Obc3M35WyI
zeRHxsfGjHmTFwAAIBscGp9XD9lonRCuTM2sGOuuIDlM+d0BdXJuP37bO6v3
0QwHyTmk6VnuMDq9j6Xm8/l2lJRo+zTONDXpfTQAAIDsFZxc0f+QE54HpvU+
ndraeLqNs51v2Q2V8I0AyTkkEpLVdwPLSJw22qdQTU2NNja/sXcvqs0AAAC6
G11Yoj0bbeqejYYpw60nE4a71WXniydmVlaRKJSQnPnoMLoKdXI+2GC0Tx67
3a6Nzdvy8lwul95HAwAAAIqEZPWQOmmxIAnVeh9tg8E5j3Y8XeXoV3qfy1iQ
nLVoVbm1l3M30GDD6Dwez/aCAu3FQJvNZrSEDwAAkM2EgWnOhOf+h4b6+3pt
PN3Gho3LHxptgYu+kJy16DCKbfvVsXnXYb3PpfbugQPK/drsIT9oqN+GAAAA
MLOyKnTe11ae3/zmB0P9rf2Re1Rbdj7lumOoQ+oLyZnj05ucgnOXQ+9jbdDS
0qLcr82ewsJCj8ej99EAAABA7cL0M07PRts9x+ySoUq6Qk+TarCz8Nk5vQ9l
IEjOHLst6tj8QpWhvtqS1wWqkvOXn/Ya6ncfAAAAyJ679VidnMljsMWCv/n7
f2rLztiKIkNyVuNuPzl/2TiJdHl5uay0lLU3K2Pz0dpaQ8V7AAAAkJEgQRIy
ycmcyvOgUf69OHhIbEUJDclZjbP9pEL0LxgnlNbX1ZHYzPaeyLH5tZ07fT7D
zbcBAAAAJc5iQelpdi/ofbR1xX+7pl3GfdtruMG8ukBy3sD9vTSJbuMwurrz
xonNDoeDrQtUJuetm7c4ncaa+wEAAABcdLGgtuzced+9+MwgeWNtK8rGsvNw
t97nSolAjOTkzCqW0b+g3u9oanzQzN1+ovexgjweT1FREfnFUiXnc2fPZuiv
BwAAQAaiQ+paJ7RD6ozztzndiqIKz+3HSaI2zgmT4kxT046Skpge1i5Lvo31
BU83NmZafvY+lbafbGzVONhgnHfy3QMHWGZWJud9lZUG+RIVAAAAIgqwom7n
fW3PRumdJ3qfLui2d1Z7TzDf+bne50qyo7W1UgdstI9yfUasL2ixWPR+d5Pt
zCecu4HOCb2PFXTu7FnW3qxMztsLClyPPMbJ9gAAABANOqROVXYm/9l2r3fG
KN2zwvUOdXjuPGWoMSCJI8lZ/qf8aB7V7rmYXjDTkjNdt71H3aqxp0bvYwXd
vXt3W16e9heir68PsRkAAMBcAmxh38gMZ0jdlamZFUMs7et7/EBbdj40MaT3
uZLJ4/E4nc7xsbHov5VryE5J9C9L3lZGNQl09K8KO9UF5y9G9D4W5fP5ykpL
tesCf33kiBF+ZwEAAEAcllYDgt2trjyTZ2Ba76OJLGAIn51Th+eepoyKf7GL
e7ZGpjU5v/SOOja//J5B3kOLxaJdevLazp0YhwIAAGBqowtL3CF1h8bn9T4a
FWoZt0ECki4wlY7irtvu6Nf7WNQlW6d26cnWzVvGx8ay+fMWAADA7FjPxpF7
XvWQutYJEqeH55f1/YuevPXV1VW6jFsVnj87l81lZyRnatdh7bpt2vmsN5fL
JbU3q5Nzm9WazZ+0AAAAmYQOqdNOeDbGVm7L5Ii27Gx9NJm15TskZ/Gmk1Nw
PvOJ3scSl5aWXq+oUI1uJs/b+/frfTQAAABIGrrw+soU57bgoP7js/jLuK+2
6H0u3SA50wEanHXbft2LuspJKXJyfqW42OMxynZ7AAAASBDLxo5ZqeFZc1vw
6H2v7uG5/O6Adhl33+MHep9LH9menMenNLF5l3jyL7p/lnZ3dSmnN7PkvHXz
lqGhjJoGAwAAAAzdyq0tO0sNz/oejJadL55Ql52vd2TasIjoZHNypr/eBxs4
BWe91227XK4X8/OVE7bZr9GZpiZ9DwYAAACpELyOp93KrXfDM7vG+I9f92u7
nQfn9G8mSb+sTs5T36lXn5Dng2Z9Pw2Wl5dfr6hQrach33mrqkr3BhIAAABI
nZmVVWM2PNN14bRbo35D28b1DiTn7PKrJk6rhvt7fT8NpBXq6vWORUVFaG8G
AADIYKy62zuzyJmz0Tpx5J5XrwJacOPhcPfGmnM9idC3vTr/M336ZW9ynp4V
hTJ1cj7YIK716utCam9Wx2byazQ0NJSFX9YBAABkoTe/+UEdnttow/OXXr+O
rcXS0hbFJUFrLf12uDvb8kn2JucPmjkF5/EpHT8BxsfG5OnNyudMU1N2NuED
AABkJ07DM/nPK1PelRVdAsGqhJad5W6NtW/di8+yqps0S5Pz7By9CahKzr84
rmM8Jb8XdpeXqzIz2psBAACyEKfhmVWhB6Z1PNXgnEd7T1C4Zc+q6l6WJufT
ravCTnVydk7o2EFksVi0sRntzQAAANmG9RXTCc/ahue2e4fG53U8m3C9Q52c
L55wLz7LnvCcjcnZ+1QqOG+cqrHbouOJbDabNjZvzs3F9GYAAIDsFGATnnnh
uXdGt8zW9/iBaiUKefKdn+t1nvTLxuR85hPNMLpddAe3TpxOp9TerE7O586e
RXszAABANqMNz9ohdZ333f5VvSKCcM2qLTvPrKxmSXNp1iVn/4Io7FH3aew6
rNdxfD7fjpIS5boT9rx74ECWfAYCAABAKHR/H3fCc/9DvcprNs+32m7n8rsD
WZJbsio508+wP3VqRmq8Kn56U5/zBAIkIb+Q+xPVU1RURBI1Cs4AAADZjOWA
L71+2rOhadvI/1q3WcrCZ+fUW1E6T9G5H1kQXbIqOYt+v1Rw3tiq8fJ7eh3n
TFMT+cirYvPWzVucTmeWfOEGAAAAYbDbgg1TPs5Wbuu9ZveCLoHB+miSW3ZO
/0nSL3uSM/0q6PxlTsG5y6HLeRwOB/vgq5Jzm9Wa+V+wAQAAQNToCr9BD+e2
YPvk8PyyLkeSys4bwzMrO+tymjTKnuRMC87PV6pjs04FZ5fLtb2ggPU2K2Pz
+4d167gGAAAAw1paDQh2t3bOhtDjmlnRoez8kXtUO2SjcvSrjP9H8yxKzrTg
vEtbcE7/F0fkQ727vFy+FSjH5rLSUp/Pl/bjAAAAgAnQ/ded99XhuXVCr/Uo
2Vl2zpbk7PeLL1SpY/NL7+jSym6xWFhsVibnF/PzXS5XNrTWAwAAQHwuTD/j
9GxY7735zQ/pL/bSsrOm2znjy87ZkpxDdDinP6e2tLRsysnRJucvP+1d0m00
IwAAAJgDCcmcIXVt90ioTn+MoGVn5YSNLCg7Z0VyDo7U2Bibt+1Pf4F3aGho
6+YtcmyWk/Mfft+Y2V+gAQAAQLLw16Nc/PvowlI640QgRNk5s4dsZEVyDtHh
nOaw6vF4ioqKlLGZJee39+/P4C/NAAAAILnoepQeFyc897jSX+8N2e2coQ2o
mZ+cuTOcX3onzbHZ5/O9XlGhis3k2VFSgqUnAAAAEBN6W7B9ktPznN7bgsGy
s6phI6PLzpmdnMPMcE5zVLVYLNpdgdvy8sbHxhCaAQAAIHpsPUqze4F7W7D0
zpM0n4dbdp5ZWc3ITtTMTs6if8EIBedzZ89qYzN5uru60nkMAAAAyCQkJHN6
NqTdguk8Bne2c77z83SeIW0yODnTWu6ZT3QvODscjs25udrY3HDyZBpPAQAA
ABmIc1uwdSL9uwU5ZeeLJ9yLz9J5hvTI4OQsep+KQoW64Pzye7TzOV3YrkDt
im16KxC9zQAAAJAYzm1B1sJxZSqd/RLWR5PaIRvCLXvmZZ1MTs6nW7kjNdL2
9n0+X1lpqXbFNm4FAgAAQLKEvC3Y/zCdqyJo2VnVsyGVnTOs2zljk/PsnFRw
3hibd1Sn7ROIBON3DxzQrth+MT9/fGwsXacAAACATMZuC9LdgryGZ2FkJm3J
p+/xA07Zebg7wwqFGZucT/6F0+H86c20vf3TjY3cW4F2uz1tZwAAAIBsEAi1
W9B678g9bxqqvizAC9esG5NzvdB+PM37WVItM5Mzt+C825K2X7juri5ubP7D
7xsz7CsvAAAAMAhh0EOvB/IWc6fnALTsrBmyIQx3p+etp0dmJucPmjkF55vO
9CTnoaGhbXl52thcXV2dSV9zAQAAgKEsrQYEu5szaiONi7mF6x3q5Nx+/LZ3
NmMqhxmYnN3fi0KZtuCcnl8yl8tVVFSkjc27y8t9Pl9ajgAAAABZyu1fFTrv
c24L9rhmVtJxXXBwzsPpdr7ekfq3nCYZmJwPNnBGatx0puEts2Ea2hl0hYWF
JFGn4QAAAACQtVizsWNWGrWhrTynftRGsNtZW3a+cKzv8YOUvum0ybTkPD7F
KTjvqUnDW15dXWXDNFTJeevmLU6nEzPoAAAAID3oYm5VwzOrQg960vDWb3tn
Od3O16yZkYQyLTnvO6rpcN4lOifS8Jbr6+q0M+jIc8nWmRmfKgAAAGAKJHj8
/PYTTs+G9d6b3/yQhrcuDHdry87WR5OpftNpkFHJmSRkFpWVyflgQxrecpvV
uiknR5ucTzc2puGtAwAAACgF2GLuNk3PRtu9ZvdCqt+6e/EZLTurKs+fnUv1
202DjEnOtK6726LpcC4T3d+nuuTrcDgwTAMAAAAMhY7a6H/IaXhun/zS609d
Hynrdv7R7avasvMp150UvdG0yZjkTLecaC8G/qop1W92fGxse0EBd5iG6F9A
cgYAAAC9zKysClem1A3PJDx33h9dWErd2w2wsvPFE+rw3NOUzoXgqZAZyZkG
1JfeWRV2bkzOFeL0bErfrsfj2VFSoo3NRUVF5H8hNgMAAIBeWO13eH5ZPWqj
TXp6XN6VlZSm2PK7A3SNoLVW2bZxaGLI1AEpM5Kz2NHPWX1y8i8pfZs+n+/1
igrtDLoX8/OdznQMwQMAAACI6ML0M85ibhKeB6ZTWwH2+4XLH6rLzp2naGI3
7cyxTEjO/gXx+UpNct4jep+m7m2SX/Hq6mruiu2+vr7UvV0AAACA6LGEemh8
nnNbkDyDnhRF2FVJ7f1b2m7nfOfnZs3N5k/O9CN/5hNOwfn85ZS+3fq6Om5s
/nPzH1P6dgEAAADi8Nytx5wJz9Z7pXeepK59grxmoa9ZHZ4vnnAvPjNpz4bZ
k7M4O0f7mVWxedt+0e9P3ds8d/astkmDPEdra036aQAAAAAZLMBC7MA0p23D
eq9hype6APORe5SzGGW4O0VvLtVMn5w/aOYUnLscqXuDfX19uTk52uT89v79
S6um7doBAACATOddWRHsbm7P84XpZ6l7u8LVFu1VwcE5U85SMHdy5u7a3lGd
ujc4NDS0LS9Puyhwd3m5z+dDbAYAAAAjc/s1c+rYw4Y8p+aNOp480nY7m3Qf
t7mT8y+OcwrON1M114KNbtYuCnyluNjj8Zj3ligAAABkAzanbnRhSei8zwnP
KRvyTBca3rjE3cdturKziZMzScja2LzvaIryKxvdzGKzMjm/mJ9PEjVCMwAA
ABgfC8+9M4vqIc/W4JDnmZWUDKqjcZ22amzs2TDhYhSTJmda4N1RrUnOZbR/
IwV8Pl9ZaSn5KKmS89bNW4aGhlBtBgAAAHNpdi+o59SxUXV2t3dlJblvi91P
/Mev+zfWnOvNuBjFpMlZbO3lFJw/aE5FhF1aWtpXWblJuhUoh2f2/e6uLnP9
cgMAAACIUpqlQ561ZWcr3ZCSinhDV4FfPLFecLbWssUo7sUUXk5MOlMmZ+9T
uuhE2KXetT07l/TkzDaeKNOy/Py5+Y+oNQMAAIB55X89yyk7k28HPcl9Q6xL
5NDE0Hq3hhyhb9lNFKhMmZzrzmti86t0H0oK1NfVKTs05Oe3x46m4s0BAAAA
pAdLsyQkB9Pyxudnt2dTUXnmLEZpP37bO2uW8Gy+5Oz+XhQqVoWdqtUn5Bc3
6R/zM01Nm3JytMm5uroaTRoAAACQAdY2pIxp254Pjc8nN/CQqGbzfMuZUHe9
A8k5VQ42SLF5Y83505tJ/4DbbDY5MyuT8xt79y4tpWRmCwAAAECaBeQNKbzK
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
tdOx/Nobeudr/nQFH5Gc4Tv9BHh2ZDjaHZ2Gvo6Z0vX0LF1QdWllxn4JuftL
TD167fbmyyPuNojZKVDHL/qxf/rbesPEyKIfd5/5SPVUU6y2ha4bH+noiM/G
MVPzdOk47StXzDrkYOSQvr1p0/Pbt7c0N0uSv9jbK7dFvZhk/BsFZ/iGs5by
y0ed7ULWbws/9IxeIy59IXkqKqvJffK9ui95Z9AAuYDkjNzhrdvIG4Hrg3V9
pz3TDHWH8zx6pGfM0pEeDzXxUPVLF6b4ICqvLN7+ZMKdjXj6mru4RybWnU7S
7OH9d3/cCtVqoqInV+smEOrVmRCabmJiQhWNA4GA7qmorq5eV1npnZTnbTn2
1JBn2IE607FZzdeTI5TjbGtte+t3R+lG1qIvq4NjTttwR8Cdx7ei2umRSEtb
cpKZfVNRWbUrF+zzMHIfyRlWiAbpdzpTn2loGLynFvGoOP+nXf3n5PvqLVoK
9sk85geXByQ2UWd6TmKiYrUuU3tzdXy9OtIHsurc9c2XR+Sw3xoJqpK1LmcV
8smd1cXe3q6uLhWMt23dqoPxFx5+eGlxcXyVeNZF3pL3J88/Hkti/+Ljj6tl
3/a86HZZ9Pf3SyCM2dyTP1uER266IXnHr5yQ7KwL99T0eJz2qByZ1vfUFqdX
Wb7vxSuhwq3jw0okZ1hKtXY4PdJvvubMDUzX2neJhnwLT5xWy+Jx240xPhlS
GyNKQP3Xs8NuH7Vk1/RuNT6nenXMeyROq6H7q2eK1oHhcb8fyxwiUdnbSLwk
bte87DdXLJraOkQ1Ie/csWN/e7vE+/PnzyfaaE+9SipcwWDoyj+c5dpePupE
VndFuKc88TgDCdkda5yqtXzH1sNOv8fwjYI+EbAfyRm20ytIu6t2ZK5NOn4c
3OV8L4nuZ7rkW7cP9kmeL8DeaS1J5fbanUmJo6pM7e7qoiYnZjlU74/b7WXG
8Xp/Vh+43LZt61ZvZ0V8MTlz8dhbPd5dX6/jsYRA7x6jBXvFxXNezg986DYk
q4l77lpwmQvGM3Upy/dtfNVZ/mLgQ312+MsO8gPJGfkhFFdT6hkb/8VAT1XP
cWcFPNUpnbm6tFoWT/97+OdOS8nbR8reO1bXd1onat8eHb/F3DFjavU6VLvz
E72V6owu+pFkvPF/WX6IclljQ4O3syK9yXlhyTLJxqp0/JMfb2tpbj5w4MCJ
4yc+ufhmoj/rFOhCFjGLfA7fcLssWg+7NeSVNZKQRxc8fmZB2dUF5TIyn5ZX
RuvJKidH1r5QZ4ecbGhoaOhib68M+u1tQXK2i1xZ6hJzevaQmH72jj6Hh0IS
X6dl6ezUpRtqo+P1Bm+NWq3v4d3DpQDvNd4fecY19FT7x84ro09f+DjaU53p
YvXJobhjKVz729u968LNNTnrurHOxocOHJRsLM9jTpNtMBjfbywvMwszG8dS
8VgS6ctH3T7kJ+qmFrWYeb5ey6JieTEiJ2XD4uJ0J+eVTu1aDuBHTU5c/+Np
p7g9ddkW2hNXusiN6dubNqm/6chrRr8PB0ZIznbp6upSt7Cvbtjg97HYSmfp
cKQu3T7Y5/Z4HGtPf7/0//70rmeflPAgp0zecLL6jLMU1RIfkTL18u4/yPFI
wleh2t/HKhckuS+riYqxuTod9erl7w6TBDR52kmybPJDDz74WFnZExUVEgBU
T0Vba1tnZ6dkY+cF/tT+IPGTwAq2dDyNvHa4eMVJoa+94ZRtJZROVY+Tro2c
KBKvVMm5fFHRvJPzVDF598tOZTuy5IX3yRPpIheOupSOdHRwRViB5GwXknMa
zTizfnwyJJF1V/85Z7twVZqezxYt//Of36j4zJJ7H52WnE16P2JCtapUv9Op
5ieSq8MGt29Vrz567bbk6ucufuL2gaiF9WYrWcvHZ+NnsER3d/e6ykq5v/9g
82YJxvv27ZNb/KlTp9Tfl5Pc6wt9Ul44slfIwIfRurGk0O83OJvrSSh1s3GS
RohUysIp1ZyfcrK6NySP3CzYv4JlHzVn65Cc7UJyzrREtc3A9UGJrBJc3Th9
+OdGAfg3P5PALOeruKgoWc159jF9LWvvGzpXR9b9qOs7Lbm686MPJDTqGlHB
Sn7Tv3Zn0hut3cVAIt0gr1wt3GW947FomBbbWKUqxn/udgKnDsaqaOxsqLcm
8fJumVobOUHNeaXbk/zId5zl4H7UFP7vg06Y91SSw0Rln1Bztg7J2S4k5+wL
eRoGvE9rEqdP3hhyG6ff6XSyq4RYb4Fasm5qNed5t4hEv4skfNUHEonWZe8d
U/3VB4b+fnZk+Nqd2AWNC+qmyXK+SCgYDF8ddoKlpOLX3piWip+om1rPbfVs
6Tdry1kkqDlLQpbDluOfvhZc8skFyDJqztYhOduF5Jz71Pp4boH6nU7V5yxj
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
Fn/35HWWhs99JGdrcIkBAGC54OCptta21tovy61c7ulqH1I97nr2yc/WvSwf
wJ+VcxbJOcdxiQEAkDfktr7nxXq5cScZjQdOszNpziI55zguMQAA8kyie3bI
eANT+IXkbAUuMQAAAN+RnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEA
AAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFy
BgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADA
BMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEA
AAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFy
BgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADA
BMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEA
AAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFy
BgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADA
BMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEA
AAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFy
BgAAAEyQnAEAAAATJGcAAADABMkZAAAAMEFyBgAAAEyQnAEAAAATJGcAAADA
BMkZAAAAMEFyBgAAAEyQnAEAAAATX1mzZvWqVTImJib8PhYAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAJBx/w+x6Z7c
    "], {{0, 932}, {958, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{958, 932},
  PlotRange->{{0, 958}, {0, 932}}]], "Output",ExpressionUUID->"39acd6ca-94e5-\
456d-86b4-213fab3d9516"],

Cell[TextData[{
 StyleBox["79.",
  FontWeight->"Bold"],
 StyleBox["\tGraphs of logarithmic functions",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "The following figure shows the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{
      SubscriptBox["log", "2"], "x"}]}], ",", " ", 
    RowBox[{"y", "=", 
     RowBox[{
      SubscriptBox["log", "4"], "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "16e029cb-e210-42d0-a422-3186fa299fc5"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "10"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "c5a99da7-158d-46f5-ba6f-b0155691e662"],
 ". Match each curve with the correct function. "
}], "Problem",ExpressionUUID->"5baf72f1-45ac-4d48-86b7-78de0dd5e795"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Q1sW1W+9/twD5q5qgR6dB4NpU7ShEKaMqkISidwRumTaSfllKvcXEjL
U0TSVnRyGJhJmcKMBVwidYSuzylSw4BIyltbiSkpHTWlasiEpohIT4OalgRx
OPXQp1OMGMVkIDVtwRmn4Njed20vZ2fHdhw7cbz3tr8frbE6ieNskxf/stb6
/9dNv9ix4Zf/R15e3u/+T3GzYduTa3/7223/78b/Jv7P//zN73718G8e+rf/
6zf2hx5+6Lf/8ot/Em98Rdy8IP6n/lsBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYE1+v9/oSwAAAADiCwaDRzo7jb4KAAAAID6X
y7W9udnoqwAAAADiCIVCBzs6VldViX8YfS0AAACwAJEbA4FAaPjvrtFLY4Fg
/DtNjLvdbnEHcc9gcIb7JM1ut+fblng8nnk+DgAAALLWmM/3pfPUuyc+PvRU
Xd299/5oiW3JksWFRT/501/j3Dk4+uf6H4r3ipF3z56BsYl5fvI11dUir/b2
9s7zcQAAAJCVQopy/j/+RQZUMYqLiuQ/1Dj68z0jE8GoOytn27U7iHHN8x/M
ZyHf6/Xm22wir+7a9ez8ngcAAACyUyAQUIKjX3zlUSbGfc5j9/5oiT6OPvHZ
WPSK/0j36sVT9/lB+R+iMm1KTp48KaKyGPdv2jTfZwIAAIAsFQqPYJiIo/rI
mtdyMvb+59s2599YKUJmvm3JtfZuz/eBOX/q1tZWOb+6vKRk/lthAQAAkPVE
cP3i5Y1aXl16XcvA2EScFf+R7h3XL5b7Aebz6TY3Nsr5VTGcTud8HgoAAAC5
QI2m01f8Hx28EjXzKSdjhx5bLkKmeK+6o2CuVpaVybCab7Md7OiY79UDAAAg
F+g6AIRnUP8cJ5H6P91fYCu44Z5Do1fn/HlcLpc2uSqG3W6nCysAAABmJSLj
N0cf11dUnR+P6bManoPN+/ne+RRbHenszLdN5dXVVVXzvXQAAADkABFNfc5j
srGV3Biwa/gfUfc537ZZ3OHRwSvzmQ8NnxRg0/Kq+LfX62WKFQAAAImpeTG8
3K81Zd3SdWHaWVfjgzuuXxzbnTVV62pq9PsB8m1L+vr65nnxAAAAyAWBQGDo
seUiscq8eq29Wz2kdfK9X7y8UbzrnrPzqrTy+XwFaicrmz6ytra2puX6AQAA
kPU+PvTUottWrF6sxki5hTXyjvDk6rS3zMnAwIA+qcrR2NDAfgAAAAAkRXdw
QMEN9xz++jtFHt7atlnuEJhne//2trbYvLqyrIxTAwAAAJCU6V2tnvhsTF39
D4dYeQbrPINlU1OTvjmAtoXV5XIxxQoAAIBZiXR6/j/+RcurP/nTX8Ub5abW
ebYFUMKbV28tLY2dXxV59bU9bWm5fgAAAGS9b44+rpVcXfP8Bz7nMfGPvJ/v
+XrejxzVeVWfV69b9aAyMZ6GqwcAAEC2kwFVDhEjf7V+xaLbVuw+Nzb/R66r
rY3qDCBHcZHa8bXr7OdEVgAAACSmrviHWwFokVUkyWue/2D+W0ujjmHVT67K
T6QezDr/JwAAAICsNzGuL7lael3LwNjE/B+1paUl3Hk1TmSVn6i4qMjn81F1
BQAAgARC4YNZv3h5o5ZXHx2c1wEBkt/vX1lWJsJqgrwqxsFX2kmrAAAASCyk
K7m61t497UjWuTrS2SknVxPn1braWhqxAgAAYFYir8rzAk740vOAG+rrZVhN
nFfFcDqd6fmUAAAAyFb+T/cX2OROgLQ8nsvlkm0BksmrTz35ZFo+KQAAALKV
PC/gmuc/SNfSvMPh0CZXZ82rt5aW+nxpmtUFAABA1vGfeU6eDuD5PpCWvKqv
tEomr4pxpLOTqisAAADE8jmP3fujJXLbaromV7u6urQ+q/q8urSwcFVFRdy8
Wld3b1o+NQAAAKwrFJ75DASmJlGDo2d2XL84/8bKtBxlpbl/0yb90QDhYaur
rZVvWV1VdWtpaVReFcPl+t9MsQIAAOQu/6dv3FckoqkYW7ouiMgqw2pxUdpq
rCSt0koblZWVvb29J//X/5L/V6RZj8fz2I4dUXn1md/vTONlAAAAwFr8Z56T
7VVFQBXjh/+68d4fqYvyMrum8RM5HA4tqS4tLNy161lZS6Xl1Q319Ur4hILT
p0+vqa7W8urKsjK/35/GKwEAAICFaHlVP0RYTfNniVRa2eQ8qsvl0s5alXlV
vEu8Xbt/IBB4bU/b8pISeT1vHevh7AAAAIAcNT644/rFWlLNW//rbs/VtO8X
faenR4TSVRUVXV1dUe+azKuR+VUpFB5ut/uRhx8WV6WPsgAAAMgdMhYqwdFT
755461jPmfOjISVt3QD0tm3d0vxgm/hEgUAg6l1aXr3vvvviXqG4ttVVVSK7
pv2qAAAAYH4yoEaC68IJjsrPEkvbv/o/4+VVZbJ9AQcHAAAAYIGIpBo7raqZ
Na8CAAAABiKvAgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAA
ADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOv
AgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAAADM
jLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAA
ADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOv
AgAAwMzIqwAAADAz8ioAAADMjLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAAADM
jLwKAAAAMyOvAgAAwMzIqwAAADAz8ioAALkiOPrFVx5lYjwQCBh9KUAKyKsA
AOSE4Oj+AtviwqJ7zl4JBoNGXw2QAvIqAABZL6Qo3xx9XIRVMfJecxp9OUBq
yKsAAGS/8cEd1y+WefVae/dYgPlVWAl5FQCA7BZSlKHHli+6bcXqxeorft7P
93i+D7AlABZCXgUAIMuNdBcXFcnJVTEKbrjnhE8NsYBVkFcBAMhmwdE/1/9Q
C6ti5N9Y+fKIj7wKCyGvAgCQxfxnnhMZddFtK8RrvRZZHx28Ql6FhZBXAQDI
Wv5P9xfY9EmVFgGwIvIqAADZ6ouXN8oNAE86HtbnVVoEwFrIqwAAZKfxwXt/
tESmU2Wke9r8Ki0CYCnkVQAAsk8gEBh6bLnsBnD46+/0/VdpEQDLIa8CAJCF
nPvyberk6jXPf6DOo07vEkCLAFgLeRUAgGwzmU6XXtcyMDah6KZbaREAKyKv
AgCQZb45+rgMpVu6LihKZN1f1l7RIgBWRF4FACCr+D/dcf3i4qKivJ/vHZmY
qqiSjVhpEQArIq8CAJA1gsHg+bbNMpHuPjc2bcV/pHv14iW0CIAVkVcBAMge
k6H0Wnu3PouqwZUWAbAs8ioAAFliYlyWWUV6WEUJF2FpZ13RIgAWQl4FACA7
aDtUt3RdiN2bqm4V+I9/oUUArIi8CgBANgiO7i+wySB6856jL7ywu72tTT9e
29Mmj7uiRQAsh7wKAIDVhXQ9rJIftAiAVZBXAQCwvMlaqrz1v96169mPDz3V
/GBb3Ftt/2q4RcBeWgTAEsirAABYWkhRhh5bXmBTNwM88dnYWCAoRiAQ+Dq8
Z1W7FW/xfemkRQCsiLwKAICl+ZzHiovC86UNb4pQmuiuuj2uWosA5ldhfuRV
AAAsLNylSjsgIEFeDU2/My0CYCHkVQAArOvcoT2LbluxevGSvIY3kyme+uLl
jbQIgOWQVwEAsKrxwf0FNllClXhyVQqFQlFtBGgRAEsgrwIAYFFDjy3Pv7FS
vIgnGTvVpf+z7dPmV3++hxYBMD/yKgAAVuQ/85zcCSBexHefG0s2c450608N
kC0CAJMjrwIAYD2TDVfVzPnf/y2FzDnSLSJuVMnVAl4nkA7kVQAArCU4emZ/
gU2bXM2/sTLJ+VXfl8437ivSPjCyJWD9r7s9V9kSADMjrwIAYBkT47GBUxtb
ui7EL7kKf9StpaXiPrJTa+wQoVd8OKkV5kReBQDAKkQcPXdoz8FX2l/sfFu7
PXDggLgV46WjH8VWXcn2qqfePfHanrbYj5K34i3ivcyywrTIqwAAWIJMniKy
hsJHrCq6Wylu5/9Q+EOi7i9vQ5OPKd/CwQEwLfIqAAAAzIy8CgAAADMjrwIA
AMDMyKsAAAAwM/IqAAAAzIy8CgAAADMjrwIAAMDMyKsAAAAwM/IqAAAAzIy8
CgAAMsnj8Rh9CbAY8ioAAFhofr//5MmTLS0tq6uqVpaVBQIBo68IVkJeBQAA
C8Tj8Rzs6GhqalpeUiLCRr7Nlm8Tt0uGhoaMvjRYCXkVAACkSygU8vv9Io46
HI51NTUyY+iHzKutra3BYNDoi4VlkFcBAMD8eTyerq6u7c3NK8vKRK4osNli
w6oWWUWUNfp6YSXkVQAAMGcul6u9rW1Dff3SwkI5d6qfR50pr+bbbFRdIXnk
VQAAkBK/39/X19fS0lJZWRm10D9TRo0aq6uqnE5nKBQy+qnAGsirAABgViJb
asVTNy9blh9vuT/hnKrtpuLixoaGfXv3ut1uNq8iJeRVAACQgNPpbG1traut
TWkGVRurKirsdntvb6/P5zP6qcCqyKsAACCKXPF/6sknRdrUplKTz6sFNtuG
+vr2tjaRdY1+KsgG5FUAACB5PJ4jnZ1yxX/mUqkZY+rKsrLtzc3iEbxeLyv+
SCPyKgAAOSsUJmv8wyv+tpRW/MP3t62rqXE4HENDQ36/3+gnhOxEXgUAIAeJ
bDkwMCAPSF1cWJTqKC4q2tzYKIunjH4qyH7kVQAAcofX6z3S2Sm7+st51JRi
6u3l5Xa7/TjFU8gs8ioAAFnP7Xbv27v3/k2bwl391UX/lGLqr9av+O1rbwx8
8lkgEDD6qSAXkVcBAMhWsa2o5Eh+xf/gK+2u0UuBSUY/IeQo8ioAAFkjFAr5
/f7+/v6Wlpaf3nnnHKZSby8vf2zHDv2KP2dQwXDkVQAAsoCIl+/09MiNqZOV
+8lOpYqxprpa1vjThwomRF4FAMC69B1To85InTWsFhcV1dXdq634G/1UgBmR
VwEAsJzp9VMznjwVN6beWlr6yMMPv3WsRwmOipgaUhTmVGFy5FUAACxBNvaX
9VNz6Jh6e3l5S0vLqXdPaBmVmAqrIK8CAGByTqfT4XCsrqqSK/4pxdQ11dUi
4mqtqMiosCLyKgAAJiSCpTx/qrKyUtZPJV7lT7AxlalUWB15FQAA8/D7/X19
fXa7XZb5xx0JYuq2rVuOdHZ6PB6FFX9kEfIqAACG07pRLS8pmal4aqa8emtp
qfhA8eHiQeiViqxEXgUAwBChUMjr9eq6US2JGonz6u3l5c/8fmd/f38wGCSm
IruRVwEAyDDZNLWxoUHEVH271GTy6uqqKofDodVPKZw/hRxAXgUAIDNETD3Y
0SFi6tLCQv0RVDNFVn1MXVdT097W5nQ6FTamIveQVwEAWFD6mBo7iRqVS6e/
y7ahvn7f3r1ut9voJwEYibwKAEDahUIhEVPlEVQF4VZUcZNqvLxqE7F2c2Oj
iLjiEcTjGP1UAOORVwEASCMZUzfU14eX+20zz51G59WbioubmpqOdHZ6vV5C
KqBHXgUAYP5ETH399dfFi2lBTExNHFlvXrZMxNSuri4RU41+EoBJkVcBAJgz
GVM31NfLEqpkhoypy0tKtjc3H+/tVcZ8FE8BiZFXAQBIlSyhEjG1YOap1LhD
9vbv6+vz+/1KuBUVYRWYFXkVAIAkeb1eEVM3NzbqG1IlE1NXlpU9tmNHb29v
JKZSRQWkgrwKAEBi8hSqbVu3hBtS2ZI8hUrGVLvdfurdE1pvfwBzQF4FACAu
n88nD0u9qbhYH01nzasypp48edLv94c4fwqYN/IqAAB6ImS+09MjYurykpKZ
omncN8qY2tfXFwgEWPEH0oi8CgCAiJcipp5698RjO3aEY2r8Dv9xO1PpF/2J
qcBCIK8CAHKZSJinT59uaWkRsXO201GnvUs2pJKV/iz6AwuKvAoAyE1Op9Ph
cKyqqJhpfT/u0r+Mqe/09MhKfwAZQF4FAOQUl8vV3ta2uqoqqhtVgvop7RQq
EVN9Pp/RzwDIOeRVAEDWC4VCHo9n3969dbW1CZpQxRRV2bTDUompgIHIqwCA
LCZbp953331RfVMTt/dfWli4ubFRfKD4cKOfAQDyKgAgC/n9/t7e3u3NzcVF
Rfm6I1Nnzasb6utff/11j8dj9DMAMIW8CgDIGrLY3263xy32j7voL0ddbW17
W5uIqcFg0OgnASAaeRUAkAVcLpfD4aisrEycS6PG6qqq1tZW8bHyQeieCpgT
eRUAYFFJVlHFzK/aVlVUiHA78MlngUDA6CcB5CKn0zmUCvFjLn/A19XUpPSB
AsWSAABDiBegI52dmxsbC6YfRJU4qcqDqAYGBkTQDYYZ/TyAHLW6qiruEXJp
H+KzuN1uftgBABkjXnROvXtie3Pz8pISbbJ01qr/m4qLm5qajvf20uEfMAmZ
VzMTWbUNPwAALCh5FtXKsrKC6QE1wXmpIsrev2nTwY4OelIBZiP+hKyrrU1+
hA/4UH/Gxd+qKX2gGG632+inCwDIWtr21HU1NfmRdf9EYVXmVXEfcX/xUbxI
AVnj5MmT1FsBAEzF5/N1dXVtbmxcWlgYM2s645BVVC6XiyJ/IMvQHwAAYB5D
Q0N2u13bnprg1FRtiDuLD+nv7w+FGf0MAKQfeRUAYDi3293e1qaVYCTRk0o9
MrWpqamrq8vv91P8C2Q38ioAwCiyLVVjQ0OSMVU7i4ojU4GcQl4FAGSeft0/
yT7/lZWV+rOoAOQO8ioAIGM8Ho9c95eV/snEVLk9VTb5N/ryARiDvAoAWGh+
v7+rq6uxoSHcPdWWTEwV99zc2Hiks5OzFAGQVwEAC8fpdLa0tKwsK8tPOqmu
qa5ub2tjeyoADXkVAJBe+j7/Sdf720SmferJJ4eGhiIPYuxzAGAm5FUAQLqI
pHry5Mntzc1LCwuTTKrino0NDe/09LDuD2Am5FUAwPy53e7W1tbKysrk6/1X
V1XJdX+mUgEkRl4FAMyZLKS6f9OmJPemavX+rPsDSB55FQCQqlAo5HK5HA7H
yrKy5HeoilhLvT+AOSCvAgCSJ0+kqqutlQ1Uk1n6/+mdd7a2trrdbqOvHYBV
kVcBAMmQnamWl5TIzlQyrCbIqzcVF29vbh4YGAgGg0ZfOwBrI68CABLw+XwH
OzrqamunL+4vSZBX19XU7Nu71+v1klQBpAV5FQAQl9PptNvtt5aWxs2lsXl1
ZVlZS0uL+CijLxxAtiGvAgA0oVBITqiuq6kp0C36x51HnXyXbUN9/ZHOTr/f
Lz7c6GcAIAuRVwEAkrZDVZbz68Nq3Ly6sqzM4XC4XC6jLxxAliOvAkCOiyr5
j7tJdfrbbZsbG9/p6VEnVI2+eAC5gLwKADnL5XK1tLRoO1Rj51Gj3r6qooLO
VAAyj7wKALlGN6EaPYkat66qwGbbtnXL8d7eQCDAhCqAzCOvAkDucLvd8lCq
2O2pcfNqZWUlE6oADEdeBYCsFwwGe3t7GxsaREyNuzc1Kq+Ku4k7iw+h3h+A
GZBXASCLeTye9ra2ysrKmbtRTRu3l5czoQrAbMirAJCVhoaGtjc3Ly0snOm8
1KjI2tjQQMk/AHMirwJANtG6/WtL/4nHyrIyOaFKTAVgWuRVAMgOInM+8/ud
In9q3f4TJ9UN9fVdXV1+vz8YDBp97QCQCHkVACwtFAqdeveErKWa9UQqMZaX
lLS0tHAoFQALIa8CgEV5vd59e/eurqoKp9M4hf9RSXVdTc3Bjg6fz6eEU67R
lw8AySKvAoC1iKjpcrmeevLJ5SUlcSdRo/LqTcXF25ubh4aGjL5wAJgj8ioA
WIVIqrKN6uLComTGqoqK9rY2j8dj9IUDwLyQVwHA/LSlf/HrOpmkev+mTfL4
VKMvHADSgLwKAGbmcrlaWlpuXrZMLvQnzquLblvxzO93ig9hcyqAbEJeBQAT
0p2gGl05FTeprqmuPvhKuzLmY04VQPYhrwKAqfh8vtdffz1c9W+LW+kflVS3
bd3S398fUhSRVOmkCiArkVcBwCTcbrfD4ZAN/+NW+uvz6q2lpc/8fqf4EKOv
GgAWHHkVAAw3NDTU1NS0tLAwNp3GvmVNdfWBAwdkG1UAyAXkVQAwSjAYfKen
p662Nqrbf9xzqcR95NK/0VcNAJlGXgWAzJP9qSorK+NG06iYurKsTC79U/UP
IDeRVwEgk+Qm1eUlJbMmVTFWV1WJWBs5QdXoKwcAo5BXASAznE7n9uZmuUl1
1qR6/6ZNvb29Rl8yAJgCeRUAFlQoFOrr69tQXz9Tfyr9uHnZMrvdrjb8DzGf
CgAR5FUAWCA+n+9gR8ea6mq5DVULq7F5Vbz39vLy1tZWj8ejhCOu0dcOACZC
XgWAtBOxs72tbWVZmVb4r2+mGpVX19XUiFjr9/uNvmoAMCnyKgCkkdvtbmlp
uXnZsriL/lF5tbGh4dS7JziUCgASI68CQFo4nU59z/+Z26guEfex2+3i/gpV
/wCQBPIqAMxTX1/f/Zs2zbpJVYyVZWW7dj3r8XiIqQCQPPIqAMxNMBjs6upa
V1MTFVPj5lWtk2qIOVUASBF5FQBS5ff7Dxw4ICJo3FqqqLxaV1v7Tk8Pm1QB
YM7IqwCQPK/XqxX+R02ixubVpqamoaEhoy8ZACyPvAoAyfB4PA6H49bS0qh9
qrHl/4tuWyF7/ht9yQCQJcirAJBAKBTSWlQl6EylL6cKDf89EAgYfeEAkD3I
qwAwE5fLtb25WbaomqmZqvz3qooKWU4VDAYJqwCQXuRVAIglm6nqT6eaaayu
qpKnU3GIKgAsEPIqAOgNDQ01NjTMGlO1wn+jrxcAsh95FQCU8D7Vvr4+EUFn
nVMVdxCBdmBggAlVAMgM8iqAHCdi5zs9PetqagrUqn/bTOeoyqTa1NTkdDpJ
qgCQSeRVADlLd0DVjOdSybG0sJAWVQBgFPIqgBwkkuqRzk55QFXic1RvXras
paXF7XYbfckAkLvIqwByit/vP9jRIZJq3BNU9Xl1eUmJw+HweDxGXzIA5Dry
KoAckUxSlWNlWVlra6vX62WfKgCYAXkVQNbTkuriwqLE4/byctn23+hLBgBM
Ia8CyGIyqVZWVorfcrMmVXFPkioAmBB5FUBW0idVOWZKqj+98055QJXRlwwA
iI+8CiDLxCbVmfLqmurqI52dJFUAMDnyKoCsEQwGtYqq2B6qsUlV3J96KgAw
P/IqgCwQ2091prwqkyqF/wBgIeRVAJYmkmdXV1d4TtWW+IwqkVTfOtYTCASM
vmQAQGrIqwAsSiTVd3p65Gmq8vfYTHlVpFmRaUVSZVIVAKyIvArAinp7e0VS
jV39j8qrIqkypwoAVkdeBWAtAwMDdbW1+TZb7Iq/PrKKpCorqgSjLxkAMC/k
VQBWMTQ01NjQEHdvatTqv0yqRl8vkFnB0VPvnjjeO7uurq63jvV0nf38i688
bJKBJZBXAZif0+lsampKUEslR2VlJZ3/kZvU2BkcfeO+okW3rSgumuXcYW2I
n5q89b9+6ehHIxP8fQdTI68CMK1QKORyubY3NyeopdKS6oEDB0iqgDIxHhw9
I4Jrgc0WlU43/vKJFzvffutYz76mBhFrVy+e6vNWcMM9u8+NsdMbpkVeBWBO
Ho/nqSefXFpYOFMtlRy3l5fv27tXJFVaqgJKuBexGjud+6LC6k/+9Fd5QEZk
q0xw9Hzb5vwbK/VHaRBZYVrkVQBmI5Kqw+EoLi6OLarS59WVZWXtbW1jASqq
gGj+M8/pw6rIpS+P+PR3kMFVRFb95oGl17UMjE0Ydc1AAuRVAObh8/lEBBVB
NHFF1fKSktbWVq/Xq2iTRQB0vnh5oz6v/qD8D+fH402cjg/uuH6xFlkLbLZH
B6/wMwUTIq8CMAO/33+wo2NVRUWCA1XFuHnZMofD4fF4jL5ewMSCo3+u/6E+
r17z/Afx7zkxHnXPfw5vG8js5QKzI68CMNzx3t411dWJ51SXFhY+9eSTIqmy
TxVILDh65t4fLdGn0EcHr8T+2MiWAskmW8BQ5FUABpLN/xMnVTG2Nze7XC6j
LxawgFDM5tWCG+454VPi/5kXM79KXoU5kVcBGELkz21btyQ4pkoOcR+n02n0
xQKWIXLp0GPL9YX/eQ1vjgXiLPGr6/7h/av6vJr3mpMFDJgQeRVAhnk8Hrvd
vrSwMHHz/7ra2qGhIaMvFrCa4Oj+Apu+S9VP/vTXme77zdHHo9pe7T43lsmL
BZJEXgWQMV6vt7W19eZly2KbU+k6VtnWVFf39vYafbGA9QSDQZ/zWLIRNGZy
9Vp7d9yZWMBw5FUAGSBeRg8cOLCyrCzxBoBVFRUHOzpkV3MAqQqFp0z1k6vX
rXrw/HggTsm//9M37iuKuueHXk6Ig0mRVwEstL6+vtVVVQUJk6ps/s8xVcC8
TK+fWr14yTXPfxD9ExU+2SrqPNZr7d0jE0EOt4JpkVcBLByn03n/pk1ylX+m
3ao3FRc7HA7Z/J+oCsxLbP3Uz/eIPxjfOtZz8JX2F17Y/av1K/JvrBRv184I
2PjoS11nP1c4egPmRl4FsBDcbrfdbtev/sfmVfHe7c3N4p5GXyyQJfxnniuw
2aL2r2pnV4mxtLBQP6d6fjzAnCosgbwKIL18Pl9ra+vykpK4L5raaGxooFEV
kF7n2zZPm1xd/+v2trYXXtj9zO937vh/1m1bVqRtAxD/ELd59+zp9lw1+qqB
2ZFXAaRLKBQ60tm5qqIi37YkQVJdU139n2f6mNUB0izcyUr/s/aTP/1V/KCF
wjttxD9k94CoMisRXHefG2MzAEyOvAogLYaGhtbV1Mh9qjMl1dvLy2X5P2EV
SL+R7tWLp/30xXayUn/0dGewFhep2TX/xsqXR3yGXDKQJPIqgHlyu93bm5vD
21NnDKviZfGFF3b7fLwmAgvlm6OP6zevztTJSn1LTLKl8ypMjrwKYM7kVtXI
FE24nCpuWLXb7R6Ph9p/YOGIFKoewzr5MyjiaF7LSbkZIJZ4u7jztGqsG+45
4VNY+IBpkVcBzIHcqrqyrCyqq2pUUr1/0yZZVEVYBRaW/9Md1y/WulSJsaXr
QoIp0y9e3qj/A1Pk1UOjFF7BvMirAFI1NDR09/r1cbuq6ouq+vr6jL5SICeo
fw869+k3A8yaP6Pzqs326OAV/q6EaZFXASTP4/GEt6rO2FVVvPDdWlp68JX2
sQBnqgKZI/KnPq/+oPwP58cTLe6H8+q0ZgK7z43xMwvTIq8CSIbf729va7t5
2bIEZ6ouLSxsaWn54jJFVUBmhTtZ6Y9Yveb5DxLdffpmV23/KnkVpkVeBTCr
vr6+1VVVcU9T1cbmxkaXyyVeB3nJAzJtpPveH03bPT7L4r7/06h8O+t8LGAs
8iqABEQEbWxoiN2nqh/aVtVQiKwKGMB/5rnYYv8EP43fHH08qjoyr+NC5i4X
SB15FUBcslfV0sLCgsmwGptXV5aV7du7V51TJakCBpGL+9PCZ8Obnu9nniyN
ab563aoHXaOXaGYFMyOvAogiwmdXV5c8VlWrqIrKqyLEyq6qRl8skPPCi/v6
+dK815xx7yj+qvQ5j+24frE+rC66bUXX2c85LAAmR14FoOdyue7ftClqHjUq
r26or5ddVQEY7pujj0f1Pc5rePPrmLv5vnTua2oQ6TRqZnX3ubHYM7AAsyGv
ApB8Pp/D4VhaWBh3k6rMq6sqKo50dhp9pQBUgUDAf+a5bcviHCqXt/7XL3a+
ffr06VPvnjj4Svuv1q+Q1VX6+9js+7647GMbACyBvApAeKenR2TRxL2qRJoV
mdboKwWgip1WjRraskiBzaZvzZp35/rfvvaGa/RSKLz31ejnASSFvArkuMkO
ADOW/4sh7uB2uymqAkxC5Eyf89hre9oOHDhw8JX22NsXO9/W3751rOd4b+/A
J5/JuiqBpAprIa8COUt2ACguKpqp/F+M1VVVvb29Cr2qADMJKZF2VbLjcWjy
H1oDZBlH5a1Ip/JdZFRYF3kVyE0ihYosmmAxUeRYkWb9fr/RVwoAyHXkVSDX
uN3upqamqG7hUWPb1i3ibkZfKQAAKvIqkDuCweC+vXuXl5TIn/q4SfWnd94p
NwAAAGAS5FUgF4RCoaGhoXU1Nfk2m7Y3NXYDwK5dzyoT42xyAwCYCnkVyHo+
n6+lpWVpYWFUUZU+rDY2NLhcLoX+NgAA8yGvAtmtt7dXNlaNbQIgk+rt5eXv
9PQQUwEApkVeBbKVrKvSB9SovFpgs3186CnX6CWjrxQAgETIq0D20eqqEpwC
UFdbO/DJZ8rEuNEXCwDALMirQJZxOp11dfcmOFn11tJSkWZpHg4AsAryKpA1
/H5/a2vr0sLCBGG1qanJ4/EYfaUAAKSAvApkh6GhodVVVQmSamVlJSerAjBW
IBBQLgwr7w0ql781+lpgJeRVwOq8Xm9LS0uCw6oKbDaHw+Hz+Yy+UgA5RP3T
eOSiGk33v608/ZJy9++UW7YqeWuVvJ+pQ7wdSBp5FbAu8XLQ19dXWVmZIKze
vX690+lkThXAQghNDhFNQ2ecSsdxZeerygM7lR9vU/LuikTTyFg77f+KEAsk
jbwKWJTH49ne3JzgZNXioqLX9rSpq28AkEZjPmXwE6WzT3HsV7Y8o1Q8pOTV
To+mSYynXzL6acBKyKuAFb3T07OyrEw7XDU2rDY2NLjdbiZVAcxHZLtp9/tK
22Glebey9jdK3oYZp0xTGhufNvrJwUrIq4C1eDye8CkANn0tlT6p3lpaeqSz
kw0AAFI2elld05fbTUWejGw3nUcoTTDEgwNJI68CViEiqAiiK8vKYmv/tbD6
yMMP064KwEymtpuO+RSnS13Tf/aPyi/+fY5r+ikPmX5r1U/XvJs/qpE88ipg
CZPTqvF7VYmkent5+fFwuyoAiDZyUen/SJ04tb+o1unf8MDCR1M57lILrx7Y
qRZhdRxXJ29HLxv93wKWRF4FzE9OqyZoAmC3271er9GXCcAEJsbVidPu95XW
jngTpwuzuC8f+ZatahgW0fTVo2o8HrnIIXpIF/IqYGZyWjVBE4Cf3nlnf3+/
0ZcJwCCXv53acRqZOF24RKobizapn87+olqH9d6gcmFYRFPW97FwyKuAaXV1
dSWeVn3qySc5BQDIEVPt96dK9Wt16XThYmqtcscj6lRta4e639XpUve+AplF
XgVMSPZWTZBU11RXnz592ujLBJB+sh5KbSQ147L+2oUJqGvV7aa3bFU7A2jb
TUVC1l0VIPlcp146+pH4R8a2fJBXAbPp7e29vbw8QVh95vc7mVYFsorWgV82
ksrQsv4GdZK2ebc6YXvitFzTl5dDOsVMgqNn9jU1LLptxQ/K/zAykbn9yeRV
wDy8Xu9jO3Yk3q3KtCpgedqmU1mtv2jT9EnOhZk7/fE2NQk79qtHpopsfPlb
o/8rwGJkUhWvRPIVSuRVz/eZOz+RvAqYRH9/f2VlZdwjAJhWBSwsKp2m63yo
xDtOq5ojE6fd7ysXhgOBgJwvZdYUqQrp5lRXL468QuXbbHk/3/N1Bi+DvAoY
TqTQlpaWBEdWMa0KmNxUH/7Ry9M6nU4riUr7CLffv+EBdeL06ZeiJk6JpkiL
b44+Ll6Srlv14K5dz25bViRSa3GR+sKU9/O95FUgdzidzjXV1SKsRp0FQBMA
wALk3OmrR2dOp+kNq+H2+1ueUZf1Zan+xLg+l5JRkV7BYNDnPNZ19nMl/N3l
P/OcDKvkVSB3iN8D7W1tSwsLExxZ9Z9n+tQyYQBmIKuiOo7HW9lfiHSqW9YP
10NFlUFRFYWFFv09drZdm0shrwK5wO12b6ivz7ctmemI1cd27PB6vYRVwDAi
nTpdajrd+WpMVdRCjA2RDvz739Y3klJ0gYF0CoORV4FccqSzc3lJiQyrsXl1
ZVlZb2+v0dcI5JZIv9POPnWpPbqj1AJsQBWPL9KpVq0/5tOHUnIpTIq8CuSG
WQ8C2LZ1i7iP0ZcJZK2pwih5VpTsxv/jberW0AUJqLqSqHATfv35UPp+p4AF
kFeBHDA0NFRZWTlTUl1024q3jvWwAQBYEGO+qaZSVc0xZ0WlcejSKaeXIsuQ
V4Gs5vf7HQ6H7FgVN6zW1d3rc50aC2TurBAgi00t7ovQKKJj9NbTtGbUmdMp
s6bINuRVIHu5XK662lptn2pUUi0uKmptbQ2EGX2lgGXJrqdth9XF/YqHpi/u
p3eEq6LCK/uhM07xY8uaPnJIWvNqKBX6vJrSBwrpee5A9hI/JvrSqrgHATid
Tn6agCTJraeR6VOtcj9OX6k07TvV1ezLqqjY6wFySPryamtrqz0VjQ0Nco1y
VUVFSh8oUBUCJOD1erc3N8dtrCqH+CHy+Xy83gGzG72s1ka1HVZb5au1UWsX
Zvp0st+pSKf9H6mfVIeyfSBdeVX8KK2uqpLnuiZ/q2+qk9IHulyudP5HALLI
0NCQ+GGcqbTq1tLS47292jIiAL2p6dOnX4o5NCqtlfvyrKjWDqX7fWXkIiv7
wCzSN78q82pKQ8urKQ3xgW63mxdcIIo8tSpBadX9mzZ98ZWHnx1gijzVtO2w
8stnY6ZP0xdQF22aannqdOm3nipkVCAZ6curRzo7X09FS0uLjKwi6B58pf3F
zreTvw0N/50KEUDP4/GIOJqgtEpEWVYVkcsi7U+H/65OaT77x8nO/D9Ldzpd
G1ncf/z5yHFRl781+qkD1meC/gDiRVaZ7F2c5C2vuYCe+GlaWVYm99hQWgVo
1FcN2V0qzvp++hb3Re7d8oyagbvfF3lY+1njRw5IGxPk1Q319Rn8tEBWES/H
WnvVuKVVj+3Y4fV6jb5MIEMCgYA6pdlxXJ3eVJvz35XudPozNfSu/Y1auT95
nqmii6ZkVGBBGJ1Xxevs/Zs2MfMDzIHb7RZ/7sXdHC5Lq9461sNuVWQ5ERdF
aHz1qFpcHznbNN3Tp7dsjdRGnTitjFyUL1fsrgEyyvi8yvwqMBd9fX3hPQBT
7VX1o662VqRZXk+RhS5/q3Z8EunxF/8e3oCa9oBaG2l8Gq8tPz9TgDFMkFfv
43wrIBXaEav6phm6ths28V5xH6MvE5ivSD6UHVBFQH1gp65CKn3lUfJUU8d+
ufs0akmCgAqYgtF5lfNYgZR4PB5tD0BsXl1ZVtbX12f0NQLzEz+gpm99/8fb
1LnZtsPqPO3lb9kzA1gAeRWwjpMnT8o+AFFNjLXSRY5+gyVd/nYqoC7alO4S
/nB3qXjr+wAsg7wKWIF4hW1tbS1Q9wDYYjesijeK97IHAJahD6jpn0ENb0B9
+iW1jdWFYdmsm2V9wNqm5dU95FXAhORZALETqtoegP7+fppswJwie1DHfGqb
qWf/OFkkldazTfM26DegalVR/EgAWcN/5jl9Xh2ZyNwqCXkVSMbQ0FBlZeVM
hxrLPQCEVZiNOqs5+Imy/201oKptpn42/ajT+Q1ZIdXaoU7SjlxUtLOrjH7W
ABaE/9P9BbZFt61YvTgyb/Po4JWMbewhrwKz2rd3703FxXE7VonhcDjU494I
qzCByElSslF/xUO6NlPpyKgioD6wMxJQL3/LdzyQC3xfOg++0r6vqUFLqvqj
G3/4rxt/+9ob4g4LPddKXgUS8Pl825ub43asog8AzGLkotL9vrLzVfW8J/Wo
0/TtQZUnnIqAGi7hN/p5Asg08WdpcPTMCy/sfm1PmwilL3a+rd0eOHBg3969
4h/tbW0vHf1InbdZyCshrwIzcblc62pq9H9I6kdd3b1ut9voa0ROGvNFevU/
sFPdNZrGbagyoD77R3WbKwEVwHRy9T/uHoCFXnAhrwJx9fb2riwrmymsPvP7
nbLeGVhoIbkN1elSt6E271aPJY0E1PnH1LVTS/zTZ1BZ6wdgKuRVIEooFGpt
bY3aoqON4qKirq4udqtiwY1eVlf5HfvTvcofruJ/9o/KidPqpwAAKyCvAnpe
r3fb1i3yhyI2rK6prna5XIRVLIRILX/b4clmU+kKqOE+qDtflW2mFOZOAVgQ
eRXQOJ3O1VVVWl1VVFh95OGHfT4fr/VIp5GLajt9+4vq2U9p6zR1V+QkqXCj
fv68ApAFyKuA1NXVtbykZKY9AK/taTP6AmF5If0k6pZnwqVSaZlBXav2Vv3l
s+oGV6dL21lNTgWQNcirgNywOlNp1e3l5QMDA0ZfI6xM7kTd+Wp4EvUu3STq
fGZTN0R69evqpOjVDyBbkVeR47QNq3HD6t3r19O0CqmKNO2Xp0pNO/Z0PgH1
LrXw6umXtG2oAJA7yKvIZS6XK7xh1RY3r9rtdr/fb/Q1wiLGfOqpT60danFT
usr5RdYViXf/26EzztAMPQ8BIBeQV5Gzent7l5eUaIdVRW1YPdjRwdIqZhJZ
edeqpdSTT9PRDVXW8jv2q82maNcPAJPIq8hN7W1tclo1Nq/eXl4+NDRk9AXC
jNRa+wvDuoX+eS7xh8ePt6mnAHQcF4+szaCyExUA9MiryDU+n297c7M+qerz
KhtWEWWqon/j0+GF/vnPo05Oor43qC+VAgDMhLyKnOLxeOpqa2PDqsyrj+3Y
4ff76VcJdTNq/0dqpFQ3o96VhmqpyZ2ost8U06cAkBLyKnKH0+lcVVERtQ1A
jgKbbd/evYpc8EVuuvytums00nVq/q37w037w6dKacee8r0FAHNDXkWOeKen
5+Zly+LOrK4sK6PDaq6JzHDKzqj2F9VNpPMNqGvVnqgP7FR3Dgx+EggEKOcH
gHQhryIXtLe1xU2qYqyrqWHDam4RGbWzT3n8eeWWrfPeifoz9UEmq6WUyRjM
cj8ApBd5FdnN7/fb7faZzq7atnWL1+s1+hqx8GRGFcEyDRl1rXLHI7Jvv3hY
oikAZAB5FVnM4/FsqK+fKaw6HA6jLxALSTZHFRl16oSpOa/4hyv65eGnYz6j
nxgA5BzyKrKVy+X66Z13xj24qrio6EhnJ6VV2WRqP2r0Wv/cMmq4df/Gp+Vm
1GCY0U8RAHIXeRVZaWBg4NbS0tiDq8QQbx8aGiKsZo/L3+pqpua51r9B2fKM
7DrF9wcAmAd5FdnnSGfn0sLCuAetrqmudrvdhFXLG/OpvaeefikNB6HKzqiT
BVMAABMiryKbiCDa2to604bVxoYGr9dLWLWqiXH1QCjH/sn+qPPLqLKof+Qi
C/0AYH7kVWQNv9+/vbl5prD61JNPimRCWLUWNUwOfqIWOk07Z2oeGbWzLzT8
d74JAMBayKvIDglaARQXFR18pZ2IYgmRsqkLw+om0o1Pq0VPc59KXatlVLVX
AG1RAcCyyKvIAm63e0119UytAPr6+ljztQCtReqiTfMq7Rcf/stn5Vq/0U8J
AJAe5FVYndPpvL28PG4rAPF28V6jLxAzCgQCakfTna/Ou2xqg6yZCg3/3ejn
BABIP/IqLK2vr295SUncVgB3r1/PQasmdWFYefXo5HL/nDNqrdp7SjzOhWFO
QQVMzvN94EOv/9Do1V3D/3jkU2/p2cvvXfrO6IuClZBXYV1HOjsLbLZ8my02
rzY2NPh8nENkFlOd/Jt3q3Oh8+/h73SxxwMwSmj6CAQC58cD/Ve+f3nE98SF
y/ecvXLtx5fyTo3m9X+Z1+PO6xrOe/OzvIOf5XW41H+I24Pq/xWp1ejnASsh
r8Ki2tva8m1LtKSqz6t2u93v9xt9gZis7o90oPrZXA9FXas2BxAPMviJeFlk
BhXIsGlx9LOxdeeu5H30tRpH+8Jx9OjfpoKouJXj4Ozjjr9cMfqZwUrIq7Ac
kYJaWlpEWI2bV194YTeRxmAjF9Vypy3PzGu5/8fb1OMA3htUjwYAsGBmiaOH
P4/OopMTpPFH4vfqxyAVkUgBeRXW4vf7m5qaZFiNyqtLCwuPdHYSVg0xVTml
Hoo658qpDWppf2efunmA/ahAOog/8IevTswYR498Pm2lPnEclXdIMo7OOk6N
Gv3fBlZCXoWFeL3eDfX1+eqe1ei8uryk5OTJkxwHkEnqf+uRi2qj1Ad2zmMq
9S51uT+8JXXqYQHMLGr7qL6U6f7z30T2jmqL9fq9o7POjmZyvDti9H9IWAl5
FVbh8XjW1dTow6qWV1eWlTmdTnJOZqjHhJ1xTk6lzmO5XzzCe4PqxCyAmckJ
0vcufScnSO/4y5W8wYtqKdO7I1OlTFEL8WmcBU3XEJckwrOI0CJIizj90dfi
ufBLG8kjr8ISXC7X6qqquMdXibe73W5mVhfc5W/Vlfp57UoNd0mdXO6X+LIB
Y4Hg+fFAtyfS6yn/vy6piTRqglSfS001TSrH4c/VSxUR+uRX4uLFU7j//Dfi
6Rwavfqh1z8yEYxq6MEPPlJFXoX5OZ3OlWVlcY+vunv9eo/HY/QFZjWnS2nt
mCzwn2t1v3gEOlAhh+mX7NUdpB96Ikv2XcPqDlIZPqOCqKnmSEUcFZcq4mj/
lyKOlp69LHK1eC4iY4ukLZ5dgufORnSkBXkVJjcwMLC8pEQ2WY0Kq5sbG2my
uiAmxpUTpyd7pc5pKvWGB9QP735fGfMRU5ELxgJB/SbSSE2TXLI/rEuk6u0F
c2VRfRwNz47e8ZcrIo6+POKTcVQ8tZkCJ1kUGUNehZn19vaKsBp3G8BjO3bQ
ZDWNIsVTHcd1x06lOpU6WTl1YZiMiiwQVdakX7WfVtYkE+nB5KqZDCl60hbr
w7OjieOoFkH1t4DhyKswra6urqWFhXHD6jO/30kiShu54n/HI3OfSrW/qHS/
HwgE+KLA0sQ3sMhvsrIpeh9pbN8nfQQ1dnZUK2XqV0uZRJDW7x2NWqyPOryY
OAqrIK/CnA4cOBB3D4A8EcDoq7O8SLtUkTNF2pxLTF0bO5XKCx8sQVu4lyeH
qltJT36lzj3Kyiaz1TFpE6Taev2HnnXnrjzx2ZgI1QNjE8NXJ6JmR4GsRF6F
CYXPWrXpj1iVo7io6GBHh9FXZ2VjPnVP6S/+PbziP4eu/uECf/EIl79l3xrM
bGQiKDvkP/Kpt/Ts5alpUrmVVDuqyfCpUX0i1fV6mnWCVPs3kCPIqzCVUCjU
2toadcSqFlbf6ekx+gKtZ6qrv7ox9a7UN6auVbcKOPaHztDhFgbTr2XLU0S1
3aTT6ptiO+RruTRut9IMDP2Sva6+/r1L38kdpLFPE4AeeRXmIcJqS0tL1MFV
Wljt7+83+gItJjT8d3XJfqoVVYrFUyLfdhxXsy5gELmhdFoo1a/dGz4pGjW0
fviTifTlEZ9MpFEzotouGrZ8A0kir8IkxO9tu90ee9CqCKu3lpYODQ0ZfYHW
Ieun5nj41AbZh4riKWSMVuUUPVMqQ2lsfZOBQ7dqL8uatCp7IXaZnmlSIF3I
qzAD8YK1vblZfB/G5tWVZWUu1/8mOyWmHu81+Il6wunc6qcqHopa8ed1Fmk3
MhEU0U4EvDjL93J13gzlTrKyKWYfaVTfJ+0f1BsCmUFeheH8fn9TU5MWUPV5
dVVFhcvl4oVgJuprpSzzVxv7z+nkqbbDyshF/hxAuohQ13/lexHwIv2gtA6l
+mlSw08U1W0lveMv02rt9c9F3/SJE58BY5FXYSyfz7e5sVFfYKWN1VVVbrfb
6As0HVlporw3ONfzp2qVB3YqnX3K6GWjnwqsZKZap6mWULL6/uD0RBpb6JSZ
IT6d1gAqZpo06hkBMD/yKgwkwqr4xosbVtfV1Hg8HqMv0Fx0MXUO3ajCG1PF
h0+MM5uKJGmtSiNdofTHOemPuTdqplS3dn/tx5e0+ia1JaluOjTEqj1gfeRV
GEWE1Q319YTVWU2PqZNL+UnG1BseUJ5+SRn8RL5eM5uEuDzfRw51iq7B1069
18+OZv4s0clQmv9fkVDaf+X7qK6kALIbeRWG8Hq9dbW12qEA+iHeLt5r9AUa
T02Yc46pP96mOPYrThcrntCblktjF/EPTm9PmskV/HgzpTKU8t0LQCGvwghq
WK27N6oPgBwb6ut9Pl8ulzaImBo641Qefz71valr1VarrR3KhWGjnwQMoN9f
KnNppD1U3M2lhizfa3tKp4fSkYkge1QAJEZeRYbpw2pUXt3c2CjCqtEXaJzB
T9S1+znE1LW/kWX+uZvyc5XIpfLU0al1fC2XGti29OjfogqdZM/8qFA6VXpv
yH87AJZCXkUmTW4DiNNnddvWLX6/3+gLNILTpa7dT/VNTXLRP9yN6tWjlPnn
AlmPL3LpI596pzqXilxqhlqnyZZQsU1KYVrqrviJcXXn1ZhP/fcM99EfggAY
i7yKjNH2rMbm1aamppwLqyMXJ0+hSqnSPxxT979NTM1Ww1cnZJ8oEQJFFIx0
1NfW0zPfufRI+ESn6ZOlcVfwmSk1u4lxn/PYCy/s/tX6Ffk3Vspm1/LA6+tW
Pbi9ufngK+1dZz8XdxN/dJw7tKe4qOgnf/qr0RcNRJBXkRlyG4D+RAAtr+ZO
WFVfzUXOFGmzqnkuMbXjODHV6rQtpiISDIxNxFnK10ryMzlZ+ubkIr5uZ+mH
Xr/WqjT2WcAq1C+W/9OPDz21enEknUYNkUvF0L9l0W0rxJ3FL+dHB68YfflA
BHkVGSDDatxflbmyDWBiXG3Rv/HplPumrv2NNptKSLAoz/eBqSlT2cL0yOfR
oTQzAVVX8VR69rK2iK8t++q/x/h+ywYT4+fbNsvZVO237nWrHvzta2+cOT/6
xVcewfel8+Ar7ff+aIkWX+U/Cm645/DX3xn9BIAI8ioWms/nq6utLbDZYsNq
U1OTWg6fvd0AIuelTutJldyoapYlVAqxwTrEd7LIfiIBihx47cfho0i16id9
I9PMlEFNzpfOlEtDHPCU7XzOY9uWTU2Wygi6+9yY3LAqd3RM3QZHRbLV/6L+
QfkfYqvkAKOQV7Gg5KEA+fHC6sZfPpHNZy05XcrOV8PF/qlMqFY8pG5qHbmY
tf9ZskV0AZS2mp/5Q0gnc2n+f13SFz3J6wxRhp+rzh3ao0+qYlzzZOfIRDBx
ddUXL2/UfkXnNbw504YQIPPIq1g4Iqzev2mTtqU/ahvATL82rW30sjovOlVF
lVxYveEBtUXAheHYNVkYTnyjfuj1RzaaDl6MHEj6Zswi/kIv6B8O1z31fyni
cdz9pfLUUXIp1D+m2jbrNwCIsaXrQlLhMzi6vyAyvXDN8x8s/MUCySKvYoGI
sNrY0BA3rGbZzKoaD+T21Lt/l+L21A2K/UW17SrTX4bSlsXjR9NMLuIfnNxi
Gu4Tte7cFVmPrz/mie8TJCbCatSvXBFWkzm+Vv7J883RxwvCJw/ec/ZKds4q
wJrIq1gIfr+/qalppgKrbAqratpUz6KqTSWp1qo7Wt8bzJ7/CBak7TWdWtCX
s6aZjKbxlvL5rsB8xG4D+Mmf/ppaTev44I7rF+ffWCn+cOOPI5gHeRVpJ15w
tzc3J+gGkA2vyHLd/5atqcTUtWp/gM6+QIBMkmmyQl9kQpEMoztH6Sc2MzVl
2n/le/18F/tAkB4j3VqZvxzX2ruVifHkp0nVb8Lg6J/rf7j0upYTOXzYIEyI
vIr0CoVCj+3YETesNjY0WP24VfXXfvf7KbelqmrWH0RFLFlQ2pr+PWcn++1r
FfpvTqbHhdtrKqPpZHd9cRn66idgAU2Mv3FfkX5mteCGew6NXk31YcRPkMir
Pyj/w9cLcZHAXJFXkV4tLS1xw+r9mzYpYz6LziuqCfPC8GS9f9KzqdOrqJBG
2o7TkYmgnDidtqZ/UJdLF27W9HDk4CfZYF+u5sc2Z7Po9zysRXzbfXzoqUW3
rdD/1v3n1E+nkltY1UYBl609t4DsQ15FGjkcjrhhta7uXp/PmmF1zKeeKpXa
cVTh7anhKiqkkfj+iZ44Pfq3vI4L0xLpAqVTEU11G01FQhY5WUZT/hiBKfg/
3V9gizoUoP/K93P7/uS7GiZEXkW6tLa2xj0U4O71671er9FXlzqnS9fnP5mw
Gj4ytft9ZWKc3/bzNxYIilfbXcP/KD17ObLjVFvN18+gpn1xX86a6qKprM2P
OviJLzFM5Zujj0f94r3m+Q/4LkU2Ia8iLfbt3Rv3UIA11dUirFppZnXMp55/
WvFQCttTb9mqNvkfvcxpQXOm1UOpy/r94S5SC7SIH7XXNLygLzuaHhq9Onx1
IvbLxxcUZheukNL/4qW6H9mHvIr5O9LZOVNY9Xg8ljludfCT8ITqXUkv/UfW
/SnuTtXIRDDSSOpDj1o1ry7r6zaaLlAx1GSF/v3nv9EOJzX6vwSQDjFtAfJ+
vlf8lBl9WUA6kVcxT729vUsLC2PD6k/vvNPtdht9dbNQQ2b0hOqsYXWtup21
47j6gZiZviQqkk5lB37ZSGpBT4Oa3G56x1/U5lEDYxNRFfryHCggO8gO/1Gb
AYy+KCDNyKuYj4GBgZuXLYsNq7eXl5s/rE7foZrccVRPv6Q2CsDM5Mr+tHR6
cHqd/pvproqSE6eTa/pqkb7uetihgSw3MR61GUCMRwevWGkXFpAE8irmzOl0
Li8piQ2rt5aWulwu0/62VFeBO/vCJf+p9Pnvft+0z8hAY4Hge5e+e+KzsWs/
vjR1emnUHtH0TpyGi6HkxGn/le+1iVM2DyMHae399b+BC2645/DX3xl9aUCa
kVcxN263e2VZWWxDgEW3rRj45DNz7gwMDf893EM16bNTb3hALaQauWj0hZuF
bMUfqdmXVVEL2uNUHleq23HKnwxAtODo/oJpv4cL/vu/nfDxtxuyDXkVcyDC
6uqqKvmdo/89WVxUdOrdE0ZfXTQ15Lw3qDabUmNqcp2pHtgpPsScqTsD9FtP
Xx7xibiYd2p0qqPUAg2RTnXL+p7vp9JpKHxumrH/TQATUn9Gxgd3XL94erHV
Ho6mQvYhryJVXq93XU2N/LbR51URVt/p6TH66qYb86kHod6yNdkeqnJCdfLg
1Fwj8nn/le8jTaViy/bTOyYPLRWf7r1L34l0GnUxxFMgKXHyKs0BkIXIq0iJ
3+8X3ypaWNXn1YMdHUZfnc6FYcX+YtK1VOEdqu8N5tpy8/DVianjokSAlJX7
CxFQw+n02o8vyXQ6FghGlUQBmKPYvHoP86vIQuRVJE/EuUceflgfVrW8+sIL
u42+OpW6ajy19J9cyb9jf47sUJXnme4a/seM06fy/86/01R4ZX+mdAogncJ5
tbgoev8qkGXIq0heS0tLvs0Wm1ef+f1Ooy9tso2quvSf9NmpnX3Z2odT7j6V
xfuR1lLvjkSmT9M+d3rkc9mHX3wieXqpwpQpkDEx/awKbriHeitkH/IqktTe
1ibCar5tSVRe3d7cbHAtzMjFVKr+a9V9Ak6X/NAs+5UusuKh0avR5VFp7yil
q9kfvjph9JMGclcovG7yxcsbOYwVWY+8imTIE1dFWI3Kq40NDX6/36irCp1x
Kr/492RrqW7Zqk7AZtehVPLoqDv+ckWtXYrtfZq+rafiU4hXwKiOUrwgAoYT
P4b+M8/Fnm+V6m78QCBwvm1z3j17aBwHcyKvYlb9/f1LCwtlWNXn1bvXr/f5
DIh/6nTuidPhTaop1FIpWZGvZIOpdeeuqO1P5QZUOYOarqQ6OX0qF/e1rady
GsfgJw8grnAL1kW3rVi9OLJHa+l1LaltYZ0YF2FVhF7xgQNjLJrAjMirSMzp
dK4sK4s9xOqnd97p8XgyfTUT40rH8cn+VEks/T/9knpGgJXJgBqZQdUqpORt
Whb6u4blcVFy+jQLIj2Qa8Tfkv4zz0X9ir7m+Q+S/Xj/p2/cVyTCasEN9xwa
vbqQVwrMHXkVCYhEuqqiIjas3l5e7nK5MnYZaoi6/K3aGTVvQ1JJ1ZpL/7JI
Su5BnQqoB3UHSM0/oIpHmD59GvXZAVjSxPjQY8v1uwLEy/qWrguJDz0RP/I+
57Ed1y9eWlgowqr4o5VlFJgWeRUzkecCGH7iqjpBqnZSvSuppHr375Tu960V
vURoFNExUiTVNTwVLNMyfXr4c3lo1BOfjQ2MTYivmra+DyBrqL+QxwejDmYV
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
NkF6/NDrV2v83x2Z1s8/+dX/Hve1H186NHo1GKRyCgAAkFezls/nW1NdHXUu
gAirjQ0N8UNg/0fKLVtnL6q6MDxTTB0Ym7jjL1ciJ0+lWuAfnkp95FOvnEoF
AADQkFez1WM7dkSFVTFWVVR4PJ7ou45eDveqSthV9cfblPcG436i9y59px6Q
2jU8lyZU4qN0u1IBAABikVez0sGOjtiwurSwcGhoSH83daJ19g0AtfJM1ahP
0e2ZLPNPtRVVuJ//PWevfOj1K2xJBQAAsyGvZh+n03lTcXFsXt23d692HzUl
Dn6iVDyUcFo13P9/9LL2IaHwbGokps5hxb//yyc+GxuZYCoVAACkgLxqOUc6
Ox1hIpfGvtfr9a6uqooNq488/PDUnS5/q9ZMJd6qWtWsOF3a5OdUTE11xf/o
3/IGL8pjp+RD5eCEqmMS5WOW4HK55NfrYEeH0deCpHR1dckvWdQSEoCsQV61
nKamJvklE7+iY9+7vbk5NqyKBCtybOQenX3hDQAJplVrlY7jIfW0ALXSP7I3
dU4bU7s9V8MPk+vybTZZ7Ob3+42+FsxCfMe+09Mjv2SNDQ1GXw6Som3X508M
IFuRVy1H5FXZ//+tYz1R83UHDhyQr7P6cfOyZZGZ2JGLyt2/m2UDQLhXVeSk
1B73HGKqyLf9V75nIlFP+6KQVy2ht7dXfr02NzYafS1ICnkVyHrkVcvR5lej
8qrL5SouLo7Nq+IXuDrFOWtdVVVz6IxTbe/f9+VU09QkR4/7jr9E6qcQi7xq
LeRVyyGvAlmPvGo5cn41Kq/6fL51NTXyOAB9WN3erG5DVTejJuwAIB4qr//L
yVOoXMk2UO1xrzt35fx4QF4GC/8zIa9aC3nVcsirQNYjr1pO3PlVu92unWCl
hdU11dWKY3+CDQAf37Ll5j1H1cr9lBpShWdTRUyVTa6IqbMir1oLedVyyKtA
1iOvWk7s/GpXV1dsjVVxUZGIo/686ti8evGf7m1+sO2a5z+Yaoia3GyqjKny
k7JDNXnkVWshr1oOeRXIeuRVy4maX3W73ctLSmLz6v4Cm5J31/SkeldHzZPX
2rvzOi6oI8kJ1XAJ1cDYhOy/SkydA/KqtZBXLYe8an779u4Vr1ZGXwUsjLxq
Ofr51UAgUFdbG1tjtW1ZkZJXG55cjaz7b3z0pbzXnGpMPfx5JKwmnlMVdxu8
2O25yt7U+SOvWgt51XLIq+bncDgKbLbGhgbx88W8B+aAvGo5+vnV1tbWON1W
Fy/x5v0PEVN9eXfta2rIazk5NaEqa6kSzKyKmHpq9OURn0jC/EpJF/KqtZBX
LYe8anKh8Fk2lZWV8su0qqJCvHgx3YqUkFctR5tfFT/vBTEzq+ItH+XdOTWh
KrenJs6ocvSph6WOBYJMpaYdedVayKuWQ161hHd6euSXSZYGi9HY0CDeyC9G
JIO8ajna/OrKsrLYnQC/Wr9CLaTquDCt5D/B0n/XsOxJJR+csLoQyKvWQl61
HPKqVYifqdg1QfFa5nA43G435yEiAfKq5Wjzq7Ej7871P/nTX1Panmr0s8kJ
5FVrIa9aDnnVKlwu183Llun7LoaPa4ycWH3/pk1dXV3i9yTBFbHIq5ajza9G
jUW3hWdWZ1367/vyiQuX2Z6aSeRVayGvWg551ULill3ETreKZGv0lcJcyKuW
E3c9ZXFhkc2+L9HM6tG/XfvxJW3dn7CaSeRVayGvWg551UJ8Pt/qqqqooxjj
jg319fv27h0aGuI3JxTyqtWEQqHwttXon+sf/uvG+GdUibec/OrlER9tqQxE
XrUW8qrlkFetpa+vb9awqu0WELc3FRfX1dY6HI6urq6F6CoQghWcevdEgbp7
RM2rRl8LEhGBU8TO2//v+kW3rVi9OHonQLi3qmvaOPq30rOX5XFUQogfSePo
86r6tYC56fOq0deCpOjzqtHXgqTMtLEtYXaNJNhVFRXiw9vb2oaGhnw+n3zA
+eRVkYcZJh9C/o2V2l8xhl8PI+4QlhYWij8rRC6VX6/FhUUJhrxncVHR8pIS
cXvzsmXareHPJTeH9vvW8CthJDPEj5ttsjuc4RfDSGZonf3E187wi2EkM8Tr
kfaDNoeRr/uK19XWtrS0HOnsnHOHgTlfBiNjQ930aPQ1MJIZ4u9K+cVKnFS1
IX4VJHlPBoPBYDAyP9ZUV8/U6yalF0f9BrnKysr2tjafz0dezbJh+Lcrg8Fg
MBiMHBzFRemZMRMZdXtzs6zMkhuuUp1f9cH0vF7v8d5e+Z1TV3evMqa+hVtj
bw9//d0//+mveX88p25J1cauzrg/7+Lt4v6h4b+PBYJKcFR+Tc3wLLjV32pf
L/GVUibGDb8ebhPfvnWsR369GhsaDL8YbpO5FXFFfskOvtLOr0FL3Iov2ZwD
6s3Llm2or3c4HCLAeDwehVLi3HDq3RNyrVl89UPhL7qszeE2w7eynCqv70u1
J9Xhz9WCKXErm6n+8dyi21bEhtWNv3xChJ+gjsJX0Hy34ouifcnGwtVvZrgq
bhN8vbS/4tV6KxNcErezfske27FDfskOHDjAr0Hz354+fTr5nQDyQIHVVVXi
q/z66687nc4g/Rhzj/i26e/vlz/m9LMykJpU3x2JtE5Vby/obl15638dd3L1
rWM9Rl84ZhfS5VVlzBcy+nowK31eNfpakBQtr9LPyvxE2lxXU5NMUhV3a21t
7evrk5OoyHH6+VWjryXnhEKhXcP/yOtxT+vw/6ZuiP+7q7PAZpspr/JnpvlN
y6vh+XCjrwizIK9aDnnVQvbt3Tvrcr/dbh8aGppvmypkEf38Knk1k6Yl1dgm
/1p8fc0ZdycAedVCouZX+ZKZH3nVcsirVuHxeJaXlCSYUH399de9Xi9BFbGY
X80wEVcSJVX9+OO561Y9GNuZ6vbycvKqhejzKudbWQJ51XLIq1axvbk56nzG
fJtNJFi73e50OompmAnzqxmm7lNNJqm+5mx+sO2jvDtjw+qtpaWNDQ3kVQth
ftVyyKuWQ161hIGBgagJ1braWvEl84XbpRJWkRjzq5lxaPSqmlQTx9SDn13z
/Ae76/+/i/90rz+vWjt3NWoPwMZfPiHfTl61BOZXLYe8ajnkVfMTv/20AwKW
l5S0tLQwoYrkMb+aAd2eq+EuVa5IsX/CpOrLu0vJ+5kY+wtssQc6bNu6JRAI
iLzK/KqFML9qOeRVyyGvml97W5sIq3W1tUc6O9UWrECKmF9dOB96/Xknv0py
TlWZTKpifJR3Z2x11a2lpR6PR6Qd5lethflVyyGvWg551fxEXnU6nUZfBayK
+dUFMnx1Im/wYtJJda2WVMXw51VvWxanG4D4m1QJl2sxv2otzK9aDnnVcsir
QNZjfjW9xgLB0rOX8458PktR1WvOqDlVbRy541dxdwLIXT7Mr1oO86uWQ161
HPIqkN2YX02jUCj0xGdjeUf/pjumKt5u1cOfP/PwS754SVXJW/vp488vum1F
VFuAW0tL3W73/9/eHcc2eed5HvfoqhsJae+f0zKDAw03W5rSoFKlS1EVDsoC
A1I2WwqzIKCggWwLo3S20yWCHpGo0AUFCc8V1aGUhkg3jAMrwkQNDEOKiDQE
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
AAAAAAAAAABkk/8Pux8xJw==
    "], {{0, 920}, {912, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{912, 920},
  PlotRange->{{0, 912}, {0, 920}}]], "Output",ExpressionUUID->"1427c7b5-1ecb-\
4e3c-a1d9-038e979ce07d"],

Cell[TextData[{
 StyleBox["80.",
  FontWeight->"Bold"],
 StyleBox["\tGraphs of modified exponential functions",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Without using a graphing utility, sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["2", "x"]}], TraditionalForm]],ExpressionUUID->
  "4afe44fb-f694-4f70-85e7-70af9b2ae425"],
 ". Then on the same set of axes, sketch the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["2", 
     RowBox[{"-", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "09b7d358-c9e6-474b-ba98-e57ea00ec289"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["2", 
     RowBox[{"x", "-", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "3a18a27c-ab5f-4ac9-ac12-5cdbfedea998"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["2", "x"], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"abee4bf5-dbc7-4421-b4c0-50f7bd4a87d0"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["2", 
     RowBox[{"2", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "cd974979-d009-4064-a66f-364d7993cecf"],
 "."
}], "Problem",ExpressionUUID->"dce76a03-22f1-492b-bed5-5497311a4ae8"],

Cell[TextData[{
 StyleBox["81.",
  FontWeight->"Bold"],
 StyleBox["\tGraphs of modified logarithmic functions",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Without using a graphing utility, sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "2"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "1ee9dc73-a8f6-473f-86a0-3a1a0a8cba63"],
 ". Then on the same set of axes, sketch the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", 
      RowBox[{"2", " "}]], "(", 
     RowBox[{"x", "-", "1"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "ac3f836c-25a9-4c2f-b170-3be7e8981759"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["log", "2"], 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "33f38aa6-9a31-465c-8d8b-19c6285fa7c6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["log", "2"], "x"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"c2968924-3de3-44fa-b45b-fcc98c713f06"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "2"], "x"}], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"4f997b99-da71-4fd0-9317-cf2412dc7b4b"],
 "."
}], "Problem",ExpressionUUID->"a939606d-a6f8-4515-a87f-d01a2ba724e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Explorations and Challenges  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Explorations and \
Challenges",ExpressionUUID->"f3261f57-dab6-4e03-9ecc-97b9ba193775"],

Cell[TextData[{
 StyleBox["82.",
  FontWeight->"Bold"],
 StyleBox["\tPopulation model",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "A culture of bacteria has a population of 150 cells when it is first \
observed. The population doubles every ",
 Cell[BoxData[
  FormBox[
   RowBox[{"12", "hr"}], TraditionalForm]],ExpressionUUID->
  "c1a3f37c-b11d-4f2c-9d07-8c5c3a0767f9"],
 ", which means its population is governed by the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "t", ")"}], "=", 
    RowBox[{"150", "\[CenterDot]", 
     SuperscriptBox["2", 
      RowBox[{"t", "/", "12"}]]}]}], TraditionalForm]],ExpressionUUID->
  "ee3955fc-71f6-4d2b-ad26-aa77b74d23c1"],
 ", where ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "7c80ad43-22b2-46b5-bc57-0dd8b482ef90"],
 " is the number of hours after the first observation."
}], "Problem",ExpressionUUID->"e8524d6a-7e8e-4908-a6f1-7d640cbb4e20"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Verify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "0", ")"}], "=", "150"}], TraditionalForm]],
  ExpressionUUID->"57487678-91ee-4fca-be0e-096986f8146d"],
 ", as claimed."
}], "SubProblem",ExpressionUUID->"e8d9aeb3-6be7-43ac-8208-3b444e5d5547"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Show that the population doubles every ",
 Cell[BoxData[
  FormBox[
   RowBox[{"12", "hr"}], TraditionalForm]],ExpressionUUID->
  "17985941-7204-4f06-9dfa-245db80fc723"],
 ", as claimed."
}], "SubProblem",ExpressionUUID->"861bcdf5-2f32-4f4d-9c0b-2a82afca23a1"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "What is the population 4 days after the first observation?"
}], "SubProblem",ExpressionUUID->"7b384c55-b05a-49ad-b2b3-145b218778da"],

Cell[TextData[{
 StyleBox["d.\t",
  FontWeight->"Bold"],
 "How long does it take the population to triple in size?"
}], "SubProblem",ExpressionUUID->"e297de2a-dabb-49e4-91e1-0fcef75a49b3"],

Cell[TextData[{
 StyleBox["e.\t",
  FontWeight->"Bold"],
 "How long does it take the population to reach ",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]],ExpressionUUID->
  "2e0ca371-d569-41ae-ac82-fb9a4332a064"],
 "?"
}], "SubProblem",ExpressionUUID->"a681d24e-63aa-4f88-ae6b-3976d411f07b"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "eba50942-f715-4047-8890-12ec3e8d6639"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "92290678-a3f3-47f5-bc58-1d99d6f88dc9"],
 StyleBox["83.",
  FontWeight->"Bold"],
 StyleBox["\tCharging a capacitor",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "A capacitor is a device that stores electrical charge. The charge on a \
capacitor accumulates according to the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Q", "(", "t", ")"}], "=", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "t"}], "/", "c"}]]}], ")"}]}]}], ",", " ", 
    RowBox[{
    "where", " ", Cell[
     "",ExpressionUUID->"94ab2abb-2150-4920-8a9b-b62cf3f45aec"]}]}], 
   TraditionalForm]],ExpressionUUID->"b0183816-98b7-4e3f-81ec-076f69830a97"],
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "efd74260-2307-4974-a048-32773b0da6ee"],
 " is measured in seconds, and ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "0be561f2-88b0-4338-b768-54a7234f65d2"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "20ad0b04-1fa0-4832-b6c9-5329525290ce"],
 " are physical constants. The ",
 StyleBox["steady-state charge",
  FontSlant->"Italic"],
 " is the value that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "1a828685-a1d5-4bb9-965f-37ab279d7ec8"],
 " approaches as ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "acc0e905-8d20-4de4-a7f2-4bec61bff4eb"],
 " becomes large. "
}], "TProblem",ExpressionUUID->"48e8c2ec-0dc0-4781-b06c-2a942c14207c"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Graph the charge function for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "373fdbd8-896e-4efe-821f-698f7fbb320b"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "27eaef5d-a3ef-4395-bd4c-d947da3ed054"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "10."}], TraditionalForm]],ExpressionUUID->
  "fc976a1e-f38b-4af1-b866-cf1fe64ac375"],
 " Find a graphing window that shows the full range of the function."
}], "SubProblem",ExpressionUUID->"2502c996-572b-4dfb-8c44-faef0ec2bc88"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Vary the value of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "52e1fbc2-038c-4cfe-b8e0-6fba55e5a185"],
 " holding ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "4010751d-c9c7-4939-b46b-681dd54e6cab"],
 " fixed. Describe the effect on the curve. How does the steady-state charge \
vary with ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "c07d9e91-60a8-43ef-aef4-67264a6708c1"],
 "?"
}], "SubProblem",ExpressionUUID->"2904a922-2366-40c5-9d25-a168076a0b5e"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "Vary the value of ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "1cb58811-525f-4b9e-92d2-7e9347f84ac5"],
 " holding ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "0d2303a7-57cd-4730-9a99-813e9639c588"],
 " fixed. Describe the effect on the curve. How does the steady-state charge \
vary with ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "3abb2dc4-268d-4621-99ce-da176795418d"],
 "?"
}], "SubProblem",ExpressionUUID->"b83bbb19-6886-4935-9d31-7a4e9ad86463"],

Cell[TextData[{
 StyleBox["d.\t",
  FontWeight->"Bold"],
 "Find a formula that gives the steady-state charge in terms of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "02e02443-4e86-4b68-ab71-5c83837ea11b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "."}], TraditionalForm]],ExpressionUUID->
  "93ce0deb-e227-47a9-8ad1-f81e4e26cf9b"]
}], "SubProblem",ExpressionUUID->"f6813664-78d0-4901-8a65-90f5f7b2ff1c"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "796ff71e-9e92-45aa-b445-4f7b26fc552c"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "0448a3dc-49f9-4d7f-8cc2-88b48cda76a3"],
 StyleBox["84.",
  FontWeight->"Bold"],
 StyleBox["\tLarge intersection point",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Use any means to approximate the intersection point(s) of the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["e", "x"]}], TraditionalForm]],ExpressionUUID->
  "f92f4c6e-9874-4457-b50e-db4008761e25"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "123"], "."}]}], TraditionalForm]],ExpressionUUID->
  "5083e496-b54f-40b7-a1c4-633cf5520d11"],
 " (",
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " Consider using logarithms.)"
}], "TProblem",ExpressionUUID->"bd5be42a-e946-43f2-98aa-2ff02d47b3a4"],

Cell[TextData[{
 StyleBox["85\[Dash]90. Finding all inverses  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Find all the inverses associated with the following functions, and state \
their domains."
}], "ExerciseDirectionsCell",ExpressionUUID->"e4eaad75-2bfb-482e-9118-\
d30304f47ec4"],

Cell[TextData[{
 StyleBox["85.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"2", "x"}], "+", "6"}]}], TraditionalForm]],ExpressionUUID->
  "9ef1ed5d-480f-44df-96d1-1f5f87c93ed2"],
 " (",
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " Complete the square first.)"
}], "Problem",ExpressionUUID->"e946aa7a-e87e-4970-948f-93699a13ec4c"],

Cell[TextData[{
 StyleBox["86.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"4", "x"}], "-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "49c99b79-785a-4f78-aac9-929ce80d9487"],
 " (",
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " Complete the square first.)"
}], "Problem",ExpressionUUID->"3033e8ec-b8a9-4c15-8018-4c8491167b6c"],

Cell[TextData[{
 StyleBox["87.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], "3"]}], TraditionalForm]],
  ExpressionUUID->"d04e5806-158a-4e0f-8fb6-b6143f695ae5"]
}], "Problem",ExpressionUUID->"243a7010-419c-4327-891e-2d5c7ea090bb"],

Cell[TextData[{
 StyleBox["88.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "4"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"28abda3c-b2c3-4471-982f-2e6c1a85bf24"]
}], "Problem",ExpressionUUID->"b242323d-2ba0-4def-809a-db5d8f8f960e"],

Cell[TextData[{
 StyleBox["89.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox["2", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "2"}]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "a7f6e64c-5272-4c52-ad0f-ac82f8921b55"]
}], "Problem",ExpressionUUID->"dbfaaa08-3335-4c3a-9fcc-559f0f8a5edd"],

Cell[TextData[{
 StyleBox["90.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FormBox[
     FormBox[
      FractionBox[
       RowBox[{"2", " ", "x"}], 
       RowBox[{"x", "+", "2"}]],
      TraditionalForm],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "89c920d9-083c-4f12-b04d-02f028f5d7e8"]
}], "Problem",ExpressionUUID->"ad22fda6-3b9f-4d86-a240-89e8fdd99988"],

Cell[TextData[{
 StyleBox["91.",
  FontWeight->"Bold"],
 StyleBox["\tReciprocal bases",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "f5e872c6-b184-4504-82fb-1e952d367926"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "fa057c80-9546-4274-a315-84f47449da2b"],
 ". Show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", 
      RowBox[{"1", "/", "b"}]], "x"}], "=", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["log", "b"]}], "x"}]}], TraditionalForm]],ExpressionUUID->
  "284541cd-6e20-4784-9b35-d1c426e09f23"],
 "."
}], "Problem",ExpressionUUID->"61211f68-c050-4c3f-9cac-6d421dc63011"],

Cell[TextData[{
 StyleBox["92.",
  FontWeight->"Bold"],
 StyleBox["\tProof of rule L1",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Use the following steps to prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], "x", " ", "y"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], "x"}], "+", 
     RowBox[{
      SubscriptBox["log", "b"], 
      RowBox[{"y", "."}]}]}]}], TraditionalForm]],ExpressionUUID->
  "3ead26c6-f40b-4b05-a722-0539ee10911e"]
}], "Problem",ExpressionUUID->"ac04a26a-1ca7-4add-b359-9038b33f2623"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["b", "p"], " ", "and", " ", "y"}], "=", 
     SuperscriptBox["b", "q"]}]}], TraditionalForm]],ExpressionUUID->
  "a1a8673e-420f-4483-818c-b5d2bb39021f"],
 ". Solve these expressions for ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "e60fa544-8e99-4bea-aef2-53a265e38f23"],
 " and ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],ExpressionUUID->
  "afbf5b0a-5a72-4be1-bb92-dc86e13d7f3d"],
 ", respectively."
}], "SubProblem",ExpressionUUID->"9a73f118-992b-4878-85cc-8ebfb73e2fd9"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Use property E1 for exponents to express ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "y"}], TraditionalForm]],ExpressionUUID->
  "8a20974c-18ae-43f3-b120-81589d985398"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ",", " ", "p", ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"q", "."}]}]}], TraditionalForm]],ExpressionUUID->
  "5f61d78a-f41f-4cbe-8834-4d80a2b0ad19"]
}], "SubProblem",ExpressionUUID->"2a2a4426-88bb-4027-be29-93ecf3e66427"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"Compute", " ", 
    SubscriptBox["log", "b"], "x", " ", "y"}], TraditionalForm]],
  ExpressionUUID->"f58aef20-1df9-4e2a-a0d6-3650339980ef"],
 " and simplify."
}], "SubProblem",ExpressionUUID->"e3fe79d4-e6c0-4644-b7d5-d9aded940301"],

Cell[TextData[{
 StyleBox["93.",
  FontWeight->"Bold"],
 StyleBox["\tProof of rule L2",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Modify the proof outlined in Exercise 92 and use property E2 for exponents \
to prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     FormBox[
      FractionBox["x", "y"],
      TraditionalForm]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["log", "b"], "x"}], "-", 
     RowBox[{
      SubscriptBox["log", "b"], 
      RowBox[{"y", "."}]}]}]}], TraditionalForm]],ExpressionUUID->
  "53fc018f-2e14-482a-97f4-77b71627fe74"]
}], "Problem",ExpressionUUID->"97fbd2cd-6d14-405c-be67-d10b2f0cc20b"],

Cell[TextData[{
 StyleBox["94.",
  FontWeight->"Bold"],
 StyleBox["\tProof of rule L3",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Use the following steps to prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["log", "b"], 
     SuperscriptBox["x", "z"]}], "=", 
    RowBox[{"z", " ", 
     SubscriptBox["log", "b"], "x"}]}], TraditionalForm]],ExpressionUUID->
  "0e19ca01-ae86-487f-a258-9d013dd45569"],
 "."
}], "Problem",ExpressionUUID->"8548f784-a924-4ce4-b127-474a2557663c"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["b", "p"], ".", " ", "Solve"}], " ", "this", " ", 
     "expression", " ", "for", Cell[TextData[{
      Cell[BoxData[
       FormBox[
        RowBox[{"p", "."}], TraditionalForm]],ExpressionUUID->
       "32ed5233-2652-4734-bf9d-b006719a543f"],
      " "
     }],ExpressionUUID->"fcac0072-140e-4e30-b889-c19cb5545943"]}]}], 
   TraditionalForm]],ExpressionUUID->"b03830c3-fce5-4128-8fd8-b5f1e2cffd2b"]
}], "SubProblem",ExpressionUUID->"f9a65fb8-a64a-412c-9f3a-7e89d4a24f8f"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Use property E3 for exponents to express ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "z"], TraditionalForm]],ExpressionUUID->
  "52a57118-b3b2-4522-ba9d-563ac7a9a5dc"],
 " in terms of ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "142aba4c-d4ed-4ef7-9567-3c7b058b036b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "."}], TraditionalForm]],ExpressionUUID->
  "e370639f-a8ba-4431-b3bc-25c382e0c981"]
}], "SubProblem",ExpressionUUID->"4a88d6e9-b29a-4a91-a8a6-3f59d77c2c43"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "b"], 
    SuperscriptBox["x", "z"]}], TraditionalForm]],ExpressionUUID->
  "0a37b027-d4ff-4af9-9e1c-ead9088ef6dc"],
 " and simplify."
}], "SubProblem",ExpressionUUID->"2402bf89-fee9-4527-b3ee-b74b5e6054ae"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.33, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "185de31d-3175-4bc5-b30f-348f30303a16"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "12f08e2f-ea1e-454e-b92e-2a9561e9296f"],
 StyleBox["95.",
  FontWeight->"Bold"],
 StyleBox["\tInverses of a quartic",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Consider the quartic polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], "."}]}]}]}], TraditionalForm]],
  ExpressionUUID->"496397eb-6d7b-43f0-8b9f-171e8a24c730"]
}], "TProblem",ExpressionUUID->"b1989e97-9274-46f8-b771-9679f5fabb07"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Graph ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e254c5ec-951f-4037-a018-7f3c98a430ec"],
 " and find the largest intervals on which it is one-to-one. The goal is to \
find the inverse function on each of these intervals."
}], "SubProblem",ExpressionUUID->"98205b1a-adc1-4f61-af35-b24b735b34d2"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Make the substitution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "245a317f-e382-4bce-b84a-731a378e9d4d"],
 " to solve the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "b6101922-cfaf-44a0-8a20-c562a0ad96c9"],
 " for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fb9a97c5-e390-4a36-91c4-67be3ed6abab"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "."}], TraditionalForm]],ExpressionUUID->
  "245dcb4b-28b5-44ec-886d-01499bf6a1f7"],
 " Be sure you have included all possible solutions."
}], "SubProblem",ExpressionUUID->"89d3ed20-a9bd-4a19-8b17-df466e02c574"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "Write each inverse function in the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"-", "1"}]], "(", "x", ")"}]}], TraditionalForm]],
  ExpressionUUID->"05ebd51a-66d5-41c7-8077-69bd552edd66"],
 " for each of the intervals found in part (a)."
}], "SubProblem",ExpressionUUID->"17079786-1fa3-444b-b6af-219899214ee5"],

Cell[TextData[{
 StyleBox["96.",
  FontWeight->"Bold"],
 StyleBox["\tInverse of composite functions",
  FontWeight->"Bold"]
}], "Problem",ExpressionUUID->"b0992c42-73e2-4d3a-b5ff-2a7a02573bbe"],

Cell[TextData[{
 StyleBox["a.\t",
  FontWeight->"Bold"],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "3"}]}], TraditionalForm]],ExpressionUUID->
  "dd06e6ce-de7a-406d-bcd5-f87edcd94e4d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "3"], "."}]}], TraditionalForm]],ExpressionUUID->
  "35fb18ed-3e21-4027-885e-cb109f067dfc"],
 " Consider the composite function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "(", 
       RowBox[{"h", "(", "x", ")"}], ")"}], ".", " ", "Find"}], " ", Cell[
     TextData[Cell[BoxData[
      FormBox[
       SuperscriptBox["f", 
        RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
      "e8e98e70-b4b8-43c1-a0df-a3fd5b0055e9"]],ExpressionUUID->
      "ecf597be-5945-4b64-8c36-bc3677cdce06"]}]}], TraditionalForm]],
  ExpressionUUID->"b6170231-cd26-41e6-881c-a648f0a3ccc2"],
 " directly and then express it in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["g", 
     RowBox[{"-", "1"}]], " ", "and", " ", 
    RowBox[{
     SuperscriptBox["h", 
      RowBox[{"-", "1"}]], "."}]}], TraditionalForm]],ExpressionUUID->
  "5d7f7c0b-93a0-4b20-a321-85845f90eec5"]
}], "SubProblem",ExpressionUUID->"4eff0daf-5a1b-4001-862f-0315a8ab9aef"],

Cell[TextData[{
 StyleBox["b.\t",
  FontWeight->"Bold"],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"30f01571-c723-4b5b-b545-be2250b53f74"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "(", "x", ")"}], "=", 
    RowBox[{
     SqrtBox["x"], "."}]}], TraditionalForm]],ExpressionUUID->
  "66412218-ebea-4f16-a8c7-2b6c5c7886fc"],
 " Consider the composite function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "(", 
       RowBox[{"h", "(", "x", ")"}], ")"}], ".", " ", "Find"}], " ", Cell[
     TextData[Cell[BoxData[
      FormBox[
       SuperscriptBox["f", 
        RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
      "bc82f3e2-afb3-414a-91de-f43f60d20b75"]],ExpressionUUID->
      "cf88f416-7099-484f-96d4-8e3c96a3d9db"]}]}], TraditionalForm]],
  ExpressionUUID->"69239d5c-a83c-4d3a-9657-3da14e0ab164"],
 " directly and then express it in terms of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["g", 
     RowBox[{"-", "1"}]], " ", "and", " ", 
    RowBox[{
     SuperscriptBox["h", 
      RowBox[{"-", "1"}]], "."}]}], TraditionalForm]],ExpressionUUID->
  "9bb9bac1-109c-4732-936b-9c94fffcae7f"]
}], "SubProblem",ExpressionUUID->"e3c60cc5-0335-4457-afc3-9ef59e5ae22e"],

Cell[TextData[{
 StyleBox["c.\t",
  FontWeight->"Bold"],
 "Explain why if ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "8db595b2-30f1-4a4e-bbae-c268a553834e"],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "f00d7693-2429-40cc-a649-c5ab2ccedfea"],
 " are one-to-one, the inverse of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"g", "(", 
     RowBox[{"h", "(", "x", ")"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "a8410293-8226-4b83-b46f-bfd25087634e"],
 " exists."
}], "SubProblem",ExpressionUUID->"11f78788-ab64-4d08-9579-70915b8939a2"],

Cell[TextData[{
 StyleBox["97.",
  FontWeight->"Bold"],
 StyleBox["\tNice property",
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["log", "b"], "c"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["log", "c"], "b"}], ")"}]}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"13294f4c-0b8c-4273-ade7-95a979353586"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "39df2485-bbc9-4c86-92a0-f6827932009a"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "b92d098d-87e9-4691-8375-75e2293ca901"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "05c45b86-fbaa-4210-96fe-1bf3cdd4ecb6"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "\[NotEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "09fda4a2-9367-41c8-b0ae-942b52267608"],
 "."
}], "Problem",ExpressionUUID->"54a9b645-11be-46ac-b093-63a3ebbd1779"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
Editable->True,
Saveable->True,
ScreenStyleEnvironment->"Working",
Selectable->True,
WindowSize->{1024, 720},
WindowTitle->"Section 1.3 Inverse, Exponential, and Logarithmic Functions",
Visible->True,
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[18], Selectable -> False], 
       PaneBox[
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"CALCULUS\"", "SR", Bold, 14, StripOnInput -> False], 
             
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[18], Selectable -> False], 
             StyleBox[
             "\"Early Transcendentals, Third Edition\"", "SR", 11, 
              StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], Bold, 
         StripOnInput -> False], Alignment -> {Left, Center}, 
        BaselinePosition -> Center, ImageSize -> {300, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {
            Dynamic[
             Max[0, First[
                ReplaceAll[WindowSize, 
                 Options[
                  EvaluationNotebook[], WindowSize]]] - 840]], 0}, 
          BaselinePosition -> Baseline], "CacheGraphics" -> False], 
        Spacer[
         Dynamic[
          Max[0, First[
             ReplaceAll[WindowSize, 
              Options[
               EvaluationNotebook[], WindowSize]]] - 840]]], Selectable -> 
        False], 
       PaneBox[
        StyleBox[
         StyleBox[
         "\"Briggs, Cochran, Gillett, Schulz\"", "SR", Bold, 11, StripOnInput -> 
          False], Bold, StripOnInput -> False], Alignment -> {Right, Center}, 
        BaselinePosition -> Center, ImageSize -> {180, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[6], Selectable -> False], 
       ActionMenuBox[
        StyleBox[
         TemplateBox[{"\"Section \"", "\"1.3\""}, "RowDefault"], StripOnInput -> 
         False], {
        StyleBox[
          "\"1.3 Inverse, Exponential, and Logarithmic Functions\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate[
           "1.3 Inverse, Exponential, and Logarithmic Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Exponential Functions\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Exponential Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 1\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.45  \[LightBulb]: Properties of exponential \
functions\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.45  \[LightBulb]: Properties of exponential functions"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.46  \[LightBulb]: Properties of exponential \
functions\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.46  \[LightBulb]: Properties of exponential functions"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 2\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION The Natural Exponential Function\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["DEFINITION The Natural Exponential Function"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.47  \[LightBulb]: The natural exponential \
function\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.47  \[LightBulb]: The natural exponential function"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Inverse Functions\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Inverse Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION Inverse Function\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITION Inverse Function"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.48: Inverse functions\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 1.48: Inverse functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 3\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION One-to-One Functions and the Horizontal Line \
Test\""}, "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "DEFINITION One-to-One Functions and the Horizontal Line Test"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one \
functions\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.50  \[LightBulb]: Restricted domain\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 1.50  \[LightBulb]: Restricted domain"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 1.51: Example 1\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 1.51: Example 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.52  \[LightBulb]: Existence of inverse functions\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.52  \[LightBulb]: Existence of inverse functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"THEOREM 1.1 Existence of Inverse Functions\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["THEOREM 1.1 Existence of Inverse Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 4\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 2 Does an inverse exist?\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 2 Does an inverse exist?"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 1.53: Example 2\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 1.53: Example 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"PROCEDURE Finding an Inverse\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["PROCEDURE Finding an Inverse"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 3 Finding inverse functions\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 3 Finding inverse functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 1.54: Example 3\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 1.54: Example 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Graphing Inverse Functions\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Graphing Inverse Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 4 Graphing inverse functions\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 4 Graphing inverse functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.55  \[LightBulb]: Example 4a\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 1.55  \[LightBulb]: Example 4a"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.56  \[LightBulb]: Example 4b\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 1.56  \[LightBulb]: Example 4b"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.57: Symmetric about y=x\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 1.57: Symmetric about y=x"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Logarithmic Functions\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Logarithmic Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION Logarithmic Function Base b\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITION Logarithmic Function Base b"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"IMPORTANT Inverse Relations for Exponential and Logarithmic \
Functions\""}, "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "IMPORTANT Inverse Relations for Exponential and Logarithmic \
Functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.58  \[LightBulb]: Inverses of exponential \
functions\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 1.58  \[LightBulb]: Inverses of exponential functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 1.59  \[LightBulb]: Logarithm functions\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 1.59  \[LightBulb]: Logarithm functions"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 6\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 5 Using inverse relations\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 5 Using inverse relations"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Change of Base\"", {"MSG", FontWeight -> "Bold", FontSize -> 13},
            StripOnInput -> False] :> {
           NotebookLocate["Change of Base"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"IMPORTANT Change-of-Base Rules\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["IMPORTANT Change-of-Base Rules"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 6 Changing bases\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 6 Changing bases"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"SECTION 1.3 EXERCISES\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["SECTION 1.3 EXERCISES"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Getting Started\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Getting Started"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Practice Exercises\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Practice Exercises"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Explorations and Challenges\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 11}, 
           StripOnInput -> False] :> {
           NotebookLocate["\[EmptySmallCircle] Explorations and Challenges"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}}, 
        ImageSize -> {108, 22}, FrameMargins -> 0, BaseStyle -> {"MSG", 11}, 
        BaselinePosition -> Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0102.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ActionMenuBox["\"Contents\"", {StyleBox[
           TemplateBox[{"\"Calculus: Early Transcendentals\""}, "RowDefault"],
            Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Chapters\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Preface\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0002.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 1\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Review of Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Representing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Inverse, Exponential, and Logarithmic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Functions and Their Inverses\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 2\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Limits\""}, "RowDefault"], 
           Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Idea of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definitions of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Techniques for Computing Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits at Infinity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0205.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0206.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Precise Definitions of Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0207.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0208.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 3\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Derivatives\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Introducing the Derivative\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Derivative as a Function\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Rules of Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Product and Quotient Rules\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Trigonometric Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives as Rates of Change\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0307.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Implicit Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0308.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Logarithmic and Exponential Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0309.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.10\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Inverse Trigonometric Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0310.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.11\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Related Rates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0311.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0312.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 4\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of the Derivative\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maxima and Minima\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Mean Value Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"What Derivatives Tell Us\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Optimization Problems\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Approximation and Differentials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0406.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"L'H\[OHat]pital's Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0407.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Newton's Method\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0408.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Antiderivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0409.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0410.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 5\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Areas Under Curves\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definite Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Fundamental Theorem of Calculus\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Working with Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Substitution Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0506.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 6\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of Integration\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Velocity and Net Change\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Regions Between Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Slicing\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Shells\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Area\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Physical Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 7\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Logarithmic, Exponential, and Hyperbolic Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Logarithmic and Exponential Functions Revisited\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Exponential Models\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Hyperbolic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0704.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 8\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration Techniques\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Approaches\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration by Parts\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Trigonometric Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Substitutions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Fractions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration Strategies\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0806.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Other Methods of Integration\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0807.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Numerical Integration\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0808.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Improper Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0809.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0810.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 9\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Direction Fields and Euler's Method\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Separable Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Special First-Order Linear Differential Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Modeling with Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0906.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 10\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Sequences and Infinite Series\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"An Overview\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Sequences\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1002.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1003.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Divergence and Integral Tests\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1004.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Comparison Tests\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1005.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Alternating Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1006.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Ratio and Root Tests\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1007.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Choosing a Convergence Test\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1008.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1009.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 11\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Power Series\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Functions with Polynomials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Properties of Power Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Taylor Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Working with Taylor Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 12\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Parametric and Polar Curves\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Parametric Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Polar Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Conic Sections\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1205.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 13\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vectors and the Geometry of Space\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vectors in the Plane\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vectors in Three Dimensions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Dot Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Cross Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Lines and Planes in Space\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Cylinders and Quadric Surfaces\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1307.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 14\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus of Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Motion in Space\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Curvature and Normal Vectors\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1406.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 15\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Functions of Several Variables\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphs and Level Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits and Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Derivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule \""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Directional Derivatives and the Gradient\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Tangent Planes and Linear Approximation\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1506.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maximum/Minimum Problems\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1507.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Lagrange Multipliers\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1508.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1509.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 16\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Multiple Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over Rectangular Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over General Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Triple Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Triple Integrals in Cylindrical and Spherical Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Integrals for Mass Calculations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Change of Variables in Multiple Integrals\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 17\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Vector Calculus\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vector Fields\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Line Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Conservative Vector Fields\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Green\[CloseCurlyQuote]s Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1704.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence and Curl\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1705.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1706.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Stokes\[CloseCurlyQuote] Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1707.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1708.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1709.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 18\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Second\[Hyphen]Order Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Homogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.3\"", 
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Nonhomogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Complex Forcing Functions\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1806.cdf"], None}], StyleBox[
           TemplateBox[{"\"End Matter\""}, "RowDefault"], Bold, StripOnInput -> 
           False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix A\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix B\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix C\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Index\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"App. Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Figure Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1906.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Algebra/Trig (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_frontpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Calculus (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_endpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Table of Integrals (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_table.pdf"], None}], 
         StyleBox[
          "\"Answers to Odd Exercises\"", Bold, StripOnInput -> False] :> 
         Style["Answers to Odd Exercises", Bold], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  1 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_01.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_02.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  3 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_03.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  4 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_04.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  5 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_05.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  6 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_06.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  7 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_07.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  8 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_08.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  9 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_09.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 10 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_10.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 11 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_11.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 12 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_12.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 13 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_13.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 14 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_14.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 15 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_15.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 16 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_16.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 17 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_17.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter D2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_18.pdf"], None}]}, FrameMargins -> 1, 
        ImageSize -> {72, 22}, BaseStyle -> {"MSG", 11}, BaselinePosition -> 
        Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0104.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Expanded View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Expanded View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}], True -> 
            GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Answers to Odd Exercises",
              All, CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "AlgebraCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Algebra Check", All, 
             CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "QuickCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "CalloutIcon", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "Subsubsubsubsection", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "Subsection", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Outline View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Outline View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ActionMenuBox[
        StyleBox["\"%\"", "Label", 13, StripOnInput -> False], {
        "\"50%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.5]}, "\"75%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.75]}, "\"100%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1]}, "\"125%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.25]}, "\"150%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.5]}, "\"175%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.75]}, "\"200%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2]}, "\"225%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.25]}, "\"250%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.5]}, "\"275%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.75]}, "\"300%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 3]}}, 
        FrameMargins -> {{0, 1}, {0, 0}}, ImageMargins -> 0, 
        ImageSize -> {40, 22}, BaselinePosition -> Center]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]], "DockedCell", 
  CellFrameMargins -> 3],
ScrollingOptions->{"VerticalScrollRange"->Fit},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[
     RowBox[{
       CounterBox["Page"], "            ", 
       StyleBox["Chapter 1  \[Bullet]  Functions"]}]], "Header"], "", ""}, {
  "", "", 
   Cell[
    TextData[
     RowBox[{
       StyleBox[
       "Section 1.3  Inverse, Exponential, and Logarithmic Functions"], 
       "            ", 
       CounterBox["Page"]}]], "Header"]}},
PageFooters->{{"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}, {"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}},
PrintingOptions->{"FacingPages"->True,
"FirstPageHeader"->True,
"InnerOuterMargins"->{90, 48},
"PrintingMargins"->{{48, 48}, {72, 72}}},
PrivateNotebookOptions->{"PluginToolbarEnabled"->False,
"PluginUpdateNotificationsEnabled"->False},
ShowCellBracket->Automatic,
Deployed->False,
Copyable->True,
ShowCellLabel->False,
ShowCellTags->False,
TrackCellChangeTimes->False,
ShowAutoSpellCheck->False,
Magnification->1,
GridBoxOptions->{AllowScriptLevelChange->False},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, ShowGroupOpener -> 
       False, CellMargins -> {{10, 0}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 20, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> None, ShowGroupOpener -> 
       False, CellMargins -> {{0, Inherited}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.5], FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontTracking -> "Wide"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{15, 0}, {2, 7}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       18, FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Extended", FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsection", "Printout"], CellFrame -> None, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{0, 0}, {2, 10}}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", FontSlant -> "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
       GrayLevel[0]], 
      Cell[
       StyleData["Subsubsection", "Printout"], CellDingbat -> None, 
       CellMargins -> {{0, Inherited}, {2, 10}}, FontFamily -> "Helvetica", 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       False, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Subsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13, FontSlant -> "Plain"]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> "Bold", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsubsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FirstCell"], ShowCellBracket -> False, 
       CellMargins -> {{30, 10}, {7, 7}}, CellOpen -> False, TabSpacings -> 3,
        FontSize -> 14], 
      Cell[
       StyleData["FirstCell", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       CellOpen -> False, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Text"], CellMargins -> {{30, 10}, {7, 7}}, TabSpacings -> 3,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Text", "Printout"], CellMargins -> {{0, 0}, {7, 7}}, 
       TabSpacings -> 3, FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{50, 10}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, FontFamily -> 
       "Times", FontSize -> 14], 
      Cell[
       StyleData["Item", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{20, 0}, {2, 2}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{70, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Subitem", 
       CounterAssignments -> {{"Subsubitem", 0}}, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["Subitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{40, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{90, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subsubitem", 
       TabSpacings -> 3, CounterIncrements -> "Subsubitem", FontFamily -> 
       "Times", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Subsubitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{60, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    StyleData["QuickCheckFont"], FontFamily -> "Helvetica", FontSize -> 11, 
    FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheck"], CellMargins -> {{30, 10}, {0, 7}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 51}, 
       LineSpacing -> {1, 3}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["QuickCheck", "Printout"], CellMargins -> {{0, 30}, {0, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, TabSpacings -> 3, 
       FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswerIcon"], ShowGroupOpener -> True, 
       CellMargins -> {{50, 108}, {0, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left,
        TabSpacings -> 2, FontFamily -> "Helvetica", FontSize -> 11, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> "Wide", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["QuickCheckAnswerIcon", "Printout"], 
       CellMargins -> {{10, 288}, {0, 0}}, PageBreakAbove -> False, 
       PageBreakBelow -> False, CellFrameColor -> 
       RGBColor[0.976, 0.855, 0.514], FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswer"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["QuickCheckAnswer", "Printout"], 
       CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{30, 60}, {7, 0}}, 
       PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.8], 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontSize -> 13]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DefinitionFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]], 
      Cell[
       StyleData["DefinitionFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Definition"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Definition", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TheoremFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["TheoremFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Theorem"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Theorem", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProofFont"], FontFamily -> "Times", FontSize -> 14, 
       FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["ProofFont", "Printout"], FontFamily -> "Times", FontSize -> 
       13, FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SummaryFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["SummaryFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Summary"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Summary", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProcedureFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["ProcedureFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
       FontTracking -> "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Procedure"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, CellFrameColor -> GrayLevel[0.85], 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Procedure", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Important"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Important", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    StyleData["RelatedExercises"], TextAlignment -> Right, FontFamily -> 
    "Times", FontSize -> 13, FontSlant -> Italic, FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide"], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Closed]], 
   Cell[
    StyleData["CalloutIcon"], ShowGroupOpener -> True, 
    CellMargins -> {{50, 60}, {0, 0}}, 
    CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
    CellEventActions -> {"MouseClicked" :> {
        FrontEndTokenExecute["OpenCloseGroup"], 
        FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
    CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left, 
    LineSpacing -> {1, 2}, TabSpacings -> 2, FontFamily -> "Helvetica", 
    FontSize -> 12, FontWeight -> "Bold", FontTracking -> "Wide", FontColor -> 
    Dynamic[
      If[
       CurrentValue["MouseOver"], Orange, Black], 
      ImageSizeCache -> {11., {3., 8.}}]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Closed]], 
   Cell[
    StyleData["FigureCaption"], CellMargins -> {{30, 30}, {7, 7}}, 
    LineSpacing -> {1, 3}, FontSize -> 14], 
   Cell[
    StyleData["ChapterPreviewFont"], FontFamily -> "Arial", FontSize -> 24, 
    FontWeight -> "Normal", FontColor -> RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SectionTitleFont"], FontFamily -> "Arial", FontWeight -> 
    "Bold", FontTracking -> "Extended", FontColor -> RGBColor[0, 0.34, 0.45]], 
   Cell[
    StyleData["ExampleFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SolutionFont"], FontFamily -> "Helvetica"], 
   Cell[
    StyleData["FigureFont"], FontFamily -> "Arial", FontSize -> 12, 
    FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FigureFontText"], FontFamily -> "Arial", FontSize -> 12, 
       FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
      Cell[
       StyleData["FigureFontText", "Printout"], FontFamily -> "Arial", 
       FontSize -> 12, FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    StyleData["TableFont"], FontFamily -> "Arial", FontSize -> 13, FontWeight -> 
    "Bold", FontColor -> RGBColor[0., 0.597656, 0.515625]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TableCell"], CellMargins -> {{30, 10}, {5, 5}}], 
      Cell[
       StyleData["TableCell", "Printout"], CellMargins -> {{0, 0}, {5, 5}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TypesetAnnotationFont"], FontFamily -> "Times", FontColor -> 
       RGBColor[0., 0.644531, 0.84375]], 
      Cell[
       StyleData["TypesetAnnotationFont", "Printout"], FontFamily -> "Times", 
       FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide", FontColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031]], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{30, 108}, {2, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.97]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Open]], 
   Cell[
    StyleData["Note"], FontFamily -> "Helvetica", FontSize -> 12, 
    FontTracking -> "Wide", FontColor -> RGBColor[0.6, 0.4, 0.4]], 
   Cell[
    StyleData["ExerciseFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.8, 0, 0.4]], 
   Cell[
    StyleData["ExerciseGroupFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.0625, 0.390625, 0.519531]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseAnswerGroupFont"], FontFamily -> "Helvetica", 
       FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["ExerciseAnswerGroupFont", "Printout"], FontFamily -> 
       "Helvetica", FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ControlFont"], FontFamily -> "Helvetica", FontSize -> 12, 
       FontTracking -> "Wide", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["ControlFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontTracking -> "Wide", FontColor -> GrayLevel[0]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseDirectionsCell"], CellMargins -> {{30, 10}, {7, 7}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["ExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{30, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 13, FontWeight -> "Plain", 
       FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TExerciseDirectionsCell"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["TExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubExerciseDirectionsCell"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -22, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["SubExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -16, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Problem"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -29, TabSpacings -> 2.5,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Problem", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -19, TabSpacings -> 2.5,
        FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TProblem"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -47, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["TProblem", "Printout"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -32, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubProblem"], CellMargins -> {{58, 10}, {2, 2}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -22, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["SubProblem", "Printout"], CellMargins -> {{58, 10}, {2, 2}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -16, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Comment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[0, 0, 1], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[0.87, 0.94, 1]], 
      Cell[
       StyleData["Comment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["EditorComment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[1, 0, 0], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[1, 0.85, 0.85]], 
      Cell[
       StyleData["EditorComment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    StyleData["IndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[1, 0.5, 0]], 
   Cell[
    StyleData["ApplicationIndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[0, 0.5, 1]], 
   Cell[
    StyleData["InlineCell"], ScriptSizeMultipliers -> 0.8, ScriptLevel -> 0, 
    NumberSeparator -> ","], 
   Cell[
    StyleData["Output"], NumberSeparator -> ","], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Objectives"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {18, -2}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.5], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 4}, ParagraphIndent -> -24, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14, Background -> GrayLevel[0.97]], 
      
      Cell[
       StyleData["Objectives", "Printout"], CellMargins -> {{30, 30}, {6, 6}},
        PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.5], 
       ParagraphIndent -> -15, TabSpacings -> 2, FontSize -> 13, Background -> 
       GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Solution"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> RGBColor[0.94, 0.91, 0.88]], 
      Cell[
       StyleData["Solution", "Printout"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Answer"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Answer", "Printout"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
       ContextMenu -> FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"],
        FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, 
          RGBColor[0.269993, 0.308507, 0.6]], 
         ImageSizeCache -> {11., {3., 8.}}], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            NotebookLocate[#2, "OpenInNewWindow" -> True]}]& ), Evaluator -> 
         None, Method -> "Queued"}], 
      Cell[
       StyleData["Hyperlink", "Condensed"], FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Header", "Printout"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Footer", "Printout"], CellMargins -> {{0, 0}, {0, 4}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]]}, WindowSize -> {808, 911}, 
  WindowMargins -> {{20, Automatic}, {Automatic, 44}}, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"],
PrivateNotebookOptions -> {"ShowProductBranding" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "1.3 Inverse, Exponential, and Logarithmic Functions"->{
  Cell[1559, 36, 290, 5, 
  42, "Section", "ExpressionUUID" -> "b3f49dd1-b5e7-4070-8ebd-d0c7686b54c4",
   CellGroupingRules->{"SectionGrouping", Inherited},
   CellTags->"1.3 Inverse, Exponential, and Logarithmic Functions"]},
 "Exponential Functions"->{
  Cell[2456, 58, 210, 4, 
  28, "Subsection", "ExpressionUUID" -> "21b40c61-c1e1-44d0-b342-f41f058acb65",
   CellGroupingRules->{"SectionGrouping", Inherited},
   CellTags->"Exponential Functions"]},
 "Quick Check 1"->{
  Cell[9354, 283, 807, 21, 
  26, "QuickCheck", "ExpressionUUID" -> "fb18a2f9-cbca-4add-af3c-9b4b0e90da36",
   CellTags->"Quick Check 1"]},
 "Figure 1.45  \[LightBulb]: Properties of exponential functions"->{
  Cell[14221, 443, 6331, 124, 
  378, "Output", "ExpressionUUID" -> "60974645-958c-4cbe-99ec-236cdeffd484",
   CellTags->
    "Figure 1.45  \[LightBulb]: Properties of exponential functions"]},
 "Figure 1.46  \[LightBulb]: Properties of exponential functions"->{
  Cell[22620, 639, 6238, 121, 
  378, "Output", "ExpressionUUID" -> "59c6e899-9e2e-4403-a9a3-6511075344c7",
   CellTags->
    "Figure 1.46  \[LightBulb]: Properties of exponential functions"]},
 "Quick Check 2"->{
  Cell[28861, 762, 818, 25, 
  42, "QuickCheck", "ExpressionUUID" -> "d0890e71-35a7-40a6-b63d-138c2fea6225",
   CellTags->"Quick Check 2"]},
 "DEFINITION The Natural Exponential Function"->{
  Cell[32123, 865, 850, 29, 
  70, "Definition", "ExpressionUUID" -> "6c82dbd7-26bd-47cd-b73e-059160342082",
   CellTags->"DEFINITION The Natural Exponential Function"]},
 "Figure 1.47  \[LightBulb]: The natural exponential function"->{
  Cell[35290, 964, 7482, 153, 
  611, "Output", "ExpressionUUID" -> "9b338ef4-867c-4a12-aa0d-47c766a415b6",
   CellTags->"Figure 1.47  \[LightBulb]: The natural exponential function"]},
 "Inverse Functions"->{
  Cell[42821, 1123, 148, 2, 
  25, "Subsection", "ExpressionUUID" -> "cccce876-6b19-4247-9334-2d19ba5a11de",
   CellTags->"Inverse Functions"]},
 "DEFINITION Inverse Function"->{
  Cell[46689, 1247, 1076, 37, 
  70, "Definition", "ExpressionUUID" -> "b0d557c6-0c3c-4f29-b4fc-fd190ee8df43",
   CellTags->"DEFINITION Inverse Function"]},
 "Figure 1.48: Inverse functions"->{
  Cell[47768, 1286, 49481, 822, 
  231, "Output", "ExpressionUUID" -> "ad79f26c-a8df-4a64-9acc-c9d719414029",
   CellTags->"Figure 1.48: Inverse functions"]},
 "Quick Check 3"->{
  Cell[97252, 2110, 967, 30, 
  43, "QuickCheck", "ExpressionUUID" -> "acff0fe7-e3e7-486d-aa9a-cd7d2eeea6ac",
   CellTags->"Quick Check 3"]},
 "DEFINITION One-to-One Functions and the Horizontal Line Test"->{
  Cell[131785, 2771, 2353, 78, 
  109, "Definition", "ExpressionUUID" -> "0eb02578-a13b-4be0-819c-d1d3db10b296
   ",
   CellTags->
    "DEFINITION One-to-One Functions and the Horizontal Line Test"]},
 "Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one functions"->{
  Cell[134141, 2851, 12631, 243, 
  313, "Output", "ExpressionUUID" -> "78fd9dc8-625c-456f-96db-06d8ed73620f",
   CellTags->
    "Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one functions"]},
 "Figure 1.50  \[LightBulb]: Restricted domain"->{
  Cell[148369, 3144, 10489, 208, 
  582, "Output", "ExpressionUUID" -> "0600aa21-4aa5-4a8d-9561-a8a849de22b2",
   CellTags->"Figure 1.50  \[LightBulb]: Restricted domain"]},
 "EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions"->{
  Cell[158883, 3356, 225, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "4575c607-8d3d-4e39-
   b39d-871cfc86043a",
   CellTags->"EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions"]},
 "Figure 1.51: Example 1"->{
  Cell[159600, 3380, 33163, 554, 
  283, "Output", "ExpressionUUID" -> "f302fa72-0b28-475d-bdbc-6c545ff73a1a",
   CellTags->"Figure 1.51: Example 1"]},
 "Figure 1.52  \[LightBulb]: Existence of inverse functions"->{
  Cell[195925, 4039, 16172, 301, 
  453, "Output", "ExpressionUUID" -> "ad05f02f-7db6-46da-8d26-216d1721ee24",
   CellTags->"Figure 1.52  \[LightBulb]: Existence of inverse functions"]},
 "THEOREM 1.1 Existence of Inverse Functions"->{
  Cell[212100, 4342, 2481, 82, 
  126, "Theorem", "ExpressionUUID" -> "df67695f-3b7c-426b-89e5-deb9dcbf719a",
   CellTags->"THEOREM 1.1 Existence of Inverse Functions"]},
 "Quick Check 4"->{
  Cell[215015, 4438, 821, 23, 
  41, "QuickCheck", "ExpressionUUID" -> "6ac9990d-0de8-4aef-ae09-9dd53085ec15",
   CellTags->"Quick Check 4"]},
 "EXAMPLE 2 Does an inverse exist?"->{
  Cell[216296, 4477, 213, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "c20f154a-5fd8-4b87-
   baa6-7b188783aff3",
   CellTags->"EXAMPLE 2 Does an inverse exist?"]},
 "Figure 1.53: Example 2"->{
  Cell[218074, 4533, 41787, 696, 
  269, "Output", "ExpressionUUID" -> "080d5784-2b8a-401e-9e90-e66254387662",
   CellTags->"Figure 1.53: Example 2"]},
 "PROCEDURE Finding an Inverse"->{
  Cell[262491, 5316, 1664, 56, 
  121, "Procedure", "ExpressionUUID" -> "cc992aec-2348-4a1d-80c7-a648196f9fcd",
   CellTags->"PROCEDURE Finding an Inverse"]},
 "EXAMPLE 3 Finding inverse functions"->{
  Cell[265183, 5410, 219, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "4e098b9d-18c8-4454-9f7f-
   c7d13574df22",
   CellTags->"EXAMPLE 3 Finding inverse functions"]},
 "Figure 1.54: Example 3"->{
  Cell[278832, 5857, 78085, 1292, 
  317, "Output", "ExpressionUUID" -> "ecb2acf0-de5d-4aeb-82a5-537527d57bed",
   CellTags->"Figure 1.54: Example 3"]},
 "Quick Check 5"->{
  Cell[357144, 7160, 743, 21, 
  29, "QuickCheck", "ExpressionUUID" -> "32d5b714-9028-4169-8600-153d01dce3da",
   CellTags->"Quick Check 5"]},
 "Graphing Inverse Functions"->{
  Cell[358789, 7215, 220, 4, 
  25, "Subsection", "ExpressionUUID" -> "5ddf5f27-5381-4a0f-9de4-f72fb651bd4a",
   CellGroupingRules->{"SectionGrouping", Inherited},
   CellTags->"Graphing Inverse Functions"]},
 "EXAMPLE 4 Graphing inverse functions"->{
  Cell[359234, 7228, 221, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "2fe04c13-
   f4cc-40ed-8b9e-74d931d73a2b",
   CellTags->"EXAMPLE 4 Graphing inverse functions"]},
 "Figure 1.55  \[LightBulb]: Example 4a"->{
  Cell[362837, 7354, 8697, 173, 
  547, "Output", "ExpressionUUID" -> "c02af8ad-645f-4a92-a4f4-6a4129101886",
   CellTags->"Figure 1.55  \[LightBulb]: Example 4a"]},
 "Figure 1.56  \[LightBulb]: Example 4b"->{
  Cell[375609, 7666, 8971, 178, 
  522, "Output", "ExpressionUUID" -> "31128be5-0409-4e79-b065-c91503f80c7a",
   CellTags->"Figure 1.56  \[LightBulb]: Example 4b"]},
 "Figure 1.57: Symmetric about y=x"->{
  Cell[386056, 7893, 65399, 1083, 
  279, "Output", "ExpressionUUID" -> "9397924c-a4fb-4083-9f09-475cb92fb6ba",
   CellTags->"Figure 1.57: Symmetric about y=x"]},
 "Logarithmic Functions"->{
  Cell[454082, 9063, 158, 3, 
  25, "Subsection", "ExpressionUUID" -> "99499ec2-5672-4c5a-bbb7-83013f50055a",
   CellTags->"Logarithmic Functions"]},
 "DEFINITION Logarithmic Function Base b"->{
  Cell[455355, 9103, 1689, 58, 
  93, "Definition", "ExpressionUUID" -> "86f682c5-f385-4213-9b29-637bbac91251",
   CellTags->"DEFINITION Logarithmic Function Base b"]},
 "IMPORTANT Inverse Relations for Exponential and Logarithmic Functions"->{
  Cell[458949, 9224, 1449, 48, 
  120, "Important", "ExpressionUUID" -> "d91a78bc-5830-44b1-9223-286784eee4f5",
   CellGroupingRules->"NormalGrouping",
   CellTags->
    "IMPORTANT Inverse Relations for Exponential and Logarithmic \
Functions"]},
 "Figure 1.58  \[LightBulb]: Inverses of exponential functions"->{
  Cell[464741, 9426, 10197, 200, 
  549, "Output", "ExpressionUUID" -> "02d37eec-361f-448a-976c-794f39e8126e",
   CellTags->
    "Figure 1.58  \[LightBulb]: Inverses of exponential functions"]},
 "Figure 1.59  \[LightBulb]: Logarithm functions"->{
  Cell[475858, 9657, 7256, 146, 
  450, "Output", "ExpressionUUID" -> "25daea73-fce5-4a8a-879f-4d8ffcfd87f0",
   CellTags->"Figure 1.59  \[LightBulb]: Logarithm functions"]},
 "Quick Check 6"->{
  Cell[486549, 9924, 1023, 32, 
  29, "QuickCheck", "ExpressionUUID" -> "160246a5-5a60-4d68-8b9e-5afb2a7687b5",
   CellTags->"Quick Check 6"]},
 "EXAMPLE 5 Using inverse relations"->{
  Cell[488649, 9994, 215, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "38e9ef53-daed-4792-9ae0-
   c541f3aa6f39",
   CellTags->"EXAMPLE 5 Using inverse relations"]},
 "Change of Base"->{
  Cell[493664, 10160, 142, 2, 
  25, "Subsection", "ExpressionUUID" -> "6911c132-4050-469f-82e8-e7759ecf4f6f",
   CellTags->"Change of Base"]},
 "IMPORTANT Change-of-Base Rules"->{
  Cell[500085, 10360, 2596, 79, 
  182, "Summary", "ExpressionUUID" -> "23027ec3-1ba0-484c-be45-8dc2a9a18f38",
   CellTags->"IMPORTANT Change-of-Base Rules"]},
 "EXAMPLE 6 Changing bases"->{
  Cell[502706, 10443, 197, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "0e494e86-34b6-43d5-
   a1e6-19d07ad26045",
   CellTags->"EXAMPLE 6 Changing bases"]},
 "SECTION 1.3 EXERCISES"->{
  Cell[507323, 10602, 146, 3, 
  25, "Subsection", "ExpressionUUID" -> "d334ba41-0ba5-4d49-b813-a7411414ae96",
   CellTags->"SECTION 1.3 EXERCISES"]},
 "\[EmptySmallCircle] Getting Started"->{
  Cell[507494, 10609, 175, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "3e7d154e-a9ad-4c39-
   ad59-55bac2c4ffdd",
   CellTags->"\[EmptySmallCircle] Getting Started"]},
 "\[EmptySmallCircle] Practice Exercises"->{
  Cell[814276, 15963, 181, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "e19b357c-b65e-472f-
   b21d-24a4a28d06e4",
   CellTags->"\[EmptySmallCircle] Practice Exercises"]},
 "\[EmptySmallCircle] Explorations and Challenges"->{
  Cell[1111689, 21785, 199, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "f3261f57-
   dab6-4e03-9ecc-97b9ba193775",
   CellTags->"\[EmptySmallCircle] Explorations and Challenges"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"1.3 Inverse, Exponential, and Logarithmic Functions", 1317765, 26690},
 {"Exponential Functions", 1318020, 26695},
 {"Quick Check 1", 1318240, 26700},
 {"Figure 1.45  \[LightBulb]: Properties of exponential functions", 1318449, \
26704},
 {"Figure 1.46  \[LightBulb]: Properties of exponential functions", 1318712, \
26709},
 {"Quick Check 2", 1318926, 26714},
 {"DEFINITION The Natural Exponential Function", 1319117, 26718},
 {"Figure 1.47  \[LightBulb]: The natural exponential function", 1319354, \
26722},
 {"Inverse Functions", 1319564, 26726},
 {"DEFINITION Inverse Function", 1319743, 26730},
 {"Figure 1.48: Inverse functions", 1319937, 26734},
 {"Quick Check 3", 1320116, 26738},
 {"DEFINITION One-to-One Functions and the Horizontal Line Test", 1320325, \
26742},
 {"Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one functions", 1320596, \
26748},
 {"Figure 1.50  \[LightBulb]: Restricted domain", 1320845, 26753},
 {"EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions", 1321072, 26757},
 {"Figure 1.51: Example 1", 1321286, 26762},
 {"Figure 1.52  \[LightBulb]: Existence of inverse functions", 1321502, 26766},
 {"THEOREM 1.1 Existence of Inverse Functions", 1321738, 26770},
 {"Quick Check 4", 1321929, 26774},
 {"EXAMPLE 2 Does an inverse exist?", 1322111, 26778},
 {"Figure 1.53: Example 2", 1322311, 26783},
 {"PROCEDURE Finding an Inverse", 1322498, 26787},
 {"EXAMPLE 3 Finding inverse functions", 1322699, 26791},
 {"Figure 1.54: Example 3", 1322902, 26796},
 {"Quick Check 5", 1323075, 26800},
 {"Graphing Inverse Functions", 1323251, 26804},
 {"EXAMPLE 4 Graphing inverse functions", 1323503, 26809},
 {"Figure 1.55  \[LightBulb]: Example 4a", 1323722, 26814},
 {"Figure 1.56  \[LightBulb]: Example 4b", 1323932, 26818},
 {"Figure 1.57: Symmetric about y=x", 1324137, 26822},
 {"Logarithmic Functions", 1324328, 26826},
 {"DEFINITION Logarithmic Function Base b", 1324523, 26830},
 {"IMPORTANT Inverse Relations for Exponential and Logarithmic Functions", \
1324768, 26834},
 {"Figure 1.58  \[LightBulb]: Inverses of exponential functions", 1325082, \
26841},
 {"Figure 1.59  \[LightBulb]: Logarithm functions", 1325330, 26846},
 {"Quick Check 6", 1325525, 26850},
 {"EXAMPLE 5 Using inverse relations", 1325709, 26854},
 {"Change of Base", 1325902, 26859},
 {"IMPORTANT Change-of-Base Rules", 1326083, 26863},
 {"EXAMPLE 6 Changing bases", 1326274, 26867},
 {"SECTION 1.3 EXERCISES", 1326466, 26872},
 {"\[EmptySmallCircle] Getting Started", 1326659, 26876},
 {"\[EmptySmallCircle] Practice Exercises", 1326882, 26881},
 {"\[EmptySmallCircle] Explorations and Challenges", 1327117, 26886}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1559, 36, 290, 5, 42, "Section", "ExpressionUUID" -> \
"b3f49dd1-b5e7-4070-8ebd-d0c7686b54c4",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->"1.3 Inverse, Exponential, and Logarithmic Functions"],
Cell[1852, 43, 579, 11, 65, "Text", "ExpressionUUID" -> \
"caf92762-a3db-4a92-8d39-c7179333883f"],
Cell[CellGroupData[{
Cell[2456, 58, 210, 4, 28, "Subsection", "ExpressionUUID" -> \
"21b40c61-c1e1-44d0-b342-f41f058acb65",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->"Exponential Functions"],
Cell[2669, 64, 1838, 55, 69, "Text", "ExpressionUUID" -> \
"997e4405-9e39-49bd-b366-776b5fb48b68"],
Cell[4510, 121, 568, 17, 49, "Text", "ExpressionUUID" -> \
"6dec6437-8654-4f38-b557-aec4dcc49bd0"],
Cell[CellGroupData[{
Cell[5103, 142, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"b645c103-7481-4b9f-b913-c9de9cb1ab86"],
Cell[5248, 145, 512, 16, 49, "Callout", "ExpressionUUID" -> \
"4d3c4b94-ec4f-4afb-9226-66238ccf6fe7"]
}, Closed]],
Cell[5775, 164, 1317, 32, 64, "Text", "ExpressionUUID" -> \
"7923be95-96d0-4958-b5e9-df5ece9ad623"],
Cell[CellGroupData[{
Cell[7117, 200, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"fb227797-a144-47a0-beaa-16004314af55"],
Cell[7262, 203, 2077, 77, 165, "Callout", "ExpressionUUID" -> \
"7e6808cf-2fa4-4df2-b96e-13f61526067a"]
}, Closed]],
Cell[9354, 283, 807, 21, 26, "QuickCheck", "ExpressionUUID" -> \
"fb18a2f9-cbca-4add-af3c-9b4b0e90da36",
 CellTags->"Quick Check 1"],
Cell[CellGroupData[{
Cell[10186, 308, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"80c0c85c-177d-4821-aa54-2e41f2d33bac"],
Cell[10301, 310, 540, 14, 39, "QuickCheckAnswer", "ExpressionUUID" -> \
"f4f75999-7bf1-4602-9684-f0d596425e33"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[10890, 330, 340, 9, 29, "Subsection", "ExpressionUUID" -> \
"9f68cebd-9ee8-4f39-ae54-a5fe45574637"],
Cell[11233, 341, 1347, 42, 27, "Text", "ExpressionUUID" -> \
"4f2da374-6da3-48db-8e4f-888d31e14f0e"],
Cell[12583, 385, 532, 17, 33, "Text", "ExpressionUUID" -> \
"ff028130-8822-464a-aea7-9ca57d546d32"],
Cell[13118, 404, 1100, 37, 30, "Text", "ExpressionUUID" -> \
"a26decc6-c87a-4279-b2f9-a63aa50f6acc"],
Cell[14221, 443, 6331, 124, 378, "Output", "ExpressionUUID" -> \
"60974645-958c-4cbe-99ec-236cdeffd484",
 CellTags->"Figure 1.45  \[LightBulb]: Properties of exponential functions"],
Cell[20555, 569, 738, 23, 50, "Text", "ExpressionUUID" -> \
"7684bdbb-1ca5-4b8a-afce-c875511b7baa"],
Cell[21296, 594, 695, 21, 51, "Text", "ExpressionUUID" -> \
"e3e5d9ff-2c60-40f8-b1c0-948aa5ff357c"],
Cell[21994, 617, 623, 20, 30, "Text", "ExpressionUUID" -> \
"1fd29385-1787-438e-a307-0227cb5c4601"],
Cell[22620, 639, 6238, 121, 378, "Output", "ExpressionUUID" -> \
"59c6e899-9e2e-4403-a9a3-6511075344c7",
 CellTags->"Figure 1.46  \[LightBulb]: Properties of exponential functions"],
Cell[28861, 762, 818, 25, 42, "QuickCheck", "ExpressionUUID" -> \
"d0890e71-35a7-40a6-b63d-138c2fea6225",
 CellTags->"Quick Check 2"],
Cell[CellGroupData[{
Cell[29704, 791, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"44c5c141-6e31-4c02-baeb-a690b50a1a2d"],
Cell[29819, 793, 1003, 32, 43, "QuickCheckAnswer", "ExpressionUUID" -> \
"410bf68e-b0fd-4219-9845-f140552e37b4"]
}, Closed]],
Cell[CellGroupData[{
Cell[30859, 830, 114, 0, 21, "Subsubsection", "ExpressionUUID" -> \
"ac148012-3e06-464f-8cee-d50f26e76102"],
Cell[30976, 832, 617, 14, 47, "Text", "ExpressionUUID" -> \
"b8908c81-e413-4f3f-89e0-fb2258f8994a"],
Cell[CellGroupData[{
Cell[31618, 850, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"3539f2c5-af86-41ba-843d-431e6531cb2e"],
Cell[31763, 853, 345, 9, 37, "Callout", "ExpressionUUID" -> \
"5780e5ea-1d6c-4fcb-b1df-7a0cf469ab5c"]
}, Closed]],
Cell[32123, 865, 850, 29, 70, "Definition", "ExpressionUUID" -> \
"6c82dbd7-26bd-47cd-b73e-059160342082",
 CellTags->"DEFINITION The Natural Exponential Function"],
Cell[32976, 896, 2311, 66, 86, "Text", "ExpressionUUID" -> \
"67fcc915-a931-4dc6-b808-b443b1ad9600"],
Cell[35290, 964, 7482, 153, 611, "Output", "ExpressionUUID" -> \
"9b338ef4-867c-4a12-aa0d-47c766a415b6",
 CellTags->"Figure 1.47  \[LightBulb]: The natural exponential function"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42821, 1123, 148, 2, 25, "Subsection", "ExpressionUUID" -> \
"cccce876-6b19-4247-9334-2d19ba5a11de",
 CellTags->"Inverse Functions"],
Cell[42972, 1127, 1686, 52, 67, "Text", "ExpressionUUID" -> \
"c0f1ade2-5b94-4460-9f69-623e61031356"],
Cell[44661, 1181, 739, 21, 45, "Text", "ExpressionUUID" -> \
"42050442-969a-4c8e-bc59-d48ef8ea3758"],
Cell[45403, 1204, 99, 0, 29, "Text", "ExpressionUUID" -> \
"438a0f9a-f1f9-43e0-b266-eb9f5873db10"],
Cell[CellGroupData[{
Cell[45527, 1208, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"70a502c9-953e-47aa-86d9-8f32cb4ec1f8"],
Cell[45672, 1211, 1002, 33, 76, "Callout", "ExpressionUUID" -> \
"d2e5581a-6d06-483f-a065-d002a0264533"]
}, Closed]],
Cell[46689, 1247, 1076, 37, 70, "Definition", "ExpressionUUID" -> \
"b0d557c6-0c3c-4f29-b4fc-fd190ee8df43",
 CellTags->"DEFINITION Inverse Function"],
Cell[47768, 1286, 49481, 822, 231, "Output", "ExpressionUUID" -> \
"ad79f26c-a8df-4a64-9acc-c9d719414029",
 CellTags->"Figure 1.48: Inverse functions"],
Cell[97252, 2110, 967, 30, 43, "QuickCheck", "ExpressionUUID" -> \
"acff0fe7-e3e7-486d-aa9a-cd7d2eeea6ac",
 CellTags->"Quick Check 3"],
Cell[CellGroupData[{
Cell[98244, 2144, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"22a7eb4e-532e-4a2f-8722-fd8ed2ff2c60"],
Cell[98359, 2146, 497, 16, 42, "QuickCheckAnswer", "ExpressionUUID" -> \
"0fc1bd73-dfd5-4108-bf3a-31c2d67da01c"]
}, Closed]],
Cell[98871, 2165, 824, 22, 48, "Text", "ExpressionUUID" -> \
"009e0396-df21-494d-8825-7bccada75ecd"],
Cell[99698, 2189, 15030, 259, 127, "Text", "ExpressionUUID" -> \
"a0944d2a-edab-40a6-a00f-121aefba9971"],
Cell[114731, 2450, 833, 23, 34, "Text", "ExpressionUUID" -> \
"194a592b-f078-495d-9c16-7b2492282dd7"],
Cell[115567, 2475, 15134, 261, 127, "Text", "ExpressionUUID" -> \
"d6be4844-1c19-464f-b217-36b441a1d9d0"],
Cell[CellGroupData[{
Cell[130726, 2740, 159, 3, 27, "Subsubsection", "ExpressionUUID" -> \
"40feb1a6-5496-4f73-8d3a-ad390de9d783",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[130888, 2745, 894, 24, 65, "Text", "ExpressionUUID" -> \
"3b6cbe61-3939-4bde-8372-4e89f1fabcf6"],
Cell[131785, 2771, 2353, 78, 109, "Definition", "ExpressionUUID" -> \
"0eb02578-a13b-4be0-819c-d1d3db10b296",
 CellTags->"DEFINITION One-to-One Functions and the Horizontal Line Test"],
Cell[134141, 2851, 12631, 243, 313, "Output", "ExpressionUUID" -> \
"78fd9dc8-625c-456f-96db-06d8ed73620f",
 CellTags->
  "Figure 1.49  \[LightBulb]: One\[Hyphen]to\[Hyphen]one functions"],
Cell[146775, 3096, 1591, 46, 51, "Text", "ExpressionUUID" -> \
"8d7558ec-8637-4c2d-973b-924a3fc1d3ef"],
Cell[148369, 3144, 10489, 208, 582, "Output", "ExpressionUUID" -> \
"0600aa21-4aa5-4a8d-9561-a8a849de22b2",
 CellTags->"Figure 1.50  \[LightBulb]: Restricted domain"],
Cell[CellGroupData[{
Cell[158883, 3356, 225, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"4575c607-8d3d-4e39-b39d-871cfc86043a",
 CellTags->"EXAMPLE 1 One\[Hyphen]to\[Hyphen]one functions"],
Cell[159111, 3364, 486, 14, 33, "Text", "ExpressionUUID" -> \
"0b01a7c5-39e8-4e64-ad52-c0bfd7d82268"],
Cell[159600, 3380, 33163, 554, 283, "Output", "ExpressionUUID" -> \
"f302fa72-0b28-475d-bdbc-6c545ff73a1a",
 CellTags->"Figure 1.51: Example 1"],
Cell[CellGroupData[{
Cell[192788, 3938, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"3a5daa15-cb6d-4959-adc2-8c846fc134fe"],
Cell[192904, 3940, 884, 24, 44, "Text", "ExpressionUUID" -> \
"15b99133-11fd-4a92-bcba-b42a41792e2b"],
Cell[193791, 3966, 183, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"858d2553-7ea1-47ab-8444-329edcab6889"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194035, 3978, 169, 3, 27, "Subsubsection", "ExpressionUUID" -> \
"b2a14d6d-235c-40cd-8af3-2e9c5bcc27b8",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[194207, 3983, 1715, 54, 51, "Text", "ExpressionUUID" -> \
"d03e5858-e839-4a46-8861-a76b39ad09e7"],
Cell[195925, 4039, 16172, 301, 453, "Output", "ExpressionUUID" -> \
"ad05f02f-7db6-46da-8d26-216d1721ee24",
 CellTags->"Figure 1.52  \[LightBulb]: Existence of inverse functions"],
Cell[212100, 4342, 2481, 82, 126, "Theorem", "ExpressionUUID" -> \
"df67695f-3b7c-426b-89e5-deb9dcbf719a",
 CellTags->"THEOREM 1.1 Existence of Inverse Functions"],
Cell[CellGroupData[{
Cell[214606, 4428, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"8d8874b5-6442-4339-909b-d1763a31b9c4"],
Cell[214751, 4431, 249, 4, 37, "Callout", "ExpressionUUID" -> \
"cbff0b6a-4176-481a-ace0-60694a106938"]
}, Closed]],
Cell[215015, 4438, 821, 23, 41, "QuickCheck", "ExpressionUUID" -> \
"6ac9990d-0de8-4aef-ae09-9dd53085ec15",
 CellTags->"Quick Check 4"],
Cell[CellGroupData[{
Cell[215861, 4465, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"d0711f77-7050-47b6-87cc-3b6307f132cb"],
Cell[215976, 4467, 283, 5, 53, "QuickCheckAnswer", "ExpressionUUID" -> \
"25664eef-68e9-4d26-9679-808c5e7b927c"]
}, Closed]],
Cell[CellGroupData[{
Cell[216296, 4477, 213, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"c20f154a-5fd8-4b87-baa6-7b188783aff3",
 CellTags->"EXAMPLE 2 Does an inverse exist?"],
Cell[216512, 4485, 371, 10, 33, "Text", "ExpressionUUID" -> \
"0cb01569-bb38-4e3f-9311-59f08c3c043b"],
Cell[CellGroupData[{
Cell[216908, 4499, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"8b5d4d33-e95f-4641-8b12-0352d0a56ffc"],
Cell[217024, 4501, 1047, 30, 44, "Text", "ExpressionUUID" -> \
"b035d5d6-1e38-4d8a-ba57-80e1a8c433df"],
Cell[218074, 4533, 41787, 696, 269, "Output", "ExpressionUUID" -> \
"080d5784-2b8a-401e-9e90-e66254387662",
 CellTags->"Figure 1.53: Example 2"],
Cell[259864, 5231, 170, 4, 22, "RelatedExercises", "ExpressionUUID" -> \
"415cb9e1-3938-4abf-a48b-efaa46200305"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260095, 5242, 164, 3, 27, "Subsubsection", "ExpressionUUID" -> \
"735d142a-416a-4e14-bf6a-e390f30de6b8",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[260262, 5247, 2226, 67, 69, "Text", "ExpressionUUID" -> \
"25b117d4-1138-4b03-ad75-c695c9bccff8"],
Cell[262491, 5316, 1664, 56, 121, "Procedure", "ExpressionUUID" -> \
"cc992aec-2348-4a1d-80c7-a648196f9fcd",
 CellTags->"PROCEDURE Finding an Inverse"],
Cell[CellGroupData[{
Cell[264180, 5376, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"7617db17-1e62-42db-a824-56fc8795bc01"],
Cell[264325, 5379, 821, 26, 46, "Callout", "ExpressionUUID" -> \
"39f28085-32c4-4219-91fd-8f29e057a685"]
}, Closed]],
Cell[CellGroupData[{
Cell[265183, 5410, 219, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"4e098b9d-18c8-4454-9f7f-c7d13574df22",
 CellTags->"EXAMPLE 3 Finding inverse functions"],
Cell[265405, 5418, 284, 6, 29, "Text", "ExpressionUUID" -> \
"eb6e5d10-15a0-4c94-a420-f49a7b66b8a0"],
Cell[265692, 5426, 335, 11, 29, "Text", "ExpressionUUID" -> \
"4660ee82-884e-4018-89d4-dfb2c59db1ca"],
Cell[266030, 5439, 341, 11, 33, "Text", "ExpressionUUID" -> \
"66a7357f-ab00-4f51-a9eb-5fd10c293fc6"],
Cell[CellGroupData[{
Cell[266396, 5454, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"193ba27a-8592-4167-81a9-3cb8b36a6350"],
Cell[266512, 5456, 526, 13, 26, "Text", "ExpressionUUID" -> \
"602f6970-a3af-461c-8695-614a2c4c2d84"],
Cell[CellGroupData[{
Cell[267063, 5473, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"5dd75c66-5046-46fb-909e-3f0c26aa1714"],
Cell[267208, 5476, 199, 3, 37, "Callout", "ExpressionUUID" -> \
"f1c272f7-ce7d-48e8-b575-665d1421c32a"]
}, Closed]],
Cell[267422, 5482, 991, 35, 47, "Text", "ExpressionUUID" -> \
"f803fac7-ba54-4dce-bab4-491e682c4715"],
Cell[268416, 5519, 621, 20, 33, "Text", "ExpressionUUID" -> \
"cc747e7d-8d8f-443d-a5f3-06e77f83440c"],
Cell[269040, 5541, 596, 18, 51, "Text", "ExpressionUUID" -> \
"bf78736c-009b-479f-a36c-55d80d2f1147"],
Cell[269639, 5561, 658, 20, 35, "Text", "ExpressionUUID" -> \
"a928cb0c-71b6-4ba8-bfc6-9686a2a3ce1b"],
Cell[270300, 5583, 2540, 75, 135, "Text", "ExpressionUUID" -> \
"bd6c6206-cbd3-4642-8f8e-2c394293b655"],
Cell[272843, 5660, 951, 27, 51, "Text", "ExpressionUUID" -> \
"d4df8fc0-5cbf-4192-bc02-f6d03bba6f57"],
Cell[273797, 5689, 360, 11, 29, "Text", "ExpressionUUID" -> \
"bffa3d20-b0f7-40f0-bcc0-60692d68cb04"],
Cell[274160, 5702, 869, 29, 119, "Text", "ExpressionUUID" -> \
"fa415327-82c6-4d34-8827-e3305c13dbbc"],
Cell[275032, 5733, 145, 2, 29, "Text", "ExpressionUUID" -> \
"17acf275-a712-48f0-93aa-af353fcea49c"],
Cell[275180, 5737, 621, 20, 33, "Text", "ExpressionUUID" -> \
"2c79df77-4b89-4f9b-adf6-e4feddc02f66"],
Cell[275804, 5759, 857, 27, 43, "Text", "ExpressionUUID" -> \
"af3ac679-60b5-4300-8024-701df2550409"],
Cell[276664, 5788, 2165, 67, 89, "Text", "ExpressionUUID" -> \
"22b5615a-1845-4d2e-b06c-bcc6a333174d"],
Cell[278832, 5857, 78085, 1292, 317, "Output", "ExpressionUUID" -> \
"ecb2acf0-de5d-4aeb-82a5-537527d57bed",
 CellTags->"Figure 1.54: Example 3"],
Cell[356920, 7151, 197, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"0546bfea-b735-4578-b98f-d7a2288b68ea"]
}, Closed]]
}, Open  ]],
Cell[357144, 7160, 743, 21, 29, "QuickCheck", "ExpressionUUID" -> \
"32d5b714-9028-4169-8600-153d01dce3da",
 CellTags->"Quick Check 5"],
Cell[CellGroupData[{
Cell[357912, 7185, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"dd60563d-1327-4ce3-98f5-5d3b3b6b9d7d"],
Cell[358027, 7187, 701, 21, 42, "QuickCheckAnswer", "ExpressionUUID" -> \
"db844d04-7784-4ef5-aae7-53e39fa782b0"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[358789, 7215, 220, 4, 25, "Subsection", "ExpressionUUID" -> \
"5ddf5f27-5381-4a0f-9de4-f72fb651bd4a",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellTags->"Graphing Inverse Functions"],
Cell[359012, 7221, 197, 3, 26, "Text", "ExpressionUUID" -> \
"d7b3a647-8d8f-4f66-82f9-b97df59a3f0c"],
Cell[CellGroupData[{
Cell[359234, 7228, 221, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"2fe04c13-f4cc-40ed-8b9e-74d931d73a2b",
 CellTags->"EXAMPLE 4 Graphing inverse functions"],
Cell[359458, 7236, 571, 18, 33, "Text", "ExpressionUUID" -> \
"1cc277be-ada6-48a6-bad0-5ae4f9bb7453"],
Cell[360032, 7256, 335, 11, 29, "Text", "ExpressionUUID" -> \
"2795e2d5-7f36-4cae-95f0-14db8f7c57cc"],
Cell[360370, 7269, 329, 11, 39, "Text", "ExpressionUUID" -> \
"3dcebf7c-737c-45e4-a357-5a5bc7c27be9"],
Cell[CellGroupData[{
Cell[360724, 7284, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"2242d6e6-6641-4d32-ad17-243aeb4f73d7"],
Cell[360840, 7286, 380, 12, 26, "Text", "ExpressionUUID" -> \
"1a47640d-ae18-48c5-b1ac-36569147b500"],
Cell[361223, 7300, 597, 18, 49, "Text", "ExpressionUUID" -> \
"54bda971-759d-457f-9ec5-b4e900e7e3e3"],
Cell[361823, 7320, 1011, 32, 33, "Text", "ExpressionUUID" -> \
"e652d0ed-af2e-47ad-8b92-d370d03b942e"],
Cell[362837, 7354, 8697, 173, 547, "Output", "ExpressionUUID" -> \
"c02af8ad-645f-4a92-a4f4-6a4129101886",
 CellTags->"Figure 1.55  \[LightBulb]: Example 4a"],
Cell[371537, 7529, 909, 28, 39, "Text", "ExpressionUUID" -> \
"34b3ae79-2099-4836-960b-60d94a2e9f04"],
Cell[372449, 7559, 356, 12, 39, "Text", "ExpressionUUID" -> \
"1ae0a395-758b-4602-bafc-624fc2b14f43"],
Cell[372808, 7573, 585, 17, 35, "Text", "ExpressionUUID" -> \
"a9c4f325-f6ea-40aa-bcf8-d63f34a48f97"],
Cell[373396, 7592, 539, 17, 33, "Text", "ExpressionUUID" -> \
"b5630077-77f3-43f1-96c2-2327c2d7cc80"],
Cell[373938, 7611, 571, 17, 35, "Text", "ExpressionUUID" -> \
"6dcae403-60dd-4d8b-9ef8-e4e9600b05fd"],
Cell[374512, 7630, 1094, 34, 33, "Text", "ExpressionUUID" -> \
"8d20cb98-4432-4d43-bdfc-bec89e85986b"],
Cell[375609, 7666, 8971, 178, 522, "Output", "ExpressionUUID" -> \
"31128be5-0409-4e79-b065-c91503f80c7a",
 CellTags->"Figure 1.56  \[LightBulb]: Example 4b"],
Cell[384583, 7846, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"8ef616aa-1e7e-4cc8-ae8a-605f979bf504"]
}, Closed]]
}, Open  ]],
Cell[384795, 7855, 1258, 36, 65, "Text", "ExpressionUUID" -> \
"7c05cdcd-87fd-4582-8e64-4cc43def97ee",
 CellGroupingRules->{"GroupTogetherGrouping", 41}],
Cell[386056, 7893, 65399, 1083, 279, "Output", "ExpressionUUID" -> \
"9397924c-a4fb-4083-9f09-475cb92fb6ba",
 CellTags->"Figure 1.57: Symmetric about y=x"],
Cell[451458, 8978, 2587, 80, 73, "Text", "ExpressionUUID" -> \
"78e8b738-de45-44f6-af8c-c8ff813a8254"]
}, Closed]],
Cell[CellGroupData[{
Cell[454082, 9063, 158, 3, 25, "Subsection", "ExpressionUUID" -> \
"99499ec2-5672-4c5a-bbb7-83013f50055a",
 CellTags->"Logarithmic Functions"],
Cell[454243, 9068, 1109, 33, 41, "Text", "ExpressionUUID" -> \
"6d0788f4-e813-4c4e-8972-5e4fe0afde32"],
Cell[455355, 9103, 1689, 58, 93, "Definition", "ExpressionUUID" -> \
"86f682c5-f385-4213-9b29-637bbac91251",
 CellTags->"DEFINITION Logarithmic Function Base b"],
Cell[CellGroupData[{
Cell[457069, 9165, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"539ef4d4-8338-4cd7-80f2-724d38e403b5"],
Cell[457214, 9168, 744, 24, 69, "Callout", "ExpressionUUID" -> \
"ec838f54-32fd-4836-b693-d88c20887121"]
}, Closed]],
Cell[457973, 9195, 210, 3, 26, "Text", "ExpressionUUID" -> \
"cc7bc7f8-6aa1-478e-9952-f1dc37f8d48b"],
Cell[458186, 9200, 612, 18, 31, "Text", "ExpressionUUID" -> \
"08115b5e-89cd-4f19-b48d-429f4cfdc637"],
Cell[458801, 9220, 145, 2, 29, "Text", "ExpressionUUID" -> \
"eb883997-420c-4ae1-a49a-005ded292e43"],
Cell[458949, 9224, 1449, 48, 120, "Important", "ExpressionUUID" -> \
"d91a78bc-5830-44b1-9223-286784eee4f5",
 CellGroupingRules->"NormalGrouping",
 CellTags->
  "IMPORTANT Inverse Relations for Exponential and Logarithmic Functions"],
Cell[CellGroupData[{
Cell[460423, 9276, 174, 3, 27, "Subsubsection", "ExpressionUUID" -> \
"021f6e05-1b2b-435c-8825-0c12dc76f594",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[460600, 9281, 1000, 28, 51, "Text", "ExpressionUUID" -> \
"a84f1759-d58c-419d-b0c4-c07303247cd7"],
Cell[CellGroupData[{
Cell[461625, 9313, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"00cb95e0-433b-499a-874d-cba88803c12c"],
Cell[461770, 9316, 2956, 107, 192, "Callout", "ExpressionUUID" -> \
"852761f4-bb7a-4442-a8ae-acd1892c144e"]
}, Closed]],
Cell[464741, 9426, 10197, 200, 549, "Output", "ExpressionUUID" -> \
"02d37eec-361f-448a-976c-794f39e8126e",
 CellTags->"Figure 1.58  \[LightBulb]: Inverses of exponential functions"],
Cell[474941, 9628, 914, 27, 49, "Text", "ExpressionUUID" -> \
"7192598e-2b41-483e-b320-597872dacb71"],
Cell[475858, 9657, 7256, 146, 450, "Output", "ExpressionUUID" -> \
"25daea73-fce5-4a8a-879f-4d8ffcfd87f0",
 CellTags->"Figure 1.59  \[LightBulb]: Logarithm functions"],
Cell[483117, 9805, 349, 8, 29, "Text", "ExpressionUUID" -> \
"cafc4a84-1943-445d-8c2e-66041b4df74d"],
Cell[483469, 9815, 3077, 107, 97, "Text", "ExpressionUUID" -> \
"175372ff-fdd2-48d3-98c9-9f98fe19dfe2"],
Cell[486549, 9924, 1023, 32, 29, "QuickCheck", "ExpressionUUID" -> \
"160246a5-5a60-4d68-8b9e-5afb2a7687b5",
 CellTags->"Quick Check 6"],
Cell[CellGroupData[{
Cell[487597, 9960, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"f41ff408-0c51-4503-9caf-9b6affaa9eda"],
Cell[487712, 9962, 900, 27, 44, "QuickCheckAnswer", "ExpressionUUID" -> \
"0b86b46f-36b1-41c2-94bf-ec23ed082503"]
}, Closed]],
Cell[CellGroupData[{
Cell[488649, 9994, 215, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"38e9ef53-daed-4792-9ae0-c541f3aa6f39",
 CellTags->"EXAMPLE 5 Using inverse relations"],
Cell[488867, 10002, 732, 20, 51, "Text", "ExpressionUUID" -> \
"8be1fa8b-7a69-4a02-aa10-ac142eef7d93"],
Cell[CellGroupData[{
Cell[489624, 10026, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"8b96221a-e477-46e2-8cac-1f5cbe1f4979"],
Cell[489740, 10028, 604, 17, 30, "Text", "ExpressionUUID" -> \
"0c8e7b73-35be-421d-9197-f1e595cbc095"],
Cell[490347, 10047, 695, 21, 51, "Text", "ExpressionUUID" -> \
"b73c18ea-936b-4028-a643-4da7e25fa2f6"],
Cell[CellGroupData[{
Cell[491067, 10072, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"745022f0-5a7b-44b7-a2b0-de754ba5209d"],
Cell[491212, 10075, 345, 7, 39, "Callout", "ExpressionUUID" -> \
"dff4c93f-e067-4a1e-af1b-687f3b550258"]
}, Closed]],
Cell[491572, 10085, 806, 26, 46, "Text", "ExpressionUUID" -> \
"fae49915-f408-4750-8454-9f7d71885e32"],
Cell[492381, 10113, 502, 15, 49, "Text", "ExpressionUUID" -> \
"500e9419-117e-4616-8a60-100b0365470e"],
Cell[492886, 10130, 532, 16, 29, "Text", "ExpressionUUID" -> \
"c91625f6-d00d-42e9-8dd1-7d037f2fe073"],
Cell[493421, 10148, 170, 4, 22, "RelatedExercises", "ExpressionUUID" -> \
"0877c952-8a63-403c-b2c7-cfbbe9a31226"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[493664, 10160, 142, 2, 25, "Subsection", "ExpressionUUID" -> \
"6911c132-4050-469f-82e8-e7759ecf4f6f",
 CellTags->"Change of Base"],
Cell[493809, 10164, 472, 8, 62, "Text", "ExpressionUUID" -> \
"e98303b0-9910-4063-bfa0-40103d7ffbc0"],
Cell[494284, 10174, 1102, 32, 49, "Text", "ExpressionUUID" -> \
"86c09a1d-3ee0-4070-9b9e-e19262293e5e"],
Cell[495389, 10208, 1216, 35, 51, "Text", "ExpressionUUID" -> \
"c2d9fb6c-2617-4a63-9e42-95117c21ab1a"],
Cell[496608, 10245, 674, 20, 33, "Text", "ExpressionUUID" -> \
"8ae1513f-b96c-4c9b-8e4c-9a2597d98bcb"],
Cell[497285, 10267, 1592, 52, 53, "Text", "ExpressionUUID" -> \
"3bbee101-bbf0-4d7c-8568-1565fc7850b6"],
Cell[498880, 10321, 592, 18, 51, "Text", "ExpressionUUID" -> \
"93fe8d01-7322-4071-9599-e0009653116a"],
Cell[CellGroupData[{
Cell[499497, 10343, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"fcc81fd8-c6de-4ec0-8c21-7a38a75b0322"],
Cell[499642, 10346, 428, 11, 37, "Callout", "ExpressionUUID" -> \
"852a270d-586f-462f-9560-ff40a39f57aa"]
}, Closed]],
Cell[500085, 10360, 2596, 79, 182, "Summary", "ExpressionUUID" -> \
"23027ec3-1ba0-484c-be45-8dc2a9a18f38",
 CellTags->"IMPORTANT Change-of-Base Rules"],
Cell[CellGroupData[{
Cell[502706, 10443, 197, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"0e494e86-34b6-43d5-a1e6-19d07ad26045",
 CellTags->"EXAMPLE 6 Changing bases"],
Cell[502906, 10451, 463, 14, 33, "Text", "ExpressionUUID" -> \
"823d041d-240c-489b-9d0b-6511e57e2275"],
Cell[503372, 10467, 538, 17, 31, "Text", "ExpressionUUID" -> \
"2145ff79-b69d-422a-ab11-f34f2b02d4d8"],
Cell[CellGroupData[{
Cell[503935, 10488, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"67c71209-d767-42c2-86f0-466e137c4782"],
Cell[504051, 10490, 192, 4, 26, "Text", "ExpressionUUID" -> \
"c4fe53f3-fb2e-4cfa-bdf5-aaa3dfd6ea18"],
Cell[504246, 10496, 608, 18, 35, "Text", "ExpressionUUID" -> \
"d7e862aa-74c9-4dfa-b577-8a57414a5dbe"],
Cell[504857, 10516, 191, 4, 29, "Text", "ExpressionUUID" -> \
"ce78f7d9-fcc6-4720-915b-23b222103d7a"],
Cell[505051, 10522, 556, 17, 51, "Text", "ExpressionUUID" -> \
"3dd4e56c-3909-41f0-9163-e593d12c3ed9"],
Cell[505610, 10541, 155, 2, 29, "Text", "ExpressionUUID" -> \
"bdff33b1-cf5d-4654-ae2c-c1c838974279"],
Cell[505768, 10545, 830, 27, 53, "Text", "ExpressionUUID" -> \
"44dfa882-c347-4ba4-82a4-82025d9af564"],
Cell[506601, 10574, 478, 14, 51, "Text", "ExpressionUUID" -> \
"19349311-1a4d-465f-b3b6-b67d4d839cfa"],
Cell[507082, 10590, 180, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"b7014e15-99ac-454b-88e4-ce084c364c41"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[507323, 10602, 146, 3, 25, "Subsection", "ExpressionUUID" -> \
"d334ba41-0ba5-4d49-b813-a7411414ae96",
 CellTags->"SECTION 1.3 EXERCISES"],
Cell[CellGroupData[{
Cell[507494, 10609, 175, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"3e7d154e-a9ad-4c39-ad59-55bac2c4ffdd",
 CellTags->"\[EmptySmallCircle] Getting Started"],
Cell[507672, 10614, 571, 19, 27, "Problem", "ExpressionUUID" -> \
"c00a6400-da27-432c-8ec2-7b67d61690d8"],
Cell[508246, 10635, 249, 7, 29, "Problem", "ExpressionUUID" -> \
"17ead6a4-3562-40bf-9710-02e36ca257c2"],
Cell[508498, 10644, 635, 19, 29, "Problem", "ExpressionUUID" -> \
"c23a4af7-6346-439c-94b1-a8fe8c9e7f0c"],
Cell[509136, 10665, 873, 28, 29, "Problem", "ExpressionUUID" -> \
"5337dc75-8ce6-4995-abd8-7c099dd12272"],
Cell[510012, 10695, 368, 10, 29, "Problem", "ExpressionUUID" -> \
"19184921-6f5b-4eac-9958-e93e22718d44"],
Cell[510383, 10707, 42994, 711, 253, "Output", "ExpressionUUID" -> \
"e261b80c-25fe-43f4-bbde-64e1c8740307"],
Cell[553380, 11420, 368, 10, 29, "Problem", "ExpressionUUID" -> \
"6fbc19eb-0d24-4b50-9163-9f2b1be1fbae"],
Cell[553751, 11432, 51571, 852, 251, "Output", "ExpressionUUID" -> \
"7bcf08aa-0c24-4b36-9644-7075c529ad2f"],
Cell[605325, 12286, 491, 14, 29, "Problem", "ExpressionUUID" -> \
"c88e0e68-53e8-464a-9a2d-0f99917dc589"],
Cell[605819, 12302, 846, 29, 33, "Problem", "ExpressionUUID" -> \
"17da21a4-a5ef-4d43-8516-7a8a7601f32b"],
Cell[606668, 12333, 61693, 1018, 264, "Output", "ExpressionUUID" -> \
"b78f71da-cf02-419c-b48c-2ebe1ec187d2"],
Cell[668364, 13353, 887, 30, 35, "Problem", "ExpressionUUID" -> \
"c234863b-06d1-443c-8a78-ce80b9330b70"],
Cell[669254, 13385, 1056, 36, 39, "Problem", "ExpressionUUID" -> \
"3b983292-0727-44b0-910d-3078f930253c"],
Cell[670313, 13423, 280, 8, 29, "Problem", "ExpressionUUID" -> \
"ff257976-e5aa-40b8-b4ec-491d2d58b5d6"],
Cell[670596, 13433, 37020, 613, 254, "Output", "ExpressionUUID" -> \
"2c06daf6-8ed6-48df-89a3-9be001a6c05d"],
Cell[707619, 14048, 280, 8, 29, "Problem", "ExpressionUUID" -> \
"bda6e718-0d04-442a-8a48-424a60ef62cd"],
Cell[707902, 14058, 33194, 551, 259, "Output", "ExpressionUUID" -> \
"37067e09-4424-4b02-a34f-8cacd9fc12d4"],
Cell[741099, 14611, 925, 26, 51, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "9ff8dee5-bc64-4086-9159-130f424cd0d4"],
Cell[742027, 14639, 65890, 1087, 248, "Output", "ExpressionUUID" -> \
"9186712c-9d7b-43c5-9aa9-6fade2067fdf"],
Cell[807920, 15728, 645, 22, 33, "Problem", "ExpressionUUID" -> \
"1018fc22-86f6-4f5e-a8db-8860657ae986"],
Cell[808568, 15752, 646, 22, 33, "Problem", "ExpressionUUID" -> \
"53e62270-bc37-405d-b651-8f9788be813f"],
Cell[809217, 15776, 350, 12, 31, "Problem", "ExpressionUUID" -> \
"a5c78502-ab2f-4c5d-983d-966b548cf3e0"],
Cell[809570, 15790, 830, 29, 32, "Problem", "ExpressionUUID" -> \
"e0eb4611-9710-4fc1-bf6e-3aab05c885fd"],
Cell[810403, 15821, 720, 24, 31, "Problem", "ExpressionUUID" -> \
"cfc3fe50-e707-4645-a55b-4d148e648701"],
Cell[811126, 15847, 453, 15, 33, "Problem", "ExpressionUUID" -> \
"d1af6842-8387-460c-b390-9b79b3d39213"],
Cell[811582, 15864, 177, 4, 29, "Problem", "ExpressionUUID" -> \
"cb7ea088-876f-4a0b-9990-d71692c27f61"],
Cell[811762, 15870, 290, 9, 21, "SubProblem", "ExpressionUUID" -> \
"ac436fcb-a70c-405e-b562-dbf97ab74883"],
Cell[812055, 15881, 287, 9, 21, "SubProblem", "ExpressionUUID" -> \
"a4c172f1-3fd8-4ea5-867d-08537ed19a53"],
Cell[812345, 15892, 290, 9, 21, "SubProblem", "ExpressionUUID" -> \
"c3c9807e-2e94-40d0-bbef-f873fde6c901"],
Cell[812638, 15903, 292, 9, 23, "SubProblem", "ExpressionUUID" -> \
"c9417f34-49ca-40fa-939e-4f541630452f"],
Cell[812933, 15914, 275, 9, 29, "SubProblem", "ExpressionUUID" -> \
"6b97dc77-2ad3-4e19-bf1c-c42fe604c45f"],
Cell[813211, 15925, 1028, 33, 31, "Problem", "ExpressionUUID" -> \
"f25fb9c3-6c94-4a44-96fc-7d56092f2507"]
}, Closed]],
Cell[CellGroupData[{
Cell[814276, 15963, 181, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"e19b357c-b65e-472f-b21d-24a4a28d06e4",
 CellTags->"\[EmptySmallCircle] Practice Exercises"],
Cell[814460, 15968, 343, 7, 44, "ExerciseDirectionsCell", "ExpressionUUID" -> \
"fbbb00aa-82fb-4efd-b569-77981ad74e41"],
Cell[814806, 15977, 371, 12, 29, "Problem", "ExpressionUUID" -> \
"2a512e08-2f2d-4681-a609-7ab9961db740"],
Cell[815180, 15991, 438, 13, 29, "Problem", "ExpressionUUID" -> \
"4ce21eb0-937a-4457-94ec-6663faec36ce"],
Cell[815621, 16006, 904, 31, 51, "TProblem", "ExpressionUUID" -> \
"c57135a4-505b-4a4c-ba40-aa7569bf06c1"],
Cell[816528, 16039, 427, 14, 33, "Problem", "ExpressionUUID" -> \
"e2a6b826-1787-4e52-afe8-9e96f7a2d037"],
Cell[816958, 16055, 910, 32, 52, "TProblem", "ExpressionUUID" -> \
"f6fb676a-11c6-4a9a-806d-28a715c205fc"],
Cell[817871, 16089, 453, 16, 33, "Problem", "ExpressionUUID" -> \
"f6d75e0f-8d17-462b-a708-91c5ee701a2c"],
Cell[818327, 16107, 658, 18, 51, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "ee55a2c4-740d-4478-b042-623b39f8d1d5"],
Cell[818988, 16127, 371, 12, 29, "Problem", "ExpressionUUID" -> \
"546f1eb7-47a6-45da-89e5-99ae75aa7b10"],
Cell[819362, 16141, 371, 12, 29, "Problem", "ExpressionUUID" -> \
"fa706bc0-0185-4861-bd8e-48de70bf113f"],
Cell[819736, 16155, 542, 18, 39, "Problem", "ExpressionUUID" -> \
"54f3c19e-ac0b-4e3d-af57-c0754f7b90b1"],
Cell[820281, 16175, 482, 15, 39, "Problem", "ExpressionUUID" -> \
"7312251b-c251-4d78-9377-eff535424163"],
Cell[820766, 16192, 589, 19, 33, "Problem", "ExpressionUUID" -> \
"c1d58d3d-f2c7-4844-a1cb-93d1c27cea0e"],
Cell[821358, 16213, 497, 15, 33, "Problem", "ExpressionUUID" -> \
"86a068e3-949d-4af0-a436-251e95f11073"],
Cell[821858, 16230, 467, 13, 33, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "b408f891-dd4c-47c9-b292-56e0bb47150c"],
Cell[822328, 16245, 639, 22, 52, "Problem", "ExpressionUUID" -> \
"bc122ac8-1ae9-4b9d-b444-91cde12a6b36"],
Cell[822970, 16269, 625, 22, 52, "Problem", "ExpressionUUID" -> \
"5648fb45-a407-4d35-9b33-6b5fd25094ec"],
Cell[823598, 16293, 367, 12, 33, "Problem", "ExpressionUUID" -> \
"223931f6-c268-444a-94e3-8245e29856e7"],
Cell[823968, 16307, 362, 12, 33, "Problem", "ExpressionUUID" -> \
"e6d644ab-1aa2-48c3-a2b7-4e428d3e6336"],
Cell[824333, 16321, 395, 13, 29, "Problem", "ExpressionUUID" -> \
"02e855b3-cfcd-4bc3-a3cb-dd615adb73d2"],
Cell[824731, 16336, 346, 11, 31, "Problem", "ExpressionUUID" -> \
"74d5ecd0-9592-406c-b2b3-48b790764a3a"],
Cell[825080, 16349, 363, 12, 33, "Problem", "ExpressionUUID" -> \
"fbcdff27-3114-44ee-a1a0-9dd8945ffe43"],
Cell[825446, 16363, 409, 14, 51, "Problem", "ExpressionUUID" -> \
"9198c1b2-119e-44ce-bd9d-546a476db8c5"],
Cell[825858, 16379, 437, 15, 52, "Problem", "ExpressionUUID" -> \
"9ccbf6ab-b0fc-4084-80b8-622b3e2385db"],
Cell[826298, 16396, 523, 18, 48, "Problem", "ExpressionUUID" -> \
"d9e51f99-15b6-476f-9613-10b2659eb317"],
Cell[826824, 16416, 1208, 41, 33, "Problem", "ExpressionUUID" -> \
"41f64952-dd65-4f0c-a396-1862647d7ed8"],
Cell[828035, 16459, 181, 4, 19, "SubProblem", "ExpressionUUID" -> \
"00472600-82f1-4120-bece-3131ae16637d"],
Cell[828219, 16465, 417, 12, 23, "SubProblem", "ExpressionUUID" -> \
"e7c52f54-35e1-454a-b5fd-efa7d62238dc"],
Cell[828639, 16479, 50932, 841, 264, "Output", "ExpressionUUID" -> \
"573cb055-e921-4986-8859-aafffbb50638"],
Cell[879574, 17322, 1206, 41, 33, "Problem", "ExpressionUUID" -> \
"7d6ae4ac-f305-4119-9c34-2fd20e585b9b"],
Cell[880783, 17365, 181, 4, 19, "SubProblem", "ExpressionUUID" -> \
"45776965-5cb6-408b-b360-d95de8d1318d"],
Cell[880967, 17371, 400, 12, 23, "SubProblem", "ExpressionUUID" -> \
"7b1192b7-7eb1-47ef-a0c2-63ab70659c37"],
Cell[881370, 17385, 67126, 1107, 266, "Output", "ExpressionUUID" -> \
"869911c6-c4ed-4a51-819c-99ca09fad1fc"],
Cell[948499, 18494, 874, 27, 31, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "d7a4d03b-c187-4f06-8930-6ae5675d1f1a"],
Cell[949376, 18523, 307, 10, 50, "Problem", "ExpressionUUID" -> \
"07381dfb-d50e-4ffd-9d07-de2d8823b8b4"],
Cell[949686, 18535, 310, 10, 34, "Problem", "ExpressionUUID" -> \
"716557a3-5cc3-4cca-b349-0db235723e0b"],
Cell[949999, 18547, 326, 10, 31, "Problem", "ExpressionUUID" -> \
"eb386261-013e-411c-a710-79defccca79a"],
Cell[950328, 18559, 381, 13, 54, "Problem", "ExpressionUUID" -> \
"73844fe8-4086-4a1b-9041-97ef59a9ff6f"],
Cell[950712, 18574, 377, 13, 58, "Problem", "ExpressionUUID" -> \
"85f1ec4c-c973-4fda-a3df-be670cae33d1"],
Cell[951092, 18589, 459, 16, 58, "Problem", "ExpressionUUID" -> \
"a373b48a-2f57-4b44-ad20-341be33c0981"],
Cell[951554, 18607, 227, 6, 29, "ExerciseDirectionsCell", "ExpressionUUID" -> \
"7fb5135f-c5b9-42fb-a172-ed24dafe8fae"],
Cell[951784, 18615, 343, 11, 31, "Problem", "ExpressionUUID" -> \
"acef02f9-05b7-497f-ba30-60ded9b39d37"],
Cell[952130, 18628, 362, 12, 31, "Problem", "ExpressionUUID" -> \
"00b49d18-c891-46e7-ab57-67c8b84b6f4f"],
Cell[952495, 18642, 365, 12, 50, "Problem", "ExpressionUUID" -> \
"7e96917e-8f75-4fb9-b7af-49b94bea10b3"],
Cell[952863, 18656, 344, 11, 31, "Problem", "ExpressionUUID" -> \
"c2872cf0-4ba7-4f32-a829-af2faa182f9e"],
Cell[953210, 18669, 309, 10, 29, "Problem", "ExpressionUUID" -> \
"27b94b76-2766-4a73-9210-30cdca7c1eb7"],
Cell[953522, 18681, 289, 9, 29, "Problem", "ExpressionUUID" -> \
"a2a0c76b-6337-4217-abea-1caca4fa51c2"],
Cell[953814, 18692, 322, 10, 30, "Problem", "ExpressionUUID" -> \
"facb36f4-e48f-42a3-97ce-24050d7aa71b"],
Cell[954139, 18704, 322, 10, 30, "Problem", "ExpressionUUID" -> \
"be98b2de-d96f-4a2d-8893-771e9dc73abe"],
Cell[954464, 18716, 370, 12, 33, "Problem", "ExpressionUUID" -> \
"63abab37-a74c-46f4-9267-df651f82b1be"],
Cell[954837, 18730, 343, 11, 33, "Problem", "ExpressionUUID" -> \
"5a10f04b-e128-48da-a860-67315e6aa4a9"],
Cell[955183, 18743, 1219, 37, 53, "TProblem", "ExpressionUUID" -> \
"cfb11d86-04bd-49da-b7c1-81824b303739"],
Cell[956405, 18782, 2227, 69, 92, "TProblem", "ExpressionUUID" -> \
"44a28339-c9d9-4372-83a1-ab28be717e74"],
Cell[958635, 18853, 1285, 36, 56, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "91bb04b5-ba65-4856-897d-31f6feb6c03e"],
Cell[959923, 18891, 560, 14, 48, "Problem", "ExpressionUUID" -> \
"8e29b2a3-ca54-4e25-ad5f-d155acc7ca71"],
Cell[960486, 18907, 525, 13, 47, "Problem", "ExpressionUUID" -> \
"2b8bcdc1-6f5b-4f82-83e0-96e19af80b66"],
Cell[961014, 18922, 1525, 51, 53, "TProblem", "ExpressionUUID" -> \
"90eb57ca-7a7d-4ee3-90ce-e83be92140c8"],
Cell[962542, 18975, 347, 9, 19, "SubProblem", "ExpressionUUID" -> \
"dd713de0-bf56-472d-9c54-36162e26c0b5"],
Cell[962892, 18986, 775, 23, 23, "SubProblem", "ExpressionUUID" -> \
"bed8d0e0-a729-4b64-aa04-edc7fa05e0d1"],
Cell[963670, 19011, 777, 23, 23, "SubProblem", "ExpressionUUID" -> \
"229e54b3-a936-4a0a-90b4-2365060597d2"],
Cell[964450, 19036, 322, 9, 19, "SubProblem", "ExpressionUUID" -> \
"579fa841-34f8-4081-ad5a-3c2e068b18a1"],
Cell[964775, 19047, 324, 9, 19, "SubProblem", "ExpressionUUID" -> \
"447fad1a-88b9-4b32-9786-c7a0fc28e6db"],
Cell[965102, 19058, 2374, 79, 53, "TProblem", "ExpressionUUID" -> \
"fa394d48-8858-4a03-8aa6-1a68c621323e"],
Cell[967479, 19139, 863, 25, 52, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "68605431-e5f8-43ad-bf3c-c59e63c69a24"],
Cell[968345, 19166, 317, 10, 31, "Problem", "ExpressionUUID" -> \
"0dcd945e-29fe-41c6-8d68-89c21b86184f"],
Cell[968665, 19178, 317, 10, 31, "Problem", "ExpressionUUID" -> \
"99d8381a-de37-4189-96c3-8ac25c58ec07"],
Cell[968985, 19190, 317, 10, 31, "Problem", "ExpressionUUID" -> \
"ad4e2f88-20c3-48e4-98cf-72832ce85f25"],
Cell[969305, 19202, 317, 10, 31, "Problem", "ExpressionUUID" -> \
"04e5d64c-ca24-43e4-83fa-cea683e5e62d"],
Cell[969625, 19214, 250, 6, 29, "ExerciseDirectionsCell", "ExpressionUUID" -> \
"bda4047b-0816-4450-809d-4fee0bd09476"],
Cell[969878, 19222, 421, 13, 30, "Problem", "ExpressionUUID" -> \
"06ab72b9-3703-47f4-b93a-1f4e9b7116ac"],
Cell[970302, 19237, 447, 12, 34, "Problem", "ExpressionUUID" -> \
"8ec6cab3-ecf0-43b8-a260-4d99ad0c9c8a"],
Cell[970752, 19251, 379, 11, 29, "Problem", "ExpressionUUID" -> \
"635b1c93-6499-4ada-abcb-cfdf36ec1b06"],
Cell[971134, 19264, 525, 17, 35, "Problem", "ExpressionUUID" -> \
"b4f3b217-8b00-471f-9ac7-6ccb4f740270"],
Cell[971662, 19283, 736, 24, 33, "Problem", "ExpressionUUID" -> \
"6933d856-6424-49dc-b815-a03a22592d39"],
Cell[972401, 19309, 771, 26, 34, "Problem", "ExpressionUUID" -> \
"fe1f7975-3c57-4fff-b3a2-cc6d1005f341"],
Cell[973175, 19337, 347, 10, 29, "Problem", "ExpressionUUID" -> \
"f9378353-f718-4a99-b384-f7a4531b3f85"],
Cell[973525, 19349, 408, 14, 29, "SubProblem", "ExpressionUUID" -> \
"bed6d6b2-05bb-42fc-8164-81446d2dac62"],
Cell[973936, 19365, 504, 17, 44, "SubProblem", "ExpressionUUID" -> \
"e7badbe0-89d0-4e2e-9685-04cdda5f8397"],
Cell[974443, 19384, 386, 12, 24, "SubProblem", "ExpressionUUID" -> \
"874e82e3-07a1-4040-89be-b06d3dff46e6"],
Cell[974832, 19398, 337, 10, 23, "SubProblem", "ExpressionUUID" -> \
"0fef3b8d-013e-4724-a48d-a76b54f4bac7"],
Cell[975172, 19410, 313, 9, 20, "SubProblem", "ExpressionUUID" -> \
"97dc227a-3a6e-406f-8ff2-60a07f2d264c"],
Cell[975488, 19421, 671, 24, 42, "SubProblem", "ExpressionUUID" -> \
"3a963854-d5c9-4fcf-917d-334db9df3ea2"],
Cell[976162, 19447, 682, 26, 41, "SubProblem", "ExpressionUUID" -> \
"f1e5935c-7758-4c3d-8347-5cac69bea3f2"],
Cell[976847, 19475, 799, 25, 30, "Problem", "ExpressionUUID" -> \
"14484dcd-cc2d-4e09-9732-2ce62e19f676"],
Cell[977649, 19502, 75873, 1250, 260, "Output", "ExpressionUUID" -> \
"39acd6ca-94e5-456d-86b4-213fab3d9516"],
Cell[1053525, 20754, 828, 27, 31, "Problem", "ExpressionUUID" -> \
"5baf72f1-45ac-4d48-86b7-78de0dd5e795"],
Cell[1054356, 20783, 54519, 900, 269, "Output", "ExpressionUUID" -> \
"1427c7b5-1ecb-4e3c-a1d9-038e979ce07d"],
Cell[1108878, 21685, 1296, 43, 52, "Problem", "ExpressionUUID" -> \
"dce76a03-22f1-492b-bed5-5497311a4ae8"],
Cell[1110177, 21730, 1475, 50, 55, "Problem", "ExpressionUUID" -> \
"a939606d-a6f8-4515-a87f-d01a2ba724e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[1111689, 21785, 199, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"f3261f57-dab6-4e03-9ecc-97b9ba193775",
 CellTags->"\[EmptySmallCircle] Explorations and Challenges"],
Cell[1111891, 21790, 979, 28, 48, "Problem", "ExpressionUUID" -> \
"e8524d6a-7e8e-4908-a6f1-7d640cbb4e20"],
Cell[1112873, 21820, 327, 10, 19, "SubProblem", "ExpressionUUID" -> \
"e8d9aeb3-6be7-43ac-8208-3b444e5d5547"],
Cell[1113203, 21832, 319, 9, 19, "SubProblem", "ExpressionUUID" -> \
"861bcdf5-2f32-4f4d-9c0b-2a82afca23a1"],
Cell[1113525, 21843, 191, 4, 19, "SubProblem", "ExpressionUUID" -> \
"7b384c55-b05a-49ad-b2b3-145b218778da"],
Cell[1113719, 21849, 188, 4, 19, "SubProblem", "ExpressionUUID" -> \
"e297de2a-dabb-49e4-91e1-0fcef75a49b3"],
Cell[1113910, 21855, 297, 8, 19, "SubProblem", "ExpressionUUID" -> \
"a681d24e-63aa-4f88-ae6b-3976d411f07b"],
Cell[1114210, 21865, 2113, 67, 75, "TProblem", "ExpressionUUID" -> \
"48e8c2ec-0dc0-4781-b06c-2a942c14207c"],
Cell[1116326, 21934, 668, 19, 19, "SubProblem", "ExpressionUUID" -> \
"2502c996-572b-4dfb-8c44-faef0ec2bc88"],
Cell[1116997, 21955, 587, 17, 19, "SubProblem", "ExpressionUUID" -> \
"2904a922-2366-40c5-9d25-a168076a0b5e"],
Cell[1117587, 21974, 587, 17, 19, "SubProblem", "ExpressionUUID" -> \
"b83bbb19-6886-4935-9d31-7a4e9ad86463"],
Cell[1118177, 21993, 440, 12, 19, "SubProblem", "ExpressionUUID" -> \
"f6813664-78d0-4901-8a65-90f5f7b2ff1c"],
Cell[1118620, 22007, 1306, 44, 35, "TProblem", "ExpressionUUID" -> \
"bd5be42a-e946-43f2-98aa-2ff02d47b3a4"],
Cell[1119929, 22053, 289, 7, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "e4eaad75-2bfb-482e-9118-d30304f47ec4"],
Cell[1120221, 22062, 459, 16, 33, "Problem", "ExpressionUUID" -> \
"e946aa7a-e87e-4970-948f-93699a13ec4c"],
Cell[1120683, 22080, 481, 17, 33, "Problem", "ExpressionUUID" -> \
"3033e8ec-b8a9-4c15-8018-4c8491167b6c"],
Cell[1121167, 22099, 404, 13, 33, "Problem", "ExpressionUUID" -> \
"243a7010-419c-4327-891e-2d5c7ea090bb"],
Cell[1121574, 22114, 404, 13, 33, "Problem", "ExpressionUUID" -> \
"b242323d-2ba0-4def-809a-db5d8f8f960e"],
Cell[1121981, 22129, 482, 17, 52, "Problem", "ExpressionUUID" -> \
"dbfaaa08-3335-4c3a-9fcc-559f0f8a5edd"],
Cell[1122466, 22148, 480, 17, 51, "Problem", "ExpressionUUID" -> \
"ad22fda6-3b9f-4d86-a240-89e8fdd99988"],
Cell[1122949, 22167, 839, 30, 33, "Problem", "ExpressionUUID" -> \
"61211f68-c050-4c3f-9cac-6d421dc63011"],
Cell[1123791, 22199, 617, 21, 31, "Problem", "ExpressionUUID" -> \
"ac04a26a-1ca7-4add-b359-9038b33f2623"],
Cell[1124411, 22222, 668, 21, 20, "SubProblem", "ExpressionUUID" -> \
"9a73f118-992b-4878-85cc-8ebfb73e2fd9"],
Cell[1125082, 22245, 524, 15, 19, "SubProblem", "ExpressionUUID" -> \
"2a2a4426-88bb-4027-be29-93ecf3e66427"],
Cell[1125609, 22262, 326, 9, 21, "SubProblem", "ExpressionUUID" -> \
"e3fe79d4-e6c0-4644-b7d5-d9aded940301"],
Cell[1125938, 22273, 723, 25, 50, "Problem", "ExpressionUUID" -> \
"97fbd2cd-6d14-405c-be67-d10b2f0cc20b"],
Cell[1126664, 22300, 552, 19, 31, "Problem", "ExpressionUUID" -> \
"8548f784-a924-4ce4-b127-474a2557663c"],
Cell[1127219, 22321, 636, 18, 21, "SubProblem", "ExpressionUUID" -> \
"f9a65fb8-a64a-412c-9f3a-7e89d4a24f8f"],
Cell[1127858, 22341, 570, 17, 20, "SubProblem", "ExpressionUUID" -> \
"4a88d6e9-b29a-4a91-a8a6-3f59d77c2c43"],
Cell[1128431, 22360, 339, 11, 21, "SubProblem", "ExpressionUUID" -> \
"2402bf89-fee9-4527-b3ee-b74b5e6054ae"],
Cell[1128773, 22373, 1064, 36, 35, "TProblem", "ExpressionUUID" -> \
"b1989e97-9274-46f8-b771-9679f5fabb07"],
Cell[1129840, 22411, 381, 9, 19, "SubProblem", "ExpressionUUID" -> \
"98205b1a-adc1-4f61-af35-b24b735b34d2"],
Cell[1130224, 22422, 821, 25, 23, "SubProblem", "ExpressionUUID" -> \
"89d3ed20-a9bd-4a19-8b17-df466e02c574"],
Cell[1131048, 22449, 434, 12, 23, "SubProblem", "ExpressionUUID" -> \
"17079786-1fa3-444b-b6af-219899214ee5"],
Cell[1131485, 22463, 193, 5, 29, "Problem", "ExpressionUUID" -> \
"b0992c42-73e2-4d3a-b5ff-2a7a02573bbe"],
Cell[1131681, 22470, 1442, 45, 25, "SubProblem", "ExpressionUUID" -> \
"4eff0daf-5a1b-4001-862f-0315a8ab9aef"],
Cell[1133126, 22517, 1436, 45, 29, "SubProblem", "ExpressionUUID" -> \
"e3c60cc5-0335-4457-afc3-9ef59e5ae22e"],
Cell[1134565, 22564, 647, 20, 19, "SubProblem", "ExpressionUUID" -> \
"11f78788-ab64-4d08-9579-70915b8939a2"],
Cell[1135215, 22586, 1150, 41, 31, "Problem", "ExpressionUUID" -> \
"54a9b645-11be-46ac-b093-63a3ebbd1779"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature oK4t@qdLjfm2QL5FLFnvovr6 *)
