(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.1' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   1513350,      29972]
NotebookOptionsPosition[   1287381,      24999]
NotebookOutlinePosition[   1477030,      29233]
CellTagsIndexPosition[   1474707,      29186]
WindowTitle->Section 3.2 The Derivative as a Function
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["3.2 The Derivative as a Function", \
"SectionTitleFont"]], "Section",
 CellTags->
  "3.2 The Derivative as a \
Function",ExpressionUUID->"c168c650-c480-421d-9412-e80e3a05e290"],

Cell[TextData[{
 "In Section 3.1, we learned that the derivative of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6e463b02-1af6-413a-a78d-37e68c728272"],
 " at a point ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "b38c9373-8173-4040-bc11-10a6dc7764a1"],
 " is the slope of the line tangent to the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a57c49fb-faeb-4856-b903-0218aee74bfd"],
 " that passes through the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", 
     RowBox[{"f", "(", "a", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "e4cd12ec-dfc5-4583-8639-028afae87839"],
 ". We now extend the concept of a derivative at a point to all (suitable) \
points in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "299028a3-3ad4-49e7-9163-893af4f59d55"],
 " to create a new function called the derivative of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b926010d-6044-497d-8372-dd3a5c7868d6"],
 "."
}], "Text",ExpressionUUID->"61fa8482-373c-4629-a877-969a0872c7e4"],

Cell[CellGroupData[{

Cell["The Derivative Function  \[RightGuillemet]", "Subsection",
 CellTags->
  "The Derivative \
Function",ExpressionUUID->"edfa74b0-e836-4a27-b3f0-70872848c136"],

Cell[TextData[{
 "So far we have computed the derivative of a function (or, equivalently, \
slope of the tangent line) at one fixed point on the curve. If this point is \
moved along the curve, the tangent line also moves, and, in general, its \
slope changes (",
 StyleBox["Figure 3.14", "FigureFontText"],
 "). For this reason, the slope of the tangent line for the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ce7c47b8-3d7c-43e8-ada6-63b5deed51a8"],
 " is itself a function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b4774631-8d5e-4864-8a18-2c9c35b97a64"],
 ", called the ",
 StyleBox["derivative",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6c41ae74-6d6e-4a8f-898e-1554dfd8b148"],
 "."
}], "Text",ExpressionUUID->"1dc2095e-23d9-41c5-adeb-5ec840b2775e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = 2, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], 2, 
                "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, 0.2, 
               9.8, 0.1}, {{
                Hold[$CellContext`xValue$$], 2, ""}, 0.2, 9.8, 0.01}}, 
            Typeset`size$$ = {360., {114., 119.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$3608$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = 2}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$3608$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  $CellContext`funcC3F14[$CellContext`x], 
                  Derivative[
                    1][$CellContext`funcC3F14][$CellContext`xValue$$] \
($CellContext`x - $CellContext`xValue$$) + \
$CellContext`funcC3F14[$CellContext`xValue$$]}, {$CellContext`x, 0, 10}, 
                 PlotStyle -> {{Thick, Black}, {Thick, $CellContext`bcR}}], 
                Graphics[{
                  Text[
                   Framed[
                    Pane[
                    
                    Grid[{{"\!\(\*SubscriptBox[\n StyleBox[\"m\",\n\
FontSlant->\"Italic\"], \"tan\"]\)", "=", "instantaneous rate of change"}, {
                    "", "=", 
                    "derivative at \!\(\*\nStyleBox[\"a\",\n\
FontSlant->\"Italic\"]\)"}, {
                    "\!\(\*SubscriptBox[\n StyleBox[\"m\",\n\
FontSlant->\"Italic\"], \"tan\"]\)", 
                    Piecewise[{{">", $CellContext`xValue$$ < 4.95}, {
                    "=", 4.95 <= $CellContext`xValue$$ <= 5.05}, {
                    "<", $CellContext`xValue$$ > 5.05}}], 0}}, 
                    BaseStyle -> {"TR", 13}, 
                    Alignment -> {{
                    Right, Center, 
                    Left}}], $CellContext`bcPBS], $CellContext`bcFO], {
                   5, -1}, {0, 1}], $CellContext`bcR, Dashed, 
                  AbsoluteThickness[1], 
                  Line[{{$CellContext`xValue$$, 0}, {$CellContext`xValue$$, 
                    $CellContext`funcC3F14[$CellContext`xValue$$]}}], 
                  Dashing[{}], LightGray, 
                  Line[{{5, -1}, {$CellContext`xValue$$, 
                    $CellContext`funcC3F14[$CellContext`xValue$$]}}], \
$CellContext`bcB, 
                  AbsolutePointSize[7], 
                  Point[{$CellContext`xValue$$, 
                    $CellContext`funcC3F14[$CellContext`xValue$$]}]}]}, 
               Ticks -> {{{$CellContext`xValue$$, 
                   "\!\(TraditionalForm\`a\)"}}, None}, 
               PlotRange -> {{-1, 11}, {-5, 6}}, AxesOrigin -> {0, 0}, 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[{0, 0.04}], ImageSize -> 5 72], 
             "Specifications" :> {{{$CellContext`xValue$$, 2, 
                 "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\)"}, 0.2, 
                9.8, 0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, 2, ""}, 0.2, 9.8, 0.01, 
                ControlType -> Trigger, DefaultDuration -> 10, 
                AppearanceElements -> {
                 "PlayPauseButton", "StepLeftButton", "StepRightButton"}}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {538., {137., 145.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F14[
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := (((-5)/17) ($CellContext`x - 
                    2)) ($CellContext`x - 8) + 2, 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F14[
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := (((-5)/17) ($CellContext`x - 
                    2)) ($CellContext`x - 8) + 2}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.14\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.14  \[LightBulb]: Instantaneous rate of \
change",ExpressionUUID->"bae5afa9-4a4a-441c-a816-29e302b095ca"],

Cell[TextData[{
 "\tWe let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "5e763545-9c5b-4dd2-aa5e-a36f8326f04a"],
 " (read ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "08d25f2d-604b-45cf-8018-c402ee42d6d8"],
 " ",
 StyleBox["prime",
  FontSlant->"Italic"],
 ") denote the derivative function for ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "0fec916e-c80e-4de7-9d86-d0b9386fc2a5"],
 ", which means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "14e52bba-1315-4157-8863-30f20eb094ad"],
 ", when it exists, is the slope of the line tangent to the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6ac7b4f7-6397-41c4-8b30-fdb884226bee"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", 
     RowBox[{"f", "(", "a", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "b28d4b2e-7468-4803-91f6-175fbc570d1d"],
 ". Using definition (2) for the derivative of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "801fc5d2-7226-47b4-9e13-e476ad68b052"],
 " at the point ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "c86878e4-5a6e-4b64-97d5-d4ee9a5553a3"],
 " from Section 3.1, we have "
}], "Text",ExpressionUUID->"1f2544e5-0cc0-4858-84a6-014e3df010bf"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", "a", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"f", "(", 
              RowBox[{"a", "+", "h"}], ")"}], "-", 
             RowBox[{"f", "(", "a", ")"}]}], "h"], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"bb4ca92d-5457-4e7c-8f56-18926451726f"]], \
"Text",ExpressionUUID->"8df677aa-a86c-4df4-98a9-31ae91cab5f2"],

Cell[TextData[{
 "We now take an important step. The derivative is a special function, but it \
works just like any other function. For example, if the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "60973f22-5afa-4ba8-b649-80164d95d875"],
 " is smooth and 2 is in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "986f9d0b-ae6a-4d12-986d-5154eb0ad78e"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "2", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d168cee9-fad8-413d-b309-cef13756305c"],
 " is the slope of the line tangent to the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "137c6db0-616d-4d13-bcaa-b223d247b78a"],
 " at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"2", ",", 
     RowBox[{"f", "(", "2", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "21a88f47-a1ab-4654-9258-8ed9c2d5f50e"],
 ". Similarly, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2"}], TraditionalForm]],ExpressionUUID->
  "62fba3d5-34b7-40a8-a7ea-1b9ff0c372af"],
 " is in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "de249cb9-621c-49a4-b064-3c903a7a42e9"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0f7cf923-3721-436a-8064-691e04c212a1"],
 " is the slope of the tangent line at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"f", "(", 
      RowBox[{"-", "2"}], ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "669dc470-ead9-4156-ae35-fc17c83fe8f5"],
 ". In fact, if ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4cfc07c3-9a0f-436a-a5f0-c95fcf93f195"],
 " is ",
 StyleBox["any",
  FontSlant->"Italic"],
 " point in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ba23b75b-389d-40f4-9e10-8ff4977b503e"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0259ed4f-dd85-4db2-aa5d-f9b834c13a11"],
 " is the slope of the tangent line at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"f", "(", "x", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "368c3e94-e2db-4667-98cd-14c9f36fdd80"],
 ". When we introduce a variable point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "26d2045f-002e-4f3f-8fff-9098d1050a31"],
 ", the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "598ad2d9-0cf1-4dac-943b-aefb7e94a28d"],
 " becomes the ",
 StyleBox["derivative function",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"2f4b4cc2-6b40-45cc-ba39-708dae6c0d4d"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"3d45524f-6cae-42d3-a59d-96642c88ab7d"],

Cell[TextData[{
 "To emphasize an important point, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "2", ")"}]}], TraditionalForm]],ExpressionUUID->
  "7140671a-c285-42f6-b678-88e013857056"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "c182030e-5622-49a2-9e41-dc0bc018e91b"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "e9183a84-490b-4d96-b1eb-eaaecaead948"],
 ", for a real number ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "951b5729-fe9f-44cf-a03b-465c5daaf4d4"],
 ", are a real numbers, whereas ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "3f1d2641-99bf-4513-a1ec-f13dd93fdf06"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ef38358a-79f7-49f2-860e-d87af512e2a1"],
 " refer to the derivative ",
 StyleBox["function",
  FontSlant->"Italic"],
 "."
}], "Callout",ExpressionUUID->"21f48a90-765b-4318-b3df-b4365272fdee"]
}, Closed]],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["The Derivative",
  FontWeight->"Bold"],
 "\nThe ",
 StyleBox["derivative",
  FontWeight->"Bold"],
 " of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "8820511e-28e5-499b-9528-116a58e00f24"],
 " is the function \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"f", "'"}], 
            RowBox[{"(", "x", ")"}]}], "=", 
           RowBox[{
            UnderscriptBox["lim", 
             RowBox[{"h", "\[Rule]", "0"}]], 
            FractionBox[
             RowBox[{
              RowBox[{"f", "(", 
               RowBox[{"x", "+", "h"}], ")"}], "-", 
              RowBox[{"f", "(", "x", ")"}]}], "h"]}]}], ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "6b037d9a-9c0e-4ac8-a26d-0562be586ac7"],
 "\nprovided the limit exists and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "3cab0a2e-3a41-425f-9b63-ed38ef3dd877"],
 " is in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "8ebd5d25-83d1-4dba-bc5f-6af8f6a37542"],
 " . If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "43936bb0-1be0-4b9b-818c-6511ffd65ee3"],
 " exists, we say ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d8c2f50e-bc9b-4aa5-88ac-51546eb572ec"],
 " is ",
 StyleBox["differentiable",
  FontWeight->"Bold"],
 " at ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6e330e21-dc40-4886-95d9-92a8fe16fa74"],
 ". If ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e8130c91-96b5-4b04-9d49-290258c8fc28"],
 " is differentiable at every point of an open interval ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "fec220f6-bf1e-4839-89a0-d9aaf051adce"],
 ", we say that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ca2f20d5-e027-46a4-afd5-7dd4e6a54cb7"],
 " is differentiable on ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],ExpressionUUID->
  "509ef8a0-6f2a-4864-b428-08a21b3dfb03"],
 "."
}], "Definition",
 CellTags->
  "DEFINITION The \
Derivative",ExpressionUUID->"e073f974-7b16-4fa5-bc43-788146064b92"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"a9bf549d-3ba8-414c-9d0a-ea0be51a0507"],

Cell[TextData[{
 "The process of finding ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "ec71692e-f253-4caa-a816-6345a103bde7"],
 " is called ",
 StyleBox["differentiation",
  FontSlant->"Italic"],
 ", and to ",
 StyleBox["differentiate",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "851efbaa-37b8-4f82-b443-99369e4ce89d"],
 " means to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "3a15429a-5858-4d8e-816c-1448d29b7d57"],
 "."
}], "Callout",ExpressionUUID->"f353c530-8150-4ed5-a7e6-86d2cb33d933"]
}, Closed]],

Cell[TextData[{
 "\tNotice that the definition of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "18710a5d-a275-49b8-a6cd-6283f4588974"],
 " applies only at points in the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ff15bcc6-31d8-4dcc-877b-147d79a5a8df"],
 ". Therefore, the domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "10000b6b-94e9-4191-8bb1-d15d3c0d459e"],
 " is no larger than the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e4b387b8-194f-4e78-aad8-62f6cd5d6f27"],
 ". If the limit in the definition of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "f97509dc-4567-4386-8e84-3184a89a6879"],
 " fails to exist at some points, then the domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "59d1716a-a48e-4c43-90a4-0859266474d5"],
 " is smaller than the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "701d93a1-6c92-4da8-b460-502fb7662d8d"],
 ". Let\[CloseCurlyQuote]s use this definition to compute a derivative \
function."
}], "Text",ExpressionUUID->"8db4005d-0e98-457d-a37b-376afaaab0d6"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 1\t", "ExampleFont"],
 "Computing a derivative"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 1 Computing a \
derivative",ExpressionUUID->"fcd35fbe-5acc-40d9-bc49-985ffc03714e"],

Cell[TextData[{
 "Find the derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"6", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "1b09514f-5552-42d4-b09a-20393fd659b3"],
 "."
}], "Text",ExpressionUUID->"1ef648f0-e27c-422c-95b1-fb8d95770c11"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"7a78b81f-ac1d-4374-a4e4-a80e73bacb61"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", "x", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "(", 
             RowBox[{"x", "+", "h"}], ")"}], "-", 
            RowBox[{"f", "(", "x", ")"}]}], "h"]}]}], 
        StyleBox[
         RowBox[{"Definition", " ", "of", " ", 
          RowBox[{"f", "'"}], 
          RowBox[{"(", "x", ")"}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            FormBox[
             OverscriptBox[
              OverscriptBox[
               FormBox[
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"x", "+", "h"}], ")"}], "2"]}], "+", 
                 RowBox[{"6", 
                  RowBox[{"(", 
                   RowBox[{"x", "+", "h"}], ")"}]}]}],
                TraditionalForm], 
               StyleBox["\[OverBrace]", "TypesetAnnotationFont"]], 
              StyleBox[
               RowBox[{"f", "(", 
                RowBox[{"x", "+", "h"}], ")"}], "TypesetAnnotationFont"]],
             TraditionalForm], "-", 
            FormBox[
             FormBox[
              FormBox[
               OverscriptBox[
                OverscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["x", "2"]}], "+", 
                   RowBox[{"6", "x"}]}], ")"}], 
                 StyleBox["\[OverBrace]", "TypesetAnnotationFont"]], 
                StyleBox[
                 RowBox[{"f", "(", "x", ")"}], "TypesetAnnotationFont"]],
               TraditionalForm],
              TraditionalForm],
             TraditionalForm]}], "h"]}]}], 
        StyleBox[
         RowBox[{"Substitute", "."}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               RowBox[{"2", "x", " ", "h"}], "+", 
               SuperscriptBox["h", "2"]}], ")"}]}], "+", 
            RowBox[{"6", "x"}], "+", 
            RowBox[{"6", "h"}], "+", 
            SuperscriptBox["x", "2"], "-", 
            RowBox[{"6", "x"}]}], "h"]}]}], 
        StyleBox[
         RowBox[{"Expand", " ", "the", " ", 
          RowBox[{"numerator", "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "x"}], "-", "h", "+", "6"}], ")"}]}], 
           "h"]}]}], 
        StyleBox[
         RowBox[{"Simplify", " ", "and", " ", "factor", " ", "out", " ", 
          RowBox[{"h", "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{
           UnderscriptBox["lim", 
            RowBox[{"h", "\[Rule]", "0"}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "x"}], "-", "h", "+", "6"}], ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "x"}], "+", "6"}]}]}], 
        StyleBox[
         RowBox[{
         "Cancel", " ", "h", " ", "and", " ", "evaluate", " ", "the", " ", 
          RowBox[{"limit", "."}]}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"=", Left}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2ac739b7-e000-462c-9987-b355a86ee253"]], \
"Text",ExpressionUUID->"b7879681-f55c-4534-8ea7-2b00da27a72a"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"8cdb2e1b-f54f-4b36-b253-0e7c11551359"],

Cell[TextData[{
 "Notice that this argument applies for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "cc8f540a-8d97-4b4c-9036-93bc8e5b74eb"],
 " and for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "1d96a520-998b-49ab-a1bd-b149fcbfc31d"],
 "; that is, the limit as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "\[Rule]", 
    SuperscriptBox["0", "+"]}], TraditionalForm]],ExpressionUUID->
  "556845f0-a99e-4035-8a73-5767c4ba33fd"],
 " and the limit as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "\[Rule]", 
    SuperscriptBox["0", "-"]}], TraditionalForm]],ExpressionUUID->
  "d0c298b7-03fb-4cae-9a1a-31f2181eb904"],
 " are equal."
}], "Callout",ExpressionUUID->"66a8292d-b2bc-4406-a728-f1fde548dd17"]
}, Closed]],

Cell[TextData[{
 "The derivative is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "x"}], "+", "6"}]}], TraditionalForm]],
  ExpressionUUID->"7ec465e3-3d14-4f96-97aa-927dbdcb403b"],
 ", which gives the slope of the tangent line (equivalently, the \
instantaneous rate of change) at ",
 StyleBox["any",
  FontSlant->"Italic"],
 " point on the curve. For example, at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "5"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3e10183e-7652-4223-ba48-976cb8c1698e"],
 ", the slope of the tangent line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "1", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"(", "1", ")"}]}], "+", "6"}], "=", "4"}]}], TraditionalForm]],
  ExpressionUUID->"8058b2e3-7b4d-4ae2-bcc1-649654c3cf68"],
 ", confirming the calculation in Example 1. The slope of the tangent line at \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"3", ",", "9"}], ")"}], TraditionalForm]],ExpressionUUID->
  "c94f1c1b-382f-400b-94b4-027878a4fd38"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "3", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"(", "3", ")"}]}], "+", "6"}], "=", "0"}]}], TraditionalForm]],
  ExpressionUUID->"cd872791-f890-4774-b911-17cf44d2da6f"],
 ", which means the tangent line is horizontal at that point (",
 StyleBox["Figure 3.15", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"e11c393a-8844-4e66-a051-95a9e5912f1f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = 2.5, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], 2.5, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0, 6, 
               0.1}, {{
                Hold[$CellContext`xValue$$], 2.5, ""}, 0, 6, 0.1}}, 
            Typeset`size$$ = {360., {180., 185.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$3671$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = 2.5}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$3671$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[{
                  $CellContext`funcC3F15[$CellContext`x], 
                  Derivative[
                    1][$CellContext`funcC3F15][$CellContext`xValue$$] \
($CellContext`x - $CellContext`xValue$$) + \
$CellContext`funcC3F15[$CellContext`xValue$$]}, {$CellContext`x, -0.5, 6.5}, 
                 PlotStyle -> {{Thick, Black}, {Thick, $CellContext`bcR}}], 
                Graphics[{
                  Text[
                  "\!\(TraditionalForm\`f(x) = \(-16\) \
\*SuperscriptBox[\(x\), \(2\)] + 96  x\)", {4.5, 155}, {-1, 
                   1}], $CellContext`bcR, 
                  Text[
                  "\!\(TraditionalForm\`f' \((x)\) = \(-32\) x + 96\)", {
                   4.5, 135}, {-1, 1}], Black, 
                  Text[
                   Pane[
                    Row[{"\!\(TraditionalForm\`f'\)", "(", 
                    $CellContext`DisplayNumber[$CellContext`xValue$$], ")", 
                    " = ", 
                    $CellContext`DisplayNumber[
                    Round[
                    Derivative[
                    1][$CellContext`funcC3F15][$CellContext`xValue$$], 
                    0.1]]}], {Automatic, Automatic}, 
                    BaseStyle -> {
                    LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Center, FontSize -> 
                    13}], {$CellContext`xValue$$, 
                    $CellContext`funcC3F15[$CellContext`xValue$$]}, {
                   1.2, -1}], Dashed, 
                  AbsoluteThickness[1], 
                  Line[{{$CellContext`xValue$$, 0}, {$CellContext`xValue$$, 
                    $CellContext`funcC3F15[$CellContext`xValue$$]}}], 
                  Dashing[{}], 
                  $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F15[$CellContext`xValue$$]}, \
$CellContext`bcB], 
                  Text[
                   Framed[
                   "\!\(\*FormBox[GridBox[{\n   {\n    RowBox[{\n     \
RowBox[{\"f\", \"(\", \"x\", \")\"}], \"=\", \n     RowBox[{\n      \
RowBox[{\"-\", SuperscriptBox[\"x\", \"2\"]}], \"+\", \n      RowBox[{\"6\", \
\"x\"}]}]}]},\n   {\n    StyleBox[\n     RowBox[{\n      RowBox[{\n       \
RowBox[{\"f\", \"'\"}], \n       RowBox[{\"(\", \"x\", \")\"}]}], \"=\", \n   \
   RowBox[{\n       RowBox[{\n        RowBox[{\"-\", \"2\"}], \"x\"}], \"+\", \
\"6\"}]}],\nFontColor->RGBColor[0.92, 0.11, 0.27]]}\n  },\n\
GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}],\n TraditionalForm]\)", \
$CellContext`bcFO], 
                   Scaled[{1, 1}], {1, 1}]}]}, Ticks -> {
                 Range[0, 10, 1], 
                 Range[0, 10, 1]}, PlotRange -> {{-1.5, 7}, {-1, 10}}, 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               AxesOrigin -> {0, 0}, AspectRatio -> 1, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> Arrowheads[0.03],
                ImageSize -> 5 72], 
             "Specifications" :> {{{$CellContext`xValue$$, 2.5, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0, 6, 
                0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, 2.5, ""}, 0, 6, 0.1, 
                ControlType -> Trigger, DefaultDuration -> 10, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {538., {203., 211.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F15[
                  Pattern[$CellContext`x, 
                   Blank[]]] := -$CellContext`x^2 + 6 $CellContext`x, 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`DisplayNumber[
                  Pattern[$CellContext`num, 
                   Blank[]]] := 
                If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                  
                  Round[$CellContext`num, 
                   1], $CellContext`num], $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F15[
                  Pattern[$CellContext`x, 
                   Blank[]]] := -$CellContext`x^2 + 6 $CellContext`x}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.15\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.15  \[LightBulb]: Example \
1",ExpressionUUID->"55db638e-a424-4089-8a02-7b0c4cfdf485"],

Cell[TextData[{
 "Related Exercises ",
 "23\[Dash]24",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"8f85e119-370f-45f0-a199-6c531e947ecb"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "1"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"66af5f98-5095-4e74-be29-ec9cdc3cdfba"],
 "  In Example 1, determine the slope of the tangent line at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "e880f12a-e801-4d43-826d-5207b43ba046"],
 ". ",
 Cell[BoxData[
  FormBox[
   GraphicsBox[PolygonBox[{{0, 0}, {0.9, -0.3}, {0.7, 0}, {0.9, 0.3}, {0, 0}}],
    ImageSize->15,
    PlotRange->{-0.5, 0.3}], TraditionalForm]],ExpressionUUID->
  "50a2dd40-33a4-4ec7-86bb-6da8471ebeb1"]
}], "QuickCheck",
 CellTags->
  "Quick Check 1",ExpressionUUID->"76dfd9b6-0e91-4bf5-90eb-b204d3f8ca8e"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"d53643ea-62c6-4b50-8c31-03ac15a0b66b"],

Cell["2", "QuickCheckAnswer",ExpressionUUID->"4b8285a8-8ed8-4acc-bbd3-fa5b2310c6c6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivative Notation  \[RightGuillemet]", "Subsection",
 CellTags->
  "Derivative \
Notation",ExpressionUUID->"fe09c2d2-7ee3-42aa-9a65-3609909b1b6a"],

Cell[TextData[{
 "For historical and practical reasons, several notations for the derivative \
are used. To see the origin of one notation, recall that the slope of the \
secant line between two points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"x", ",", 
     RowBox[{"f", "(", "x", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "763c4ed9-4d62-43ac-a965-d0a4bb1dcae2"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", 
    RowBox[{
     RowBox[{"x", "+", "h"}], ",", 
     RowBox[{"f", "(", 
      RowBox[{"x", "+", "h"}], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"1df16ad6-827d-4a73-b9a8-dcd6c00fed31"],
 " on the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a8e0a4f5-ecc1-4108-8710-25397ea3a68e"],
 " is ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"f", "(", 
      RowBox[{"x", "+", "h"}], ")"}], "-", 
     RowBox[{"f", "(", "x", ")"}]}], "h"], TraditionalForm]],ExpressionUUID->
  "4a315daf-7487-4df9-8c66-06b77efba1fd"],
 ". The quantity ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "ca97841d-e491-48c8-bd4a-e79c9ad3a954"],
 " is the change in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "1b6c6411-e708-4f2e-a3e9-d2b7ecc25108"],
 "-coordinates in moving from ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "39530c27-7af7-4adf-947a-b0ac7167af1a"],
 " to ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "0a967a6e-fc68-48aa-a6c3-c52009e2c9ea"],
 ". A standard notation for change is the symbol ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]],ExpressionUUID->
  "ae184cf2-5d48-4cc5-b173-e6c379377334"],
 " (uppercase Greek letter delta). So, we replace ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "2620462d-6dbb-427f-80cf-d76cc3e37f3c"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"81c565d4-9deb-4366-896d-99732b2c9570"],
 " to represent the change in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "84658a6d-09af-415a-8e8b-607b764dbfce"],
 ". Similarly, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"x", "+", "h"}], ")"}], "-", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "97578ba3-3bf1-44ca-b276-1e0372456679"],
 " is the change in ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "2cc84cc6-9a53-46b1-972f-610d597d0f01"],
 ", denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "y"}], TraditionalForm]],
  ExpressionUUID->"be7087aa-3cec-478a-a401-35bbf19c568c"],
 " (",
 StyleBox["Figure 3.16", "FigureFontText"],
 "). Therefore, the slope of the secant line is "
}], "Text",ExpressionUUID->"745be8d9-75ba-4c56-a7cc-80b2d7a2799a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          SubscriptBox["m", "sec"], "=", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"f", "(", 
              RowBox[{"x", "+", 
               RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}], ")"}], 
             "-", 
             RowBox[{"f", "(", "x", ")"}]}], 
            RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]], "=", 
           FractionBox[
            RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "y"}], 
            RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "."}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2e3a9d1a-4822-42b0-9d38-719316bd2cb7"]], \
"Text",ExpressionUUID->"58607073-e1c8-470c-a4b0-29f709eea297"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 
            1.5, $CellContext`hValue$$ = 4, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold[
                Pane[
                "Change location of point \!\(\*\nStyleBox[\"Q\",\n\
FontSlant->\"Italic\"]\)", {144, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`hValue$$], 4, 
                "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\)"}, 
               0.01, 4.5, 0.01}, {
               Hold[
                Grid[{{
                   Spacer[10], 
                   
                   Row[{"\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]\
x\)", " = ", 
                    Dynamic[$CellContext`hValue$$]}]}}]], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold[
                Pane[
                "Change location of points \!\(\*\nStyleBox[\"P\",\n\
FontSlant->\"Italic\"]\) and \!\(\*\nStyleBox[\"Q\",\n\
FontSlant->\"Italic\"]\)", {144, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`aValue$$], 1.5, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 1.03, 3,
                0.005}, {
               Hold[
                Button[
                "reset location of \!\(\*\nStyleBox[\"P\",\n\
FontSlant->\"Italic\"]\)", $CellContext`resetAValue = True, BaseStyle -> 11]],
                Manipulate`Dump`ThisIsNotAControl}}, 
            Typeset`size$$ = {432., {216., 221.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`hValue$3756$$ = 0, $CellContext`aValue$3757$$ = 
            0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 
               1.5, $CellContext`hValue$$ = 4}, "ControllerVariables" :> {
               Hold[$CellContext`hValue$$, $CellContext`hValue$3756$$, 0], 
               Hold[$CellContext`aValue$$, $CellContext`aValue$3757$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, 
             "Body" :> (
              If[$CellContext`resetAValue, {$CellContext`aValue$$, \
$CellContext`resetAValue} = {1.5, False}]; Show[{
                 Plot[{
                   $CellContext`funcC3F16[$CellContext`x], \
(($CellContext`funcC3F16[$CellContext`aValue$$ + $CellContext`hValue$$] - \
$CellContext`funcC3F16[$CellContext`aValue$$])/$CellContext`hValue$$) \
($CellContext`x - $CellContext`aValue$$) + \
$CellContext`funcC3F16[$CellContext`aValue$$], 
                   Derivative[
                    1][$CellContext`funcC3F16][$CellContext`aValue$$] \
($CellContext`x - $CellContext`aValue$$) + \
$CellContext`funcC3F16[$CellContext`aValue$$]}, {$CellContext`x, 0, 16}, 
                  PlotRange -> {{-1.5, 11}, {-1, 11}}, 
                  PlotStyle -> {{Thick, Black}, {
                    AbsoluteThickness[1.5], $CellContext`bcG}, {
                    Thick, $CellContext`bcR}}], 
                 Graphics[{Black, 
                   Text[
                   "\!\(\*\nStyleBox[\"O\",\nFontSlant->\"Italic\"]\)", {0, 
                    0}, {1.5, 1.5}], 
                   Text["\!\(TraditionalForm\`y = f(x)\)", {10, 
                    $CellContext`funcC3F16[10]}, {1, 3}], 
                   Text[
                   "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]y = \
f(x + \[CapitalDelta]\[VeryThinSpace]x) - f(x)\)", {$CellContext`aValue$$ + \
$CellContext`hValue$$, ($CellContext`funcC3F16[$CellContext`aValue$$] + \
$CellContext`funcC3F16[$CellContext`aValue$$ + $CellContext`hValue$$])/
                    2}, {-1.1, 0}], 
                   Text[
                   "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\)", \
{$CellContext`aValue$$ + $CellContext`hValue$$/2, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, {0, 1.5}], 
                   Text["\!\(TraditionalForm\`P\)", {$CellContext`aValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, {
                    1.5, -1.5}], 
                   Text[
                   "\!\(TraditionalForm\`Q\)", {$CellContext`aValue$$ + \
$CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}, {-1.5, -1.5}], 
                   Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(m\), \(tan\)] = \
\(f' \((x)\) = \(\*SubscriptBox[\(lim\), \(\[CapitalDelta]\[VeryThinSpace]x \
\[Rule] 0\)]\*FractionBox[\(\[CapitalDelta]\[VeryThinSpace]y\), \(\
\[CapitalDelta]\[VeryThinSpace]x\)] = \*FractionBox[\(d\[VeryThinSpace]y\), \
\(d\[VeryThinSpace]x\)]\)\)\)", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> 
                    White], {(
                    10.5 - $CellContext`funcC3F16[$CellContext`aValue$$])/
                    Derivative[
                    1][$CellContext`funcC3F16][$CellContext`aValue$$] + \
$CellContext`aValue$$, 10.5}, {0, 1}], 
                   Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(m\), \(sec\)] = \
\*FractionBox[\(\[CapitalDelta]\[VeryThinSpace]y\), \(\[CapitalDelta]\
\[VeryThinSpace]x\)]\)", $CellContext`bcPBS], $CellContext`bcFO, Background -> 
                    White], {(
                    7 - $CellContext`funcC3F16[$CellContext`aValue$$])/(($\
CellContext`funcC3F16[$CellContext`aValue$$ + $CellContext`hValue$$] - \
$CellContext`funcC3F16[$CellContext`aValue$$])/$CellContext`hValue$$) + \
$CellContext`aValue$$, 7}, {-0.5, -1.25}], $CellContext`bcR, 
                   AbsoluteThickness[1], 
                   Line[{{$CellContext`aValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, \
{$CellContext`aValue$$ + $CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, \
{$CellContext`aValue$$ + $CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}}], Dashed, 
                   Line[{{$CellContext`aValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, {0, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}}], 
                   Line[{{$CellContext`aValue$$, 0}, {$CellContext`aValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}}], 
                   
                   Line[{{$CellContext`aValue$$ + $CellContext`hValue$$, 
                    0}, {$CellContext`aValue$$ + $CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}}], 
                   Line[{{$CellContext`aValue$$ + $CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}, {0, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}}], 
                   AbsoluteThickness[4], 
                   Opacity[0.5], 
                   Dashing[{}], 
                   
                   Arrow[{{$CellContext`aValue$$ + $CellContext`hValue$$, 
                    0}, {$CellContext`aValue$$ + $CellContext`hValue$$ - 1, 
                    0}}], 
                   Arrow[{{0, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}, {
                    0, $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$] - 1}}], 
                   Opacity[1], 
                   $CellContext`ClosedCircle[{$CellContext`aValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$]}, \
$CellContext`bcB], 
                   $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
$CellContext`hValue$$, 
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$]}, $CellContext`bcB]}]}, AspectRatio -> 1, ImageSize -> 
                6 72, PlotRange -> {{-1.5, 10}, {-1, 11}}, 
                BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
                Arrowheads[0.025], 
                AxesLabel -> {
                 "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
                Ticks -> {{{$CellContext`aValue$$, 
                    "\!\(TraditionalForm\`x\)"}, {$CellContext`aValue$$ + \
$CellContext`hValue$$, 
                    "\!\(TraditionalForm\`x + \
\[CapitalDelta]\[VeryThinSpace]x\)"}}, {{
                    $CellContext`funcC3F16[$CellContext`aValue$$], 
                    "\!\(TraditionalForm\`f(x)\)"}, {
                    $CellContext`funcC3F16[$CellContext`aValue$$ + \
$CellContext`hValue$$], 
                    "\!\(TraditionalForm\`f(x + \[CapitalDelta]\
\[VeryThinSpace]x)\)"}}}]), "Specifications" :> {
               Pane[
               "Change location of point \!\(\*\nStyleBox[\"Q\",\nFontSlant->\
\"Italic\"]\)", {144, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`hValue$$, 4, 
                 "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\)"}, 
                0.01, 4.5, 0.01, ControlType -> Slider, ImageSize -> Small}, 
               Grid[{{
                  Spacer[10], 
                  
                  Row[{"\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\
\)", " = ", 
                    Dynamic[$CellContext`hValue$$]}]}}], Delimiter, 
               Pane[
               "Change location of points \!\(\*\nStyleBox[\"P\",\n\
FontSlant->\"Italic\"]\) and \!\(\*\nStyleBox[\"Q\",\n\
FontSlant->\"Italic\"]\)", {144, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`aValue$$, 1.5, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 1.03, 
                3, 0.005, ControlType -> Slider, ImageSize -> Small}, 
               Delimiter, 
               Button[
               "reset location of \!\(\*\nStyleBox[\"P\",\n\
FontSlant->\"Italic\"]\)", $CellContext`resetAValue = True, BaseStyle -> 11]},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {647., {239., 247.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`resetAValue = 
                False, $CellContext`funcC3F16[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 1.5 Log[$CellContext`x - 1] + 4, 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcG = 
                RGBColor[0, 0.6, 0.4], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F16[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 1.5 Log[$CellContext`x - 1] + 4}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.16\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.16  \[LightBulb]: Slope of secant \
line",ExpressionUUID->"52b65591-aee5-4e42-adae-ce468ee51caf"],

Cell[TextData[{
 "By letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "\[Rule]", "0"}], 
   TraditionalForm]],ExpressionUUID->"2341d7a5-e343-4914-a387-878930079831"],
 ", the slope of the tangent line at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", 
     RowBox[{"f", "(", "x", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "82e0afb2-0ae6-4f00-8cd4-e60bce8683f2"],
 " is "
}], "Text",ExpressionUUID->"ad6e68c4-182f-4f19-8aa6-9f4502d2a79e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"f", "'"}], 
           RowBox[{"(", "x", ")"}]}], "=", 
          RowBox[{
           RowBox[{
            UnderscriptBox["lim", 
             RowBox[{
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "\[Rule]",
               "0"}]], 
            FractionBox[
             RowBox[{
              RowBox[{"f", "(", 
               RowBox[{"x", "+", 
                RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}], ")"}],
               "-", 
              RowBox[{"f", "(", "x", ")"}]}], 
             RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]]}], "=", 
           RowBox[{
            RowBox[{
             UnderscriptBox["lim", 
              RowBox[{
               RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], 
               "\[Rule]", "0"}]], 
             FractionBox[
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "y"}], 
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]]}], "=", 
            FractionBox[
             RowBox[{"d", "\[VeryThinSpace]", "y"}], 
             RowBox[{"d", "\[VeryThinSpace]", "x"}]]}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "."}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c409f6de-e894-40e4-a736-8f93af0875ef"]], \
"Text",ExpressionUUID->"f147f953-077c-46a2-bc89-7692630aba7a"],

Cell[TextData[{
 "The new notation for the derivative is ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"86c62356-753e-4df9-a5bc-8685d37c1080"],
 "; it reminds us that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d7766d7c-f971-474c-8e8f-80ceaae44ee9"],
 " is the limit of ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "y"}], 
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"41907a8f-ebe7-4c20-aaa9-617b96c13f9d"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "\[Rule]", "0"}], 
   TraditionalForm]],ExpressionUUID->"01138d90-a43d-4cf4-9b7f-60bbe69eb27b"],
 "."
}], "Text",ExpressionUUID->"f00b0ffa-a3a2-479a-ba3e-25f7a124a870"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"32924c64-b67c-49b9-bb9a-7ad87ab9aea0"],

Cell[TextData[{
 "The notation ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    StyleBox["dy",
     FontSlant->"Italic"], 
    StyleBox["dx",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "cbf73a98-63b2-4f93-afd9-db9217d7dca4"],
 " is read ",
 StyleBox["the derivative of y with respect to x",
  FontSlant->"Italic"],
 " or ",
 StyleBox["dy dx",
  FontSlant->"Italic"],
 ". It does not mean ",
 StyleBox["dy",
  FontSlant->"Italic"],
 " divided by ",
 StyleBox["dx",
  FontSlant->"Italic"],
 ", but it is a reminder of the limit of the quotient ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "y"}], 
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"945a9d2b-3d17-42b4-8722-291930d056d8"],
 "."
}], "Callout",ExpressionUUID->"7e814677-425e-487e-82ea-5527b1222426"]
}, Closed]],

Cell[TextData[{
 "\tIn addition to the notation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a6a3d3cd-5591-47c4-8984-fac74476be4f"],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"7dae7dde-8156-4c5d-85de-6393d9dfe85f"],
 ", other common ways of writing the derivative include "
}], "Text",ExpressionUUID->"7a99ca52-0c27-4b5c-9276-e805582a03bf"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{"d", "\[VeryThinSpace]", "f"}], 
           RowBox[{"d", "\[VeryThinSpace]", "x"}]], ","}], 
         RowBox[{
          RowBox[{
           FractionBox["d", 
            RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
           RowBox[{"(", 
            RowBox[{"f", "(", "x", ")"}], ")"}]}], ","}], 
         RowBox[{
          RowBox[{
           SubscriptBox["D", "x"], "(", 
           RowBox[{"f", "(", "x", ")"}], ")"}], ","}], "and", 
         RowBox[{
          RowBox[{"y", "'"}], 
          RowBox[{"(", "x", ")"}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "."}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2af1ac7f-f833-4ab8-880e-3dadaf12e7b6"]], \
"Text",ExpressionUUID->"2b30e5b3-642c-4838-85b1-b81d26bbb767"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"29afb1e3-c21b-432c-b992-9d47c8abbfdf"],

Cell[TextData[{
 "The derivative notation ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"fc1251f4-4257-4437-8f1f-330dd078ec46"],
 " was introduced by Gottfried Wilhelm von Leibniz (1646-1716), one of the \
coinventors of calculus. His notation is used today in its original form. The \
notation used by Sir Isaac Newton (1642-1727), the other coinventor of \
calculus, is used less frequently."
}], "Callout",ExpressionUUID->"3191e4f9-9236-49b5-a04c-496f85c772b7"]
}, Closed]],

Cell[TextData[{
 "The following notations represent the derivative of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "885cef5f-abec-4587-99ee-cd14122486c0"],
 " evaluated at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "e3675e9e-8a42-467f-a86a-4432a83793a7"],
 "."
}], "Text",ExpressionUUID->"832c11df-d4c4-4c01-95d5-80993e68ad46"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", "a", ")"}]}], ","}], 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], 
          RowBox[{"(", "a", ")"}]}], ","}], 
        RowBox[{
         SubscriptBox[
          RowBox[{
           FractionBox[
            RowBox[{"d", "\[VeryThinSpace]", "f"}], 
            RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
           "\[RightBracketingBar]"}], 
          RowBox[{"x", "=", "a"}]], ","}], 
        RowBox[{"and", " "}], 
        SubscriptBox[
         RowBox[{
          FractionBox[
           RowBox[{"d", "\[VeryThinSpace]", "y"}], 
           RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
         RowBox[{"x", "=", "a"}]]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"117c2013-17fd-4d9e-8b65-6bdc4f404d30"]], \
"Text",ExpressionUUID->"b44a4d30-26fc-4786-a316-8cb275e81900"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "2"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"be86518a-73b6-4e32-a7b3-a2ed4f53f8f8"],
 "  What are some other ways to write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "3", ")"}]}], TraditionalForm]],ExpressionUUID->
  "73584f35-f6e0-4d42-af6b-348aa7ad2c89"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "cabbb23f-259b-406d-ba4d-86e540a0730b"],
 "? ",
 Cell[BoxData[
  FormBox[
   GraphicsBox[PolygonBox[{{0, 0}, {0.9, -0.3}, {0.7, 0}, {0.9, 0.3}, {0, 0}}],
    ImageSize->15,
    PlotRange->{-0.5, 0.3}], TraditionalForm]],ExpressionUUID->
  "892bb87c-5688-4c24-beef-7b5fb43b6259"]
}], "QuickCheck",
 CellTags->
  "Quick Check 2",ExpressionUUID->"5612eb3b-04e8-4d83-b2fa-e22a971b9788"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"9d46ff84-4aba-4e5d-b89a-ec2a39a13aae"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "f"}], 
      RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
    RowBox[{"x", "=", "3"}]], TraditionalForm]],ExpressionUUID->
  "460eeee6-fac6-4381-9f4e-c4db42ac5fd2"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "y"}], 
      RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
    RowBox[{"x", "=", "3"}]], TraditionalForm]],ExpressionUUID->
  "de4cbed7-0da8-4ebe-9ca1-882c7d22fc30"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], 
    RowBox[{"(", "3", ")"}]}], TraditionalForm]],ExpressionUUID->
  "8cec3617-2dd3-452b-ac29-103562d5f7ff"]
}], "QuickCheckAnswer",ExpressionUUID->"b5e98309-6ff2-4d8d-bac8-6a4c6dfe9a58"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 2\t", "ExampleFont"],
 "A derivative calculation"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 2 A derivative \
calculation",ExpressionUUID->"0b75de7f-0c65-4e74-9110-d594782228a7"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     SqrtBox["x"]}]}], TraditionalForm]],ExpressionUUID->
  "1950f0d8-5860-4727-8b6c-eda2ab265576"],
 "."
}], "Text",ExpressionUUID->"edc29701-0b98-4eab-897e-73272adfb44b"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 " \tCompute ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"385c7b3f-7483-48af-8ed6-f6a58e3ab7e7"],
 "."
}], "Text",ExpressionUUID->"1fb23dc8-f60a-4bf2-a07e-57a57d2f563c"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind an equation of the line tangent to the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3d8d8e25-dfb6-43ca-b1a1-28146357fc05"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"4", ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9a59b309-f15f-41a3-a007-5d97cc87e177"],
 "."
}], "Text",ExpressionUUID->"c5229d66-83e7-41c9-aaf6-44c6b53d5d08"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"8cf90c6c-e7d8-4ecb-83c5-ea9abdd8cc90"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t"
}], "Text",ExpressionUUID->"441fd493-8c51-4dc7-9561-d3ebd274f78c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{"d", "\[VeryThinSpace]", "y"}], 
          RowBox[{"d", "\[VeryThinSpace]", "x"}]], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "(", 
             RowBox[{"x", "+", "h"}], ")"}], "-", 
            RowBox[{"f", "(", "x", ")"}]}], "h"]}]}], 
        StyleBox[
         RowBox[{
          RowBox[{"Definition", " ", "of", " ", 
           FractionBox[
            RowBox[{"d", "\[VeryThinSpace]", "y"}], 
            RowBox[{"d", "\[VeryThinSpace]", "x"}]]}], "=", 
          RowBox[{
           RowBox[{"f", "'"}], 
           RowBox[{"(", "x", ")"}]}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            SqrtBox[
             RowBox[{"x", "+", "h"}]], "-", 
            SqrtBox["x"]}], "h"]}]}], 
        StyleBox[
         RowBox[{
          RowBox[{"Substitute", " ", 
           RowBox[{"f", "(", "x", ")"}]}], "=", 
          RowBox[{
           SqrtBox["x"], "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"x", "+", "h"}]], "-", 
             SqrtBox["x"]}], "h"], 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{"x", "+", "h"}]], "+", 
              SqrtBox["x"]}], 
             RowBox[{
              SqrtBox[
               RowBox[{"x", "+", "h"}]], "+", 
              SqrtBox["x"]}]], ")"}]}]}]}], 
        StyleBox[
         PaneBox["\<\"Multiply the numerator and denominator by \
\\!\\(\\*FormBox[\\n RowBox[{SqrtBox[\\n   RowBox[{\\\"x\\\", \\\"+\\\", \
\\\"h\\\"}]], \\\"+\\\", SqrtBox[\\\"x\\\"]}],\\n TraditionalForm]\\).\"\>",
          
          BaseStyle->{
           LineIndent -> 0, LineSpacing -> {1, 0}, 
            LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
            Automatic, Hyphenation -> True, TextAlignment -> Left},
          ImageSize->{200, Automatic}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{
           UnderscriptBox["lim", 
            RowBox[{"h", "\[Rule]", "0"}]], 
           FractionBox["1", 
            RowBox[{
             SqrtBox[
              RowBox[{"x", "+", "h"}]], "+", 
             SqrtBox["x"]}]]}], "=", 
          FractionBox["1", 
           RowBox[{"2", 
            SqrtBox["x"]}]]}]}], 
        StyleBox[
         RowBox[{"Simplify", " ", "and", " ", "evaluate", " ", "the", " ", 
          RowBox[{"limit", "."}]}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"=", Left}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e26e1758-e7fa-4609-b4b2-8c494ed24d7a"]], \
"Text",ExpressionUUID->"dd8b5b4b-3497-4be0-a71e-69dd527b8a0a"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"27435593-16ca-4687-8bf8-2e05ecbb7d9e"],

Cell[TextData[{
 "Example 2 gives the first of many derivative formulas to be presented in \
the text: \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{GridBox[{
         {
          RowBox[{
           RowBox[{
            FractionBox["d", 
             RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
            RowBox[{"(", 
             SqrtBox["x"], ")"}]}], "=", 
           FractionBox["1", 
            RowBox[{"2", 
             SqrtBox["x"]}]]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"="}}}], "."}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "8c26e19a-8a33-401f-b213-655fd27a9698"],
 "\nRemember this result. It will be used often."
}], "Callout",ExpressionUUID->"feb9a93b-075a-421e-85cd-3b1cd94b6707"]
}, Closed]],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tThe slope of the tangent line at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"4", ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "7f5eb3d4-8edf-4f4e-8f24-2845423d88c0"],
 " is "
}], "Text",ExpressionUUID->"c7308476-e135-4ffc-8192-7feceadb726e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox[
          RowBox[{
           FractionBox[
            RowBox[{"d", "\[VeryThinSpace]", "y"}], 
            RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
           "\[RightBracketingBar]"}], 
          RowBox[{"x", "=", "4"}]], "=", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", 
            SqrtBox["4"]}]], "=", 
          RowBox[{
           FractionBox["1", "4"], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"16fcde4d-d876-4606-987d-67c5026b778a"]], \
"Text",ExpressionUUID->"0b963f64-1983-4756-a388-7781d13d79b7"],

Cell[TextData[{
 "Therefore, an equation of the tangent line (",
 StyleBox["Figure 3.17", "FigureFontText"],
 ") is "
}], "Text",ExpressionUUID->"44f5213a-34e6-4c29-8e84-984c2776c3cd"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"y", "-", "2"}], "=", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], 
           RowBox[{"(", 
            RowBox[{"x", "-", "4"}], ")"}], "  ", "or", "  ", "y"}], "=", 
          RowBox[{
           RowBox[{
            FractionBox["1", "4"], "x"}], "+", "1."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"71345843-7e37-4c21-a83e-ee65bada8173"]], \
"Text",ExpressionUUID->"de286b91-629a-403c-b859-fa2a5dc620b7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
bdGBrw2971J1cEnzVp/0+pNWKo3E9aWicO0LZU3jKU9sOfjZ11HmZLBx2V10
qWJbf+zcKHouAwAAyFpgvICZ1HKVCbrKnr+RYdtoxrt0yZJdO3e2tLSQWaVz
RFHqbz286rs0w+yBBt454nj1O3m8sIUzNpwesmwWlUjDzn1rY5S54Cfzd/+Z
ZkfDaaXu5l/Np5fRDJMYJ2WOAQAAgGQD481l9FiuZmGx2OFc5ZM8DK2mpqan
pyfVi6sLydnweN69su4+19xr5I1j/vH23/xIrIRkGa9b9tX8xTFqu4lrE1qi
SKOVHVgapjnnDyHpNdQJHQAAAMgIYLy5hk7LVY5Ei1ZMLEY498EFC8rKysQw
tHSO6CrxnXud59+2/thVg+/1nq5QrookGC+pqWPXo2KdT3liS+Wh/c3NJ2qr
a0mDNa9K1n/cGxnmlX+dgPTy5+z+wpspvxcAAACgExhvLqDfcv2KkWjKXNBo
lcRUxst5C21nzqZ6ieNBcjYEZXX6JqOyKvW3Pvn9/CQbr7+nSeQMv/n5Nf42
EloyYfr3zSttnJuh/I1o0U56teZfVlz3e2u/zXN+/EZap50AAAAARoHxZitG
LDdYcuHX37t/2cyCAt31xMS0pqioqqqqu7t7wrdnFkNtL949k5e6/MItg28O
uqJystp4aQ1zgJd09w3XmKrYAv07EMuVcx6UNTToKoaWLup8jXRwHvLsu1+5
7LNw5gEAAIAkA+PNJgxZruiJpmwVEXkrPJrxzps7t6ysrL6+Po3rLegnrKxT
Ks8bfbP3jU1snqfaO34/NVkj10Kj5NZ/HDPdWOqmWVL+jrbKi9FeS5IscjNs
2z9CyTIAAABZA4w30zFquSy6yp5oqs6/mtIbmaDr8WRJtictRd+REu4KN/vu
V4wW6eJcCFkR6674Rzo2Tp/Ja9Vq4/Wde53m2bayOobv8g800LhVmYMdw3gD
7+kW0j6JSwMAAACZA4w3E4nDciNFVzMRN5r0Ll2yZEdFxfn2jiwcyD/URpoa
tMGjl4xpvNR90DaDR7rJdjjSIVIjrDZeTmnY/Omtyf08sIDil41hvLzs5P/8
o9MiJLOkMAAAAGAdMN5MIT7LVYluZDg3sgKD8vmfrljx2m//4OjqYheSAqR6
TZgJLY5z39qg2OcvfsM1ZmgBRSbt8RsBLQwZr9UxXrru6KrZvOSlBrdPin0N
Ii+ObuMN0msX6dy2PRk5CBEAAABQAeNNZ+K2XE3R1TkMTYxEu3mljW0qyyx3
AgpHnbbowFUjCzvWtkfc/Q++KynGy9cdY3LwdVxXALbXrvzRJzdev7tx2V0I
8wIAAMgmYLzpRiKWqxqMpiwvNmnhBXqeW0W4XC6/36/XpjKcgcatnMErq6Ch
eOZQGw8cs23/KCy2yYrx6kfenEIVGHiatBIFx73FVvHQu19mYSoLAACAHAPG
mw4kaLnK8mIx2qJpGi/5XmlpKYmu2+3O5liuNsESDbxOSAX1qp00zC0e1JV7
0894ZXrtj+TP5rnioXmxXy4HkEPhazmxYeVhDGADAACQ6cB4U0XilssTi+78
+XNE4YVobdFUbWdJdLOltli89Nofz7s3WJktUNVW5/u4+oFGvDQtjZcrURTo
rr0mb5k9TZzKK6+ZQHpzEuYTAAAAsA4YbzIxy3L9gRbAVUt/8fDChaqgrnjU
lF4W3camxpwW3RDKSKaBhNVQyFQjCyINjTdQTSKYlBul4Vq0d4lNSLM3MQAA
AJBBwHitxkTL9dse8y164djzzxY9sEjltLFHorHoNhx/5/bgYO6lLmhD6+Gr
g0UcEqdp2qID+rqMBRMhpj70O3q9emWmn/F6T1eIAK9OcQ0s1KB97bfE1jWl
8jw2GwAAABkNjNcKzLVc/z++4Ks49FlFXcnPntRvuUJ0EdGNgix14b4M6499
PdkbxJAuesvuL7SipWlmvJLPJQK8tpK3J11ABROMV8/KAQAAANIZGK9ZmG65
/v911G8/09x8YuuGdfPnzzEkusXFxfSD5uRgNP0Mis7CsvGurJ5c6i5Vc7xU
bq+mSToZL/30It+YZuZU/6iRjSFsvDovBwAAAIB0BsabCJZY7v9p93/jaTtz
dvvLLz/ww/s1e0ZEm9YUFXHVhVSvmIxgotRNarwjjt9PzeOAZ9TaBelkvP5e
+5Pfz9ceYTc5ckleMQrSaKViAAAAIN2A8RrFOsulD+/u7t63d+/SJUv0VNAV
06pVq6qqqriOLrRENwaMd8w/3v6bH7HHBturaZJGxusWEextH3TGUVBX5G/w
sqAPBQAAgIwGxqsHSy2XuD04WF9fv6aoKFphMU3RJTEmPXY6naldORmLAeP1
nq4Ivqzuil8apt8rcvJ4vFJ/q+jny24s+Vw33cP0pyHveDIvRrh1Mo9Wi0N3
aVb7jpSIbY+TImC8AAAAMhcYbzSstlx/oK+Z3W4vKyubN3euUFyl02oa74ML
FuyoqHB0dcFAEsOA8X51sEhUflOWgNMsB6eagtL4/9q749i2znKP4wXUXV0k
dq8QzaLEze6cFjSlpdNGHYTGussCRYo6dUSVqkGGBJoyNq2FsFYi5b+WDUY6
bWkmSDeyS1kol4Sw6q71xh+TUCbWtaGwbgnzaP7IpGSlmG5pcZqSxOc+9pue
ntqO48THfs/75vvRUZQlXvMen2P758fved7CO4MVzZ2+e3ffO0teLu2axJux
0AYAAKYh8XqVIeUq3tkL+WcsuKlDUrFk44GBgenpaRkncbdoi0i8bvwrZBm7
nFvZJgZcOPaE+ouVP39r6X8ueUnN4qjiyjUAgBVIvGVLuSKRmOzt621qanIz
UiGtdOX28n/J/+swTddPi+jV8G57nbqEcMmJt7picxkmBky//hP154ruoJt5
58x7sR4AACZYnom3nClXOXlicE9bW204XEg6qvJcj0bjhdJ596nGAsuYiVNH
Dv/qf+V9R56tv//Ib/c/cDXiVm7s+EWf+rn6WtgKF0uXjB2e25fHX5txipw2
fG0B/IF+JjUAAIy2fBJv+VOuk74krbu7W7JrgZVANU133969w0NDZbtnlq3z
vTvcBlyrr//e65fnjYiFpMdU/XZq+GqvhvTE3eQVpa7uSty9/Yb0Uhq7X7q4
4IDHo/fe9/Dpc5Pzz/KNP93wH1cT78E3SzBkAADKx+7EqyXlKgMDAxmXpOVP
vGurQ3L7aDQ6m1aGOweqKDp39VnF5p+OzRT7L+rqTnal9a7E3YVXjpseO1C3
auVnviaJN+eZlnrUTA26TSdke+iPHzCdBgBgNPsSr8aUK+LxeGdnZ30kooqH
hcz23NLY2PGLPskhS76sHkuQOk+SI0+tWOUeiPtfnSj2vUbBiTdxKrWU3q3r
19+0tbnjxdPFRGO3JZrE3YUnMyRH+r+5Rm5c//xwvvNtPKoqxuW85g4AgNKx
I/HqTbnKyROD2UXdPInXnb0we0Xp7h/Mx53Km1pM7eCbxVYyC0y8o33uZYnq
m8rH/m+JzRAuHv/+RyvU+OUf+e3+BzoOPLG/vT17k5/Lb++quFEVtFO9guff
2cmX29z5HkziBQBYwNzEG4SU66Rn6h7s6pqvqJudeOVrc3NzNBqdmpoq0T2D
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
xmscarzGsTLxWlbjVd5/+/iaNTdlh17ZasNhyVry6GOWr17yvJcxjzcajeoe
lD9sTbwONV7T2Jp4HWq8pqHGaxwrE69jXY1XouyMM7u/vd39uDyjlqj+U85S
eRNt0wu3QbwlGnez47I1x97ES43XOLYmXmq8xqHGaxwrE6+VNV4xNTXlnocZ
idcNvfLN2upQS0tLNBq17Gkz4ORdScYRkc2atnK2Jl6HGq9pbE28DjVe01Dj
NY6VidexrsbrUsEjZ+LNyL3qezlvJf3KO2t5bEpg1j18m2W3JqsNh60592xN
vNR4jWNr4qXGaxxqvMaxMvHaWuN1rlwelZFs59u8wVi+rq0OyQNTnnyi0WgQ
3rj19vXKw0oOkDVfM45ITSh05x132LG5eycxXvtg/Nw2bZLDpI6X9vPH368S
n6qutMiT3dR/V/t0vOw+FdWuaT95fD8V1SuRVadi+lnRfW29aWtzw62fteYr
p6JZmzoV1Uf82k8ef7823rxBXcJWyOYtCGdUhm9dv17Cs7zTOf6H1xKJyTLH
XYnu8n7fTYbuwAz9vsDDYe5WyDssozd37wJyRhX5vXtO2n3UrNysPBUtPg+r
r0wmtOyrladi9fyfj1uw2XoqSp7PWOkg/52QsXnvHPWN/GvyDmh/e3s517aQ
sO2Oxzs24763+BG03LaAnFF+fc+Zae4WkFPIr+/tPg/t27uMg5j9ExO/z/iJ
lZt9u1adLsgvatfmewVUQXdPW1tvX+/o6GiZp3/E4/HhoSHLNjXnRDZ5+6B9
MD5uhw4dUvu1pbFR+2D83WrDYfWgGBgY0D4YHze3O/S+vXu1D8bHraenRx0v
ee7SPhh/N3ciipWnouyXZaeivG6q43Xnpk3aB+Pv5n76H41GY7GY9vH4tbW2
tqr9ktijfTA+bnKY1KlYH4nYdLxkc697XVSYd/8XOZM1Tmawm7xlkAeUurcl
Iuoejp9+/8orar8su3LNsbRXg5O+XEg99rlyzRRuzLDyyrVqS3s1VFl35Zpz
ba8Gm3ZNXblWZdHiUI66cu2Nk24dwJr9Eu+Nv1cbDrsJtpCsm33Bmk13SNC0
fuc76m63L/Gq882yxGtrrwbZL3o1GEd1J7M18VZZ2quh2rruZPRqMM6wpb0a
3A/N829qFTbVlOxiulWsQ9AtCxKvcWyt8dKP1yxudzJbEy81XoPU04/XHLZ2
J3Of6vNs8tDr6elxFz5Ipuke+DJC4jWLrTVeh368BqLGaxZqvMaxMvE6NtZ4
1YJr87VoqA2H1UxsO3bWXCRe41hZ42XNNeNQ4zUONV7jWJl4razxygHKOX1X
Hmu9fb1cgxYQJF6zUOM1jq2J16HGaxpqvMaxMvE61tV45X2W6qHkJt51dXXy
NBKLxRwm6AYJidc41HjNYmvipcZrHGq8xrEy8dpX4/WuLCyRo7ev9+LkrAX7
ZR8Sr1mo8RrH1sTrUOM1DTVe41iZeB27aryqt7C8/ZeD5RZ1Td8pW5F4jUON
1yy2Jl5qvMahxmscKxOvZTVeOUYSepmpawQSr1mo8RrH1sTrUOM1DTVe41iZ
eB27arxUdA1C4jUONV6z2Jp4qfEahxqvcaxMvJbVeGEQEq9ZqPEax9bE61Dj
NQ01XuNYmXgdu2q8MAiJ1zjUeM1ia+KlxmscarzGsTLxUuOFLiRes1DjNY6t
idehxmsaarzGsTLxOtR4oQmJ1zjUeM1ia+KlxmscarzGsTLxUuOFLrYmXnlu
l6y7/Yv3PLjvgdnZWd3D8Y08OTQ3N8t+yXb+UsKmXTvY1aUOWfSlqE3PgfLc
ro6X5CjdY/FZS0uLZCc5aja9+RLynksdsv7+I7rH4qdYLOaeijY9dcjThZyK
atfeG39P93D8JK/L7qlo0yEbGRlRz/Y7du7UPRYsI7YmXqGeH2zKTorskeya
fR1R1H7Z9KzueHbKsv1yPD15LDsPnfRTh3qI6R6Iz9xT0eJd0z0Qn9m6X8kr
dA8Ey4vFiRcAAABwSLwAAADQKHnp/beP9/cfiUaj8nX4jZPvlOADRBIvAAAA
dIgPdT90W+VqCaI1oZD3a8uTh/zNvSReAAAAlNvU8IG6VSrfhlZt+9kbZ0ZH
RxOnjjzSmArA1ZUbV1//vZcvOn5NZSfxAgAAoLziv7n731PJtqrqug1Pvn45
6V7rnZwei371IyqdSuiVX/ny90i8AAAAKBsJt7H9d6v8Kdtjf5n0/jZV1B2P
3la5uiYUkjy8YvdLF/34oyReAACAEkpeem/8vdHR0fh07nLlv/52dvDM2PlL
iRnHtmZ0uaUDrcqfK7b/MjvQSug98d1Pqzm9sj30xw+Kn9BL4gUAAPDd5bND
fR0HdmzbqqaqVldVrbzl0bemr70aa2r4mW993b1i6+6+d/SNt3zefapR7a/c
J62nPsiZ85Oxw24ROGcqXiwSLwAAgJ+mhn+4ssINbGoVbLVm9Lbj593Emzz3
6vc/WuHeJvUJ/hee/YfekZdBckTuHLW/1RWbf/X3HHE3NbFhalDdOe7Niizz
kngBAAD8NDXc13Hg2InB9+OXkrHD3/j4DW6sXfH4a3PNB65NxW4x0+7Em0qt
bz7r7u/KWx4dd+brxjChLm1T99stv/5rkVM+SLwAAAC+kyA3k14s+t2nGt2M
d92GJ9MTF+Y6FVy3+zeSiseef3bHtq333vfwr/4+a/dUXtm7E9/9tJtjZffn
m9ss3KvbUu8Uin4vYHfiff/t4x0vnrZyXXIAAIJsKS/BZVl7SwNPVbO6YvPR
Seds1/aaUEhNT72YzsZuby7dYy21uNt5LFXT7vjzfLeTO2Ty5TY1+UFuGfr4
/S8XN5fX1sSbPPeqmgoub6bGdQ8GAIDlY0kvweVbe0uDi8e/ff3ViQ2yR3dV
3LjyM187fW7Sl75bJpka/v5HK9yJzSsOvpnvxqc7rybeVdtIvBncB9rc24fl
MAkcAIAAWOJLcHnX3tLh6pRUta2tDu184fRyi7upty0Xj7uzmhduO3a6072l
nBg5r3ErnE2JN+OBRuIFAKA8ingJLvfaW1p4p/Kq+avLNJxMDXvL3YUn3oVv
vBBrEu9Q90OyFx/+0sMdB554cEOYxAsAQHks+SVYy9pbWswcf1x9Oq+21lMf
6B6RBqm8Otp3+w1VJN4lm3FmE6eO9L31d/W99y4i8QIAUDpFvQTrWHtLi+S5
V+/5RKV78dqxc5ft7skwH2/yJ/H6gMQLAIAWi3kJ1rL2Vvmlc1q89/aPuWFv
2/HzJk9LXrprkj+Jt3gkXgAAtCj8JVjT2lt6jPa51Wy1DoXuAWmQOnBTg0ue
x1vkVBASLwAA8E1hL8Ea197SIDmimlF475ll2jrV06thUYmX7mS5kXgBANCi
sJdgjWtvlZ/36ry5/Fb0egqm8qytrPrxFp54j04W1aGOxAsAAHxT6EuwtrW3
yi1dypZh/+yNM723f8zbmGJZTuW9pjVx/hUo1HGv8rSnI/FmIvECAKBFgS/B
+tbeKqsrJU01B9Vb1r7l13/1lDcnzgy/bdBuFWN43+cKvBRRbqka06Vu+UD/
jFPUFG4SLwAA8E0BL8F6194qn+QlFXElz6vi5OTLbTnD3uRP71ep2LwpyouU
Wl/kSvMNibIrb3l0/iWkU9Vg951O8d0tSLwAAMA3Bdd4da29VUL/TMTjcTfH
xvbfXRMKSbJVF6mpsKc6NshehD5+/1G14EZ62kP+mczWSB245MhTK+au48vX
fONKjw41J+ToZI6bLAqJFwAA+KbAGq++tbdKJd1/LPUpfMXmnS+cVuvQZcw6
Tk6PuWFPbln//PCfXz16V8WNoVXbjp27rG/o5Xa2a7uariDbV343nrN4O3P8
cXdKQ+SRw8W/HSDxAgAA3xTYq0Hf2lsl8u5TjWp4V4daudG7brKM2e1Qcc3N
iu40axa3K69KvCu+8PQ7WbeRO0pd2Ji6TeXGn47NFP93SbwAAMA3Bfbj1bf2
Vomc793hDlJtkmMzqpep0JuO+t7Ee8uv/6przLqo+8G9BzLKvPLb6dd/4r1/
fGlqQeIFAAC+KXBWg761t0plarj/m2vcy+ue+tM/pqens28148xebS9csfln
b5yx/mq1bMm0s13bq64spXdNr7bxqHtV44rdL/nVwoLECwAAfFPgS7C+tbdK
Qc1YSGXXfyYuTEzMpJZKyJFj5Wbyc/dmF9MBOID16jJQd8VQ90M1oZCa1Vz7
7af7+488862vq5/IVv/88MVJ394OkHgBAIBvCu7VoGvtrZIqML4uz5Sb0+Wz
Q7/d/8BtlavXVs9F3+rKjZFHDp8+N+lj3HVIvAAAwEeFvgRrW3sLwaEqvaru
/a+/nT1/KdXezSlN6ZvECwAAfFPwS7CutbcQTCr9OiUrgJN4AQCAbwrs1aBv
7S0sTyReAADgm4ITr661t7A8kXgBAIBvFvMSrGXtLSxP9iferzxD4gUAoEwK
fgnWtfYWlicrE693IQ95BI3rHg8AAMvEol6Ctay9heXJwsQ7NXygbtWaNTe5
j5HsZf4AAID/FvkSrGXtLSxP9iTe8eiPf/CjZ771dfdR5vbuqwmFbtraHHnk
8HPPPke9FwAAnxXxElz+tbewPNmReOXxcvnsUF/HgY4DT/T09HR3d8vuuF/l
USZb6rcvnpaHFU38AADwi18vwWVbewvLkzWJ130Q5Xw0zS1jzbp+AAD4ypeX
4HKuvYXlyY7ECwAA7FDqtbewPJF4AQAAYDcSLwAAAOxG4gUAAIDdSLwAAACw
G4kXAAAAdiPxAgAAwG4kXgAAANiNxAsAAAC7kXgBAABgNxIvAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGT/
D7WQcsE=
      "], {{0, 510}, {934, 0}}, {0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {934, 510}, PlotRange -> {{0, 934}, {0, 510}}, ImageSize -> 
    252.],StyleBox["\"Figure 3.17\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.17: Example \
2",ExpressionUUID->"01b1abc7-88ed-4cdc-83cc-40d45d6b076a"],

Cell[TextData[{
 "Related Exercises ",
 "37\[Dash]38",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"45ef687d-e354-4c4b-ac7d-a74e82b8700b"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "3"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"42c3d050-3ba6-4aa0-aaa8-e4fa60ea4348"],
 "  In Example 2, do the slopes of the tangent lines increase or decrease as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "f0005204-da14-48d1-bb5b-2e021c1afb1f"],
 " increases? Explain. ",
 Cell[BoxData[
  FormBox[
   GraphicsBox[PolygonBox[{{0, 0}, {0.9, -0.3}, {0.7, 0}, {0.9, 0.3}, {0, 0}}],
    ImageSize->15,
    PlotRange->{-0.5, 0.3}], TraditionalForm]],ExpressionUUID->
  "8307f22e-a6ca-420e-9713-56b67e65b8f6"]
}], "QuickCheck",
 CellTags->
  "Quick Check 3",ExpressionUUID->"dd824096-9637-4689-9c96-57d7abd189f0"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"376a8ec9-35ab-48d6-a7ad-31a3c960a1ef"],

Cell[TextData[{
 "The slopes of tangent lines decrease as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "aa17e509-578a-47be-97ee-dac19cf6e75f"],
 " increases because the values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    FractionBox["1", 
     RowBox[{"2", 
      SqrtBox["x"]}]]}], TraditionalForm]],ExpressionUUID->
  "0ad21f82-fd85-4f02-bac6-55c5af01c12f"],
 " decrease as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "1e8eecc6-f2aa-431a-b03b-93ec091a1464"],
 " increases."
}], "QuickCheckAnswer",ExpressionUUID->"fc3e52b8-b743-45ea-acb6-96a196f16429"]
}, Closed]],

Cell[TextData[{
 "\tIf a function is given in terms of variables other than ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "18d76265-c491-4069-a734-95ee2e6b1d0c"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "d7da03c7-d3f0-4e65-ad77-f5d963a90c47"],
 ", we make an adjustment to the derivative definition. For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"g", "(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "3cd45cd3-d977-437f-9a8c-81c842ba6c4e"],
 ", we replace ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "62c01569-83a6-483a-9069-cdff77f20dde"],
 " by ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "a3794321-9752-4b63-916a-7513c65a7fda"],
 " and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6f4f55c4-0ee6-491b-852d-063a0e798b7e"],
 " by ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "1b7f171d-1121-47d9-a195-b6d44d23c1d6"],
 " to obtain the ",
 StyleBox["derivative of g with respect to t ",
  FontSlant->"Italic"],
 ":  "
}], "Text",ExpressionUUID->"d6ce3c12-7785-47f8-bf4d-9dfe291922ff"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"g", "'"}], 
          RowBox[{"(", "t", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"g", "(", 
              RowBox[{"t", "+", "h"}], ")"}], "-", 
             RowBox[{"g", "(", "t", ")"}]}], "h"], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0fa72e2f-b1d6-48af-9e30-1fc60d3a0fd5"]], \
"Text",ExpressionUUID->"6b46bf4f-257e-4564-a59c-0385b4ee5855"],

Cell[TextData[{
 "Other notation for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2d7683cc-bc26-43ba-9322-50b0fa6e785b"],
 " includes ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "g"}], 
    RowBox[{"d", "\[VeryThinSpace]", "t"}]], TraditionalForm]],
  ExpressionUUID->"27249c10-3849-44b0-8ddc-2fefeddc3af6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[VeryThinSpace]"}], 
     RowBox[{"d", "\[VeryThinSpace]", "t"}]], 
    RowBox[{"(", 
     RowBox[{"g", "(", "t", ")"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "bf4d30f9-ecab-44dd-9ae6-78eaa0a89e36"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", "t"], "(", 
    RowBox[{"g", "(", "t", ")"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f83fbfe4-83dd-4132-a751-2e60a0cbfb6f"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "'"}], 
    RowBox[{"(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d817fe40-54b1-4dd4-ad73-aa8dee2ad5ea"],
 "."
}], "Text",ExpressionUUID->"596db0bb-a7ca-4d9a-9dc6-1f36c462dec3"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "4"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"53d2c43d-210c-4953-802c-df5502f9e5f8"],
 "  Express the derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{"q", "(", "r", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a2c3512c-c40e-4e63-a46a-aa1e4134f778"],
 " in three ways. ",
 Cell[BoxData[
  FormBox[
   GraphicsBox[PolygonBox[{{0, 0}, {0.9, -0.3}, {0.7, 0}, {0.9, 0.3}, {0, 0}}],
    ImageSize->15,
    PlotRange->{-0.5, 0.3}], TraditionalForm]],ExpressionUUID->
  "405ea311-82b6-4cd0-8b51-fe3026482dd6"]
}], "QuickCheck",
 CellTags->
  "Quick Check 4",ExpressionUUID->"86dcafd8-04ef-4020-8701-b35c99dfa80c"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"dc3a1a3c-f6c7-4c7c-b6fc-2c80fd9f8b18"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "q"}], 
    RowBox[{"d", "\[VeryThinSpace]", "r"}]], TraditionalForm]],
  ExpressionUUID->"2826f3e9-7456-4ff4-b2ce-a38e5d6b14fc"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "p"}], 
    RowBox[{"d", "\[VeryThinSpace]", "r"}]], TraditionalForm]],
  ExpressionUUID->"d4533da4-a5ae-4c96-bbff-c3e1afa22e85"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", "r"], "(", 
    RowBox[{"q", "(", "r", ")"}], ")"}], TraditionalForm]],ExpressionUUID->
  "76ffa252-0a5a-41a5-9930-9ba0c3d767d5"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "'"}], 
    RowBox[{"(", "r", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0fa2ed4e-8a83-4848-8dfb-b399f33c3ab6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "'"}], 
    RowBox[{"(", "r", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ae78cc5f-ae3a-47aa-9ad7-a04a3d191ba4"]
}], "QuickCheckAnswer",ExpressionUUID->"cc3a2f8b-75a8-44d5-a3ec-8f6176e88b3f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 3\t", "ExampleFont"],
 "Another derivative calculation"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 3 Another derivative \
calculation",ExpressionUUID->"d5ac60c5-db29-4bbe-a201-ec3b40aad3d4"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "t", ")"}], "=", 
    FractionBox["1", 
     SuperscriptBox["t", "2"]]}], TraditionalForm]],ExpressionUUID->
  "b81df603-7e15-442e-8ca1-e87a910e6306"],
 " and compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ac5893d1-862c-4dd6-832d-1f465d9b63e0"],
 "."
}], "Text",ExpressionUUID->"df6259c1-f359-49ff-a9bd-d11ae66918da"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"ff007886-db3c-4acb-9ef7-41d88005e92b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"g", "'"}], 
          RowBox[{"(", "t", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          FractionBox[
           RowBox[{
            RowBox[{"g", "(", 
             RowBox[{"t", "+", "h"}], ")"}], "-", 
            RowBox[{"g", "(", "t", ")"}]}], "h"]}]}], 
        StyleBox[
         RowBox[{"Definition", " ", "of", " ", 
          RowBox[{"g", "'"}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox["1", "h"], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"t", "+", "h"}], ")"}], "2"]], "-", 
             FractionBox["1", 
              SuperscriptBox["t", "2"]]}], ")"}]}]}]}], 
        StyleBox[
         RowBox[{
          RowBox[{"Substitute", " ", 
           RowBox[{"g", "(", "t", ")"}]}], "=", 
          RowBox[{
           FormBox[
            FractionBox["1", 
             SuperscriptBox["t", "2"]],
            TraditionalForm], "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox["1", "h"], 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SuperscriptBox["t", "2"], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"t", "+", "h"}], ")"}], "2"]}], 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["t", "2"], "(", 
               RowBox[{"t", "+", "h"}], ")"}], "2"]], ")"}]}]}]}], 
        StyleBox[
         RowBox[{"Common", " ", "denominator"}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{
           FractionBox["1", "h"], 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "h", " ", "t"}], "-", 
              SuperscriptBox["h", "2"]}], 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["t", "2"], "(", 
               RowBox[{"t", "+", "h"}], ")"}], "2"]], ")"}]}]}]}], 
        StyleBox[
         RowBox[{"Expand", " ", "the", " ", "numerator", " ", "and", " ", 
          RowBox[{"simplify", "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"h", "\[Rule]", "0"}]], 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "t"}], "-", "h"}], 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["t", "2"], "(", 
              RowBox[{"t", "+", "h"}], ")"}], "2"]], ")"}]}]}], 
        StyleBox[
         RowBox[{
          RowBox[{"h", "\[NotEqual]", "0"}], ";", " ", 
          RowBox[{"cancel", " ", 
           RowBox[{"h", "."}]}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{"-", 
          FractionBox["2", 
           SuperscriptBox["t", "3"]]}]}], 
        StyleBox[
         RowBox[{"Evaluate", " ", "the", " ", 
          RowBox[{"limit", "."}]}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"=", Left}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"72442c53-81cd-4e61-955e-ba7f7d5418ef"]], \
"Text",ExpressionUUID->"1f1c6a1b-1d5f-4981-be6b-072efd058211"],

Cell[TextData[{
 "Related Exercises ",
 "25\[Dash]27",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"e1f13bdb-4d64-4f98-a986-749cef8465c9"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphs of Derivatives  \[RightGuillemet]", "Subsection",
 CellTags->
  "Graphs of \
Derivatives",ExpressionUUID->"43b056ac-fab0-4a42-8b17-b1805ee2fc21"],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "079c7967-665e-45a0-8cad-2755199248de"],
 " is called the derivative of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d168c104-8050-4d77-be4f-37688d49b915"],
 " because it is ",
 StyleBox["derived",
  FontSlant->"Italic"],
 " from ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ef53fb4a-5413-40b6-b374-125f0f0ef57c"],
 ". The following examples illustrate how to ",
 StyleBox["derive",
  FontSlant->"Italic"],
 " the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "ed682436-c0d6-4892-85ba-e98180e0fdc8"],
 " from the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f6dfa47e-2738-4db7-a6b7-17e8fe151853"],
 "."
}], "Text",ExpressionUUID->"dfe06a08-3f91-4ae8-95df-0f7b4d7a101d"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 4\t", "ExampleFont"],
 "Graph of the derivative"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 4 Graph of the \
derivative",ExpressionUUID->"73e687e5-50ac-4e53-9e41-4db24df7ce4d"],

Cell[TextData[{
 "Sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "6be7f99e-a38a-4ac8-b2ce-dbc3fa9da94a"],
 " from the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "eda6eee9-1c99-46c7-8519-bd709e24daea"],
 " (",
 StyleBox["Figure 3.18", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"9500664e-1dd9-4f8a-92d5-f06c26135cba"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = -4.8, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -4.8, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -5., 5, 
               0.1}, {{
                Hold[$CellContext`xValue$$], -4.8, ""}, -5., 5, 0.1}}, 
            Typeset`size$$ = {288., {89., 93.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$3858$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = -4.8}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$3858$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F18[$CellContext`x], {$CellContext`x, -5, 
                  5}, PlotRange -> {-2, 5}, PlotStyle -> {{Thick, Black}}], 
                Graphics[{Black, 
                  Text["\!\(TraditionalForm\`y = f(x)\)", {5, 4}, {1.5, 1.5}], 
                  If[
                   
                   Or[$CellContext`xValue$$ < -2, -2 < $CellContext`xValue$$ < 
                    0, $CellContext`xValue$$ > 0], {$CellContext`bcR, Thick, 
                    Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F18[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F18][$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F18[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F18][$CellContext`xValue$$]}]}]}, 
                   Black], 
                  $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F18[$CellContext`xValue$$]}, \
$CellContext`bcB]}]}, PlotRange -> {{-5, 5}, {-1, 5}}, GridLines -> {
                 Range[-5, 5], 
                 Range[-1, 5]}, GridLinesStyle -> LightGray, AspectRatio -> 
               Automatic, ImageSize -> 4 72, Ticks -> {
                 Range[-5, 5], {-1, 0, 1, 2, 3, 4, 5}}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[{0, 0.04}], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               AxesOrigin -> {0, 0}], 
             "Specifications" :> {{{$CellContext`xValue$$, -4.8, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -5., 5,
                 0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, -4.8, ""}, -5., 5, 0.1, 
                ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {429., {108., 113.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F18[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-$CellContext`x, $CellContext`x <= -2}, \
{$CellContext`x + 4, 
                    Inequality[-2, Less, $CellContext`x, LessEqual, 0]}, {
                   4 - $CellContext`x/2, $CellContext`x > 
                    0}}], $CellContext`bcR = RGBColor[0.92, 0.11, 0.27], 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F18[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-$CellContext`x, $CellContext`x <= -2}, \
{$CellContext`x + 4, 
                    Inequality[-2, Less, $CellContext`x, LessEqual, 0]}, {
                   4 - $CellContext`x/2, $CellContext`x > 0}}]}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.18\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.18  \[LightBulb]: Example \
4",ExpressionUUID->"98564a49-cc70-476f-a004-31b0e186f7cd"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"589be95b-dc6c-4a92-ba9b-361f3c7d8a90"],

Cell[TextData[{
 "The graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "bc462bca-6d78-4d6a-8804-c6d35b86e9cd"],
 " consists of line segments, which are their own tangent lines. Therefore, \
the slope of the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "9049358b-0760-492f-9524-f475df18598b"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "db41d53c-b2a3-496e-a28f-4bb2d3a4c781"],
 ", is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "36442685-6c98-4dca-a15a-d86a4eaf903d"],
 "; that is, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "685d4e0d-8cb3-4a53-8b4e-2ced6e696825"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "01b79e56-0ecc-4b16-9b38-5c5d16e78788"],
 ". Similarly, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "f0331de9-ca41-4616-9587-a548fd1c29cf"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "<", "x", "<", "0"}], TraditionalForm]],
  ExpressionUUID->"6bb2c1ba-419d-4dc4-8ec3-f572783a7c82"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"-", 
     FractionBox["1", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "82d7e348-9225-4266-b208-63b09eaedbff"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "b874f6a5-2563-4c82-87bc-a69e732623e1"],
 ". ",
 StyleBox["Figure 3.19", "FigureFontText"],
 " shows the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "23894331-d3ce-4a4c-90c3-8d75905582cb"],
 " in black and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "30a2f464-3860-4a69-80d6-f7702941725d"],
 " in red."
}], "Text",ExpressionUUID->"ef6f9e5b-cec4-4dd5-b23b-7930b7b562c9"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"d46968e3-dd23-4080-952d-d47d74af45e4"],

Cell[TextData[{
 "In terms of limits at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "6188547a-6d88-4bb5-9ff1-3d0b1e9a8ef8"],
 ", we can write \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           UnderscriptBox["lim", 
            RowBox[{"h", "\[Rule]", 
             SuperscriptBox["0", "-"]}]], 
           FractionBox[
            RowBox[{
             RowBox[{"f", "(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], "-", 
             RowBox[{"f", "(", 
              RowBox[{"-", "2"}], ")"}]}], "h"]}], "=", 
          RowBox[{
           RowBox[{"-", "1"}], "  ", "and", " "}]}]},
        {
         RowBox[{
          RowBox[{
           UnderscriptBox["lim", 
            RowBox[{"h", "\[Rule]", 
             SuperscriptBox["0", "+"]}]], 
           FractionBox[
            RowBox[{
             RowBox[{"f", "(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "h"}], ")"}], "-", 
             RowBox[{"f", "(", 
              RowBox[{"-", "2"}], ")"}]}], "h"]}], "=", "1."}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "fca3be19-5b99-4a33-b9cc-ff6ab38a87a0"],
 "\nBecause the one-sided limits are not equal, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "f312530d-de39-4c57-9852-86b7563ad93b"],
 " does not exist. The analogous one-sided limits at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "00dc2f8f-2b66-4589-942e-4673f8a5a72e"],
 " are also unequal."
}], "Callout",ExpressionUUID->"41de95ef-200f-453c-800f-950be30e6b34"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = -4.8, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -4.8, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -5., 5, 
               0.1}, {{
                Hold[$CellContext`xValue$$], -4.8, ""}, -5., 5, 0.1}}, 
            Typeset`size$$ = {288., {112., 116.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$3928$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = -4.8}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$3928$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F19a[$CellContext`x], {$CellContext`x, -5,
                   5}, PlotRange -> {-2, 5}, PlotStyle -> {{Thick, Black}}], 
                Plot[
                 $CellContext`funcC3F19b[$CellContext`x], {$CellContext`x, -5,
                   5}, PlotRange -> {-2, 5}, 
                 PlotStyle -> {{Thick, $CellContext`bcR}}], 
                Graphics[{Black, 
                  Text[
                  "\!\(TraditionalForm\`y = f(x)\)", {5, 4}, {1.5, 
                   1.5}], $CellContext`bcR, 
                  Text[
                  "\!\(TraditionalForm\`y = f' \((x)\)\)", {5, -1.25}, {
                   1.5, -1}], 
                  If[
                   
                   Or[$CellContext`xValue$$ < -2, -2 < $CellContext`xValue$$ < 
                    0, $CellContext`xValue$$ > 0], {$CellContext`bcR, Thick, 
                    Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F19a[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F19a][$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F19a[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F19a][$CellContext`xValue$$]}]}]}, 
                   Black], 
                  $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F19a[$CellContext`xValue$$]}, \
$CellContext`bcB], 
                  If[$CellContext`xValue$$ <= -2.1, {
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F19b[$CellContext`xValue$$]}, \
$CellContext`bcR], Black, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(\*FormBox[GridBox[{\n   {\n    RowBox[{\n     \
RowBox[{\"f\", \" \", \"has\", \" \", \"slope\"}], \" \", \"-\", \"1\"}]},\n  \
 {\n    RowBox[{\n     RowBox[{\n      RowBox[{\"f\", \"'\"}], \n      \
RowBox[{\"(\", \"x\", \")\"}]}], \"=\", \n     RowBox[{\"-\", \"1\"}]}]}\n  \
}],\n TraditionalForm]\)", $CellContext`bcPBS], $CellContext`bcFO], {-3.5, \
-1}, {0, 1.5}]}, Black], 
                  If[-1.9 <= $CellContext`xValue$$ <= -0.1, {
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F19b[$CellContext`xValue$$]}, \
$CellContext`bcR], Black, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(\*FormBox[GridBox[{\n   {\n    RowBox[{\"f\", \" \", \
\"has\", \" \", \"slope\", \" \", \"1\"}]},\n   {\n    RowBox[{\n     \
RowBox[{\n      RowBox[{\"f\", \"'\"}], \n      RowBox[{\"(\", \"x\", \
\")\"}]}], \"=\", \"1\"}]}\n  }],\n TraditionalForm]\)", $CellContext`bcPBS], \
$CellContext`bcFO, Background -> White], {0, -1}, {1.2, 1.5}]}, Black], 
                  If[0.1 <= $CellContext`xValue$$, {
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F19b[$CellContext`xValue$$]}, \
$CellContext`bcR], Black, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(\*FormBox[GridBox[{\n   {\n    RowBox[{\n     \
RowBox[{\"f\", \" \", \"has\", \" \", \"slope\"}], \" \", \"-\", \n     \
RowBox[{\"1\", \"/\", \"2\"}]}]},\n   {\n    RowBox[{\n     RowBox[{\n      \
RowBox[{\"f\", \"'\"}], \n      RowBox[{\"(\", \"x\", \")\"}]}], \"=\", \n    \
 RowBox[{\n      RowBox[{\"-\", \"1\"}], \"/\", \"2\"}]}]}\n  }],\n \
TraditionalForm]\)", $CellContext`bcPBS], $CellContext`bcFO], {2.5, -1}, {
                    0, 1.5}]}, Black], 
                  
                  Map[$CellContext`OpenCircle[#, $CellContext`bcR]& , {{-2, \
-1}, {-2, 1}, {0, 1}, {0, (-1)/2}}]}]}, ImageSize -> 4 72, 
               PlotRange -> {{-5, 5}, {-3, 5}}, AspectRatio -> Automatic, 
               Ticks -> {
                 Range[-5, 5], {-1, 0, 1, 2, 3, 4, 5}}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[{0, 0.04}], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               AxesOrigin -> {0, 0}], 
             "Specifications" :> {{{$CellContext`xValue$$, -4.8, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -5., 5,
                 0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, -4.8, ""}, -5., 5, 0.1, 
                ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {429., {131., 136.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F19a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-$CellContext`x, $CellContext`x <= -2}, \
{$CellContext`x + 4, -2 <= $CellContext`x <= 0}, {
                   4 - $CellContext`x/2, $CellContext`x >= 
                    0}}], $CellContext`funcC3F19b[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-1, $CellContext`x <= -2.1}, {
                   None, -2.1 < $CellContext`x < -1.9}, {
                   1, -1.9 <= $CellContext`x <= -0.1}, {
                   None, -0.1 < $CellContext`x < 0.1}, {(-1)/
                    2, $CellContext`x >= 0.1}}], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`OpenCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord], 
                  AbsolutePointSize[5], White, 
                  Point[$CellContext`coord]}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F19a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-$CellContext`x, $CellContext`x <= -2}, \
{$CellContext`x + 4, -2 <= $CellContext`x <= 0}, {
                   4 - $CellContext`x/2, $CellContext`x >= 
                    0}}], $CellContext`funcC3F19b[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{-1, $CellContext`x <= -2.1}, {
                   None, -2.1 < $CellContext`x < -1.9}, {
                   1, -1.9 <= $CellContext`x <= -0.1}, {
                   None, -0.1 < $CellContext`x < 0.1}, {(-1)/
                    2, $CellContext`x >= 0.1}}]}}; Typeset`initDone$$ = True),
            SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.19\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.19  \[LightBulb]: Example \
4",ExpressionUUID->"4f196fc6-0320-4d70-95ec-84f240b43f82"],

Cell[TextData[{
 "\tNotice that the slopes of the tangent lines change abruptly at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "a452812b-fde0-41c6-b533-b39bca9bbaa0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "cff960f6-7380-452b-b604-d796c4ffcb7c"],
 ". As a result, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "d9628a6b-7954-4b0b-8a46-3f512cef8165"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "0", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ab817883-1b6b-421e-9938-218ae3eabc9d"],
 " are undefined and the graph of the derivative is discontinuous at these \
points."
}], "Text",ExpressionUUID->"91a79a16-88a0-4c4a-9af1-85a0d5b67f4c"],

Cell[TextData[{
 "Related Exercises ",
 "17\[Dash]18",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"4503132f-fe57-40c2-be88-339a61ac361b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 5\t", "ExampleFont"],
 "Graph of the derivative"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 5 Graph of the \
derivative",ExpressionUUID->"58f7bafe-e5ae-4fe1-8874-782abfcfb2e9"],

Cell[TextData[{
 "Sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],ExpressionUUID->
  "e39d30f2-ac03-4202-8b8b-f57191b31b7f"],
 " using the graph of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "bcb596c4-c938-475a-a9c2-0518e51a4010"],
 " (",
 StyleBox["Figure 3.20", "FigureFontText"],
 ").",
 Cell[BoxData[
  FormBox[
  Cell["",ExpressionUUID->"6c1f0097-8c41-4578-a350-9ff7fae0db65"], 
   TraditionalForm]],ExpressionUUID->"d7a584e4-0877-4e96-8904-9843a3c5f5d1"]
}], "Text",ExpressionUUID->"ac804af0-56b0-4e77-a149-a8660bf17bf3"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = -4.2, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -4.2, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4.5, 
               2.5, 0.1}, {{
                Hold[$CellContext`xValue$$], -4.2, ""}, -4.2, 2.5, 0.01}}, 
            Typeset`size$$ = {432., {230., 235.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$4022$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = -4.2}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$4022$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F20[$CellContext`x], {$CellContext`x, -5, 
                  2.5}, PlotStyle -> {{Thick, Black}}], 
                Graphics[{Black, 
                  Text[
                  "\!\(TraditionalForm\`y = g(x)\)", {3, 5}, {
                   1, 1.5}], {$CellContext`bcR, Thick, 
                   Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F20[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F20][$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F20[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F20][$CellContext`xValue$$]}]}]}, 
                  $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F20[$CellContext`xValue$$]}, \
$CellContext`bcB]}]}, PlotRange -> {{-5, 3}, {-3, 5}}, AspectRatio -> 
               Automatic, ImageSize -> 6 72, Ticks -> {
                 Range[-5, 5], None}, BaseStyle -> $CellContext`bcBSG, 
               AxesStyle -> Arrowheads[0.025], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               AxesOrigin -> {0, 0}], 
             "Specifications" :> {{{$CellContext`xValue$$, -4.2, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4.5, 
                2.5, 0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, -4.2, ""}, -4.2, 2.5, 0.01, 
                ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {573., {249., 255.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F20[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                0.5 (3 $CellContext`x + $CellContext`x^2/
                   2 - $CellContext`x^3 - $CellContext`x^4/4 + 
                  5), $CellContext`bcR = RGBColor[0.92, 0.11, 0.27], 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F20[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                0.5 (3 $CellContext`x + $CellContext`x^2/
                   2 - $CellContext`x^3 - $CellContext`x^4/4 + 5)}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.20\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.20  \[LightBulb]: Example \
5",ExpressionUUID->"94543d55-cf92-4621-be4c-b9a55458c477"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"eafb9fb2-67de-4c81-872c-db3ce838f219"],

Cell[TextData[{
 "Without an equation for ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "b87053a6-17f5-4923-b816-f2a0dafc7854"],
 ", the best we can do is to find the general shape of the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],ExpressionUUID->
  "c9b83a6f-0333-47d5-8c6f-ccf64747b1ce"],
 ". Here are the key observations."
}], "Text",ExpressionUUID->"f71ee06f-2e27-4d9d-9552-368f4423a8d0"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tFirst note that the lines tangent to the graph of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "5a99a79d-b5d2-43f1-aa20-fd77d2db1591"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "bea92b4c-4d94-455a-af6c-0c5dde641d3b"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "3c69b755-10e0-492d-8d5e-3c007577e0fb"],
 ", and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "f154207b-91d5-41c0-9e5b-224e34514b22"],
 " have a slope of 0. Therefore, "
}], "Text",ExpressionUUID->"26e3b2b6-0371-4bc1-8b45-ab24ef16deb1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"g", "'"}], 
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"g", "'"}], 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"g", "'"}], 
             RowBox[{"(", "1", ")"}]}], "=", "0"}]}]}], ","}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d7008200-0f01-491a-9b87-dca542f7884b"]], \
"Text",ExpressionUUID->"e0d4c623-9642-4b4f-91b5-0789366b7892"],

Cell[TextData[{
 "which means the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],ExpressionUUID->
  "3e9d2849-06a3-4d00-b94e-d4bbb6b210b6"],
 " has ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b8153640-94a0-4217-862a-8b2f1aed5cef"],
 "-intercepts at these points (",
 StyleBox["Figure 3.21", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"191ed5d4-0410-4d8c-85a8-feb16ea5447e"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "79ee7e38-a0b8-43d2-b13e-3ec39ac8458a"],
 ", the slopes of the tangent lines are positive and decrease to 0 as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "d3c18c40-5000-4eed-befd-7161f6d61503"],
 " approaches ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "3"}], TraditionalForm]],ExpressionUUID->
  "2015638b-6f40-44ff-9eef-1a9248fc4570"],
 " from the left. Therefore, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "5fd26d27-136a-4a08-84c9-bb408ea52b0c"],
 " is positive for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "981a5ec6-1772-44d6-b3f2-9d375cde223f"],
 " and decreases to 0 as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a332468d-7a23-4579-bb18-67068d7a5da5"],
 " approaches ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "3"}], TraditionalForm]],ExpressionUUID->
  "ca113b19-dc27-48b2-8a36-d69ea3de4fab"],
 "."
}], "Text",ExpressionUUID->"6d16eae0-3f31-4358-8b06-1b7ab77ec0ff"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "3"}], "<", "x", "<", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "67694ace-1161-4c75-bf91-d033588835ff"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "db15a241-6485-4e49-982f-6454831bd431"],
 " is negative; it initially decreases as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e4790d99-753d-42f1-b771-dacd3b7c6bb2"],
 " increases and then increases to 0 at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "561bdd27-b6e8-445c-8bb7-d978f8d23b11"],
 ". For ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], "<", "x", "<", "1"}], TraditionalForm]],
  ExpressionUUID->"43e92d85-1294-4f15-8b84-53a3ef317276"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ad98afd2-ea2b-4b4e-8817-3f9a649ea35b"],
 " is positive; it initially increases as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fef19dce-9763-43aa-b5d0-5b4f74af8b8a"],
 " increases and then returns to 0 at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "758d3ce3-5f96-4391-8ba8-aca30ad267e2"],
 "."
}], "Text",ExpressionUUID->"3809cc9c-b707-4478-90aa-cca4c444f621"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tFinally, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "eeafe2d9-c367-499e-b516-a2f7e2b51552"],
 " is negative and decreasing for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "b35872d6-bde5-4016-97bf-8fa897a7ce7b"],
 ". Because the slope of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "8759c325-ef1e-423d-bf75-86275f47b1d1"],
 " changes gradually, the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],ExpressionUUID->
  "e0a5ff16-ebc9-42d1-9d3c-82df920ae3ee"],
 " is continuous with no jumps or breaks."
}], "Text",ExpressionUUID->"fe39b6ec-3ef1-4a24-bd20-b389ed0dbc92"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`drawDerivative$$ = 
            False, $CellContext`showHorizontalTangents$$ = 
            False, $CellContext`xValue$$ = -4.2, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -4.2, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4.2, 
               2.5, 0.1}, {{
                Hold[$CellContext`xValue$$], -4.2, ""}, -4.2, 2.5, 0.01}, {
               Hold[
                Column[{
                  Manipulate`Place[1], 
                  Manipulate`Place[2]}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`showHorizontalTangents$$], False, 
                Pane[
                "Show horizontal tangent lines", {90, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 11}]}, {True, False}}, {{
                Hold[$CellContext`drawDerivative$$], False, 
                "draw \!\(TraditionalForm\`g' \((x)\)\)"}, {True, False}}}, 
            Typeset`size$$ = {432., {244., 249.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$4085$$ = 
            0, $CellContext`showHorizontalTangents$4086$$ = 
            False, $CellContext`drawDerivative$4087$$ = False}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            2, StandardForm, 
             "Variables" :> {$CellContext`drawDerivative$$ = 
               False, $CellContext`showHorizontalTangents$$ = 
               False, $CellContext`xValue$$ = -4.2}, "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$4085$$, 0], 
               
               Hold[$CellContext`showHorizontalTangents$$, \
$CellContext`showHorizontalTangents$4086$$, False], 
               
               Hold[$CellContext`drawDerivative$$, \
$CellContext`drawDerivative$4087$$, False]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F21b[$CellContext`x], {$CellContext`x, \
-5, $CellContext`xValue$$}, PlotStyle -> {
                   
                   If[$CellContext`drawDerivative$$, {
                    Thick, $CellContext`bcR}, None]}], 
                Plot[
                 $CellContext`funcC3F21a[$CellContext`x], {$CellContext`x, -5,
                   2.5}, PlotStyle -> {{Thick, Black}}], 
                Graphics[{Black, 
                  Text["\!\(TraditionalForm\`y = g(x)\)", {2.8, 3.2}, {1, 1}], 
                  If[$CellContext`drawDerivative$$, {$CellContext`bcR, 
                    Text[
                    "\!\(TraditionalForm\`y = g' \((x)\)\)", {-3.5, 5.5}, {-1,
                     1}]}, Black], 
                  If[$CellContext`showHorizontalTangents$$, {Gray, Dashed, 
                    Line[{{-3, 0}, {-3, 
                    $CellContext`funcC3F21a[-3]}}], 
                    Line[{{-1, 0}, {-1, 
                    $CellContext`funcC3F21a[-1]}}], 
                    Line[{{1, 0}, {1, 
                    $CellContext`funcC3F21a[1]}}], $CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Dashing[{}], 
                    Line[{{-4, 
                    $CellContext`funcC3F21a[-3]}, {-2, 
                    $CellContext`funcC3F21a[-3]}}], 
                    Line[{{-2, 
                    $CellContext`funcC3F21a[-1]}, {0, 
                    $CellContext`funcC3F21a[-1]}}], 
                    Line[{{0, 
                    $CellContext`funcC3F21a[1]}, {2, 
                    $CellContext`funcC3F21a[1]}}], 
                    Text["\!\(TraditionalForm\`g' \((\(-3\))\) = 0\)", {-3, 
                    $CellContext`funcC3F21a[-3]}, {0, -1.5}], 
                    Text["\!\(TraditionalForm\`g' \((\(-1\))\) = 0\)", {-1, 
                    $CellContext`funcC3F21a[-1]}, {0, 1.5}], 
                    Text["\!\(TraditionalForm\`g' \((1)\) = 0\)", {1, 
                    $CellContext`funcC3F21a[1]}, {0, -1.5}], 
                    $CellContext`ClosedCircle[{{-3, 0}, {-1, 0}, {1, 
                    0}}, $CellContext`bcR], 
                    $CellContext`ClosedCircle[{{-3, 
                    $CellContext`funcC3F21a[-3]}, {-1, 
                    $CellContext`funcC3F21a[-1]}, {1, 
                    $CellContext`funcC3F21a[1]}}, $CellContext`bcB]}, 
                   Black], $CellContext`bcR, 
                  AbsoluteThickness[2], 
                  Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F21a[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    $CellContext`funcC3F21b[$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F21a[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    $CellContext`funcC3F21b[$CellContext`xValue$$]}]}], 
                  AbsolutePointSize[7], $CellContext`bcB, 
                  Point[{$CellContext`xValue$$, 
                    $CellContext`funcC3F21a[$CellContext`xValue$$]}], 
                  If[$CellContext`drawDerivative$$, {$CellContext`bcB, 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    If[$CellContext`xValue$$ < 2.5, 
                    
                    Line[{{$CellContext`xValue$$, -3}, {$CellContext`xValue$$,
                     5}}], Black], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F21b[$CellContext`xValue$$]}, \
$CellContext`bcR], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F21a[$CellContext`xValue$$]}, \
$CellContext`bcB], 
                    If[-4.2 < $CellContext`xValue$$ < -3, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`g' \((x)\) > 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-4.5, -2}, {-1,
                     1}], $CellContext`bcB, 
                    Text[
                    Framed[
                    Pane[
                    "positive slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {-4.5, 4.25}, {-1, -1}]}, Black], 
                    If[-3 < $CellContext`xValue$$ < -1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`g' \((x)\) < 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-3, -2}, {-1, 
                    1}], $CellContext`bcB, 
                    Text[
                    Framed[
                    Pane[
                    "negative slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {-3, 4.25}, {-1, -1}]}, Black], 
                    If[-1 < $CellContext`xValue$$ < 1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`g' \((x)\) > 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-1, -2}, {-1, 
                    1}], $CellContext`bcB, 
                    Text[
                    Framed[
                    Pane[
                    "positive slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {-1, 4.25}, {-1, -1}]}, Black], 
                    If[1 < $CellContext`xValue$$ < 2.5, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`g' \((x)\) < 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {1, -2}, {-1, 
                    1}], $CellContext`bcB, 
                    Text[
                    Framed[
                    Pane[
                    "negative slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {1, 4.25}, {-1, -1}]}, Black]}, 
                   Black]}]}, ImageSize -> 6 72, 
               PlotRange -> {{-5, 3}, {-3, 5.5}}, AspectRatio -> Automatic, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[0.025], Ticks -> {
                 Range[-5, 3], None}, AxesOrigin -> {0, 0}, 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               Method -> {"AxesInFront" -> False}], 
             "Specifications" :> {{{$CellContext`xValue$$, -4.2, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -4.2, 
                2.5, 0.1, ControlType -> Slider, ImageSize -> Small, 
                ControlPlacement -> 
                1}, {{$CellContext`xValue$$, -4.2, ""}, -4.2, 2.5, 0.01, 
                ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}, 
                ControlPlacement -> 2}, 
               Column[{
                 Manipulate`Place[1], 
                 Manipulate`Place[2]}], 
               Delimiter, {{$CellContext`showHorizontalTangents$$, False, 
                 Pane[
                 "Show horizontal tangent lines", {90, Automatic}, 
                  BaseStyle -> {
                   LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left, FontSize -> 11}]}, {True, False}, 
                ControlType -> Checkbox}, 
               Delimiter, {{$CellContext`drawDerivative$$, False, 
                 "draw \!\(TraditionalForm\`g' \((x)\)\)"}, {True, False}, 
                ControlType -> Checkbox}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {610., {267., 275.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F21b[
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := (((-0.5) ($CellContext`x + 
                    3)) ($CellContext`x + 1)) ($CellContext`x - 
                  1), $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`funcC3F21a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                0.5 (3 $CellContext`x + $CellContext`x^2/
                   2 - $CellContext`x^3 - $CellContext`x^4/4 + 
                  5), $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F21a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                0.5 (3 $CellContext`x + $CellContext`x^2/
                   2 - $CellContext`x^3 - $CellContext`x^4/4 + 
                  5), $CellContext`funcC3F21b[
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := (((-0.5) ($CellContext`x + 
                    3)) ($CellContext`x + 1)) ($CellContext`x - 1)}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.21\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.21  \[LightBulb]: Example \
5",ExpressionUUID->"f35a6fb7-36ae-4ff0-bfc3-3efb764ec4d7"],

Cell[TextData[{
 "Related Exercises ",
 "48\[Dash]50",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"89671d7f-769f-4c37-89e4-0b386c7d71d8"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "5"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"bcf48c8e-a6ff-43bf-a608-6750e9d50a39"],
 "  ",
 "Is it true that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"45ce0458-be52-41b4-82df-f365f446b50b"],
 " at a point, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "c0fa4222-cacd-4e0c-8e70-d17abe328c63"],
 " at that point? Is it true that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "45235ddc-2896-4192-8f11-ace76e3326b0"],
 " at a point, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"8752fcec-5d3f-4b8c-8ad6-2799803764ef"],
 " at that point? Explain.",
 " ",
 Cell[BoxData[
  FormBox[
   GraphicsBox[PolygonBox[{{0, 0}, {0.9, -0.3}, {0.7, 0}, {0.9, 0.3}, {0, 0}}],
    ImageSize->15,
    PlotRange->{-0.5, 0.3}], TraditionalForm]],ExpressionUUID->
  "f5c77e99-0d0b-45fd-a2cf-a93e4a74ad14"]
}], "QuickCheck",
 CellGroupingRules->{"GroupTogetherGrouping", 41},
 CellTags->
  "Quick Check 5",ExpressionUUID->"bcff7e1f-5407-46a8-b193-ebd2e6eadf17"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"06ff2ac8-0e56-4c84-8671-88f26a397904"],

Cell["No. No.", "QuickCheckAnswer",ExpressionUUID->"684f2e8d-b497-41f9-8491-18f840244ee4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 6\t", "ExampleFont"],
 "Graphing the derivative with asymptotes"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 6 Graphing the derivative with \
asymptotes",ExpressionUUID->"5127c522-2e57-4c88-9586-6c4b71af0b13"],

Cell[TextData[{
 "The graph of the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a7922479-5061-4e13-b688-843c7a06c217"],
 " is shown in ",
 StyleBox["Figure 3.22", "FigureFontText"],
 ". Sketch a graph of its derivative."
}], "Text",ExpressionUUID->"e9ac842b-0b18-4da0-97ac-d88aefb1d94a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = -2.2, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -2.2, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -2.9, 
               2.9, 0.1}, {{
                Hold[$CellContext`xValue$$], -2.2, ""}, -2.9, 2.9, 0.01}}, 
            Typeset`size$$ = {432., {216., 221.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$4175$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = -2.2}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$4175$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F22[$CellContext`x], {$CellContext`x, -3, 
                  3}, PlotStyle -> {{Thick, Black}}, Exclusions -> {-1, 1}], 
                Graphics[{Dashed, 
                  Line[{{-1, -10}, {-1, 10}}], 
                  Line[{{1, -10}, {1, 10}}], 
                  Dashing[{}], 
                  Text[
                   Row[{"\!\(TraditionalForm\`\(\(x\)\(=\)\(\\ \)\)\)", 
                    $CellContext`DisplayNumber[
                    Round[$CellContext`xValue$$, 0.01]]}], 
                   Scaled[{0, 0.8}], {-1, 1}], Gray, 
                  Dashing[{}], 
                  AbsoluteThickness[0.5], 
                  
                  Line[{{$CellContext`xValue$$, -3}, {$CellContext`xValue$$, 
                    6}}], Black, 
                  Text["\!\(TraditionalForm\`y = f(x)\)", 
                   Scaled[{0.9, 1}], {1, 1}], 
                  If[
                   
                   And[$CellContext`xValue$$ != -1, $CellContext`xValue$$ != 
                    1], {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F22[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F22][$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F22[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    Derivative[
                    1][$CellContext`funcC3F22][$CellContext`xValue$$]}]}], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F22[$CellContext`xValue$$]}, \
$CellContext`bcB]}, Black], 
                  If[
                   
                   And[$CellContext`xValue$$ != -1, $CellContext`xValue$$ != 
                    1], {
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F22[$CellContext`xValue$$]}, \
$CellContext`bcB]}, Black]}]}, PlotRange -> {{-3, 3}, {-3, 3}}, AspectRatio -> 
               1, ImageSize -> 6 72, Ticks -> {
                 Range[-5, 5], None}, BaseStyle -> $CellContext`bcBSG, 
               AxesStyle -> Arrowheads[0.025], 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               AxesOrigin -> {0, 0}], 
             "Specifications" :> {{{$CellContext`xValue$$, -2.2, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -2.9, 
                2.9, 0.1, ControlType -> Slider, ImageSize -> Small, 
                Exclusions -> {-1, 1}}, {{$CellContext`xValue$$, -2.2, 
                 ""}, -2.9, 2.9, 0.01, ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {610., {239., 247.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F22[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                1/(($CellContext`x + 
                  1) ($CellContext`x - 1)^2), $CellContext`DisplayNumber[
                  Pattern[$CellContext`num, 
                   Blank[]]] := 
                If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                  
                  Round[$CellContext`num, 
                   1], $CellContext`num], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F22[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                1/(($CellContext`x + 1) ($CellContext`x - 1)^2)}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.22\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.22  \[LightBulb]: Example \
6",ExpressionUUID->"7bc1b505-b1c6-483f-86da-91de75729e4e"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"225d5eed-d74a-439f-87f4-1e81c62fcf14"],

Cell["\<\
Identifying intervals on which the slopes of tangent lines are zero, \
positive, and negative, we make the following observations:\
\>", "Text",ExpressionUUID->"17137d9e-b717-4a12-b84c-7c292bc9615c"],

Cell[CellGroupData[{

Cell[TextData[{
 "A horizontal tangent line occurs at approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "3"]}], ",", 
     RowBox[{"f", "(", 
      RowBox[{"-", 
       FractionBox["1", "3"]}], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"89d4e6bb-d780-4228-9432-7cf64bb9ca00"],
 ". Therefore, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox["1", "3"]}], ")"}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"ced70523-01cc-4770-8022-3e7406dc802c"],
 "."
}], "Item",ExpressionUUID->"81c048b4-add5-43ae-8e78-1a7b1d0c0951"],

Cell[TextData[{
 "On the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "1"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "d5807798-e006-4dc8-b73e-33dfe5e72cfb"],
 ", slopes of tangent lines are negative and increase in magnitude without \
bound as we approach ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "69f331fa-3cb8-4505-a56a-4d36cc0bbf10"],
 " from the left."
}], "Item",ExpressionUUID->"c421360f-eec8-43bb-b130-a68883bea7a0"],

Cell[TextData[{
 "On the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", 
      FractionBox["1", "3"]}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "472a88b3-67a5-4dae-9bd4-62f00f1215c1"],
 ", slopes of tangent lines are negative and increase to zero at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    FractionBox["1", "3"]}], TraditionalForm]],ExpressionUUID->
  "5cb85c12-064b-4ed3-b288-ff8cf598d12a"],
 "."
}], "Item",ExpressionUUID->"793519d3-b336-4fb5-9bb9-9828aacf20aa"],

Cell[TextData[{
 "On the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "3"]}], ",", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"4820eddc-82a9-4d65-a5d7-9b5f8d2813c8"],
 ", slopes of tangent lines are positive and increase without bound as we \
approach 1 from the left."
}], "Item",ExpressionUUID->"793519d3-b336-4fb5-9bb9-9828aacf20aa"],

Cell[TextData[{
 "On the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"0a19983b-efa3-4aad-96b7-e7012765435e"],
 ", slopes of tangent lines are negative and increase to zero."
}], "Item",ExpressionUUID->"484d203f-e5ce-48fc-8a2e-59b91d7ea082"]
}, Closed]],

Cell[TextData[{
 "\tAssembling all this information, we obtain a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "10b5b45d-a055-4e1a-b149-bef8fcb14e9b"],
 " shown in ",
 StyleBox["Figure 3.23", "FigureFontText"],
 ". Notice that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "315fcf95-f61f-42b3-9c51-375489ce1d8f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "b001f9d6-d9c3-47ae-aa30-ca1a08beefed"],
 " have the same vertical asymptotes. However, as we pass through ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "396fc07a-faa8-4a89-a827-5747453ae2ed"],
 ", the sign of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3c425df4-863f-449f-be39-db4565a7fa3f"],
 " changes, while the sign of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "2098c9bc-2cc9-484d-92fb-86e38fdfb44b"],
 " does not. As we pass through 1, the sign of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "140c91c3-dcf0-4ac2-8c60-e9a8f532353c"],
 " does not change, while the sign of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "d3e38da1-a21e-44ca-a965-834f8722bbda"],
 " does."
}], "Text",ExpressionUUID->"87cb44ee-bdbf-493d-847a-7b4da85de604"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`drawDerivative$$ = 
            False, $CellContext`showHorizontalTangents$$ = 
            False, $CellContext`xValue$$ = -2, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], -2, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -3, 3, 
               0.1}, {{
                Hold[$CellContext`xValue$$], -2, ""}, -3, 3, 0.01}, {
               Hold[
                Column[{
                  Manipulate`Place[1], 
                  Manipulate`Place[2]}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`showHorizontalTangents$$], False, 
                Pane[
                "Show horizontal tangent lines", {90, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]}, {True, False}}, {{
                Hold[$CellContext`drawDerivative$$], False, 
                "draw \!\(TraditionalForm\`f' \((x)\)\)"}, {True, False}}}, 
            Typeset`size$$ = {432., {230., 235.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$4241$$ = 
            0, $CellContext`showHorizontalTangents$4242$$ = 
            False, $CellContext`drawDerivative$4243$$ = False}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            2, StandardForm, 
             "Variables" :> {$CellContext`drawDerivative$$ = 
               False, $CellContext`showHorizontalTangents$$ = 
               False, $CellContext`xValue$$ = -2}, "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$4241$$, 0], 
               
               Hold[$CellContext`showHorizontalTangents$$, \
$CellContext`showHorizontalTangents$4242$$, False], 
               
               Hold[$CellContext`drawDerivative$$, \
$CellContext`drawDerivative$4243$$, False]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Plot[
                 $CellContext`funcC3F23b[$CellContext`x], {$CellContext`x, \
-3.1, $CellContext`xValue$$}, Exclusions -> {-1, 1}, PlotRange -> All, 
                 PlotStyle -> {
                   
                   If[$CellContext`drawDerivative$$, {
                    Thick, $CellContext`bcR}, None]}], 
                Plot[
                 $CellContext`funcC3F23a[$CellContext`x], {$CellContext`x, -3,
                   3}, Exclusions -> {-1, 1}, PlotRange -> All, 
                 PlotStyle -> {{Thick, Black}}], 
                Graphics[{Black, Dashed, 
                  Line[{{-1, -10}, {-1, 10}}], 
                  Line[{{1, -10}, {1, 10}}], 
                  Dashing[{}], 
                  Text["\!\(TraditionalForm\`y = f(x)\)", 
                   Scaled[{0.9, 1}], {1, 1}], 
                  If[$CellContext`drawDerivative$$, {$CellContext`bcR, 
                    Text["\!\(TraditionalForm\`y = f' \((x)\)\)", 
                    Scaled[{0, 1}], {-1, 1}]}, Black], 
                  Text[
                   Row[{"\!\(TraditionalForm\`\(\(x\)\(=\)\(\\ \)\)\)", 
                    $CellContext`DisplayNumber[
                    Round[$CellContext`xValue$$, 0.01]]}], 
                   Scaled[{0, 0.8}], {-1, 1}], Gray, 
                  Dashing[{}], 
                  AbsoluteThickness[0.5], 
                  
                  Line[{{$CellContext`xValue$$, -3}, {$CellContext`xValue$$, 
                    6}}], 
                  If[$CellContext`showHorizontalTangents$$, {Gray, Dashed, 
                    Line[{{(-1)/3, 0}, {(-1)/3, 
                    $CellContext`funcC3F23a[(-1)/3]}}], $CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Dashing[{}], 
                    Line[{{(-4)/3, 
                    $CellContext`funcC3F23a[(-1)/3]}, {2/3, 
                    $CellContext`funcC3F23a[(-1)/3]}}], 
                    Text[
                    Pane[
                    "\!\(TraditionalForm\`f' \((\(-\*FractionBox[\(1\), \
\(3\)]\))\) = 0\)", BaseStyle -> {Background -> White}], {(-1)/3, 
                    $CellContext`funcC3F23a[(-1)/3]}, {0, -2}], 
                    $CellContext`ClosedCircle[{{(-1)/3, 
                    0}}, $CellContext`bcR], 
                    $CellContext`ClosedCircle[{{(-1)/3, 
                    $CellContext`funcC3F23a[(-1)/3]}}, $CellContext`bcB]}, 
                   Black], 
                  If[
                   
                   And[$CellContext`xValue$$ != -1, $CellContext`xValue$$ != 
                    1], {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Line[{{$CellContext`xValue$$, 
                    $CellContext`funcC3F23a[$CellContext`xValue$$]} - 
                    Normalize[{1, 
                    $CellContext`funcC3F23b[$CellContext`xValue$$]}], \
{$CellContext`xValue$$, 
                    $CellContext`funcC3F23a[$CellContext`xValue$$]} + 
                    Normalize[{1, 
                    $CellContext`funcC3F23b[$CellContext`xValue$$]}]}], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F23a[$CellContext`xValue$$]}, \
$CellContext`bcB]}, Black], 
                  If[$CellContext`drawDerivative$$, {
                    If[
                    
                    And[$CellContext`xValue$$ != -1, $CellContext`xValue$$ != 
                    1], {
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F23b[$CellContext`xValue$$]}, \
$CellContext`bcR], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F23a[$CellContext`xValue$$]}, \
$CellContext`bcB]}, Black], 
                    If[-4.2 < $CellContext`xValue$$ < -1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\) < 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-2, -2}, {0, 
                    1}], 
                    Text[
                    Framed[
                    Pane[
                    "negative slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {-2, 2.25}, {0, -1}]}, Black], 
                    If[$CellContext`xValue$$ == -1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\)\) is undefined", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-1, -2}, {0, 
                    1}]}, Black], 
                    If[-1 < $CellContext`xValue$$ < (-1)/3, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\) < 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {(-2)/3, -2}, {
                    0, 1}], 
                    Text[
                    Framed[
                    Pane[
                    "negative slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {(-2)/3, 2.25}, {0, -1}]}, Black], 
                    
                    If[(-1)/3 < $CellContext`xValue$$ < 
                    1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\) > 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {2/3, -2}, {0, 
                    1}], 
                    Text[
                    Framed[
                    Pane[
                    "positive slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {2/3, 2.25}, {0, -1}]}, Black], 
                    If[$CellContext`xValue$$ == 1, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\)\) is undefined", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {1, -2}, {0, 
                    1}]}, Black], 
                    If[1 < $CellContext`xValue$$ < 3.5, {$CellContext`bcR, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((x)\) < 0\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {2, -2}, {0, 
                    1}], 
                    Text[
                    Framed[
                    Pane[
                    "negative slope", $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {2, 2.25}, {0, -1}]}, Black]}, 
                   Black]}]}, ImageSize -> 6 72, 
               PlotRange -> {{-3, 3}, {-3, 3}}, AspectRatio -> Automatic, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[0.025], Ticks -> {
                 Range[-5, 3], None}, AxesOrigin -> {0, 0}, 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               Method -> {"AxesInFront" -> False}], 
             "Specifications" :> {{{$CellContext`xValue$$, -2, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, -3, 3, 
                0.1, ControlType -> Slider, ImageSize -> Small, 
                ControlPlacement -> 1}, {{$CellContext`xValue$$, -2, ""}, -3, 
                3, 0.01, ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}, 
                ControlPlacement -> 2}, 
               Column[{
                 Manipulate`Place[1], 
                 Manipulate`Place[2]}], 
               Delimiter, {{$CellContext`showHorizontalTangents$$, False, 
                 Pane[
                 "Show horizontal tangent lines", {90, Automatic}, 
                  BaseStyle -> {
                   LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left}]}, {True, False}, ControlType -> 
                Checkbox}, 
               Delimiter, {{$CellContext`drawDerivative$$, False, 
                 "draw \!\(TraditionalForm\`f' \((x)\)\)"}, {True, False}, 
                ControlType -> Checkbox}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {610., {253., 261.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC3F23b[
                  Pattern[$CellContext`x, 
                   Blank[]]] := (-1 - 
                  3 $CellContext`x)/((-1 + $CellContext`x)^3 (
                   1 + $CellContext`x)^2), $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`funcC3F23a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                1/(($CellContext`x + 
                  1) ($CellContext`x - 1)^2), $CellContext`DisplayNumber[
                  Pattern[$CellContext`num, 
                   Blank[]]] := 
                If[Abs[$CellContext`num - Round[$CellContext`num, 1]] < 0.001, 
                  
                  Round[$CellContext`num, 
                   1], $CellContext`num], $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F23a[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                1/(($CellContext`x + 
                  1) ($CellContext`x - 1)^2), $CellContext`funcC3F23b[
                  Pattern[$CellContext`x, 
                   Blank[]]] := (-1 - 
                  3 $CellContext`x)/((-1 + $CellContext`x)^3 (
                   1 + $CellContext`x)^2)}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.23\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.23  \[LightBulb]: Example \
6",ExpressionUUID->"bbfeecbe-d19b-418e-8dca-fa926fe7548d"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"fd4b075b-93c4-4e2f-a2b7-7a6ebb8ead32"],

Cell["\<\
Although it is the case in Example 6, a function and its derivative do not \
always share the same vertical asymptotes.\
\>", "Callout",ExpressionUUID->"508d7a4b-45c7-41f2-a878-a96d67721c06"]
}, Closed]],

Cell[TextData[{
 "Related Exercises ",
 "51\[Dash]52",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"3ca90008-3e8c-4663-ac97-92bbc3c7680b"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Continuity  \[RightGuillemet]", "Subsection",
 CellTags->
  "Continuity",ExpressionUUID->"ce4f51f2-bd14-4e9c-a41b-a36836e6663b"],

Cell["\<\
We now return to the discussion of continuity (Section 2.6) and investigate \
the relationship between continuity and differentiability. Specifically, we \
show that if a function is differentiable at a point, then it is also \
continuous at that point.\
\>", "Text",ExpressionUUID->"6e8ff120-dd7f-400f-8e46-7548dd98916a"],

Cell[TextData[{
 StyleBox["THEOREM 3.1", "TheoremFont"],
 "\t",
 StyleBox["Differentiable Implies Continuous",
  FontWeight->"Bold"],
 "\nIf ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "04e5e1bf-6ad7-49d6-93bb-83ee1f4a3881"],
 " is differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "8186fa8f-3586-4755-9dda-d5f0abd1c0dd"],
 ", then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3fbce660-308f-4973-a4e6-4a5bf7d87f22"],
 " is continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "06458364-e405-4ff7-9807-92f76c90bbe0"],
 "."
}], "Theorem",
 CellTags->
  "THEOREM 3.1 Differentiable Implies \
Continuous",ExpressionUUID->"43f59d82-c6f9-4c7c-ac90-1cce46c2565f"],

Cell[TextData[{
 StyleBox["Proof:", "ProofFont"],
 "  Because ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b29426d9-5cc5-402a-b951-f0542888aa63"],
 " is differentiable at a point ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "6acaa509-77c8-4c52-a772-da2cf889ccfc"],
 ", we know that "
}], "Text",ExpressionUUID->"f9f387e9-9de2-4e58-b25e-197e9615a18b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", "a", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"x", "\[Rule]", "a"}]], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "(", "x", ")"}], "-", 
            RowBox[{"f", "(", "a", ")"}]}], 
           RowBox[{"x", "-", "a"}]]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"359e80ef-23ec-401b-82d2-a9fabb4fb09a"]], \
"Text",ExpressionUUID->"e0c689d9-e244-4812-8888-c2ac0143ed6a"],

Cell[TextData[{
 "exists. To show that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "fd3ce8ba-8146-4931-8807-44ac8444dfde"],
 " is continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "236c8cae-400a-499b-92ed-9748cd4b8fd7"],
 ", we must show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", "a"}]], 
     RowBox[{"f", "(", "x", ")"}]}], "=", 
    RowBox[{"f", "(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "60e772c9-3801-4af4-89e8-3f7c6c9a1ec9"],
 ". The key is the identity "
}], "Text",ExpressionUUID->"47d72d67-38b5-4858-886c-02a61b08c5ff"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"f", "(", "x", ")"}], "=", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"f", "(", "x", ")"}], "-", 
               RowBox[{"f", "(", "a", ")"}]}], 
              RowBox[{"x", "-", "a"}]], 
             RowBox[{"(", 
              RowBox[{"x", "-", "a"}], ")"}]}], "+", 
            RowBox[{"f", "(", "a", ")"}]}]}], ",", "   ", 
          RowBox[{
           RowBox[{"for", " ", "x"}], "\[NotEqual]", 
           RowBox[{"a", "."}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "04eb0b69-1edb-45f4-8223-c9c8d00f6952"],
 "(1)"
}], "Text",ExpressionUUID->"b7c12bf1-b1ba-47fa-9004-6d7f24a9be66"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"16e5cfe4-a9d2-4d49-8581-9a482a94d825"],

Cell[TextData[{
 "Expression (1) is an identity because it holds for all values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[NotEqual]", "a"}], TraditionalForm]],ExpressionUUID->
  "5184a9ff-2ee9-4264-80c5-910df0dea150"],
 ", which can be seen by canceling ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "-", "a"}], TraditionalForm]],ExpressionUUID->
  "c2c4243c-3e0e-4b70-ae43-1e93595f679c"],
 " and simplifying."
}], "Callout",ExpressionUUID->"9bbe0d40-01be-47dd-a015-feb41548141c"]
}, Closed]],

Cell[TextData[{
 "Taking the limit as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "21accf25-4019-4e02-898d-ed070f3fd263"],
 " approaches ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "add5a8e8-3d8e-4457-8912-d2c608951a00"],
 " on both sides of (1) and simplifying, we have "
}], "Text",ExpressionUUID->"8636bf9b-a634-4c7a-98a8-ab28f3f49a72"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"x", "\[Rule]", "a"}]], 
          RowBox[{"f", "(", "x", ")"}]}], "=", 
         RowBox[{
          UnderscriptBox["lim", 
           RowBox[{"x", "\[Rule]", "a"}]], 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"f", "(", "x", ")"}], "-", 
               RowBox[{"f", "(", "a", ")"}]}], 
              RowBox[{"x", "-", "a"}]], 
             RowBox[{"(", 
              RowBox[{"x", "-", "a"}], ")"}]}], "+", 
            RowBox[{"f", "(", "a", ")"}]}], "]"}]}]}], 
        StyleBox[
         RowBox[{"Use", " ", 
          RowBox[{"identity", "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               UnderscriptBox["lim", 
                RowBox[{"x", "\[Rule]", "a"}]], 
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  RowBox[{"f", "(", "x", ")"}], "-", 
                  RowBox[{"f", "(", "a", ")"}]}], 
                 RowBox[{"x", "-", "a"}]], ")"}]}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{
               RowBox[{"f", "'"}], 
               RowBox[{"(", "a", ")"}]}], "TypesetAnnotationFont"]],
            TraditionalForm], 
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               UnderscriptBox["lim", 
                RowBox[{"x", "\[Rule]", "a"}]], 
               RowBox[{"(", 
                RowBox[{"x", "-", "a"}], ")"}]}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox["0", "TypesetAnnotationFont"]],
            TraditionalForm]}], "+", 
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              UnderscriptBox["lim", 
               RowBox[{"x", "\[Rule]", "a"}]], 
              RowBox[{"f", "(", "a", ")"}]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{"f", "(", "a", ")"}], "TypesetAnnotationFont"]],
           TraditionalForm]}]}], 
        StyleBox[
         RowBox[{"Theorem", " ", "2.3"}], "TypesetAnnotationFont"]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "'"}], 
           RowBox[{
            RowBox[{"(", 
             SuperscriptBox["a", "\[VeryThinSpace]"], ")"}], "\[CenterDot]", 
            "0"}]}], "+", 
          RowBox[{"f", "(", "a", ")"}]}]}], 
        StyleBox[
         RowBox[{"Evaluate", " ", 
          RowBox[{"limits", "."}]}], "TypesetAnnotationFont"]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
           RowBox[{"f", 
            SuperscriptBox[
             RowBox[{"(", "a"}], "\[VeryThinSpace]"]}]}], ")"}], "."}], 
        StyleBox[
         RowBox[{"Simplify", "."}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"=", Left}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"bdf27574-2186-449f-bca4-be26fcc0f602"]], \
"Text",ExpressionUUID->"30e50563-f262-4676-902e-69daaf3d895f"],

Cell[TextData[{
 "Therefore, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", "a"}]], 
     RowBox[{"f", "(", "x", ")"}]}], "=", 
    RowBox[{"f", "(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "7cc3cd68-eac9-424c-9a0b-931c63e323bf"],
 ", which means that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "47d0dc0f-bafa-4aca-a98b-bdb11f3137c7"],
 " is continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "891a191d-2c72-4d62-a80a-b5387a27d275"],
 ".",
 StyleBox["  \[FilledDiamond]", "ProofFont"]
}], "Text",ExpressionUUID->"f94fa3cf-a0f0-4a27-866f-4bdb3f20339a"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "6"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"e8944439-622e-4cd3-93b5-472e72bdd74b"],
 "  Verify that the right-hand side of (1) equals ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "5541a924-d2f2-4c18-80d1-a4b0a9acfa98"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[NotEqual]", "a"}], TraditionalForm]],ExpressionUUID->
  "f2b96d4b-a4f4-460e-9f15-e7181b0e8767"],
 ".  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 6",ExpressionUUID->"36fb36a9-742e-44f2-9108-218654ab0e37"],

Cell[TextData[{
 "\tTheorem 3.1 tell us that if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2d17fdeb-eb79-4823-b4ab-a2dfc359aca0"],
 " is differentiable at a point, then it is necessarily continuous at that \
point. Therefore, if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "80b8c81c-a739-4685-9e3d-c2b02539a5a4"],
 " is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " continuous at a point, then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "dde314e5-925c-4539-af3f-f0b21b70e709"],
 " is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " differentiable there (",
 StyleBox["Figure 3.24", "FigureFontText"],
 "). So Theorem 3.1 can be stated in another way."
}], "Text",ExpressionUUID->"b6aa522a-12fb-4c53-b95b-347701a2743e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
2UGKrq/8IveQf/bcsFyNigD7zN1rBxJOazUUCulqrb1797p1BSIkvzdvlqM9
wFkLAAAAcAUaUrds2UJyC2GUbCG7vV1oWMAl0NzXLyZSTlwruj9yKFdisdhd
M2boai2PXLb6+/vZiomCWp06+v6Z060bamuq5lVU0Db7299dvuInL+4/59YL
wth7x3ZsbHyhvv4XL61ev27dGz2DWQ/7wf41ob//8py77/7esy+fHsN7CnAN
NC0wQRi/MXCt580NTy9xmMMuCEhHjhxhSxGxut82nxx4jhm1ZPf49X8a792R
TIA4mv235rS0tIgxJcRtWlmZF7esr6/XtXDxPXIOx6lT5jOBpLc9QJ8s9n7t
iWv6B5GiJ5tXipXAg4zR5x231L816KyWpSib7eUbW4lQ8uTGiyZX/26Y7Zbc
Wb0mAgD7oGmBYoe/O/NlXw5DUAYCGlLZnBG0ll0kEldcBtw0t5beSekfv+wd
cX7oxVVVYhRTzda0odH5KTScP3+etQdFazmC3ln27W5tXbty1exJXIuKn/I/
Ji36xUurd25veaNnUOcQUnTnspvZng/t6huS5PyStbdM5geRH9LnjzkpITs+
HeeepmN0/Gj46fSq0t/2GpgU5AUR4o2YCB0FyAtoWqC4ub7/wc+KAwFv58Vu
15KXuTE7Bhad2Wek+18+P0m0jTgRAJxTp3vEY2bKrfvuvdf5WdRIdFJqDFu2
bHEeLpUJFWUOZFzUMHwjeXNlNGGcJlLiYflTb/fKYVPKNvmQ2jc+Xz/4Tzdp
8itF1lfxVaUl608Y/XKsc7W6o3AaQg0ABpoWKGqGz+7bTu/gG55eIg5qE0Rr
bVa4NIBn2jbpUVtO1nPrT7vkeS2nwrW+ri5Tn4gyg/7r3PqkgWktQsnO4xbJ
vJBcxrCURl3ms3/xXqZg6Sc1x66Kf7n060d5Dcx9/aK9pN50EHVyJbmcpLXS
j//6PxldTuLK0cdum8z3pDLAqQa4AZoWKG5kD2e5SStryu6cPj35tjsBtFZ3
90nmC31p8H2/yxJc5DGaq4jaE9fsjf4i3CveRG7RvxUPeTfhdi1XtVaCmY55
seWH6yHzh0tiXnBsU1YZpP9E1UsvR+vXrWPu8Xa4cvShL01hlbn0PwfTwjje
u/bhOaQJK2o3HRuMmwnmeG/b1nVs9hOjoQiJ2JLm0zCS62KpctC0JgxF/LBk
u7TkZOLE0VpdJ7pYVsRoNIrn2jZcGJQ8c8CVqLDhcFhUJrpyi/5BesxdRzum
tWhzO+Wi6snK/nBJ0V0Pfo7v/MR/f6j5s/BpB750lBkhWcsfV2BaLptalvhP
irKftI8iYk2mXyc0lioHTWvCUMQPS/ZLm6BaS7ZrYQ7RPrJnEQ3cZX/zgyMu
eMTLB+Q5EHW1lqi4lNyIrlEoWkuJum+stZyhHDw5UfjMAYxo7jG890dfVlzd
jKZfJzKoHCBSxO3ByqVNRK3FxlbMIdon3rth9m00cDsPqMU4f/68OFFoLrcW
Llzo/IycQtFaStpuj7QWd9RnnmAw57oFd4ErxuHDKagcIFLE7cHapU04rcX8
taC1nJCckFp93C0LSX1dnUWtxTYXfasKRWspgfc90VpSdMc3/ro0FXFi+2UY
tdzh8p7neIstvuHDIagcIFLE7cHypU04rcXmEOV1iNBatmBrtEtqTENf5kIs
FptVXi46ZWXdXPSQLxStdfZVcednzw27VpB3wyx6aqkmV7hdxhLjg1eHsu42
OvxxVMH1ZFisAJqIl/x0NgLqymE6bgzQMdmnlbSY0fDT4tuB4hPrMrxUI9GB
aGwk1/caGxel+bntSrZdOVaalut33y0cVriLePfoMfiV0iky70UmeXhY/CKX
SzPTWtLoJ/SYsyql25frWjN+x9lNt9jwvH6UMIfohPHeHTRwl/3NDw5mH2yt
Eg6HdQXVXTNmPLBggRg2gU+Euegh76fWunTghfr6BgUefYVdINVwg8DT68MX
7XbdPGZXqeMwaKPvn9mxsXHV7Emf/ZphECR6cq/1vPnzB++59evpKdGSed+l
Szhztouud/1pg4D52ZCPfO5469qVSyomTZ20KJX0XA73SkUST/fwmlZrvpjD
LF8GNWkWz5lv33v25Vcu9hkMItdZ4H2xj/3UopW/eGk1u1l0jS/uP+dkjKNS
0UGYQk5340odno+NZzuyvYtK4riSbVZO1qblrGDDJ5tX0uW3PL+Cl4T+vXhL
l7AqRGcfgr45Nhg3HftsVLgn5fHu0UsiRcXg57yzolM8tfvUlVFdXef5w6Iq
oKJYzl8eikQifMUWVQvph0sDigx2U3nmemlarZVspfHepuX3f3XmTE3LsZKs
ip4aeiJYLHExaDZrJEY/96Aj1QdziNaJx+OqjuLK0X/5/KSpU+a7EiKew7zi
NSqL2iqPXxoKhUTFxb6nm+jKa6N/WktKnGoUL9zo36VK3h96Iix2FGPvHVu/
bh1tTRsa6ZMFsU/W25T57Hv2p7cGR60ck7ov6mPpiU4HhzGKXxHvfe0fP8/2
uWlu7a+27jz4VhsNQ+Lty3V6lPpP1jM89KUpvJMvu/2Rthvy6ZhLqkaK024l
31xtHvONdSylqdQw8xc/WV9XR+OUeCjqOTOrKLJutniuzBeBqcnY/nYap3zv
lMTurKqpAMtX/IQGcTHK3EO7+ujBdPei3KrkXCsna9NypWDUidFZNPVAm6jr
aB/SNk/VPsWNwOwu0KYJdue8wj0pjwePnsgHHS/TLWDVS/VP+q1t6zrxxtHr
4fbLUj4fFhFqJEzupo88aREpwMS76Rd5V07Eyf3StFqL1GD8xMti/8z+wdoS
q0+TAl/e8xztyZP+aDb6ki5fvB0edaQmYA7REqnKp9FZbrFKyEEWaVNJ5Oda
i+3r69U0VFJW0WiUe8v/neIJ397RXllZKTaDBxYscOUlxUe7Fnu/eOedLro6
ngOxNPVC0dnZSd+zjfZROmEr1S79cdtK1gHyNx3dJ7HUgpmLhv61D8/RPIO6
18Iu5+jjJckd/u1QKkK+3P1Sl8J/m2uHz/s0sfB33PrTt04d5qFfNV1EsgzG
mfXGOlfzPooNhcxQwCwDbJECPw61f9GMMH5j4Nyh9p7ft4qDYMmTG/n96jj8
9rELduJEMaNx0opVs5FezxOJYaX86Tfo5OnkpeXa63JyUW5VsvXKsdi03ChY
esBi/g98RBPOJfH4J3L0lZ99i0sIkxZrt8LdL49Hjx6HDevscub+x/6UCUuO
FSOuu8lclu7dw5JGGapu/fpkVkXUc+7q7CEpqzEzUvH+4UDE/lkyyP3S1Frr
iW1UyMz2L7Zzk+kD6hDY1VHDo+tlngZ0QL7ePCn21p/gj6cXHak5mEO0Aj2h
/HbQPf3K0sdYi1r6ny4HG6TXQP5EkKxKhYWXSGvxL5NFisc3NTffNWMGby2u
qCMftVaqO1U6rrOviu81z54bTtUzb+GWmrr8q3jvvt2tbW1t9GLLsx8yo9aK
pu3UA4TDYfor7ZMleKmS+HLp92sbm1o0bz16Wkvil3DznAa1V5jc5/NhJacO
n35IcpS6LGZASHb4U+bz7oK6mlcu9slOPkLO7tLUi63uiyFLlZ7sixS3Q22T
Hule/elJok1+7usXeYgz+VrknmeYp06Qj9N8WjiI2duoIcLiiKmrj4ueNvI/
PjouLp0ozUg/6uSi3KvkHCrHStNy9+6z2N1snchU8zwp5xvFIum2WGetyN3y
ePLopbl0gFtWk2YQ4fh0u8UcIiW/7dWe3YuHJQXdBW4XYhaY0eGPE8yjTHlz
STcJg97ALjYuLT0isHm6ZLL1Jze+0TNIh5JGP6HXZM00tK7jbnT74zxRe6qj
SJ3oo+Msfy5veMwK6kVHmhXMIWaFPZ4aGwhti7e4q0Zk+TSrvHyq4n/VtKFR
nBnJ1FqMSwMDoVCI/Yl0mnPhVyi+8T2N4tuEA2u/lHr05EdDlVr6/iZhBLfy
7CT3oV9RP8BnKIyu5ULDAvZXIQdQGjove/W2dWkSS1XAJkT4Rg2SulbheqWB
zT9Uvdapen4FIZUnDRwGqzIlzbJQ6pReGdA4SqnfUp0trRIzOompMMXTiaFu
aTdVNTq4KLWYd6mSs1dOTk3Ls4LpP5KSZpjWabEetSK75fH00RP7ELpYtaeu
XO2Xfv1oOqeqfjpLNx8WjmiyK/nxrgzL/7BKBHqVZ9P6pan2ZE1UmTNKiL0x
C1yZPmCGsz1Pj2uU9E1M5p5x4S4+StnBHKIl1PKYWchdPwnziiftFIlENEO/
kdZitHe033fvvaTQYrGYw1eVQtNajt5Atci9TbobtOuuoDyD2QYFKdr6d3/F
/kov13qe/BKbc6k9cc2eQhb7kKmK2xI3DKZRojcLJnRt10ejUrpCnvsvk9Np
soeXPLFNnR/BxeFDYvF5mO1R0T965RHWONAmOu24d1HuVLL1yrHUtLwrmNEj
Ge81D3bnVSuyVx5vHz1VOjbSWq2Zq6IUv9Nkbeh7crqvtVRC65urM6+aXlj+
sKqcl9yzQBN2tdaU+Yo3jgaJjbzpA9a8pm4waQE55Tdn9c+jtJa0aStD4bv0
KGUHc4gWUIz8NwY6Dr8tzzRdGExZS1ymoaHhyJEjukc211oJxSbWtKHxnXfe
cViGYtZa8d7Vn05PxKvSIOZOz5pqs8SpQoevPJt6uSpGuh+7bTKJBJvZM081
8vdBw4QFmkkZTRehBIzlvZBpJUui7YKrIEPvCyc9eSrnuF7XKpRHuZtTU14W
PNGSqxflRiXL5FY5WZqWdwXTO5dcG+aBhb1rRfbK4+2jJ4lOZfo1L/RduoY1
97WWEMeGzXDpLoEUT6onbFzBptYyftLTu7FpZZU5TpnP1VVQDOWbYd4e2KZ1
VHPnUcoO5hAtwiyKfsUYz6q13KKYtVbqwTR5Ni0j8djIRtfCJzLYVlG76XxM
5VFJZ+/5fev5y3ZXXgtVlDGXwTHr+uiFTlyAYx63hArJ3osNDOnuDB+iO83U
LFH9JXr96ezsPHO2Kxob4YOmqxflQiVb20F1XVmbllcFMzqXqbbxsBXZKk/C
20dPXppxsnnl4qqq+YufXH9axzIWP/Eyn5PSN3y5q7WEd5PSpBec/m4suQmX
iN6MZXa1luFwYLYbn2GcqrhR1Xzn25UZsBAQqqFHUyp3HqXsYA4xEEBrOS6A
6oXUaHLf+tEGNi41vRaJpyMvVdw+5e5XWcTqSmpyGcddBJsNSXa/2UZJuqIb
R/+Vv9nJo+SPdwnX4tbwMcxXkNGmJL3KUiqNacLVi/JHa2VrWp4VzJa28bAV
2dRa3j96aYci9Tzde8da164UY5IYVIhrWkszMzjtc7pzpgqpJLClihHJsyC3
+dRaKqdNk030+CpV1jOqzpVHrYU5xMIHWstxAaT3X6rij94XVr3usLfJqrVE
szP/pG7/prm1b/Q4mr5M4rSLkP+UyyiZdFrgA6Xanu/W8KE6zi97R3Kc5XH3
onzRWlmblmcFs6NtvGxFdrWW54+elussKpqoIfOjtdjyT74Z+0VI3PxIpTJ0
bXKBvGot/qeSb65mIVut8JfL6oBs+dJamEMMBNBa7hbA3kISEQsDYjoIm/h6
xTphEnvUOdj01GI41lriW6GlUVI9xhn1e46GD8ELiz6FWB8WcfeioLUUTLWW
h63I7hyi549e+jxy6HgeDPN7z7781uAom0M0rRDXjMDi0sLP3L3W0KglRcXF
rUrkBI/yJeVRawl9haGflRUwhwgEoLWcnl/t1ZD7IK7F0oConJdFPtdsrDfW
hNDMDTfsWuIR9BxL1CjTEN5qLeEUVEW533d3LwpaSyGbXcurVmRfayl49+jJ
DDOVxSTcw2tYdD6FnsZshj6XnBt7d4hh8BfuM4xNKpq/SJZ0JYO7ekHetJYk
NiRH4cIwhwgEoLWcnV0Sk1O4kr/SmtZiz/7wH7epwuDzrpi2h3b12ez3XLVr
lSado0w7K8G91mutxaoo97Wi7l4UtJaCZbuWy63Ikdby8tFTLoFF4JTzfJ2+
pjpO9lvjzsNyoWGBKOqUMER6WSEUn6706Tx01krk1a6lFu0mqaOygDlEIACt
5fD0LIgKP7XzOH5W7Voy8gvX6Ptndv3sW2LQvNLU1IbN9deOtdbBf7pJ9Bo1
XfSnoKyUT1fjQ+5rLR7FtDTlVpejP7O7FwWtpWCqtTxsRQ7tWjIePHofHZfT
4KbKT0fQCra8aC3xSUkqKKNdhddMec+McKCuku85RDFeol8Lui2COcRAAK3l
8PTsHTB56mx5D61gPiCy3I6Zi8rpS828xlSTXCTmOO0i5NgCvE7kYjyxLUue
L42njarTdkVryV7Noq91amogG/Hed97pUlSZuxcFraVgpm28bEW2tJbHj568
Tpa3z5JnDuiM7/nQWpKYKqg0OYGoW+daMZzd8OiIfPvGpy17Fl22pOjeH31Z
ZdLEHCIQgNZydHLBNTRb1CarZBsQr79280x62VSPO8kUuh/sXyNenUHAw2w4
1lpi0kn6xx23/jRLZ6U22v+yd8T1WKYsa7A40WPhdVUZ/iYtUmrA3YuC1lJQ
59bRaC0PW5Gd8iQ8ffTEtI+G/VJe7FqiB76JguJB0Xl5fvehbSdyK/izDjH5
Vwsrnli+CVUuTswhAgFoLUcnV8z+yeFg0iKjtC85kWVAVOwzqnjmKViff3nP
c3x4oiJl9yjOxHEXIaYdZL2xeexQMWxRKvuJ0Yn0gnVnR9Lkm2ObzjSNQM+a
aroEfkZXL8ojrZWlcnzTWvoJZbI8jB62Ilvl8fLRkzRpr3WX2LDkubloLVsP
i1CSqVPmr/6Lng/WlaNc1rIwzkI2wOFLAwNZLJB2sH5pLsQyFVNPlpo6rTFY
iEVt28AcIhCA1nJ08rOvlqY8NFJvsk57GNWAqDMoJO3bJoukuPyjEcdOkWx0
EfJ8jZhbOcEGvnRgSaPRTSa9wDzltW58IrPjmCNpVoyyu2awauw6E1rC9IG7
F+W8kvV2yFY52ZqWmwUTPduNAvyySuYjmlpguNyKHJcn4eWjJ+cg5qc2ClQl
Zoe0FDfezsMiscwyXGtlvj+SBn7tHz9Pf6r5zrfT51KsxHLY/DXVpcngD0mu
9bxZW1M1r6Ji/uInWQ5oW8Z/65fmgtZiFk7RrHrT3FqjVMUfdCRTRs59/WKO
axkyiqHzKGUHc4iBoAi1lnkPc0qltRxm72KpHLiLhRtvcyovCD1n++T1lvx4
l97pJHFYMfNrNYanAilVfBXabujtJEXFwSvjRBJ1yFvLby0VpkWMlv7xBebM
JyfDZd1wlKTLP7np31/cf85y1y3x1Bui3Cp5cuMbPYPJtLBStOf3ratmT9Ir
s4sX5Uol51o5WZuWiwVLsDGX1zONxarmKkVPNq8Ua3KqToZBNyvcjfJ4+Ogx
mxXfaGhW+xPKQU3F4olORGMJnhTMjYdFUAhTlYzJKv0gRXcuu7lUWWsprsRk
4pYqWVtvav952VD8b4ds9ZPWL82iKjPfTRLD5tM/WOsirXj+8hA/79h7x3b9
7FtcXWts1249SlnBHGIgCLzWUruzlmZzexaNw/QPbbbQXBBTsJU6WegtogSm
Fm3XGW+vyS6CdYM6XZaQnNHYr9WM919K50YpVfxedHb66Ljo2aIf317t/aKf
uza19kp2yNG3Nqhy60xVlhCeHkvwXo4kruUrS4/dmv6fHZnXW2nqVT1jUHDr
otyq5FwqJ3vTcrFgqsRVyd2e3Lirs+fM2a4dGxvZz7+y9LE7p09n6bDZSR9e
09rZ2cmHM/cq3JXyePnoCXmKueWK9AMrnuiHxre5/7H/Uv+f11d+UdA2bjws
iq2eH4EqnCVnJK71vEmvIbJekhcBXRczcb9ysY+pWVILgobXLnBgW+5ZG3K5
NCkqPuNUjboiR5yhLk1rV54gSdXwxBc0+snsb393SXW12F3oOpC49ChlB3OI
gSDQWosetLUPzxHN/uy5+NSilW/0DGa+PcnW7Fsma94fU3vmjvBQO045nUTj
YUsbdSnR2IhuZje6cBoLxJg2VCF8SRR1PjbStI337hA7dvkt9ZkDmeYU0UrA
NjY7oEYVZFuucCV53JWUSwOdi+tkGiKNTPSiHw4XyamuqUnrB5UFSROFSWwM
qoH43w4N6cfKduGiXKxk65VjoWm5WLB0OhtxY2VjYuYzd68lDcMm/sT6p33U
/tiutCJXyuPloydk/+GGNbGoN89p6Pl9a+bof+vXJ09dfZyfzvHDImm0CiuP
rC4qJqkfDe2EAm03za1VO7NJLKmlpkj2HMmsXdows09mtnONdY61YbG272k6
pmnq1LQ07198Z9VFKXI0kfFb9zrSLGAOMRAEUmv1pN8BuVFC0znwrfbENWr2
T9U+9fMH7xEj4YgjLPXey5cto86T+hDrE1KqUOQmuVktQOMglZD3ZpqxgDbq
61Kv0klbelotTFr09Ppw29Z1L9TXs1GDdS+5RvqiWmIuCjqVOWX+0u/XssiK
mZ1DKbexT5mvft+XWNfNf8KPTJdDL8j8G6p540VbksbMzm9cyTdX21llqRyw
5fkVvK4ytRZ1dyY+2E4uyu1Kzl45FpuWB3dflh8kazVHSw6OT25UiqeaGPre
sy/v6uy5ovU8d6UVuVIerx69ZKVdOqBrv2KXNqCYYnjcJ14GOp2goFx5WCRN
MkTxxSSdaFuKcrtWsg5rNp6PjWvvndpnozQ5OWsrGEWWS7v+7o+eIOXJb4Sm
nc9f/KRs8Iz30uu55ghim6+o3XRFPOmVo7o5AvgmJ2ZSX7UXj5I5mEMMBEHU
WtRn7tjY+KutO7N+Nja1HBuMy6+c69a1tLRQg2S2Vv7JoZ1f3H8ut3IIC3YU
o7ptTy3pWs+bTRsat6gRS0jFS9nf5C5lRdN2egen99zWtStVHqrzvkt/UtLg
JnIsj2Req1STLNfb2X3bqTxGu6VOnYZ6IfrV6PtnqKgPLFjAekLWAX5l6WNU
58oETbYsGIo7DRcMNMYxy4Y9lGocvnbu+Ianl7D31mSnPe+7NHSmU6IYY/ei
vKlks8qx3LQ8KBjzf+MZZ0qVlxo+1ii7yOqFRjeSNOb6xJVW5Lg8Hj16HInU
FB2W21JIHlCDFIZySWU9m/dd/ZcCpw+LPEVLJ2pafn/65XTKfDlb0IVB8XR8
Ye+nFq2kW2D0osp84xdXVS1f8RNW8/azPxhfGt1Beq2ghmrUjOU2HBsnrUX/
1YwFHJLN7EL4+eQ6T4xfe2MHXYKo4kjns74iY07Eq47UBMwhBoIgaq0UWTs0
ifUbFva30TdKouuXQx/7rOeS/TCVKVH6ZF1BcgJFfJ9SxiPHPmOGVcE7fAOb
j5RtsJMLL41+EovF4vG4chDJWmkldmnJAXf446QfuxvQcahIdEyqVVsuu/Yu
ysVKdlg5krrNuHz3Wanoe6qfVMEkTaNlX1quedutyGl58vDosYOw+6gnXSR+
l2kzOoh7D4tEP48pZD4a7LDsFCYPTqoy2T+GmWHKrmurk0vLXMighVd+5vPF
YK2OnZp/b/mMaRx3pFowhxgIgqy1/GWYu3YY+T8DU2y++zuwH+ofMHPAdXI0
Nw7i5Oz+FiD/FOv1Zr2VVi7ceXuQLAz9Vk+RjNeqF0fCbsHyj1sdhZtgDjEQ
QGvZZKSb++vaDbAJAAATAyXJ4FSdSBrAKZhDDATQWvZgS8iZJ4Mr4eIBAKAo
Gb8xwKJyfebutU7WEAFdMIcYCKC1zJED5TXL3qrzFz+p+CtK7Ms/rCpPGrXc
CWEKAABFCF/+SUIrM70RcA7mEAMBtFYWhMh+6XjUqTB3qYCQEFoAAJCJFFk3
m8VSGEguAQYugznEQACtZc5Y52q+2PCzX2P5VdO5TjxefggAAIFGGn3/zLHB
OMxZ3oE5xEAArZWFd8M8aOoXVr0+dvX6jaP/yjy1Fm8J1IUAAIAPFOLavWIC
c4iBAForK5f3PKfJl1F2+yOZSRkAAACAPIM5xEAArWWFkejA2X3bWxR2dfbk
ksoHAAAA8ArMIQYCaC0LpOPP5xjjGgAAAPAQzCEGAmgtAAAAIKBgDjEQQGsB
AAAAAQVziIEAWgsAAAAIKJhDDATQWgAAAEBAwRxiIIDWAgAAAAIK5hADAbQW
AAAAEFAwhxgIoLUAAACAgII5xEAArQUAAAAEFMwhBgJoLQAAACCgYA4xEBSx
1hp779iOjY0v1Nf/4qXV69ete6Nn0Dyxzgf714T+/stz7r77e8++fHoMWXh8
Y/zGQM/vW9c+POeepmO6d8HenaIdr507Tk2itqZqcVXVvIqKeRUPLP1+7Yqm
7ecvD/GD0NlPbvp32oeOz/ZZvuInL+4/d2UUTcISeXuO6E6d3bf95w/eY9RO
cjrUmbNdTcvvp9u9/TKyQoAggTnEQFCcWkuK9qypFrNFTysro8+SJzdeNOpH
3w2zfZJ7PnOARgnk4sknLOnkhqeX8LtWsv5POvvZulPXet5cX/lFdlieSZz+
QRs7Do3XdBDSCQsm/624G/urnHD8b36gjMJoEqZ4/xyNvn/mdOsGEsPsHtGJ
9NtJdoZJe7dtXUda+s7p01mBy25/pHXIxcIC4DmYQwwExae16BV157KbWT9M
A+iQlIiGn04P37/t1XsFlj458BwbedlWcv+rA56WEoiMdNfeMlnUxsZay86d
ip94mQmnTy1a+dbgKI3+pOtanl9BI6yoqaZOmc/+vXhL15VR2S66+tOTVOWB
As+Cx89RRjtJnmX9iZwPdfZVptOoDfBmQBtprYPQWiBQYA4xEBSd1rp+8J9u
So6MzydnFiLrq+SRVBlGjbrlsc7VvL9VxogmaK28QfJ43+5W2tY+PIcbnYzs
WrneqfHeHWz/O26p70rNAyqSabhnTTWzZqjkQc1rQ1xMXTrw0Jem8PJ89mto
FVnw9Dlik4bUTriJkp3Ljl1LitKhdnX27PrZt279elq/QWuBwIE5xEBQZFrr
0q8fZZdDA+vpMfadRFpLeAXW7ZalxJWjj902me829/WLcM7JI9K4QiLe+y+f
n2SqtXK8U1J0xzf+mh3tHw5EMv+6/8HPihYS2mqOXRUPGN3+eFahDlJ4+xzR
oRT/r/HER8dFDZy71pKUUiUl9R9WlUNrgeCCOcRAUFRa68pR1gNTJ7/0PwfT
cz3x3rUPz6ERs6J207HBuOEcULy3beu6ndtbsnrRT0BIxJY0n/Z++uw6Fz9m
Y6j1O3X2VX60Z88N6+wsRU+3bmA+WkxQ1Z64ptnl2hs7mjY0vrj/3JAE93gL
LSEPz5EUfe0fP+9Aa6UPRBtdEbemFofWytfTCgoCzCEGgmLSWhcaFrC36Ttu
/SmfLUoaTBISvRErM0dGSHx/9FFaFBGbF6uOFa1l9U7R7f7DqnI2jNIniaiM
oT9pT3v3R0+wiSTa7Yn//lB3HzYuO7u64JO9JeThOZKsanJrRxvYuLSo7Fr5
e1pBQYA5xEBQPFrro+OP3TY5OVH4zAEMi+4xvPdHX3Y8olnExTE0Ic5I6omo
9G6iD7zhbiCvLcEcN9tJcWmtwrlHIE9gDjEQFI3W4osNM11ugBO4C1zQtJbE
5Hd2EWVxtwlPfluCOdBa+hTSPQJ5AnOIgaBItJbgAj110iJEI3SLy3uSS/gD
qLUsiyh1JAFoLV3y3hLMgdbSocDuEcgTmEMMBEWitd4N8xCUn7l7bWoFok3G
EuODVy11uKPDH0cVXPeaZmXQRHPip7syaueA4zcG6JjsUwlrkEWRRsNP89V5
cu8te9u6iTT6yUhULkw0NpIqzPVdD37O+hia5U4JjvHMN15/t5FuUZLpu9Ab
w28KawbWJ6/Hrl4fEvZl90WoCrdP56BF2WsJ1p+jhNA+qTCZ5czATGtRu6KD
sKZl5dS2tZbte2GRnOrE66cVFCyYQwwExaG1otsfT3e8zx+zfZzR98/s2Ni4
avYk80hKcraXnjd//uA9YmSeknnffXp9+MzZrhfq69ef1q5lswjLI9O6duWS
iklTJy363Ycj7Hs6HZVKPN3Da1qtRS4apt9ueHoJaVEeAp1t33v25Vcu9hl0
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
os5wa/mtpcKUhFEoQr64m3l2ZegfdWgswa2dLv/kpn+nntPivC3rgcVt7n/s
zzidKr0LswzoaQMrd0rhVHZbgVI4a1orIYmRtOkfrOqe2n3q/OUhXi1j7x3b
9bNvcb2tthMmRG+6bCtnXThdwp0WlcilJWS/O8w+I4blVAIppM91unWD2HpF
Q+hYYlwnw7Wxv7potjUy8Kpuir4cdedemOBKnbjztAqPw1QlWblKMUrRnctu
LlWWWosLsdlrGj3mUzMi84u3oNSJwQ0YgDnEQBBQrSUm8it1EmOBk8qbxrtc
vRnAZA/PuiAd9SIkZzT2KTXj/ZfSGXZKFe8pnZ0+Os79T0qNpmkEH5VSo7yx
qXVPsluX/vJA2V9X7Hi/sOr102MJPqaQxLV2WZI44VuaskZ++uEX3+gZpFKx
RQd8nBI3KvnyFT/53rMvp4dsS3dKRpz6oc9/OBDRbySCh1up4YSUpKlV8Sd0
ltnf/u6S6mp+90v157UlcY28afpOV04n41KLstwSrNwdIR02t9KQEjhztmvH
xkbRe5BvpMwv9f95feUXUyN1Wlcwp0RdKxPpTHGIN6pq1U2ZtOh3H46o24lr
98IMF+rEpadVmS/gB6FrYckZiWs9b66aLS/JVFwur/M1L7TbKxf72PsUCXW1
ur5O7UGcgU1FRgWugTnEQBBQrUVdOjPdZBuzrKLxbKeNeqpobGTIwH+Jeo+H
17SK9nDq0/hqRMM5MlPGe3eInar8hvjMgUwLQ6aNiN6vMw6mim8v95lK3sYr
KQcSOhef1yOhZTQhIr6TTk0lJEqNyE259ZmXDmQOGfxoXBFljim0Ld7SNTr8
MSu5tTuVoHGBr/TnpgAdwZlIDGz+oXheNrjE4/GEHlRv4qgqljzzIOqfyjEq
75w+XXV/azaej5k1XQenS/7crRZlsSVYujtCoivd+37znIae37dmaptbvz55
6urjyqFkXSHGWqHm/fT68PnLQ3Quqs/R98+0PL+C1/Y9TczwldlehzUFlqvo
3w7pWqQd3ossuFAnrjytkti18vLIerIi2ZlQ/Sin0y4ZoO2mubVaFzVlGbJY
RfmLvT9hwBxiIAim1lIFczbLi5oN6mmfqn2KdyOZGoA6GcGElXybTs8mTFpE
PXzb1nUv1Nfzjp0Gl1wjfVE3zhxCVJ12ahBZ+v1aFtUwc0ws5TMaU+arTW0S
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
q2UpZ2WOrAWQdbJWQHNZA5/L5aKHSVmZJWsBZJ2sFUq8Br5B0Frb3X3g4IHQ
0yRlshZA1slazTc6Orqxr69BLeumVavy+fz4RKtLmw2zTtYCyDpZq5ka9IGv
b5x16tSp2sPdN1wGZC2ArJO1mubY8aG4D/xs9w3XdHbu27dPxFpeZC2ArJO1
mqBYLObz+QaNs6Kxtb+/tgaeZUbWAsg6WSttg4ODt3V1NVgDf+e6ddbAL1+y
FkDWyVrpKRQKuVyuQTkr+ta2b3yjVCqFninhyFoAWSdrpeSqxxpu6O098dpJ
q7OWO1kLIOtkrSU3Ojp67+bNDcpZN69erQ88l8haAFknay2pyhNPPNH4WMNc
LheFsdDzpGXIWgBZJ2stlVOnTm3s64t/mFds7PDxj32s1tIB6shaAFknay1e
uVyOO5TWB61pcWtrf3+xWAw9U1qPrAWQdbLWIkU/wA29vUmmmhm36o41tDqL
GWQtgKyTtRasVCrl8/mbVq2qr1/Vp6yVHR3RA5SzaETWAsg6WWthho4d6+np
mbnZMAla0XePHR9Sy+IqZC2ArJO15isuZ8Upa+YC+OgrN61a9ej2HTqUMhdn
TrxcPfizaIxdOF8ul0NPB4ClJ2vNy9GjrybnR19xv+GG3t6RkWHlLOamMpmv
NFsDyCxZa46SctbM1e9x3Lp59erHd+70pgkA1JO15iL6KfX09My20zAaG/v6
ah1KBS0AYApZay4GBwdn6+pw8+rVTz79VO1OkJQFAEwna83R1v7+huUsAIAr
kLXmplIsFm/r6kq2H370lltq50cDADQia83dkVeOxD+rezdvdn40ADAXsta8
5PP5ydVZAABXJ2sBAKRH1gIASI+sBQCQHlkLQvrqtjfu+1L068SpiABkkawF
IXVtOXdtX3XFp8+ceNmeC4BMkrUgpK4tUdCaiFvqWgAZJWtBSLWsNTFkLYCM
krUgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1
LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1
ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2A
rJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1IKAT+w+c+d6z0Rh/52y1Wgk9
HQCWnqwF4VTGq+WxC+fL5bKgBZBVshYAQHpkLQCA9MhaAADpkbUAANIjawEA
pEfWAgBIj6wFAJAeWQsAID2yFgBAemQtAID0yFoQ0JnvPVv96rZoXCycrp3U
A0DWyFoQyni1XO3acu7avuqKT1cP/iz0dABIhawFIXVtmQhashZAdslaEFIt
a02UtmQtgIyStSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1
LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1
ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2A
rJO1ICR1LYCsk7UgJHUtgKyTtSAkdS2ArJO1ICR1LYCsk7UgoDPfe7b61W3R
uFg4XS6XQ08HgKUna0Eo49Xy2IXztd9WBC2ArJK1AADSI2sBAKRH1gIASI+s
BQCQHlkLACA9shYAQHpkLQCA9MhaAADpkbUAANIjawEApEfWgoBe3L9/d02h
UAg9FwBSIWtBQD09PSs7Oj50441Hj74aei4ApELWgoCirBVfgLIWQFbJWhDQ
ht5eWQsg22QtCKfS09PzoRtvlLUAMkzWgoDUtQAyT9aCcNS1ALJP1oKA1LWg
xRUKBZcniyRrQTjqWtDiKsVicU1nZ3Sp7tq1K/p99JXQU6L9yFoQkLoWtLaJ
ZDUwMBBfpzevXp3L5WpXq8TFPMhaEI66FrSHjX190aUajbj5cHTlPr5zZ7FY
LJfLoadGG5C1ICB1LWgLIyPDccqKrtb412jctGpVLpc78soRZS4ak7UgHHUt
aBv5fD4ubSVZK/nH9evXP75zp1NNmY2sBQGpa0G7KBaLt3V11Wet+rgV317M
5XIHDh5Q5mIaWQvCUdeCdrJv374kZc2MW8lX1nZ3P7p9R3RRl0ql0FOmJcha
EJC6FrSXezdvni1uzfzHm1evjq7xfD7/3HPPjY6Ohp47wchaEI66FrSZKDJF
CWpm3Gpc74p/va2rK5fLxSWvWquutlEqle64/XZjwWNtd3eynyL4ZAxjWY0o
aEUv2vGLcHQlBp+PYRiNR0/Nms7O+irWXOLWzNwVvedu6O3d2t8/WfJq6SVe
UTKc43+yYRhGq41ptx4Mw2j9EV2zH73llrk/uMFIHhDlt1wu9/zzz9dCV8vl
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
3j/+32/N8imp8usX/jru+bCg6jcQzi++HZejv/X6yFOd1yTX+98OX1Sdbo7S
K48lJ4DHv67/weh81lldmFnUip6+JZmbrAUpm7K18NIpaVfMWlPXZNZ2i9vB
BO1gsttAXEhJujxFX6ktGEgu5LOHX3sril66m6bizRfuufaG+rri/PYmzFxa
v/P4Ur0Iy1qQqvLws8lHrfhzVoNHXm7n8oEvHhmrekGGdnAhDleTb82VwsBX
kqu+vl3A6V3/+aZVq3SST0n53dNxRXFqf7O5haW6tbJJn4clXGsna0GqXsuv
S5pId3zwCz98a+yK1368pqv+MrdYC1rT2IXzhUIhSVBDj/RFyWrKW3Nt03Gy
ZGswvg1Vu8m44s/2LOYIY2Y38XzU9+2f10qM6IU6ufMY9+RZ/N7DerIWpCfZ
l3Q5Qc320KlrMmsfkIHW88bApW6ltdNLf/r0g9EF/uFr/qJ+DXx04T/8m5f3
HX/i0cP/7+BjUfqyVD5lleqbLyQpNxpz7GVa+PstSTWs9kL9zQV0QG1M1oLU
TLnwJ28gXvH6Pfvin7ynvnz950f/zWItaEFx5WRKH6cbPjl1BXWlfutx/YN1
zGuCpEIVj6vesY2DVjJ+96HvzDjOYwnIWpCeeF/MVRPUr1/46ySPxbcav/ur
pdn8AiypSvTWPC1rRe/mMxZgTxyMWH/tR+OePSOWaaWvkjQzTFZubDs+S8St
FPZ8+Y76PBw9R/GKuyWflqwFKTp5eWNL9OH34f97pTVYb/84OcMr7jhddwzi
hTdPn669PqtxQWsoDX/98x+Pl77H7+OlUulKj7sQt9uK7zZ+6/WR+Ih5UlWu
iV5Uk97R8TN1//ePTTnQsFI4vnd79MKbNJ79jbse/OFbY+l155C1IDWV6rEp
WWvmifPld08/84fvi7616XOfvbxY62uH41eM+LW6tpUGaAXx0VqVKDiNv3M2
evue7d05voSjhxWLxehhKlrNVYleWp+/7yNJzWoiU113171//l/y+fwDm3qT
iBUXvv7nj040eCqXhKwFKapr2BJd19NvIlQK/7D5vXHh+qdPP5g8stbsdGJz
08QZH9teCTZ54MouJa65PDL1uXAFlfg5OjP0j3959yfim7n1ZyfF4z/81WN7
Dg2da8pTJGtBimq7vJOsFX2w2nb8TPyBN3oReOjW6ya2ik+cTnt27x/8u+Rh
33p9JK5oLW2DF4BlZiJIjf3rz48effXFH+4bHBz8538+cujQoZO/PJd2IWsa
WQtSU6lWCvWndcQfpm797B9t7Lq0lmDFf99f+1R19kd3/3b9MtpovOf3Hzgy
5uxpgMWo1C13v1TDav7rqqwFaapMOwwx2fAyZblmpZDUtSY7cX3zZLEsaAFk
gKwFaZpYMzD+L4cfvfczl1cL3PDJzz+yNz4WLXlcYeAr8ZX4G3c92ISFmgA0
jawFTVGJdyRFZvZwiFdwRV+f2NykwwNAtsha0CyVqSsHZnsMAJkiawEApEfW
AgBIj6wFAJAeWQsAID2yFgBAemQtAID0yFoAAOmRtQAA0iNrAQCkR9YCAEiP
rAUAkB5ZCwAgPbIWAEB6ZC0AgPTIWgAA6ZG1AADSI2sBAKRH1gIASI+sBQCQ
HlkLACA9shYAQHpkLQCA9MhaAADpkbUAANIjawEApEfWAgBIj6wFAJAeWQsA
ID2yFgBAemQtAID0yFoAAOmRtQAA0iNrAQCkR9YCAEiPrAUAkB5ZCwAgPbIW
AEB6ZC0AgPTIWgAA6ZG1AADSI2sBAKRH1gIASI+sBQCQHlkLACA9shYAQHpk
LQCA9MhaAADpkbUAANIjawEApEfWAgBIj6wFAJAeWQsAIE2V0qTQMwEAyKRK
6AkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACt6/8DvIEQEA==
      "], {{0, 
      730}, {804, 0}}, {0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {804, 730}, PlotRange -> {{0, 804}, {0, 730}}, ImageSize -> 
    216],StyleBox["\"Figure 3.24\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.24: Not continuous at a \
point",ExpressionUUID->"d059f4e8-6b85-4533-8419-5fc84759767a"],

Cell[TextData[{
 StyleBox["THEOREM 3.1 (ALTERNATIVE VERSION)", "TheoremFont"],
 "\t",
 StyleBox["Not Continuous Implies Not Differentiable",
  FontWeight->"Bold"],
 "\nIf ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "cf1e77f2-5e16-4e6a-861d-d8009d34aa80"],
 " is not continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "820ddd0f-9e67-4121-8727-cf27d1800d0b"],
 ", then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "96b9b7ba-622c-4412-b729-2a8e0fda2d91"],
 " is not differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "4d389793-fb4f-45a6-b48d-48cb44279d5f"],
 "."
}], "Theorem",
 CellTags->
  "THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not \
Differentiable",ExpressionUUID->"9841ea68-3be5-4f06-b841-f64a3f6b33dd"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"85b68ba4-af56-4a83-b219-4c68869c2bf2"],

Cell[TextData[{
 "The alternative version of Theorem 3.1 is called the ",
 StyleBox["contrapositive",
  FontSlant->"Italic"],
 " of the first statement of Theorem 3.1. A statement and its contrapositive \
are two equivalent ways of expressing the same statement.\nFor example, the \
statement \n     ",
 StyleBox["If I live in Denver, then I live in Colorado",
  FontSlant->"Italic"],
 " \nis logically equivalent to its contrapositive: \n     ",
 StyleBox["If I do not live in Colorado, then I do not live in Denver.",
  FontSlant->"Italic"]
}], "Callout",ExpressionUUID->"de332b2c-bf96-41c5-9ce2-c2489975210d"]
}, Closed]],

Cell[TextData[{
 "\tIt is tempting to read more into Theorem 3.1 than what it actually \
states. If ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "77bc08dc-98d9-4db2-9dd3-fbcf0e5199ee"],
 " is continuous at a point, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d5cba9a4-8bcd-4334-86c1-3a1e68a5654d"],
 " is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " necessarily differentiable at that point.  For example, consider the \
continuous function in ",
 StyleBox["Figure 3.25", "FigureFontText"],
 " and note the ",
 StyleBox["corner point",
  FontWeight->"Bold"],
 " at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "90c5430b-dc38-43d5-a269-c84cb1e7cf98"],
 ". Ignoring the portion of the graph for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "a"}], TraditionalForm]],ExpressionUUID->
  "9853c423-38e2-47a5-b936-b87d7e48c547"],
 ", we might be tempted to conclude that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptL]", "1"], TraditionalForm]],ExpressionUUID->
  "10e91060-a16b-4397-8e41-3c39a2bcb5e9"],
 " is the line tangent to the curve at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "ea5ec44d-e39b-4f3c-8f42-f5dbe3aa749a"],
 ". Ignoring the part of the graph for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "a"}], TraditionalForm]],ExpressionUUID->
  "577ef056-526b-45f6-9854-cd6f796e0cc1"],
 ", we might incorrectly conclude that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptL]", "2"], TraditionalForm]],ExpressionUUID->
  "2050ea2c-643a-4986-84d1-ddd5e7f69054"],
 " is the line tangent to the curve at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "2a458290-d9e3-4433-889e-98998fc27cfe"],
 ". The slopes of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptL]", "1"], TraditionalForm]],ExpressionUUID->
  "5c1d3b70-cb4d-4096-a23b-186646b01ffe"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptL]", "2"], TraditionalForm]],ExpressionUUID->
  "b43f8288-3f11-48f5-9c36-2dd62d3855fc"],
 " are not equal. Because of the abrupt change in the slope of the curve at \
",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "afa4ce89-6c80-4cd2-8257-af0016e2c05b"],
 ", ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "69c89d1e-2a0d-4c82-b132-3710cee123de"],
 " is not differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "6d943b5a-a55f-4414-bb46-73daa18f4f69"],
 ": The limit that defines ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "8cf86ec0-2bd4-4548-9322-34f265a4a77f"],
 " does not exist at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "4feb98b5-1e9d-41f1-85af-e51b110c9016"],
 "."
}], "Text",ExpressionUUID->"eed79131-17c6-45e3-9397-907bf1edd1d8"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"dfc6dc8b-44f3-4388-a72c-f211864c477f"],

Cell[TextData[{
 "To avoid confusion about continuity and differentiability, it helps to \
think about the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]}], 
   TraditionalForm]],ExpressionUUID->"e87991fe-e0ca-4524-a5c5-02beb7b58d26"],
 ": It is continuous everywhere but not differentiable at 0. "
}], "Callout",ExpressionUUID->"a437296f-1202-4393-acf0-1c995e1aa6e2"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`xValue$$ = 0.2, Typeset`show$$ = 
            True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
            "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`xValue$$], 0.2, 
                "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0.1, 
               4.4, 0.1}, {{
                Hold[$CellContext`xValue$$], 0.2, ""}, 0.1, 4.4, 0.01}, {
               Hold[
                Button[
                "\!\(TraditionalForm\`x = a\)", $CellContext`xValue$$ = 2, 
                 ImageSize -> {72, Automatic}, BaseStyle -> 11]], 
               Manipulate`Dump`ThisIsNotAControl}}, 
            Typeset`size$$ = {360., {180., 185.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`xValue$4365$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, "Variables" :> {$CellContext`xValue$$ = 0.2}, 
             "ControllerVariables" :> {
               Hold[$CellContext`xValue$$, $CellContext`xValue$4365$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                
                Plot[{Derivative[1][$CellContext`funcC3F25][
                    1.999] ($CellContext`x - 1.999) + $CellContext`funcC3F25[
                   1.999], 
                  Derivative[1][$CellContext`funcC3F25][
                    2.001] ($CellContext`x - 2.001) + $CellContext`funcC3F25[
                   2.001]}, {$CellContext`x, -0.5, 5}, PlotStyle -> {{Thick, 
                    Lighter[$CellContext`bcR, 0.75]}}], 
                Plot[
                 $CellContext`funcC3F25[$CellContext`x], {$CellContext`x, 0, 
                  4.5}, PlotStyle -> {Thick, Black}], 
                Plot[
                Derivative[
                   1][$CellContext`funcC3F25][$CellContext`xValue$$] \
($CellContext`x - $CellContext`xValue$$) + \
$CellContext`funcC3F25[$CellContext`xValue$$], {$CellContext`x, -0.5, 5}, 
                 PlotStyle -> {Thick, $CellContext`bcR}], 
                Graphics[{
                  If[$CellContext`xValue$$ < 2, 
                   Text[
                    Framed[
                    Pane[
                    "Tangents approach \!\(TraditionalForm\`\*SubscriptBox[\(\
\[ScriptL]\), \(1\)]\) as \!\(TraditionalForm\`x \[Rule] \*SuperscriptBox[\(a\
\), \(-\)]\).", {120, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {0.1, 5.5}, {-1, 1}], Black], 
                  If[$CellContext`xValue$$ > 2, 
                   Text[
                    Framed[
                    Pane[
                    "Tangents approach \!\(TraditionalForm\`\*SubscriptBox[\(\
\[ScriptL]\), \(2\)]\) as \!\(TraditionalForm\`x \[Rule] \*SuperscriptBox[\(a\
\), \(+\)]\).", {120, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {4.9, 5.5}, {1, 1}], Black], 
                  Text[
                   Framed[
                    Pane[
                    "\!\(TraditionalForm\`slope\\ \*SubscriptBox[\(\[ScriptL]\
\), \(1\)] \[NotEqual] slope\\ \*SubscriptBox[\(\[ScriptL]\), \(2\)]\\ \
implies\\ f' \((a)\)\\ does\\ not\\ \(\(exist\)\(.\)\)\)", {
                    120, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {4.9, 0.5}, {
                   1, -1}], $CellContext`bcR, 
                  Text[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(\[ScriptL]\), \(1\)]\
\)", {0.3, 3}, {-1, 1}], 
                  Text[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(\[ScriptL]\), \(2\)]\
\)", {3, 2}, {1, 1}], Gray, Dashed, 
                  Line[{{2, 0}, {2, 4}}], 
                  $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F25[$CellContext`xValue$$]}, \
$CellContext`bcB]}]}, ImageSize -> 5 72, 
               PlotRange -> {{-0.5, 5}, {-0.5, 5.5}}, AspectRatio -> 1, 
               AxesOrigin -> {0, 0}, 
               Ticks -> {{{2, "\!\(TraditionalForm\`a\)"}}, None}, 
               AxesLabel -> {
                "\!\(TraditionalForm\`x\)", "\!\(TraditionalForm\`y\)"}, 
               BaseStyle -> $CellContext`bcBSG, AxesStyle -> 
               Arrowheads[0.03]], 
             "Specifications" :> {{{$CellContext`xValue$$, 0.2, 
                 "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, 0.1, 
                4.4, 0.1, ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`xValue$$, 0.2, ""}, 0.1, 4.4, 0.01, 
                ControlType -> Trigger, 
                AppearanceElements -> {"StepLeftButton", "StepRightButton"}}, 
               
               Button[
               "\!\(TraditionalForm\`x = a\)", $CellContext`xValue$$ = 2, 
                ImageSize -> {72, Automatic}, BaseStyle -> 11]}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {538., {203., 211.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{
               Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`funcC3F25[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{(2 Sqrt[2]) Sqrt[$CellContext`x], 
                    Inequality[
                    0, Less, $CellContext`x, LessEqual, 
                    2]}, {($CellContext`x - 4)^2/2 + 2, 2 <= $CellContext`x <= 
                    4.5}}], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left, FontSize -> 
                   13}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> 
                  GrayLevel[0.85]}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                 FontFamily -> "Times", 13}}; {$CellContext`funcC3F25[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                Piecewise[{{(2 Sqrt[2]) Sqrt[$CellContext`x], 
                    Inequality[
                    0, Less, $CellContext`x, LessEqual, 
                    2]}, {($CellContext`x - 4)^2/2 + 2, 2 <= $CellContext`x <= 
                    4.5}}]}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.25\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.25  \[LightBulb]: Corner \
point",ExpressionUUID->"b9de39bc-b2fd-48ec-91cf-54279f1680e2"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"670b1881-1f13-4a61-9cf2-9296cdead3dc"],

Cell[TextData[{
 "Continuity requires that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", "a"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "(", "x", ")"}], "-", 
       RowBox[{"f", "(", "a", ")"}]}], ")"}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"7bbe7402-1d71-4d52-bd2b-5abd8a63f2c3"],
 ". Differentiability requires more: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"x", "\[Rule]", "a"}]], 
    FractionBox[
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], "-", 
      RowBox[{"f", "(", "a", ")"}]}], 
     RowBox[{"x", "-", "a"}]]}], TraditionalForm]],ExpressionUUID->
  "513fbf63-b15a-4e3b-93a3-f87cf8cef89e"],
 " must exist."
}], "Callout",ExpressionUUID->"46f81281-481a-4372-859c-fe641cfd3de3"]
}, Closed]],

Cell[TextData[{
 "\tAnother common situation occurs when the graph of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2aaeb5fe-fbe2-414e-a2f2-f2f2d38b7335"],
 " has a vertical tangent line at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "699dea93-a1a9-4ef4-8d3f-17318cbe1afb"],
 ". In this case, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2acdbe2a-026b-429f-ab22-2c6fb3a00c66"],
 " is undefined because the slope of a vertical line is undefined. A vertical \
tangent line may occur at a sharp point on the curve called a ",
 StyleBox["cusp",
  FontWeight->"Bold"],
 " (for example, the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]]}], 
   TraditionalForm]],ExpressionUUID->"7e849705-687e-476c-9286-8da3c5a89bf9"],
 " in ",
 StyleBox["Figure 3.26a", "FigureFontText"],
 "). In other cases, a vertical tangent line may occur without a cusp (for \
example, the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RadicalBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "acfd888c-e98c-4ee6-8e80-78851b2763a4"],
 " in ",
 StyleBox["Figure 3.26b", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"36da9903-00d6-4eb9-a6c2-536c1058a375"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"0027fcd4-eb4f-47c3-8ac9-7e011aaf29a1"],

Cell["\<\
See Exercises 73\[Dash]76 for a formal definition of a vertical tangent line.\
\
\>", "Callout",ExpressionUUID->"8f00cb7e-04c0-4c4d-828d-8e4e5c485416"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       TagBox[
        GridBox[{{
           FrameBox[
            TagBox[
             StyleBox[
              
              DynamicModuleBox[{$CellContext`xValue$$ = -1.5, Typeset`show$$ = 
                True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`xValue$$], -1.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, \
-1.9, 1.9, 0.01}, {{
                    Hold[$CellContext`xValue$$], -1.5, ""}, -1.9, 1.9, 0.01}, {
                   Hold[
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2], 
                    Button[
                    "\!\(TraditionalForm\`x = 0\)", $CellContext`xValue$$ = 0,
                     ImageSize -> {72, Automatic}, BaseStyle -> 11]}}]], 
                   Manipulate`Dump`ThisIsNotAControl}}, 
                Typeset`size$$ = {252., {76., 81.}}, Typeset`update$$ = 0, 
                Typeset`initDone$$, Typeset`skipInitDone$$ = 
                False, $CellContext`xValue$4467$$ = 0}, 
               DynamicBox[
                Manipulate`ManipulateBoxes[
                2, StandardForm, 
                 "Variables" :> {$CellContext`xValue$$ = -1.5}, 
                 "ControllerVariables" :> {
                   
                   Hold[$CellContext`xValue$$, $CellContext`xValue$4467$$, 
                    0]}, "OtherVariables" :> {
                  Typeset`show$$, Typeset`bookmarkList$$, 
                   Typeset`bookmarkMode$$, Typeset`animator$$, 
                   Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                   Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                   Typeset`skipInitDone$$}, "Body" :> 
                 Show[{$CellContext`staticPlotC3F26a, 
                    Plot[
                    If[
                    
                    Or[$CellContext`xValue$$ < -0.005, $CellContext`xValue$$ > 
                    0.005], (Sign[$CellContext`xValue$$]/(2 Sqrt[
                    
                    Abs[$CellContext`xValue$$]])) ($CellContext`x - \
$CellContext`xValue$$) + $CellContext`funcC3F26a[$CellContext`xValue$$], 
                    None], {$CellContext`x, -2, 2}, 
                    PlotStyle -> {Thick, $CellContext`bcR}], 
                    Graphics[{
                    Text[
                    "\!\(TraditionalForm\`y = \
\*SqrtBox[\(\[LeftBracketingBar]x\[RightBracketingBar]\)]\)", {0.5, 1.6}, {-1,
                     1}], 
                    If[$CellContext`xValue$$ < 0, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(lim\), \(x \[Rule] \
\*SuperscriptBox[\(0\), \(-\)]\)]f' \((x)\) = \(-\[Infinity]\)\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-2, 
                    0}, {-1, 1.5}], Black], 
                    If[$CellContext`xValue$$ > 0, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(lim\), \(x \[Rule] \
\*SuperscriptBox[\(0\), \(+\)]\)]f' \((x)\) = \[Infinity]\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {2, 0}, {
                    1, 1.5}], Black], 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((0)\)\\ does\\ not\\ \(\(exist\
\)\(.\)\)\)", {60, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {2, 0}, {1, -1.5}], 
                    If[$CellContext`xValue$$ == 0., {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Line[{{0, -0.5}, {0, 2}}], 
                    Text[
                    Framed[
                    Pane[
                    "vertical tangent line", $CellContext`bcPBS], \
$CellContext`bcFO, Background -> White], {-0.1, 1.6}, {1, 1.5}]}, Black], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F26a[$CellContext`xValue$$]}, \
$CellContext`bcB]}]}, ImageSize -> 3.5 72, 
                   PlotRange -> {{-2, 2}, {-0.5, 1.7}}, Ticks -> None, 
                   AxesOrigin -> {0, 0}, BaseStyle -> $CellContext`bcBSG, 
                   AxesStyle -> Arrowheads[0.04]], 
                 "Specifications" :> {{{$CellContext`xValue$$, -1.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, \
-1.9, 1.9, 0.01, ControlType -> Slider, ImageSize -> Small, ControlPlacement -> 
                    1}, {{$CellContext`xValue$$, -1.5, ""}, -1.9, 1.9, 0.01, 
                    ControlType -> Trigger, Exclusions -> {0.}, 
                    AppearanceElements -> {
                    "StepLeftButton", "StepRightButton"}, ControlPlacement -> 
                    2}, 
                   Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2], 
                    Button[
                    "\!\(TraditionalForm\`x = 0\)", $CellContext`xValue$$ = 0,
                     ImageSize -> {72, Automatic}, BaseStyle -> 11]}}]}, 
                 "Options" :> {
                  ControlPlacement -> Top, LabelStyle -> 11, Paneled -> False,
                    Deployed -> True, AppearanceElements -> "ResetButton"}, 
                 "DefaultOptions" :> {}], 
                ImageSizeCache -> {313., {121., 128.}}, SingleEvaluation -> 
                True], Deinitialization :> None, DynamicModuleValues :> {}, 
               Initialization :> ({{$CellContext`staticPlotC3F26a = 
                    Graphics[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], 
                    Line[CompressedData["
1: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
f77G/339H4o+80M=
                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{-2, 2}, {0., 1.4142135335115935`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    Ticks -> {Automatic, Automatic}}], $CellContext`funcC3F26a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := Sqrt[
                    Abs[$CellContext`x]], $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                    BaseStyle -> {
                    LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left, FontSize -> 
                    13}, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> 
                    GrayLevel[0.85]}, $CellContext`ClosedCircle[
                    Pattern[$CellContext`coord, 
                    Blank[]], 
                    Optional[
                    Pattern[$CellContext`color, 
                    Blank[]], 
                    GrayLevel[0]]] := {$CellContext`color, 
                    AbsolutePointSize[7], 
                    Point[$CellContext`coord]}, $CellContext`bcB = 
                    RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}}; {$CellContext`funcC3F26a[
                    Pattern[$CellContext`x, 
                    Blank[]]] := Sqrt[
                    Abs[$CellContext`x]]; $CellContext`staticPlotC3F26a = Plot[
                    Sqrt[
                    Abs[$CellContext`x]], {$CellContext`x, -2, 2}, 
                    PlotStyle -> {Thick, Black}]; Null}}; 
                Typeset`initDone$$ = True), SynchronousInitialization -> True,
                UndoTrackedVariables :> {
                Typeset`show$$, Typeset`bookmarkMode$$}, 
               UnsavedVariables :> {Typeset`initDone$$}, 
               UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
              Deployed -> True, StripOnInput -> False], 
             Manipulate`InterpretManipulate[1]], FrameStyle -> {
              GrayLevel[0.95], 
              Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False], 
           FrameBox[
            TagBox[
             StyleBox[
              
              DynamicModuleBox[{$CellContext`xValue$$ = -1.5, Typeset`show$$ = 
                True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`xValue$$], -1.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, \
-1.9, 1.9, 0.001}, {{
                    Hold[$CellContext`xValue$$], -1.5, ""}, -1.9, 1.9, 
                   0.001}, {
                   Hold[
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2], 
                    Button[
                    "\!\(TraditionalForm\`x = 0\)", $CellContext`xValue$$ = 0,
                     ImageSize -> {72, Automatic}, BaseStyle -> 11]}}]], 
                   Manipulate`Dump`ThisIsNotAControl}}, 
                Typeset`size$$ = {252., {76., 81.}}, Typeset`update$$ = 0, 
                Typeset`initDone$$, Typeset`skipInitDone$$ = 
                False, $CellContext`xValue$4487$$ = 0}, 
               DynamicBox[
                Manipulate`ManipulateBoxes[
                2, StandardForm, 
                 "Variables" :> {$CellContext`xValue$$ = -1.5}, 
                 "ControllerVariables" :> {
                   
                   Hold[$CellContext`xValue$$, $CellContext`xValue$4487$$, 
                    0]}, "OtherVariables" :> {
                  Typeset`show$$, Typeset`bookmarkList$$, 
                   Typeset`bookmarkMode$$, Typeset`animator$$, 
                   Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                   Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                   Typeset`skipInitDone$$}, "Body" :> 
                 Show[{$CellContext`staticPlotC3F26b, 
                    Plot[
                    
                    If[$CellContext`xValue$$ != 
                    0, (1/(3 
                    Abs[$CellContext`xValue$$]^(2/
                    3))) ($CellContext`x - $CellContext`xValue$$) + \
$CellContext`funcC3F26b[$CellContext`xValue$$], None], {$CellContext`x, -2, 
                    2}, PlotStyle -> {Thick, $CellContext`bcR}], 
                    Graphics[{
                    Text[
                    "\!\(TraditionalForm\`y = \*RadicalBox[\(x\), \(3\)]\)", {
                    0, 1.2}, {-1.2, 1}], 
                    If[$CellContext`xValue$$ < 0, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(lim\), \(x \[Rule] \
\*SuperscriptBox[\(0\), \(-\)]\)]f' \((x)\) = \[Infinity]\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {-2, 
                    0}, {-1, 1.5}], Black], 
                    If[$CellContext`xValue$$ > 0, 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(lim\), \(x \[Rule] \
\*SuperscriptBox[\(0\), \(+\)]\)]f' \((x)\) = \[Infinity]\)", \
$CellContext`bcPBS], $CellContext`bcFO, Background -> White], {2, 0}, {
                    1, 1.5}], Black], 
                    Text[
                    Framed[
                    Pane[
                    "\!\(TraditionalForm\`f' \((0)\)\\ does\\ not\\ \(\(exist\
\)\(.\)\)\)", {60, Automatic}, $CellContext`bcPBS], $CellContext`bcFO, 
                    Background -> White], {2, 0}, {1, -1.5}], 
                    If[$CellContext`xValue$$ == 0., {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    Line[{{0, -2}, {0, 2}}], 
                    Text[
                    Framed[
                    Pane[
                    "vertical tangent line", $CellContext`bcPBS], \
$CellContext`bcFO], {-0.1, 1}, {1, 1.5}]}, Black], 
                    $CellContext`ClosedCircle[{$CellContext`xValue$$, 
                    $CellContext`funcC3F26b[$CellContext`xValue$$]}, \
$CellContext`bcB], Black, Thick, 
                    Line[{{0, -0.08}, {0, 0.08}}]}]}, ImageSize -> 3.5 72, 
                   PlotRange -> {{-2, 2}, {-1.2, 1.2}}, Ticks -> None, 
                   AxesOrigin -> {0, 0}, BaseStyle -> $CellContext`bcBSG, 
                   AxesStyle -> Arrowheads[0.04]], 
                 "Specifications" :> {{{$CellContext`xValue$$, -1.5, 
                    "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)"}, \
-1.9, 1.9, 0.001, ControlType -> Slider, Exclusions -> {0.}, ImageSize -> 
                    Small, ControlPlacement -> 
                    1}, {{$CellContext`xValue$$, -1.5, ""}, -1.9, 1.9, 0.001, 
                    ControlType -> Trigger, Exclusions -> {0.}, 
                    AppearanceElements -> {
                    "StepLeftButton", "StepRightButton"}, ControlPlacement -> 
                    2}, 
                   Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2], 
                    Button[
                    "\!\(TraditionalForm\`x = 0\)", $CellContext`xValue$$ = 0,
                     ImageSize -> {72, Automatic}, BaseStyle -> 11]}}]}, 
                 "Options" :> {
                  ControlPlacement -> Top, LabelStyle -> 11, Paneled -> False,
                    Deployed -> True, AppearanceElements -> "ResetButton"}, 
                 "DefaultOptions" :> {}], 
                ImageSizeCache -> {313., {121., 128.}}, SingleEvaluation -> 
                True], Deinitialization :> None, DynamicModuleValues :> {}, 
               Initialization :> ({{$CellContext`staticPlotC3F26b = 
                    Graphics[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], 
                    Line[CompressedData["
1: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
D4HQo1w=
                    "]], 
                    Line[CompressedData["
1:eJwVkWk41YkChw0OPZbJZGeSY49EqEbUr9GhFJkhg3LN0MZI4Q6VrFmGriFu
m91jzeCoQUiWsh+ecI4lshyOI/t2/vbyv90Pv+d93g/vpx/V7ZbtVX4+Pj6P
r/s/jSl6+WzuBaTOZN6+2FCNiKxrnyrXHaHBu++Z41cDRbrFbprvNUQL1k6f
n36LAIpXr72RN6z002YiTzRisvRIdoyeH/rb6/rGVJph58bnU6MdgLlMvniN
+hbUSzBOLKuHwDyB2tqq04Yno5ZRiRL3MdDiUOLjy0DHq4NeB+Ii4DhYtG2V
2g7+OMkLzaJ/Impi/eoGvQO3TIepW0KxqGL5202lvUee5LtdjyLiEHrw5oPI
kE7c9GOty4Q9RL9iz8xj7S7kWFWOvNhJhN+LW9/LLXcBldrMoOOPkKWgbsq2
7sagalrT2cDHCPKSo8zndUNiO6xoYvMpsiobvjOwYSKo4FyA3Goq9PP1GpNC
WJCTrvXiGqbjcS3HQrOZhbJQfdd/fDPQyXo6wRDpwWqhiJrGRiZKOQLLXXE9
0AlfFKn3y4Z3id6VrIheOJtI7ipWyYE0YauZ19CLWN4RSnJnDvK2v4iaf9OH
hcvB5L/35+EG4nZn3OnDPzRxQnP4OdT0LY+FOvXjByGd4XgaHRNSOVrBCx/g
UXt+MHCZjvL5+ayMvQNI9vft90gvQW2nQ/MeqwEE84amqIEvoGsU7SSUP4DR
y2qc7d6XSFv8Xr3afhBZtNL+kpgyFFtJJZxN/ojXyua/aLDL8C/xSW5X/Uew
Pvf1pB4ph+Z2iOf85EcIlm91x3DKIfGTvyxxaAhX1c06Lh+vwImqOf2QhiFo
CXXXyy5XgWZ8v/lO3zBKWhYKQhzr8MnynkBryyhGXMSD9ArqQK22DFsdH8W3
azo/jW7WQeSa/SbxZRRHEo3uZVjXw8Dod89X8mw8qvehkgtfvb1bVvs8Gz/v
nfOqPfQOpg6yhpalbDD62ELHKxpR82ouzdp7DG4q3kuPRhtxwP+D/bN7Y9j0
IgfmhJvg6+L0oCdqDFoUpeJUxyakRttTVdLG8KfhJbvPm02o//XTiEzbGGgP
ezOqTVuQ4DCd+0BpHDWWjB+OvWsDkdLI/7R+HAuHjRp48204V7Fkq9s+DiWV
dOtieQbe7+p/V9E7juAtHzdlHwYWfkyKLJgZx8lC+Vgh5XZIlknvEZTioFHM
Y5QZ1AGl7U3PkiscMDqFozyNO+GXNfGfZzsczP6d5XHekYkQHaEpR3ku1gbd
+Zu8mCAzZQwfUrngE9VLMQln4suHmH1v93Mh41ndoUVnosYiRVziGBdmOj16
AoIsqAQ6/3X5IhfPCilrFSUszETr7ptN4oJW5H6fKtyLJgm6QrPUJNKKD6YQ
5f2wlQkNz9yexBvXKGn9iiGEDhyIuR0yhQCppF6bPWM45/w5WJCYRkdXD42Z
zIG/63WxdN1Z+LQf1YiXmUTHqfgz7afnkNNJk77WOoXI/BvMbbd5xBZVPBe2
moX57eZVE6cFfPPfHssGygJU6e6u+XaLkC0obMk5s4RyM4nsPXJL6MsPVaVE
L0PQ4Wjkq+AlXCrUjvIdX8GZmC1b+tQSTFOETZrUCewPlxNUPL0MTnzVmlrE
Kk4FvadJFiyjTDVkljq0hukmpcFzlBWws28bCO7dQPh6QZiS4wqYWuahvDub
+I4ds1hDX8G+ZHPl1pot/NGTnTz6eQVP/nbaNP68jev3XnIUTvPAqjMbqLT/
gtKW3ZxDj3nwfOsiuvfZDoytnMwWPvLgljHw5E3aDvA7tUB9mIeLQRdUnLN3
YJDHmHYe4eGM8VnjFPoOZKUWNxhsHtReHr4u37SDqfeNNrlcHoYyxRqkV772
d6umbRd5sAp9HfCtFYkf1WyVEvkJnHI5LET/mUSqiHt/owCBY6YvEqwdSBhe
avNcFySgtZH7PNaNBFMhWcNZmICgd0KfyF0Sc2J5XFUxAjW/uhsI55G4HjyZ
WCRNoOw4pyavkER6YAdlWIZAkaKLpcVLEusihRfE5Qgk99v9FvmGRMHNwCgv
BQL+NogTYJFY+CXJ5MA+Al66r+WzP5CI3rkRf0mZwBXRw7lmIyROjv1V94BK
wLZF+03YNAl+m7GyKVUClrm5p6mLJIzbtAJkv/52MlyZVU+QmHb+pGihQeCo
a4rLb1skrvppJv+hSeAgZGZIkoTCXR6RpUXgf2y7Uqo=
                    
                    "]]}, {}}, {{}, {}, {}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{-2, 2}, {-1.2599210327530899`, 
                    1.2599210327530899`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    Ticks -> {Automatic, Automatic}}], $CellContext`funcC3F26b[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 
                    Sign[$CellContext`x] 
                    Abs[$CellContext`x]^(1/3), $CellContext`bcR = 
                    RGBColor[0.92, 0.11, 0.27], $CellContext`bcPBS = 
                    BaseStyle -> {
                    LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                    LineBreakWithin -> Automatic, Hyphenation -> True, 
                    TextAlignment -> Left, FontSize -> 
                    13}, $CellContext`bcFO = {
                    RoundingRadius -> 5, FrameStyle -> 
                    GrayLevel[0.85]}, $CellContext`ClosedCircle[
                    Pattern[$CellContext`coord, 
                    Blank[]], 
                    Optional[
                    Pattern[$CellContext`color, 
                    Blank[]], 
                    GrayLevel[0]]] := {$CellContext`color, 
                    AbsolutePointSize[7], 
                    Point[$CellContext`coord]}, $CellContext`bcB = 
                    RGBColor[0, 0.63, 0.85], $CellContext`bcBSG = {
                    FontFamily -> "Times", 13}}; {$CellContext`funcC3F26b[
                    Pattern[$CellContext`x, 
                    Blank[]]] := 
                    Sign[$CellContext`x] 
                    Abs[$CellContext`x]^(1/3); $CellContext`staticPlotC3F26b = 
                    Plot[Sign[$CellContext`x] 
                    Abs[$CellContext`x]^(1/3), {$CellContext`x, -2, 2}, 
                    PlotStyle -> {Thick, Black}]; Null}}; 
                Typeset`initDone$$ = True), SynchronousInitialization -> True,
                UndoTrackedVariables :> {
                Typeset`show$$, Typeset`bookmarkMode$$}, 
               UnsavedVariables :> {Typeset`initDone$$}, 
               UntrackedVariables :> {Typeset`size$$}], "Manipulate", 
              Deployed -> True, StripOnInput -> False], 
             Manipulate`InterpretManipulate[1]], FrameStyle -> {
              GrayLevel[0.95], 
              Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}, {
          "\"(a)\"", "\"(b)\""}}, AutoDelete -> False, 
         BaseStyle -> {"TR", 13}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.26\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.26  \[LightBulb]: Cusp / Vertical tangent \
line",ExpressionUUID->"1fcd7bca-e47d-4a39-8669-c941ec960c91"],

Cell[TextData[{
 StyleBox["When Is a Function Not Differentiable at a Point?",
  FontWeight->"Bold"],
 "\nA function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a2aecb18-cc83-42d2-9a0b-28dada6ec4c9"],
 " is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "d963875c-efcd-448f-a629-f5000fe4c8b5"],
 " if at least one of the following conditions holds:\n",
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "018bff55-b154-4eab-ba0a-93774acfa63d"],
 " is not continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a99f5d9a-1cf1-40af-938f-0d150216866f"],
 " (Figure 3.24).\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9e5dc164-724a-4bf5-ac44-4f34102ac306"],
 " has a corner at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "4ad011cf-23ef-4ed1-bc93-ccd70e2f3229"],
 " (Figure 3.25).\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "36de3f21-7be2-4fdd-8633-ca858bee857b"],
 " has a vertical tangent at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "fa867acf-0004-45fa-b4cc-d538e3e00097"],
 " (Figure 3.26).",
 Cell[BoxData[
  FormBox[
  Cell["",ExpressionUUID->"8d42f03a-82d4-47ef-b975-8a02e87d4114"], 
   TraditionalForm]],ExpressionUUID->"f87d5122-0d53-4350-82bf-de128b751cdf"]
}], "Important",
 CellTags->
  "IMPORTANT When Is a Function Not Differentiable at a \
Point?",ExpressionUUID->"c1a9c9e0-7fc3-43a3-ad09-c2e6b32320fc"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 7\t", "ExampleFont"],
 "Continuous and differentiable"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 7 Continuous and \
differentiable",ExpressionUUID->"f487797d-4782-42f9-a5e4-91f56bd489fb"],

Cell[TextData[{
 "Consider the graph of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "7403be43-c9a4-4633-b794-18c1d8b383d3"],
 " in ",
 StyleBox["Figure 3.27", "FigureFontText"],
 "."
}], "Text",ExpressionUUID->"e4424189-4bbb-453c-8677-193e6358ded3"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fd44a82d-7248-4cf8-94a1-b2def6fe2482"],
 " in the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], ")"}], TraditionalForm]],ExpressionUUID->
  "aad17a09-34e7-4902-be59-af654f995e7d"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "b7866a05-e8e4-45fc-91e8-33f4106f42cb"],
 " is not continuous.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fa276b1b-7b72-41fa-ae6d-46d9086186c6"],
 " in the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], ")"}], TraditionalForm]],ExpressionUUID->
  "a1220201-89e9-4e7b-8376-9b3b744d374c"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "5dd240b7-619a-43c8-b441-fd09dcd670c4"],
 " is not differentiable.\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tSketch a graph of the derivative of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "71491d0c-53ae-4c93-bdb5-6795739e38eb"],
 "."
}], "Text",ExpressionUUID->"fdd8d140-9c65-4cdd-8143-422bc44cf269"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1:eJwV1P8/FHYcwPHP+XZffLkWrpR8KXGVlcqXEd6mmvJILksoJZa+Tm4mmyOl
ZfFwvpQySkWrkFzFFhV6ryRM0RZKvly6fM3Xw/n+Wfvh9Xj+By/jgGCPQCVC
iNvn/rcmKWaSUi5mCILnECKF1CZ2QNksF52E7W/LlaXgtzSxKnKGi7Ikz9/j
mFIYfpiaNjHJRX7tOmttrhTmd2Rby0e5WOzG8jU1kEKgfXVIRy8X61yzsrfY
S2G2S6u3ppGLrI3/Oqb/LIVVzmnv0u9wMdTWJmjNkBT8C0dFQm8uNn80SJKM
vYfIQxXPNJlcFD+9LWnoaYcaG48n64u0MMOb/cCy6QP0lvOP39+rhU73YmKb
W2QgTw35MMDVQv66HE+Luo9QZcZk7S/WxOuxPZ0vGjqgvm5Ha2iAJp5MmNqX
9aYTqsv09rrO1cTMpwVtRlVdkHjELNP3kQZ6l8YZ9rzohnW7c+KtDmugoEtt
t99fPWBwQMbPXqCBOdUeMZy7vVC76shpz3J1PC8sC6EFn+CQQ2B89Y/qWO5S
tzvzeh/8w74liNRXx9h2hlb8rX4Q9uc+r6jg4F1Lpdy8vAFQzFvU0xjGQS3f
10YlboPgRt5VLzXioPhEkfvz2kEQf6nhZVfLRsmjoOP8zUOQrhebFf8TGy++
LUyQ1AxB86LHl48Zs9H6W/+UWrdhYB04tNH0FQtDP77/7ZuKYVAO3pOnLWJh
pM9wVPsmOXQ+qih5zmehaUf9vtdP5MAw7jmh85aJUS+NnPztRqB7gzfjyikm
XkubmplbMgIP821X9q9m4sGI3IcLrEZhZ32gXkSTGo5Dp49L8Sis0nW7n3la
De32ivu1bMegLz17VmyphvrpKqfM742BqGWL6v0WVaws1Bg/ulYBg4GBRTfE
qji/s/N7Zr4CMtRsF650UEVe2PJGO5Nx4O33cpB3qGBbx/SSlBvjEM7p5pxI
VUFX4bXgrw0mIC/oWaoLqODJd42XdbImoEJX92VDnzJ6+UmrHRZOAq/BsGj2
sjK2OQr6GCmTYOV5bM93LspoQQTDPTpT4KDneC9xTAlNmhaPLUucAu2MbU/G
riih7EJMc8IX02BoYxSj2KSEHvnuxeJz06AzL0BeNs7AgJZP595zZuDNn/2G
T7MYaD+gJ9iVMAMx6f2KBAEDi/UWaKxgzsLBC7nRQ4SBsqvRpReiZkFPcKfq
7C2CTczwbUsJhUJ3fum4D8HQ2PUyTjgF67TNTcneBO9cOltsGkGhWHpYwfci
+EnSJnY+TqHkh/zVPtsJ7q+PsBJFUyhPWXPzwVaCOxf/8Wt3HIXXjfZJovUE
nUtMllVepDDit81/2pzg3EHVozElFMJyQqLOryDorrzdOauMwvhgyiXz5QTF
vGu8UqQwHd1Q72tGUM3B8fFIOQWV67tcS40JTsaFzdn3goJOV+DaKB7B9iWd
Bc6tFFItzgh4ugQNbazO7JFSmB+eEyTRJujr+ssuUTsFfU5vduscgg1CQ5WC
Dgom5kJ9UCdYXerlaTxA4WboWdtGNkHmqxvLHIYo8EsLdgSzCG6QyWe85RTM
t44mX1UlWMZJvpmsoCBJ5UlsVAhOLWoV3Z6gYNFm83etEsGvVpu7V05RKDDz
6TrAIHhsg2iJbIaCpVCk+nljWOBVqaCUwn+38Wh3
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             GrayLevel[0]], 
            LineBox[CompressedData["
1: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
Aw77CzQ=
             "]]}}}}, {
        PlotRange -> {{-4.5, 4.5}, {-2, 6}}, AxesOrigin -> {0, 0}, 
         AspectRatio -> 1, ImageSize -> 360, Ticks -> {{{-4, 
             FormBox[
              RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
             FormBox[
              RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
             FormBox[
              RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
             FormBox[
              RowBox[{"-", "1"}], TraditionalForm]}, {0, 
             FormBox["0", TraditionalForm]}, {1, 
             FormBox["1", TraditionalForm]}, {2, 
             FormBox["2", TraditionalForm]}, {3, 
             FormBox["3", TraditionalForm]}, {4, 
             FormBox["4", TraditionalForm]}}, None}, 
         BaseStyle -> {FontFamily -> "Times", 13}, AxesStyle -> 
         Arrowheads[0.03], AxesLabel -> {
           FormBox["\"\\!\\(TraditionalForm\\`x\\)\"", TraditionalForm], 
           FormBox["\"\\!\\(TraditionalForm\\`y\\)\"", TraditionalForm]}, 
         Epilog -> {
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`y = g(x)\\)\"", TraditionalForm], {
            4, 4.5}, {1, -1}], {
            GrayLevel[0], 
            AbsolutePointSize[7], 
            PointBox[{-2, 2}]}, {
            GrayLevel[0], 
            AbsolutePointSize[7], 
            PointBox[{{-2, 3}, {2, 4}}], 
            AbsolutePointSize[5], 
            GrayLevel[1], 
            PointBox[{{-2, 3}, {2, 4}}]}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {-4., 0.45}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {{-4, -2}, {0.5000000306122447, 1.9999999693877553`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.27\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.27: Example \
7",ExpressionUUID->"f54fdb65-8062-49c2-a9c2-7f89bd429762"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"4b524403-28b9-44dc-8433-a4391c1c0e7a"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tThe function ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "54c59245-8b59-49a2-8979-85dc745cc5c3"],
 " fails to be continuous at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2"}], TraditionalForm]],ExpressionUUID->
  "ece4343e-bca6-4460-99e6-f75580718d61"],
 " (where the one-sided limits are not equal) and at 2 (where ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "3a8bb406-4d6e-4d5f-a202-4ffd5870874e"],
 " is not defined)."
}], "Text",ExpressionUUID->"cfe8ea23-dd49-431f-88f4-80787f946904"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tBecause it is not continuous at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "2"}], TraditionalForm]],ExpressionUUID->
  "e329f6ee-649a-475d-88b4-8deb6df5c754"],
 ", ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "75039e38-82f6-4aa4-a2e2-312ca77e38ed"],
 " is not differentiable at those points. Furthermore, ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "8e1af160-4fe0-4728-a272-fca58c25c9a1"],
 " is not differentiable at 0, because the graph has a cusp at that point."
}], "Text",ExpressionUUID->"52590bc2-a622-45bf-b4c2-79b7088da86e"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tA sketch of the derivative (",
 StyleBox["Figure 3.28", "FigureFontText"],
 ") has the following features:"
}], "Text",ExpressionUUID->"da9adbad-8102-4137-a4c2-7c114658b023"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"g", "'"}], 
     RowBox[{"(", "x", ")"}]}], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "9baf14e8-23cd-4b00-aa75-79491361bd62"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "4"}], "<", "x", "<", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "feff6589-4256-4cb8-95ac-e0cd7bd87707"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "x", "<", "2"}], TraditionalForm]],ExpressionUUID->
  "f2f279cd-727a-415d-bbdc-ce97796125f9"]
}], "Item",ExpressionUUID->"a9f572ee-a803-4320-acd8-1bda47e84e9f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"g", "'"}], 
     RowBox[{"(", "x", ")"}]}], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "98ace95d-b80d-41d4-8974-5fbe16737554"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "<", "x", "<", "0"}], TraditionalForm]],
  ExpressionUUID->"95a2460b-8f6f-4e82-8344-02311c94e4ba"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "<", "x", "<", "4"}], TraditionalForm]],ExpressionUUID->
  "b4bd2aad-b422-41d0-8078-bd703495e4dc"]
}], "Item",ExpressionUUID->"8bb67f60-fb62-48ac-9ac6-eca850042d18"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "eae1d992-7140-4c27-a779-44b26cf06580"],
 " approaches ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "5b442e63-4db2-4e5f-86ae-243dfbcbf362"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", 
    SuperscriptBox["0", "-"]}], TraditionalForm]],ExpressionUUID->
  "695cbbf5-e2fb-4f0c-b6a3-6e3ab838ff8e"],
 " and as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", 
    SuperscriptBox["4", "-"]}], TraditionalForm]],ExpressionUUID->
  "ca0a821e-f8ae-48eb-a766-48d77f8536f1"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "afb9afe8-1c45-4a78-a12f-8d53be442c3c"],
 " approaches \[Infinity] as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", 
    SuperscriptBox["0", "+"]}], TraditionalForm]],ExpressionUUID->
  "4c61f6ff-d5e2-4351-bab7-46a5145c689a"]
}], "Item",ExpressionUUID->"c543061f-7966-41cc-9c17-b58595966a4b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d7917e95-9355-458d-b5ac-86c2f92da5fc"],
 " approaches 0 as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", "2"}], TraditionalForm]],ExpressionUUID->
  "5233a62a-18f3-4e37-bd8d-561cb64a8612"],
 " from either side, although ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "'"}], 
    RowBox[{"(", "2", ")"}]}], TraditionalForm]],ExpressionUUID->
  "c82dbd52-cbe8-442c-a3f5-0f562dc78448"],
 " does not exist."
}], "Item",ExpressionUUID->"2f6b28fd-e271-46a1-99b3-78ece0a0a35a"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.92, 0.11, 0.27]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfb9y8p///wUPMIDBB/t5gS+FHjxD8GM17TUPnEXw
ZSbc9HGbjuC/ZZwzOyMFwb+fVBzZZYTgC1Vb8hX9EYDzw+epv/t6EsG/W8Fy
1H4ygt/q9I2rMxbBtxMXqMnTRvAL3QxPGL/ih/M7Sya9O9SC4D9pkP0coIjg
H/zd+jRrKx+cf6jHTm9vAILv2nMlZfZjXjifO2tKZUUFgv8ldsmTXhEEP/7A
RFv9FTxw/juL8284nBH8//KvOvOucsP5wU/1WC9nIvinDhy+ls+K4B/mMps2
YwYXnP8g68fqn0YIvsPKJ/Mjz3PC+Uph6xpdkxF8dckTOzP/ccD567z235ec
iOBXRD14fEIVwU9rCLTbcJAdzr8msqBNORTBz9pvp3r+PRuc7+jBvqiyB8Gf
Zb+WZ4MCgi/mu/is3B5WOF/kZFmNpD+CbxY9q9HnJQucP/v085S6VgS/aZWQ
mY0kgt8zvzfWaAsznC/B/KxoixuC/9wlI830NhOcf2uO1YZ3ZQi+f/Kr58Zc
CP5z+1elG5cwwvmHfgk/0nVE8OVVpG3MrjLA+QuSi96UFSD4H7cvrbS2QPCd
eG6yARlwPgDw8wNu
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.92, 0.11, 0.27]], 
            LineBox[CompressedData["
1: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
6ar+T+CzWNooX8NHXDVOaOs2REMwejEmlspPnnjP1ZtKRGNnlkhiWDo/GZjX
Y1zOiYLOw2yeX8kCREBn4KbvQiSW5JfazyuvJWp+9wRCjCKRXCClnV6xlgSu
tCin9EbAIEWkOHNuHXmt61X5RikC6kPcFUdSBEkah/rLwNGHSCwpMqzeKURm
7txCQlAYXKkXwqweCRGj1bV9lRtDoeB2/pvWohCJDlnH2V10H9btygJmLsKk
n+/vrfOm9xBcPmJHhoWJWli8gcTgXfh9NXne7ypC7ggOO1D9g5GZYUS15xAl
rY9U75pJBOFQ/5ijbqIo2SLmm+6Scwfc0obNHCfEiPuTqvr7RgFYfUcwv1Na
nFRJ8THSem9j79/rivtmxYmcRorU/VF/vOzU8/KekiBkj4Z1zUY/MG+ParSL
SpGzunUvVkx90cP6ZjtqL02W9U/1afl74dXfgTZjYzIkzvj3lus512Eutkug
n7aB6JjecMjudUOQR11CzsZNpDBJwqxp4xVwDIiNygjIkYnXWu36/o4wOLVX
zEdoK1EptrIq7bXD59qKIwyuP0in/3zlaf+TOP8p3DZkXolkbrkZGeRvhFzz
5jNbxKjksMNwC/ntUKnerGIJyyTyf+pxI6o=
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.92, 0.11, 0.27]], 
            LineBox[CompressedData["
1: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
ausYlEe78F/7rU28kOJlbGxg8P9/F/E/AkQfiA==
             "]]}}}}, {
        PlotRange -> {{-4.5, 4.5}, {-4, 4}}, AxesOrigin -> {0, 0}, 
         AspectRatio -> 1, ImageSize -> 360, Ticks -> {{{-4, 
             FormBox[
              RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
             FormBox[
              RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
             FormBox[
              RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
             FormBox[
              RowBox[{"-", "1"}], TraditionalForm]}, {0, 
             FormBox["0", TraditionalForm]}, {1, 
             FormBox["1", TraditionalForm]}, {2, 
             FormBox["2", TraditionalForm]}, {3, 
             FormBox["3", TraditionalForm]}, {4, 
             FormBox["4", TraditionalForm]}}, None}, 
         BaseStyle -> {FontFamily -> "Times", 13}, AxesStyle -> 
         Arrowheads[0.03], AxesLabel -> {
           FormBox["\"\\!\\(TraditionalForm\\`x\\)\"", TraditionalForm], 
           FormBox["\"\\!\\(TraditionalForm\\`y\\)\"", TraditionalForm]}, 
         Epilog -> {
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((x)\\)\\\\ is\\\\ constant\\)\"",
              TraditionalForm], {-4.5, 0.9}, {-1, 1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((\\(-2\\))\\)\\)\\nundefined\"", 
             TraditionalForm], {-2, 1.2}, {0, -1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((x)\\) < 0\\)\"", 
             TraditionalForm], {-1, -1}, {0, 1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((x)\\) > 0\\)\"", 
             TraditionalForm], {1, 3}, {0, -1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((2)\\)\\)\\nundefined\"", 
             TraditionalForm], {2, 1.2}, {0, -1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((0)\\)\\)\\nundefined\"", 
             TraditionalForm], {0, -1.2}, {-1, -1}], 
           InsetBox[
            FormBox[
            "\"\\!\\(TraditionalForm\\`g' \\((x)\\) < 0\\)\"", 
             TraditionalForm], {3, -3}, {0, -1}], {
            RGBColor[0.92, 0.11, 0.27], 
            AbsolutePointSize[7], 
            PointBox[{{-2, 1}, {-2, 0}, {2, 0}}], 
            AbsolutePointSize[5], 
            GrayLevel[1], 
            PointBox[{{-2, 1}, {-2, 0}, {2, 0}}]}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {-4.5, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {{-4.5, -2}, {0., 2.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 3.28\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 3.28: Example \
7",ExpressionUUID->"7eb26245-7507-4d42-a40d-60e39c2e3c84"],

Cell[TextData[{
 "Related Exercises ",
 "53\[Dash]54",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"f82b287b-9c97-4407-9130-f36f1ed17422"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises  \[RightGuillemet]", "Subsection",
 CellTags->
  "SECTION 3.2 \
EXERCISES",ExpressionUUID->"d98292cc-7727-4023-9fe6-fcdd8c0d5577"],

Cell[CellGroupData[{

Cell["Getting Started  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Getting \
Started",ExpressionUUID->"69895706-b08e-4689-b8d0-a67a5848bfa7"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tFor a given function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3ab46385-510a-4581-8b30-ab15342bcdab"],
 ", what does ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "e3914e32-b9a2-4c05-82f9-bf2ed9d57ba3"],
 " represent?"
}], "Problem",ExpressionUUID->"1256c0ab-7486-42b6-a65b-7a7cddbdfa90"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     RowBox[{"3", "x"}], "+", "2"}]}], TraditionalForm]],ExpressionUUID->
  "2c00b738-916d-40c1-876a-a258c029dc45"],
 ", find the slope of the line tangent to the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "696de13b-dde5-4576-913a-9d50bd80b81a"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", " ", "2", ",", " ", 
    RowBox[{"and", " ", "3"}]}], TraditionalForm]],ExpressionUUID->
  "e090c11d-c848-4bdd-b647-8fb819c8e2af"],
 "."
}], "Problem",ExpressionUUID->"9fae3a10-35d2-406b-b4a6-a3a2045b54ee"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tWhy is the notation ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"5041d138-ab22-4b62-bdad-68cfb49e90c2"],
 " used to represent the derivative?"
}], "Problem",ExpressionUUID->"bd9cb6af-bb35-469b-8ef7-f527b4ff8517"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tGive three different notations for the derivative of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b0f8fdbf-de4d-4e0f-8ef4-f383a25f08f0"],
 " with respect to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "8436a46d-fdf8-4ecf-99ef-a98747dd9127"],
 "."
}], "Problem",ExpressionUUID->"4a6a4b0c-2d08-4de6-8951-173914d5d2aa"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 "\tSketch a graph of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "88e9128d-5cea-4699-8daf-be22d4621cee"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"7df6de6a-1d7e-4dda-a787-828ae0a504ce"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "d19354be-03e6-439b-a405-db9d3dfdea7c"],
 " for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c1c406c6-2aa4-4f7a-b7cb-efc1003b088f"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "679264ae-d71b-4ebf-a28c-2bad91bb3316"],
 "."
}], "Problem",ExpressionUUID->"5d907e65-e1c0-4350-8a8a-77ecd905eb06"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 "\tSketch a graph of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "bcef33dd-d7a8-4772-8d3f-fa257c7ca7cc"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"5fe975b7-f94a-43dc-bced-11af034928e4"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "8847346d-a318-46c8-bb1c-6b14db428400"],
 " for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fe620fd3-bfc2-436b-bdeb-b8dd30f917cd"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "dfcb734a-b359-4e21-a518-c49ba97af37c"],
 "."
}], "Problem",ExpressionUUID->"560da633-dd89-4fdc-98c9-28fb1152a578"],

Cell[TextData[{
 StyleBox["7.",
  FontWeight->"Bold"],
 "\tIf ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "457e10b4-f687-4c2a-bf8a-561d9d5d0420"],
 " is differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a210b07e-b9dc-4246-88c4-a91391904c67"],
 ", must ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "61f2c022-6259-446f-9470-53a93bc61f36"],
 " be continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "93c14ebf-b726-45bd-80ff-0b60a248c894"],
 "?"
}], "Problem",ExpressionUUID->"6de69f7f-4686-49df-9fe0-127298418562"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 "\tIf ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "12901bbc-82b2-42e7-a4ea-4b13c52288a2"],
 " is continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "689707cd-334c-41cd-a59d-a942431777cd"],
 ", must ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "715e7124-182f-4e0a-98c5-7de7e34c8842"],
 " be differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "bf4d0fe1-5af7-40af-9709-74f26fe8f96a"],
 "?"
}], "Problem",ExpressionUUID->"e0f980a0-2188-4df2-9af6-0689fd33b661"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 "\tDescribe the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "4728d13d-8ddb-48fa-a520-988fdc3e3b03"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "0", ")"}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"8a3dc171-2bbc-4de8-9367-444959188b20"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "99defec8-451d-4cf2-b566-5c41e5bf6e47"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "\[Infinity]"}], "<", "x", "<", "\[Infinity]"}], 
   TraditionalForm]],ExpressionUUID->"dfe43cf2-8263-48f2-a4bb-112832d89aa2"],
 "."
}], "Problem",ExpressionUUID->"27ba4d8f-8614-4bf4-8abc-60773c65f18b"],

Cell[TextData[{
 StyleBox["10.",
  FontWeight->"Bold"],
 "\tUse the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]}], 
   TraditionalForm]],ExpressionUUID->"2a3b75a6-eba0-48ac-b0a2-a05a35bc38a8"],
 " to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "734084e8-f49b-40c3-82db-3f8b0f9b33fa"],
 "."
}], "Problem",ExpressionUUID->"653c8b9c-df7f-4bfd-97b6-fdf1c1d7746e"],

Cell[TextData[{
 StyleBox["11.",
  FontWeight->"Bold"],
 "\tUse limits to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0cf99330-8ab7-4162-be8e-36cc17a5509d"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"7", "x"}]}], TraditionalForm]],ExpressionUUID->
  "39197752-c993-4e56-b576-edbb34bdfdba"],
 "."
}], "Problem",ExpressionUUID->"3ab68d2f-9492-484b-9d89-200bc00b2f11"],

Cell[TextData[{
 StyleBox["12.",
  FontWeight->"Bold"],
 "\tUse limits to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "43f8d792-2b17-453b-a815-d3a360fd28fd"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"-", "3"}], "x"}]}], TraditionalForm]],ExpressionUUID->
  "4e32de76-01bb-4b64-b342-57f2fd754623"],
 "."
}], "Problem",ExpressionUUID->"22939cee-962d-4ec8-a342-a5d71e981d2e"],

Cell[TextData[{
 StyleBox["13.",
  FontWeight->"Bold"],
 "\tUse limits to find ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"8ed2bdb4-74ee-47f8-bef7-13784ca66497"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "4142238f-4da9-4803-b1e8-990ab3cf65c4"],
 ". Then evaluate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "y"}], 
      RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
    RowBox[{"x", "=", "3"}]], TraditionalForm]],ExpressionUUID->
  "225726f5-455a-4684-90b0-d1402794e828"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{
      FractionBox[
       RowBox[{"d", "\[VeryThinSpace]", "y"}], 
       RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
     RowBox[{"x", "=", 
      RowBox[{"-", "2"}]}]], "."}], TraditionalForm]],ExpressionUUID->
  "2b047f8d-9704-46cb-acb5-99d9e160f969"]
}], "Problem",ExpressionUUID->"678f49a7-d019-448f-85d2-229af8e4317e"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 "\tThe weight ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "7c303c97-a048-451e-9783-40b19e627218"],
 " (in pounds) of an Atlantic salmon can be estimated from its length ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "1838b172-59c0-4761-974c-1122b790b343"],
 " (in inches). If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"33", "\[LessEqual]", "x", "\[LessEqual]", "48"}], 
   TraditionalForm]],ExpressionUUID->"4397b604-59a2-44e3-bf02-a259497b8b48"],
 ", the estimated weight is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"1.5", "x"}], "-"}]}], TraditionalForm]],ExpressionUUID->
  "df0ed577-a79e-4a26-ba13-9cfb17093926"],
 "35.8. Use limits to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "bde57a1a-693b-4024-b41c-fb34d057c9eb"],
 " and interpret its meaning. (",
 StyleBox["Source",
  FontSlant->"Italic"],
 ": ",
 ButtonBox["www.atlanticsalmonfederation.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.atlanticsalmonfederation.org"], None},
  ButtonNote->"http://www.atlanticsalmonfederation.org"],
 ")"
}], "Problem",ExpressionUUID->"bd717769-ca05-4b4b-9314-c39c2a2b7971"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 StyleBox["\tMatching functions with derivatives",
  FontWeight->"Bold"],
 "  Match graphs a\[Dash]d of functions with graphs A\[Dash]C of their \
derivatives."
}], "Problem",ExpressionUUID->"b5994208-58c7-40b9-a1c7-35fa86b710f4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 774}, {942, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{942, 774},
  PlotRange->{{0, 942}, {0, 774}}]], "Output",ExpressionUUID->"43866ce5-150b-\
4ce4-b552-917b0d0fc078"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3X1sndWdL3qLW/qCZjinvMTEwUhXpz3qjQrpiEa9f6DLXEonU8GkIicg
JnB1BJzCAC0X2hRS1D9vG4YAKiEv0CY0SXFIAaeBEjAWEq2HUAdImloTM2AY
CZfYxCRuCXVisB3fZT/2k+3X+G3vvbyfz0c/bW3b+2U9+8XPd6+9nrX+9+v/
3yU3nlJWVvb9z4aTJdfd9X9/73vX/fB//Nfww5W3ff/mm2779v/65m3Lv33T
t7/3f17/v4VfHg+X/Wk403e+FwAAAAAAAAAAAAAAAAAAJqyurq7YTQAAgDHd
cvPN7e3txW4FAACMbuHChbW1tcVuBQAAs0Z3b8/RQweam5s/GvMix8JfW1vf
H/sCExXu6LzKypU/WTntWwIAoGR1H+1oe7ehYcfmB9fff803v/jVheUVc+fO
q6i4+Dfvjbxwz7GW6sWfK587N1TZon+t/2Rad11bWxvuaOnSpdO6FQAASlrz
ff8thM/zKitDTK2YtyDJouF82SVrW0Ze+o9rkgsPRNZ76qdz1yt/sjLc1Be/
8IXp3AgAAKWt51hLW/tHH/X2Htn39PVnlCdZNDld0Xh0+KUP/+6i8r40m/TB
jp5pJ2zp0qXJ7TQ2Nk7jZgAAyIzWmivOOieJoyGylq14Ydjfu3t72rbfmXTA
9vXBXv344Wnc2xe/8IUQVkNt3rJlOq0GACA7/rTmsvLB7tPKz39n9BGqrTXX
n1He17+6et+U76ipqaliMPfe+f3lU74dAACypbUm9xv/W/b8ZdRL1d1Ydl5l
5R2727t7e6Z2P49VVaX3snDhwmm0GACALDl+qHrx59Kez1GPqOo51rL2S2fO
m7No68HuKd/Pnd9fngwGCBWir1UDAACYoENbb0pHqFaefldj5/Hhl+jvgy27
ZMN0Dra69NJL04EHoawaAADARL37REVOklzVPPwb//cfvSH8dayhAhPR0dGR
zkKQ3JdVAwAAmKied1aXnZ1+WT984YDOPbefXj7Nmazq6urSIQdJML522bLp
NRoAgAz5w4rzT0xateKF3IOqWtb/c/jlVa/9eTq3n6wUUJ6TV60aAADAxB2t
+WGaJz9zwX0nhrB+tOv6M8qH/GZKrl22LLd/NYmsTU1NM9B0AACyIGfhgHPP
vvLZ9z9Julj3P7CkfNqdq8GX588flldDPVZVNRNNBwAgA44fevTvT097PgcW
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
oYbqh5YvXTQwLW1/+OwbHXH2lcu37zvcNeoGfZhMs5DOJNaXV79xU3ovoYUP
7mwY9lSMukUzvznTfrLCn8KTterbV6ULHITTT31t8fceeqqhYU/4/epprzUh
r06ZvApAvkWYV0NeSie2SuYKKLv68VFvo237nen8VxVDI27yy29Vj5xW9Njr
9TVbb/v6Gf/9gmSZrdDCFzsHjvYaNq3Wisaj4QpHDx0I6TEk2/LBpQ3KLlmb
G49C0E2iVPnQCpe88LIbQsLMvfu+6PXIrcl9lQ82NVws7UPuqF93xVnnDCTV
OYtCJNu+6ach440/P23zff8td+hv7vy3J5o9ODxg/C2a2c2Z3pPVr+edX/4/
n04uk6w98esdz4RnsGLegqRVoW7Z85fRrzth8uqUyasA5FuEeTXkk3tOnZOb
ZypPv6t+RHfd/geWJPnns5ff9dSr/9HW/tFADDt9YBr85K9n3fva4DWO5U70
mganys9/56XfvpQ7eX569f/5820PXvE3aRJL21N2yYYhebV/+YOQM3Ozbl8I
HGfkbc42hpyWPkIh1KV9pJ+6vyb3kUv+lNz4yMPQ/vrmyy+9/G8hit9zyX9N
o/6pX1kZfrlr1666urr639e39GfRk27RDG7ONJ6s1LG6G8uSBsx9eHv30Y40
qIcWpkv6yqtFJK8CkG8x5tXB6ZjGuZFDW28aWEh0xYibP/Lqj06bkySZ5DLJ
Alt9PYHVD925atXq2y4f1o/61YV9qSmk0/CnNOwlebXva/T19yfjBE4cAjY0
r6b+sOL89Op9IXCcw52OH6pe/Llwyc9ccN/b6S9ba9IZvb564T+M+Ep9yMMy
Z/P+UR+65xd/5kQ7R4xfPf7m1qtuvGXdmocmskXT3ZxBU3iyTlxg/4YkVye3
PKxXueuVe+XVopNXAci3KPNq39pMw3o7V75xNP1rCF1Jwhm137W3f03YIUHr
kiHDTUO42nbx3w50LZ6zMP0yOslCH9TcN7BawaJ/PRGQBvPY+Hm196NduQeL
jdW85JLXn1Ee2nbxb95Lf5d2rpaP8bi1/uLqE72dwzZqwIdD8uoYCbN/o46l
D8KYWzS9zUlM88lKBzOHqzd2Hh959d3f7Qve8moRyasA5NusyKshxuQEkhPd
jGP0Mfb2djamXzQnoXT9gSH9cumhSUk/atmKF4Ze/1ju9879hubAsfLq0IPF
QrOH9xYOCiFtZCj905rLTnzjf/aVO0Y+boOPbV+uWzJqGyaUV/scPzSRLZrO
5vSb3pN1/NCvFv6X5AE59SsrR/bc9vZ3sYYLjNWwiZNXp0xeBSDfZkVeHfKF
7+CX5iE+DUuhJwwNY6GWvNia+/fWX1ydJsMJzpeVG3HHyau53+mPeaTYYAdv
2d2/y/11+u12Rf8I1VF6I3Me2zH6GyecVye4RdPYnNyrT/HJ6s+r6TM1+vq8
nXuuP6P8qtf+LK8Wi7wKQL7NlryaHKrf2z8Y8kSP35xFS/7xm/+4aNGlQ13z
zS8OmxGrbO3usW5/gi3Mjbjj5dWcHsW+I/RHdO32efeJYRs16MOGR24Nm3Ph
ZTeMnAGgt/8Io3Q8QGj2aHNGTSKvTmyLprM5M/BkvfHji3JHt572gydHpvTO
l18L2V5eLRZ5FYB8mxV5tW8Gp4Eb+bB68edy/5T7bXVFzuRIw+JuyDm505ZO
Ia/mXmXcvDqwqmxaI0NjyGAhfX3mgvtGG4A6ur+++fLzD9yRdnUmc7GO1uxJ
5NUJbtE0NmcGnqxkpEF6rfL+AQPLt+9LN32aMTUlr06ZvApAvkWYV0MCGbZk
QM5gzhN5rPLz39l38Ehr6/vt7e1hK9rG1tzcPGyO/bzm1Z5jLavLzk4D3vDj
jDobkyPi0yO8xvVhMlFqOnHTyZo983l1GpszE09WzsFxaYV4fMqFt4/aBT1l
8uqUyasA5FuEeXXYqMWK3LGanY3pPJ8j5yCduLzm1d5h34NXVOSOrkwGqY5+
OFWu/iWukoUDKvrn2grxLFlJocB5deqbM0NPVvd79SES5w4YSKfP/fTyn4cY
PMXbHUpenTJ5FYB8izGvttbkTqPU9x10eiDPkVfTif0neJzUqPKdV3M3ITlM
abDPsG846GgzEuQ6liTVJCKGpHoikuU8toXMq1PcnBl6svr0vPPo35+eTJOb
drGm0+Qu375v+h2t8uqUyasA5FuEeTWdXj69kRMH8uRGoP6Ovqm1Me95tX9e
0PTYqBOHKfUfLx9aPvLQpAGdjcn6U8m1Vjcc7j7aceKvxcqrU9ucGXqyBh1r
eOTW3Jlac/tax1zLdcLk1SmTVwHIt9jyajpaMr2FIQfy9LwT/noiZY2zQui4
CpBXe/dvSKNaesx7MuH/mEda9S/2lB6CdMfu9uEXKF5encrmzNCTleuTtv1b
b/t67gssbdUoD9dkyKtTJq8CkG+x5dWRnatLXmzNuYEheWyioyKPH9py7fzc
LrhC5NWhS2JVnn7XvoNHknG5C54Y9UirY3U3lqXfdI/+DXsR8+qkN2d4Y6bw
ZIWb7Xz5tZEjVP/65stJL3Tu8IAJPSljk1enTF4FIN/iyqv94yRzO1dzhkom
Phw2t3zZ1qaT3ur7j94Q8kxurCpEXu1fXzXN3uH0qhtvuah87hjzpvamx1Il
33GPvsBoEfPqJDdnZGMm+2Qlt7D2S2eG18CoeTi3PcnEBaMu2DpB8uqUyasA
5Fs8eXXYYeAVY6w4n3wHnXuY/PgH8iQHsFd+/ju5N1WYvNrbuSddaTT9ln/M
I62GPm6jjghNpkKdRF5dO15+mPQWTWpz+k37yToWNmfYc5crjax9oxTmLBo7
OZ+cvDpl8ioA+Zb3vDqxb4GP7Ht6WM9qSCmjx48RsweccuHtYwWVjvp1ySFC
w76znm5eXTLRr56TufTTubnC6VhHWr3/6A25GzVn8/5xbq1izBmxhubVcds5
hS2a+OYMmOaT1b9Ua7jW6L3NvQOzvyY3fupXVupfLQp5FYB8y3deDWFjVfN4
cw0lR9AMG7MaUs1YXWrBH1acnzsdaN8R6xUVy7fvSwc6hrTT/V59uNnkYp+5
4L63h95C6y+uPtFReeZ1E8irH9Zec0p6p2WXbJjo0lSDa5VWDLZkrCvm9p2O
1hXZt3DAsDUU0g8COVF8yJJSuR3U4TINOzY/uLNh8MJT2qIJb05qek/WQPwu
+5fqsYbIpts7YujI5MirUyavApBvM55Xhy1NVTHaXEPdRzva3m0I8Wn50kVf
XVg+7PJ/d/MjLeOvs5nTa5c7e3zIQucvWrx06dJkkqWBC8xZNHLJ+3R2por+
9T1HXmC4oassnXy2/xOGxMKxD03q7f3j8Jwf7iXEy4aGPc8/cEcyHeuwVD/3
4e2dL7+25dr5ZWvSQ+8HDtpKb+S0Hzz5dv9Yi3CxIYdxTXGLJrw5qWk9WQN5
NVk/a9QbT9eovfg3701kA8Zsprw6VfIqAPk2U3k15JYQQdOe0twDYcKZT31t
8a3f/d4tN98cAuplF341GQA5LL30zaJ51/odjYcmcnfH39yaBpWKwauXD862
lFSSf1Y3DPuiu282/mHJsGzJhvG/Sv6g5r5hoTrkwA+OdEwk4iVjMkMLxz00
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
h+p8+bV9B4+EM2ZYBYD4yatkTdKPqjcVAGYLeRUAgJjJqwAATNBf33z5yede
K/DXlPIqAAAn1f1e/erbLg+h8dML1rYU9q7lVQAAxpEm1YElIC/ZcLiwDZBX
AQAYVUiqW2/7evlgUk2mgpRXAQCIwbtbrx9YT2f9/cvmn5jDXF4FACAGR/Y9
fWI9nT+ukVcBAIjNiXkAGuRVAAAiJq8CABAzeRUAgJjJqwAAxExeBWDyOjo6
9gIUxLtbr6+YtyAJjadcePtTr/5HQ8Oegt37pZdemkz9+lhVVcHuFKD0NDU1
FTiv1tXVzauoSHs8lFIqT1U+WBX9qwaE/zzlxW6SUkqpKdS1y5bJq0qpkqxk
Zat0fSullFKzsUJulFeVUiVZelOVUqpkSl5VSimllFLRlv5VpZRSSikVeRU+
r+7tP2b20q9/XSml8l1LFyw4MSpg3oLzFy2+5ptfLNjpVxeWJ/e+cOFC//eU
UmqKdemld999d4HzKkDhNKxJvtAJpwWef7W7t+cfFy1K5iXYbf5VAABGVdT1
AhYvXpz0r1ovAACA0VnfCgCAmMmrAADETF4FACBm8ioAADGTVwEAiFluXl0i
rwIAEJeuV+4tP9G/uralsPcurwIAMJ7OxurFnwt59bzKyiS13rG7vZD3L68C
ADCK1pre5auvuvGWEBTL+ysJjUlqLfvGTXeuWvXww1UF6GuVVwEAGKnt3YYH
199ftW7dhs2bNm/ZkpzJPV235qEHdzYUoCXyKgAAMZNXAQCImbwKAEDM5FUA
AGImrwIAEDN5FQCAmMmrAADETF4FACBm8ioAADGTVwEAiJm8CgBAzORVAABi
Jq8CABAzeRUAgJjJqwAAxExeBQAgZvIqAAAxk1cBAIiZvAoAQMzkVWa9hjXh
BTzvnIXj++qF/5CeX/KP3/zWXet/veOZPW+1dPf2FHsDAIDxyKvMdt3v1T9W
VfXs+lXL5s8t738xz6uoGKfCZdIKP37qa4tvqHm7rf0jwRUA4iSvUhr60+ax
d7dePyyynnv2lf/z59v27t1b12/7pp+uvu3ycJnzKiuTvJpefvn2fR8VeysA
gJHkVUpKZ+OPTptTkRNZy1bvH3aRkGx7jrU0VD90xVnnJJesGOxunbN5+IUB
gKKTVyktHz6/+DNpCg1Vtnb0F3Zff2zPO4/+/enJxZLu1lArGo8WuMUAwPjk
VUrLkLza37+6b7yLH/7d9WeUJ6MCkshadvXjRgUAQFTkVUrLiP7V8fNqb2/L
+n/OzbfnnnndCwIrAMREXqW0TDqvJtNhpXXu2VfukFcBICbyKqVlunk11B27
2wvSVABgQuRVSsvk8+of9a8CQNTkVUrLpPPq0ZofzquoOJFXjV8FgMjIq5SW
yeXVnmMta790Zm5eNT8AAMRGXqW0TCqvHtv/wJLynAuH4Gr+VQCIjbxKaRme
V8dYsurYkX1P3/6NM4YdabXgibcK3V4A4GTkVUrL8PUC5s1Z9OimRx9cf/+6
NQ+FCmdWffuqZfNPrGl1UXnf+c9eftfqhsN9i14BAJGRVyktw/tXk7WrygfP
pOuu5g4D+Fb1W729x4rdcgBgdPIqpWV4Xg111Y23XPPNLy6++JI0oyapNe1f
DaenXHj7gzsb9K8CQITkVUrLKMdb5abQ7qMdbe82NOzYvPq2y4d1t4bzn738
rh2Nh4rYegBgJHmV0jJ8/Oo48wN0v1e/5dr5uX2t4fTcs6989v1PdLQCQDzk
VUrLZNcL+DBE1iHHZ1VUnPaDJw93Fai5AMBJyauUlsmvx9rZeM+pc9LLJ2MD
Vr5hFlYAiIW8SmmZfF7t7W39xdXpElfJwICye+oL0FYAYCLkVUrLVPJq7/4N
SV5N57z69IK1LflvKwAwEfIqpWUqebVt+53DpmwtW7LhcAEaCwBMgLxKaZlS
/2rDmnQ8wMC1LtmgfxUAIiGvUlqmkle7Xrk3d7mrvmtd/fhHBWgsADAB8iql
ZQp59VjulFbJeICLf/NeIRoLAEyAvEppmXRePVrzw2Qaq/Qq55553Qt6VwEg
GvIqpeXD6sWfG5JXH/n3sS7a3dvzQc19uYtbJal1yYuthWwxADA+eZWS0lpz
xVnn5ObVUy68vf6T4Zc6euhAQ/VDy+YPGbOa1IL1r1uMFQCiIq9SGkLI/Oub
Lz94xd/kfrOfdJmGuvCyG2797vfu/P7yq268JcTUkX2qfcNWz1m4fPsEJhMA
AApLXmW2O/7m1ovKB6b6z52WKp38vzwnuJYPHaqa1Gcvv+vBnQ2Hu4q9JQDA
aORVZrvu9+qr1q3bsHnTLx/eFE43b9mS/vjopkfT0+T3j1VVbdy4MZxWVz9V
W1vb0LDngyMdxd4CAGA88ioAADGTVwEAiJm8CgBAzORVAABiJq8CABAzeRUA
gJjJqwAAxExeBQAgZvIqAAAxk1cBAIiZvAoAQMzkVQAAYiavAgAQM3kVAICY
yasAs9Vrjb0X3KCUUiVfSxcsKO/Pq/u+vKTojVFKqVlcy1cXOK52vvxab9nF
SilV8rVs/tykf/W1sq8VvTFKKTWL64q7C59X+7oair7hSimVzwr/6ORVpZSa
mSpGXi3+ViulVP5LXlVKqZkp/atKKZWH0r+qlFIzVvpXlVIqPyWvKqXUzFTB
82r30Y6+KQJef0MppUq7Fl98ybyKipBXG3ZsLnpjlFJq9taf//PdAudVgIxI
5l8tnzu3/vf1xW4LAAAMl64XsNt6AQAAxMf6VgAAxExeBQAgZvIqAAAxk1cB
AIiZvAoAQMzkVQAAYiavAgAQM3kVAICYyasAAMRMXgUAIGbyKgAAMZNXAQCI
mbwKAEDM5FUAAGImrwIAEDN5FQCAmMmrAADETF4FACBm8ioAADGTVwEAiJm8
CgBAzORVAABiJq8CABAzeRUAgJjJqwAAxExeBQAgZvIqAAAxk1cBAIiZvAoA
QMzkVQAAYiavAgAQM3kVAICYyasAAMRMXgUAIGbyKgAAMZNXAQCImbwKAEDM
5FUAAGImrwIAEDN5FQCAmMmrAADETF4FACBm8ioAADGTVwEAiJm8CgBAzORV
AABiJq8CABAzeRUAgJjJqwAAxExeBQAgZvIqAAAxk1cBAIiZvAoAQMzkVQAA
YiavAgAQM3kVAICYyasAAMRMXgUAIGbyKgAAMZNXAZhdGhsbV/5k5bo1D+18
bmex20JB1dbWhuc9PPvhNVDstlBQ8mpmJW/5cNrV1VXstlA4bW1tyfO+YfOm
YrcFpmjbr7bNq6gIdcvNNxe7LRTU3XffHRJLeOp//rOfFbstFJS8mlnnVVYm
//A7OjqK3RYKp7GxMXne//7ii4vdFpiikFeTPZe8mjVJXg0lr2aNvJpZIa8m
T31nZ2ex20LhyKuUAHk1s+TVzJJXMyvNq/pXM0VepQTIq5klr2aWvJpZ+lez
SV6lBMirmSWvZpa8mln6V7NJXqUEyKuZJa9mlryaWfpXs0lepQTIq5klr2aW
vJpZ+lezKWt5dedzOw8cOFDsVjDD5NXMklczS17NLP2r2ZS1vLpx48bwUr92
2bLa2lpTDZcMeTWz5NXMklczS/9qNmUtrwaXXnppsskLFy5c+ZOVzc3NxW4R
0yWvZpa8mlnyambpX82mDObVvXv3JptcPndu8rK/dtmync/t1N06e8mrmSWv
Zpa8mln6V7Mpg3k1uPP7y8MmJ8s4prXgggtW/mRlU1NTsVvHpMmrmSWvZpa8
mln6V7Mpm3m1vb39y/PnJy/43Mia/Lh06dIdzzz98ccfF7uZTJS8mlnyambJ
q5mlfzWbsplXg8eqqnKTam5kTSoEWt2ts4W8mlnyambJq5mlfzWbMptXg8WL
F4+TV5MBruHM0qVLN27cGB4oA1yjJa9mlryaWfJqZulfzaYs59Ww7eFlP1Ze
HVlf/MIXQnZd+ZOVtbW1bW1txW4+J8irmSWvZpa8mln6V7Mpy3m1t39nF175
5TkDWcfJq8Ni7cKFC0M62rhx4969eyPpet21a9eCCy7IYIWPEsmTEs6c/+Uv
F709qmCV+9QXvTGqkJWGli/Pn1/0xqhCVrpT9t8+UxXe6UkAC+/9ojem8BVe
7WE3Vz52Rh0rsibnc7teFy9evPInK3c883Rr6/vFyqt1dXUT3JCSrJN+4lCl
V550pZTKTmX5f/7ChQvTLtaJP1a5j1gy0jWp5KaSlQgKv/BrxvOqUkoppVTp
VYiXX/zCFyZ7rVEHu54Y3fr8zoMHDxY4qSY6OztbMunnP/tZ8nTccvPNzc3N
4fEPHxaK3SgKITzjyYfE8NbzvGfKpZdemvzv3fncztbW1mI3h8JJh4I0NTV5
12dH2iO3cOHCrD3vYWPDPm5SnavDImt40O78/vJHNz1q9oDiSmYnK3e8Vfbc
3X+8VXgXO94qaxxvlVlJXg3/880PkCkhaCXPe/isWuy2FFp7e/tkO1fD5a9d
tiyZIsA7JR7mB8iskFeTjyryatbIq5llfoBsSuYHCP/tMzg/QPpN4vgZ9cvz
59/5/eWPVVVZOyBa8mpm3W0+q6ySVzPL/KvZlPSvVmQvr+7evfukvalLly6t
rn7Kwqzxk1czS17NLHk1s/SvZlM282pXV1fY3rFi6vlf/rKVWGcXeTWz5NXM
klczS/9qNmUzr6aHk4/sUN3xzNOOnJp15NXMklczS17NLP2r2ZTBvNra2jrs
MKsFF1yw8icrm5ubi900pkhezSx5NbPk1czSv5pNGcyrIdKkc1Jdu2zZzud2
dvf2FLtRTIu8mlnyambJq5mlfzWbspZXk/lmi7X+FHkir2aWvJpZ8mpm6V/N
pqzl1XVrHqqtrdWhWmLk1cySVzNLXs0s/avZlLW8SkmSVzNLXs0seTWz9K9m
k7xKCZBXM0tezSx5NbP0r2aTvEoJkFczS17NLHk1s/SvZpO8SgmQVzNLXs0s
eTWz9K9mk7xKCZBXM0tezSx5NbP0r2aTvEoJ2LVrV0iq1y5btnHjxmK3hYJ6
rKoqeepra2uL3RYKSl7NrOQtH07l1Uxpbm5Onvq777672G0BgAmRVwEAiJm8
CgBAzORVAABiJq8CABAzeRUAgJjJqwAAxExeBQAgZvIqQG/vsdbW95ubmw93
jf7no4cOhL+2tX/U3dtT2IYBIK8C2dX2bsP2TT9dvnRR+dy551VWhtNTv7Ky
sfP4kAt1Nm697evhT/MqKsLpt6rfKlJjAbJLXgWyqLPxnlPnhPyZJtXkP2EI
pVe99ucTFzv8ux+dNie9TDgtu2TD4eK1GiCb5FUgizobq9ate+rV/2hr/+j4
m1uvP6M8+U8YQmnZPfXpZUKmrRiMskmaLbv6cXkVoMDkVYA/rbks7UT9zAX3
vR1+dfxQ9eLPhf+Np/3gyQ+OdDRUP7R86aJv3bV+R+OhYjc20z5p21//+/ra
53dWVz/16x3P7Hmr5aNiN4nC++ubLz/53GsGk2eKvJpl3vKZYkc/nv0bTgwJ
mLPoxc7e1l9c3fft/9WPh0cpeY+EU2+WIjqy7+nbv3FGMoQjHU4cnq9zz75y
9esGFWdF93v1q2+7PDzvn16wtqXYjaGQ5NVs8pbPFDv6kzvy6u2nl6df+t+5
atUVZ51z7pnXvSDTRyB8TGh45NbcUcTDTsv7u8H9Kytt6W7LSPJsklezxls+
U+zoJ+zD5Nv/ipxUf8fudh2qRReegv0PLBl2WNywSj6Cla14wfNVksJuK5mj
I/dlYOeVNfJqdnjLZ40d/aTkDmHt+yj3L9X6VmPQ9cq95YPjNJZv39fa+n5H
R0fbuw3PP3DHsIkdQq1842ix28sMe3fr9X3/o75x04Pr7182/8T/LjuvrJFX
M8JbPoPs6CclPFzpSIlwZkVj1h+QKBw/tO3iv+37T7XoX+s/Gf7H8Bl87ZfO
TF/MyewNPmWUmCP7nt7zVsvAB+o/rrHzyix5NSO85TPHjn6yDv/uirPOSQ+5
2nqwu9gNInzSfqJvoPWZ1+0Y69WZM/A4vJgrT79r5Kud2e7Etz8Ndl7ZJa9m
h7d8ttjRT1b/BFZpgB+yagBF0vqLq8NzcfFv3hvnMoe23pQO5Dj37CuffT/j
r+OSZueVYfJqFnnLZ4Ad/WQdf3PrReVzR1k1gKL5cNvFf/vVC//hJK/M1pq0
Yzy8jE3pUMrsvDJMXs0ib/nSZ0c/OT3HWtZ+6cyQ8E+sY3XJBtMmFFff7BY7
Nt9Q8/ZJLte5J/2mILyMx/xCgRJg55Vh8moWecuXOjv6yUomUsidOcHkq0U3
0QUacl7GlZ//TtaHtZQ2O68Mk1ezyFu+1NnRT07/4lYhoK5+/a1fLfwvaXA1
Z8LscOTV688YeBmXrXih2K0hn+y8MkxezSJveRJ29EFn4z2nzgmPwB2728NP
u787Px0SsOCJ3MW/PvzPN97W4RqhozU/TMZgh6fslj1/KXZzyCc7rwyTV7PI
W55+dvS9vcdCQO07uuqRf09+Do9J2r+aO8fX+4/eEH7zv/79r8VqKKPq7u2p
veaU9L+ZIcclzs4rw+TVLPKWJ6s7+u6jHe3t7WkK3f/Akr6lrK5+PN38dJaA
kOHPPfO6FzuTy/UNGLDi1Sh63nl2/aoNmzeF2rxlS9W6dVM7E+rBnQ0fHOmY
9Dpr/fO2Gb9RBEV56u28MkxezSJveXozuaN/94mQRfvW8+pf8CtZ9K3y89/J
Pa6q51jL6rKzkzW/wiOzYP3rHfXrwrUcfjW6I69ecdY5yWMVTtPu+imcCTX5
OW+PnfjMZf6xAivKU2/nlWHyahZ5y5PJHf2f1lxWPji9alLzzlk4LKt39/b8
YcX56aoBycXS0a0M17nnR6fNWTgTRj4XJ9X1yr1J4Dn1KytPNhcGM60oT72d
V4bJq1nkLZ952dzRH9p6U7LV6emoKTR9cNLToQdeEYeed+45dU7fsI2zr7R4
blbYeWWYvJpF3vIZl9kdfWfjlmvnlw/ON7u64fAY3/AfS6djnTdn0YM7Gwrb
Sk6uu7dn93fnJ0M7svUazjg7rwyTV7PIWz7DsryjT6al7T7aEYw/FnWCF6NY
Gh65ddThHJQ4O68Mk1ezyFs+w+zome2SOcfOq6z0Gs4cO68Mk1ezyFs+q+zo
me26XrnXEXDZZeeVYfJqFnnLZ5IdPbNdR/26cQ6Uo/TZeWWYvJpF3vLZY0fP
bHf8za3Ja/iGmnHntDjy6u2nl69o9A1CKbLzyjB5NYu85TPGjp7ZLl13bMmL
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
    "], {{0, 766}, {912, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{912, 766},
  PlotRange->{{0, 912}, {0, 766}}]], "Output",ExpressionUUID->"5d56dfca-b63b-\
4dcc-a21f-d1d448b774e6"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 StyleBox["\tMatching derivatives with functions",
  FontWeight->"Bold"],
 "  Match graphs a\[Dash]d of derivative functions with possible graphs A\
\[Dash]D of the corresponding functions."
}], "Problem",ExpressionUUID->"80dc77b2-8106-446a-b731-9f4fa20a02cd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
cmycKO6B0HdyLADpCjk2PHcvXLjQ03fv9ry76MHPf/pLX/zig9Pn1H6c9miG
QvFdo8GI/dhQO3bsSHssmSHHApCumGMH2YbaP/+B8Fz2hb7569snhnr8sSem
v/jiT3++6f2d+48O4fUZJh/+bEJlZWlFRajwQckP1mb+refiu0aDE3Js3NhO
ju07ORaAdA1JP/bPm9+e/Y9PP3nb2BiKKsrL47Nb14rBKXwQzxbPH07v++aj
P1q9ZdQG2qaaGXG0sS669qX9aQ9pkIrvGg2SfuwAyLEApGtI+rFB7OaFQFs1
pqxTjr3g+qp5y6pr1m3YXPvOqlWr3pg/N6TWm8rOniEJtBVlX5r+1uZRGKia
1z+fRL727uXNr4zCQfZL8V2jQdKPHQA5FoB0Dfn82KaaGYVd2fDx1E3HOp0n
hN5Qhz7cumrpS5MuH1fYqg1VOXbKm9uPjK63uY/++qGxZckb8X+z4t/THtCg
Fd81Ghz92AGQYwFI11D1Y8/aMi+2WGOOrbzi3rcbej1/65EPZk9KQmxSE1fu
amgdmhENiZbjB1YFS18adRm7O/vnP1Ay9996P0+2rtFw048dADkWgHQN/XoF
W+cVTioIOXZt7zm2oz3bWPtq1yhb8vKGoRnSUMhS0jv660mXjzt/js3QNRp+
+rEDIMcCkK6h78f2P8dGrTurbyobn7zTHev+jX8amlHlR+vxX3ztgvCbP2+O
pZB+7ADIsQCkazT0YxPN65+PSxkUzpX95YmhGVdOHFzycJzRIcf2i37sAMix
AKRr9PRjo/eqrqkYf9U5swtm1g7NwHLg0FvfT2Ymy7H9oh87AHIsAOkaVf3Y
dg3rJl0+rnBJqIrS239y+DxHfLU0NdWd0a+jw1raToVvKZwp2nL8QPtP+UtT
L99y+I/1/biMQWifOXz0QKiDBw6GC+19RmsSYk/n2Nd+1/dLGbFr1DaIG6vw
e8MHQzu/Vz92AORYANI12vqxbV1asiHKTly5q9tznjy0ffWsqofuvirZTyHW
g9PnrK47z06rIa/ueXfRk7eNDTk5nrllX+3iB65Jfsh1r27senFvzJ/70Niy
wl0DWndWP/7YE892Z/q0aZ2XAmg9vu21x8LwZv/j09NffHH2sy/8p2dnhH9u
OdxwTqJrPbJt5cvT7r0tXqlk/Yfwy5z+1uajzS1drs2xZM2H5Ddf8vffKhxJ
+MZuf4EjdI0GeWO1nQo31vP331X4vRdcP/GJl1ds2/Leoke/Ped3g51HrR87
AHIsAOkadf3YtvYtUzsvXHB/ddfG3aG3vt/poLAkyCUrd3Xzw1uPb659JySf
khvKkhH+8sTpo8w6/aintjeG72g8eiCkyrhbWYyUJfcsTrYeC+k3yVeFG0CE
f37hrimd0mPIYyH1JRcUzxnONn/f2WTYWPvqpMvHxb0hQsYOUW3V0pdC/Euu
V9f1dfe+9B+TzbmSYSSDCR+073RQMM1ghK/RwG+s6NTuf/76RUl2XbCgumZN
TfXjtyYvdsIP6bpGcX/pxw6AHAtAukZhP7btxPaZF5YmsSd88KkxT9We27H7
YPakGGM+Mfl7Nes2HP5jfcxmVWPKCo8Uq3ix9mzeaz0em5aFm+SGc4ZYGH7C
Q2PP+cZYDy/659fuuKxwj4Z4hpKbC1Jfx8+P64YV7lDW27TeU7vjFQxnC/mt
MJGGvJf8nAtnrQ3pPflq/FL7lSov73T4W8POdXG7tJk3/1XSvL3o2tnhkyGe
hQq38u442n21I3yNBnhjFQzmN1NK4hnKFi1taWpKXtGEEcbvDadVGwa7p7F+
7ADIsQCkaxT2Y0N0iStHJQmn0w+pq55yOn39YG3n+FK/8ZlLS5PvDR+EhBPT
UXvncOXLcxbMmvPdiYVvTycfhNQavlT4veEzjz/2RPiWwvkGnVJf4r2qaz77
mc8kbczeDrNqPfKTr1wWo+buws/vW5Ns1xu7xOd+V/uCWsloxy3rHLfCFay5
++Ikonc7P7Z1Z/V933x04avzRugaDfTGOmvb4tgT7vqT287srhvOoB+bCjkW
gHSNxn5sx3ZUyRvlMUc9t+P0gVchicUvdW3SRk01Mwq/t+TmV5KZn3E/3Bi6
YnyqKPtS8r52TFB73l10en7pbTM/OHmmHdrxLUmG7Db1FR6hFr69p+HFc8b2
7+Rf7S+cLxE7rjE0drsP2sElX01SX+H1Oq31SJJje1+vIPklDPc1GsyNFe34
h5vil8JPCDdHVyFsh6/qx6ZCjgUgXaOwH9vWkWM7vct/uuF2ZpH/UF0bkqed
2F41puzsu9VlX+o0V7Ot453uc7qRP1ibfKkj4x3vcjj8sRgRu74LXyg5Qi2e
rZvuYocQ3mKTuVNS/cO8O5PQ2P1+vlvnJamvcEZrp0GeN8eO0DUa/I3VemTF
F8fEL1107Utd+7FtHS3Z8O36samQYwFIVyb6sWcbbmfeeQ9f7ZpOTzvTlkzS
0eRfde5cHlzy1eQn92Vdr7Zzo29PqS8O7+zZujs8LekGlzz9605fie+SJ7N2
u2lgdvxu4/Xqrj/Zrxw7/Ndo8DdWQY4t7Wmf4hPbHxpbdv/GPw1yGS792AGQ
YwFIVyb6scmBPHXVU5IlUkP+vG/y5Ac//+m/vn1i+ODLN95415133nrLLfHQ
/nPere6Sf8LP72nybU8Ko2+Pqa9gCmv79IBxf9dNfvvwZ/E3ExdDONexba89
dsftt3/hrs4rEkTJkU3dtnP7m2OH+xoNyY214x9uKmzLX/zkG53Se/gtHdqy
Ycvh/t/JzqUfOwByLADpykQ/tnLslI4fcmzl3Zckx+Of7qaOvypZeaCwf1tY
Ifx06iIW5uQ+jrAw+vaY+s5srZsMsmuYjMHsomtnd+4R96ph57rVs6pie7Pn
Yfcvxw7zNRqaGyvOWCisirIvTX9rc383UDgv/dgBkGMBSNco7Me2tJ1Kju45
t/d4NqeFZLvlcMPBAwdD1fVq7969XTcOKMzJfc+x551N2taxvcKckiuSq9/5
+KYT25+5tLTbxal6cCwu9Hq2sdnbsPudY4fzGg3NjRUuPeThrnH3guurum1Z
D5h+7ADIsQCkazT2Y8+dFXl2LmjHurKxxddpAdX+Glg/9uwxVj2nvrYz76cn
PczCqZtxBmz3x3B10rGl16TLx8XlC+6a+ebquo87zSsYfI4dxms0dDdWy77a
EJW7beGO/c7cwc8oiPRjB0COBSBdo7Af23b018lyT6dTVjyAqH5jXNypPR31
7eCsngxfP7bdvjVh/OXJOq73V58+85m5poXLI3Sj9XhMsHF4IcGejWoFx3mN
WD92gNdo6G6sdie2v3bHZZ1CbLjcGPKnv7V58I3ZjPZjTx7aHh7CNWtqVqxY
sWrVqvd37h/yGRe9kGMBSNco7McmK+cndfoAosJo1NEVHPAYh7Uf29axXFWS
+s6uJdVx/H74Id0d4XVGR2A7vbFs2Zfm/O7cw/AL1t0ayX7sQK7R0N1Yp7Ue
37f868letGeny3Zchd62te2bzPVj/7z57bizcOmZtdpKz6zY9sr7e0ZmDHIs
AOkabf3YZDZmEmXPHkB0anfhRM3etkk9n+Htx7ad3YXq9FA7jsEPMeycq9NV
x/5WSTLpZm3/tPqxA7hGQ3djJUKkP3loe/Xjt5Z32UG4vGMvsMH88Az1Y9t3
pnvtsa7d6cID6C5+8o1+HUg4MHIsAOkabf3Yrs3Ygi2izslpfZ112Xpk8QPX
dOrXDXc/NllSNTk2asvhhjjp929W/Hv3b4K3Hv/NlJJkVCGHdHOe9Pqx/b9G
Q3Bj9bSmVsPOdZ2mGbTPbTjvVehVVvqx4XfSaRePrpVsBDyEx8F1S44FIF2j
qx97Zh7m2fWg7q8uOID9nGjU/tV/Of+7yQeXPBx+WqesNez92DMLRiVX5L5v
PnpTWftvY3Vd93u7tu6sjn3F+EZ89xtUpdiP7fc1GpIb69i8qz4Z7gNd81h7
xH3r+4UveXrauLaPstKPTTbLqCi9ffpbmw8eOFhf33Dow62rZ1WVn7vkcrgX
Jbs5DxM5FoB0jZ5+bDwsvbxgVfzOSzx1LN3f6Yf3fgDR6aPpu+yNNez92LbO
kwROf2MvR3id+3vrdg5tuDr96Md2u/vVCF6jwd9YLU1N4Rp1v7VZh8IoG3Ld
+VeB6Fk2+rEdXfH25vNtM7v+TsIjKMT+czaV6Hb/taEjxwKQrmHvx/btDeU/
b3570uXj4vqoMWGGb+ym0dexlEHyw8OZL7i+qqcOZ2Ptq/HZ/CvvfNR1H4RB
9WPv6dNb2J32ogof99IfO7jk4cLrNW5ZN2mq8Aeefz+v8w1yuK/RENxYHbvW
9tidbju9em0c0kXXzi7+fuyHP4vrmPWY2Os3Vo0pS26jrq8Eh5YcC0C6hrsf
G55MX9zb2yS9eOROfOYtDDzdPv+2tJ16r+qa+J5prGTlpWQWZThPy77a8DOT
w8R2d/k5B5d8NX5v6dnNwnp37Bdfu+Bsm+vmxX06iKZjw9bCA9a6jiQRe609
dy/bN0QobISGMyQvEJJ34eMWWskU1rONzbZTe95d9KPVW0byGg3FjXU6mXfd
kS05Q7zKpYWrgQ1IJvqx8X4bon4v56mrnlJ4J+nphcOQkGMBSNeQ92PjVlwx
scTnuK5rIrU0NR36cGtIVtPuva3khrLC3Btq7HfmhtDS4/uhHV2+TptbxUv8
69sn3jd5clwJKnmv+fQKUecK+Sr5xrOrSPXizPu5PfdCu3VOVvybFf/e23m3
zOv0ewiXEpLnti3vrZ5V1WlB3Xh9yxYtPbRlw2t3XHZ6CkHHkWKFGxaE+Le7
4+3mxQ9c03kOwAhco7bB31jtOTZ+tfuVtToW/oo5tuB4wIHIQj/2WLjJzt9i
7ZhknsyZGcxci/OSYwFI11D1Y9uPu/lwa9JZLWyulrbvIjrx8ceeeOSRR0Jw
ffDzn05WAU16tjH3Pjh9zpvbj5z3slp3Vsf8U97d+kux2n9g6e1zftdl2dKO
XQY6fWPJPYt7f0s6RO5OGTJExLq/NJ03OCVH5Zy/M3buggDJry5Z7f+ia2dv
rn0niSjtMwc6XgKE04oXa+NIkkOxCnNj/AklN79S2OociWsUr9ZgbqyOHJus
KHXXzDcLd60N+TyuWhAHP6hVt7LQj41N9elvbT7P+U5sqhpTlrwUkmMBKGJD
0o/9w7w7k/hUGI0Ke4On31Y+dx379s+UfSnE1x+t3tKXEHXW0V/PvPmvkhTU
6UJjK7JzND2xPbYlu1b8li/cNeWJl1cUxqEQG0L8DsE7hu1OFT7517dPPM8K
/Kd2z7yw9Px7eEX71iR7BxROzCjt2NVrf8HiuuVnFr2P77mfDaitR1befUnh
NOPTQf22mfG3MdLXKBrAjXXm6iTZ/vT9p/T2cButWvrSoke/nfycIVkrdfT3
Y/u6iFZhju35ELkhIccCkK4h6cf+efPbCxZUL1myZNmyZW/MnztvWXXvp3EP
zW1b3ttyuKF9huTAVrlsPR5nJhQmsRDDQs6JP7bL+Y+E8y98dd7y5cu7DilE
o3AarkXhnNJwvcL5e7ku4Sq/uf1IS1NvqxuFkB8CWG97eBUISXX1rKr4Xnmo
GK0LM15hE/KC6yd2syVr65Ftrz0WkmryZn04T2xjpnKNzoyqnzfWGeG74nk2
174TfjP3TZ6cJPBw9R9e9M99aeD3xejvx/bVmZ3UQvLvx2uNAZFjAUjX0K9X
0DdDuUJ76/GQu9rrzM/s9ocPPDD3rE8/s/XI+zv39/HS43naz9zUY3c6frWX
qBm/MZ7tvJfYzQ8f0mvU5Xv7dGP1NLZ+D7XPRn8/to+aamYkje4e13kYInIs
AOka+vUKIIOKox8bgv0vvnbB6WZsH9egGAQ5FoB0pdWPhVGlSPqxHQujxerv
Zl579+792+uu61d97sor42WFD/r7vSdPDmK1XwDooB8LbcXRj209Hpux7atY
zKzt73fv2bOn0zGGw1onTvRhfxQA6JV+LLQVRT+2ef3zyRJtvexP0RM5FoDM
0Y+FtiLox3ash9a+a23nneD6qrm5+aN9H/Wrpk+bFld4e/GFF/bu3duv7x3y
XwAAOaQfC20Z78fGLYDb1ygovX1gIXZgnp4xIy6M4DgvAFKhHwttGe/Hbnvt
sbjDcn+P7Rok6xUAkC79WGjLcj82bkYcqruNfYeXHAtAuvRjoS2z/djm9c/H
EFu14ej5zz3U5FgA0qUfC23Z7Mc21r6aYohtk2MBSFvthtrYj9225b20xwKp
SXJsVl7Qte6sjiF26r/+obfz1W+sGlP21PbG4RiDHAtAujZt2hSfvsMHaY8F
UlOzbsMb8+fOW1a9Z8cA1l4daSHE3lQ2fkJl5eRf9br3bOuRlXdfUjl2yi+H
Z61WORaAdG3duvXHS38ccmzthn5vAARFo2ZNTQixIcpuOdzQ1no87eH0at+a
SZePqygvv3DW2sN/rK/rTvh8w851r91xWci6A9jbq4/kWADStWvXrphjw/N4
2mOB1KxatSpOFD944GDaY+nVvjVVY8pCdIyTCkJMDafhn3Ed11jJP+OXXtx7
apjGIscCkK66uroQYsMz+IoVK9IeC6Rm3rLqVUtfCqctTSO6BGv/1G985tLS
mFRjgu09zYYquWfx8B0DJscCkK7m5uYlS5bEQ71OnjyZ9nAgBY1HD4QEG17Q
LV++PO2x9Kxj59mYG2OvtVN1SrPxnJN/tb+lTT8WgKK1atWqhQsXhufxQx9u
Hb6nPBi1duzYER4C4aXcqJ5d03pk28qXFyxo7xv3fhon+obT8M8PhvO1qRwL
QOpqN9TGZ8CNv12f9lggBclBXlaf6xc5FoDUHTxw8OzkQP1YcqaxsTHe+UPV
1zekPZwskWMBGA1WrFgR35F8f+cwzqaDUWjblvfinX9UTyoYleRYAEaD8FQ+
b1n1kiVLVq1alfZYYOQ0NzcvX778x0t/HKLsrl270h5OxsixAIwGLU1Ny15/
PeTYhQsX7tmzJ+3hwAjZunVrPMLLunMDIMcCMEq8t+n9ZCHZUb2EJgyR+vqG
8PItbn+wZ8duM2r6S44FYJQ4efJkSLCxN7Vu/bq0hwPDrmZNTVw8edWqVULs
AMixAIwev//972NvKpyaK0hx27Rp0z/9eEmoYLTvRTtaybEAjCo16zbEFdRX
LX1py+EGTSqK0u7du2OIDRUCbdrDySo5FoBRpbm5ecWKFXFN+OXLl9fV1aU9
Ihhie/fujdMJQoi11tZgyLEAjDb19Q0hysYJBstefz086ac9Ihgyu3btiiE2
nIb7+cmTw7lva7GTYwEYherq6uIxXzbrpJisW78umU4Q7uGNjY1pjyjb5FgA
RqekKxv3R6hZU2OOAdn10b6P4v05hthVq1YJsYMnxwIwaoUn+hBf4/IF4al/
2bJlG3+73gb0ZEt4/RXbsHEuQZwT6wDGISHHAjDKbdq0Kelixfbs5tp3LGXA
6Pc//uf/CJE13GPja7E433vHjh1pj6t4yLEAjH51dXWxMbtq6UsLFrRPM3hj
/twVK1aET+7ateujfR95i5bRoL6+IdwbQ1IN98zly5eH7BoqriMXTmvWbWg8
eiDtMRYVORaArNhyuCHEg5gNYjDodBpSbjiNy3Y5dTqSp/EVVjJzINnOI95X
w/3WTgfDQY4FICviRIK6urqNv12/fPnyJLjG05Afug23Tp2OzGlhlI0JNkTc
2g21LccPmAMzTORYADIqBNptW96rWbdh1apVIdYm4UGpka+4RlwIruHeuG79
uq1bt9b9pSnth0jxk2MBKBrNzc2NjY0nT5506nQkTxta298s0HQdeXIs+RH+
wjQePRDq4IGDh/9Y7w8OAGSaHEvxaz2ybeXL0+69bUJlZWlFRbi3V5SXh6q8
4t7pb20+2tyS9vgAgIGQYylujbWvTrp8XEitIcFWlN7+xMsrVi196aG7rwr3
+fCZUJVjp7y5/YjeLABkjhxLETv01vdjAzbUhbPWxvlLhV9qD7fl5SHK/vJE
uiMFAPpNjqVo7VtzU9n4ePeuvOLezkm19fgvvnZBnGkQatwyu6sAQMbIsRSr
2HENSTVOhX27y37sB5d8NdzzY5QtufmV/WkMEgAYMDmWYvWHeXfGXmvsx3bN
sW1b58V5s+059p7FR1MYIwAwcHIsxap5/fMxo06orKwcO6X24y7n2Dov6cd+
asxTH5xMYZAAwIDJsRSvY9tee+yO22//wl3dr0jQWPtqMj+2+4YtADCKybHk
UMPOdatnVcWjwGKUDTl2rRwLAJkix5Inx7atfPnJ28bGfRBiJf1YORYAskWO
JRc6tvSadPm4uHzBXTPfXF33cad5BXIsAGSLHEuRaz0eE2zMqyHBbjl8JrAW
HOclxwJA5sixFLMT21+747KK8vJwD68o+9Kc3/3pnKO9CtbdkmMBIHPkWIpW
/cZnLi2NMTVU1YYuC8TqxwJAlsmxFKfW47+ZUpLE1IuffKOb8+jHAkCWybEU
pdad1XEnr/YZBeXlUzcd6+ZM+rEAkGVyLMWpI6Mm9dT2xq5naV7/vH4sAGSX
HEtROrjk4STEhrA6btmOrufZ8Q832c8LALJLjqUoxV5rEmVDTP3J4daCr7dv
iJAcAhZz7C9PnP5a1x1sAYBRSI6lOG05Z15BjLI/Wr1l25b3Vs+qSpaTTWpC
ZWXZoqWHtmx47Y7LSl7ekPboAYDzk2MpTq1HfvKVywpzbJwKG/Jq3NLromtn
b659J+7wFY8IK7mhLJ5WvFjb0Hr+SwAA0iXHUrT2rXlobFmnrmyyq9f+traW
4wfmlFyRfD5+cPGTb+xOe+AAQF/IsRSxkFRXz6q6qex0iP3CXVOeeHnFBycL
zrCv9rU7Lot92guunzj9rc0mxwJAVsixFLEYSsNpS1NTT1MF4ldDjejIAIBB
k2MBAMgiORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCyS
YwEAyCI5FgCALJJjAQDIIjkWoMg0tLaV/H9HlFKq6OvCWWvHfmdu6cPfGLds
R+qDUUqp7NYVG3elHWBPO9rcUrL890opVfz1L7tK3vif7RU/Tn08SimVxer4
Q5p2gD1NjlVK5aVCdk0q9cEopVRGq6MnkHaAPU2OVUoppZRS/Sg5VimllFJK
ZbHkWKWUUkoplcUaNTm2pe3UFRt33b/xT06dOnVa3KcXzlr7icnfC1W2aOlo
GI9Tp06dZvS0asPRhta0IyxAboTX7P/p2Rnl48eXVlQsWFCd9nAAAKCvFj36
7ZhjF746L+2xAABAn7S0nZr+4oshxE6orLSfFwAAGbLo0W9XjL9KPxYAgAyJ
/djy8eNDybEAAGTI0zNmTKisrCgvl2MBAMiQH/7whyHEhjI/FgCADAk5Ns4r
kGMBAMgQORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCyS
YwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCySYwEAyCI5FgCALJJj
AQDIIjkWAIAskmMBAMgiORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIAskmMB
AMgiORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCySYwEA
yCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCySYwEAyCI5FgCALJJjAQDI
IjkWAIAskmMBAMgiORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIDBa9i57qc/
39TSdmrELlGOBQBgMFr21S5+4JqK8VdddO3s/SN4uXIsAAADExLsnO9ODEly
QmVlaUVFyc2Lj47gpcuxAAD0V0iw1Y/fGrJrTJKx5FgAAEazfcu/3t59/ftv
zVkw68HPf1qOBQAgExp2rnt/5/7Th3RtmSfHAgCQFWfXJdgqxwIAkEFyLAAA
WSTHAgCQRXIsAABZJMcCAJBFciwAAFkkxwIAkEVDlGNPnDixtZ+mTp0aLzcE
2v5+71D+BgAAyKIhyrF79uwp3OJ2uCvE5qH8JQAAkDlyLAAAWTREOXbv3r23
3nJLv+qaq6+Ol3vdtdf293ubm5uH8pcAAEDmOM4LAIAskmMBAMgiORYAgCyS
YwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMiiwhx7jxwLAEA2NK9/vqAf+8r+
EbxoORYAgAE6sX3l3ZeUVlRMqKysKC8PkbJqw8h1ZOVYAAD6Z9+a2c++MOe7
E0OCTSrkyRBlQ6AtffgbD06fs2BB9XD3ZuVYAAD65eSh7W/MnxuSajidt6zz
afj8wlfn/Wj1luEehhwLAEAWybEAAGSRHAsAQBbJsQAAZJEcCwBAFsmxAABk
kRwLAEAWybEAAGSRHAsAQBbJsQAAZJEcCwBAFsmxAABkkRwLAEAWybEAAGSR
HAsAQBbJsQAAZJEcCwBAFsmxAABkkRwLAEAWybEAAGSRHAsAQBbJsQAAZJEc
CwBAFsmxAABkkRwLAEAWybEAAGSRHAsAQBbJsQAAZJEcCwBAFsmxAABkkRwL
AEAWybEAAGSRHAsAQBbJsQAAZJEcCwBAFsmxAABkkRwLAEAWybEAAGSRHEux
ajx6YNvKl5+8bex1r25MeywAwNCTYykmLW2nTh7aHuLrQ3dfFe7VEyorQ5XM
/be0xwUADD05luJxYlPVmLLSiopQ8V5dUV4ePi55eUPaIwMAhp4cS9FoOX5g
VYfX7rgsxNcJlZUx0+rHAkBRkmMpQg3rJl0+Ls4r0I8FgGIlx1KEWo/85CuX
xUkF+rEAUKzkWIrRsZq7L9aPBYDiJsdSjNpzrH4sABQ3OZZipB8LAMVPjqUY
6ccCQPGTYylGvfVjW5qa6joc/mN9WuMDAAZPjqUYddePbT2+591F0+69LS4t
G74a6oLrJ05/a3NDa9rjBQD6T46lGJ3bj33td20nts+76pMx1iYVN/xq37j2
tpm1H6c9ZACgn+RYitE5/di7Zr4Zd/jqVMmGX6Eqx05ZXSfLAkCWyLEUo3P6
sWfr4W/89OebNte+s3pWVddMe9G1s3enPW4AoO/kWIrROf3Y2G59c/uR+LWW
tlPt/zv665kXlhYG3fAomLhyV5qjBgD6Q46lGJ3Tj6284t6fHO7uUK76jc9c
ejbKhvNfdO1LH5wc8cECAAMix1KMzl2v4AdrT/dgu9o6r9P0g6oNR0d2qADA
AMmxFKMu6xX0pPXIT75yWXLO9rULbJoAABkhx1KMzu3H9rovbV31lMIDvmxi
CwBZIcdSjM7tx/beYt235qays1MLSm5evH+kRgkADIYcSzHqRz+27cSmqjFl
Z0PvPYtNkAWATJBjKUb96cfWb3xobNnZ0KsfCwAZIcdSjPrTjz21e07JFWdD
7w/WNnS3RhcAMNrIsRSj/vRjO+YVnA29M2tHapAAwKDIsRSjAc6PDaf3b/xT
j4vNAgCjiRxLMerfegWTLh8XQm+oyrFTfnlipMYIAAyOHEsx6t/6sWc3QTCp
AACyQ46lGPVjP6+Vd18S427lFfeurvt4BAcJAAyKHEsxOrcf23OXtalmRrKT
1+RfWXALALJEjqUYHVt59yVJP7Zy7JRuG62Nta+GrBvPZjtaAMgcOZYi1Hr8
N1NKkq1mwwcV4/7uiZdXbDncUPeXpvD1k4e2/+If743HdoW67tWNaY8YAOg3
OZYidWzba4/dVNZ+345hNXwQM204TRLsJyZ/783tRyy0BQBZJMdSzFqPb659
Z/WsqvsmT46ZNtZf3z7xiZdXvL9zv627ACC75FiKnnYrABQlORYAgCySYwEA
yCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCySYwEAyCI5FgCALJJjAQDI
IjkWoMi078W86G2llCr6ev7+u0orKiZUVi569NupD0YppbJbe95d1B4gR4GW
pqa2kq8opVSx13+dddFfhxwbKnwQ/pn2eJRSKqP1X9trdJBjlVI5qQc//+ny
8ePP5Nj0x6OUUpktOVYppUay2vuxFeXl+rFKKTXokmOVUmpESz9WKaWGqORY
pZQaydKPVUqpoarRlGOnvqCUUkVfJf+5NLZkFz367Wf/9/8z9fEopVRWa8Yr
aQdYgHyJ68eWVlS8MX9u2mMBAIC+SnLswlfnpT0WAADoq2Q/LzkWAIAMiTm2
orxcjgUAIEOSHDt//vy0xwIAAH2VzCuQYwEAyBA5FgCALJJjAQDIIjkWAIAs
kmMBAMgiORYAgCySYwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCyS
YwEAyCI5FgCALJJjAQDIIjkWAIAskmMBAMgiORYAgCySYwEoGnUd6usb0h4I
I+rkyZPxpm9sbEx7LIwoOTa3wt/5+KhPeyCMtPgs76an+OzatWtCZWVFefmX
b7wx7bEwolasWBFv+qlTp6Y9FkaUHJtbd915Z3zUr1u/Lu2xMKI++5nPhId8
uOk1LigyIceGO7Ycm0Mhx8abXo7NGzk2t0KOjTe9HJs3MceGkmMpMiHHxvu2
HJs3IcfGl+dybN7IsbkVcmx4yMuxOSTHUqzk2NyKOTaUHJs3cmxuybG5JcdS
rOTY3DKvILfk2NySY3NLjqVYybG5ZV5BbsmxuSXH5pYcS7GSY3PLvILckmNz
S47NrVzl2Obm5rSHwMiRY3PLvILckmNzS47NrVzl2IULF943efLy5cvzcGWR
Y3PLvILckmNzS47NrVzl2Obm5hBpJlRWfu7KK5+eMWPHjh1pj4hhJMfmlnkF
uSXH5pYcm1u5yrFB7YbaeFePbzuGe772bLGSY3PLvILckmNzS47Nrbzl2CA8
tU2orCytqIgVrvvnrrxy+rRpW7duTXtoDCU5NrfMK8gtOTa35NjcymGOraur
u+bqq5McG3dkjnXrLbcse/31+vqGtMfIEJBjc8u8gtySY3NLjs2tHObYYMmS
JYUt2diVjQ2ccBp+J9OnTXtv0/tpD5NBkWNzy7yC3JJjc0uOza185tjg1ltu
KYyySVe2MNCG84TEW1dXl/ZgGQg5NrfMK8gtOTa35Njcym2O3bblvXCf77Yr
26nCeUKgnT5t2vLly0M0Snvg9JUcm1vmFeSWHJtbcmxu5TbHBiGaxpjaqStb
GGKTqbPJ56+5+ur7Jk+eNWtWzZqaTMykPXny5KxcenrGjOQmS3ssjKhHHnkk
3vThFWjaY2FEhTATb/r4V5r8+MIXvhBv+vDM/uILL6Q9HEZOSG7xpp/97At5
u+mfe+65GOM7LV/QqTrl2E7h9ss33hgeNcuWLRu1q9GGsN1tn1mp4q6uj1yV
k3K757bc9Lmt3P7B/9yVVxbOK+i2JVve3UMj+Uxhpg2p+L7Jk0M8rllTM3pm
1YYcm8NbVqlyT2pKKZWbyucf/JA8O02R7WmWbF9+dSEV33Xnnc8++2zIsR/t
+yjtAHvayZMnn8ulOG+kvGNeQdpjYUSFl5PxBemXb7zxxRdeSHs4jJxkkmS4
D8x+9gWVn7ru2mvjTT916tTUB6NGspJ5BSF9pf0XaKSFqxySZ/m58wp6asn2
VOGJMjxqlixZsm3Ley1tp9IOrZzlOK/ccpxXbiXHeS18dV78g+w0D6dtXY7z
Gg2jcjoyp8lxXpk4ZGloxb944Z7fqR/be0s2RN9ROHmAruTY3LJ+bG4lf9VD
jk17LIwo6xXkVm7XK9ixY0fSd+06taBTSzYezDVvWfWeHbsbWtMeOn0jx+aW
9WNzK8mx1t3KGzk2t3KbY+N9PlbXfmxsyYb8s3DhQk3XjJJjc8u8gtyyfmxu
ybG5lc8cm7zt2G0/NvxOwtNf7YbatIfJoMixuWVeQW7Jsbklx+ZWDnNsXV3d
NVdfXV6wZFaSYB/8/KfnLatuPHog7TEyBOTY3DKvILfk2NySY3Mrhzn26TPb
PMVnunjo1uOPPbFty3vmvhYTOTa3zCvILTk2t+TY3Mpbjt26dWvh4gO33nLL
kiVLcrhWQx7IsbllXkFuybG5JcfmVt5y7B233x7u6p+78srp06Zt2rQp7eEw
jOTY3DKvILfk2NySY3MrVzl2+fLlIceGUw3YPJBjc8u8gtySY3NLjs2tXOXY
PFxHEnJsbplXkFtybG7JsbmVqxxLrsixuWVeQW7Jsbklx+aWHEuxkmNzy7yC
3JJjc0uOzS05lmIlx+aWeQW5JcfmlhybW3IsxUqOzS3zCnJLjs0tOTa35FiK
lRybW+YV5JYcm1tybG7JsRSxj/Z9VNch7YEwosJfs3Cjh1vfCnt5I8fmVvxT
Hx71zc3NaY+FERVvd0/0AGSdHAsAQBbJsQAAZJEcCwBAFsmxAABkkRwLAEAW
ybEAAGSRHAsAQBbJsQDtWo8fPHBw7969R5tbuv1649ED4auH/1jf0nZqhIcG
QLfkWCDPDn24ddXSl6bde1tpRUWoCZWVF107+4OT557pxPbqx28NX40buE9c
uSudsQJwLjkWyKkT22deWBqCa0ywhXX/xj+dPdvRXz9zaWmSckOOLbl58dH0
Rg1AQo4FcurE9jfmz61Zt6HuL02tO6sfGluWZNqSmbXJeULWDX8hky+Fj0vu
r5ZjAUYDORbIuTjf9Q/z7kz6sRddO3t3+FTrkZV3XxL+PF785BtbDjfseXfR
tHtve3D6nDe3H0l7yHR28tD2jb9dX7OmZsWKFatWrXp/5/6G1rTHxIhr2Lnu
pz/fZAZ7rsixOedRnx+e6HvXWPtq0netKL39lyfaDi75avhnyf3VyS8qPFI8
WEabP29++8nbxiavQcKNGE8rr7j3lff3pD06RkjLvtrFD1xTMf6q8CJ0f9qD
YSTJsbnlUZ8fnuj75MSmqjFl8e9hRXn59BdfnHT5uMqxU9Y2pD0wehBeU2x7
7bFOc5vjK5FkHsjFT77h71txC89lc747MXkRavp63sixOeRRnx+e6PvjWJxF
EHN+/P1UbTiqATs6hdvlg9mTuh6j1/WuXvKDtW7EohSey5KFRJLyjJY3cmyu
eNTniif6/opTZAsTfk9ryZK65vXPx5upovT26W9tPnjgYH19w6EPt66eVVV4
XF5cYuK5HU1pj5chtm/519v/dv39t+YsmPXg5z/tGS235Nj88KjPG0/0/RV+
Y+FXkYT8p7Y3pj0ietB65Cdfuax99vJtM2s/7vzF8IJ93lWfLLwpCyc5Uxwa
dq57f+f+0y/At8zzjJZbcmx+eNTniyf6ATj660mXj0sO9frJYb+R0erDn4V7
b+XYKW/3NHu5fmPVmLMLqX1qzFNdHwVk3dl3kbZ6RssvOTZXPOpzxBP9AHSE
/+Shcc5uCIwmB5d8Ndy9v/LOR72cp656SvIyrfKKe1fXuX8XL89oOSbH5pRH
fbHzRD8QH/7sprLxyZIFZ3dDYHQ5Fl5unP+V1741SXc93L17fEFHEfCMlmNy
bE551Bc5T/T91nL8wLyrPhlnC8cKDw0rOYxCLW2n9ry7aPpbm89zvoKF1Ny9
i5xntByTY3PKo76oeaIfgMK1HU7/TiweOyr1dW2Nwrv32CmmzRQzz2g5Jsfm
lEd9UfNE32/bFrc3pcdOeeX9PSu+OCYJtJZxyLD6jQ+NLTs9ReQHa9MeDcPJ
M1qOybE55VFPmyf6M05sn3lhadz1IPzrvaprkhz7Nyv+veB8x/bs2G1Vh6xo
qpmRzBKZuulY2sNhOHlGyzE5Nqc86vFEH7Uej8G15OUN8RPh19LtcmQHlzwc
Hi92+MqEcBv94msXnH6NZp5z0fOMlmNybE551Odebp/oW5qa6urqknT6wexJ
7avs3l+d/AZad1bfVNa+T0ScbvHLEx2f3bY4/LN9h680xpw9p3a/MX/uvGXV
q5a+NJjTBQuqQw3kzvnhz5I/cSaHjKhUbnrPaDkmx+aURz35fKLvWFmrvQXd
scfZvuVfrxh/VafjuVqOH5hTckWyScR1r25srH01fJfDvvqhfuOky8fF3+Fg
TsOriVD9Xsi39Xh8jdb+983iaSMslZveM1qOybE55VGfc3l9ov/DvDvjcgTJ
zIGKsi91ivEtbacKp8gmKxjE2bP0yYlNz1xa+rfXXffFG24Y5GnFuL/r7+us
5vXPxwkzF107e/cwXUF6kspN7xktx+TYnPKoz7fcPtHXVU9JtjCL1W06jb+f
wrNNXLnLtNhsOLV75oWl7ZvZXXGvnYXzwjNajsmxOeVRn2d5fqI/sX3xA9ck
W5jN+d2fmpubu54rRNZkOdmK0tt/tHqLZQoyIfbS47yR3N2388wzWo7JsTnl
UZ9XOX+iD1e/vZqa6usbeu+v9vFsjCrbXnus27kiFDnPaDkmx+aUR31eeaKn
WCULps35XT+PCyPrPKPlmBybUx71ueSJnmLVvP75XiY8U+Q8o+WYHJtTHvX5
44meYtVY+6r7dq55RssxOTanPOpzxhM9xap1Z3W8b0/91z/0dr76jVVjyp7a
3jhS42IEeUbLMTk2pzzq88QTPcUq2Xxt8q963fqp9cjKuy85uzsbRcYzWo7J
sTnlUZ8bnugpWvvWxK2jLpy19vAf6+u6Ez7fsHPda3dc1r77cJ62/MiXwme0
ezyj5Yscm1Me9TnhiZ5itW9N1ZiyZGu2uG9F+Gf7mnJnKvln/NKLey2hVpya
1z9f0Jl5pddX7BQbOTafPOpzwRM9xap+4zOXlsY7cOHOaz3dyb1gL2Yntq+8
+5J468eb21EAuSLH5pFHfR54oqdYdWxIF++08SVYp+p0J4/nnPyr/ba0KCr7
1sx+9oU5351YeNPHG739DvDwNx6cPmfBgmpdmqInx+aIR31+eKKniLUe2bby
5fDHatXSl3o/nbes+o35c8Np+OcHJ9MeNkPq5KHt4cYNt2y8iTudhs8vfHXe
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
AAAAAAAAAAAAAAAAAAAAAAAAAAB89wDC0PeY
    "], {{0, 790}, {920, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{920, 790},
  PlotRange->{{0, 920}, {0, 790}}]], "Output",ExpressionUUID->"5ebe719f-58c0-\
475e-ae08-128766996d86"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
C2xvsPaFW5UDSXWZr71m9erkufTeefNCFy5k/0AAthRpVdrByaVHe0QvDQAc
gY48rt+h7bS/JYiTy2Cs7pJVclzM91/N/sAdO/GUPJfi9BNAIuU9w/yuUGhV
CgA55O3v4pzNr97aPXxD9NLAzgZqNsojn+JGkWZqa1ERCaXT5tKnnnwy+8cC
sJkTQ6NoVQoAJiF94+Xs5h/ziF4X2BnLpfPuXnVQp7MUjz32GOuJmjyXkqvh
0Of6PCSALXQP36CtSrXb99WdOG4AALlHd/NrtmurpqWhDtFLA5sa7Sj+yd15
c+fm+6/q8vHkE0+p5FKcfgKQ0Z//CVqVevuGRa8OABxqf2+QUzKt2Y7dfDBC
+5ZF7Ay+XnMcSNRMPZc+OicPp58AGOloD2f73h0oDYVFLw0AHE1qPsCJps0H
RK8L7Obm19tIOJR+vkuv+9ZIyJRPPKWSS8lVvHOnLg8NYGmRVqWcA/h6bWQA
AGQsupuviabYzQcdDZ+penRO3m0L1zT2D+hy3IkgIVM+8aTMpT996KGnnnyS
O5YUp58Alp++QhOpJpTe3tKPA/gAYAYkgtLZT6obTWu265UfwGnGR28qn+Am
ehrW3jXrzocf3PpXPbcIlSee2EUS6esbNrAi6rKlS8nFOf3U0KDjGgCspSg4
xO2fj1alAGAq0pFyTtso7OZDukY73L95gCbD2Y+/9Rf/ZCSUvv3DWY/OyVt/
8pqOj9Nw6HPVJv769ev7envr6+tZEfXldetIPN63bx8Jqzj9BEB4+4b5odQX
QhUCwGm6S1aR58rHUjPndy8tW7r09Q0b1r+3t6S6qbF/YOTGTUN3WPrGJ6Tq
rdpour83aNyDgv3c/HqbcgP9lmefe2bmfPLKykMhfR+InXhiufSpJ5+Uq6D/
t76evIW8fc3q1ewtJKy+U1CA00/gcNFWpdpcWhfEQVcABxo+U1Xy2uo3lv14
2qMZ5JLvlCPPofJbXnz5VZJRjet1jN18yJ4yl8rfvaxwqiMSNcmjkP8oHrj/
/uKdO5Wn+1kuJddvXnpJ+Veamprkbf0PP/hA3/UAmFz32DhalQKA0sj4BCt4
koC69q5Z8lM2u25buKa0zF11qrPh0Oc1n31W8X4xCbHK98mbO5e9ZNuj5IeM
EYuUjnniQmkko85o8RnxWGBP4RPk2ztWL1223ts3rHupn514ennduu+7ulR/
lCiXTkbueiWJlJ2K0nc9AGZGD7f6Qpzt+0irUpx1AgB5FKN8sVvv5LIP+0FB
/u9ETwPJqM/MnK/KsfPuXkVCrO4/T+j4j6rN6pJpZaG3X/3sD5DQaAf79aqp
o9ugYvv69et9Pv6vS0lyKdPX2/tGfn5ra6sRCwMwIenwBU4odQWKgjoNXQMA
qztdrAqZSWYy0nQ6dqnl3ZWqKHvvvHlPVLTr1Z9ctiXYymlnWr8Dv1NDinT/
nkzLtLkUwFFoq1LeWacX29CqFACmpJNLZawtueqasa1R99XRs/maaDrLf0j3
BwLQHXIpgIyET/4B/OY+0UsDADPJKJdORu5NZaebldfy01f0rVC1Xx+hu/mq
aFpZ2Ng/ILYUBjAt5FIApjQU5m7fo1UpAKhlmktJLNRWTdkMHX332fMDJyV3
kfSp4ni+a5PkLcFuPpgccinApNyqlNcVCi1WAEAt01zKNL4x/86HH2QnodhL
o3bzSRaNP5u/oq0B0RTMDLkUgO55VXdyKqV1QYN6uQCAtWWXSyd6Gp770Wzl
R8ibubS8Z1jfNfoHL3N3849fu6TvAwHoCLkUHI4OSakLcrtCnRgaFb06ADCl
7HIp0b5lkeps/spDId1v/lzR1kCjqbLZvrtI+mK3vo8CoCPkUnCyhK1K3QHd
axcAYB9Z59LhM1Wqu0ylX7mNuGuIpNBYsXRqW5/kVd0fCEAXyKXgZNLRHrQq
BYC0ZZ1LJ0c73v3BTOUHueeOAiP2aI5fuxTbzWdVU5JOqzb7By/r/lgA2UMu
Bce6vaWfG0oX+PHjGgCSyj6XTg7WvnCrcghURh8kJXQ3X9tp/8syQx4MIDvI
peBM+f6rUuV5ydWhPoOPVqUAMC0dculkd8kq1Vb+1r+GDVgrHYoat5s/deUH
ThrxcADZQC4FB6KtSrmh1BcSvTQAsAJjcin5fdmAtVKN/QOxo0/yVbW5/fqI
QY8IkBnkUnCayM/n8+xwk6orVB/a+gFAKqyWS4m/a/0y7mA+u46UG/eIABlA
LgVHSdaqdPiG6NUBgEVYMJfS3fz6HeohUOV/2NTZYtyDAqQLuRScI9qqVDvU
qfK87kMAAcDODMilRkwjVfH2d3F38/FbOZgHcik4BK0V+EKcUIpWpQCQLj1y
qWoaad7Mpft7gwasNc6MFh/nbD5288E0kEvBIWirUm0odQUKzqJVKQCkKetc
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
bJhqzq/d1l8SH1DtOdsUuTSJyG9AaFUKANb2fVcXPdw0VSatOtU5MXYJ2z1g
QoFAoLyigqRTFk19Pp/oFaWB7uarDuaX/2FGSyafAs2ZuzyR8umS1Mab2me2
KXJpIrRVqS/E2b5Hq1IAsI7G/gG57xNJp8PNx5FIwczC4TC94YTZ+0l9fb3o
FaWK1rKqNtMd/E83KUdBefuzuCeh0R8/21QVUJVb/DaZbYpcmoh0tEdydWiL
pWhVCgBWEbpwoeyjj1lL0vKKCvK8KXpFAClpamqS+51aqGqaHzjJOZtfvyPb
XwYvD0x+XEv77fOnmiqj6dSBKcvONkUu5Yq2KtWE0uWnr4heGgBASgYGBv7s
drFmUB6Px4odeMDJvv32lNxIykL3mkpHyrUHoBad+Uqfj86ZbaqNpsrXrTfb
FLlUi7Yq5R7Ab+4TvTQAgFRV19SwvdDyigqEUrAiZdXUKif026+P0N181QGo
ysLG/gHdbv5UzDaNv/t0iWZzf+ot1pltilyqQluVckPp4QuilwYAkCryhM4K
TeQlOkGBdUWbm0VmPYzcsMahnthuvnyXKQmo3hL9Hyk225QbTbUB1QKzTZFL
lbx9w7QrFK9VadqtHgAABCFBtKysjBWaWltbRS8HIHPhcJi2ONsTHQglejmp
kr4si9vNjwTUFW2GTGuKn22qugF1Me8Uv6lnmyKXymjtvbqTE0rrgjgsAAAW
Ej3OvPeT2tpa0WsByNb3XV1ylzOrFP/9g5dju/mKdHr8mpFRcGq2aXztVBtQ
FSekIs35DVxS+pBLGdreoS7I7Qp1YmhU9OoAAFJFnrjlW/IuXR4UvRwAHbDd
fJJLLXQ2f0VbA92+V84ndRdJX+w2+nE1s025/U6VN6aaa7Ypculkklal7gBa
lQKAtZAn7rKPPiZP4i3HatGqFOyB/LZlxfulSQrVDoHKD5zMzX+Y8mzTMXW9
NNHLJfRmANGzTZFLJ6OtSjlnnYqCQ6KXBgCQhpEbN9khERJNUSwFO5HvTrFQ
z6jj1y4pG+zLr7RfH8lp9ks425Qz6pSGWKGzTZFLb2/p5/bPX+C/LHppAADp
aW1tZTMccWcp2Mz3XV3sBpXyigrRa0nDojNfRSdAKdqZ5mA3Xys62/T+l6aN
prGAKmK2qcNzab7/auQAviaXolUpAFiQ13uQ1UtxDB/sh86JiLDQVj4heUui
xVJFO9P8wElhC1LMNlVMiVJG08VxZ6NyO9vUybm0NBSOxlFVKD3aI/bmCgCA
zLCRo+TlxNgl/BwDmzl85DDbyrfWr110N5+VSZVnoKo2t18fEbms2GxTbjpd
rEmnOZpt6thcmrBVaV0QrUoBwIrY2RA2dVT0WgD019beRo8+7bHSqXxmlv+Q
umcUuY6Ui15XxNRs08lk6TR3s02dmUvRqhQA7Me6z9oAqZBP5VvuNy/a9qd+
R1y9NHJtCZqm8KuebRoNpT3Sov0zFqr7Shk529SBubRvfIK2KtUOG60839iP
EdIAYFXy7FELHVgGSN346E3WXZ98n4teS9q8/V3aXCpVbzVdNWxqtumgtPDd
H8x8dE5e3uzHSTpV5FVjZ5s6LZeOkFCaoFVpeQ9alQKAhR0+cpg9a7e1t4le
C4AhysvL2aZAOGzsXY5GkL7xcnbzj5mu9jvR01Dy2mqSDPPmzp11zz0kl5KM
Gl8yNXC2qdNyKW1Vqq2UugIFZ9GqFACsTZ6JEwgERK8FwBAej4d9kw8MWG9/
M7qbr4mm5tnNZ4n00Tl5JI7K120L10zesnJUk0XjA6pus00dlUsX+C9zW5Xe
3tIvemkAANmSG49/39Ulei0Ahqj57DO2KWCtVlGy/b1BdS51bZJqtpthNz9U
tpak0FuWrX+vePsr8++Tc+mtj2zrG59QzDbVFks1O/vkZaazTZ2TSwvODtFE
qi2WolUpANhCtHnpnj3IpWBX1TU1ls6lhNR8gLOb33xA9Lomh89UVZ3qjP6f
08UslJJ8KP3KLcfm6GzTW1bG327KGWk69adpzzZ1SC4t7xnmVkolXwjzowHA
HkguZU/ZyKVgVySXkt+8LJ1L6W5+zXZtNC0NdYhemsJULo3VS+PRg07/XJh4
tqlyoz+92aZOyKWN/QO0Vak2lNYFtV9qAACLQr0UbM8G9VLCdfEcp2Ras91E
mSS+XppoYUlnm8ZF09Rnm9o+l9JWpXVBzgH86k7BoxYAAHSFeinYng3qpYx0
pJzTNsoEu/lR09VL1dSzTeOLperZpouTzDa1dy6NtirVhlK0KgUA20G91ELa
9//plfn3PfXkk6vffA9FktTZo146yfJJ9VZtNHVdPCd6aRGp1UvVYrNNOcVS
/vEozWxTG+fSaKtS7fa9O1Aasl7fMwCA5Ayql3aXrMqbO/e2hWueeepnj2Xn
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
XxlK3UXkZX7gZO4WIbpeSi51vVSFP9t0sTaaTr1cMvlK0XDzcYOOR5H/Ikj+
5GzfV51PvkEDAGBXua+XkosErdc3bHinoEC+yP8t+P/+3zeW/ZhEILknIS+r
DCpTXMJs1lXHdvOTZB52q4Dy+nV1m+qjhcrWxkVBV4f6o4x2FP/k7iTVQhLe
5C3sBIuJfUbKjXuVyEceTCmTh0/I5dB5d6/a3xvkfkBlnGbJU9uIRpcvkXy7
wj13FGgTMnm6b3xjPuqlujh+7VLsLlPXpugrVZvJlz1Hp86F1ktTyqUR9G7n
/UfoeXzNTafxYVW+lkze/5I821QvCVuVugNoVQoAjpX7eil7XbUxzR0dmHku
jQwwTb5HPFCzUfmgb/3Fz6nixlc7tU2cyKfGPgg318kPpPyk4m92VX9GSfpE
qSJuos+dTciKvs+/fpXoo2kXRnK16iuQ/ZdIWd8mQYV7NoqNTkC9VBeLznwl
t4qKBdQj5Tl6ePPXS1W+C07++8e0o6mmUqq4GfVpRUxdMrnq32jHVD1EWpVy
zjoVBYd0+fgAAFaU+3pp3sylL7786vr169esXs2ulc8//8KaNeywtvL2xWxy
qfIWSn7mOV0sr2reXb89yHsqUN82oCpmjnbIj5Ls5oSp22VnRU79sLtPE35G
SfvqKwuY/M89siT585om7MV/lTjROusvkepP+ak78kuEJq7rySH10klWgvOW
aG803dTZkoNHV94wrDyTmAMZ5tII+o1HoiYJnJxeUkv4h/f/9p9IoM2mfHp7
Sz/nnlJXYIE/t0fVAABMxlT3l9JWS83H5Rsps6yXTnPW+3SxXLONHjbnSFbM
VD4LJ49VrB1rgo6sqdZLJ1PIpcoKZ+JPKqbxjfnKiqh6Fz7rL9FkpH6r/Nef
sbFOWzUl/+iauK4n59RLCW9/l7ZnlFS12fBDNKMdyt9BjK6Bq2STS2U0Z767
L1I+leul/PansbtPn32bZNp0f6UiXxl61kk71wmtSgHA8XJfL01eSKE3UiY+
j69vvTTd0BVfDBwkoU7+COtPXpvmq5CQnvVS5TukkktHDm9S3lCh3srP9ktE
qW4GYIVZ5S0BOZiY6Zx6KTOjxcc5m3/MY8iDddWxZsLcOfW3PPvc+vf2ln30
sdG1U11yqYz8ojT5z4VTzfm57U8Xj0X395coZ5um8sFLQ+FoHFWFUrQqBQDI
eb00xRvPVP1LFcxSL50Yu6T8o61/DWear3Srl6qWlEounehpUN6Iq/6VQY96
qWorX75uW7iGfNFycx7HUfXSSbabX79DG023BFt1fyw26KF45859+/aRV0rL
3KqX5I9KqpuM/u1D31zK0Jy5y0NPPPHT6RI5msYC6nSzTWmrUlop5XSFQqtS
AIBJQfXSVOY9JdgcN029VHHX6CxN96d06FgvHVQejEollyq/UJxfGfSol05G
0q+qYyq7yC8OcrtXQzmtXjrJdvO1JdPqrXZtiWlELo1p9E/NNlXu7z+tiKaq
XX7+bNP26yNSdSc3lNr13wUAIF3mrJeGL7TSrvLT3Y0p8v7S+CP/eu3jZ3d/
6WC69VLVZ6H+lUGPemnUaIdyfIAyms7SNPbXndPqpYzUfIBzo6lBu/miGZtL
mbjZpupiqeYUf+TwvmK2Kfkvi9+qtBKtSgEAYsxZL03MNPXS+ES38lBIn89I
v3ppSmlZ0X/VuHqp/J6hsrWsP60qnZJvj19XtxkXTR1YL51ku/k12+OiaaTT
fmlI04bX+nKRS2X+7yY3/DHSnJ9TLI0vqMZmmz5R0S65/lPbqpQ/rQMAwKnM
WS9NzDT1UkWimxU5MZTprZJ61ktVuXT65kvx6Vr6+S6j6qURJHmGL7SWvLaa
O8yU/DMZdLupM+ulhOviuVgolTvtV2/NZWfR3MhpLmUUs03j9/S1FdQlo9LT
5Prm3hWr33xP+tAvn3hCq1IAABXUSzMtBsb9UcIppSqjHSXVTZNxh9D1PI+v
mr40fVqO/0KRZ8y4P826Xsoaf2nvIB0+U6Xd1jduQpAz66UM3c1XddonV/MB
0evSmYBcKovNNuXebro41lQqcg1KS8ivZtK/fnV7S3+ulwoAYHr2rJfGD9k0
pn9pXJ8o9qfTlfsG3b954M6HH4wfMqhn/9LJM7uVSe+eOwqmucU0vl6qPr2l
Q710sPgnd5N/ce4evXLgFHkg7qBSXTi2Xkp0D9+gu/maM1Cui+dEL01PInNp
BP1vv/xzzWzT6EXyKrvkjEpfN2C2KQCA1Qmpl2bRzFCVS3fxc6kiUBlULyVP
Q6o5ntPuRLe8u5KeQNckNx1z6cTYJeXdBdNu5Subi3LmhOpwfyn903l3/TbR
yQ7l1zBv5tL9vcEkn37GnFwvnaQNMzs4Z/NrttupMZHwXBqjnm06dQYqbq9f
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
MZeKq3EvkwCuJ+KoNgvhxFwqnrIOHTqkZVHtucucSBMJpVrFaEVlpade8rTz
nkTuEolLLed/8rWZEfQfYhpQDT2occ82dQSteeaecVR8X504ecKhX6P70F/q
TeTSjPINxK0qlX5jks/3sUUurfjtMxc+kzswZJrjcqlWMardH/iwVYlTgqFU
20AtYm2WK0btw+Ic0jhnm1odJvV3lmeb2p94mdMOkJ3l5g0RXPuvDckeKWbg
vCdvIpdmjrpWrt1TagilDd29I7dkj26yvr5eW9Uy5FKlaseZm/2yR4cMckQu
DYfD4lv07fz8lStWJFKSEy+UPr1o8YYtv6rcVxQIBGR/TfJZ5FKN1dmmpp/P
PN707tmmkr6UJOjbey0nSDO6lR5zwXypN5FLM0Q9XKmh22KmtOry2eFR2aNT
/Wdjo/ZEbcyl4vIVyx4dMsi2uTQSiYi8JLJoaoWNeigVeWP9unVFhYUSz+ix
p7i5VDfzbNP4y/rT50lN/s8dI61nbPv33HTsE20fXGwuXbXy2Q/277fD/ABm
wXypN5FLM2FobEzxhyxCaXnQNzAie3RT9Fx63y9eMObSit+u7WiSPUBkiq1y
qcgzJ06eECMRWVRrMUqt3Ek7i0fbNC39JhnbuncujTKfbRp/HvXnU7v4l748
+e4hu51tKr4TtPl27Rv+saVL39i2jQlSp2C+1JvIpZmgnOqzCKVlwYLuYdlD
m6bn0hc3bVKqdqgXq/neYIdcKrKB+NPXr1unH4GdQhYVl8ii4vOIlJXRA3dc
I8FcOu3/dE/+rz9M3rd+5o2msdF0egv/1PTpS/+fmmntQbxP0b9PDh48GA7b
KzZjdsyXehO5NO1y2q9ZhlLx67KHNoOeS199+eW1HU1K2fYZ0bS8gNV8t5KV
SwOBgFYxGnsqfQqhVKt18vk+ZhYlWUnn0qip6VMROI3R9B+s8mr0P//b/xCB
diIk872teHUT32niW4UJUodivtSbyKXpldd+Q93rZKeq0ni0XCquV195Rfyn
8umB6VAqMmp0yjQveI7aKPfJZi4NBoMHDx6MrXVKfPu8odZJBIzq6mpeoeYi
tVyqU3Pmu4ei06d6FjXs2Z9566m4fvGWyLRS7j4NR2X/z0W6MF/qTeTSNCoJ
RWYc52SPqtJ4pnPpyy+L/zxzs396vjTmJ+1D9prmxdxlOpeKZ5U/lpfl5uaK
lxX9ZlF978ns2+cNtU7ik3itYjSj5phLdSOtZyb/546795ea9+z/nVbar6/1
q1H27fflTp/CcZgv9SZyabqoVaXqTKlFK5Q9d2EYcqnwzIXP1OX7j7bHruY/
HjjOrlWXyUQu1SpG387PfyonZy6n0msVo5X7ijxbMZpR6cqlGjVnvl+tLtnP
3Kcf58fo/42ebWrbzfuwFeZLvYlcmhZqVWltl2UotW2oM+dSQfEVT0+Wlk0F
1LzgOYnjRNqlK5eGw+HGxka9YjS27j6pLPr0osUiL32wf38gECCxZFR6c+m0
5na1bH9q+vTvrH78h5nr+2442xSZxnypN5FL525gfMLmVaWWLHNp82DYYjW/
ZqcI3hKHivSaSy7VKka1WqdHlizRVuRjl+YTzKUii655/nmtYtSeCwqulKlc
qrkWvnu26c9NlzmsOv5sU2Qa86XeRC6do9silMapKq3os0tVqSXLXCosbD9m
rjNVTlbIGifSLtlcGlsx+tjSpSmv0YtLZFHxeZqamtiQIkVmc6lutrNNDbeh
OvVsU2QB86XeRC6dI7Wq1HzSaFnw37vsftRyvFyqJu3GvcY604rfvtPNMY4u
kWAubWlpKSos1CpG9XnRFLKoSLPFr2+s+aIrcoVvIcmylEs1FmebxlvZd97Z
psiCQCAgnoXEj7QTe8r46B3t353Do1Ow5vx1y1A6v23Q/vVK8XKp4BvsMedS
pWanbe+VRVLEu1HtCd88CxFbMRq7j15fo08wi+oVo6ErV6R8jbAUDAa//PIL
cWV1vnr6bFPjnn2Hnm0KADaU/9WwZSi1YVWppVlyqaD82Wexmn+6OvvjRKaJ
mKpXjCabP2MvKkYxC/1s0zGL1XwnnW0KADZU0TdiUZ4vLn/I/jOlmtlz6dDY
mLqab4qmrOa7g4iOWsWoCJP6riW9XDTxXErFKJJ292zTsQTONp2039mmAGA3
0U3r1lWlAw4JpZP3yqXC4avdFlOmtbtYzXcokUXr6+vfzs9fvny5oeXefM2+
lX7Dll9V7ivi5h+kLPGzTadvQLXB2aYAYDdxq0pru5xVpnTPXCoorUctomnr
0WyOE3MRiUT+M1ox+tzq1XPZRy+y6IubNhUVFoos6pQVAThCAmebztwbJfVs
UwCwlamqUvPyfdXl5kGH3QSVSC5VV/Pr9pj3QJWEOrM5VCRFvF7HVowmfga9
OYuuef7594r2UDGKLLA829Qqmt4tmOJsUwDeNlVVag6l0apSx00iJZJLhbJv
LllMmdbtcdAdCx7R1NSUxorREydPcMMGsk/NmX+ojznb1BBNzWv9P+dsUwDe
pLQOWCzflwXzvxqWPbRUJJhLBeVkhUVtFKv5NmCuGE1tanTVymffzs9vOvYJ
W+lhF9NnmxrW9y1KUKM/crYpAA/Z0HHDMpQ6pRXKLPFcqt69ULvLHE3LvrmU
naEiVjAY/GD/fq1iVPsXNGxiSqpitL6+fiLU77jZfnjFbGeb/tx0M2rKZ5sO
ha5c+bqnJ94ykHiMtHT29o7cYlYWgB38e9eQdSg91Sd7aKlLPJcKJaFOy9V8
bjvMDvGK+eGHH+oVo4ZT6ZOqGH1j27bq6mpqneAwxrNNzQE16bNNI1cClfuK
tq5foz9A7l+227h9dbSz+PWN4oH29KLF4jf8S21HZr9MALgXtarUsj/fOVWl
lpLKpYJyutocTee1Zf40Q68auHpVBMjc3NyncnLM/aKJd42KKCsCbUVl5Ujr
Gd5HwNmmzza1nDu1Otv0ydcsPs9o57vfWaBt7jPeX33+uj4pOtHX9NZ3F4rf
oz/KlL8/wK31ACQ6OzyqVpWac6mjqkotJZtLe0duqav5pmjqG2TmLW3C4bBW
MbpyxQr96KV7XpZb6Q0Vo45+DwUYTZ9tOvuy/s/VilSz0U7x6Kj5oqt5MDxy
oea17y/UHzvK//OZ/nu07Bp7Kf9c7vRnfgDOFU1iXRah1GlVpZaSzaXCO90B
i9X8xr3Mws1FJBLx+T5Ob8Uo/yLwAv1s05m79WdG0wQOiuotfsmwlD8x1l//
4v3iP//69ffFf148/Lut69eI93oiymbh60LkSqClpaXuyBFx1dbVtXT28s7a
a0ZazxTXtsgehb2o1Z1xqkp9AyOyR5cGKeTSyTir+Qvbj2VunK5krhhN7Uh6
vWK0qakp2SzKo95TXP5C/3+61XJ+dfp0RjRVO04TcOfz3eJhqD2mFi9Y/fHw
ZKj0NWZHpRi5ULP1uf9ufq5b8uBL4k0B77i9YKKvqfj1jeLVTbxJ7B0blz0c
G1FO9VncU1oeLAlFZA8tPVLLpeoccs1OpbxA+Wj79A79qh2s5idCqxg11Drp
6/WJx1GRZsXnEck2tYpRHvWe4p0XetPZpj+f/F9/SOgjI2ff+u70Un7uex+u
WvDo//3UpubBsKvSu72Jf772ktzZn/rmvdnAU5aLaa9N3M5tKV5V6Zrz12UP
LW1Sy6VCXvCcxWq+r5gncEt6xWjsVnrzdc9cqtU6iSw6l4pRHvWe4tkX+qmz
Tf/b/0j4NKghbdVeu7Td9+uPhTI7SsQQ36tt765P5F25+I7ltcZ99NmSGbdz
8wp1l1pVarkB37FVpZZSzqWTWtO+KZqu7Wji6UKjVYy++sorIovqy/SWcXT2
XPqTZctEFq07cmTudfc86r2GF/qkxN5iqv2duGkm2f7ufL5bv4/iN39q/7qn
JxwOj7Seqd79a8Ozlni23PVfLlm1hEa7bea+53LfK9rzb4/+Ja9QBgXdw+6r
KrU0l1zaPnRNXc03RNOqHWduevesavFE+sfystiKUb1fNJFLz6Xiw9/Ytq2i
sjJ05Uq6xsaj3oN4oU+K/telXQ49xc+hJsb6q/72AfUZ6Z/2nR0eNf7fvqai
v3pwxhvqfy7nXYObjFyomd5ReL6IV6hYvoG4VaXuexTMJZcKazua1Ghatn3G
OVCfHkj7OO1Mqxjdmpe3fPlyQwqN7XG6Zyh9bOlSEWgPHToUDAYzMU4e9V7D
C32yxN/JCz94SE/yFX1u2NzqGD0N2l973D3FM28A/uED+ebvargEr1AxZqkq
TW13ic3NMZcKIoWaDycVeTW947Sb2IpRyzZRy95Ryyy6aePGgwcP6hWjWcKj
3gt4oU+SVgylP1pj2/WRab3FLz2yZMnPKi/O8nvCdW/q365LHnzp8NXurA0P
WcUr1F3qNvOGbouZ0prLLqgqtTT3XKqu5otcGrs3v2y7UrPTfav5kUjE7/dr
FaPa/aKJl97HRlPxsVrFaEuLvIImHvUewAt9skYu1MTe3jBvd7PsEXmHuuns
3u+Mehr0CW3x7fox91m4Fa9QUWpVqT+klHUaJ0vLg76BEbfuCJh7Lp3UVvPN
e/NdsZo/PnrnxMkTWsWo9oKlNxwmdYmP0mqdRBYNh8Oyvywe9V7AC32SRjuL
/urB2FwqHhruqymwJ/FMe/Hw737zp/Z7/L6YGX6vf7u6G69QUVNVpaYV/IJu
N3/rpyWXitCuruabomle8Fwah5pNIj3qFaP6rpAU4qheMRqJ2GxHCY96t+OF
Plnm4gKP/4XYUeTsa99fqL134LYTN+MVanIyp/2a5QZ88euyh5ZZacmlwpmb
/ea7TJWane1DjvkL7LjYUVRYuGnjRm0rvXalkEXTUjGacTzqoeGFXnPhgBZE
Gwe+0jaLaRcdBfYS/XZdeLfFS/ZokDGef4XySFWppXTlUuHxwHGL1fzjpWkZ
Z4Z83dPzwf79WzZvfmzpUv2W0RSyaBorRrPE8496TOGFflJdwX/3OwvEYz/3
3M3x0TvNWx/VHx0z784dCgQCHq8skCtc96Z+J5X4x5I9HGSMt1+hSkIR61Dq
uqpSS2nMpepqvq/YHE23d7WlZajpIqJjaWlpbm7uk088Yd4sn3gWFR8uPkl1
dbUIt7K/puR5+1EPHS/0Im1qQVTf5RS7Fyy2OytU+pr4u8prv+HW7QY2J94y
lL/6mDa3z+nJLufhVyi1qrTqskUobej2yJviNOZSwTfYY7maL73NQKsYfTs/
/6mcnNl30M+eRcVTYkYrRrPHw4966Dz6Qj8cEU8I+jN827vrRdoU+XP6y+9p
EH8n2l/Lku//69QtptGFfu+eADXaWbmvqKS0/ODBgx/OgfgkxbUtKZYu9jRo
T9HiOdzd+z7sRco/vVdfoURYUmq7LEOpV56f051LhXltfovV/JMVafnkSYlE
InrFqD4jpJ8HmnguFS9PL27aJB5TX375hXvmSbz6qMcMHnyhj2ZO9XkgegCW
dgjaDx/In7G/KbqsH7uU33a6ftWCR5c8+FLcJljXi5x94QcPaetKSTXjGdak
tL/SNeevJz8CtV9i6oYT+ruySco/vSdfocSXaV1VWnXZU3f+pz2Xqqv5jXuN
ubS84J3ubPTGj4/e8fv9xa9vXPTLl/VapxRuGRUfu+b557WKUXdOj3jyUY+Z
vPhC31v8kuHBvvihn5o3NzVvfVR/M6u/Xc1rvyFlzLYQ7W14Kidn+RyIDxfX
9378oxR2k935fLf2L3L/st3SF+C8Rco/vfdeoUR6iVaVmkJpedBrB8+lPZdO
aqv5saG0bLu2mp+5A7P0ilG91kkEy3suypsvkUXF52lqarJFxWhGee9RDwNv
vtDH3juqp03zoU76X45+/UtthzvfomZdKkdo3Z3B5ugHR0vin957r1BqVanV
XievrGTFyEQuFZTWo9M3mmo/ET+erk7jHxFbMWpYKUjqWrXyWa1idCLU755l
+nvy3qMeM3j1hT5yJVD+6mPad7742tXZm2HLCZwhvc508YLVxbUuXTdxAq0h
Qbv1wmsTR97lsVeoNeevW4bS+W2DHoold2Uol6qHZ9XtMe6BqtpREuqcy6cN
BoOxFaPmm0UTzKJaxajP97H750Xj8dijHrE8/kKvTtoMRybG+mePmgn+NmSa
dg+w5e0WcC0vvULltd+IbsA3HTbqgapSSxnKpULZN5fUFXxDNK3bk+xq/tc9
PQcPHtyyebOWRc33USd4aRWj1dXVjqkYzSgvPephwAu9B6cgHEq/78Kz36se
5ZlXKLWq1DKU+kOyhyZN5nLppLaab46mrUfv+YEiOv6xvEyrGJ1L3b34cBFo
RRYdaT3DpMcMnnnUw4AXejjFnc936/cAyx4Lsssbr1DNg+GpqlJDKG3oduuX
nIiM5tLekVvqar6pNspyNT8cDmsVo8uXL9d2HOiJNKlQ+vSixRu2/KpyX5Fe
McrciAVvPOphwAs9nEJ8r2rP/OpBBreS3yoFR/PAK9QsVaXe2YhqKaO5dFKd
o+60XM3XZi8jkUhjY6NeMZryqfRaxWhRYWEgEEhls6cHeeBRDwNe6OEUIxdq
tGen3/ypfbbfF60wyv9qmKd9t3H7K9RUVal5r1PV5eZBr257uSvTuVRQTlcb
aqMW/fJlcT23erWeRfVjQJMKpSKLvle0x7UVoxnl9kc9DHihh1OI79VVC9ST
Yf+ltmOW3zYx1l//4v3GMxHgDq5+hVJr3v0hi1DqvapSS1nIpepqfu0u5T/e
uu8XLyj/+Dfi2+x7P/5RCjeLapeHKkYzytWPehjwQg/H6Gl44QcPie/Vv9jp
E68dA1evmq/+a0MjrWfeX/3AQi8dCeEtM16h3nfZK1S8qtL8r3jmVWU0lwYC
gaLCQq1iNOUgujBa61T8+saaL7oiV7JxaJQnuPpRjxl4oYdDTPQ1vfXdhUmt
mnmwddwL9DvhtVcoNx0Nv6HjhmUo9WwrlFnac2kwGPxg//5NGzfG1t2ncMuo
Vuvk8308EZrqD2RhMY1c/KhHLF7o4RjRe0gMx2zNfvGe2p1GO6v+9oHYf2jX
7NPM/2rYOpSe6pM9NBtJSy79uqentLRUrxg1dN0n3ngvPvyNbdvqjhwJXbmS
xq8RRu591GMGXujhFNEDyJI9PHrN+evMV7hHT8OugoLi1zdafhvc94sXct/7
sPT3f3DuLEpF34h1KPWHaA2KlXIuHbh6taKyMjc396mcnNiu+2RzqXjRFIFW
fCoqRjPO7Y96zMALPZxjYqy/6dgnlfuKSkrLE/xRPFmdHR6VPXCkTeRKQPyz
FhUWHjp0yPJfXPyv4toWh0Y48b06VVVqaoViKsAgqVxqqBi1zJ8J5lLlH/9m
0S9fVv7jLaVs+zMXPnPod5qzuPtRDwNe6OEg4t1QUm+IeJqCg0R3f3dZTJbW
dnm8qtTSPXOpeK7QKkafW706NnPGy5/xLq1idFdBgZpFP9qud0ap1aZVO5oH
w8zSAGnECz0ASDc0NhavqtQ3QCuUhXi51O/3iwwZWzGa1Gqgfq1ft058npaW
Fr3WKS94zngClEinvmJeFgEAgJsoJ65YVpWWhDgJ2pqeSzdt3NjU1CQy5Jrn
n39s6VI9iCa1cUm7Vq18Vq0YPfZJvIpR5XjpjFwaPQ1qbUdTlr92AACADFFa
ByzuKS0Lrjl/XfbQ7OuD/fu15fjY+0VTmB1duWLF2/n5fr8/Ern3W4D2oWtK
zU7jrGnVjjM3+7PwJQMAAGSUCJ/RvU6dhvnS+W2DLBAbfN3TI+Loqy+/rFeM
plbrpFWM1tfXD1y9muwY1nY0Td1cqufS8gLl0wOZ+HoBAACypqD7blWpYRGf
qtK7RHT88MMPtYrRRLYpxcuiWsVodXX13CtGRQqdcYtp9Cd5wXO8jwAAAA7l
G4hbVerxPkyRRUWA3JqXp1WMJrV9PjaLPr1osVYxGgwG0zi8Mzf7p+dLY37S
PnQtjX8KAABAdkxVlZpzaUN378gt2aOTIBKJ1NfXv52fv3LFisRTqGWt04Yt
v6rcVxQIBDI3gfnMhc/U5Xu9NorVfAAA4ExqVWlDt8VMqceqSsdH7/h8H2sV
o3qtU7L9otrWp00bNxYVFn755RdZm2pWfMXTk6Xaan55QV7wXHb+dAAAgLlT
q0r9IfNGJ+9UlTYd+0SrGH160WLtQM/UKkanzh98/vlEttKnXfNgeMZqvhZN
a3Z66p0FAABwNLWq1LzRqSxY0D0se2gZ1NLSIrLo+nXrHlu6VMuTqTXe6xWj
1dXV2q8kcg5phixsP2boMlWvkxWyxgMAAJC4+W2DStn/Nq/g57S7cMtMMBgs
KizctHHjk088Ebs0n3LFaGzd/X82NkrPpbfHJ5TGvTM6o6LXO90BWUMCAABI
RF77DcuqUqV1QPbQ0karGN2yebNWMWp5y2jiFaN1R47Eqxi1Qy4VfIM95lyq
1Oz05uY1AADgCC6uKhXRsbS0NLZiNDaFJp5LxYfn5uZWV1eLcHvPP9QmuVRQ
/uwz5lJxna6WOyoAAABLalWpOlNq0Qrl0KrScDgsAuQb27YtX778npvoZ8ml
WsXooUOHkq0YtU8uVTeyNe41R1NW8wEAgN1c/Pa2UttlGUp7x8Zljy4Js1SM
JlXuJLLopo0bP9i/fy4Vo/bJpZPaar55yrR2F6v5AADAPgbGJ6yrSqsunx0e
lT26exsfveP3+w0VoynU3YuPWr9uXVFhYUtLS1qmiG2VSwWl9ahFNG09Kntc
AAAAqrtVpaZQWh6s6LN1VemJkye0ilHz9qWkcqn4DOLziCwau5U+LeyWS9V/
67o95j1QJaFO2UMDAACYVE71WYRSu1aVBgIBvWLUvGsp8Vy6csUK8XkMtU5p
Z7dcKpR9c8liyrRuz0DGjkMFAABIRE77NYtKqLLg/LZB2UOb9nVPj1Yxqh+9
ZI6dieTSp3JyzBWjGWXDXCooJyssaqNYzQcAAPKoVaU1Nq0qFVm0cl/Rhi2/
evKJJ+Zy9JL4cJFFq6ur41WMZpQ9c6l6O3HtLnM0LfvmkuyhAQAALyoJRaz7
8/0hWUMS0fGP5WW5ubkiTGqToqkdRi8+fMvmzQlWjGaUPXPppPqv32m5mu/Q
QjAAAOBczYPhqapSQyjNelVpJBIRAfLt/PyncnJEFk0tiOoVo5X7ipKtGM0o
2+ZSQTldbY6m89r8sscFAAA8ZJaqUvG/sjCA8dE7esWonkVTOJVeZNEXN23S
KkbtOdFn51zaO3JLXc03RVPfoORJZgAA4BFTVaWmjU5K1eXmwczuBvL7/Vqt
k14xmtpKvcii7xXtaWlpuX3rTkYHPHd2zqXCO90Bi9X8xr32DPkAAMBNbotQ
6g9ZhNKMVZXGVoymvEYvrlUrnxWfp6mpaSLUn/LpS9ln81w6GWc1f2H7Mdnj
AgAALqdWlZpDaVkw/6t0VpV2XOwoKixcv26dtpX+kSVLUlijF9fKFSuKX99Y
80XXxFh/GoeXTfbPpepqfs1OpbxA+Wj79A79qh2s5gMAgMzZ0HHDsj8/La1Q
esXoHOdFf7Js2dv5+T7fxxOhfm01eXzU7ov1s7B/LhXygucsV/MdNC8NAAAc
JP+rYcuZUuVUX8qfc+Dq1YMHD27ZvPnJJ57Qq+xTyKLiw9/Ytq3uyJHQlStp
/JLtwBG5dFJr2o8NpeUF4se1HU1EUwAAkF4VfSPWodQfSjZ4hMNhrWL0J8uW
mc9aSjyXarVOFZWVI61nXLzLxim5VK1oqNoxtY5ftl1fzT9z06l3UAAAABs6
Ozw6VVVqaoVK8Eh0vWJ0+fLl8Y6bTySXiiy6YcuvKvcVBQIB7TO7fjrOKblU
WNvRpE2TzjgH6tMDsscFAABcYqqq1DxZWts1e1Xp+OidxsZGkUVXrXxWC5yW
J86bL3MWfXHTpqLCQttWjGaUg3KpIFKocQNUdDVf9rgAAIDjiRwYr6rUN2Dd
CmVZMRq7TJ9gLl3z/PNaxWg4nNlOVJtzVi5tH7qm7s2PvdG0bLv4FVbzAQDA
HMWrKi0JRWJ/WyAQ0CtG9aJ7w42jieTSlStW6BWjsr5ku3FWLp3UVvPNe/NZ
zQcAAHOgtA5Y7nXa0HFD/N9gMKhVjBqSZ7Jb6Z/KyRFZtLGxUW9zcv0to0lx
XC5VT1749IA5muYFz8keGgAAcKQ156+bQ+m83c1/sdO3df2a7/34R08vWmye
Dk2qYrS+vt5ZRy9J4bhcKpy52T9j65N21exsH7ome2gAAMBhCrqnq0pFFp33
6333/eKF2CyacsVodXW1+ypGM8qJuVR4PHDcYjX/eKnscQEAACdRq0o/aNez
aAoR1GsVoxnl0Fyqrub7is3RdHtXm+yhAQAAu4tEIvX19W9s26Zl0YcXLXpk
yZLUsqheMaqt0bNSPxcOzaVC82DYcjV/9noxAADgTXrFqFbrNJepUa1i9Msv
v2BeNL2cm0vFd9e8Nr/Fav7JCtlDAwAAdtF07BOt1km/ZTS1LLpq5bPi81Ax
mlHOzaWT2mp+415j0355wTvdAdlDAwAA0mgVo+vXrYutGE3hmqoYPfaJ7C/I
KxydSwXfYI+xZj+6mt87ckv20AAAQPZ83dOjVYxqRy/Nctbn7NdPli0rfn1j
zRdd1Dpln9Nz6aRahHt0erJU/8npatnjAgAAmSWy6Af797/6yivavGhsxWhS
uXTxQz9d9MuX644cGbh6dTK6IKv33iObXJBL1dNs6/bM2ANVXiB+LAl1yh4a
AABIMxEdS0tLt2ze/OQTT1ie9Zl4Lr3vudx5v943b3ezcoKWUVtwQS4VDl/t
Ni7li6tuD6v5AAC4QCQSqa6u3pqXt3z58lnmReNd0/OiDz983y9eEFn0L3b6
okX6nWqjvj/EtnqbcEcundRW8w1L+eJqPSp7XAAAIBXjo3dq6+rezs9fuWKF
ZQRNMJc+smTJq6+88l7RHnVeVARRLYtWXVZzqfhJQzezWPbhmlw6tZpvqo1i
NR8AAAfx+/1axWjKXfexFaMtLS0i34rkKfLnVCK9e+SoelVdPjs8KvsrxjTX
5FJBRFBjZ1R0NZ/JeQDQTYT6207X+3wfV+4rEq/aJaXlFZWVNV90NQ+Gb9+a
sdFjYqz/4uHf/eZP7eJlnV3JyKgTJ09oFaOPLV0au0afcsWo+D7XP7k6c+UP
Tc2OlsVc5UHfwIjErxpmbsqlgnKywuIQKFbzAXhe5Eqg9Pd/+LdH/1KvFte6
dMQlfiJ+ZWH0KMYNW35VXNsiMqrIom3vrhe/cv+y3b1j47KHDxfquNihV4xq
WdSwRp9sxWjsDvrYd1LKqb4ZcfTuVdA9LOPrxmxclksHxieU2l3mvfmHr3bL
HhoAyDHR11T8+kbLY262PvffxS9aHoIjwqoWXJW/PzDAZCnSRKsY3bRxo/62
yJxIEyl3+smyZW/n5/v9/nsevZTTfm1q+X5mKJ3fNpidLxlJcVkuFd7pDlju
zWc1H4AHheve1CZCY1/T//r191s6e0XavPvEOBS6cqXp2Cflrz5mDgPkUszR
wNWrBw8e3LJ5s7lidPY99YZvxSefeEJkUb1iNBF57Tei+5tMubR1IKNfMlLm
vlwqKKerZ+zNj/44r80ve1wAkD3aQry5rdHyhjptAVTE1JELNa99fyG5FHMU
DodLS0tzc3NFmLTcOJ9gLn160WLxSaqrq7/u6Ul2DCWhiHUoparUxlyZS9Vt
dzU7zTea+gaT/q4GAIfqLX7JsJd53psNCd0pOtpZ9FcPxuTS98mlSIRWMfp2
fv5TOTmJ1DfFy6Xi+3bL5s0i1gaDwZQ33In3X9NNULGhtKGb9VM7c2UuFfKC
5yz25jfuZUspAC+4ePh3hltGf1Z5cXJyKNGPj5x967tTs6ZLvv+vH7M7BHGM
j96pr6/XKkb190Hm4+kTiaYih3ywf38gEJj7AaAXv72t1HZZ7HWiqtT23JpL
J7W9+aY602cufCZ7XACQYT0NL/zgIcNM6e1byXU9jVyomcqlD75ELoWB3+8v
fn3jol++rDU5aEE0hYrR51av1ipGI5FIusam7oBu6DZvdFKqLjcP3mOTFKRz
cS5V3y7V7DRG06odWv+J7NEBQIYM1b94f+xL/+IFqyv6UilpbN76qEgd5FJo
AoGAXjGqfWtZljzc89IrRjPxWizefE1VlRqu8mBqjwJkmYtz6aS2mm/IpWXb
FV8xq/kAXOvCAUMMmPdmQ2qfSZsyJZd6WTAY1CpGY1feU8iiK1esKH59Y80X
XRNj/Rl9CVarSs0zpWXB/K/4Jk7FSOuZ4tqWbP6J7s6lgnK81DBfKn5c29Ek
e1wAkH7jo3eatz5q2O6U8iuyiBD1L96/eMFqcqmn6BWjsWv0iTeL6pdWMerz
fTwR6te2GmV6sXJDxw3L/nxaoVKg9x5n+WQN1+fS9qFrlqv5Z2723/uDAcBZ
Rjv1/UraJV5TLn57O+XPFyp97a9ff5+78lwvtmI05ZtFF0YrRt/Yti2pitF0
Ee+/LGdKlVN9WR6J02mJVH/3keWmONfnUmFtR5O6fG84BOrTA7LHBQBpFq57
0zBZ+hc7fXP5hOOjd27f4oZ8dwqHw38sL9MqRmMnRZMNpU8vWiwCbXV19Ujr
GVkVTBV9I9ah1B/izr3E6XOksf++5NJMECnUfAhUXvAc364A3KS3+CXjzaW7
m2UPCjYSWzGqvYXRzwONXaxPJItu2PKryn1FgUBA+8wSX0/PDo9OVZWaWqGo
3k1cqPS1hdGjN94r2vNvj/4luTSjztzsn17N1ydOq3a0D12TPTQASA/t5lLt
sHs9PLDdA+Ibo7GxUa8YjY2gyS7Tb9q4saiwUGRR+1TTT1WVmidLa7vmcgeL
B41cqKn5omvqP84XkUsz7ZkLn7GaD8DVjA1R4sprvyF7VJDD7/drtU6xWdQw
NZpIFl218tm0V4ymi4jHVJVmBLk0K9TVfD2aaqv55QV5wXOyxwUAaTH08T/9
X+RSL4utGNVvEzXccpzItXLFCvF5mpps3V0zVVVqDqXlwZKQ7SK0w5BLs0K8
e4pdxJ+KpjU7meoH4AoWuXTN+eucJOJuX/f0vFe0Z/26dfpcqL6JKaks+pNl
y6YqRkPO6KtRWgcs9zpt6OC92JyRS7NlYfsxQ5epep2skD0uAJg75ku9YuDq
Va1iVD96KbXrySeeyHLFaLqIN1yWoXR+2yA7mtOAXJot6rR/494Zd5lGr3e6
A7KHBgBzRC51M5FFP/zwwy2bN4swOZe9S3rFaOjKFdlfU4oKuoet+/OpKk0X
cmkW+QZ7zLlUqdnZO3JL9tAAYC4scun6YyHZo0LqIpFIRUVFbm7uUzk5sf2i
yeZSrWK0orJSYsVoulBVmg3k0uxS/uwz5lJxna6WPS4AmBP6S11gfPSOVjG6
fPlyyzNA9Wg6ey6NrRjVApsLYttUVak5l1JVml7k0uxSmyUa95qjKav5ABzt
zue7DeFE+fv3s3m2NVL2n9GK0edWr46dDjXU3Vtehn/xFzdt0ipGw2G3FSX1
jtyiqjRL0pdLt2zevH7dusSvVSuf1b6xn3ziiaQ+UFwtLS1p/DvIMnU13zxl
WruL1XwAzjXR1/Ta9xfGppTFC1bTmWNbhlqnlE+lFy/l4vOIF2X3ZVGdOqHk
D1ks31dd9g2MyB5dJo12Vu4rKiktP3jw4IdzID5JcW1LoiEnfblUuwUl2cuw
NJDgh5w4eSLlcdqB0nrUIpq2HpU9LgBI2VDz1kdj59AeWbLkZ5UXnbLJ2gs6
LnaIDLl+3brUIqh+TVWMHvtE9heUJcqpPqWs0zxZ6v63XZGzL/zgIS2hzT5z
Psulv+VZc/56Qn+obXJpUtHU7/enPE47UN981e0x74EqCXXKHhoApELkzzuf
7zb0qP/wgfyzw6Oyh+ZpX/f0FBUWiiwq/mlS20SvXbEVoy64WTRx89sG1URq
CqU57R44TDxy9q3vLhTpbvkciA8X1/d+/KNd/5VYjE9fLm1paTlx8kTil3i3
peXS51avbmpqSvwDxW8euHo15XHaRNk3lyymTOv2cPs0AIeaGOs3n0aq1FxO
/ROG+nlKTIF4ifxg//5XX35ZW6M37KNPPItqFaP19fWOqxhNlw0dN6xboVoH
ZA/NYZL4zpG376mxsVF7sLz6yitZ+0NtRTlZYVEbxWo+AMcauVBjyDaLH/pp
ovMkM108/LunFy2e92ZD2gfpSuFw2FAxGm+NcvYsKv7O39i2rbq62rkVo+mi
VpVatkJRVZpRUvfja2sKntqPH0v8bSu1u8zRtOybS7KHBgCpGB+90/buepFt
Yu8yXfLgSxV9SW0PGWovydU+/GeVFzM1VueLRCIiQG7Ny3sqJ8dwE2BSuVSv
GA0Gg55ao5+FbyBuVanTW1jtjlwqVUmo03I1n297AA41MdZf/upj3/vxj0Ta
0Xc9aLOmiazljbSeeX/1A9qrEg2oZuLvsLau7u38/JUrVsxe5XTPXCqy6Af7
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
tDiKAA==
    "], {{0, 784}, {904, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{904, 784},
  PlotRange->{{0, 904}, {0, 784}}]], "Output",ExpressionUUID->"de994fd5-180c-\
41dc-8c8e-9f18debdd0dd"],

Cell[TextData[{
 StyleBox["17\[Dash]18. Sketching derivatives",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Reproduce the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "679838c1-4f67-4e72-af4d-d148f713618b"],
 " and then sketch a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "1d30fa0b-6b87-4cd5-803b-7ae2f34be5ef"],
 " on the same axes."
}], "ExerciseDirectionsCell",ExpressionUUID->"543a2b72-f73d-40c5-9e66-\
5e889c69e40a"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"8a8e88f4-1dd1-4aa3-aae1-bbd32348ece4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Q9wVeWh93tub0//2BnmllGgCXHOncHOHTpvlQp65VD1YK3Ht3Pp0CvT
2tMp6mmUdsRTkalcXp1px+E9Vo4caUVfK/UPU5SDqT0NJ4C8So+ZiURSKLFQ
NAVegZiM8u8AikxJ8twnecLDdmfvnbX3Xuu31pN8P/OMgxB2nmxWnv3NWmuv
9X/e9o/fuP1jY8aMuedT9j/fuPXev1248Nb/7//9P+z/zL3rnu/fcVf99268
a1H9HfUL/+/b/nf7m13/25gx/5f9Rf+vDQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKjr6+vp6+nt7c3
7YkAAACMcB0dHdu2tqQ9CwAAgJGvoaHh0Ud/nvYsAAAARri+vr5FixbV19fb
X6Q9FwAAALWevp4zx97pPHToVNEPOWX/tKvr3eIfUIbrr7/+sksvjeORAAAA
sq739Mljnbte29j4P/7lwbu/cWPN5z5XW1NjxzXrO4d+8Nkz3b+e/Wn7MXaM
+erS1r9U9ak/+OCDutpa+1A25Kp6IAAAgBAcenCyrSyXUrljzKyVXUM/+o9P
uDAb/Jifbq3mU7e0tLjHaVzfWM3jAAAABOHsme7uY+/39PWcbH/xtnETctPr
3j2n8z+6e9O0iZ+rq6116VW4zSL72YoV7hPdf//9VTwMAABAgLo3zblw4vld
Xos35/25zbOjv77n/Ad8c83RKj7bLfPmuceZPXt2NbMGAAAI0cEVX3MtVFtT
M2nc7YXP4OredNu4CfYDxqxsr+ZzfWHKFHcu2cV1dbboqnkoAACA8HRvmjnh
c/7s+jt//59DP8Q20uv1Y+zH3PX60Yp76cCBA7nHNHds31HdvAEAAIJzxL9j
sX+PVqEz58+e6V4xbVzt+Buef7fy+/s0NDTkdteqVU9WMWcAAIAgHV073+dQ
3djFbwy9punA2fVjZq2q5qT6JUuW5L6Pcv7826t4MAAAgDAdeMHv77JjxaH8
nVqHn/qHutrau16v5px6M3v27Nz9XdOnTavm0QAAAILUu2/Zx8f79Mq/gOqZ
th+OnVDlFSROnz59cV1d3hXDDh8+zA2DAADAaNO2+Iu5V5PIPXm++5ffsr95
02tV7exqbW3Nu1ir/d+mpqaqJw4AABCY0xsW+4ujfuLSh8+f4nWy9bZxEz7y
OxV5/PHHh14h/4EHHqh64gAAAKHJuYDqpIvm+vct7lnef1LWd16u5hhjv/r6
+qHdNWfOnKrnDQAAEJwjq2aN9UcA791zuv/Mq4EY+8SlD3dU/ehfmjp1aHdd
MnkyV08FAACj0J/+aaZ7P6Md01/Ya86d9FXl2xit3bt3D40ud0yzubk5jrkD
AACE5PSGxT6HPvNIW99ba6u/IaOzZMmSod3lRn19fQxTBwAACIoNLbezy+bQ
X029454bP2t/MfRaXuU6ffr0JZMn+5P288bnJ016771jscwfAAAgGGfa7rtg
vN/lZUup4D2DytXQ0OAPXw491GjHypUrq/8sAAAAQTn10t9/zBfRpHG3t/6l
2kfs6+ubPXt2se5y48szZ8YxeQAAgJAcXPE1d0DQjrteP1r9mw07Ojp8dBXr
LjtaWlpimT8AAEAo/Kn1YxZvPhXHA95///1RumvBgju5YRAAABhVjq6d33+E
8aK5mz+I4dE+/PDDL0yZ4s/jKtZd9vcvrqs7fvw46QUAAEaL3n0rpo2L5YJd
TkNDQ94p9MX2d9mxatWTdBcAABgl3HVTP/NIW1wPOGfOnBKhlbfLi7PrAQDA
KHG29aH+q6Te9ES1N2I8p6OjI2J0+dHa2hrTJwcAAMiovrfWzpzwuUnjbo/l
tC7nJz/+ccG4+sKUKXYUPOa4YMGdsX16AACADOjp6/nIBSKOvnrfBeNrJ1z9
4JunY/wU7oz63HFxXZ078mija/bs2ZdMnpxXX/Z3jh8/HtccAAAA0tS779nv
Tu0vn4nTF/92Z//vDERXjOfSm4Frpa5r3JgXXba4Ojo6Hn305+5/f/LjHx84
cOCWefOGnl0f1zQAAABSdLb1odz7JP711787bWL//YC+83JcZ3UNmjv3ptwD
iw0NDe73Vz76qO8u9zsvbX7pyiuu8B8869pr450JAABAKmx35V3PwUbXD353
KN7Psn//fv/gS5YsOXHihP+jod1lBi7ztWzZss9PmuT+aMf2HfHOBwAAIAUn
W28bN8FH15iv3Nv0TiyXpf+IpUuX2gefPXt2e3t73h8V7C7H1tq3b77Z/tHC
u++OfUoAAAB6Z890v7axcV3jxq1vdVV/+8Wh+vr6rr366jVr1vT29g790xLd
5TQ1NX155swPPojvfZUAAAAjV4lqGra7Sv91AAAARBSluwAAAFA9ugsAAECD
7gIAANCguwAAADToLgAAAA26CwAAQIPuAgAA0KC7AAAANOguAAAADboLAABA
g+4CAADQoLsAAAA06C4AAAANugsAAECD7gIAANCguwAAADToLgAAAA26CwAA
QIPuAgAA0KC7AAAANOguAAAADboLAABAg+4CAADQoLsAAAA06C4AAAANugsA
AECD7gIAANCguwAAADToLgAAAA26CwAAQIPuAgAA0KC7AAAANOguAAAADboL
AABAg+4CAADQoLsAAAA06C4AAAANugsAAECD7gIAANCguwAAADToLgAAAA26
CwAAQIPuAgAA0KC7AAAANOguAAAADboLAABAg+4CAADQoLsAAAA06C4AAAAN
ugsAAECD7gKAUWLXn3b/oX0ng8GIa7T9vm1ema69+mrXXTOuuqrcv9vc3Jz6
l8xgjKSx8432tF+ZMZK9/MrL65v+ncFgxDUaGhpqa2pcRwnGU88+k/qXzGCM
pNG0oSntV2aMZHQXgxHv0HdXU1NT6l81gzFiBt2FRPnu+vPePx8IREtLi5vz
ju07Dh48mPZ0Imlvb3dzbm5uTnsuUR3et3Nd48bG9Y122mnPpQy/+4/fuad6
9+7dqUxg3759Kx55pKzx7ZtvdhE1e/bscv9uWl9mR0eHe543v/w/U5lAZTZt
2OCmvXfv3rTnEhUrnsb+/fvpLgj47vrggw/SnktUO98Y/I5+++23055LVF1d
77qAaW1tTXsuUfX09YS4CrVsfc1N+/Dhw2nPJarz59X/5CdpzyWqEydOuOf5
d6/+R9pzKcNLm19y0z59+nTac4nKN8z/OhDQitfl5tzW1pb2XKLq6QlyxUNw
6C4N212Dq9Dvw1mF6C6VEN/PSHfJ0F0adBc06C6N7u5uN+dtbdvSnktUdJcM
3SVDd2nQXUAxdJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3QoLs06C4ZukuD7pKhuzToLmjQXRp0lwzdpUF3ydBdGnQXNOguDbpLhu7S
oLtk6C4NugsadJcG3SVDd2nQXTJ0lwbdBQ26S4PukqG7NOguGbpLg+6CBt2l
QXfJ0F0adJcM3aVBd0GD7tKgu2ToLg26S4bu0qC7oEF3adBdMnSXBt0lQ3dp
0F3Q8N11eN/Orq53Ozs7bSF0Zdu2rS1uzjbA0p5LVLt373Zzbm5uTnsuUXUe
OuTmbEfacymDzQA3546OjlS254MHD64u06233lJbU2O7a+7cm8r9u/v37xd/
gc6+ffvc82zXkFQmUBnfXfantrTnElWIK96uPwW44nV20l0Q8N21rnFj4/pG
/zrLYDAqGw0NDS6iKhgV/MWnnn0m9S+ZwRhJg+5Colx32eJqampKfWtnMEbA
qKa7Khi2u/jmZTBiHHQXEuX3d23b2rJj+46237dlf2zZssXNubm5OfXJRBwt
LYNHCl7a/FIoz/O2tm1+IUp9MtGHP5Bkn/NUJtCy9bU5ZbryiitcRH1p6tRy
/+7ml/9nKl+mP/i1acOG1P/Row/fqK2tralPJuJ45ZVXglvx7FTdnNPaPisY
fsWju5AozqvXCPK8+jDPMuW8eo1Az6u3GeCmzXn1ierivHqgCLpLg+6Sobs0
6C4Zuksj0BUPwaG7NOguGbpLg+6Sobs0Al3xEBy6S4PukqG7NOguGbpLI9AV
D8GhuzToLhm6S4PukqG7NAJd8RAcukuD7pKhuzToLhm6SyPQFQ/Bobs06C4Z
ukuD7pKhuzQCXfEQHLpLg+6Sobs06C4Zuksj0BUPwaG7NOguGbpLg+6Sobs0
Al3xEBy6S4PukqG7NOguGbpLI9AVD8GhuzToLhm6S4PukqG7NAJd8RAcukuD
7pKhuzToLhm6SyPQFQ/Bobs06C4ZukuD7pKhuzQCXfEQHLpLg+6Sobs06C4Z
uksj0BUPwaG7NOguGbpLg+6Sobs0Al3xEBy6S4PukqG7NOguGbpLI9AVD8Gh
uzToLhm6S4PukqG7NAJd8RAcukuD7pKhuzToLhm6SyPQFQ/Bobs06C4ZukuD
7pKhuzQCXfEQHLpLg+6Sobs06C4Zuksj0BUPwaG7NOguGbpLg+6Sobs0Al3x
EBy6S4PukqG7NOguGbpLI9AVD8GhuzToLhm6S4PukqG7NAJd8RAcukuD7pKh
uzToLhm6SyPQFQ/Bobs06C4ZukuD7pKhuzQCXfEQHLpLg+6Sobs06C4Zuksj
0BUPwaG7NOguGbpLg+6Sobs0Al3xEBy6S4PukqG7NOguGbpLI9AVD8GhuzTo
Lhm6S4PukqG7NAJd8RAcukuD7pKhuzToLhm6SyPQFQ/Bobs06C4ZukuD7pKh
uzQCXfEQHLpLg+6Sobs06C4Zuksj0BUPwaG7NOguGbpLg+6Sobs0Al3xEBy6
S4PukqG7NOguGbpLI9AVD8GhuzToLhm6S4PukqG7NAJd8RAcukuD7pKhuzTo
Lhm6SyPQFQ/Bobs06C4ZukuD7pKhuzQCXfEQHLpLg+6Sobs06C4Zuksj0BUP
waG7NOguGbpLg+6Sobs0Al3xEBy6S4PukqG7NOguGbpLI9AVD8GhuzToLhm6
S4PukqG7NAJd8RAcukuD7pKhuzToLhm6SyPQFQ/Bobs06C4ZukuD7pKhuzQC
XfEQHLpLg+6Sobs06C4Zuksj0BUPwaG7NOguGbpLg+6Sobs0Al3xEBy6S4Pu
kqG7NOguGbpLI9AVD8GhuzToLhm6S4PukqG7NAJd8RAcukuD7pKhuzToLhm6
SyPQFQ/Bobs06C4ZukuD7pKhuzQCXfEQHLpLg+6Sobs06C4Zuksj0BUPwaG7
NOguGbpLg+6Sobs0Al3xEBy6S4PukqG7NOguGbpLI9AVD8GhuzToLhm6S4Pu
kqG7NAJd8RAcukuD7pKhuzToLhm6SyPQFQ/Bobs06C4ZukuD7pKhuzQCXfEQ
HLpLg+6Sobs06C4Zuksj0BUPwfHdtWbNGvs61dPXk/3xh/adbs779+/vCURn
Z6ebc2tra29vb9rTiaavp3F9o1uF0p5KGVpaWtxT3dX1blpPtW0S+4NM9P8u
X77cddeSJUvK/btpfRseP358sLv+43epPMmV8d1ln71QvhN3tm8Pd8WzP2mm
PZfIcla8tF+ZMZK57lq0aJFd8780dWpDQ4Pb8BijfLAZVDzsN1FtTY0dLqXK
GuX+Lfvxq1Y92dTUlPpXzWAEPXJXPLoLibLdZaPLr/akF4NR5aimuyrotKee
fSb1L5nBGEmD7kKilixZkvca4dPL/hBtN78MjrxvkFAGcx4lc7bfPhfX1ZU1
6mprfUeV+3dXr149ap/q0TbnQKed+kzKnXMT3YXEtLS0uOjy3eV+fe011xw/
fryvry/tCRbGefUaPWGeZcp59RqcVy/DefUaga54CIstq2/ffHPBYyI2vY4e
OZL2BAujuzQCXYXoLg26S4bu0gh0xUNw7Co0d+5NBU8dmXXttdlML7pLI9BV
iO7SoLtk6C6NQFc8BOflV15uXN8YVnrRXRqBrkJ0lwbdJUN3aQS64iE47joS
Nr0WLLiz4DuwMphedJdGoKsQ3aVBd8nQXRqBrngITu716hcuXBjEXi+6SyPQ
VYju0qC7ZOgujUBXPAQnt7v6+vqCSC+6SyPQVYju0qC7ZOgujUBXPAQn7/6M
QaQX3aUR6CpEd2nQXTJ0l0agKx6CM/S+2NlPL7pLI9BViO7SoLtk6C6NQFc8
BGdod5nMpxfdpRHoKkR3adBdMnSXRqArHoJTsLtMttOL7tIIdBWiuzToLhm6
SyPQFQ/BKdZdJsPpRXdpBLoK0V0adJcM3aUR6IqH4JToLpPV9KK7NAJdhegu
DbpLhu7SCHTFQ3BKd5fJZHrRXRqBrkJ0lwbdJUN3aQS64iE4w3aXyV560V0a
ga5CdJcG3SVDd2kEuuIhOFG6y2QsvegujUBXIbpLg+6Sobs0Al3xEJyI3WWy
lF50l0agqxDdpUF3ydBdGoGueAhO9O4ymUkvuksj0FWI7tKgu2ToLo1AVzwE
p6zuMtlIL7pLI9BViO7SoLtk6C6NQFc8BKfc7jIZSC+6SyPQVYju0qC7ZOgu
jUBXPASngu4yaacX3aUR6CpEd2nQXTJ0l0agKx6CU1l3mVTTi+7SCHQVors0
6C4Zuksj0BUPwam4u0x66UV3aQS6CtFdGnSXDN2lEeiKh+BU010mpfSiuzQC
XYXoLg26S4bu0gh0xUNwquwuk0Z60V0aga5CdJcG3SVDd2kEuuIhONV3l5Gn
F92lEegqRHdp0F0ydJdGoCseghNLdxltetFdGoGuQnSXBt0lQ3dpBLriIThx
dZcRphfdpRHoKkR3adBdMnSXRqArHoITY3cZVXrRXRqBrkJ0lwbdJUN3aQS6
4iE48XaXkaQX3aUR6CpEd2nQXTJ0l0agKx6CE3t3meTTi+7SCHQVors06C4Z
uksj0BUPwUmiu0zC6UV3aQS6CtFdGnSXDN2lEeiKh+Ak1F0myfSiuzQCXYXo
Lg26S4bu0gh0xUNwkusuk1h60V0aga5CdJcG3SVDd2kEuuIhOIl2l0kmvegu
jUBXIbpLg+6Sobs0Al3xEJyku8skkF50l0agqxDdpUF3ydBdGoGueAiOoLtM
3OlFd2kEugrRXRp0lwzdpRHoiofgaLrLxJpedJdGoKsQ3aVBd8nQXRqBrngI
jqy7THzpRXdpBLoK0V0adJcM3aUR6IqH4Ci7y8SUXnSXRqCrEN2lQXfJ0F0a
ga54CI64u0wc6UV3aQS6CtFdGnSXDN2lEeiKh+Dou8tUnV50l0agqxDdpUF3
ydBdGoGueAhOKt1lqksvuksj0FWI7tKgu2ToLo1AVzwEJ63uMlWkF92lEegq
RHdp0F0ydJdGoCsegpNid5lK04vu0gh0Faqsu4517trZvn1d40Y3tr7V1dPX
k9wk89BdMnSXBt0FFJNud5mK0ovu0gh0FSq3u062v3jPjZ91m9znJ01yv6it
qZl00dx/3ro/6dk6dJcM3aVBdwHFpN5dpvz0ors0Al2FondXT1/Prifv8Bub
bS33Xzfcb37qR7/pSn7OdJcM3aVBdwHFZKG7TJnpRXdpBLoKRewuG117ls8u
uMn57nL/HbN4c9LHHOkuGbpLg+4CislId5ly0ovu0gh0FYrYXWdbHxqsrPE3
LP7tzj93HT17pvvwvp2bHq6vq63N3etl//vgm8m+RtNdMnSXBt0FFJOd7jKR
04vu0gh0FYrWXUfWzRhrg2rMV5e2/mXIH773+opp43J3f4355ppTCU6Z7tKh
uzToLqCYTHWXiZZedJdGoKtQpO468ILdoiaNu/3fiuXUydb7Lhjvt726sYsL
5Fl86C4ZukuD7gKKyVp3mQjpRXdpBLoKRemu7l9+q7am5pr1nSUe5+ja+X7D
m3TR3KZ3EtzjRXfJ0F0adBdQTAa7ywyXXs3NzXSXQKCrUITuOrVuxtjSu7Ds
Fmi6N825cKLvrqJ7xuJAd8nQXRp0F1BMNrvLlEyvGVdd9fza5+mupAW6Cg3b
Xf2Xj1i38qGX3xzmXYpn2n44dgLdVQzdJUN3aQS64iE4me0u49Lr7rsLptf0
adNsetFdiQp0FYrtPkG53TXuds7vykN3ydBdGoGueAhOlrvLlNzrZdNrx/Yd
aU8wKrpLJrbuOtl627gJg+9nXLw5ptkVtnTpUnfNCvuDRqKfKEZ0lwzdpRHo
iofgZLy7TMm9Xl+eObPE7bMzhe6Siau7Tm9YfHFdndvS7vz9f8Y1vaHsK9QX
pkxxn+iSyZM7OjqS+1wxortk6C6NQFc8BMd3V4u19bWMjpaWefPm+Vu35I6r
rrxy04YN27a2NDc3Z/m/VuP6Rvs8v7T5pfSfz8hPu9s2+jeP1CcTedjtwc3Z
PucVP4j9V1s1a6zbxv5q6h2N23ZF/+e2HfKV666LOOzPDv6mkG7Y2LO/Gf0R
7GtEKs+zf3tLU1NTFr7FIv7XPl0BrHgfHXbRsE+ynfOWLVtSn0zEYb8L3PMc
4opHdyFRvruyPGyx2DF37k0lzvVKfZKMETPsxrZ59X9zRxjramu//4tfrWvc
6HNu2NHQ0FDwZ4Shw18VP+LHFxxPPftM6s8YgzGSBt2FRAXRXW6QXgzV+Ndl
N44d7KL5P3PR5XZXRhnRu6tmyG24K+sutzOEwWDEMuguJMp3V2dn5+Fse++9
Y/a/CxbcWexcr46OjrTnWJSdm3uem5ub3RcSBB8baU+kDP741759+yr46/Zf
593NS10LfeLSh3cefb+r6137m25EfBD7vP37+vUlxurVq78wZUrejSDzxiWT
J69a9WTpx7Ejre/cAwcOuOf5lVdeSWUClXlp80uhrHhea2urm/Pu3bvTnktU
fsVraWlJey5lcCse3YVEZf+8+lx9fX29vb233npLwf0GebfPzhTOq5dpqfK8
+t59yz4+3m5Oky6a+/y7vXHPrl9XV9ffzJhR+jij+83LLr107969ScyhepxX
L8N59RqBrngITljd5fyhfWexA46ZTS+6S6aa7urp69m6YEp/84y/IbnomnHV
VdGPM2Y2veguGbpLI9AVD8EJsbt2vtFe4lyvbKYX3SVTTXcdev57/S00cfqD
bybyopwXXbnpVeIMrmymF90lQ3dpBLriITiBdtf6gdPs6+vrQ0kvukum4u46
vWGx236U0eXG3P/6DZde/hfZTy+6S4bu0gh0xUNwwu0uO/bv31/i9tmZSi+6
S6ay7jrb+pDbcu56/WgSsyoRXffff/+jj/7c7fj6yY9/vOKRR4LY60V3ydBd
GoGueAhO0N319ttvl7iRUKbSi+6SqaC73t/2uMueVKLLDLk/489WrMh+etFd
MnSXRqArHoITeneZkjcSyk560V0y5XZX31tr3dbyg98dKvVxJ1vvu2B8BWE2
bHSZQvfFzn560V0yJbrr8L6dzz329OJ777Xb0vd/8avGbbtORX7Yk+0vPvTy
m3FN0j1ab+/gu1HoLqCYEdBdJoT0ortkyuouG13TJn6urrb2Oy93lfzAI7+e
/elJ427fXOZ3SZToMoW6y2Q+vegumSLddWTTw/XuJlPunED36zE3PRHhBp+n
dj15h/3gT35xZUx7eE+tmzHWTsB+9ta/9P8/3QUUMzK6y2Q+vegumTK6q3vT
nAsn2uj65AMbj5w8WfA6it3H3j+8b+eyG8faDxvz061lzSRidJki3WWynV50
l0yB7urdZ38QcBvDpFVtPX09R399T825O1vZ3ym11+u9193tGHwjxaN337Pf
ndo/n4vmrth+5L33jrlrkNJdQJ4R010m2+lFd8lE7a7uTfddMN7vK8i9hGmx
a2qtOFTGFb2iR5cp3l0mw+lFd8kM6a4jL/39x9xm4H8WOLjia7a4Bn9zZXux
h+p7a639WaP/Y+a/WHoPb0VOtS3+Yu3EKfbxF/92p7u71o7tO+zKHP+nSkCg
Kx6CM5K6y2Q4vegumUjdNXCyVrHcKthdY256IvoRmbKiy5TsLpPV9KK7ZPK6
q/uX33IbQN3YxW+cKxr/myW6y71/JPKxyEr09PXY9Oqf27kbytNdQJ4R1l0m
q+lFd8kM313n7gQ07PBbjv313w1zAth55UaXGa67TCbTi+6S+Uh3DRwcd9tk
7kmJxzp3ucN8tfN/tvPo+7Z/8h7Ev3+kgtMUy9R/MmT/d9CEq2162cn7k+0z
LtAVD8EZed1lMpledJdMhP1dR3atW/ncY08/9ewzpf/r2f+NeCZMBdFlInSX
yV560V0yud31p3+a6fMpb5sc2lrnnWz94dgJrtbu3ZP8F36m7bZxE/rPNLto
buO2XaUmliWBrngIzojsLpO99KK7ZKIcZ0zohaCy6DLRustkLL3oLhnfXSfb
X7Q94/JpzJJXIz/AEX8S/mceEZ3lPnjLLTvPry6lu4BcI7W7TMbSi+6Sqeb+
jNWoOLpM5O4yxdNr6mWXidOL7pLx3eUu/uDGTa9FPd+w+5ffcsfN68YujvMN
jCUd69zldnnZEX2q6Qp0xUNwRnB3mSylF90lk0p3VRNdppzuMplJL7pL5lx3
/euKaeMG3347/obn34120tTJVreLrKbk+xxj13no0LqF1w8eEr1o7r9Fv5xr
egJd8RCckd1dJjPpRXfJ6LuryugyZXaXyUZ60V0yrrs2r/5v0yYO/kN/4tKH
34j2HsE9y2fX1db27++aOL2sC6FUqbOz007YXcq1Jud6F1kW6IqH4Iz47jLZ
SC+6S0bcXdVHlym/u6xit8+WpZeyu3r6es4ce6fz0KHie01O2T/t6np32N0q
4XbXuoXX+/fYRs2YM20/HDvBHWS0qVbmtSNO2efzWOeuYscI7b/IgQMHuo+9
X/BPB1a8f/3Bf7nIpVcQu7wCXfEQnNHQXSYD6UV3ySi7K5boMhV1l0k7vRLt
rt7TJ+0r/msbG//Hvzx49zdurDl3pbVr1ncO/eCzZ7r9eeNjvrq09ClMRbvr
j08UfDKrHFUd2nvv9WVLf/rooz9ffO+98+ffbhvGP6zNGPvM+PHz37xR8AHc
RezLSjX7tD/32NP33PjZ2onTi+5b+3CPO4bo/lG+/mKBmzx2dnY2NTUNXtpi
IBenv7A34yfYB7riITijpLtM2ulFd8nIuiuu6DKVdpdJNb0S7a5DD04eer+A
/niYtbLAZdQGkiniviBld9kpfeaRtopj49Dz3/PH6fwD5v2iZuAKpUXq7vzb
GO246/Wjw8zkwz3LPt5/MWH7Sd015/34yInxR1/NvebwwD/KqqH7xNz9GTc9
XD/Mv12WBLriITijp7tMqulFd8louivG6DJVdJdJL70S7a6zZ7q7j/Vf/NNf
OcGPApef6t7kbm5+LgNKvb4X666+t9bO/a/f+H/m3TcvPvYBbe1U/ix8uOe1
jY2bNmxYterJe278rG+w/jO1Gpvs77+0+aWmpv5fFLxQqr/Cas3AefjDn9zV
u++5x55u3LbLPpp9NnKf9vMpO9BmedcWHvPNNQW7q3F9Y+45aeITzCoQ6IqH
4Iyq7jLppRfdJSPornijy1TXXSal9NKd35XTD/2v8os35/25vyv04AcUygCv
xPldA+mSxZOQ2tvb/XE9F5a5X2CxvVhnWx/yz0kFp1cdXPE1/9fPnRs2eCH6
T/3oN2eOvbNr3cq7v3HjmCWvFnxnpdvfteGF5T8cO8Elsf1v9Js+pCLQFQ/B
GW3dZVJKL7pLJunuij26TNXdZdJIL+V59b4B7Mv30Ou0D+redNu4/nPIS59S
FeJ59Tvbty+7cWyBvU8luTtlu1T7+OX/vewbMv7xifOHNcffsPmDwUuhuqw9
F3unzp7pLvi3XXe5a1/4YqzmqKtAoCsegjMKu8ukkV50l0yi3ZVEdJk4usvI
00t6HYnuTTMnDHaXHXf+/j+Hfoh9QX+9fkzNcCcyhdhdb/yhMfeo33ci7TU6
9dLff+x8qpVzV/dB524t5J727//iV3MunBj93o6+u3wx9idxBdMQCnTFQ3BG
Z3cZeXrRXTLJdVdC0WVi6i6jTS/t9bvOnyLe//JdaIfP2TPd/ZcVHe6CoiF2
1651Kz9ycleks6ROfeQZK3Tqe/RH8GP4k/PPyd3fNXgBMboLGDBqu8to04vu
kkmou5KLLhNfdxlheomvm3p07Xz/tdSNXVzgqqEDZ9fbwCi9MyjE7nIH+PzX
Hu1eP6c2zf7k+f1dlXTXR07x6n+Q+S9GP0cst7v8SfjlX0NMKtAVD8EZzd1l
hOlFd8kk0V2JRpeJtbuMKr3U16s/8ILfe2PH0H0+h5/6h7ra2mHfP1isu84c
e2fb1pYd23fY/+5s3x7Lf/t/UfCdhuWwf33dwuvd/i53Tnu0+Imhu862PpR7
wYoC7yQtznVX4/rGZ7879eK6OvcIky6a2/ROFt+54AS64iE4o7y7jCq96C6Z
2LvLvoL8zYwZyUWXibu7jCS91N3Vu89dXcrlR/4FVAcuzB7lClHFuss2hs22
gk9aZcM9Whz3xzm1atbYmnOnpk9a1SbrLnP01dwrUUS9I+SAwet3bdjgo5Hu
Ahy6y0jSi+6Sibe7BNFlEuguk3x66e/P2Lb4i+dDYvHm3P1I3b/8Vk3e5T2L
KNFd/oJU1Q9/ZC2GW1F/uOe2cRP8OxMj73SKo7vMkXUzxvrnJMrT6507zjh4
6dTBaIx8Wn4qAl3xEBy6y0k6vegumRi7SxNdJpnuMgmnl767Tm9Y7PPjIzev
OdlqyyTiraKLddexzl0727c3Nze3tbW1tLS0Vs0+iDvOWO2XPXCA1VXcpIvm
Ru6WOLrrwAv+grTF3s5QzND3M9ZU9rZKoUBXPASH7vISTS+6Syau7pJFl0ms
u0yS6aXvrtwLqNoC8Ye99iyfXRP16grhnVdva9P/q3388v8e+cKjH3k3YgXd
5d4f+pF9d8O9ZyGXP874ketIlPMIeoGueAgO3ZUrufSiu2Ri6S5ldJkku8sk
ll4pdJc54s50ci/i9+45bb9hXYxFf6NccN31p3+a6Xbx9XfLkGv1l5D7bsQK
djTZmvUnvA3ubSvnKKG7T1D+dSTKeUekXqArHoJDd+VJKL3oLpnqu0scXSbh
7jLJpFca3TUYIW5Mf6F/5u6kr+i3QQytuwbPsHLp9fUX34z+7kh/76T+e/RE
vfrEOQN3Cbehtf7gfjsBv8E8+GbUJ23o9erjOdstSYGueAgO3TVUEulFd8lU
2V366DLJd5dJIL1S6S530M3fdKbvrbU1w92QMU9g3XWmzd38qH9MuPqft+6P
/lfdkzOYXlHui+2du/m1q9mtC6b4fnOte86p/Xv2Ftt/5fZ3bXhh+ZwLJ/pU
LnijgewIdMVDcOiugmJPL7pLppruSiW6jKS7TNzplUp32ZbwO3/+auod99z4
WfuLMooiuO4auEni4JsBBy/CEPlIXc6VN9yVzaLtKzvlQsvvm8o9wcwmrv/0
h5/6h5riV7D398WeNvH8mwKyfBEJE+yKh+DQXcXEm150l0zF3ZVWdBlVd5lY
0yuV7jJn2u67YLzf5WVzotwLZIXVXUfXzvfdNeYr93YcKG/Fc6d4Df71Isf4
ek+ffO+9Y76H3Gldtq/8CfC2df27Gs+f4jUQhJ/60W+K7Wl0+7v8RSRKf3BG
BLriITh0VwkxphfdJVNZd6UYXUbYXSa+9Eqnu3Ju9+wyoLzTloLqrp6+Hn/J
sv7smf+zrq53y7v6/YEXzmdbwaOxB14YvOH4+BsW/3bnoee/VztxSt7582fP
dPv9ZjUDF259f9vjtsTsh5XYf+W669nvTvV/MeMHGU2wKx6CQ3eVFld60V0y
FXRXutFltN1lYkqvlLqrfx+Of39c9Ns0ewF1lzupfnB/0cQp3//FrzoPHSrr
79snx2dqwWt/5d2BsWbgvtt5J8/n5Z//RekruNrvqQ0vLHcnp9UMXG8ty3dm
dAJd8RAcumtYsaQX3SVTbnelHl1G3l0mjvRKq7v8qfVjFm+u4GyhkLpr4Hqw
/hoOKxqbDh48WPaDDBwQdP+4fzfkEmfuOGbuBlDwnaHuJkr+9PghJ9gX0NX1
7qaH6/11bod+6gwKdMVDcOiuKKpPL7pLpqzuykJ0mTS6y1SdXml1l0uFcq7c
/hEhddfAxRwGd0PN/9m6xo3HOneVu3/Pfvyf/mmme5ACV/H6cI8/FGif0hXb
jxR8fPub7uK0/dE1/oYob6u03eUfOYidXSbYFQ/BobsiqjK96C6Z6N2Vkegy
KXWXqS690umu3n3uelDRL9iVJ6Du6v7lt/z+ou//4le2u/5XmefVDxp4Y6Pb
TzX0GKIdvadP2n/N0kWX+2FR2u/9bY/722HbT1puLqYi0BUPwaG7oqsmvegu
mYjdlZ3oMul1l6kivVK8bupnHmmr+BHC6a7z7yBwBxkb1zdWcpxxgL/+Ru6F
IJJ0ZNmNY113fepHv1F8wjgEuuIhOHRXWSpOL7pLJkp3ZSq6TKrdZSpNL313
nW19yB0sq+ZUoWC668M9Pxw7wf1D2HRZ17jRdleF+7sG+EtSfP3FN2OcZkFu
T13NwLUvtm1tCWJnlwl2xUNw6K5yVZZedJfMsN2VtegyaXeXqSi9xN3V99ba
mRM+V9YtAgsKpbtsZA7elnHi9IdefnN9079u2rDh8L6d1TSMv9VjxUdpo3h/
2+Pu8OhfTb1jRWPTju07kvtc8Qp0xUNw6K4KlEiv62bNKphedJdM6e7KYHSZ
DHSXKT+9Eu2u/JOIjr563wXjaydcHf3+gMVkrbvsl7nryTtsUv7117+7/uB+
/5v+0g1jFm/e3t6/4q1r3FjudVOH6L8WfX8UDblYRFxcHvvoalzf2NZW+UFh
sUBXPASH7qpMuelFd8mU6K5sRpfJRneZMtMrqe7q3efeB2fbYPFvd/b/zkB0
xbWXJmvdZf74hDskVztxyvmTr7o3zblwYs3Aewz/7ZTZ2b7dfg9Wc35XjlO2
6OznsmPF9kpuNVvCyfYX3bRtK+48+r6dsH2e6S4gD91VsbLSi+6SKdZdmY0u
k5nuMuWkV0Ld5S8V5T7vX3/9u+4mNd+J6QJQWesufzyxP1dmrRr4IvvPqM89
INjePrjiVXN+l9fT13Po+e/VDFwU4usvvhnXyVfvbl7q/uFsLZ8auI4E3QUU
RHdVI3p60V0yBbsry9FlstRdJnJ6Jddd/tY2bthX8x/8rrzrtJeQte5yt/Kp
OXf+/Nkz3YO7+2pq/Fcdb3c5J9tf/MF/uSi+tzee2jT7k2O+cq+/c1BnZ6eb
M90F5KG7qhQxvegumaHdlfHoMhnrLhMtvZI6zjhwkXb/GXNfymORue4y5uiv
7/H337m4rq7m3CVM/Qck0V1mYMdXjM9s3il5fsWju4A8dFf1ent7h00vuksm
r7uyH10me91lSqbXvn37TJLn1Z890/3axsZ1jRu3vtUV+yUIMthd1plj79gv
+bnHnn7q2Wcat+3Ky6GEuitR9vuO7gIKortiMWx60V0yud0VRHSZTHaXGS69
0rpPUJWy2V2l0V0aga54CA7dFZfS6bV79266S8N3l33Og4guk9XuMiXTy8cA
3ZU0uksj0BUPwaG7YlQivb48c2ZDQ0Pj+ka6K2muu9asWXPVlVcGEV0mw91l
iqfXF6ZMee6xp9c1bnzjD42SW8/Eg+7SoLuAYuiueBVLr9qammmXX/782ufp
rqTZ7rLRZasg93IEWY4uk+3uMoXSyz6x9um9ZPJkm17s70oa3aUR6IqH4NBd
sSuRXtOnTbNPeNoTjCrQVchOeOpll7lrEeR1Vzajy2S+u8yQ9HJPrEuvhoYG
u82nPcGo6C4Nugsohu5Kgn0ZWrDgzoJHZ2ZcdVWJ22dnSoirUHd395emDl7+
KK+7MhtdJoTuMkXSyx1wdO9wDALdpRFcd+3du3f58uV23W5c39jUFMyKhxD5
7tq9e7ddPPeGoLm5efA7+vdtac+lqI6OjltvvWXocS53rteO7Tv+vPfPac9x
GPZLcM+zHWnPJZLW1tYrpk/PDQP//NvlVLZ52+ftJ2WaM2eOm+ff3XBDuX/X
vihrvi7Ltmuxc73sd6X9wrO/hmzasIEVT8Aucf5tF2nPpZQtW7bYrdquyW7F
uGTy5HWNG216pf3KjJHMdxcj9mG/eefOvang69T0adOeX/t86jMcSWPNmjWX
XXppwWd73rx57pYlmtHQ0FCwtxMaTz37jOxLa2pqKrYj16bXqlVPpr4ZMBhR
ht1W7ZY87fLLh54FumzpT22cp/3KjJGM7kp0kF6aUeJE+m/ffLN4Mvrusjmk
+dJcvpJejECHzy1/HkLe2Qj213bFDujMCoTId9fON9p3/Wl3EMPvdW9tbU19
MsOON3b98dZbbyn4OvU3M2a0bH0t9RkWG/6aY3akPpkSw24PNmILnkhv11j9
fP7QvtN+3rLG9ddf7yZ87TXXlPt37XeB3cbsP5Zmk7Cfy/5iyZIlxdLrpc0v
pb5JlBj+OCMrXqJjW9s2N+ctW7akPhm7Tdot1h9M9IlVcNG4ZPJkjjMiUSGe
V7+9vd39gJ/Z8+rz9Pb21tfXF9wHknf77EwJ4rz67u5uf3HUvCV00aJFfX19
aU8wkiDOq8+zdOnSoZu0/R1/I6Fs4rx6jSycV793794VjzzyleuuK7avuGB3
2f9dtmxZWnPGaBBid2X//YxDdXZ2FjvgmNn0yn535UZX3pg3b56/L3b2hdhd
J06cKHbAMcvpRXdppNhdw+bW0PRyv77yiituvfWWRx/9eWZXPIwMdJeGLYQS
53plM70y3l0louvbN9/c1NREdyXKdpfdpINLL7pLQ99dLrfsWholt3KHza0H
HnjAPsk9fZle8TBi0F0a7r7Y9nVq3rx5oRxwzHJ3lYiu+vp6N226K1Huvtgu
vQpu0tlML7pLQ9Zd1eeWfyi6Cxp0l4bvrm1bW0rcPjtT6ZXZ7ioRXffff7+/
LzbdlSjXXXY0NzcvX748lPSiuzSS7q4Yc8uju6BBd2m47rJjW9u2ErfPzlR6
ZbO7SkeXOXdfbLorab673P0Zi90+O2vpRXdpJNRdSeSWR3dBg+7SyO0uU/we
jplKrwx217DRZegulbzuMoGkF92lEW93JZpbHt0FDbpLI6+7TAjplbXuihJd
hu5SGdpdJoT0ors0YumuvQP3TEw6tzy6Cxp0l8bQ7jKZT69MdVfE6DJ0l0rB
7jKZTy+6S6Oa7hLnlkd3QYPu0ijYXSbb6ZWd7ooeXYbuUinWXSbb6UV3aVTQ
XWnllkd3QYPu0ijWXSbD6ZWR7iorugzdpVKiu0yG04vu0ojeXannlkd3QYPu
0ijRXSar6ZWF7io3ugzdpVK6u0xW04vu0hi2u7KTWx7dBQ26S6N0d5lMplfq
3VVBdBm6S2XY7jKZTC+6S6NYd2Uwtzy6Cxp0l8aw3WWyl17pdldl0WXoLpUo
3WWyl150l0Zed2U5tzy6Cxp0l0aU7jIZS68Uu6vi6DJ0l0rE7jIZSy+6S8N1
16pVTy5atCjjueXRXdCguzQidpfJUnql1V3VRJehu1Sid5fJUnrRXQJ79+61
1TR92rSCd4/KWm55dBc06C6N6N1lMpNeqXRX6ejq6+sb9hHoLo2yustkJr3o
ruQEcTCxBLoLGnSXRlndZbKRXvruqj66DN2lUm53mWykF90Vu9Bzy6O7oEF3
aZTbXWYgvX74j/+YYnqJuyuW6DJ0l0oF3WUykF50V1xcbs269tqwDiaWQHdB
g+7SqKC7TNrppeyuuKLL0F0qlXWXSTu96K4qjbzc8uguaNBdGpV1l0k1vWTd
FWN0GbpLpeLuMqmmF91VmYpzy/6bLl26NMu55dFd0KC7NCruLpNeemm6K97o
MnSXSjXdZdJLL7qrLBXn1rTLL7/11ltWrlxZwX2x00J3QYPu0qimu0xK6SXo
rtijy9BdKlV2l0kpveiuKKo5mOj2blVwX+zU0V3QoLs0quwuk0Z6Jd1dSUSX
obtUqu8uy764i9OL7iqh+tzyD0V3AcXQXRrVd5eRp1ei3ZVQdBm6SyWW7jLy
9KK7hvK5VVZrFcwtj+4CiqG7NGLpLqNNr+S6K7noMnSXSlzdZYqn15emTo09
veguL4nc8uguoBi6SyOu7jLC9EqouxKNLkN3qcTYXUaYXnRXornl0V1AMXSX
RozdZVTplUR32efhyzNnJhddhu5Sibe7jCq9Rm13aXLLo7uAYugujXi7y0jS
K/buEkSXobtUYu8uI0mv0dZd4tzy6C6gGLpLI/buMsmnV7zdpYkuQ3epJNFd
Jvn0GiXdlVZueXQXUAzdpZFEd5mE0yvG7pJFl6G7VBLqLpNweo3s7ko9tzy6
CyiG7tJIqLtMkukVV3cpo8vQXSrJdZdJMr1GZHdlJ7c8ugsohu7SSK67TGLp
FUt3iaPL0F0qiXaXSSy9RlJ3ZTC3PLoLKIbu0ki0u0wy6VV9d+mjy9BdKkl3
l0kmvUZAd2U5tzy6CyiG7tJIurtMAulVZXelEl2G7lIRdJdJIL3C7a5Vq560
3zgZzy2P7gKKobs0BN1l4k6varorregydJeKprtM3OkVXHft3bt30aJFV0yf
HkRueXQXUAzdpaHpLhNrelXcXSlGl6G7VGTdZWJNr1C6K4iDiSXQXUAxdJeG
rLtMfOlVWXelG12G7lJRdpeJL70y3l2h55ZHdwHF0F0ayu4yJdPrK9ddFzG9
Kuiu1KPL0F0q4u4yMaVXNrtrxOSWR3cBxdBdGuLuMnGkV7ndlYXoMnSXir67
TBzplanuGnm55dFdQDGzZ8+2r5V2BNQw9kXczXn16tVpzyWqpqYmN+cFC+6U
fdIq08u+MLk5/+3fXjvs58pIdFn19fVu2s3NzbJPWqUQu2v37t3ueZ479ybl
560yvfyKd/DgQcFsC6o4t74wZUrGc8trXN+oX/Gq9MEHH7g5XzdrVtpzwUhm
v5Fra2rsd3RHR0fac4nq1ltvcXO2a1fac4lqzZo1bs522Vd+3mrSy65Cbs4X
19WV/izZiS7r+uuvd9P+9/XrlZ+3GiF2V9u2bfZ5tmP6tGniT11NevkVz8aP
ZrZexbl1yeTJbs6PPPIv4jlXzK54dsJ22nPmzEl7LlGdOHEi4ooHVMOuQu5b
O6zucnMOq7vcnMXdZapIL9dddtTV1pZ4/ExFlxnoLvfZ6a5E2e5yc9Z3l6ki
vfyKJ+uu6g8m3jJvnvudgLpr9erVbs7BddewKx5QJffTnx1hdVeI+7vS6i5T
aXr57irx01/WosvQXSrpdpepNL1k3RXjuVv+J82wusutHqmseJXx3cX+LiTK
rULBdRf7u8pVQXoNu78rg9Fl6C6V1LvLDKSX+xEsenol3V1JnCofaHexvwso
KNDjjOzvqkC56VV6f1c2o8vQXSpZ6C67mS1btqysvV4JdZddP5N7Z2Kg3cX+
LqCgQI8zsr+rMmWlV4n9XZmNLkN3qWShu5yyDjjG212J5pYXaHexvwsoKNDj
jOzvqlj09Cq2vyvL0WXoLpXsdJcpmV779+/P/chYukuTW16g3cX+roTYbc++
oAR0yU3kCfQ4I/u7qhExvQru78p4dBm6SyVT3WUip1c13SXOLS/Q7mJ/V0Lc
t94lkycvWrQoiIu5IU+gxxnZ31WlKOk1dH9XiehasmRJql/QeXSXRta6y0RL
rwq6K63c8gLtLvZ3JWfh3XfXDByosv+1K559fbGTT3tSiCrQ44zs76resOmV
t78riOgydJdKBrvLREiv6N3lcuvaa65JK7e8QLuL/V3Jseuz35LduGTy5IUL
F+7YviPtqWF4gR5nZH9XLEqn18GDB92v7U9/oUSXobtUstldZrj0Gra7spNb
XqDdxf6uRPmy9cO9LNqle9WqJ9n9lWWBHmdkf1dcSqTXrGuv9T/9hRJdhu5S
yWx3mZLp5e+5k9ddGcwtL9DuYn9XouzSbV9Nhm6Q7kuw2/mCBXfu2L4jC+fc
Ik+gxxnZ3xWjEulVemQwugzdpZLl7jLF08tfZ9V1V8W5ddWVV8puUR1od7G/
K1E2qOzmV/C6we6rcL+wPz6vWvXk8ePH054vzgv0OCP7u+Jl08v+cFTwWzis
6DJ0l0rGu8sqdklVvwF/5brrMrh3a6hAu4v9XQJ2M46y3V4yefK8efMeffTn
LS0tXIAidYEeZ2R/V+xceoUeXYbuUsl+d5niNxKqYO/WAw88kNZ79gPtLvZ3
Cdg5uxfxEluv3/3lhv3q7CK5+N57GxoaSt9EPhRHjxzZHRR3toMdTU1Nac8l
qrlzb/Kv/mnPJSr/o7fd4NOeS1H2ZcX+TDTs61R9fX3aMy3Fn4q2atWT9itK
ezqR3H///W7ONn3TnktUdtF2c77s0kvTnkspixYtqji9vjR16sKFC+1Xmu6X
EOiK569ykPZcompra3OVUldbm/ZcyvCzFSuq+eHCZptd9u1PKM3NzYGejW+X
+lh+vNKMgKbK0Iy8n4yKfUzq84z4hQQxVUaWB1sRI/vjksmTbStWv6G688Hs
zxpr1qzp6OgI5Zx8212p/xMwGIwaXjEZDMYoGHaVm3HVVfEud7birps164EH
Hsi7aW82NTQ0fHnmzGuvuebaq68OYlxcV+ee57+ZMSP1yUQcvu0vu/TS1CcT
cXxp6lT3PNvJpz6ZYYfdhv3b7f34wpQpqU8syvCHzqddfnnqk4k4/BkaoTzJ
dlx15ZVuw/j8pElBLHp515n0w66B9o+uvOKK1GdYbLDiaUbu1XJSn0xZ07ZP
cvWtZb8Lbpk3b8Ujj3DufdL8d8fBgwfTnktU7oQNO5555pm05xJVU1OTe57t
hp32XCLp6+vLfYfj/fffn/aMopozZ46bc3Nzc9pziSrE8+p3797tfta2y37a
c4nKvqb4Vxmb5fp3JlZm4cKFbsVbvXp12nOJyq94t956S9pzicrGhk/xtOdS
Bn92aLnDnWC/ZMmShoaGw/t29vT1pP2ljBa2u9xra1jd5TYbuitRp0+f9vux
055LGebOvclt0nRXolx39e8ZuOaatOdSBr9noPPQobTnEpXtLjdnuitRIXaX
/Tasq62N3lpTL7vM/os8/vjj27a2fPjhh2lPf5QKdH8X3SVgvyuDW4UM+7tU
7ILv+vbaq69Oey5lsK87dJcA3SXQ19dX8JL1Q/dr2X+FxvWNAb3Kj2zs79Kg
u2TY36Vxfn8X3ZUwuksjuO7y13IpNq684ooVjzzS1fVu2jPFR7C/S4PukmF/
lwb7u2ToLo2wuuv48eMl3ipSX1//2sZGTtnKJvZ3adBdMuzv0mB/lwzdpRFW
dy0pdIegGVdd9eijPz98+HDas0Mp7O/SoLtk2N+lwf4uGbpLI6Duyrsjtp3w
/Pm32xUvlCudjnLs79Kgu2TY36XB/i4ZuksjlO7q7e31p9N/eebMxx9/PIir
m8Jjf5cG3SXD/i4N9nfJ0F0aoXSX3Qw+P2nSggV3trS0pD0XVIL9XRp0lwz7
uzTY3yVDd2mE0l12ZTt+/Hjas0Dl2N+lQXfJsL9Lg/1dMnSXRijdhdCxv0uD
7pJhf5cG+7tk6C4Nugsa7O/SoLtk2N+lwf4uGbpLg+6CBvu7NOguGfZ3abC/
S4bu0qC7oMH+Lg26S4b9XRrs75KhuzToLmiwv0uD7pJhf5cG+7tk6C4Nugsa
DQ0Nq1Y9ab+dT5w4kfZcomppaXlmQEdHRyiX5z1w4ICb8yuvvJL2XKLq6elx
cw5otTcDC76bdldXV9pziSrE7jp65Ih7nu0akvZcyhD6ipf2XKJ6++233Zy3
bNmS9lyi6unree6xp5969pk1a9aE8soCAKhAiN0FAAAQIroLAABAg+4CAADQ
oLsAAAA06C4AAAANugsAAECD7gIAANCguwDE7VRX17vHOncdLfLHZ469c+DA
ge5j70snBQAZQHcBiIUNrecee/qeGz9bO3G6W1U+cenDb+RdBfbDPesWXm//
qLamxo6vv/hmOnMFgJTQXQCq9eGeZR8fb5eRz0+aVDtxiltS3LjptZydXkdf
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
AKjM/w/DJuAu
    "], {{0, 486}, {808, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{808, 486},
  PlotRange->{{0, 808}, {0, 486}}]], "Output",ExpressionUUID->"2ed7a721-05f2-\
4da2-afeb-2a3ee3c28ef2"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"08532d2e-3e9b-46ce-a54a-5a16fc497b89"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AsoCAHHTs3PpVWOmT5uWvky7edatY75UVFj4tS2H/fv8lAUAYub4hrvNhl0X
JGUxvz/umgd2nfNxBSgLAMRKz86nPzfabNjT42J+s+CFXb6uAmUBgDjp2rzY
Kkh6XPoHllF3vfFJwtd1oCwAEBvn+46XFYwyU8l55W8+bFAWAIiN3vqniouK
ikbP9nsqsUdZACAuOivnXyGwG2VYlAUA4uHM7pcHd6yMnf7Y0ideXvdaze6D
nadOya8JZQGAWOhpuPfTZh+99av5j5In1+w9cUZytwtlAYAYSBzanPEEFus4
sUWv1Ph6DksyygIAMXBs+aT+fffZy6KXaTfP+vWeToGVoSwAEAs9fz36pyMH
DrdUvlT2L4vNJVxSylI0dpKOy9v7fY8LZQEwcpw9e/ZM3HWeOpXo7Tnfd/zU
h1WrH7/DDDLJcSmY/dz+Cxf1xzh/zMOHD7e6sbG83Hy6BSUlrv6i1tXV7d+T
Y+PYsWPbt29fv25daWnp4ocfbm9vHwmvFrilXxVBb8YQOtv+37attTUxXmrr
as1/vFlT21Bf3/87b5QtnToq5az8qx8qc/Wwk26cmPzXnS8pn9fJsmLF8uqa
rcLP25IlS1JWeMaMWyort8ivCUvIl3f+/d+C3owhdGJfFrPU1tbqTaLZKupf
q6oqy++bam26r7/uuoLbl+j0OH/AiRMm5FaWHEokXxZdkBvGj09581D/B3Fh
SV8oC9JZZfn9tj/o/47EYkYPvej/2L59e/+abxv+b+mPtP5D/xX9d01crEuH
VWyocL4Oehurxxbni95Qm+3ztcXFrv6iXlatKnP+ZXqylJaWJl9gLTlz+guv
qq4O/DVgs9TV1ZmXR2Njo/DzlvOS/JIOfGUcLvrppSzIZttQWc6cORP0ujj1
4b69Zp33ntDrnMfdunp2Pnj1GLPN1GXZ1ufdKqa5tAf/hz/08dN4Qb8Svjxp
ks0YNW/OnJMnTwa9mlk17dppXh4nTpwIel2camtrM+u8v+W/gl4Xp/RrgLIg
m+iWpWbr1tMH383zLpCHVs63fhp//mCvN+uXSYSODXtp7dphdwaFOS5RLMvh
w4cpC+IkumV5s6a2o+OTPB8q8d6L1hs+Dzf5uCGKSln0y2DK5MlODjMIbVwo
iwzKAhsRLYvZI3/kyJF8H2vfGuvdsLfznH9sRaUsemBJj8iMGbdEKC6URQZl
gY2IlsWs89GjR/N9LMqSxAws6Vmpqq7+8aOPZhxkQhgXyiKDssBGpMvy0Ucf
5flQZ3a/bE6c/JubVrZ6snJZRKIsGQcWc8xzIpF4aNGiSMSFssigLLAxwsvS
8tytZvPo9w1cwl+WbAOLzkpdXZ3+gAsXLix++OHwvy1GWWRQFtgY0WXpa376
c6P7Dwzz/46T4S+LzcBSW1drPiYScaEsMoYty+mD71ZsqCj7l8UlT65Zu/qF
t/d3urpvxakPq8oavXk2zEMFeLPyESiuZbnQuV+/qvVSs/tg94WLGT/m0Mr5
5sCwK37zgd+vupCXJePAMnfuXHO6vVUWFYW4UBYZtmXprF/1kHlVFBcVXX/d
dYPvDCxY7+w955696x/RH//ZKWu7PFjTnspvXNl/nY0F68XumoGYlqX/tWSd
qDLumgfSf17q2vKE2Wvg+NWel5CXJePA8vttf6itrU0piwp9XCiLjKxludhm
bhGulykv/4f+uU5/r5nvRF2Zv/3XA/Y/xZ1vf3/lnL8z35ieheBiW/l9U3Vc
xo26S+auGYhpWTob5n82ZaN3w3NVnadO6Ve1Hmdef/w2s+Ne/2a2icZbYS5L
xoHljnnzdEHM85xSFhXuuFAWGVnK0tlw76dT9l2a85EHf5Bbu9fmMROHNv/j
34/t/7DFb3V4vL6dH/xsctHY/otL6LjwzpjfYlqWS7vmrZFcL4VDF8LS//2p
aY+5feM3H2EuS8aBZdu2bTZlUSGOC2WRkbEsxzfcbV4D11758/1DP7NZv2lf
ljO7X3b5ppk7+ptdx6XQ/wtuQMW3LEr1tFS+9JOSOYUpNyweO73kyTU1uw/6
efJKBqEtS7aBRQ20w6YsKqxxoSwyMpSlo8FMHPob7d5tx62PvNC531z99eqH
yvaeOJPxxzlzb/H+HwK/+Fijj9+cneadunGj7vL7oJ0RLr5lGZTo7enq6taL
3s60d58WWL2MQluWbAOLclAWFcq4UBYZ6WWx3ijQdUjZRTLMmwM9O5deNXht
2J8d8HmaGDoiNHmqgudiX5aQCGdZbAYW5awsKnxxoSwyUsuSdOXwgp//u5tH
6rT2+F/xmw/8WdnL9NY/Zd7BKPhpIztcfEJZZISzLBkva2wGFuW4LCpkcaEs
MlLKYg4AM0vJuy6Ovzq+4W6znddDhNBRwRfbnv/MaLOqye/awUOURUYIy5Lx
ssbWwKLclEWFKS6URcblZenc/K2h4/xdnXc8NOn0TxC2h415yxxU0H9Kgs8X
DByxKIuMEJbFZg+L4aosKjRxoSwyLivLsS1Tx37JugSf8/0X1tnKRWOnr/mL
4BtTHQ23jhk6XM3nKzuNTJRFRtjKYr+HxXBbFhWOuAiX5bxK9HW3a9l/8u3R
f7qr1e78jKiXJfmtMBcb6r5ma8e9+0vC9nR0fPLXo3/Kdj6a/kc5evRo9oN2
Lg1ZjC1+oCwywlYW+z0sRg5lUSGIi99lSfT26A3azrq31q5+wTqsXf/6ra1/
Sf/g833Hze7p/quLzH4u236E4csydLsHb5ec34A63/7+8//yy4cfWWyWpVNH
WS8nvaHWz4xeVq0q07++9OaebA+SQ4/0M1/7Rlny0/6ZrzybOiL1Hlj9+B2F
Q6cbzH/rvzM+lHU/Wb18bcthduV7i7LICFVZht3DYuRWFhV0XPwuy7Hlk6zN
2mVb6ZlrM4wllxch2/YzkLLkc8W842/cZz2ItVi/UzhwbrL5NXu8Lh0SVujk
jq69B6zd7ilfxWUHDHTtMAcVW39aMPOVjBcfS7z34jD/dsgDZZERqrIMu4fF
yLksKtC4+F0WPYa0d58+d+7cqQ+rrONszZLhXIyuHdb7+TZbsGHLkji0+a55
JXcufHqhd/QDLmvuzvFZ6D1QVVWpx5ZlK5eby3wNbsnHTq/YUKHnFD3TNdTX
6yXbqZGqo2H26LGDf2v07OF3slxsMxeY1U++fjbuvWas2a3T3w6r15nqU3D3
65nLcmiztW9Iei/PCEBZZISnLE72sBj5lEUFFxfR/SwdDXoTd2kj9tPGlD/X
G9XL3vPJspVzsp9lYPscov0Bfd3teoVrtm59/fHbLl3N+Dvrk79Am4EoeWRw
sqcj5aGOlX3PGpSG9tEMDkGfX/a2XjdzCY6SJ9e8vT/LIdAX28oKRpkV0H2Z
94d2Z183HKEsMsJTFid7WIw8y6ICiovwHvxDK+dbPzynn3s+qKNh8Rf6p5ts
bw1FcQ9+56lTtbW1enJJnlmc775P3s3xma886/pCYftescqiR55tff0HEve/
+TbQbpMh/avte3095rq1YrfSGFEoi4yQlMXhHhYj/7KoIOIifdRxR8OlN1UK
Cx9r/p+MH/X+ogKbvQlRLIs5Nqz2jTITTbM4PvGwx7okcuHAJShd34cl6bgy
/bQvW7l89uix026e5eZqYP1lsXYS5bIOyI6yyAhJWRzuYTE8KYsSj4v4+Syd
yT/6Zvyh/Xzf8dVTrrY5hTDSZdFhtXayON5b0ZO8+z7bTnaHj2CuXq7/49F3
Pnb1CJTFP5RFRhjK4nwPi+FVWZRsXOTPlOzavNj6cjJf53Bgrin4zvpsByBF
tCzVNVute0ear93x5Vl6ku+glFNZ+ne1WGXRy+eXve3yQTorv3GlVRb3J9TA
DmWREYayON/DYnhYFiUYlwDOwT+2JXkTp39uT3nH/sTGH+kfqrO9UaYclKWv
u/39pqY9zc361z/t+09Pfn3vvT1ZD9xywJSl/L6p5p1As+vc8X30PChL4r0X
kw94zuEiydYtycxlXmo/jsw2MPwoi4zAy5JxD4vepNv8FW/LoqTiEkBZko4y
0s9w6imTA3sE7M+YGP6o46GtaMZnL4dl8A6PeVzYRP97VVVVrp5ytfWYf/uv
Bxz/bQ/Korp2WAfmubtY2ZDkW5JRFm9RFhmBl8XVHhbD87IokbgEct0wc7PC
we3k5ddmN5sv+8v/ypelMO+LQOp/rNo3yvS2ffAArcJCN1ODF2UZuEKL9Zy4
usCyYS6zPFiWax7Y1pfLSiAjyiIj2LJk3MNiP7Aof8qi/I9LIGXprX/KelPo
sksyDlzLd9j38Icty4XO/e83Nell9+7dTR79umPHjr0ncv+u1/9SyTtZ9JbZ
zb0gvSjLsS2XnYXqev7queznAfbge4qyyAi2LOvXrXO1h8XwqSzK57gEc63j
oRv1Wu+rmLHFvJM/7LG4Ed2Dn1wWXQc3F0jJ+9iwi22rp1xt1dxcxcXlFVpS
14ELvHiIssgIsCw57GEx/CuL8jMuAV1Fv/O3377Kepdp8H2hgdw4OegoimXp
6uo2d7fPbWSwjuzKbV4wJ6gmv2xcDk0qdW5a/FaILnAQfZRFRoBlMQNLSlmG
HViUz2VRvsUlqPuztDx3q3Wo0te2HFZDO1+cXJsrimU533d86dRR1tTgdjdH
8kVvXN9Nct8rJiWb/9xW+Y0rrcd5/qCrw8Mu/TBQmMdln5ERZZERVFmsgSW5
LE4GFuV/WZQ/cQmqLL31TxUOHXN1xW8+SBzaXDhwoTAnB+JGsSzmkpKDMXVy
ScnLmeenMOnILqfHPw9ddtIke9eSG603xEzQh/QcOXDYbgzpa7YuKGpz8QTk
hrLICKos1sCSXBYnA4sSKYvyIS5BlUVvKq2n+lPTHnti/hcyntuSURTLcmb3
y9bXm/n8UHuXH6q98H2HG/YenZLkEcMEfXBXy92vWyk5sfFHpj5Zn/+k20py
yLHnKIuMQMqSPLBYZXE4sCipsiiv4xLY3Yr7mlPvDOJ410MUy2KuPDB4aZTL
D7R26LJdLVnejEr09nR1dVu9MLtXdEGsve3JF8O/dOTwwNtl9mduJh/O5/78
fQyDssgIpCzJA4tVFocDixIsi/I0LoGVZeAqi9bznPW6x5lEriy6I8m777Pd
t3EYx7ZcOrIr4/0FBo4rNu+2lf7uj8ffuK9o7KSUPfXn+45bs49eprz8H3qY
0q3RH2Z/Zf7kQ455K8xzlEWGfFlSBhbzLex8YFGyZVHexSW4sgzeNMSs8/A3
SUwSvbL0Hbd2neutfa63zepvsTnEa9you9KP7Eq+CcvQ55qespteN85qxKWs
FxUNc+DExTbrHmFcMcwPlEWGfFlSBhbzTed8YFHiZVEexSXAsljv+bt9dyhy
ZVE9O2ePHmtu+KWng9y3zEm3WUm/91bX5sUpZcnY65QLiKXtys/8eS+9tLjn
lw8oiwzhsqQPLHpxNbCoIMqivIhLgGUxW0L3J1ZEsCx715is6K/36ofKcj4T
RPe35blbB98QSz+rpfeA9Z6bHmp+vaczkcjQa/0g1n3EikbP3vzntkTvMGtk
jTm53HQMDlAWGcJlSR9Y9NLYmHovXXuBlEXlHZfAyjJwVnhux69GrizmYmhm
Rlj0Sk1ejzX0xpR+tPQTUnQ1dCb0P7rdjY8TCfNhPadO9Qzs9B/mMybdrE1/
Rm4l6QfKIkOyLJ4MLCq4sqj84hLsmZJX/OaDHP5u1MoyuH/EXHy+rFGvc17n
r1sHbCcfNuybTuuGX7n9Y8EJyiJDsiyeDCwq0LKoPOISSFkS771YOHCVktyu
PRWxsvQeWHrVGPO6uvqhsnf+/d/yf0hrl0qOh5k5Zk1bXM7FV5RFhlhZvBpY
VNBlMSvw0KJFbuMiXxb9I/etY3K4btUl0SrLpT3mYycteqXGk7KopMvjOLke
Tm7O7H7ZjFqXXY8aPqAsMsTK4tXAokJQFpVTXPwuy7lz5y57Z75rx9OfG51+
NKwr4SyL/jL3rn9ER/P679//9v5LlwXbteRGs30umP1cQ329V2Ux59cPBCuv
JzMb8wOAWW2y4jfKIkOmLB4OLCocZVHu4+JjWS62Dd6cd+z00t/9sf93BrLi
9uyVdOEsizkk2Jyxcum9o4ELOJs9LHpg8bQsytwzRX86vfx6j+s7edk49WGV
uQFlwU8buVq+AMoiQ6YsHg4sKjRlUS7j4l9ZEu+9aE7rM0+s/kneHGI07O1X
hhXOsph3vczz/Nkp5m7Lg9cZMO9ZVVVV1tXVeVqWfuZc+8KBU/s9OXDrr/XP
mX84/fMAR4LJoCwyBMri7cCiwlQW5SYuvpYl5VI5env16Dsf5//I4SyLdfUV
/WV+ftnbfd3t5lZf+jd1TPX/6oGlumar52XRG389YiydOsqjQ8X678NScPsS
rjkpibLIECiLtwOLCllZlOO4+Phu2MCth62yeLixCmlZBu6iknqDrYEzFvUf
dZ46ZdbZ87JYvDp2izlFHmWR4XdZPB9YVPjKopzFxdc9+Of7ju+se6uqqnJX
a4eH26vQlkXTs4n+kis2VLz26qs1uw9aW3v9bPtdFkQXZZHhd1k8H1hUKMui
HMQlwKu75CzMZcmGssAGZZHha1n8GFhUWMuihovL77f9gbIIoCywQVlk+FoW
PwYWFeKyKNu4zJhxS2XlluqarZTFV5QFNiiLDP/K4tPAosJdFpUlLmbfuokL
ZfEVZYENyiLDv7L4NLCo0JdFZZ9c9DOg49LW1hb0CjpFWRAzlEWGT2Xxb2BR
USiLGrjWSrYLV86aNcvVbY4DRFkQM1ZZtm/f/s6/vROJpaG+3qyz/sl8x44d
gaz5d2fOnHbzzc6XL0+aZDZ3N4wf/9WpU6dPm+b87+qpJNtqlJaWpg8sK1Ys
19/snnyZ5nnu33oE/Y9us+jX8IKSkqKkOw8m73PpP0k86DUcdtGvZOslHfjK
OFz09x1lQTZWWSK6VNdsDeTzTrpxYsafk+2X5NO3nS+6FBm/zMrKLbpTKVnR
29LA/1Hklzdrau+88w77HfqBr2RcF8qCdFEvS1DLxAkTcihLbjHKVpbHlj5h
LjmbvPzq2WcDf3KEF/3k6KWqujpjXExtiYt/C2VBOqssJ06cOBURe5qbzTq3
traePHkykHX4077/fO+9PXpNdjuzalWZ2dDdNa/E+d8y2tvbe9JWQP97mXfY
krMya9as9I/MmfVGem1drXeP6j3rS+7q6n7wwQcyxkU/M/ppDHItbbW0tJin
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
XigL0pmy6MXvsng1sKihsjCz+I2yiKEsiBmxd8O8GlgUM4sUyiKGsiBmZN4N
83BgUcwsUiiLGMqCmJF5NyznyxpnxMwig7KIoSyIGYF3w7wdWBQzixTKIoay
+CdCB5/HicC7Yd4OLIqZRQplEUNZ/PPQokUzZtyyft06mVP2YPj9bpjnA4ti
ZpFCWcRQFv+0t7ffMH68fhlff911P3700aampqDXaETw+90wzwcWxcwihbKI
oSy+emntWvNKNoseYfTvMML4ytd3w/wYWBQzixTKIoay+EpviPRmx7yYrQ3R
tcXFDy1atGPHjqDXLp58fTfMj4FFMbNIoSxiKIvf9NqmlMX673/4+tdXrSqL
0PVLI8G/d8N8GlgUM4sUyiKGsgjQz236D7rWUlxUpDcs27dvTyQSQa9pHPj3
bphPA4tiZpFCWcRQFgFdXd0TJ0zIVhZrY6W/nGhdKDucfHo3zL+BRTGzSKEs
YiiLjIqKCpuxxUqMWW4YP/4H99yjNzJ6kGF3v1s+vRvm38CimFmkUBYxlEVG
IpGYN2eOfVmS55fk35kx45bHlj6xadOmlpYW/ZOz8Jo3Njb+MFKuLS42z9uC
khIPH1a/2FL+dfQPAF49+Fduusn6t/bqMf02d+5c8zxMmTw56HVxauHChdY/
X9Dr4oI5eUGvs96GBL0uTulXsnme9aQf9Lo4dde8EvM86ydcv1SCXh2n9IZu
2LFl2EV/yfpxfvXss3qDLzPOrF+3Ls91DmrJ/9n246FC8olG5pJyLA2LzHMe
+Do4X0/rjaPA18fVojvu7Tr/w9e//uNHH91YXu7fPd+jWxYWFhYWt0sUy/Ll
SZO8eqhJN0609sWcPHnSp6xoR44cqYkU60muqKjw77NUVm7x8NH0HFpcVKRf
z6WlpVXV1bW1tR4+uE+sN9LnzZkT9Lo4pf/VzEajeNy4oNfFhW9/85vmqdbf
70Gvi1NLliwx6/zD++8Pel2c0j9Fm6x8derUoNfFBb3RyLOk3505Uz+I/u44
cuCwfymJOusIrmPHjgW9Lk7pf1bzktbjZ9Dr4lQU9+AnenvMOl9bXBz0urig
f/Awqx2h06tfWrvWrLP+CSTodXGqpaXFfBvqlAe9Lk51dXVbR8O6mnF08Vet
KtOvKP/e74oZXRbzc2nkymLmrKDXxSnKIoayyNBlMescobI4H1hmzZo1OJgc
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
AAAAAADAJ/8ff9TJPQ==
    "], {{0, 484}, {542, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{542, 484},
  PlotRange->{{0, 542}, {0, 484}}]], "Output",ExpressionUUID->"9b3302ed-626c-\
4c70-9814-63a1eda1eecc"],

Cell[TextData[{
 StyleBox["19.",
  FontWeight->"Bold"],
 "\tUse the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "225dabcb-89fc-408d-b354-ffecca37634e"],
 " in the figure to do the following."
}], "Problem",ExpressionUUID->"86d3f361-64f0-41ab-a91d-7f172dd54898"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "48daf00c-b215-4f76-a980-3eb9495ea2d7"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f6a70dcb-3df1-4bac-99f6-62bf5af69356"],
 " at which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a31652fa-275a-4d42-b898-50a35f73a3fd"],
 " is not continuous.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "3a3b7d4a-6140-4d6c-9b3d-1156ee4f3b7d"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "544aff19-6eba-436c-ba1e-71109db51062"],
 " at which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "a3fbfd70-432e-4d54-b620-f15df3a2121e"],
 " is not differentiable."
}], "SubProblem",ExpressionUUID->"b908d467-8708-4246-889f-26f33891eeb2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AABQEykFAACoiZQCAADUREoBAABqIqUAAAA1kVIAAICaSCkAAEBNpBQAAKAm
UgoAAFATKQUAAKiJlAIAANRESgEAAGoipQAAADWRUgAAgJpIKQAAQE2kFAAA
oCZSCgAAUBMpBQAAqImUAgAA1ERKAQAAaiKlAAAANZFSAACAmkgpAABATaQU
AACgJlIKAABQEykFAACoiZQCAADUREoBAABqIqUAAAA1kVIAAICaSCkAAEBN
pBQAAKAmUgoAAFATKQUAAKiJlAIAANRESgEAAGoipQAAADWRUgAAgJpIKQAA
QE2kFAAAoCZSCgAAUBMpBQAAqImUAgAA1ERKAQAAaiKlAAAANZFSAACAmkgp
AABATaQUAACgJlIKAABQEykFAACoiZQCAADUREoBAABqIqUAAAA1kVIAAICa
SCkAAEBNpBQAAKAmUgoAAFATKQUAAKiJlAIAANRESgEAAGoipQAAADWRUgAA
gJpIKQAAQE2kFAAAoCZSCgAAUBMpBQAAqImUAgAA1ERKAQAAaiKlAAAANZFS
AACAmkgpAABATaQUAACgJlIKAABQEykFAACoiZQCAADUREoBAABqIqUAAAA1
kVIAAICaSCkAAEBNpBQAAKAmUgoAAFATKQUAAKiJlAIAANRESgEAAGoipQAA
ADWRUgAAgJpIKQAAQE2kFAAAoCZSCgAAUBMpBQAAqImUAgAA1ERKAQAAaiKl
AAAANZFSAACAmkgpAABATaQUAACgJlIKAABQEykFAACoiZQCAADUREoBAABq
IqUAAAA1kVIAAICaSCkAAEBNpBQAAKAmUgoAAFATKQUAAKiJlAIAANRESgEA
AGoipQAAADWRUgAAgJpIKQAAQE2kFAAAoCZSCgAAUBMpBQAAqImUAgAA1ERK
AQAAaiKlAAAANZFSAACAmkgpAABATaQUAACgJlIKAABQEykFAACoiZQCAADU
VF5WVuwipQAAALW0traKiKKnlB07tstuDgAAQMSBtjb9Wo++iazS2dkpu1EA
AMDpThw/XuqKigsq6+vqZLcLAAA42tmzZ5dWVBgiSrQ7xdXn92uaJruBAADA
iUZHR1evWmXIJ7GLPt975BHZDQQAAE506dKljffdlzCi6Ft5WZmIMbKbCQAA
HKe5uTlFRNE3j8fDNR8AAFBIhqKeZNvymppQKCS7sQAAwCkSFvWIrdTwnej/
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
SlEBKUURpBQVkFJUYJuUIrxx+lVzX8rcoKJvrvV1dW63u7u7m/W41UFKUQEp
RRGkFBWQUlRgp5Qijqk7m5piacScUma26DjbWGJZvWqV+K329vY+v//SpUsS
23/W2Xw+nz4EurysTHZbnEscB2J7ivi37OY4V+xd6O3t5Y2Q5Zaqqti7ILst
znXHypX6u9Dd3S27LdkaGBgQZ7qlFRVJ80mSbSbVuFzid9fX1bW2th7t6ip8
eNaH0Dh5i788x8a74OSNd0GFjXdBhc1O74L+LBYaUczDV2KvxooVKx7etu1A
W5sIPwUYeZtly9nY2NjY2NjU30pLSnJ7h7dWV29tbOzt7c3rlfo7V6928rZ6
1Sr91Rb5UHpjHLvF3gWxiX9Lb49jt9i7cMfKldIb49itdPbPXt4Fidvi0lL9
XVixYoX0xuRki1zxybpHRbwsX7nnnsf27fN6vfp0K1pU/iJK7CEcK370rOy2
OFf86Fnxb9nNca7YuzA8PCy7Lc4VGz3LuyBR/OhZ2W3JgT6/P+NksrymZmtj
o8fjeeP0q1OTk/od5jWWIB41PiqgxkcR8SlFdlucixofFdipxkccYNfX1aUf
S25YskTc/oknHu/s7BwaGorFEo7NUpBSVEBKUQQpRQWkFBXYKaUcOnQonXBy
15o1Ho8nNiCWQ7EiSCkqIKUogpSiAlKKCmyTUkZHR6sqK4uTj0gpLyvbsWN7
vkfAImOkFBWQUhRBSlEBKUUFtkkpu3ftKo6UDyfIJ3evXXugrU3EGA66KiOl
qICUoghSigpIKSqwR0rx+XwJO092NjWJH4kDr+wGYn6kFBWQUhRBSlEBKUUF
Nkgp4ri6rrY2/lqP+N/29vbz589Tp2MhpBQVkFIUQUpRASlFBTZIKSKQ6Nd6
xNlt965dPp+Po6sVkVJUQEpRBClFBaQUFVg9pQQCgaUVFetqaw8ePChOcxxX
rYuUogJSiiJIKSogpajA6ilFNLvP72fkiQ2QUlRASlEEKUUFpBQVWD2lMPDE
NkgpKiClKIKUogJSigqsnlJgG6QUFZBSFEFKUQEpRQWkFCiClKICUooiSCkq
IKWogJQCRZBSVEBKUQQpRQWkFBWQUqAIUooKSCmKIKWogJSiAlIKFDE9PX2g
rU1s7e3tstviaPq7IDbZDXG0xaWl+pF5dHRUdluc63BHh74vTE1Oym6Lc3m9
Xv1dGBsbk90WAEBEeXm5nlIuXLgguy0AAACXkVIAAICaSCkAAEBNpBQAAKAm
UgoAAFATKQUAAKiJlAIAANRESgEcR7s4PPzhB+/3nQ8m/vnFsZGhoaHhsY9D
oVBhWwYAc5BSAIcQsaT74NO77/tqsctV6nKJr5+5/Yd+LTxn8u+pM4eb/q7Y
db0reoO6l96T1lwAIKUATjB15qnPLoomk5kVMfR/iK8bfn/u8s1GX9l75aLY
qhni9kVffoE5qQFIREoB7E4LhwZf9Pzsl2/3Ry7i9B9p/PzlKFL09OmZyzpz
k4z4Kraib3SQUgBIREoB7E3TIqu7atrMP4ShH9fFUspnb3vubORW5178+hXi
f69ofvni2EjfEc/u+766/sHHj70T+ER2+x0r+NG7b5x+tfvoUa/X+8vOY6fP
jvBeyDLR/+r/6Ppf+u4juy2OQ0pRBzuCFE48F/hfiKWU4i/e89vp8F9eaIhc
34n2nOhPX0SaT8Jh1quX4uM/vfTo166ODR+KbpGurZJrN/3y7f4J2c1zlE+H
X4+O1HJdcet+VqyXgpSiAnYEKZx7Lph47XtXLYoNUHn0uWfrv3BdyTUPddv5
OVtF0H9gu/hAxt6d+Atw0X+4rmh+maNEAYjD8r/ujAw1n7k2yhgtSUgpcrEj
SOLwc8H4r+79nGEY7bbff0TPiWzBM8/dWzqbls3b5fFCLd327/GTJ/ZnY6zL
kYOzRKQUWdgR5OFcEI4fmhL54D38K/pRpPv0tWdmPpZfvGfvS3/0f/TxxbGR
D97v+537W/FvlivqyXenuDScD385/M3Ivv/3Tft/8vQjNdfGyuI4OMtCSpGC
HUEizgXh6IsQ+9SJreXdKdktwrkja6+MHBZqn3rzkvjfoP7B0zu4xB81nupr
4gvJi77RQbDMA22i/9Vj7wTEvyKv/59+yp+Q0pFSZGBHkIhzQdToK/VfuG5m
XpRFX/nFhyEu90j2vle8FyXXPNQZ+CTxexE3mkhsi6/a9+olhjfnmGaY5PA/
PRycpSOlFB47gkycC2ZE0losjM2Z2w0SaH95oUG8EWt//V9Jb6GFR3/xcOyT
WXLtppftGaBVwsFZAaQU+dgRCodzwaz3vWsWxY1Lefq07AY53LgIjUV/+5D/
o4+TD4XSwiPHYj1g4pNJTVbecXBWAClFPnaEwuFcEBUa9FRfEz/NrPjg2beg
yRKCgd88ufelP85zq2lfrKPPtvlZKRycFUBKkY8doXA4F0SYS5yYLEW2YHSb
T9wns/Tq79r0WqRKODgrgJQiHztC4XAuiEw8KyKKiCW/fLv/xZVXxT57dq1m
spWJ12JrMBW1dMtujQNwcFYAKUU+dgTV2PhcEF1SUDyv5jciH7TepmWxAbQ1
Rwbibjf+53ffo3NFNVO/2Rd7v77z1l9tFZ7VxMFZAaQU+dgRFGPbc4F2UY8l
Rft9erdJ7JlGvhlXc/1R+7eKXa5H/nDBrpPaWVOw+5/+Rr9UV/Tl5xlHVAgc
nBVASpGPHUEt9jkXfDp5IRAIxLLHmefuXVxaKtKI/qQi6StW6RO9BvTb6egP
/C9Enjuz0RqEBl/0/Oz5gwfFdujQofb29oMZEXfyo2Nnzl1YaALUxJsVG03k
xMtzUl5/Ds4KIKXIx46gEBudC9733nVdJH6ULvrK3pf+qE93XHr1d7snLg+z
CV764MdF18Y+flUHXp14/efitxhMm8DEa5HKr+jalLGvxQvcYr/4T2/9dWGP
rl0U4XmmIOvp0/bp30uflNefg7MCSCnysSOow0bngjkr9ei567ovPRk3E340
gAXfbKmO3SyazSK31EetYI6pM3uvXLS8pmZF1vQ3YkEBWF/WQbxHn73tOb+V
P5aZk/L6c3BWAClFPnYEZdjpXBCZm27uWpbbfv+R6cisiadsuFndS+8xHMUg
FBWOXCbLAXFXCwvAoUF9zHPJtZt+8aFlO/eyIO315+CsAFKKfOwIirDZuWDq
zE+/fnts1pfn3jqXpAo7skL0TF/KF+/50bEzXOpRzEx/l3h3xMfSwpcgrYiD
swJIKfKxIyjBVucCfa0osX06eeHi2MjEzPWdBDcU3/8kOs52fHycfKIg/4Ht
kYFSc6/WoUA4OCuAlCIfO4ICbHkuECnF6nHL4aZ+s09fxUB8LC09SsqqODgr
gJQiHzuCbJwLoKBPX3tG/1gymFkaDs4KIKXIx44gFecCKGji9Z/r5fDiY0mH
mDQcnBVASpGPHUEezgVQUKj/iJ6cv/3boVSdexOv7b1yUYulZ/VRHAdnBZBS
5GNHkIRzARQkPpaR6fiiH8uUNzz34tev0KfpQ75wcFYAKUU+dgQZOBdARSPH
6r9wnQjPn3/6d8NjHwcSEd+f6H/1X9dfVepyFT19WnaLbS3+4FzPwVkOUop8
7AiFx7kACho5tvfKRbF5gEsTzfFeGt2KZxdxeHaI/r08isx5ePlPyP2WXtXL
ukgp0rEjFBrnAigoemFR/7zFb/HTAs+uYjCz8UdNfk2d+be7r4p/8RlgLwUp
RTJ2hALjXAAFRec9ji1zmeKTGf/h/IdjwxTO597IsWd+8NS/7vxq8dyVIyLv
hctV9PdNjz737IG2w/w5WTCkFDnYEaTgXAAViY/Xub4jHrHLdx98Os2vYrP6
UlMKEnt68KN3X/T8TLy87Sb6K9/W9pMfHTuz4MWYkClSSuGxI0jCuQCKCs36
JPrveb+Go4cR5IE2u7Kh8fX9JLqFZ5efQMGQUmRgR5CDcwEAWAspBQAAqImU
AgAA1ERKAQAAaiKlAAAANZFSAACAmkgpAABATaQUAACgJlIKAABQEykFAACo
iZQCAADUdLSrqzMqGAzKbgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHnx/wPLEoLg
    "], {{0, 746}, {738, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{738, 746},
  PlotRange->{{0, 738}, {0, 746}}]], "Output",ExpressionUUID->"77557c41-dfee-\
40a8-b363-348613f0b46a"],

Cell[TextData[{
 StyleBox["20.",
  FontWeight->"Bold"],
 "\tUse the graph of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "92185856-5866-4113-be7e-416cbfdc351b"],
 " in the figure to do the following."
}], "Problem",ExpressionUUID->"78b036d3-2c25-40a5-b1b3-3a98b6c1ca12"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "98533810-565f-4f3a-b705-9bcbed6ad2dc"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "db2941c7-3eca-48f5-bdec-c4a37144883e"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "897984c0-23df-4094-97dc-f466c12c2436"],
 " is not continuous.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "464add4f-c29e-4809-ada1-ae5fd224219d"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9fb14127-afe6-4aea-8afb-28e215ce8b0c"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "8721bfa0-127a-454d-9072-6459ca95a21b"],
 " is not differentiable."
}], "SubProblem",ExpressionUUID->"89fac9d5-736a-40ae-bfc4-f002bc65ebc9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3X2QVPWBL3x27yb7rFvXSmJ8WYbRIIrFWmiMGtcXsllTRTas2RtwpaxK
1DW4q+EmblZC8FJa9/kDsxi8pvCGbIjiqlkSHB+oUAkxYMYtCAkEmTUkEjIk
UBVYJhl1VCAZXobpfs70gabpN2amX86vuz+fOiHjTE/Pr7unz/nOOb/vOeM/
+U8z/vEPx4wZM+f/if6Zcee8v7rvvjv/183viP7jlnvnfOrue//hro/c+7l/
uPsf7vuLT/636JOvRrftif439HEaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACARtPX15f0EAAAyjly5MiSJUuSHgUAQDldXV133HFHKpVKeiAA
ACV9benSSydNSnoUAEDDGTj0Rs/ePXsOlvp66lD01d/0/LbkDUbinrvvbhs7
dvfu3dW4MwCgaQ30H+z99c82vPjCi4vv++cZHxn7Z38WRYho+ctv/1fhjQcP
9yz/H2dEt4mWMR9a+MMjlf70q666Krqrjo6OSu8IAGhqexdeFCeQbFaJlzE3
LunJv20qve3L2RsPhZaHN1Xyo3t7e+P7mT9/vqksAEAZg4d79r3xuyNHjhx8
edUn33VuNrFEQWLejv6hlJKrb/0N5+YkliKpZgS+u2ZNfD9Tp06t7EEAAE0u
s3MjdfyDfd+b/u7zsollzLy1BTcfePW5+04mlttWVHIulYcWLIh/UPu4cf39
/RXcEwDQQqLQsmfx32QTS/s7P/3DI+nc4zWpIYNRsPnku84dSixf2Tb0n6N1
07Rp8Q+Klk2bKjrABAC0ln3fyx73ieLEp7e+VTjDJEopW+4cE3317h++Nur5
J8eOHbtowoTs7hrnkQMAhi2KH6+v+ts/ySaWMQ9vKtyLMni458uTz2o758Pf
7E2NOrFs27YtdxLvXbNmmXwLAAxf34p7skGi/cz7XzmWPjVLpOL9MGNufKKS
abdPLluWm1gumzy50nEDAC1jKJz8+rncsvOiPfn7WF57clb01aIHjIZv9uzZ
2Uks8bJ3z57Kxg4AtJLBXYvHnJ0NEvmnkju89bNnnlthrzly3bXX5saVaFm9
enVldwkAtJat908+WWGetzb31La/efzW6JO3bOqrZAdLX19fXlyJlgcffKDy
kQMALSPV//z92SDx9ssf3Zk+MZXlwOZPvuvc6DOvHKvoB6xbt7Ywsdw0bVpV
Rg8AtIrMqeTiIDHu7Fu+2Xt8d8qOhz/a3tb2ie9XeEQo/fAXFhYmlvPb248c
qfhKRQBAC3n93z54Znb+7bwd/dkz4sa7XCo0c+bMwsQSLS9t2VKFsQMALWFo
j8rPF96QTSxXPrcrSizx5JY5XW9Wcp7bdOYCiOe3txdNLA8tWDA4WNGdAwAt
JXcqy59+aUuq+9mhWbjTv17JhYRiS5YsKRpXomh06aRJDgwBAMOWiiJKfL6U
6N8/uPIf5970jujjwnOzjPx+U4W95tzQsmrlyqo8AACgJRze+sAZ5+RmiTEP
V+FihRs3biwVV+Jl5syZTtcPAAzb/nUf/8OTp+vPXMe5crNnzy6fWKJl9+7d
VfhJAEALSKVSexb/TTZFVHKZ5qy+vr5Sc27z5t/azQIADFN28m3eaW9H7WtL
l+ZdS6joctnkyUePHq3GDwQAmlwqlepbcU8UMMaddefag9W5zylTppw2rox1
jSEAYPgGd3158llRYvn01reqcn+bNm0aZlyJlltvvbUqPxQAaGqpny+8IYor
Q2diqex8cVnDmXObu+zds8dsFgCgjGObvzg0feWWJT1Dh4eqkFj6+vouHD9+
RInloQULKv+5AECzSnU/e8O5fxZPX6nWDpavLV1aNJZcOmnSBz/wgfa2tsJT
yb3viivMvwUAYgMDA6f0gPrWP3DGOW3nXb3wF/1V/ClRLMlrCU28+OL7582L
P75p2rSbZ8zISyzR8t01a6o4BgCgIQ3uWn7bpKFscN7Vn/vWtqHdKZm4Ep99
pYo/56UtW+IEkg0ks2fP7u3t3bBhQ/yfUVyJbrZq5cr3Xn55bm75xMc/XsVh
AACNKJ6skt2hMeHW2284NxMn/mNvtQ4GxaJ80t7WFieWKVOm/OAHP4g/n5dY
IgcPHHjwwQeyZ5mLvmXvnj1VHAkA0HCixBIHiezej+iDqseV/fvfumjChOie
Lxw//rHFi3MvzVyYWGLbt2+/adq0eFSPLFqkMQQALe3A5k++69xsYvmjqfeu
6TlU3bgSeXLZsuj+75o1q3BvSanEEuvo6Lhs8uT3XXHFsWPHqjskAKBxDO24
GDzcs/Xbzz67+jubu/cdzJzntuo/Zs6cOevWrS36pfKJJRrM/v1vzZ8/v6ur
q+qjAgAaRWpIlfeojEj5xBJzSAgASNZwEgsAQLIkFgAgfBILABA+iQUACJ/E
AgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IB
AMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA
4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDw
SSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgk
FgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBIL
ABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUA
CJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCE
T2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMIn
sQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNY
AIDwSSwAQPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwA
QPgkFgAgfBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAg
fBILABA+iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+
iQUACJ/EAgCET2IBAMInsQAA4ZNYAIDwSSwAQPgkFgAgfBILABA+iQUACJ/E
AgCET2IBAMInsQAAgRscHOzo6IgTy9SpUw8eOJD0iAAAjkulUuvWrb1r1qxL
Jk6M40p2+dCNNz6yaFFvb2/SYwQAWlpXV9fUqVPzgkp2aRs7NlouHD8+yi1H
jhxJerAAQCv6xvLl7ePG5UaUSydNigLMTdOmXXftte1tbdnQEi3RJ/v6+lKp
VNKjBgBayGOLF0c5JA4q57e3z58//yc/eTmVGkynU/ES5ZOOjo4pU6Zk97dc
8/73O0IEANTNd9esye5XmTp16u7du7NBpWAZWLJkSTbb3DRt2sDAgD0tAECt
9fb2Trz44jiBzJw5s7+/v1RcySSToWXdmjXtbW1xbnlowYKkHwEA0Pzunzcv
jivXvP/9fX19pfeunBJdlixZEh8bunD8+J6enqQfBADQzA4eOBBFjjixfHfN
muHElXgZHDz2oRtvjL/xkUWLkn4cAEAzW7VyZZw6pkyZkjvPdjhLR0dHfGDo
gx/4QNKPAwBoZtlDQiemo4wgsezf/9b57e3xt2cOJwEA1MTMmTPjyLF69eoR
xZV4yZadu7q6kn4oAEDTyp7h9qUtW0aRWG6eMSP+9s7OzqQfCgDQtG6aNi0+
h+2GF1/IfGJkiSX+9iixbNiwIeFHAgA0r7tmzYoTyzeWLx/FPpbLJk+O97H8
cufOpB8KANC0Hlm0KI4cUXTJfGIEcWX79u3xDpYLx48/evRowo8EAGheXV1d
8YngLpowYZinj8suDy1YEKedO+64w4n6AYCayvZ9HnzwgeHHlb179lw4fnx8
RCnTMwIAqKFVK1fGB3eif9etWzusxJI6dNO0afG3fPADH7CDBQCotVRqMHu+
/YsmTDhtaNm//61PfPzj8e3b29o2bdqU9CMAAJpfd3f3xIsuihNIvNvk//3f
/7vUnJbOzs7sUaRoeeLxx5MePgDQ/KJkcu0112QTSHaZePHFs2fP7ujo2Lhx
Y1dX17p1ax9ZtCi7KyZeHv7CwqSHDwA0v6NHj86YPr0wruQu8RSXvOXC8eNX
rVyZ9PABgJYwZ86cwkDS3tb2viuuKBVgzm9vj75r7549SY8dAGgJX1u6NO4m
52WSZ555JpVKvbRlyyOLFmVPwn/JxIlRUOno6HCNZgCgbjo7O4vuQsmckmVI
XFjesGFD/PmbZ8xQYQYA6qm7u/uSiRML48qtt9567Nix3FvmJpakRgsAtKBS
5aApU6bs3/9W3o0lFgCg/kqVgy6dNGn37t2Ft5dYAID6K1oOOr+9fePGjUVv
L7EAAHVWphxU6lskFgCgnk5bDipKYgEA6mb45aA8EgsAUB8jKgflkVgAgDoY
aTkoj8QCANTBSMtBeSQWAKDWRlEOyiOxAAA1NbpyUB6JBQCone7u7okXXzyK
clAeiQUAqJFKykF5JBYAoBYqLAflkVgAgFqosByUR2IBAKqu8nJQHokFAKiu
qpSD8kgsAEAVVasclEdiAQCqpYrloDwSCwBQFdUtB+WRWACAqqhuOSiPxAIA
VK7q5aA8EgsAUKFS5aD58+dX60dILABAJcqUgwYHB6v1UyQWAGDUalcOyiOx
AACjU9NyUB6JBQAYnZqWg/JILADAKNS6HJRHYgEARqoO5aA8EgsAMCL1KQfl
kVgAgOGrWzkoj8QCAAxTPctBeSQWAGCY6lkOyiOxAADDUedyUB6JBQA4rfqX
g/JILABAeYmUg/JILABAGUmVg/JILABAKQmWg/JILABAKQmWg/JILABAUcmW
g/JILABAocTLQXkkFgAgTwjloDwSCwCQK5ByUB6JBQDICqcclEdiAQCywikH
5ZFYAGgOB19e9ejaV6p7b6nUYLRU6z7D97WlS4vOtk2kHJRHYgGg8e3/2eOf
irZlf3zZkr4q3eHKvzjzPRdcMOaWJVuPplsktHR2dhbuXUmwHJRHYgGgoQ3s
2/J/pp0ZbchOpItUNe41lR7ctfy2Se1tbePOvuXRl9+sxn0GLcByUB6JBYDG
lep+dvq7zxuKK/es6klXK65k7d96/+R4KxmFliNVveughFkOyiOxANCgfv/j
r8absDHTn9hZg/tPDRmMQ0vb2LELf9E/tO+l6QRbDsojsQDQiFLdz8bbr/Z3
fvr7h2v1QzIzWF5f9bd/Ev2gcWff8s3eVLV34yQv2HJQHokFgMZzYPNnzzw3
3n7N21H7XR+Htz5wxjlD6ejM+185VtsfVWchl4PySCwANJrXl/+PM+KN159+
aUsdijzRj+h//v74moBj5q1tmgktgZeD8kgsADSU1G8ev7W9rS3a1Lafef8P
j1R9tm0Jg7sWvu2ceIv5ie/3NEHfOfxyUB6JBYBGcmDzJ9917vHdHV/ZVq+f
OhSKoqQUT8Edd/Yt3zpYr59cGw1RDsojsQDQOFK/eOxj8War7byrn9hXvxPS
Du3J2fe9G849vmUf8/Cm+vzcWmiUclAeiQWg9gYOvdGzd8+ekn+Xpw5FX/1N
z28b/A/3ERl47bW+6FFHS3fvmwP9B4c1OeTw1uyE27df/ujIJsGmDkXPcPTj
3hwo/vX4Ndr3xu9Kp6DXV/zlf49/ekPvZmmUclAeiQWg6qLtb++vf7bhxRde
XHzfP8/4SHwoIVr+8tv/VXjjwcM92XmkYz608Iejm9b50y8XbXxUuNTisMvB
7o3/Pv/uG849/pwc32EyduwfTb13za/eOnjgUJnvffW5+06ObXh7OaIXYsVT
S+be9I7sN77tvV+Ios4ps18O7fj3//lX2ZfpY6u6S93bjoc/Gk+hiW585XO7
GnEKbgOVg/JILABVt3fhRdkNQbwRPD7v4sYlPfm3TaW3nRI2Rnm4oQaJJRrw
n35pSzU3yplg8J4LLojv/w+u/MdH177S9Z+dy2+blP2hV9+7+NnV3+no6Ij+
LdiFcrIiFC13//C108y5PbQjO1c273Hdsqnv5Pf2rY+by9mvjrnxiVIXJzq2
+Ys5Nyt8NUPXWOWgPBILQNUNHu7Z98bvjhw5cvDlVdlpovGWosjJQ/rWZ2dH
DCWWUW0HU93PzvzrGTffcd8d1RPd4Zyu6l1PZ9/3oqeiva3t+MNc8EImFQwM
HYJJHVr38T+MY8DJmHfOh/MPu+z7XnxC/qEbnPPhJ/adbgbLoR3PLfnX53f8
fOhAT/ez0U8/GTYe3nT80E+xVDNm+teLJpahkPPr57IvVjyRpgrPTL00XDko
j8QCUHWZv99T6RPTNaPtbDaxjJm3tuDmA6cc7LhtxUivPpw6LtrolJiiMXLx
HVZtXuuBzQ+ccc7JfU2nntIk+inHNn8x9yDRmKuvan/np9eemliy+zfGDm8a
SfYhxMuexX+T/fa3X/5o5qz+x09me8bnVx56o+eVjiX/POMjUerLnNi2xAMf
3LV4zNnZ+/nICz2NcgrcRiwH5ZFYAGoq2qJF28rs5jjaEOedQuR42Mjsghib
mTrSBOf6yJW9NE+8f6P9zPu3Hs2/Tf/z9+fsZSp6UOZkS2hsZi7KzpFe9/Cn
T5w89HPOh79/OB2f1yWOiEeODzWb/Yo/lHR6//N/+8fZ+6nyUbOaadByUB6J
BaDmclqx0Sb701vfKtzURlvJLXeOib56+ukZDSfnaM7YzITVggeYyo0T4866
s9h1gvbHR45OHLgpOdWkpJyeUfQ8f/ZL/xKNatzZt6wdWeXnZGIZ2lk0imEk
oWg5qH3cuMDLQXkkFoAaS2WPPuRPosgxeLjny5PPiv72b75r7fWtuCf3aM6a
niJtoOxpbEsf8dmffQ5L74cpb3/uqzB2mNN3C+4kdx9LQySWxi0H5ZFYAOog
d6sdX03v1A3l8bOTRRvihquflBcfFMumkeKb+NSh3LpQiSM+p0aF0SSWdO5U
lqE7uWfVyE+p8vrKvzgzbz5MyAmzoctBeSQWgFqLOybZv+6jZdGe/H0srz05
K/pq0QNGw3HojZ6XfrTxP7dsjf79yU9ersq/0dLd+2bl8zTik9uf2ClRrIaT
c9SsdJCoQmKJ5/dm7yTT2xqxHQ9/NHeXUcjnkWv0clAeiQWgHk7tmOSfSi4z
xaKC83uk8ro21VoqPxd9vI8le4dFp6rmnpYtWgrjXEYVEku6b31uP3p0B+By
A1jIiaUJykF5JBaA+sj2ZcZmOs65G+54I3jKac1GqBaJJb7UYOXFpeyejeJn
XcvMuc0OfsKyrhJ7daqRWHJOsz+6Jzy6ffRiZZ/ncWfdOcKJu3XSHOWgPBIL
QF2kcgu8p8x/yFyMeMRXyTnV0Vd3vPSjjZs2bdpcPfFRoWpUrV/PnTS78Bcn
z6GX6n42t0b0p1/akjl3StEUUY3Eknv+t8wU6BHfQ+rQKckz1Jm3zVEOyiOx
ANRJTsl33Nm3fLP3+HY5Pibyie+HNeW2umeQGzzc8/994m3Ho8J5Vz+69pVf
de/82eOfOrk/57yrP/et8tcwqrQrFLex4sNPJy6aMIp5zvnDCOtly2iaclAe
iQWgXl7/tw+emf0Df96O/uwZcU+cgrWJDcWzLXeOKTzw1HbOhz/zlW9nylOn
SUe582FGvnPj+Anoci/zNKpjOqfu6hlN26i2mqkclEdiAaiLoU32zxfekN1S
xydSiw8xzOmqysGXkA1k96h8bFX30Vd3bO7e1/urbfFRp2HuzMm9lkHRE+eW
k5ktE0WU53f8PLeevPAX/SN85k/GzrG1ubZ1JcqUg44dq+CgYxgkFoC6yZ3K
MjRno/vZsaWvu9dEXl9+26QxV18VP9gjJybw5P47DKn46Rp7oukzgqsQnrjc
YVwe/9Fn/vzU3Ji9n/2/6t5Zdp9JKn14a+4VFUfdRq+F5isH5ZFYAOplaJub
bc38wZX/OPemd4wtWeZtIj/9cnbrOe7sWx5d+8qoEloqryF+y6bh3U3qUBxR
svtDTrmG0W0rshHltSdnRa/LnK6yp6DJOXVMfP7eQHaONWU5KI/EAlA/h7c+
cMY5ubM4Kj/hSfhy558cn0Ny3tWf+cq31/zqrZFOAsne1dAVDEsckRnoP/ja
a33Ze46nr4yZ/vV4imx8Nr+TqSN7DaPMYaMzPr/yzXKXvz6l8BXdOJydY01Z
DsojsQDU0SmX84uv49z8cq5ymD/z9sS02+H69XMnmz5Fj6adSCPRPX/uW9v2
Lb89fp5zZ9gOHu7J3VczYVnX73/81ei7ovRS9JpHuXKrzZlDQkHsYGnWclAe
iQWgbvJOANuEl2kuanBXPI2kcGlva4s/iNLF8Pa3DGQjX9HLLuddOWhspjed
OQNMVvSED+QGj+zOn9OftD/ngYRT72riclAeiQWgnrKHFfJOe9usDr68Kp6q
evW9i59d/Z3F907LP0J0Yms7YVnX6XZZpIaWnz6R/ZaPvNCTF/n6VtyTt/mO
YmH2hHXZ+8m7wFC0XPncrvgkNOV+es7OosyPTn4HS3OXg/JILAB1E20Q401q
sGd3r66fPf6peC/K574Vn+1/KA8MHu55pWPJP11xdm5iiW/26MtvDuNeB7Il
8SJnZTm0I3sZ6KFZvkN3WHRiykA8vyU+fvTYxl3DiR/ZPTPx1aUT1/TloDwS
C0D9DO768uSz4lZs0kOpsdShHQ9/NA4kH3lhaNJr7u6LzMcDB19eFbelTk5N
eXjTaZPD0PfmHJ3JPeKT/RED/QcPHjhwJHq+i1+hOBX/lMzNDh1Mn/7kdUNy
WkLRD018/1grlIPySCwA9ZL6+cIbou1yfPWcpAdTW/3P3388hNyz6kixk65k
TxyXPRXt0D6T4V69+mRPPLeefOJrw78ic6rggFEpJy+NVPpajXXVCuWgPBIL
QH0c2/zFoS3sLUMb5WZPLCcvvjOM2cX7s9dTHtFlerJTVj62qrvWz2f2es1R
QCpbf66TFikH5ZFYAOog1f1s3J9de7Dp40o69+I7mcsnlXm8Q3s5ojxwYl7K
yE7/G++zGpu5zEGlQy7t9z/+anz9xLe99wuZ6x8lXO9qnXJQHokFoOoGBgZO
OXDQt/6BM84pqNk2seP7WOLT4J/uGMrJwnJh9+e0P+hHn/nz+JR0mee2+lki
jppDh7c+tHAE542pmZYqB+WRWACqaXDX8tsmxdvQ4wWZTFw5UbNtFT9feENc
/2k/8/6y+yVSv//xV4/PwRjpxQ2P2x9XeKIn/NGXq3xByYMvr5r+7vPiKvrw
D1fVTquVg/JILABVFE9WyfZfJtx6e1wwmf0fe1vgYFCOfd+LtvXxk3DG51eW
2jsRn2w2mzdG8XMy02wH43PbxnNaStSZR+zV5/8lfh2j5JnZTZTwwaAWLAfl
kVgAqihKLPGch+xMg+iDlosrGdk0EgeSz3zl2929b+5743cD/Qd/0/Pbrd9+
du5N74ifqD+48h/X/OqtURdw4tBy8OVV/3TF2YXVodHe6aEXP/r2P5p6bzjX
OmzBclAeiQWgmg5s/uS7zs0mlqA2efU3eLjnxcX3xfNAxp56Wv744wm33v7o
y28OnRelOj9wYLgnVxmO1KEQWsyx1iwH5ZFYAKrn+Dldt3772WdXf2dz976D
xU5F0iJOnhcldaj3V9s2vPjCihXfjJ6W1atXP7/j5z/5ycuvHvh95oZVawuP
5Ewsp7+rqtxPVbRsOSiPxAJQRfERiqRHEZzMyeJS2Y9PfBBQKghWK5eD8kgs
ABCmFi8H5ZFYACBAykF5JBYACJByUB6JBQBCoxxUSGIBgKAoBxUlsQBAOJSD
SpFYACAQykFlSCwAEALloPIkFgAIgXJQeRILACROOei0JBYASJZy0HBILACQ
IOWgYZJYACApykHDJ7EAQCKUg0ZEYgGARCgHjYjEAgD1pxw0UhILANSZctAo
SCwAUE/KQaMjsQBA3SgHjZrEAgD1oRxUCYkFAOpDOagSEgsA1IFyUIUkFgCo
tc7Ozva2NuWgSkgsAFBTykFVIbEAQO0oB1WLxAIANaIcVEUSCwDUiHJQFUks
AFALykHVJbEAQNUpB1WdxAIA1aUcVAsSCwBUkXJQjUgsAFAtykG1I7EAQLXM
mTOnMK4oB1WFxAIAVaEcVFMSCwBUTjmo1iQWAKiQclAdSCwAUAnloPqQWABg
1JSD6mb9+vXxczvzr2ekUoNJDwcAGolyUK3t3bPnkUWLbpo2LXpWo+e2bezY
aHnfFVfMnj173bq1ogsA5BocHDx69GjeJ5WDaqqvr++hBQvOb2+PU0rekxx/
curUqevXr096pACQpJ6eniVLltx6662XTZ4cbyUvHD8+2kQ++OADL23ZohxU
U93d3de8//2FQaXo8vAXFqZSqaSHDAD1Fv11P3fu3Piv+1JbyaJxRTmoKrZt
23bRhAnDySrZZfbs2UmPGgDq6qUtW7I7VUa0KAdVRW9v7/uuuGJEz3x8hOix
xYuTHjsA1Ml316w5v709uym8adq0J5ct++XOnf39/UeOHOnp6Vm3Zk305/x7
Lrggb/eLclC13DVr1ijiYpxburu7kx4+ANTctm3bLhw/Pt78XTZ58urVq6NP
ZtooqZxl6HO7du2aOXNm7rZSOagqurq6hjl3pehyxx13mNACQHM7eOBA9mDE
lClT9u7Zk/l0qvQyMH/+/Oy28rtr1iT8AJrCqHewZJdf7tyZ9IMAgBp6+AsL
47/uTxzfKZNVUicM3nzHffGG8qqrrhoYGEj6QTS2I0eOXDh+fCX7WKLFbBYA
mlh/f/8lEyfGm7xvLF9ecCSo5G6WQ2/0XDRhQryRXbVyZdKPo7HFh4QqTCx3
zZrltHI0sf373+rp6XH0E1rW6tWr4+3dNe9/f5RDMmuD0y5DU1yi5ZFFi+Lt
7Cc+/vGkH0djy74Ko16iV+FDN96Y9OOAWjl27Fh8hqgo3ic9FiAZc+fOjf+0
f2jBgsHBYe5gOb5s3749TiwXjh/vZCyV+Mby5RXuYImWa6+5JunHAbWSnTv3
ngsusFMXWtOM6dPj1LHu+ATaESSWaLl00qR4NaLgXInK97FEi30sNKtnnnkm
77c9+gsr6UEB9TZlypQ4sWzbtm2kcSVaoq1kvAKxq7YSFVab4+Xvb7896ccB
1feDH/wgvhho7jHQ6N+nn3466aEBdRUllnglILEkKO4KVZhYdIVoPrt3787u
yM1dZkyfXniFVqC53TRtWvwHy7p1a0eRWKKVSbyLZteuXUk/lMbmfCyQZ//+
t7J/UuVN2err60t6dEC9zZ07N+e48MjiSrSJjL/3wvHjBwfNvK3IS1u2VBJX
1LVoMnE5qPBXfeLFF7smBbSmVStXxjtJrr/uukzqGEFiidvNYzMXbk76cTSD
u2bNGt1slui7tm/fnvTwoZrm55xYO7u0t7V1dnYmPTQgGf39/dkZFCtWfHP4
caWvry8+JBR9Y0dHR9KPo+GlUqmenp7LJk8eRWiJ/urs7e1N+hFA1Tz99NNF
f9W/tnRp0kMDkvTQggXxVjLaXGYuKjSsxBLvEIiW911xxZEjR5J+EE2iq6tr
dFNwb5o2LQqfSQ8fqqCwHBQvc+bMSXpoQML2738rO4F27k3v6O59M52OrxNU
PKukUoNxyImX+ELPVMv27duvuuqqUYSW2bNnO4E5jW7Xrl3KQUAp3d3duX/X
v/fyyzNHiovHlb179vz97bdn48r8+fOTHn4T6uvri57Y89vbRxpaHlm0KOmx
w+gNlYOuv77wF1s5CEhnNo7R2qDoXzTfWL48yieZ6zIPzVrZ8OILc+fOjS8x
HC933HGHqzbXTvTkP7RgwdSpU9vb2rKvy2WTJ981a9Z316yJvlQ4/9YuLxrX
sWPHZs6cWTiPSzkIiBw9ejRKJuX/bI9WIO+54ILcKwvHH0dbTNcSqo/Ozs7s
ZJX4M6mMot2iKFJmTgYIDUY5CChjzpw5RSNK7h/1hcuHbrzROqSeNmzYEL8u
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
    "], {{0, 746}, {742, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{742, 746},
  PlotRange->{{0, 742}, {0, 746}}]], "Output",ExpressionUUID->"41d8a197-2b8c-\
4eac-8169-2de97d21f28b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Practice Exercises  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Practice \
Exercises",ExpressionUUID->"77c2e5e2-bfb2-4af7-ac20-aeb9d061c5a0"],

Cell[TextData[{
 StyleBox["21\[Dash]30. Derivatives",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  "
}], "ExerciseDirectionsCell",ExpressionUUID->"96148c44-9b11-42f6-aee5-\
b05f774e1666"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse limits to find the derivative function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "c493a1e0-7bc1-4c02-9c47-ebabf0ddcbb3"],
 " for the following functions f. "
}], "SubProblem",
 FontSlant->"Italic",ExpressionUUID->"67d59db8-3e2f-4bd7-b848-52fd5022de1c"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tEvaluate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "c62b72ef-29a5-449f-8b75-fa905ade1f40"],
 " for the given values of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "229a4b2f-0e6b-4b6d-ae84-05870f68093e"],
 "."
}], "SubProblem",
 FontSlant->"Italic",ExpressionUUID->"6bb69e84-fb64-44ab-9b4b-be81133e8c41"],

Cell[TextData[{
 StyleBox["21.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"5", "x"}], "+", "2"}]}], TraditionalForm]],ExpressionUUID->
  "dcc8b961-d1f4-4d4a-9dd6-436f1529695c"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "1"}], ",", "2"}], TraditionalForm]],ExpressionUUID->
  "5dd096c3-973c-45bf-884f-0463c4ad25aa"]
}], "Problem",ExpressionUUID->"ff8e26dd-fc40-4932-b0a8-5f04480a7dd7"],

Cell[TextData[{
 StyleBox["22.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "7"}], TraditionalForm]],
  ExpressionUUID->"7176c69b-b460-4ad5-91a1-c5b8ffa207b4"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", "1"}]}], ",", "2"}], TraditionalForm]],ExpressionUUID->
  "c5022c16-1f09-4475-96ee-63801eabfdc7"]
}], "Problem",ExpressionUUID->"c9a53d51-350f-4744-a175-5c80f05d0628"],

Cell[TextData[{
 StyleBox["23.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"1aa9fa0d-23e7-4ebb-b224-0b48b49b2ab3"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "2"}], ",", " ", "4"}], TraditionalForm]],
  ExpressionUUID->"8083e893-92fd-4621-a53b-0862a14d87ce"]
}], "Problem",ExpressionUUID->"3d39f0ee-6447-4112-92f4-bee9d5cf26d8"],

Cell[TextData[{
 StyleBox["24.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"3", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "5429e9b4-dcd7-43f9-94af-ef9270fcdabe"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", "1"}]}], ",", " ", "4"}], TraditionalForm]],ExpressionUUID->
  "ec341110-890f-44e8-8c01-1f527232f1ee"]
}], "Problem",ExpressionUUID->"bd464d4b-68c1-417c-a1d3-f3b0b1ec9c4c"],

Cell[TextData[{
 StyleBox["25.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["1", 
     RowBox[{"x", "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "06b79943-4cd3-4039-9c90-d65caf0722a0"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], ";", " ", "5"}], TraditionalForm]],
  ExpressionUUID->"6b0c0856-2e6b-4c97-8c57-01f00fe0e46a"]
}], "Problem",ExpressionUUID->"e006c720-21b4-42f0-a4d1-7450ceda6567"],

Cell[TextData[{
 StyleBox["26.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["x", 
     RowBox[{"x", "+", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "c04d88af-295a-424f-9a71-898d877b8f91"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", "1"}]}], ",", "0"}], TraditionalForm]],ExpressionUUID->
  "de64ec5b-a752-4679-9af5-3a5832aa76e4"]
}], "Problem",ExpressionUUID->"fbe696c7-067b-4e40-8a29-5b831c6066df"],

Cell[TextData[{
 StyleBox["27.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "t", ")"}], "=", 
    FractionBox["1", 
     SqrtBox["t"]]}], TraditionalForm]],ExpressionUUID->
  "440c5dc2-9787-4451-b303-5054f001e7a5"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "9"}], ",", 
    RowBox[{"1", "/", "4"}]}], TraditionalForm]],ExpressionUUID->
  "b1f19d68-a657-47e3-ab9e-0a305459f555"]
}], "Problem",ExpressionUUID->"0273b59d-b134-4dd7-b7b4-0cbe35d5178d"],

Cell[TextData[{
 StyleBox["28.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "w", ")"}], " ", "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"4", "w"}], "-", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "a59a60c7-f2b3-4067-80fa-b82da933fe37"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "1"}], ","}], TraditionalForm]],ExpressionUUID->
  "3f00efb5-9764-42c9-abfb-997884ebf75b"],
 " 3"
}], "Problem",ExpressionUUID->"02ded522-df76-41ca-84db-860f0c1783dc"],

Cell[TextData[{
 StyleBox["29.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"3", "s"}]}]}], TraditionalForm]],ExpressionUUID->
  "db89c9eb-d6d6-43fb-86c4-3058d1c27ccd"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", "3"}]}], ",", " ", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "642a7ff4-26be-44a7-8866-1955ce0d7617"]
}], "Problem",ExpressionUUID->"65bf3e72-09df-467d-828b-66755379d489"],

Cell[TextData[{
 StyleBox["30.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "t", ")"}]}], " ", "=", 
    RowBox[{"3", 
     SuperscriptBox["t", "4"]}]}], TraditionalForm]],ExpressionUUID->
  "fd22e534-ecd4-40cf-a70b-9dc79062a651"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"-", "2"}]}], ",", " ", "2"}], TraditionalForm]],ExpressionUUID->
  "57df6c0b-f0b7-4b2b-957c-672133b55abd"]
}], "Problem",ExpressionUUID->"eb18cef1-d7cf-49d4-9f5b-457be06dd539"],

Cell[TextData[{
 StyleBox["31\[Dash]32. Velocity functions",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  A projectile is fired vertically upward into the air and its position (in \
feet) above the ground after ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "ca279485-279b-4dc7-967d-4848e10bb334"],
 " seconds is given by the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "ecd95089-6b06-426b-8339-93e19234a18b"],
 ". "
}], "ExerciseDirectionsCell",ExpressionUUID->"86328296-604e-40e3-b345-\
160c4b5e08c3"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFor the following functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "a71495c7-eabd-49bc-a784-1d87b63428c5"],
 ", find the instantaneous velocity function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "3b98b7c0-e261-44b3-9055-1d7bc62db048"],
 ". ",
 "(Recall that the velocity function ",
 StyleBox["v",
  FontSlant->"Italic"],
 " is the derivative of the position function ",
 StyleBox["s",
  FontSlant->"Italic"],
 ".) "
}], "SubExerciseDirectionsCell",ExpressionUUID->"4543fa1b-a033-4f98-b01e-\
bfcb86019282"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tDetermine the instantaneous velocity of the projectile at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "3c7e59b0-78c9-43ac-b05f-741528046668"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "4971b502-43cd-4fb6-9d02-35c139a5c0d1"],
 " seconds."
}], "SubExerciseDirectionsCell",ExpressionUUID->"d14c3b78-46db-4df6-98ab-\
e1b0fd19fc04"],

Cell[TextData[{
 StyleBox["31.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{"100", "t"}]}]}], TraditionalForm]],ExpressionUUID->
  "2d0a60cb-06bc-492c-be24-495d6d19e3ad"]
}], "Problem",ExpressionUUID->"71b347d7-d8ba-49f4-8a3e-3d35c4038c1c"],

Cell[TextData[{
 StyleBox["32.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{"128", "t"}], "+", "192"}]}], TraditionalForm]],ExpressionUUID->
  "b4e70ba5-6001-40be-827a-931d2fe0aba8"]
}], "Problem",ExpressionUUID->"9e4caa81-9bd1-4d18-a127-960ff09d6244"],

Cell[TextData[{
 StyleBox["33.",
  FontWeight->"Bold"],
 "\tEvaluate ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "y"}], 
    RowBox[{"d", "\[VeryThinSpace]", "x"}]], TraditionalForm]],
  ExpressionUUID->"5a5e0881-0bf4-4fb4-92c3-e0e399b6530e"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "y"}], 
      RowBox[{"d", "\[VeryThinSpace]", "x"}]], "\[RightBracketingBar]"}], 
    RowBox[{"x", "=", "2"}]], TraditionalForm]],ExpressionUUID->
  "cf02f7b0-4838-456a-ab5b-6c75cff19fee"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox[
     RowBox[{"x", "+", "1"}], 
     RowBox[{"x", "+", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "ef5603dd-90a1-494d-ad1d-261876b48faf"],
 "."
}], "Problem",ExpressionUUID->"f65da522-22b8-43f8-aeb2-2e969cc7292f"],

Cell[TextData[{
 StyleBox["34.",
  FontWeight->"Bold"],
 "\tEvaluate ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"d", "\[VeryThinSpace]", "s"}], 
    RowBox[{"d", "\[VeryThinSpace]", "t"}]], TraditionalForm]],
  ExpressionUUID->"336d10ee-fa21-49f0-a501-25b1062c2f38"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "s"}], 
      RowBox[{"d", "\[VeryThinSpace]", "t"}]], "\[RightBracketingBar]"}], 
    RowBox[{"t", "=", 
     RowBox[{"-", "1"}]}]], TraditionalForm]],ExpressionUUID->
  "e9679a5a-bf6f-4b13-baea-68b4ad3c284c"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", 
    RowBox[{
     RowBox[{"11", 
      SuperscriptBox["t", "3"]}], "+", "t", "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"15da209a-ff35-462b-95cc-72f1b91bae3e"],
 "."
}], "Problem",ExpressionUUID->"099a55de-aa2f-41c5-a660-72a6d2c04ea5"],

Cell[TextData[{
 StyleBox["35\[Dash]40. Tangent lines",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 " "
}], "ExerciseDirectionsCell",ExpressionUUID->"25849dfd-a66f-4465-80bd-\
348194c5e701"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the derivative function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "24282f7e-b755-4c4b-9797-409b148b98cc"],
 " for the following functions ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "04010395-d807-40f0-b0a1-b9ce54ff6f9f"],
 ".\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind an equation of the line tangent to the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "8b2759ee-1391-490a-bfc0-d404323ade89"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", 
     RowBox[{"f", "(", "a", ")"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "fd40ffe1-530d-466f-83f2-fc753ffd9008"],
 " for the given value of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "eabba3d7-07de-4767-a873-5e07ce724cba"],
 "."
}], "SubExerciseDirectionsCell",ExpressionUUID->"dc73f701-4fe7-415e-9498-\
3b031c1612f5"],

Cell[TextData[{
 StyleBox["35.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"2", "x"}], "-", "10"}]}], TraditionalForm]],ExpressionUUID->
  "39f049ac-9ce4-4bad-8344-a2ee63d19885"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "98fe3651-0d4e-4eea-b935-82c40bf88d59"]
}], "Problem",ExpressionUUID->"61824f06-20f9-45b7-b526-31db6c929757"],

Cell[TextData[{
 StyleBox["36.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"6", "x"}], "+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "ac89a923-226f-4f1a-a216-39b662db6c3a"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "253f0516-4810-4e3a-a045-85a32d197c19"]
}], "Problem",ExpressionUUID->"a9b78807-54e9-4309-bda2-0d0dd1693de4"],

Cell[TextData[{
 StyleBox["37.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"3", "x"}], "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "cbbfda55-1cbd-4840-9376-2b0ce14e8a4a"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "2bbc8be1-c853-433d-82f4-8807e34407a7"]
}], "Problem",ExpressionUUID->"371575b9-c985-41c8-bcb8-d6d7da819cd0"],

Cell[TextData[{
 StyleBox["38.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"x", "+", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "6fbf5c73-b0f4-4ee1-87de-d3a6b3f4dcac"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "7"}], TraditionalForm]],ExpressionUUID->
  "f4d0f9c3-d535-4860-b97f-dfb435c5e577"]
}], "Problem",ExpressionUUID->"ca3cc478-2e7e-4631-8bb6-d21525b2512d"],

Cell[TextData[{
 StyleBox["39.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"3", "x"}], "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "bdb9f7d8-0de6-4c3d-be55-9bb470648307"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "2d9d08c2-dfb7-4839-a9af-4486abc1f356"]
}], "Problem",ExpressionUUID->"5eb7a940-d83f-4b11-b121-f4e60b9e940e"],

Cell[TextData[{
 StyleBox["40.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["1", "x"]}], TraditionalForm]],ExpressionUUID->
  "05df292a-433f-4d36-b604-70feed3bcb03"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"-", "5"}]}], TraditionalForm]],ExpressionUUID->
  "30b0da8a-5c88-4b88-a0fe-1938f2e05169"]
}], "Problem",ExpressionUUID->"3de6b264-d966-4041-b740-15da1ef9ad56"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "4b7edd83-3b5d-4a51-8767-bf5d436ea073"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "05ba116a-67ca-4a35-addd-007e84110130"],
 StyleBox["41.",
  FontWeight->"Bold"],
 StyleBox["\tPower and energy",
  FontWeight->"Bold"],
 "  Energy is the capacity to do work, and power is the rate at which energy \
is used or consumed. Therefore, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "0afa169d-90ee-40df-8bc3-73cece2ffaf7"],
 " is the energy function for a system, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{"E", "'"}], 
     RowBox[{"(", "t", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "986da272-bb01-4262-b3cb-04bd1211f150"],
 " is the power function. A unit of energy is the kilowatt-hour (1 kWh is the \
amount of energy needed to light ten 100-W light bulbs for an hour); the \
corresponding units for power are kilowatts. The following figure shows the \
energy function for a small community over a 25-hour period."
}], "TProblem",ExpressionUUID->"960b6edf-b5df-4b15-888f-3ea1658204c2"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tEstimate the power at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "10e88b5a-9c7c-49ca-b061-b6def9a54b14"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "20"}], TraditionalForm]],ExpressionUUID->
  "176dddfe-e1fe-4a33-bbf6-9fa0cf977de7"],
 " hr. Be sure to include units in your calculation.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tAt what times on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "25"}], "]"}], TraditionalForm]],ExpressionUUID->
  "cc137925-ad0c-4c78-93a4-ecae9ad42f70"],
 " is the power zero?\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tAt what times on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "25"}], "]"}], TraditionalForm]],ExpressionUUID->
  "abf343a2-267b-46bd-8679-6fdcef9a2e2e"],
 " is the power a maximum?"
}], "SubProblem",ExpressionUUID->"72ea6452-29d7-47f7-9f16-c7788e3656f5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tzsaXg0aXplkjcOfOXNmVXFxqKnv8jMipDdVV4v6VbljksfjcblcuXffHX5Y
fnleXnt7eyRXSMMrQ8MDDjE6kD77xhdDl3ZI2nh72sbmMf8wdHpL2rSR55rp
+bv6QpS5bgWb9ClPNEV+oqko0fDK0PBq0PDKJGUcvq6ubl5GRphpM6LeRUIn
/aiTq/5r4tFVlHyYjJ+dni5eaIw7IE/DK0PDA87Q8+qj8mF25ludUV/4iluu
Thm00nt+9xNtvCjUCaS0YfwgrwIsRcMrQ8OrQcMro3gcXvzPyuH3oNNm5BwV
kcRJr3c90efiBYWc8xOq5O/Lz+/q6gpzJTS8MjQ8kPq+HOgVj5n9l66EnKAy
OpHGPN3F13vi929ta3i95v0TF31fBZ9jc3LTg3Iqe9ornwb559Ex9uEvuHeb
eZBf7NWHj90w8jw1M+eNnoTMopFoeGVoeDVoeGVUjsMfPnzYXML6hhePYOK/
PtG7ERvxskJ/7G3QGfJhlpGn4ZWh4YFUd2qnfCwVj/xTS7e3+PzGkvd27Lhn
cohR9MuNy/5Je+BNn/KEKHnDxS++u1Zef1qhK9QknGvul7QrMQ/FXzu6XTua
taD+b3F+u+HR8MrQ8GrQ8MooG4eXp5MOumKk+MzSpUvd7gS+WWmVrq6uFQUF
2mO7+cVIWWlp0DcRaHhlaHggxYlC1h42ZWyXN7SfuBCYcT402Hu0UY7Ap097
2Nznfn+/vuHltvClfRcGh8RX+npPNFT8SF6n+GTwWTKjel59VD6Si1cKW49d
1D7v7dgndkA+pKc9/2GCDmXV0PDK0PBq0PDKKBiHF/kaZs1GOZ88pSbPjKv6
7ca5C28Nc6CreV4NDa8MDQ+kOt3KMNpTg3guWJSVpf117dY9Hd6hoJc++fwS
81Jm+nd1b1hUHiz+g+h8p1SOyYjt+09v2r1nz7Zf/lj7jHgVkLAjWa+j4ZWh
4dWg4ZVJ9Dh8Z2dnTnZ20IFrsd2zbFmE67qkFPHU0HO2W7wwCZXxCzIz3U2N
+ovQ8MrQ8EDq83bsE7VsnFQ5M+exn5fV7DsmB9VDXnho8LOGVyqKfmg8LeDM
nML1NQ0tJ6MKb1/vifdfLFsy47tausvr+XOfN+7vMiI0vDI0vBo0vDIJHYdv
amrSrz9jCN3Kysr4T7SaXC6XK9S8GvF58a/aV9LwytDwgG0MDX450Nt/6Yp4
AvJ4PNEOevu+GrwUIJoh3OGxERCXlXuifjVjGl4ZGl4NGl6ZxI3Di4INtXrk
gszMQ4cOWntzydLe3r44NzfUgLz2OoWGV4aGB2AjNLwyNLwaNLwyCRqHF+0a
dOUZsa0oKDh3od/C20o6j8ezuqQk1IT/VcXFngAaXg0aHoCN0PDK0PBq0PDK
WD4OL4M26Jotzpg/E4qcV2NuePGNy6NcaXg1aHgANkLDK0PDq0HDK2PtOLwI
+BUFBUFnv4u+rauri/8mUpm7qfGO+fODrr2Te/fdb775Jg2vAA0PwEZoeGVo
eDVoeGUsHIcX/2vL8/KCHsE6vE6Le0L8V3Z1dRmmx2s/EJH3LpfryEdHkr2P
DkfDA7ARGl4ZGl4NGl4Zq8bhRS+Jdg16BKv4vHm9dAe7dOmSfDPCnPHzMjJq
a2uTvYMOR8MDsBEaXhkaXg0aXhlLxuG7u7tzsrODrkIjalb9Ul1J5/P5DEe5
an8WGd/W9kmyd9DJaHgANkLDK0PDq0HDKxP/OLwMeMOAs0zWx3+6yl4nYLWW
fnEe/UbGJxQND8BGaHhlaHg1aHhl4hyH7zl7PeANGV9WWmr53tpOTU1N0DNA
kfGJQ8MDsBEaXhkaXg0aXpl4xuHlHPigqylWVlYmYm/tyOVyBf0RLcjMbG9v
T/beORAND8BGaHhlaHg1aHhlYh6HF/9HS5cuDTpXpKqqKkF7a1N1dXWG0Xj5
VoXI+Al1tK8aNDwAG6HhlaHh1aDhlYltHP7SpUvL8/KCBvyLGzcmbm/t6803
3wyV8Z9//nmy985RaHgANkLDK0PDq0HDKxPDOLw8kRMj8FERr3qCHuIqMj4n
O1v8wid7B52DhgdgIzS8MjS8GjS8MtGOw/t8vlXFxQR8tETDi59zRcU68yGu
Yrtn2bKJvICPtWh4ADZCwytDw6tBwysT7Ti8eJAJGvAcxBrecMMHhFpwckVB
ARlvCRoegI3Q8MrQ8GrQ8MpENQ5fVVUVtD8rKtYp2FVbG2n4fR989NFHNTU1
5hk1YltdUnLVfy3Ze2p7NDwAG6HhlaHh1aDhlYl8HP7NN98MGvCiPH0+n5q9
tS99w/uDvRqSc2x4OyN+NDwAG6HhlaHh1aDhlYlwHP7QoYOz09PNAb+yqIiA
j4Sh4YVQc+NdLldyd9XuaHgANkLDK0PDq0HDKxPJOHxnZ+e8jAxzbS7Py2MK
d4TMDS9e+6wuKQl6Ftempqbk7q2t0fAAbISGV4aGV4OGV2bccXjxf7EoK8uc
mqyIGBVzw/sDq3QWPXif+WcrXjGJ101J3Ftbo+EB2AgNrwwNrwYNr0z4cfhQ
S8HfMX8+JxiNStCGF8SPPffuu81D8eJ1Ey+RYkPDA7ARGl4ZGl4NGl6Z8OPw
QVeSnJ2e3tzcrH5XbS1Uwwvi1dCCzMygq01yrEEMaHgANkLDK0PDq0HDKxNm
HN68BKLcxANOUnbV1sI0vOB2N4tXRuZJNWWlpep31e5oeAA2QsMrQ8OrQcMr
E2oc/tChg0EDnpOxxiZ8w/sDD+MsU2MJGh6AjdDwytDwatDwygQdh5ezO8xJ
ubqkJIm7amvjNrw/xCm0mLkULRoegI3Q8MrQ8GrQ8MqYx+E9Hs89y5bJM4ey
kqRVIml44fGfrjL82MVfxeups2fPKttVu6PhAdgIDa8MDa8GDa+MeRxeLlpu
aHgyMk4RNrx4lbR06VLzOyD35edzfGuEaHgANkLDK0PDq0HDK2MYh3e5XFrA
ayXJdI74Rdjw/tDL1FRUrFOzq3ZHwwOwERpeGRpeDRpeGf04vLY6iqHhOawy
fpE3vNDU1BR0mRpWBIoEDQ8Hu+q/1tt90t3U2PB6zcYNz4qX9tr2s/WbX35l
i6ux7cSFK76vBpO9p4gUDa8MDa8GDa+MNg7f1dW1KCtLTsDWNzzLG1oiqoYX
xHOxeSie87dGgoaHI/V1tL7/YtmSGd/VXuBrj9La6339HwrX17x/4uKVZO82
xkXDK0PDq0HDK6M1/MqiIn29y43jWK0SbcP7QxzfunTpUv5HwqPh4STDA+9H
G9fk36avdPNjddClgMU2KbuwZt+xS18n+9tAaDS8MjS8GjS8MrLh1zz5pPl5
YV5Gxueff57sHXSIGBpetHru3Xebn5R5nA+PhodjeDv2lWZNCxrnkTS89vn0
KU9sPXZRvBxI9jeEIGh4ZWh4NWh4ZUTDb6quNkyDl4/8IjmTvXfOEUPDC+3t
7eKVlHk0vq6uLnG7anc0PBzh8slND8olBcIkutgWZWWFGYfXb1NLt7ewulXq
oeGVoeHVoOGVaWpqkqdzMmwbNzyb7F1zlNgaXqitrQ06Mb6rqytBu2p3NDxs
z9ux+c6b5y68VT/pfVJ24TPba6vfbmw9de7chX7fV4OGue4+n8/j8Xw50NvX
0Xr84z0Nr9dUFP3Q8BIgfdrDW49dTM43hRBoeGVoeDVoeGVWFBSYA158kndd
rRVzwwtlpaXmofjleXmsGB8UDQ9b83bse3zKDO3OfvtDj7zW/Nf+S1ciPzp1
zKP30GDv0cZtv/yxtlCwePQoa/kiATuOGNHwytDwatDwarhcLvGQbphaecf8
+T1nu5O9a04TT8PLEz+ZR+MrKysTsat2R8PDxk7t1O7gD23c3eEdsuqKfb0n
Gip+JB7h5WM+GZ86aHhlaHg1aHgFurq65s6ZYx6EP/DBH5O9aw4UT8MLnZ2d
5mmx4q9NTU2W76rd0fCwq1M7l8wYvmvfeH/5/r7ELCVzamf55BnDDybT89/o
4c3WlEDDK0PDq0HDJ5rH41mel2de34Ch3QSJs+H9gTdNzEPxCzIzxZ3F2l21
OxoetjRwuPKm6eJO/Y2KhnMJvSFvx457Js9deOv3Jj/HIa6pgIZXhoZXg4ZP
tI0bnjWvb8Bq8IkTf8P7g60YL7ZVxcUW7qcD0PCwof66B28Sd+e09fsVnJVp
yHv+w8dukDeX+FvDOGh4ZWh4NWj4hDp8+LB5YsbcOXNY6iRxLGl4cSUL77rL
PBrvcrks3FW7o+FhO707SoaL+pGdA6puUWS8fNVQ1vIFKxgkFw2vDA2vBg2f
OB6PR64nbGj4mpqaZO+ak1nS8P7A6y+WmgyPhofNDA1++NgNSZjZ4u2ovGm6
yhcOCIqGV4aGV4OGTxzxKGGOwOV5eSIyk71rTmZVwwtVVVXmGTUrCgpYalKi
4WE/Q8bF3hXdrPd8Um4XejS8MjS8GjR8gtTX15vz747589/dtZNDIxPKwoYX
ra4dj6zfNlVXW7KrdkfDA2P1u5sa/9znTfZuIDgaXhkaXg0aPhHET1WektXQ
flVVVeJHTcMnlIUN7w8sNTl3zhzD/+Ps9PT29vb4r9zuaHhgjPMHhg9+P/pf
yd4PBEfDK0PDq0HDJ8Kq4mLzNHjxSdmWNHxCWdvw/mBLTYr/2aVLl/q+GrTk
+u2Lhgf0en73k+E+/AsNn6JoeGVoeDVoeMvV1dVpa0hq1bc4N/fQoYM0vAKW
N7ywsqjIPKOmqqrKquu3KRoeDvblQO/RT0+4mxobXq+pfjvcx3d37Xz5lS1r
8m8b6UMaPlXR8MrQ8GrQ8NYSMTMvI0M7kZM2bNva2up2N8sfNQ2fUIlo+J6z
3fK/1TAaL/5brboJO6Lh4UzejoaKH+kfwMN81E+xk5+h4VMWDa8MDa8GDW8t
bRaNvuHlgO3Hf6bhVUhEwwvv7tppPsBh6dKlE/lcXTQ8HGjgcPnkGeZED7/p
q56GT1k0vDI0vBo0vIX0s2i0hr9n2TK5FCENr0aCGt4feIHGjBo9Gh6Oc3n/
A9+KPN2DbjR8yqLhlaHh1aDhrWKYRSM3/QImNLwaiWt48R93x/z55qfstrZP
rL0hu6Dh4TSndsYZ8DR8KqPhlaHh1aDhraIN0uobXj9IS8OrkbiG9weW/Tc/
ZWtvtUw0NDycpn2r/q79/ac3tZ46d2Fw6Kr/mi808a9D3vPHP94jJ+HQ8CmL
hleGhleDhreEIe1kwC/Py9OnHQ2vRkIbXnj8p6vME2Vf3LgxEbeV4mh4OI2u
4QsPnovqoqLkBw9smJ2eXtbyRYL2DnGi4ZWh4dWg4eMnonFBZqYh6sQjuWGK
BQ2vRqIb/tyFfvOMGvHf3dnZmYibS2U0PJxmtOHT7nVdieHiA4fFC3zO8ZSy
aHhlaHg1aPj4iUeDSA51pOHVSHTD+wNPBOah+Pvy8xN0cymLhofTHB85odu3
/nVbdKPwIy73dbSeuBBL/kMBGl4ZGl4NGj5OTU1NES45SMOroaDh/aOLiBom
UNXU1CTuFlMQDQ+nGTr960nTA+PwsTU8UhoNrwwNrwYNHw8R6jnZ2eaGd7ub
zV9Mw6uhpuG7u4fP+mT4fxefOXO2O3E3mmpoeDjPmS0Fwy/JZ+a80XMt6gt7
O3b8sHDrsYsJ2C9YgIZXhoZXg4aPR2Vlpf5cTnL71bPPBv1iGl4NNQ0vuFwu
8xyqVcXFCb3RlELDw4GGTm++8+bZ6enfm/xch3coussGlqbkmNaURcMrQ8Or
QcPH7OinJ+TJtfUNvygrK9SJO2l4NZQ1vLCioMCc8fX19Ym+3RRBw8OZrrhF
xg/PqFlTPxD5pYYG2565k4ZPZTS8MjS8GjR8bK76ry3Py9OWkdT6rampKdRF
aHg1VDZ8V1eXeB1naPgFmZlfDvQm+qZTAQ0Pexnynv/9W9ve3bWzLjTxr9Vv
N+6uWiYf2KeWbh/+65494S/y/otlpVnT5DPCmpbBZH+jCI6GV4aGV4OGj01N
TY02CK81/OqSkjAXoeHVUNnwQlVVlfxN0B/cWlGxTsFNJx0ND5vxthZOnSnv
rUE/ypNrG16Yz50zR7trB72I/r7POHwqo+GVoeHVoOFjIIplXkaG/nys8njG
8HFOw6uhuOF9Pt/i3FzDAjVic7udf4ei4WEzQ4MfP5mmf+g2b4YyNy9ZEH5j
HD6V0fDK0PBq0PAxWF1SYn7Yr62tDX8pGl4NxQ0vNDc3m5/oDWfpdSQaHrYz
eGBD+IY3vLsa7SYuyDh8yqLhlaHh1aDhoyUXhDdsKwoKxr0gDa+G+oYXflH+
tPnZ3PHLxdPwsJ/zB+R0msQ1POPwKYuGV4aGV4OGj4pcEF57s1WbP9nZ2Tnu
ZWl4NZLS8OJGF2RmGp7N52Vk9Dh6uXgaHjbUv+sH3xF3z4Uv7ZMnVPVZYch7
vvdo45r82+bOmcM4fMqi4ZWh4dWg4aNSVVVlmPYsNvHJSC5Lw6uRlIYX6urq
zINyj/90lcp9UIyGhx31vPpojKdwGs8190viXs84fMqi4ZWh4dWg4SNnXkhQ
BHyYBeENaHg1ktXw/sBy8Ya34MVfwyw3anc0PGzp1E5xx1zbdsX6a77iXjLj
uw+5L1l/zbACDa8MDa8GDR+5lUVF5kmSkRcaDa9GEhu+s/OUebn43LvvjvBV
nu3Q8LAp31eDCSj44fOGfDnQKz4m4LphARpeGRpeDRo+QvX19eYDnaKaKUHD
q5HEhvePnW2lDcVvqq5WvycK0PCwH++x8skznutgustERMMrQ8OrQcNHwuPx
LMrKMjT8vIyMM9EcsUjDq5Hchpe/KoaMnztnTldXl/qdSTQaHvbjbX18yoy0
jc3J3g8kAQ2vDA2vBg0fiY0bnp1lOiVftIOrNLwayW14Qdy4eSh+VXFxUnYm
oWh42I+3tfKm6bdMz0/EMa1IcTS8MjS8GjT8uOShrIZFgxfn5kZ7Bh8aXo2k
N7wgit28Ro3zDm6l4WE/3tbyyTPE/TF9yhOvNf81EbPikbJoeGVoeDVo+HGt
LCrSryQpHwEOHToY7fXQ8GqkQsOL131z58wxNHxOdrbDztxKw8N+RhtePp6n
T3v4me21Hd4hDkSdCGh4ZWh4NWj48PTzIrSGX11SEsNV0fBqpELDCy9u3Gge
infYwa00POxntOHlpi0kdeP95TX7jsmzPsEu6urq3oxGWWmp/O9enpcnHo2j
2traPjlz5szniMyhQwfls0Nn56lk74uTtbe3y5/zn/7zT8nel5TT1dW18K67
DGvRzMvIaG5ujuG+LH7Co7/SneKau7u7+ZiIj+LHK3/O4jEkEb8VEZK/POYz
t7rdbsc8ERw5coSGh83oGn5N/m2Gkhd/yHm4/LXmv14YHEr2jmJ84hHVvOBz
hJv+ZOuRbDU1NXJ0iC2KjZ8YW7K2vXtXl5QYjmMVf17z5JNx/VrKyyJBkv5r
o/tfrqqqMvzyiG1FQUHyd8/qjYaHbQTWpblhUfn+vq+vBBaK7+to3boqb8kM
44TJwvU175+4yLh8Krtj/vyYGz7ajKfh2dhstNXW1prP17MgMzO1WpEtlbe9
e5fn5ZnP3Lqpujr5+2bpRsPDNq64h9eWfP0z0z9cPv7xnm2//LF2Px35w/T8
tVv3nLhwhQnzKaiysrKiYl3kmzy6TWyLsrJWl5REtTU1NbUjYuLHJZ8djn7S
lux9cbLW1lb5cz506GCy9yW1BD0r679v3RrzFWrTw8TP3ML9hEFb2yfyRVYq
POSKHTG/Elycm3v00xNiS/bexUv7labhYRveDtHwq47+V9B/FKE+5D3/WcMr
2jQbbZMT5ju8zLGxMY5pVUY7pvWLy8Hva7DE9WNa3Zzz4rqPPvrI/L5bnEt8
c0yrGsPHtAZ+zsk9plVTWVlp/l36/Vvbkr1fFuCYVtjRlwO94053FzHv6z3x
/otlhVNn6ifMi+37T28SMX/paz8j87ZDwytDw6uha3jWpbnOPAVCPIbHeapN
Gl6NFFmXRuPxeBZkZhqm04jPiP1M9q7Fi4aH44lQ7z3aKE/zZ1jNRsR8Q8tJ
jn61ERpeGRpeDdaWNHO5XIZDWcUmHsPjvFoaXo1Ua3h/YAE081B8ZWVlsvcr
XjQ8Jghtjk1F0Q/Ns+OIebug4ZWh4dWg4Q3kqKmh4cVnLv7jqzivmYZXIwUb
3p+Yd3aSjobHxHP55KYHQ61zcvtDj7DIfCqj4ZWh4dWg4Q0qKysNK4yJra6u
Lv5rpuHVSM2Gd7vdlh9hkXQ0PCaOq+da3n+xbMmM4Vffcxfear47i8/LIfrZ
N754Ltl7i6BoeGVoeDVoeL2uri7xIGxo+OV5eZZcOQ2vRmo2vLDmyScNs+LF
x6ampmTvV+xoeDjekPe8u6mxNGua7Pbra06a1owd/jgzZ+3WPe+fuJjsvUZw
NLwyNLwaNLzequLiWd81nunDqhV7aHg1Urbhe852z8vIMIzdLV261OfzJXvX
YkTDw6mu+q/1dbRu++WPzbPfg25ySjyL1aQ4Gl4ZGl4NGl5z+PBh/aCKbPg1
Tz5p1fXT8GqkbMMLm6qrzc/+Lpcr2fsVIxoe9hM4T+tTfwnZFV8O9H7W8Epp
1jTzeI55k4vGczSrXdDwytDwatDwmnuWLTM8Vs/LyOju7rbq+ml4NVK54T0e
z6KsLEMG2HedSRoe9uNtLZw6s6zlC9OA+eXeo43aeVr1AW9ueDln5sSFKxy8
ai80vDI0vBo0vFRbW2t4rBZ/rqqqsvAmaHg1Urnh/bonEf1m03UmaXjYT2Ac
fuZbndon5LmclswIMsxubvippduZM2NfNLwyNLwaNLw/2Fl45Oio+LyFt0LD
q5HiDS/cl59v+GWbO2eOHdeZpOFhP97W8skzbpme/1rzX91NjVtX5cklZUJN
mJENPym78Jnttf2XrpDutkbDK0PDq0HDC1VVVYbHcPFnS9aT1KPh1Uj9hg+6
zuTqkpJk71fUaHjYj2z4sY/25nVmtNUjv//0JrnOjKh3At7uaHhlaHg1aHiR
H3K1EP1juFXrSerR8GqkfsMLotjNw33NzdasgKQMDQ/7CTR8+EVmZMB/o6Kh
w8vBqo5CwytDw6tBw4v7snnS4+HDhy2/IRpeDVs0/Oeff25++/6+/Pxk71d0
aHjYTwQNr205D5e/ur1OlDwj8M5AwytDw6sxwRu+vb3dvPhAgs6eScOrYYuG
9wdmcJmn4NbX1yd7v6JAw8N+QjS8XCWyt/tkw+s1hVNnmmP+tea/soak3dHw
ytDwakzwhl9ZVGRo+Nnp6Qk6upCGV8MuDf/lQK/5SOqc7GwbnfKJhof9mBr+
oY27W0+dkyPtI5Pehwb160yKpwbtTE+F62veP3GRJSVtioZXhoZXYyI3fFNT
kz7g5farZ59N0M3R8GrYpeEFl8tlHg+sqalJ9n5FioaH/egaXtT7OX+4VSKH
vOfdTY2lWdPkDHntjbNbpufL9eGZY2MvNLwyNLwaE7bhfT7f0qVLZ409kce8
jIzEnW2HhlfDRg0vfgkX5+YaZtTcMX/+hQF7nPKJhof9BBo+fdrDu/oiym9Z
6X0drUHXkL/x/vLqtxuZMG8XNLwyNLwaE7bhXS6XYQQ+0UOgNLwaNmp4Qeyp
eVa8XU75RMPDfgLneFq29+8xXFSEeu/Rxh3Ft+vvrXKaTc7D5Q0tJ5kwn+Jo
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
t5r5TBlis+RMGTDjmFY1UuSY1qAz4VcUFCRxlyzHMa1qaPPhOaY1KDljTX9H
m52e3tXVFcNVcUwrHOfy/ge+NZyR0/Of2V574kJiljhMNaMT1+V2fQx87MIy
a03HvI6hX1hGLvAe58UTYHlenvlMGecu9CfkxiY2Gl6NFGn4TdXV5uHBw4cP
J3GXLEfDq8G6NOGdOXNGO5xN22JbaY2Gh+OMNLy4j8hZZ7c/9MhrzX+9MDiU
7B1LLP0JVa8PmHs7fj3p+gLvaa9/Fu4qxi4O+Yf+r/xDp+O6eAKI0mAoXg0a
Xo1UaHiPx3PH/Pnm9/eTtT8JQsOrQcOPq6JinXneWgxD8TQ8HGe44fULkmh/
KFxfE3wRdUfQjj8dMw5vONFq2AgfPLBB+4l9b/JzgclI/fFd3Hr19fXmhp87
Zw6PYJaj4dVIhYY3D8KLe1lzs/m8z/ZGw6tBw4/r7Nmz5lMhry4pifZ6aHg4
zvB8+Bu2tIo/9XaffP/FMv3qiOIPk7ILn9le2+EdctpBr+cPyINbDRPXTz6/
5HqEP7IzzGwY8ZXao0ramnr584nz4pbTzvFk2Coq1iXi5iYyGl6NpDe8KC7z
Eq/OG4T30/Cq0PCR+NWzz5qH4js7O6O6EhoejnN5Z9rND7kv6Rrycu/Rxm2/
/LGcgSbn2Ig/5Dxc3tBy8ly4q7KV0bnrxuNJT+3UHh8mLXzhdMjLDw+560fy
R36AcV7cakEbPv4zZcCMhlcj6Q1fVVVlXhM+FU44ZTkaXg0aPhKiuufOmWN4
IltVXBzVldDwcJ4vB3ovfR3k80Pe88c/3rOj+PYx02xm5jy0cXfrqXO2H5Yf
nY4++8YXx5T20OktadNGvtnp+bv6QnybuhVs0qc80XTFootbLdQ4vNh+Uf50
om51QqLh1Uhuw4tbl4Pw+oZ35CC8n4ZXhYaPUGVlpXk8qr29PfJroOEx0YhW
l8uqr8m/be7CW7U7zg2LyqvfbrTvOjY9rz4qv5eZbxnfjOv53U+0b1N/Big9
OZ1+ZM7MxmYLL24treFzsrMNj34xL8+FoGh4NZLb8Bs3PKufaij/3Nb2ifo9
UYCGV4OGj5B8BR3PUDwNj4nM27FPvySjnM49tXR7Q8vJoCP5yfLlQK+o0/5L
oU9cNTqRJvh0l9FB8uG1Ze7dZv4CcbUfPnaD9sbEGz3XrLy4pbSGFw90huW5
hk8sVVqauJueaGh4NZLY8PpBeK3ho30330ZoeDVo+MhVVVWZ31OO/EU0DY+J
ydd74v0XywynPJ4VWOFETlETLbp2654TF1LgfK+ndspYla8vWnx+4y55O3bc
Mzn8XJdr7pe0xwfzWPq1o9u1H0VB/d8sv7iFtIZ/6qmnzMtzMRRvIRpejSQ2
fGVlpRbw2l0pqrfy7YWGV4OGj9yFgUuGofioJrPR8Jho+jpaGyp+pB+8Dfpn
bfv+05uSuyKlKGT9kZviD+UN7SNzfoYGe482yhH49GkPi/0M84qj59VHR5bc
nJ6/9dj178jbsU9cg3wST3v+w1DXEOfFraJv+M8//9x8powYludCUDS8Gslq
ePGkL1966xve2XcfGl4NGj4q8qByfYdEvrIrDQ/n6dn78q6+a4aYFH8VuSsP
aA2V6w9t3P3nPq889FVOE9XKeWrp9qQtR6lbGUbbbbFLi7KytL+u3bpH7N64
19T5Tqn2rC1em+zes0cu1yM/s/ClfeEPBojz4pbQN7zfdKYMuSfRLs+FoGh4
NZLV8PK+Y9icfd+h4dWg4aMiF3eNbSiehofTDA3KtSX1n/ms4ZXSrGn6zBsT
foFpM4YGloe+HnujVD/BZuU7n6r+dgK8HftELRtKVez2Yz8vq9l37MJgFC8u
5CSiJTO+e30IbmZO4foa8eJFwcXjZ2h4bSxR/8Nx9liiMjS8GklpeHmKGf3j
4US449DwatDw0Qp6krUjR46Me0EaHo7Tv+sH30lbv98fWExSRPjchbeaV2HV
poWUN7SLBg5zdVfPtWy+82Y59C2uR3cKVOWGBr8c6O2/dOXCwCWPxxPPoLdo
fnlV4sFW/cXjYWh4/+icXsMDoIPn9CpDw6uRlIYPOgjv+GNJaHg1aPhoiSf0
O+bPNzyLrSgoGPeCNDwc5/L+B74lno9uf+gReUcwBLzcblhUXrPv2KWvTceH
BnXFXXnT9Fmji5/v70ulNWsmGHPDi8cu81kmHby2hjI0vBrqG160umEmvNi0
O5SD0fBq0PAx2FRdbZ4XeujQwfCXouHhOMMNH+Yw1RvvL3+t+a8i3aOZ3N5f
9y//PDJ0P2tW2uufJXD3EZa54f3BzpQxK5rluRAUDa+G+oYvKy01BPwEWdCJ
hleDho+Bx+NZkJlpeBa7Lz8//KVoeDjOmIbXb2n3/ya2FWauHd2uf75LW7/f
rieCsr+gDa8tc81QvIVoeDUUN7xodcORQWKbIOc4puHVoOFjU1NTY+6Wpqam
MBeh4e3O27GvZt+xRF/EVoI0/Pef3jQ8AWZoMLZrPLOlQH8kbNq924KfrBSJ
F7Th/aYzZcj/Kbc7gWeMdTwaXg3FDb+6pMQ8CN/d3a3gppOOhleDho+NHIo3
DEYtz8sLcxEa3nJ9Ha3il7cpPgc++GMEI8aX5aop3/rXbQNR7ODlxmX/JB60
0x59NZLVCG1oTMM/tHH3yFLqceh59VH9kbBpGynDpAnV8PEsz4WgaHg1VDZ8
Z2eneRC+omJdom83RdDwatDwMXO5XOYJwOJnGerraXjL9fzuJ4ZHyGg3uQRK
2iM7w6Tn8GIp9w+fmjOWFPd2vFc8SdxQ+rSH9SfrcYqRhl/40r7TFl3jmS0F
2rmExM/tIfel5J+8daIK1fB+0zFBsyJengtB0fBqqGx48yD83DlzJs6zPw2v
Bg0fM4/Hsygry9Dw9yxbFurrafhEEIEnl9GWK6KMecycnv/Yz8te3LjxF+VP
l5WWriouFn9dk3/b3IW3zhq7dHnW9raQN3BqZ+HUmcMBv6Y+1kkdl9ueuXNW
YGn0jZ0xzjBJVcNvNMi1JS0zcLg0a5pcyWHlO5/6vnLYT8xOwjS8ePSbl5Fh
WC4+kuW5EBQNr4ayhj/66Qnz+FJlZWVCbzSl0PBq0PDxePPNN82z4sUTX9Av
puET6IpblPaYYyELXaGSW2b/Zw2vaOOHa1qCh+K1o9tHjtB89NU4x5m1jHfW
aPzlHcW3h/rpxWx4RfRL/xD1zgh8coVpeP/oMUGG0fhxl+dCUDS8GsoaflVx
sWEijXjNO6FqloZXg4aPh8/ny8nONjT84txc8XnzF9PwCeRtLZ88Q/+Amb37
dLjpMYHVDgcPbJgVOPfQH/q/CvJFp3bOGl2lvMmCtVH6Gx74tpxUs6uPNIUN
hG/4GI4JQig0vBpqGr61tdU8b3PjhmcTd4spiIZXg4aPU11dnXkoXnzS/JU0
fAIdd415wJyZ80ZPRKcTenzKjEkLX2gxv+S64tZeFEQ7AWbIe/7opyeCHN05
+kJD3KKTDnHtPdoonp62HrsY47B54IyoPWe7+y+ximRqCd/w/sBQvOFMGeGP
CUIoNLwaahp+ZVGRIeDnZWRcGFB9nuXkouHVoOHj5PP5FufmGho+JzvbPBRP
wyfOxXfX6gfhI41kb6to+LQ19aZ2HB4zl/+VN2xpjW5Xhk5vvvPmuXPmBH0R
MTLyH1j23CkTRfp3/eA7w99RTAvIfNbwypIZ11ehufH+cmfNNbK3cRve4/Es
vOsuw6MfQ/ExoOHVUNDwIqXMM+Ff3LgxQTeXsmh4NWj4+NXX15uH4l0ul+HL
aPhEGRr88LEb9JMPI+3JK24RkOYzgcpXBHIWTZAh+nD6xZ4M78C924LPnx86
/etJ0+V+Fh50xsLnw0vTDH/Lr3wa1cXES5iTmx7U7i+i3rf98sfyzwX1f3PK
Cxx7G7fh/YHluQwPfeKXQTwkqtxPB6Dh1VDQ8CsKCgwBf8f8+eLVboJuLmXR
8GrQ8JZYunSp4VlsUVaW4W5LwyeK95ico6Jta9sinJXR725q/HOfd8znBg4/
PmVkFo0578Nf247i20cuGDpo5frnwy8Qpj1sxTT7pBtZXvKGLa1fDvSKn6fo
t9+/ta367caGlpMXBkO/G3L8evtNLd0+8pLn/AH5w8/ebdValYhdJA3v8/nE
Y51hVrx4PORVWFRoeDUS3fCHDh00HMoqtk3V1Ym4rRRHw6tBw1tC/AjNg1GG
oXgaPkG01WPGPQRVHsoa/trObCkY+R+McFK95O3Y9YPvaPvwXEfoKfTnDyyZ
MfJljjiB0UjDy4rTr4Qsf4blDe1B/jeGBj9+Mk0LvzEr25zaKVcsdNw6nPYT
ScMLtbW1ER4ThFBoeDUS3fDL8/IMg/ALMjMn4CC8n4ZXhYa3irjzGhrecOe1
tuGH198LHAkYcih3aFD867kL/U4Y6w1LPyVjOIxDnrBpeOa2+NdwJ1odPexU
bN+867cRHnl66ePX5BryMkq/N/m5sDNw+mXtyzVqbD8Ub3oTxHCQ4/C7EkFW
5uzfcc9k7f2IxrE/BLkOZ8j5SFAlwob3+Xy5d98dyTFBCIWGVyOhDa8N5ekb
vqamxvIbsgUaXg0a3ipNTU3moXj9m2hxNrzvq8He7pPupsaG12vW5N9WmjVN
3sSyvX83jy0Pec/XPXjTyLyO+38T5aRuncCEh7kLbxXbLTNzLNlmhT+nUtT6
6/7ln7VuDPUDEa65XxL/Gv6mL767VjttTSSD5N6OffIUrob/92e21778yhax
7e/72nwp/YuO7N2n7T3r4PwB+fol1DaS8YZjeAMrAoWcU9T93kg6/oWeSaYI
G17/lfrNfEwQQqHh1Uhow+un1GqD8BP2LHU0vBo0vIVWFBQYnsXmZWRoQ/Fx
NvyZzf8zaCCl3bstyLGR7Vv1I6Ixz9m4dnT73DlztBObhkm1yLcYjn8MRzc1
ZVboc6GKFzWb77xZ9HnYGRr92gsf8bGs5YvwdS2DP8y3KT7+j71/N19QvJoY
57/PPrSpR2PGYB8u/9Wzz4pNvNjUPjlmfpHu/Y4gDT90ekva8EvUb1Q02P1t
CluLvOH9pmOCxLbwrrsm5iyCGNDwaiSu4XkZa0DDq0HDW+jIkSPmiquqqpL/
GmfDiwodXkB7aLD3aKNh5DPI7Gtd2cYViqd2Ll68sqLoh4/9vOzxn66y5KPo
usKD56wanZCrNWpb2v2/Cfad9svpGePMctENKd8yPX/8yfDejt179hz44I/v
v1gmX+bIFxHPbK8VnxT3KvGvxgNmpVM7r//vRDXrPtV4Oypvmq7/4Te0nLwS
mOjlHz36wNuxrzRrmnglOGaO09iGbzSV+snnl8h/4nxYSRRVw4tfePPL/Ak7
kSBaNLwaCWr4yJeYnjhoeDVoeGutLCoyZPy8jAzxQ/ZbNx9+OJD0tSkS/VeH
zV/W+U6pnBYy/AUhp4hHf9PxfdRfjyX7I+Nc+1GkT3ni6Kcn3O5mUdEioTdu
eFa8AAn/g9Jow+OhwjIkXZOLlwnjz6IfHWeWm40Xmex+T37j4iVPuHXdA6vN
jJnfrptLk3avy/z9a6v3rGkZtPdcIzuLquH9owf06e+PE/aAvmjR8GokqOE5
rNuMhleDhrdWa2ur+b5cWVnpt/qYVv0chpDLmAfayeK5Kyll7DiwdqogLSS0
VzFyCz89Rj9N/Zt3/TbyAyp7d5RcH4tevz+C9h9Zy2WW5TOL1Lp2dLs8K+64
J2b6+Mm0MS+LAnO9Rn5ihS7zUcay4cWVR32OLVgn2oZvamoyDMVP2IX1okXD
q5GIhhevUnOysw2/+Ytzcyf44AMNrwYNb7lVxcWGhp+XkSG63eK1JUdny8g6
HbM63yjxGCJX8HvI7dCzPB93GR45cx4uL3rwvvvy8xdlZcnHVW0TDfmH/q9C
X9dl7URRocIyhH4tyCMeVL+sv0g0t5ViAik+/tEWQ4M7im+flF345z7vyPOa
vuHvDdfwUS7RDytF2/D+EMcEyTciEQYNr0YiGt58mjOxcZozGl4NGt5y7e3t
hpEosVVUrLN6ffj+hge+fX0sN1hHyQM5RTu9f8KZ56/v+d1P9D9qEcPGMfCh
QW3hx3FWlfRf1n6eocIyON20kIgntzun4SMaKvce+/Wk6WNeQ0U2Di/f15jg
w1lJFEPDH/k/HxliRvyGaMcEIRQaXg3LG97j8SzIzDT8zi/Py7Pkym2NhleD
hk+E1SUlhjv17PR0+fts4TmeLr67Vrv+4NOwA2P1dl/5JLR+fXXPCixZGbT3
5CSZ8U79ObarI254/RmmJi18IbIZOP2Ny/5Jd1u2XQg90PDhjzLQTl875vdw
7Di8+fdTm9fk3N9eG4ih4f2BY4IM747Ny8jgeTw8Gl4Nyxu+pqbGfCi3SCpL
rtzWaHg1aPhE6OrqMr+5tqq4WP6oLTtP6+gZLeWc5E1/Ny5F3vO7n4gvKGv5
IuZb+HKg1+1ubmv7RHyUx4pa8tGaKhs4rF+fR/wQgp4dVTvudbwR8hgbXn9g
QuRreMp1V2bFcPxsShl9D2LlO0Gm9IuffO/RRm39fP2bFPqXn8GG8fu1eU3j
vXuCBIqt4cXDhXko/lfPPpu4/XQAGl4Naxte5JN4fWpo+BUFBfFfswPQ8GrQ
8AlSVlpqzniXyyV+2JY1fGB5E22+9zLDUuSB5fviHMa85n4pzBLoMWwjp0+y
YpKzfhmZWWEO7PVffq940uwbXxxvuZjYGn7kpKtyi/y4A22uiL0bfmjw4yfT
xG/I3IW3yoUlxWu0zs5Txz/e8/6LZfI0ZNp/+vCsm0Xl8qRX+tWEghzSG3hp
IC/FMa1JFFvDC4//dJUhbMQvyZmz3QnaTweg4dWwtuGrqqq0hRS0zd3UGP81
OwANrwYNnyCff/65uX7FK3QrG360hYKeClNWYpxHs8pzm1p1dqcYxqvDMKwq
GfJ8QN6OravyIjgzbEwNr3sv4Jbp+ZEvZq6fyS9effzHf0d4udQzek5Vfa7r
/zpyQPGUJxper5EvWMQfxA9NC3vxT4az2YofjnZB+y7a4wAxN3xnZ6f5QeMX
5U8naD8dgIZXw8KGF1clB+H1v+ori4os2U8HoOHVoOETp6JinWG1ZLHV1NRY
2PCDBzZorxQmLXzh+lBzYCTzm3f9Ns5ZK0Pe8253c2CzUHPrqbhn04xdYl1s
xrchohZLw+vfC4jiLY+hQe0FyHCm2veY1oDeHSVhXuXpV/XUptDo1wsa3qbn
1+w7Jl+CjaxXqVsONMnf3gQWc8ML4iKG3wTxSNXV1ZWI/XQAGl4NCxu+srJS
e5jSfslbW3nfcAQNrwYNnzjnLvRrp+/U0mV5Xp6FDa8/2ZN+SoY8JNDGJw8a
l2H4N/qznYqXJ2PH7WNZl+bk80u0B/BoRoyHb+v6UHOwgzrtRT+/3bzp3wQx
ZHza+v2d74zMOpuUXbjmySf1hT/OeXWRYPE0vMh18xuRq0tKErGfDkDDq2FV
w3d3d8tfb33Dryoutmo/HYCGV4OGT6iqqipz0lh60Hr/jnsma9c8clBnIOzj
H4RPZYZojHhBmFGBOTCG6h5zdGpEY+P9df/yz9oD+FN/ifzJd2TMf6Rj19Tb
dDq8nq/3REPFjwy/6jfeX25e17Rn78sjq33e/5tAovd//GSaYR6O/MnMfKsz
Gd8KRsTT8P7AG5HmR7+2tk8s308HoOHVsKrhy0pL9W8Xyt/t9vZ2q/bTAWh4
NWj4hLowcOmO+fMNMw2sXTxWGwoWH+XyiXKexto2B4RhKGPOxzQrygn2Q97z
8oWP4bSthrU6xx8B1r8JMuWJpih+3mNeeTnpNEa+rwZ7u0/2nO0+ceHKxX/8
I9SXiR+7+ErdJ/oN/6Gy8O265KZTxNnwPT09c+fMMbwRyYThoGh4NSxpeG3d
OX3D8x6TAQ2vBg2faJuqq80H+h06dNCq6x88sEG75uFFPE7tnOX4FfkCS+7o
f6SrjkYxBv7hv/1r8EoP/OhmRXyAqvjJX59Io/3AvR0vv7JFFGy4MxN5W7XT
QkU5gJ+KRI1/OdAb9yvGy8feKJVrpeqG6JFMcTa8f3TOsOHRr7nZgkPaHYaG
V8OShhe5bjiih2M9zGh4NWj4RDOcx0382eVy+XzWBcqpnfq1+9bk3yb+bF4r
3knkajnajzSatRn7ZcDPCrpooe442UiOppQzQMZe2/B48i0zc8bp/+73lsyI
YedTjnidIsJ7ZDxqZo4Fx58ODZ670C82zs2aCuJveLmAtqHhWUDbjIZXI/6G
l6c/MDR8RcU6a/fTAWh4NWh4BUS0i7u5qHdxT6+vr7fymFb/8InsDYPSlqzc
mMr0J0iKeO6639uxT1uxPNTLnDFT4sNPcfF2VN40fdboghsbOwe1HRv3UOIx
A/i2ngx/3KX9uMQPweHv/kw88Te8P/BGpHlWPCeyNKDh1Yi/4VcWFRkm0sxd
eKvFz+mOQMOrQcMr4PF4RMYfPnxY/kpbfX8fsyhi6FMdOcUVtxbPkcxd/3Kg
9/jHe3YU3y47c2SqRqilYLrfCzI9JqjRiTfyYVy8Iji56cHhjl2/f9wm169s
b+/DFtq3aj8E+ROz8zcDI0sa3vBG5KzR5bl4q0WPhlcjzoYXT+KG32Txsaqq
yvL9dAAaXg0aXpmjn7QlpuGHR49lnWoLcVt7/anj6rmWzfdP1lJc/0D62M/L
qt9ufHfXzt+/te3ft27d/MJzj/90lTZlRfsy+THkYvJDg9rBleEPU9UfACv2
R+5S2r3bxj8Mc+j0ryeNvAb55l2/tfVhm9eObtf/eJ28lumEZEnD+wNvRJrL
R1y5VfvpADS8GnE2/H35+YZ3lOZlZIiIsnw/HYCGV4OGVyZxDS8Pa5WrbTt2
IPTUThHk2iIAoU4qFP5ftSno4daQOe7SLh4mSuXZtfT7E+lhmLr5J7aPXt3b
FkGOLxiXt2PHDwu3Hrvo4FedtmZVw3s8npzsbMPdcFFWlpWHBdkcDa9GPA0v
Qsn8bLKpujoR++kANLwaNLwyiWt4OSYc5fKGduPtaHi95tXtdb9/a5v8WP12
o/hMtB/FVrPvWJhoFP8kp7WPcwbVodM7im8fOc3H9PyV73wqgiSSFtUm0nzz
rt9eP6+ubTX/71z57YycmyAqV9yFU2euaYn+glDCqoYX6urqzK+1XS6XJfvp
ADS8GvE0/OLcXMPo0ILMTPH6NBH76QA0vBo0vDKJavih05vvvJmz0kci0vFe
3XQXebBqKL6vBqN7DD9/QJveE/6a7WLIe/694knDr3cefTXqeUHnD8wKrNKf
iB1D/CxseD8JFBYNr0bMDW94ESo3XoSGQcOrQcMrk6CGl+d4imUmA8IYXbHT
0uM0+xse+LZ88HfUGUiHBk9uenBWiLOyhuTtkOt80vApy9qGZypCGDS8GrE1
vHiluSgry/Crm5OdzWSwMGh4NWh4ZRLR8D17X547Z07avdtsPq86FV18d62c
7l5Q/zdLrrDn1Udnja4n6Yw1GL0d+35R/vTP1m/e/MJzs0aX/bn9oUeqqqoq
Q3tme+22X/5Ym1PBXJqUZW3DCysKCgxD8fMyMniK99PwqsTW8DU1NeZjrDgo
OzwaXg0aXhnrGz5wmKetTxKUyvQT4+MfK9aWcEm7/zcOmAY/4tRO8RJypMZn
5sjzFY4cIzD2HCj6k5Jr9S7/yjh8yrK84Y8cOWIeihcv6yy5cluj4dWIoeFF
IxkWRxUbi6OOi4ZXg4ZXJs6GNx4yOXC4fPIMEU5bj0U8ewFRuywPQRU/57im
rwdebTkt4Iddnx2kXxQozGZ4KmQcPpVZ3vD+wClyDL8GnKfeT8OrEkPDV1VV
mV94NjU1JXQ/HYCGV4OGVyb2hh9dAkWUZHlD+/BnBg7L8xwxhpl41zM+tlUQ
vR37CqfOFN3yjYoG5015kuuamss88obndzhlJaLh29vbzb8DFl6/TdHwakTb
8OLJWnurUdtWFBQkej8dgIZXg4ZXJuaGv+Z+Sc5PkGNWtz/0iBzUtf3q4vbR
+U6p/PkX1P8tqozv2fuyvKB48eXM916vuB+fMkN7dpuUXbgm/7aFd92Vk529
KCsr6EfxCyy+hnH41JeIhhfEtZlf94m2t/AmbIeGVyPahq+oWGcYeRB/bW1l
BYnx0fBq0PDKxNPwhmFM8YeV73yaoP1EUN6OfaVZ06JbpiZw1tcb7y/f3/d1
4nYs6T5+Mk38Qi58ad+lwHc57ksV8QXiZ+jrPbHjnsm8l5TKEtTwn3/+uTYo
oW0ri4osvAnboeHViKrhOztPmd86XF1SomA/HYCGV4OGVyb2uTRX3MNT30cb
3vFNmLJkfEZ7EWcOv+uI15izAud4ivY7lRek4VNWghpeqKysNB/g7G5qtPZW
bISGVyOqhl9VXMyxGzGj4dWg4ZWJ55jWIe958QS3e8+e1lPnHN+EsJnA6VYf
cl+K+oLnD4jnxFguCCUS1/DiaX1eRoZhisJ9+fnW3oqN0PBqRN7wzc3N5kN4
KirWqdlPB6Dh1aDhlUnUeVqBZPtyoPfCYAzr7Vw++umJK5GfPxdqJa7hhU3V
1YaGnzWB19ym4dWIvOHluQz0DS9edfLcHTkaXg0aXhkaHhPX0KDI9RMXOJOB
nSS04T0ez4LMTMM456KsrIl57ksaXo0IG76+vn6W7hwWcquqqlK2nw5Aw6tB
wytDw8P5hgb7OlrdTY3vnxh72oIr/3979x5bxXknfNyKNr1EXfS+NFxKXCBL
lKhL0mDWqLW4bBVSpYujEtdENIrRSiHZJs1rShrnosb/vHJUmtSUwAHS5LVS
ysZWtsQOlNDgLKhLsnWNcQpygs1iKhVTrgZ3qR3n7Am23+ecxx6PZ85lzu03
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
bdl6uNX1H32AN/UbQ//qUAfc9Z0J9qaecWh4BM3wqU13fFGXXpJuT9LzjMOL
Ud1r/KRSvjWmCpv/4fxtKBTSz+A52Pbu1fVlOXlWlZfn7EuwBX3buXOn5VJW
tanXho2Nja7vGxsbm482Gh4BMTz4u+8V2G+VklbDMw4vRjW8ZSJB/rZcNnxs
W7p0qeXMUdtLWza7/vuczRfbvaWlquEt5796bcjLQDY2trQ2Gh4BcX7/khlp
dzvj8G5pbGysT0dV1ZM6de5evjyUpo6OjtNnenKoubnZ/ueebyxb1t3drX6j
nj59OpdfTJzxV1r17fj9e/Eg1en2l5mq6tV/OnMmp6cpxvz2P36rT+murq7c
/iqAmfqNoV+Hqt8hbu9LwL3//vs0PIJk6Mh2c1B9/YmNTYdPnLvY29fXdymB
i1fUf+y70HPirRfWqf5nHN7LjEU83L2m1aBfU1heA9bV1bm9XznANa35E4lE
1Gs9ywi8ej2o2tLtXQsyrmmVEb2mNXacuaY137imFUHTsdWoqdLGP6b70UOt
LzIO72UeWZfGoJ6tbp8/3/KnHPWeAEQCDZ8/6lWe8dKP9STF0PAyWJdGDA2P
gDHG4Qvu2tb3afofH25bMuNL97X25X7PkAtea3hl586d9lnx6yor3d6vbNHw
eaKebfVlIOZzRi9q5PauBRwNL4OGF0PDI2h63hxt+LK6TBp+ePDcxd7IJ4PX
RoZyv2/ImgcbXtH32bSMxre2trq9X1mh4fNEnbr2y3Cqq6tbW7kxa37R8DJo
eDE0PAKnd/eyL6jnxOsX/PhURh+vAr4/x7uEnPFmw7e3f2BveBX2bu9XVmj4
fHjvvffsAb+4pEQlDw2fbzS8DBpeDA2PADrZYCwRmfZwerit7MaZa44QLR7l
zYYfiV3cal/gyNcXt9LwOReJRCzrkaptdmGhXvW0ra3N7R0MOBpeBg0vhoZH
IJ39xXdVQRVOu/+dS2nOp+lvVQ3/2B+IFo/ybMPbL27Vk5z9+6uVhs+5jbW1
9r/XqFd/+jgzDp9vNLwMGl4MDY9AujYy1P7UHdFZ8St+2hkedvxxvSc2roz2
IQ3vVZ5teKW+vt4+TcK/i43Q8Ll1+vRp9ZrO0vDqdV90Me3Rhvf3BRTeR8PL
oOHF0PAImpMND35/3Q/WP/Faxa2ji4TMXHT38uVONn1zqOja4zS8V3m54ZV7
S0vtGe/T9UZo+NxaU1FhPzcaGxtVT442/GEaPr9oeBk0vBgaHgEzdGT73Dlz
9PPjwqIiPeplvx+ifTM/sdLwnuXxhu/q6ppdWGjptJKvfW1gYMDtXUsbDZ9D
qmjsAb+qvFz9JxpeDA0vg4YXQ8MjaIZP/eT66brb7at20/B+5/GGV6qrq+1z
nmtqatzer7TR8LmiXsEtuPNO+6Ws3d3dIzS8IBpeBg0vhoZH8Jx4fol9yCtl
xtPwvuD9hlfBtrCoyHLiqWDr6upye9fSQ8PnStyXdRtra/V/peHF0PAyaHgx
NDyCx7hVq9puvW91TU1NdVI/evpp9fbB76/T8+FpeC/zfsOPJJg4cW9pqdv7
lR4aPifi3jvAPL2KhhdDw8ug4cXQ8AigcGf1DdMLp93/xqU0FoePrSTfq1ez
oeE9yxcNP5LgAkZ/LRdPw2cvEonEvYev+TJnGl4MDS+DhhdDwyOQfve9gtmf
e+FcBh/Z86Z6huUeT57ll4Y/c+bMLfPmWcrNX8vF0/DZe2nLZvtLOcupS8OL
oeFl0PBiaHgE00d1ixev+v2lcNofOHxqw3NPv3X8ch72CTngl4ZXQqHQ7MJC
8xis+rePloun4bPU3d0dd0F4S0DS8GJoeBk0vBgaHpPXyYZ/eWZT0+ETxy/2
G++LzaiBd/mo4RXLPAp99bR6cnN7vxyh4bNUvvJb9uvl6+vrLQ+j4cXQ8DJo
eDE0PCatodYX9Qpvarv1vtWPb91z5NjxTKbfQJC/Gr6jo8OyXLwqutvnz1fP
cW7vWmo0fDZ27txpX/NKLwhvQcOLoeFl0PBiaHj4zrWRoY+vXFC/hNVJe/ZM
z4WeE93d3eaxdIeGw+e7Xq80L9es//G5FevTuhgWkvzV8EpNTY39ksZ1lZVu
71dqNHzG1G8mfTWEueHVe/SC8BY0vBgaXgYNL4aGh//0t5bdONM8OUH/+9nO
wXQ/k3o5ELlw/LWKW42A18Py6w7/JR87juz5ruEHBgYWl5TYL2w0r0ziTTR8
xtZUVNjvMRcKheI+mIYXQ8PLoOHF0PDwn3Db+ikzzM+Pi+5f//L2+kyuYB1z
9NXKWWO3dlVvHz2c9ssByPBdwyvqicze8IuKi40Vwr2Jhs9MY2Oj/cd99/Ll
kUgk7uNpeDE0vAwaXgwND/8xNXzh1EfeOn7ZfCHqhSO7f/VGQ2MC6j81HT5h
n3ajPoNeGV43POPwnuXHhleqqp60z6hR73R7v5Kh4TOg4vD2+fMtP+jZhYUd
HR1JPoSGl0HDy6DhxdDw8J+xhlcBv9uW46c3/YMxx8ayGSPtv+79JM76M/2t
D02dwTi8x/m04QcGBlTaWZaaVNuhQ4fc3rWEaPgM2GfRqK2mpibJh9DwYmh4
GTS8GBoe/jPW8NdtbrP/x+Hw+UudbR82bSm7caal4b/+xMamwycuDg7HvfzV
GIpnHN7LfNrwSnNzs32lQS/PqKHh0xV3Fs3ikpJEs2g0Gl4MDS+DhhdDw8N/
Yg2vWuixPyRNi3Dna9+YYozJlzb+Ub87yQrwg/ufYxze4/zb8IraZ/uljp6d
UUPDp0U9h94+f77959vWFmeowYyGF0PDy6DhxdDw8J+xcfgUDa90bNXPpAV3
bbvi5DOfbGAc3uN83fDqqc2SefoFpjfXqKHh07KmosI+CJ98Fo1Gw4uh4WXQ
8GJoePiPHoefuejVs6lWcR+r/YItxxx95v5WPcLPOLxn+brhR8Zm1FiGalXY
e3BGDQ3vXH19vX0a/OKSEic/VhpeDA0vg4YXQ8PDf2JlXjjt/uaUt3VKt+HD
R3XDMw7vWX5veGVdZaW99x5eu9bt/bKi4R06ffq0vqOTZS2a9vYPnHw4DS+G
hpdBw4uh4eE/eWz4NsbhPS4ADa+e4BYWFVmG4tXW2Njo9q5NQMM7dG9pabpr
0ZjR8GJoeBk0vBgaHv6T/4ZnHN6zAtDwysGDB+zV95XbbvPU72Ea3olQKBT3
jk7OJ0fR8GJoeBk0vBgaHv7DOPwkFoyGH0lw16dV5eVu79c4Gj6ljo6O2YWF
ad3RyY6GF0PDy6DhxdDw8B/G4SexwDT8wMDA4pIS+xBuKBRye9dG0fDJqZ/g
0qVLs/8J0vBiaHgZNLwYGh7+k/9rWhmH96zANLzS3v6BZRRXnXtz58xJaxQ3
f2j45OL+JeXe0tJ0Pw8NL4aGl0HDi6Hh4T/5a/ieN5fMYH14TwtSwysba2vt
Hbh06VIvLDVJwyex/+3f2O+6e8u8eadPn073U9HwYmh4GTS8GBoe/jNW5s92
photj42rq0cW7zqV5PashqHWF2dxn1ZvC1jDRyKRuKuaeOHmrTR8IvqWrPZZ
NPX19Rl8NhpeDA0vg4YXQ8PDf8ZmrV9fXPbU9p0bnnv6hQ0bauJR/0mPq39u
xfpEj9HUf93042fVg2dxn1ZvC1jDK93d3fbVxdWmngPd3TEaPpFV5eU5XOGf
hhdDw8ug4cXQ8PCfsYY3phDb+8cyxzj5w+z3zWQc3rOC1/AjCe7yqcL+zJkz
Lu4VDR/Xxtpa+++QhUVFGU9/ouHF0PAyaHgxNDz8Z2wuTZ42xuG9LJANrzy8
dq054/W/7y0tjUQibu0SDW/X2tpiX0xS/bBaWloy/pw0vBgaXgYNL4aGh//k
v+EZh/esoDb8wMDAouJi+9no/HafOUfDW9hvsKu3jbW12XxaGl4MDS+DhhdD
w8N/GIefxILa8EpbW5t9jHeWexPjaXiLVeXl6gdkmfWUwWKSFjS8GBpeBg0v
hoaH/5ga/qaZix78/jq1PfTPazJ+qzd9QSvj8B4X4IZXQqGQ/RXl7fPnd3d3
y+8MDW+mVwG1rCepfjTZX7NAw4uh4WXQ8GJoePjPWMOvb+ro+3Tk2siQXjcy
47djn+Hqh01bWB/e44Ld8CO2NU/0v+9evlx+YjwNbzh06JAR8Oafzv63f5P9
J6fhxdDwMmh4MTQ8/Cfc9tDUGQWrG1Le4ikD7U/doZ6aaXjPCnzDq6e/BXfe
aRmKn+XGivE0vKZXg7c3fHV1dU4+Pw0vhoaXQcOLoeHhP/2tquFn/rIrH597
cP9zzKXxssA3/Eh08ZPWuIufZHYLoYzR8COxm3B965579PE3N/y9paVObhvn
BA0vhoaXQcOLoeHhP8OnfnL99Mfb8zEMPzJysoFxeC+bDA0/EpsYb18xfu6c
Oe3tH4jtAw2vVFU9aX4Zpbfb58/P4TMmDS+GhpdBw4uh4QH4yCRp+BHbivF6
W1hUJJYfNHxdXZ1lArz+d2vz7lwNwo/Q8IJoeBk0vBgaHoCPTJ6GHxgYWFxS
Yl9qUuzGT5O84Vta4tzOSW0vbdmc2y9Ew4uh4WXQ8GJoeAA+MnkaXunq6rpl
3jx7Rspc3zqZG/7MmTO3z59vP/IP/fOanH8tGl4MDS+DhhdDwwPwkUnV8Ip6
Jox7G7JQKJTvLz1pG35gYODu5cvtE5mWLl2q/lPOvxwNL4aGl0HDi6HhAfjI
ZGt4paamxtKT6n/OLixsbm7O69edtA2/pqLC/rrplnnz8nSnLRpeDA0vg4YX
Q8MD8JFJ2PAjtqrUF1qqquzqyssKq9rkbPjq6mr7CLx6T/5eMdHwYmh4GTS8
GBoegI9MzoYfGBhYunSpPSwXFhXl71f3JGz4urq62YWF9obP68wlGl4MDS+D
hhdDwwPwkcnZ8Ep3d7f9KktVm3cvX56PSdojk6/hDx48oAPe0vDrKivz+nVp
eDE0vAwaXgwND8BHJm3DjyRY7VAF55qKinysNjmpGr6jo+OWefPMd2IVW8mT
hhdDw8ug4cXQ8AB8ZDI3/Ejs27fP9FDbD9Y/kfOvNXka3vw3DnPDLy4puXil
L99fnYYXQ8PLoOHF0PAAfGSSN7zywoYN9oZXW01NTW6/0CRpeJVzJV/7mv14
fuW22/K0EI19B2h4GTS8DBpeDA0PwEdoeEV973EzPreXXk6GhjeWgrf8dWN2
YWFLS4vMPtDwYmh4GTS8GBoegI/Q8EokEilf+S3LCio6ROvr63P1VQLf8Crg
7y0ttcyf0VtjY6PYbtDwYmh4GTS8GBoegI/Q8Nrlv/7Vfi9R/T9z1Z/BbngV
8KvKy+NeXCBwD1wzGl4MDS+DhhdDwwPwERrecO5i78KiIvt65uo96vkz+88f
4IaPRCJrKirsw+/5uKwgJRpeDA0vg4YXQ8MD8BEa3izuovE647O/r2hQG14H
fNwpNPlY3iclGl4MDS+DhhdDwwPwERreoqur6yu33ZaPjA9kw6uAf3jt2rhT
aNT7r40Mye8SDS+GhpdBw4uh4QH4CA1v197+wS3z5sXN+Gwm1QSv4ZNMoYne
J+uTQVf2ioYXQ8PLoOHF0PAAfISGj6u1tUXfZtSe8eqIZfY5A9bwxkWs9oZX
7+93b8doeDE0vAwaXgwND8BHaPhEDh06FDfj1VZXV5fBJwxSw+tlJNUrGvs0
ePV+t0bgNRpeDA0vg4YXQ8MD8BEaPonW5t1zF9xsb3iVrBtra9P9bIFpePXs
ZtzIyTIOv6q8XOW9u7tHw4uh4WXQ8GJoeAA+QsMnl2Q0vqrqyUgk4vxTBaPh
u7u7FxYVWQJeHx8vBPwIDS+IhpdBw4uh4QH4CA2fUktLS9xLXPWVm86rNQAN
rxLiK7fdZg94tXkk4EdoeEE0vAwaXgwND8BHaHgnjhw7rtvVfhfXu5cvP3Pm
jJNP4veGr6+v1xPgjTnwxvbw2rVp/Ukir2h4MTS8DBpeDA0PwEdoeIf0HJK4
o/G3z5/f1taW8jP4uuE3PPe05Q62RsD/YP0TrqwDnwgNL4aGl0HDi6HhAfgI
De+c+q3+jWXL4l7iqvq2vr4++Yf7tOFVPyS6Dav6nzU1NW7voBUNL4aGl0HD
i6HhAfgIDZ8WvSh63NF4PSKdZE64Hxu+o6NjUXGxff0ZvVT+zp073d7BOGh4
MTS8DBpeDA0PwEdo+HRFIpF1lZVxM15Pj+/u7o77gb5r+Lq6Oj1/xt7wt8yb
d/DgAbd3MD4aXgwNL4OGF0PDA74TuXC8tbWltXl3Y2Pj/rd/03byXK7m96rP
c2LjyoLVDcluWzk8eKmzTX3dA++/r94eOXb8Sk6+tjM0fGZCoVDcBSfVO1Xf
xh2g9lHD6/kzxjdoafhFxcVdXV1u72NCNLwYGl4GDS+Ghgd8JNy579F7/s4e
KtctXP/zlv9y9Cn6W9dPmaGqxr7det/quQtunjtnTvGuUwk+uPfoq5VLZkwo
wOg2c9HjW/ecy923mQQNnzH1pGpfc9I4hVQDW8LGLw2vvq/b589P9H3dW1qq
isLtfUyGhhdDw8ug4cXQ8IAvXBsZUv2sAtseKsa//6aqKWVIn335gbir7Rmf
s3Da/YcjI3EG9sOdm+74op6rUDj1EfWS4dzF3gtHdqt36snG6nXE4fwv10fD
Z6O7u3txSYn9Sk+9qRJWh9d4sPcbXqWCOg0s68+Yv6/q6mrvrCGZCA0vhoaX
QcOLoeEB79NTXBJNaTaXWMGPDiWbVxPurL5huj3ezC8ECja0xPvI3jf+8W/1
atvmVldfazh8/s2K6/WHf3nKs/nOeBo+SwMDAw+vXZto1Frf/EjPkPd4w6sz
Qb3osL8INSbANzY2ur2PjtDwYmh4GTS8GBoe8L6h1hdHW2v6PU9t33n8Yv/F
K32XOtveemGd/SK+ZzsHE32ey796PNGi2cYg/BuX4rwE0K8g9CM3dNk+//n9
S2aMvYh45p28Lr5Nw+dEXV2dqlz7mWCsPFlTU7P/7d94s+E7OjruLS2N+yI0
5YW6HkTDi6HhZdDwYmh4wPOiY+CqTApW/LQzPGz9j1cO6dksRskkvCJ1+NTm
gml6pD29zI4luq6jRJ+8/ak7jIJ67A95TD4aPle6urq+sWxZolkoempNVdWT
6qn4476/ur2zo3p6etZVVppfh9ob3hfzZ8xoeDE0vAwaXgwND3hdz5t6hPzX
vZ/Ef0DsMlWjYRJNaBnc/1w0fqbfE3ekPYnTm0uNXlp3+C/x+/+jOqOjUixr
kx0aPodU69bU1CTJeF3y9fX1rlexeoZScW7+q5P9LwiLiov92Aw0vBgaXgYN
L4aGBzzu7C++q/qk7ECyBSQvvDY+wzlB7ffWr7whGtjxp7snNnzqJ9dPN2by
JOz/8FH9OiIaVOm/THCOhs+5tra2RLdzNd6WfO1rO3bsSHJDqPzp7u6uqnrS
PvZu2Vv1GFd2L3s0vBgaXgYNL4aGB7zt6u5lX0h9reiVQ2U3zjQavtk2Dj50
ZPto/8xc9C/PbHp5e33T4RMXB20zc+w+qjMy6foFP0687s3Vpm9/3kis0sY/
pv7MGaHh8yESiWysrbWsemRP+tvnz6+pqZGZaq52SVWAedX3RJt6AdLamuYr
Uy+h4cXQ8DJoeDE0POBl10aGPmzaEtp3NMXslHCbMZ1GNfxu66OvvvvgdZb7
zut/lD0T+v2lcJKvbkx012tX9n2acBeMlXOiU+5XN+Tpxk80fP786U9/euif
16RsZrXdW1paV1eXpxBqb/+gurp6wZ13JhpyN7Zb5s1Tu+H6PJ8s0fBiaHgZ
NLwYGh7wvtSXoJobfuoj1kH7kw3GpIhZtpXh1Xbfhl1xrpaNGh9dj87D2XIs
yS4M7n9ufD7P1Ef+/X/S+x4douHz7eDBA3cvX558QN6YZqNiPhQKdXR0ZPlF
BwYG1HP+j55+emFRkZMXEepFaFXVk8EoMRpeDA0vg4YXQ8MDQdDf+tDU0eno
Bc+8Y/mPpzf9gzHwbs94/T9VdceZxB4+aqwnrx5TtL092T50bB1v+Dh/C8gN
Gl5GY2OjHglPHvPGuXTLvHmrystramrUB6qkT35r1Egk0tPTo57f6+rqVIov
XbrUskRq8q/78Nq1Plo6MiUaXgwNL4OGF0PDAwEwuuZMrH/sSzsOh8+fPdNz
qbNt1549G557Wi8Uab9Pa5zF4cdeGswaW5Qm2U5MbPh3LiWedpMFGl7MwYMH
qqurFxYVpRwVNye9eaKL+ti7ly+/t7RU5b16q7bFJSX6xkz2If2UDa/O8HWV
lV1dXW4fmByj4cXQ8DJoeDE0POB310aG3n3wutFB+LvqEl92Gn1kdFrO8KDq
+W0//M4s2/La1g8PdxpTdFRBpVj43dTw6hM+ejjhrabM2ts/aEvHxtpa/SVU
FjY3N6vOdL6dPtPTB8fUEYs+O+zdW19fr462kyku9vk29j/6JP+QRDddrap6
Ug/vB093d7cOnvf+83239yXg3nv/PR086pi7vS9Bdvr0aX2cf/sfv3V7XwLO
eFlKwwN+FVtAXm9xbqKa2LVzhzetmGLppWV7/2z+zOZBe+fj8KkfPMZyt9C0
RnotMzqSv1VbKBTSscRbR2+NLaauru7B76/7ym23OS95e5+n+7ClS5dWV1c3
NjaO75IXjky+jzZv83qQNdd3Jqhv7ZsX9iqob8c2Gh7wpeFBPQg/K4O136Ou
tvzfEnM1me/QNNT6onl0NMXQekbj8KoJ0xrgzXib0PBsGWxjNtbWriovT+vF
16yJI/MpH7a4pGRdZWXtv+7etWcPPzI2Nja25BsND/iRzuxZscXbT2X0GSwL
SE5YUia27LxRX/kYhzdmSjvcVN3NGptf8Y1ly5xvS5cura+vf/93/8nmcBtN
9n1vHzp0yPKfWlpa1DubXgn9YP0Tdy9fbr4BU8bb7fPn66ti1dd87z/fV1tr
a4t6q76Weuv60cjf9tv/+K1+Ft7/9m9c35lgb+oI60NtP6XZcrj99tB/cErL
bM3NzTQ84FdjN1GNczlqWkzL2ky4RZRpycp0x+Gf7UxjVo9zXNMqRnWOfnb4
y9X410EYS55GIpH29g927NhRXV2tOnxRcbFlHST7pl6Cqfh/eO3ajbW1KtrP
nDkj+J15i3FNa1tbm9v7EnDqVaE+1FzTmld9fX36OKtX327vS8BxTSvgU8b4
+U3T78kq4GNOPL/E6K7x/J64Ls3j7UnXizSvS8P68P5nDKYlavjk+mJXa6q2
V+HU2rz7vffeU43a0dHR09MzMDCQ8731r/F1afx8t1lfYF0aGX2sSyOFhgd8
6uirldG0nrkoretYEzGmvqvPOd7q4U49zq8bvuCVD5N9iolrS/6695Ps98qO
hheTZcPDIVPDs7ZkftHwMmh4MTQ84EfGTVFzEvBRYwU+YS6N5T6tSRte7ZIx
KfrLU5613is2R2h4MTS8DNaHF0PDy6DhxdDwgO8Mtb6oO9bhdaOOmBrefIvV
E88vGW9405I1dno2js74gkcbjcnSuUXDi6HhZdDwYmh4GTS8GBoe8JehI9vT
WvjF6acdW9/mM3f+bML6NicbjLk0SZe+6W369ufNK9jQ8H5Hw8ug4cXQ8DJo
eDE0POAnY0VddiDJ7Vij16JW3zA9rcg3xtuti8wPn9pcMG0045NcPGtawaZw
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
sv4hHo6M5GpQKNhUVTZV/dP4q9276hyNOsreNy0AMjzOMZzwKanvXeW3Cj/L
9XrGUdJ/jU0WLpzSDuTgOMdwSkvrb31o6gxjMvyrZzmw8DbzGRtblCbZgyc2
fJbrLNHw+RXuNF6dWZ4CxidEbWhxey99wFKV6bSl9H3TfC2L4xzDCZ+KnnoR
d9kNy3Er+NGhBFnIKZ1aLo5zDKe0uKEj240Dfv2CH/MXDnhduFOvNqOHUFIs
/G5qePXb49HDWd28jIbPK71SlnnExvL7X70Ky35xocBThzH6y7y47KUtmyuL
pqXVlvL3TfOvbI6z8Rk44ZMban1x1tj6Y09t33n8Yv/FK32XOtveemGdPnTm
Le69KTmlncj+OGuc0vKMdbajv3x4fQTv63lTT2vUvxmcj8OnfnAqNHweDZ/a
XDBNj9JM2mfSnLhwZHfbyXN61ph5iCZ1W7px3zT/yvw4a5zwqfXq28cXrPhp
nKU2rhzSk2GMRIxz0nJKO5L1cdY4pV0w+rPT232tfW7vD5DCUOuL5jGBFEPr
jMP7xOD+56IDOLlYxh/jTOd/yrZ05b5pAZHOcdY44VPreVOP3P6695P4D4hd
Pmkceft8GE5pR7I+zhqntAuuHCq7cabxNxSOPHwgdtIaYwKMwwdCb/3KG/hT
YO45b0uX7psWEGk3PCd8amd/8d1ZsXU2kgzqmlfVs1Yop7Qz2R7nUZzSLjAm
QcV+86SzIhbglnCbMSaQ7jh8kol8TtDweWJMRbhp5qJ/eWbTy9vrmw6fuDjI
jSqy5rwtXbpvWkCk2fCc8A5c3b3sC6kvNTWNQ6q2bDYPo3NKO5L1cY7hlHbF
ieeXjP8VKek624BXTFyX5vH2pH/8NK9Lw/rwHnX13QevM18GpReRiA4NPRPi
VtFZcdaWLt43LSDSa3hO+NTUOflh05bQvqMpJreYhnTMqwdzSjuU5XEewynt
it76v//fxmGfrFdzwG/CneN/IVW/cl/5MNmDJ64tmXC+nzM0fF6cbNA/SuNn
atnu27CLm0dnyGlbunbftIBIq+E54R1LfWmkuS2nPmIaTOaUTkMWxzmGU9oV
5/eP/3Fk6iP2P44AnjTxl3PShle/nI1fLNmvAEzD58PpTf9gDNrYnwL0/1S/
oCbhPNUccNiW7t03LSDSunaYEz6Hxv4sqxeHHH8/p3RuJTrOMZzSrjDnzfjf
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
zxnviXXptvx3qdddO3d404op0UM0Ws5X3/n2Z/X/03XA6001vMA4/Ei4882K
69WPpnDa/VuPXhb4ggAABB4NDxlDrS9aO3zmoge/v+4H65+oidnw3NNLZkwo
/OsWrn9hwwb1nzb9+Fn1sEfv+TvLS4CCLcf0ZzaiNNalk77hTzbol0sFjzaO
Horhwdbm3bv27Nn2w+9MPFYiDR91tf2pO6I/vpmLNnQNCn1NAACCi4aHkI6t
RoEXrPjp7y+FI5HIhAeEj66fMsN4jPrHusN/Mf/3ayNDw+HzXa9XGiPJBa98
GP0PVw49NHWG0aXFuyb1jPihI9tHD84DL1sORGyKUe+mO744d8HN4g0fZWQ8
o/EAAGSJhoeQWMPrweH+uA8It+mGN6Z8WBreoDJ1dC7N6obRTxXu3LVnT9Mr
obeOX57Uk+FPNuijVzj1keb4R/nquw9e58Y4vNbb9O3P60k1b1yaxD8mAACy
RsNDyFjDb/zzp/EfYGp4neiPHo4/6UJVugpR8yWZk7rbDf2txh8yEs9XGZ8Y
70bDj/+Ur1/wYy5xBQAgYzQ8hMQaPtlk9Ynj8CpEE43Dj8SuY40udSKfoN4V
HeLWh+66zW2JH+Z2w8d+dqNXH7OCEAAAmYpEIgNj3N4XBJpueD2DPS5bwyca
h4+KrXLD5auGy7963JhFcziS5IHuN/zI8KmfXD9d/4jLDvADBAAA8LCTDXMX
3JzsYsZ0xuFHRnpfq7h11evH4k/6nmzGruqNDm4neZUU5YGGHxk5+/IDo684
pt2fYN4+AAAA3HdtZCjySdJFBdMah0/8VXr7HEXhx1cu2B+n9rCvr099hmRz
PIajj1EffvFKX7pTQfTnVx+othym6+nNpaMHbeaiV88m36WkDT88qL6vcxd7
1e6pXXX+3X3c91fzg4fD59UxvDiYeLr7+f1LZoztQ2yRfwAAAPhSeuPwVpEL
x5teCVUWTfvsV5NNsFGN+mHTFr3U/Joj/63fqZpTv9NYtfL64rL1TR2Wj71w
ZLdeX924n5TDmxapfXvrhXX6i5rvslT2TOj3l8LOv8f4TMftM3f+LNWFotaG
Hz1W4c6ta5Z/5bbbzGt7rni2Ifkyneq4tTbvVt+XOlzvXIpeqnzt3OHXKm41
Pn/R9vYEH9r7xj/+rXEMGYoHAADwq4zG4c1NPtqlZdb5IdE/AVw4rh5WVf5N
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
    "], {{0, 724}, {1004,
     0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{1004, 724},
  PlotRange->{{0, 1004}, {0, 724}}]], "Output",ExpressionUUID->"1499033e-55ba-\
4d8f-b139-093ac2d5cb3d"],

Cell[TextData[{
 StyleBox["42.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Slope of a line",
  FontWeight->"Bold"],
 "  Consider the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"m", " ", "x"}], "+", "b"}]}], TraditionalForm]],ExpressionUUID->
  "408034a1-7735-43b8-a04e-f1811e4055bc"],
 ", where ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "5adef2cf-4576-4cac-af33-8c035799d3dd"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "843b922a-b0b5-4070-9d68-86c24d24e5da"],
 " are constants. Show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "m"}], TraditionalForm]],ExpressionUUID->
  "91a28ed1-1891-4ab6-aec0-67e62d2a91bc"],
 " for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "59ec8734-7ac8-434d-ba49-20f92c1c56fc"],
 ". Interpret this result."
}], "Problem",ExpressionUUID->"7ddd589e-2b15-434f-8cfd-a11d5887b5bf"],

Cell[TextData[{
 StyleBox["43.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["A derivative formula",
  FontWeight->"Bold"]
}], "Problem",ExpressionUUID->"b36e2674-1753-4099-95f4-d81d989c7dfc"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse the definition of the derivative to determine ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", 
     RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"b", " ", "x"}], "+", "c"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"1f19395c-963f-40e5-90ba-e1fd971c13b1"],
 ", where ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "d357a028-d2ea-4ad4-8a8b-da5a7535d501"],
 ", ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "dc733d2e-5f75-49b8-a106-6d0c6f0e03a6"],
 ", and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "85320677-5d81-45e7-9570-d80c70f21551"],
 " are constants."
}], "SubProblem",ExpressionUUID->"7bc0c11e-2055-47b0-af3c-10e8cef9b935"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"3", "x"}], "+", "10"}]}], TraditionalForm]],ExpressionUUID->
  "579080fc-af4f-49ab-a639-a3abc7e42903"],
 " and use part (a) to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "acbfea0e-ef40-4b8a-9ff9-2af10bf6f1f1"],
 "."
}], "SubProblem",ExpressionUUID->"716afd00-dc2e-42aa-a9ee-dc94ab8bf71d"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUse part (b) to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "1", ")"}]}], TraditionalForm]],ExpressionUUID->
  "bed9a710-7038-4fea-819a-cc918775e496"],
 "."
}], "SubProblem",ExpressionUUID->"e6ddf0e0-88b0-4db2-a18d-6c2e90229f20"],

Cell[TextData[{
 StyleBox["44.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["A derivative formula",
  FontWeight->"Bold"]
}], "Problem",ExpressionUUID->"9b5d6cfa-be67-4fd4-be14-d600f6d65ef0"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse the definition of the derivative to determine ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", 
     RowBox[{"d", "\[VeryThinSpace]", "x"}]], 
    RowBox[{"(", 
     SqrtBox[
      RowBox[{
       RowBox[{"a", " ", "x"}], "+", "b"}]], ")"}]}], TraditionalForm]],
  ExpressionUUID->"80c2f774-08b6-43c5-a3f2-4459db785e16"],
 ", where ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "38f10021-cab9-451e-927e-04bcff75109e"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "e2651289-b06c-49f7-a107-553d2b3f5b6d"],
 " are constants."
}], "SubProblem",ExpressionUUID->"f3f31212-5c1e-4373-8829-47ff0cc580e3"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"5", "x"}], "+", "9"}]]}], TraditionalForm]],ExpressionUUID->
  "eaa4f03a-eb38-4291-a6a2-fbcfc704d0c0"],
 " and use part (a) to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "cf2ab2e1-84b2-4632-a93a-8393c62e8228"],
 "."
}], "SubProblem",ExpressionUUID->"31c8769b-9983-40af-b4ed-9113e6937569"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUse part (b) to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "235b6d85-57a0-44e5-a3d3-6ea94d969169"],
 "."
}], "SubProblem",ExpressionUUID->"d0e964d1-6f41-4d71-a05a-d1ca915a12bd"],

Cell[TextData[{
 StyleBox["45\[Dash]46. Analyzing slopes",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Use the points ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "dcae864e-3e97-49cc-9125-8aa0644a0e6a"],
 ", ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],ExpressionUUID->
  "8f6bb916-83ed-47e9-bdd4-2e265633ddfa"],
 ", ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "7845e1e3-53dc-4552-af62-a5931f27ad19"],
 ", ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "7c8fd529-5002-4345-b311-12fe02018f2d"],
 ", and ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "07c71beb-5bbe-4964-9256-72717cf4832a"],
 " in the following graphs to answer these questions."
}], "ExerciseDirectionsCell",ExpressionUUID->"62efa8e7-68a9-41ef-946f-\
3477722377b2"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tAt which points is the slope of the curve negative?\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tAt which points is the slope of the curve positive?\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUsing ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "82ae13fc-7556-4e64-b496-5085234c8644"],
 "-",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "70aac1e1-8263-4275-a255-47e2b360caee"],
 ", list the slopes in decreasing order."
}], "SubExerciseDirectionsCell",ExpressionUUID->"148b3cae-82e4-4f32-9af8-\
c854d3772fa9"],

Cell[TextData[{
 StyleBox["45.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"be1b683a-033d-411a-9a0c-4b0dd1714ea0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JPKO/uus1f/+/gcR1lQPXH1lz2rxXePtT7E1FYBsli6pyuPxFBYUKFq2B9va
ZNeFzOdyuSrWr1cHq8oHHhDfkl0dACTF9Iz/3N57wy96xi82/OaNt86dP3fm
zJn+l3956Jl9j33tK6FurJymIdklA4BM6ZKqent7FW1ao8HgcDhk14WsYLfb
1YtPiqOuro7eUgCZyfuWYk310JtvKEmFBpCIv9Sd+0B2xQAgU7qkqm1btyqG
/7FOBVLpP/9zRD3BShwtLS2ySwOAJLh4WLk75D9sN5lMm6uq1paVrSsvD09V
eXfVnnrvr7IrBgCZ0iJV2e12dWt2eHhYdl3ILke6uyMuCXj8+HHZpQFAgjme
rZs1qcrUrVpT/fpH546Y7lxy47usqQ4g66VFqvr+008r2rFrSksZeYXUa2pq
ijAeJi/ParXOubMwAKSNwNX+ms+Fr/5X3P27iDd86wc1udFXXAeA7KH/VOXz
+VaVlCjasRaLRXZdyEbi2ciSgAAyn+vVYCdUKFU9efFj9a2mZ/wXv3vjDfrw
ZT7nBJDt9J+qhoeH1Y1YWrCQJeqSgJWVbrdbdnUAkADT5w8qVv+LvGp64Oov
dnxm6ecsEVZcB4Aso/9UZTabFc3Xmupq2UUhq9ntdvU6/ywJCCAzBAKBYA/U
rUlVj76smlR185bX/3xix6ZogwMBIKvoPFW5XK6lRqOi7drb2yu7LmS7s6Oj
oeWFw4/m5mbZpQGANoF3OnLuCr+ymUauTM/wkREAxKLzVKVedW15fj7jrKAH
0ZYEPNrTI7s0ANDg3Z+HX9MMS8oPvju/SBW4/ueIfVsAkMF0nqo2bdyoaLLu
bWiQXRTwicbGRpYEBJBh3n+hPvya9pn75jlt6uZKFzmdv09SeQCgT3pOVaI2
9b6ror0quy7gE9GWBFx5771TU1OyqwOABbg+8o3bZk2qeub8fH78UveWL4if
+vZvriarQADQJT2nqubmZkVjtWL9eroAoCsul+v+igp1sHpowwaGqgJIP97X
Hr998ax1eM59EPcPX39lz+obXfa3PxV5zUAAyFy6TVU+n2/lvfcqWqrt7e2y
6wKU7Hb7isJClgQEkAGmzx8MHyWSd1ftaU98Pxm4GoxU8+/eAoBMoNtUdebM
GXUzlVFV0Kezo6Pq0aosCQgg7dhaK2cN/9v0U1ccP/Xh66faV30peBkUf853
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
5CR7B20A+jQxMRFx03BFnmpubr586ZLsYlMtmDcLCwoi/lrEtZRpVgC0S0aq
Ojs6mpBUlbBNTi8evhGpcnNzui/eGOwXuNpf87lbl1OWAUQastvtRStWqF81
91dUMFMAyCrivfLR3btjv5+KN8HGxsYszFPhJicnN1dVRfsVNTU1sVEFAC2S
kao8Hs+cI7rnPCorKxNTzacZynj7U+dvXi+DXVfhj8UygEhH0Tax2rZ1Kxuy
ANlAvNIPtrXFWOwueJjNZru+B+mljNfrFekp2i9qx/btXDwBLFgyUtVMIhas
SFR3/PVXPpnkVXfug9AXHc/W3eqrutmHlZDHAlLsZH9/tLYBH7oCmW1kZGTO
TW9ra2uZbqnW29sbbfGNmurqJOyVCSArJClVTU1N3b1s2YIj1aqSEnFZS0Ad
3te+9/lF4g5zNv00fEmK6fMHZy2uzjKASFuHuroivoj2NjTILg1AUkxOTu7Y
vn3O8R4idsmuVL8ujI9HWzF+08aNTqdTdoEA0k+SUtWMtjUrErVOxVs/qAnO
qGp72zvrG+/+/MHFYX1VLAOIdBZxhzjxxN7f2iq7NACJ5PV6Y+9vK46iFSuO
dHfTWz2nqakpkT0jXjzF1x0Oh+wCAaSZ5KUqwWw2B0PNvCLVgQMHEvPwV4ZE
dLoRmppUi6Z633r8dpYBRIbw+/3R1g1O5PYEAKQaGxurfOCBGO+ewSX+WK8m
fuJ3ZTKZIv4y76+oIFgBmJekpiqPxyMae/OKVC0tLQkaz3x95Bu33UhMd9Xe
WE1dIXD1hTV/e+uDKZYBRJrzer3R2gYn+/tlVwdAE9H4n3O2cl1dHUtSLIC4
eEZrqFRWVjIUEED8kpqqZm5uEtHe3m7My5szTxXcc09vb2+iHjc0c8o0ciXi
nClba2V4PxrLACLdud3uTRs3Rvz4emxsTHZ1ABZoYGBgZXFxjHfPtWVl4jYs
sLBgfr//8ccei/i7FRdV+v4AxCnZqSpof2tr7DzV3Nyc0K72Sz9ZeUfwznP+
7dlnD3V2dnSEHz87/GPTnUtEpAqmKpYBRGYI7g4c8SXGOmBA2pmamqqrq4s9
5O/AgQMsBq6dyKSiHRLxl7y5qioxy2cByHSpSVW1tbWKSR/3V1Tsqa+3WCxD
Q0PiHSGxH7K9/0L9rdF9N6NTKD2pvx48WAYQmWFycrK4qEjdMBBfZHQQkC7E
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
    "], {{0, 598}, {1138, 0}}, {
    0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{1138, 598},
  PlotRange->{{0, 1138}, {0, 598}}]], "Output",ExpressionUUID->"e2ca8a47-687f-\
490c-9cf2-c373968eb1d5"],

Cell[TextData[{
 StyleBox["46.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"642bc348-7250-4a65-aa63-0af09d3da0a2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5HK5hocnZpzNOLAwUgoLZbPZGJQIAAAAIDVI6UbFjBNNCgMAAAAAxAspDAAA
AACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwAAAAAlEQKAwAAAAAlkcIA
AAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHCAAAAAEBJpDAAAAAAUBIp
DAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwAAAAAlEQKAwAAAAAl
kcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHCAAAAAEBJpDAAAAAA
UBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwAAAAAlEQKAwAA
AAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHCAAAAAEBJpDAA
AAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwAAAAAlEQK
AwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHCAAAAAEBJ
pDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwAAAAA
lEQKAwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHCAAAA
AEBJpDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFASKQwA
AAAAlEQKAwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAAJZHC
AAAAAEBJpDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAAAFAS
KQwAAAAAlEQKAwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMAAAAA
JZHCAAAAAEBJpDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQwAAAA
AFASKQwAAAAAlEQKAwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRECgMA
AAAAJZHCAAAAAEBJpDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABASaQw
AAAAAFASKQwAAAAAlEQKAwAAAAAlkcIAAAAAQEmkMAAAAABQEikMAAAAAJRE
CgMAAAAAJZHCAAAAAEBJpDAAAAAAUBIpDAAAAACURAoDAAAAACWRwgAAAABA
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
KBC4VhYW6vX6+vp6kaREyBoYGHC5XIFJ05sU+kXx9//yj09LLyKtFxb23elP
9Pl8IyMjIqyJXRPJbntNjUhny7Kz57kLS3S6qqqqo0ePipYn6h9DEeJd+k/r
P4fumu4bT0RZo97f1xoeweq707vKCQAAABCzxoaGuBcwFIFlfXm5yFwmk8lm
s0mxZc5D++KyarPf7xfRTLxCW1ubwWCYW0FIaRNvl0iUYte0G8fChhRGU1jD
P379/c5nwiPYT18W/6ziW0o0GgAAAEgVu3bujEvyKsjPFy8lssnw8HB86w3G
JYWNT4uBbre7t7d3/759Wysrv3P77XOLY+K5xzo7NTZYMfBBy81TatRntPTJ
PFyErE8GT9TdH76+27/92x+5CwYAAADESgST7TU1cUlhIn8FXzO+jYxXCpPh
9/uHBgfFLhgMhuV5ebHu+7Ls7B21tSLTJf9qWdOHI4pt4ZOvz3gvbMx94d2u
A9Pz1117Xj7xkY9bYAAAAEBMRG/carU+/thjuqysuKSwrjd+l6ByggqksFAi
SQ0MDLS1tW2uqIj1zblr9er9+/Y5HA4F2jkHIjd9evrXYXU5pK1iV8uLJ957
z3by3/7tj+Kf8mDLnunhK2tx8aMvvjp00UP+AgAAAGLicrmMRuN8JkbNuA0P
DyeowQqnsCARKt1u9/GuLpFVY1qKWmS3qqoq0dqkujU2vbZhlFvGXffvfvHA
yfOXPx/zivyVmqX7AQAAgMTo7+/fUVu7RKeLb/7KnJwUlrjOuVopLJTP5+vt
7a2vr19ZGL5Ulvytsba2tmQo4iH+dT4ZPHH48JFZGX/zWtcbvzvZ/fbpvtN/
On/h0tVr0iskVaIEAAAAkpxIEGazeX15edzDV3BrbGhI7RQWJMKI1WoVcSzK
hcmyMjNF7N21c+fAwIDabZ9d2NoB3PYCAAAAYuV2u9va2mK6fTOHTaSMkZGR
xO1FUqWwIJFte3p6ttfURL8SmV6v7z51imgDAAAApCSHw9HY0CACQjRrgWUv
XRrlnZ0Zt6ampoQmi+RMYUEej+fIkSObNm6M8u0qveeeY52d8S3mDwAAAEBF
w8PD0U/+Wl9ebjKZRI5wOp1zu2W2uaIi0YEiyVNYkHjnRfItyM+P5n1bVVR0
sL1dYwuNAQAAAJhqaHDwhw89FE0EWJadPX2mkvjf/OXLY4pgpaWlbrc70UPs
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
lud8w0vaRHbbXlMjDgIjIyNq7xwATEEKA5BsggU9bDbb/n37NldULNHp5nkZ
PC8398EtW5qamiwWi8PhUHsXAUwY83oHBgZESqqvr//ehg3iN12XlTX/X/Zt
1dXSKGW19w8AIiKFAUh+0pBFkaHWl5fPp3smXVcXf64sLKyqqmpubiaUAUpy
uVzid/lge/uO2tp1ZWXzv8ASmrx++dJLItP5fL7xqUtmAEASIoUB0Ba32y2O
V40NDfNMZJkhg53yly/X6/XiNY91dg4NDlItDYgL6VaX2WxuamqqqqpaWVg4
zxGGoduUyjzj19XeVwCIDSkMgEYFAgGPx9Pb2ytVq55zocXp2xKd7rv33bej
ttZoNHafOjUyMkL1RWBWInOJQHS8q0v8Sv7woYfWFBfHMXNJv5jry8sbGxpE
rHM4HMG7Xdz2AqBFpDAAqcHn8/X39x9sb99eU7OqqCiOfb/MyRVdN23cuGvn
TvH6PT095DKkOfH5Fzmot7fXZDKJWLS1sjLuv3TStrKw0GAw/PKll2w2Gzep
AaQSUhiAlOR0Oi0Wy0+efVakpzjeJpO2rMzM7KVLv3vffY8+8kjL88+bzWYR
ACl/jZQkAtfIyIjVau3o6GhqahKZSHzy4/47FdxCC+lcGB1Ve+8BIFFIYQBS
Xlj56/iOksoMmV9WkJ+/uaJi186dbW1tx7u6BgYGPvroMsOloBUul0v8poj4
88uXXqqvr99aWXl3SUm8CmhE2sRvjfhBInaJXxnuMgNIH6QwACkvbP7ImNfb
399vMpl219WtLy9PRCczNOjlL18uforBYBD9TPFDe3t77XZ76o2tkgrTIfmJ
z574BNpsNpF6jEajSFvbqqtLS0u/c/vtMh/jOP5qlN5zz/aaGvGje3p6uNsF
IG2RwgCkOelOmdls/smzz26trFxRUJC4y/6h3VrxgzZt3Ci6o+LninQmDsID
AwNOp1Oj9wJEzBT7YrVaufenOvERku5qicgvPtgi7+zds0dErXVlZQX5+Yn7
eM+4rSwsFL9WUgHS/v5+kQH5hADAOCkMQNqb3icUUUh0X3/50ku7du5cX16e
k5OjZK91iU531+rVIqA9/thj0u0zi8Vis9nsdrvH41HlLYrGyMiIdFexZO1a
0e0XKUDtFqUs8Yl1u93iDRefCvHZEJ+Qff9/e/cfG/V53wHcmpRN6x+dSsIP
+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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYIT6f8w38/Y=
    "], {{0, 600}, {1154, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{1154, 600},
  PlotRange->{{0, 1154}, {0, 600}}]], "Output",ExpressionUUID->"18ad7f79-3da2-\
4d38-af90-956046e90e46"],

Cell[TextData[{
 StyleBox["47.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Matching functions with derivatives",
  FontWeight->"Bold"],
 "  Match the functions a-d in the first set of figures with the derivative \
functions A-D in the next set of figures."
}], "Problem",ExpressionUUID->"75131f09-6ba1-4bd1-bee1-2848f07f87d8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XFwU/ed7322T7q7tzPNPsPTJmlcQQyxMwYMMXXg8RD3ElNDn+uyu27X
THbMDL600K4zKTEtIbnqM+kfam9a07Sp3dt4yRpwasA3scHZ1lBl3J37uMat
E8KNjUmqmxmundgNKmoT0YhErOzna//gcHyOJMvWkY509H7NGYfYsvTVsaTf
7/c5v/M7+Tv3fHH3RxYtWvSNv5YvX/zP+x/Yu/c/P/6l/1P+p+br3/inr359
11f+n69/c9dXd+39v3f+H/LNF25ZtOj4Rxctmv73FAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ePixYt2lwAAAJApRsdGJycn7a4C
AABYxu12210CAABApjhy5IjP57O7CgAAYI2LFy+uX7fO7ioAAAAyxZ6HHz52
7JjdVQAAAGt0dXbe+alP+f1+uwsBAADICOXl5Y/u28epLgAApM61qcifAoG3
x966EusWk1flp+OXLsW8QcLcbvedn/rU6VOnkr4nAACAlEhn1ygQCEjXqOKB
B5K+JwAAcFP46vu/H73Q96uXOhsf/sY/bL7/9k+58vLy7rzzM8ffMN948sOJ
9r/7mLTIcoNFld8fCE8lczxic2Wl3I/H40mifAAAACvZ2DXq7e1VdxUMBpN4
BgAA4CZpmsd+WKhaWPVV2xZV/GTCdOOpoWbtZvKPRU+eWfBDh0KhJS6X3MkX
q6uTfBYAAACWsLFrJA40NsqdyNbX15fM/QAAAL3JDyf+FAiEr77/7rkXqz9x
h9a4S5v76PCfjbeeOH3/7Z9SLXLUDkDiBgcH1aMsy8+PRCLJPQkAAABr2NU1
EttqatRjHWhsTOJuAADALJEZk5OT16Yi0nZr7fv0MYv/8j/Mt/9f7ftV4z59
gwePBhb6uM1NTdr9DA8NJfMUAAAArGJX10gesbCgQOUn22trk3kKAAAgqskZ
Y09XaY37pxfvHghPRZmMMXF65+Lbpw9q/Ph/Lvjhdu7cqXUSDh8+nFTpAAAA
Vktz18jn82ldo9XFxVzSBQCAVLkxXVM18fVn3zX8XFphae77di9y5eXt7v/D
gh/n3jVrtMZ9z8MPJ1c0AABAaqSra3T06FHtfBnZLl68mFTZAAAgmpkjC5e7
/vY/3DxN9ckz5oMakx9ONBcvzrtty1H/Ao9EvD32lhZ6yLahrCzp2gEAACyW
tq6R2NvQoF9GtaOjI7naAQBATJeP7tYSCdetjw/PviLb9L9nDnwsqnh2wSt3
dXd363MPadwDgQWfDgsAAJBCaegaiYqNG/WXhnG73ZzqAgBAKky3sKOd+mmW
LeOR6XW9dC61fll+ap7nmThpyl15eapZV1tvb2/StQMAAFgsPV2jYDCo7xfJ
trmyMunaAQBAFNON++SbTy/6pNbsfub4G7Nu8cErj9x6e5KXadtadXOJMLUd
aGzkoAYAAMg06eka9fX1GXKPJS5XKBRKrnYAABDTb79RfH0yZ17eon2nr01F
tFBi4qf/KN9/8Dd/jLKYeWLC4bA05fqWXbZtNTXWlQ8AAGCllHaNxIHGRkPu
IdvAwIBF5QMAgFmkHQ+delw7D+Uv1zw1HL7xsysDOxffPus783f27Flzy15Y
UJBMbwEAACBFUt01Ettraw1dI9mam5qSrh0AAMQwcbr6E3eoNvfTn6z5+aUP
1HmsFw78ffJHNFpaWswtu2w+n49TXQAAQCZKZddIrFqxwtw12rlzp0XVAwAA
s8utG2/VlvB6dPjPaq1yafH/cs1TvuTueveuXVFzj7a2NmtqBwAAsFgKu0Y+
ny9q12h1cTGHhAAASAXVwl74zv3aFeRLn39TvvnbbxSrht6whvm8BIPBZfn5
URv36upq654EAACANVLaNZqKsbiH2vr6+ix6EgAAwCh06nF1REO+Lvrx/4z8
rmP6Hw8e9f97Unfb2toatVnXTnWxqHwAAAArpahrFIlE1paUxOoa7d61y6Ly
AQDALJOTk9Kaa5ea/YvP7Nr7hSXyjx++Fkjynj+3aVOc3MPj8bC6KQAAyDSp
6xp5vd44XaMlLlcgkOxDAACA6D545Vsfu03f8i568kySd/nqq6/GadmlI7Gy
qCgcTm49dAAAgFRIQddoauZKLrFOcuGqLgAApNh7v6z9iNbmfnrx7oHwVJKL
a+1taIjfssvW3d1t1RMAAACwjvVdo/HxcVdeXvyjQuXl5axuCgBAKkgLO/Z0
lbpUvWy7+/+QZJsbDAbvXr58ztxjW02NVU8BAADAKpZ3jabirmiq3/rP9Fvy
FAAAgIG2fteifaevTUWSbNzb2trmbNbVdvHiRYueAQAAgGWs7RpFIpHS0tJE
ukb19fVWPQUAAKCRpvzy0d3Ssn968e5fXrHgDjdXViZyREOtbmrB4wEAAFjH
8q5Rb29vgoeE7lq6lNVNAQCw3uSbzcWL1TTO5O9seGgowZZdttXFxaxuCgAA
MoulXSNRV1eXeO+opaXFkgcFAACaC9+5X1r2v/7RoCVLaT26b1/iLbtsPT09
LOEFAAAyh7VdI7/fr5YKSbBrVF5envyDAgAATWTge9Pnrm77ycTMyadJ3lso
FCosKJhX7rG9tjb5xwU07e3tXZ2dwWCQPA0AsADWdo1Ec1OTWh818d7R4KA1
kQsAAIj8ruP+2z+lzl21pGWXIWfU5ruwoKC0tPTu5csN31fdgNGx0eQfGpia
OSN7bUmJvKhceXnbamqePXiQVxcAIHGWd43kTtbdd1/UdTykwVq1YkXUPGTP
ww8n/9AAAOSgcDisX5A88s7AI7fennfHfU++HrLqIbZWVRka7tLS0sOHD2v/
bm5qWpafb7jN97/7JAc1YIlXX33V3HtkgTgAQFRp6Br19fWZk409Dz+8e9cu
9e8DjY3SfTLcRjpLTFwEAGB+Jt985sFV0+eW3nHf3hOvSTMqLfu3PnabNKxW
LdglRkZG9E32EpfL4/GEQqGLFy+q76y77z556PHx8bq6On37fu+aNaxuCkt8
/7tPGrqO0pnkRCoAgFFaukZyt7t37dI3TBUbNw4MDMiP9jz8sPrOsWPH5GYd
HR2ri4v17Vdrayu5BwAAiYsMfE9bUEv+saq67v7bp5vUB3/zx2tTlg0J3W63
1lhvq6nx+Xzq+/rcQ7txb2/vhrIy7fanT52yqgzksvLycn33Uv59oLHR7qIA
ABknPV0jv9+/xOVSTdLdy5e3tLRoB3q03OPo0aPqO8Fg8LH9+7VWrOKBB6wq
AwCAXKBW6NKvqSX/qD0xMjVzJMKSh9BWNL13zZquzk79j6LmHlMzk0tlTKpO
e9leW2tJGchl2itNn3v4fD6OlwEADNLQNZqaWdFU3fnuXbsmJib0PzLnHsrw
0JB21vDZs2etqgQAAOe7MnO+6o3G/ZYtX//5pQ+sfYSOjg5XXp7b7Q4Gg4Yf
xco9lNGx0e21tfK7rD+JJKkF8/W5x4ayMkIPAEAUqe8aSQMkzZBsfX195sYo
Vu6hfvFnzz23asWKvQ0N1pYEAICDSQM6+eFE369eevHkyd++8U4kErF8MNja
2joyMhL1R/FzD8Xr9b40+G8WzixFDjIvq+vxeMg9AABmaega+f3+p3/05LXp
K7pE6d7EyT2UQCDAqZoAAMyLatBtWeAxkdwjEoneKwASNDExYb6Sy+DgoN11
AQAyVKq7RpM3RP3pnLkHAADIIonkHkCSWltbDSe5rC4uJkwDAGQmcg8AAJyE
3ANpsK2mxjDZ49F9++wuCgCA6Mg9AABwEnIPpFowGNQuFKhtfb96KQcX95Cn
LHsjEAiMX7r09thbExMTfOWrw7+Ov+33++U1HwqFmOKFLELuAQCAk5B7INW6
OjsNoUdhQUGspeScR4Z7Pp+vr69P9sPTzz1/vKmZr3zN2a8vnjzZf6Zf2p1w
OJyDySeyCLkHAABOQu6BVNu9a5dhcY/6+nrHD3kikYjP5+vp6fmXQ61qU+O+
X7T9oOWZI4cOH2Jjy7VNe/E/e/CgvBf6fvXSxf99MUfyT2Qdcg8AAJyE3AMp
FQqFluXnG+Z7dHd3211XCoXD4eGhoePHj2qJh2xa4iHff/HkyRd//q89QG6Q
97ua7KSf+6HSD/n6/AvP+3w+0g9kGnIPAACchNwDKSVDHsNkj2X5+aFQyKnz
PUbHRjs6OmQ0pw89ZOh37ty58UuXwuEw4zvkIHm/X5uKTE1efXvsreHzL794
8qT5/Bd5g9hdJnATuQcAAE5C7oGUqq+vN+QedXV1dheVEuFw+KXBf1OHsFtb
Z05sOX50eGgoeOV6yOPUqAdIhLz+I5GI9nXyw4nh8y+3tbVpEz/kXTM4OEgw
iAxB7gEAgJOQeyB1QqFQYUGB4SSXrs5O5yUAgUDg+Reel4GbGsQdP350ZGRE
je/sLg3IOPLWUCsbh8Phc+fOtbW1adFHd3e3fG7YXSBA7gEAgKOQeyB1vF6v
YbLHEpcrGAzaXZfFxi9dam9vV6e0yNitr6+PgRuQuOCVkHxWqOhD3kQdHR3y
KUFmCHuRewAA4CTkHkgdrd+obdtra+0uymITExNtbW3qxBb5h7yhmKgPJG7y
huGhIW1hnPb2dqIP2IvcAwAAJyH3QIqEw+GVRUWG3OPYsWN212WlQCDws+ee
U4M1eWp+v9/uioAsNjo22tbWpqKPjo4OBy+AjMxH7gEAgJOQeyBF+n71kvkk
l0AgYHddlgmHw8ePH9UW9Lh85QNmegBJGr90SYs+uru7eU/BLuQeAAA4CbkH
UmFycnJvQ4Mh99hWU2N3XZaRJ+j1etVMj58995z/D39kgAZYYnRs9PDhwyr6
GBgYsLsc5ChyDwAAnITcA6kQiURWFhUZcg8Zy9hdl2V8Pp8al8l2/vL7U5NX
7a4IcI6RkRHt/TUxMWF3OchF5B4AADgJuQdSobe3N+/OO/W5h/zbMctfhMNh
bVmPgYGBa1PM9AAs5vV6Ve7R1dnJZCqkH7kHAABOQu6BVNjb0GBY0bS6utru
oiwzODioLb14bXpuC4MywGKhUKitrU2liyMjI3aXg5xD7gEAgJOQe8ByUa/k
cuTIEbvrsoYajqncQ94+XG8CSAV1ZVstYCRdRJqRewAA4CTkHrBcb2+vIfRw
5eU55iSX4fMvtzxz5NDhQ12dnXbXAjhZOBxub29XUz7IGJFm5B4AADgJuQcs
Zz7JxTFXcpGRV0dHhwzEWlunB2IcgwZS6ty5c/8y/W5rPX3qlN21ILeQewAA
4CTkHrBW1JNc2tra7K7LGn6/X4Zg6tq18kztLgdwuOCVkJrvIVsoFLK7HOQQ
cg8AAJyE3APWinqSSyAQsLsuawwODqpRWP+ZfmbdAyk1OaOnp0flHj6fz+6K
kEPIPQAAcBJyD1jrkT17nHqSi5AhmJrvIW8cu2sBcoK2umnnmde4ZjTShtwD
AAAnIfeAhcLhcGFBgVNPcolEIky5t9HYyca9X1hSWlq6bX/LcHiK+TbZaPLD
ifO/7nrmwVWfOf5GgiGG3++Xd9zxpuYXT55kRR2kDbkHAABOQu4BC/X09BhC
jyUul2NOcgkGg2qyx/Hjc3SDJ376j3l33Ff6mc2lSbv/9k/t7v8Dw72p0U5X
Xp525tSifadl1Ez0kS3+FAhcONH89Ne3yp8v78475etf/2gwwVd1OBx++rnn
Dx0+JBtvBKQNuQcAAE5C7gEL7d61y5B7bK+tdczgdHRsVE326OnpiX/Ld8+9
+M/f/Nr9t3/KsDcWtiU+QnQqeQmFTj0u42W1yT5ZVPHshN1VISEfvPLIrber
v5r2F5Rt0Y//Z4J3IC/+48ePqreeY0JUZD5yDwAAnITcA1YJhULL8vMNY/aO
jg6767KMz+dLZJ0BGabJT2du8N7/at9vzjF2PNX14smTL/78X7t1Tp865fV6
5fvHm5r3fmGJduN5jRAdLDLwvdm5x0/IPbLC5IcT06/2kyefeXCVPvqY16ta
3izqrTd+6ZJjclRkOHIPAACchNwDVunq7DQM8Jfl5weDQbvrsszIyIhaZ2Bg
YCCRwZfc5tpUpG/3IjVUV9unF+/ueT/KLdUdqsBEtsg7A09t+Rv1K+QesnNk
h+xcfLuWe5Q+/2aOz4HJFtN/uxlTV1//1sdu06KPeb2qT586dejwodbW1tGx
0dSVCuiRewAA4CTkHrDK9tpa/QBfti/v3Gl3UVYaHhqSwdfTzz0/MDCQ4K/I
oO/3hx7Udsv0cK/62Sszc0Li/9b0Da5Mj/RzJPeQvbSoZThOmjT9o6uvq/kw
Jy4EuK5HFnrv1N/+lfbhMK9XtdfrVUsKcx0lpA25BwAATkLuAUsEAoElLpdh
vkd3d7fddVlGxt3DQ0PPHjz4i7YfDJ9/OfFx98RP/1G/TxZVPJv4CgUXvnO/
Ky/P8et7RN4ZqP7EHfGfpsqCVDDi7L3hXAvPPXp7e7l+NNKM3AMAACch94Al
2tvbDaHH3cuXO+xir8NDQy3PHJnXfI+p5HIPtaiFw3OPyavPPLhqaWHhoifP
2F0KUiqp3EOt70HugbQh9wAAwEnIPWCJbTU1hpNc6uvr7S7KYsNDQ79o+0HL
M0cGBwcT/61kco+pyTcdf1qHtvRrLpzOk9vIPZBNyD0AAHAScg8kb2JiwnzV
Eq/Xa3ddFhs+/3LLM0cOHT6Untxj8oZrUxGnXsPijyceWdhAGFmI3APZhNwD
AAAnIfdA8pqbmgyTPVatWBEOh+2uy0pqfQ91UYlU5x6TH04Mn395OJyOhSyu
TUX+FAgYopXw1fcDgYBf/PtC7lDql/sUwSvxTnTShx7Te6ZleF41z7ce9XXO
RWWjPpYl+0f91py7ZcG0Zyp1qWdqp8mrUoNsl698cONb73X97X8g90C2IPcA
AMBJyD2QvM2VlYbc47H9++0uynpqXdNUz/eYXsBz4HuuvLzd/X+4PkKfvPrK
M49s29/S2fjwY41Pfv+7T3o8Hvl37YkRGUrHuY2Q75y//L55CCxj5Hd9Z+TG
/1TyybzbtvS8fz0NePfci/Kdu5cvV9VKGTue6vIl9kzld//5m1+7//brV665
/nxLq+UehsNTs0/Vee/Cgb83TBC6ZcvXpXJV9refeOLHPefNZ/dcuzR0vKlZ
Kvyr1T+ZiF/N5FWp5+mvb11aWKieiFaV7JOu8Tdl18X5bQv3z/RdnXtx7xeW
qEquX8VV7ZbzL8se++Fr8zjzKZrLF040f+MfNmvPUXuIvSde8/97WpeBVU9W
drvaOWqHq0rkL/LL2o+QeyBbkHsAAOAk5B5Iks/nU+Ms/Rh2XslAtkjbfI/L
P/1PcstHh/+sBv7yVQa2MnA2BAUfvfe72thfbvPKM488smePih20Mf5dS5c+
+Js/3rzryatqOF/9iTvUMFm2T3+yRsb1U5NvPvPgKvmmfvh8vebK7w+Ep+Kc
axN5Z+CpLX+jjXNv2fL12q88JJXI/8o3pQb5Zu2JES1+GfthoT4bMfxb/e+i
J89oA/Y/BQKGPbCoOt5uVOmE9gRXVdd9+4knDDtQntTPL31gzAQs3z+Tb7b/
3ce0COjp555/8ef/+vTXt6p9orb6s+/O8YKI7f3f/FSVKpvUueOprl+0/UD/
TD+9ePdR/2R6og/1MtD+gvIy+Mbeh+QPob6ztLBQJT/kHsgK5B4AADgJuQeS
5PF4DONxeS05cj0Kq+Z7zDVR4c0nP3qb3HJ3/x+mbqzyoX4SGfiedj8yztUi
lEmdqanLHXu26MMEbVgtP9UCB21TQ+OXBv/tWx+7zTBhQJ9FLNp3OtYyI5Hf
dWhzPBZt+8n5y+9PTV6duaVxUod2YZrJDyfkEV/7xVEtpZHtEw/9uPPMa+d/
3SVf+3710m/feEduLEPpZx5cZXiBxY+P1GwZbeitwg2hpiI8cuvt+vvZe+I1
bVaJ5ftHvtO3e5G62fL/eko/LeT93/w0+dxDnSikKpH7V6fwqAVh9OcQSf09
8ea2WGTidPUn7tAe8cSFgNobarfvXHy78S9I7oHMRu4BAICTkHsgGTK0Wb9u
nWFE4/F47K4rJayZ7/Hg0TgLL1y7NCTDfDUZQJvvocwkBpeP/8ePa0PdqGP/
6cHma836R9TnHu/6zvz2jXfUdAj1KHl33KcG5iol6Bp/c2bpjMuvPPOINn9j
+uFu23LUHy3L0o12//pHg1KwVvN0wVcGtJ+qu3ry9emlLa5NXQ8iZp34MLO+
x/RpPjPZyPWvv+uo/cpDLc8cMaQfsXIPuf3N/bPtJz7zah4fvKJiJa2k0uff
vJ7GWLp/pv8Qw8+qSv5yzVMD4Vk/UmczJZV7TJzWUiM1I+VmPmbatx//2eup
vSTQlYFvfez6Xv2Lz+zSP1lVTOSdAUPiRO6BDEfuAQCAk5B7IBmDg4OG0ENG
eT5fggtCZBlL5nvIJgP5xxqffGz/freO/K86PUE7vULN95ht9hUxYs15GO3U
z6MwDKvV6FidSjOrqhMjMqJXEwbUzS61fll/A/PYefLDiebixWr4ryY8mAvW
L2UpN5tdzOU5L/ChTWDQMp94z/2DV7TR96c/WRM9qJmaldWoZKNl/OZUDQv3
z4Xv3K9+5Lr1ccNbQsU7ajbIAnIP+fVZMzo+WfPL2Wma3PnvDz14c4WNirmW
Q0nKe7+s/cj1COi2LbIzo94oMvC9WTNkyD2Q2cg9AABwEnIPJENG64bh4ebK
SruLShVL5ntosYYhLLo5c+DGZpjvMSOx3EM3/I81nSB06nH9ILT6hTeMmYYM
zN+ZNVvDMFCVG8jI+nrNM9FB1FouH92tf6azFhuZ34VN537uF75z/82R/n/5
H3HuSx8aTD+1r3UaJuEkv3/kqXdt+Li6k4/e+91h09WN1JSPheUeYuzpKn3u
oa28etNrzdrrKv5yKEmSfZXQbr/6uv5lSe6BDEfuAWuNjo329PQ0NzW53e66
urrPb9lSXl6+ft26e9esWVlUJP/YVFGxtapKfiQ3kJ6GfO7Jr9hdNQA4B7kH
FiwcDktjbRjCS5tud12pkvx8DxUR1H7lIbXV7dhRXV29raZGvn7pS5/TVslQ
Q8iFz/f44JVHbr1dG7ZHH1brzoWJuv6DWipk1hQLw0BVN4yNdfLO9J1cfV07
r0QeaGDWxXnnlXtM6VcLifLcE0h7blZ1ZdZpF4YpH9bsH13uIV+1tU1mufr6
zsW3P/ibPy7gJBT9Yi/RV/AYuvkUXLc+bg5eLHJZW7j1zpmTs2Kv7TO/P7ce
uQfSj9wDSZLP/LNnzx5obNxeW6t1lgyLeBuOgJi/uWrFirq6OulZSccjnRfn
AgDnIffAgvX09Jhb7YmJVE6ot5WF63vo18G4aeZiIq0bb1WXvUhmvod+UB89
AdANis1nSUR/ON1AVb88hfzR44zcVT4wMDAwfP7ly1cM10+Zx0BYm14S67nr
Zx3EfkY37+233yjWv26NZ6kkt38U7TwXVdUnHvqx/9+n9Muoyr/P/7preiXY
eVLLxr7yzCOf37JlVXXdiQsB8/5//zc/VTtEtugTQqwQ+V2HNoXJdevjA/HS
FXIPZBNyDyxMOByW3pG8flYWFZkXwU5mW7Vixd6GBq/XGwqF7H6WAJB9yD2w
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
iT62VlWNjo3aWCcA2I7cA/Py7MGDhsZ0WX5+jpxAurD5HmNPVxlyj2SOvKsA
4ebg8ckzsw+aX37lmVknUEzfJtr5I+//5qc3B8Uxj9Ff1scsix48aogaLh/d
re8Kqn9/4qEfn7gQiMyQezj/665/KvmkeixTvBAzxpEnNXay8cc953UpyqyV
S2XUbJg2Mz0H5cOJrg0f1+/tWBeaifyuQ5sZsuhrneY/SPL7R0tFYq80cvPp
m353Dvq5HFKnvKhmr6/y3oUTzfqXgf4pXJuKWBuA6F+Talv+X0+Zd+nvDz04
642weHfibwRyD6QfuUeO8/v9hou2GD7oHt23L/llSy0kH+zyWl21YoU59FD1
rywqcvx19wAgDnIPzIv5gEJ9fb3dRaXJAuZ7GK57cn2PzXmJ1Vj3NjkpA17D
/v/EQz/uPPPa8PmXOxsfVst6rKquu//2WbfZ8VSX3OZPgZvXOb380/+kv8GT
r0e5vt7UlQH9OiFRTy0x5Az6XpZWgzz9O2fOcDEO/yevqkVCtF+55Zsv+KTz
9s5Ax54tauaA7tEuH/+PN5fQjDqBYfp/Z69tohZcNQ7zZ66EovqBsebMWLF/
3tOu8Vr9whtRfn3itLaLPnM82g3ieK1Z35tVO+THPefVy0C/bok+i/j96IWn
tvzNnOcTzcv0H/TGlWVm/bkrv//zSx+Ew2G1vqv6gxo64fLXqf3KQ9v2t8x5
5he5B9KP3COXSXO/tqQk1rVaNpSVZezVUgKBgPTKorbLsi1xuaQPQ/QBIDeR
eyBxIyMj5kMefX19dteVJvOa76GGezLM1A9O1b9liNo1/ublKx/MtwB1IRUZ
/kftzMgmd/6Xa546f/n9Zx5cpR9jqtGolrdEftehHxqrC4KYjlq9Zz6Ov/fE
a4YlOqeuvt5cvDjOic/qucugO+rYVr/IhuFOFlX8RL/mxtjJRsPd3vLNF2Qf
mqcMRN4Z0J9PkXfHfVK2/9+vhyTvnntROy/DdevjMjY3V2XJ/tGfBSM7f8dT
Xfo9IEWq18adcU4Micf4MtD+yipk++i93z3/6y4tllFZhGxLCwuNV66xxMRp
tceiHhiNM0tcttoTI3+a65gpuQfSj9wjZz3/wvPL8vMNH1/aJ9i3n3giFIqW
hGcSr9drvvSMtrndbscvRA8AZuQeSJy0lYbBi7xscufAQeLzPbSVKAyXK9Vv
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
uYe05oODgzKELC8vnzPo0Db5UO3r66MnkFLkHvGNjo0uy89X51jRxAMLQ+6B
FMnY3ENaCq/Xu7myMn5Xp2LjRmmFp5jLmnnIPeJzu93y2i665x75h8/nYxfl
IHIPpEiW5h5+v7+rs7O+vl7eEfEjDsOxD/kV6QnwKZoG5B5zam5q0jquqokf
GRmxuyggm5B7IEUyMPcIBALSahgmtUbt6ng8HrL0jEXuEYfskD8FAvq+/daq
qo6ODq5DlFPIPZAiWZR7+P3+7u5uGRtqUzsS39aWlBxobJT3kd1PIoeQe8Qn
jbv0S82nZUkTf+zYMZp4IBHkHkiRzMk9pKXo6+uTetQUwTmns3L6ZIYj95hT
R0eH4YVdWFAg/X81hQmOR+6BFMnk3EOGfoODg9KbleZehofzzTrUKHJ7ba20
LNJtsPvZ5Bxyj0RIbzbqkTtp4h/bv58mHoiP3AMpYnvuoeKOvQ0NCc5rXb9u
nfR2bCkV80LukYjq6uqor/OtVVU/e+45GSCw6xyM3AMpkjm5h3yIjYyMSCtw
oLGxvr5+zpmc8TcZazc3Nfn9fj4Y7ULukQh5fX7tq1+N80r+/JYtbW1tNPFA
VOQeSBFbcg/5nJemU3ov22trtevSzrlqmQwNWlpamCWYLcg9EuHz+Za4XOaj
mWqTd4d8+HPeulOReyBF0p97SNMsn2b9Z/o7Ojqkcd/b0LCtpkYe3ZWXl8iS
pPG38vLyA42N2iRPPg9tRO6RIPl4LywoiP/CliZe3imyS1mMF9Aj90CKpCf3
CIfD0mOR7pDH4/lidfXKoiI1uEuwz7O2pOTZgwdJPLILuUciZM/Im8L8mtfe
HWrIsLmysq2tLRgM2l0vrETugRRJJveQ9lpaW/m0CQQCo2Oj0nafO3eu/0y/
1+vt7u6WXuiBxkb51JJ+qXzIb62qKi8vN4zvtORWv80363Dl5cmdNzc1cU5r
RiH3SFxLS0siL3V5d2woK5Pe+OHDh8lAgClyD8yHdFqkOy3dnldffVX6Kr29
vaq7onR1dqp/yGj09KlT22pq1EtLujHStxkZGZE+hnR15B6kzyM9H+n/zPkh
LI8otxwfH5ffHRgYkLuVMZp0jR7Zs6e6unptSYl+EDevnk/FAw8cOXKExUuz
EblHguQtpn+PxNmW5efLG1beqvKOlren3YUjWeQeuUw+FeVdrFrqvr4+aZTb
29tloKRSBbfbLR2/+vr63bt21e3Ysb22Vt770p5uraqSbXNl5aaKCtmkiSyP
RjudZInLte6++8xbaWmpfOzIdu+aNSuLilatWFFYUHDX0qUJDtO0KCPWB9eC
cw+pbW9Dg+wNPuIyE7lH4qTvKm/S+SZ+0tB/sbpaPgSkL+33++1+EoANyD1g
oGZQyPBHXhLffuIJ6RpJX6hs/Xr5wIzaJ0lylqn8unSf5M7vXr5cekdqk/9N
sJs0301dlm5wcJDxcvYi90ic7KLE36HaG1yGNvI2kU8A6Yhm1Pp+Ukw3EnDk
yBH1N5WPU7trQUocPXq0ualJhjB7Hn5YPhKrq6srHnhgbUmJ/MWjngASJ09I
PEOYb+CwgO5BIvefeBmri4tloCcdXfk0s/svhjnI61n91UpLS+2uJQscaGxM
svu97r77pKF/9uDBV199NaMaeizAyMiI3S/J7KAdlFcxOHJQR0eHfH6qfEN6
TdJlSrJPkoGbVFteXi4v8vb2drv3N5IlL1T1CnS73XbXkgU+t2nTAgYd2neW
5ed/6Uufk+FVT0+P7Vd1DAaDtn+YsLFlyGZ+t2rJxnzb6HlFGanuAyRy/1na
FWFjs3BbtWKFVXclDb30rKShlz6D7Q09FkD+dnwYsrElss23/5ClnY2sK5gt
6qY/ZMnfNMHNvMBp/D0cayR158ySOF/76ldbWloGBwfTf5oYuQcbm36L1RYv
oI3OqD7AvCaf2P5XYGOzZUvwPNZ53eHuXbuam5pGx0bT2bIjSbHWc2NjY4u6
zbf/QGeDjS2LtlUrVlj4hl3icm2tqnK73adPnUrz5NhQKPTlnTvZ5ty219aq
P9ZdS5faXgxbItu2mprNlZWlpaXalcgyeUtzH0BexkX33LO6uLhs/fqNn/2s
fP58sbpaXuS2/9XYLNzkLaBeVIUFBbYXk/mbvP7V6efJvLOY5uEYHR0dtr8m
s2Jbv26devF/btMm24thS9EmrUl5ebl8vmVON8bCTUZhK4uKpDsknUZ5pnU7
dti+w9lSut27Zo3600t7bXsxmb/Jez/5d5kMx3bv2tXS0nL27FlWA858rGua
FcbHx48ePVpfX699pjl+k27GXUuXysBWnrL0Pys2bpSP8emGu65ub0ODjL8O
NDbK50xXZ2dfX9/w0JDsIkO4yoePU8mfW/VCWdc0EfJ+WVi/Xd53av0ubVkP
3lPIHaxr6mChUOjIkSPSqbCw0yLdFRkB6Q+4yFY3Y+fOndP/mVkfXjatI7fu
vvvUyvDyj7UlJatWrLh7+fLEJ95LH0l+RX5XxRrycf3tJ55obmrq6emRVpLr
b+Yg1jVN3MWLF+MHnrE27TCQYVkPdnhWIPfIWJFIpP9Mv7yzpE1M3bEGaTel
tVWpgjTH0m5KZ0+lCtJ6Pnvw4NGjR9Ul2OQN3tvb29fXJ1UNzjg3Q5rXkWi8
Xq96CLl/XzTymTM6Nqq2iRkJXsFtcob538gR5B6Jk/fpnQkfr5TWvHr2ZVx4
cyFnkXs4kvQ93G63mi67gEC4sKBAOkvSU5LPyfb2dukUSW9HPi0TP+wiP9rz
8MPq3qR/FetmcofSFwrOCMyW4IVukYPIPRKnne+QyGa+jAu7N0uRe2QaeUNJ
SyrN4sqiIkuSDWnWS0tLZTijWuqWlhb5PJTR0OjYaKzDAYa3s/5/ze909R3z
14sXL95544hGIo8CJIjcI0HSMU5kufJVK1bIJ4PsVTrSgIbcw2HOnj2rjQoT
39aWlOzcubO5qUk6Zlad4pdI7qHRH+Wx5NHhYOQeCZL9k8jbX4ZOXZ2dgUCA
nekY5B4ZQt5T/Wf69zY0rCwqSmYdThnCbKupeWz//paWFmmm3/WduTIz/En/
M5oz9wAWhtwjQc8ePBj/40I+K7q7uzkjFTAj93CMs2fPyvgl8T7V2pKSPQ8/
fPz40bfH3kpFPfPKPYDEkXskIhQKxV/sXR0MklEM+9B5yD1sNzo2eqCxsbS0
VHsPziv3UCvqqIMRfr9f/yaNzLDreZF7IEXIPRIhnwaFBQVRPzTk01616XbX
CGQucg8HGBkZSXyOR8UDD0hnLA0z38g9kCLkHolQF3OPOsjiYJDjkXvYRRpW
r9e7vbZ2vpeXle9vrqx0u93aijqZucYFuQdShNwjEfX19eaPDvnAkc+NNF9e
DchG5B5Zze/3qyWdEzl4JOMgn8+Xtq4UuQdShNxjTvJOv2vpUsMgSx0MGh0b
tbs6pBy5R/oFAoHmpqYNZWXqTZfgvI7169Y9tn+/fJTJr9v9DBJC7oEUIfeY
U/+Zfv0Hy9qSkgONjbTpQOLIPbJUJBKRP1ms2W6GHLi3tzf902LJPZAi5B5z
2lZTo59Xrw4GXZuKsLtyBLlHOsm4w+12S3OsvePin8+yxOWqrq5uaWnJxrPM
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
    "], {{0, 1196}, {1448, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->432,
  ImageSizeRaw->{1448, 1196},
  PlotRange->{{0, 1448}, {0, 1196}}]], "Output",ExpressionUUID->"aaffb8bb-\
e137-4d5f-bbec-246e8954d783"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
S0xpyZDmXbv25q+2NTU1kZbAvzxYW6JWqOndsVDtgHIbOWPunDk/vu3vZ06f
Ifrw0wfo69WmHXSLHVM8uKmQIzvxI8aAJTVh0IteBhOAoQUtyW9L3KIiNvVc
TD/e0fDo92fNe2DB4k2tabLWvuY6ferRdMUneaQljj6X4v9ApolTJj79ZtvV
uPHJio8/bf6NOBRneo65fbXv3hGjZRHOvO3d6SOQPuP9SuPS3v3kNCf3IytI
S3ykNF2jcDj89PLl0Wg0bfcmU1qif7P6cdtbBQAATAYXZXAgkYgPSPOlDLUl
QMB4rbakavhDiQeRY9jUanM1PFe/zlQSoLbrJ66LZHhwK80zBSzp6zGGLj6b
9nYYVdQhGnMupYIl+b9XYkPvAEp8qbv5zeefMi5wnK7NeaQlTj6XYv9AqbOa
yIdKzFqZ/5soI5UXqagn7dtbNMO0lLCa8aOkc706uB9ZQlriO452jYy/Je3n
s9SWZPkpAAAQGDlrS4BgcLe2ROxopqkzBipABmfnkLOwdp8X25c9veGczkeN
49x80xLTj2RKGNTis/rkIebJLgbWq/1h6KS1W0j62n5b9/DMqsHQwI60xOHn
YscfaOg8tOMGZq38m0mL5J0FxecVhnV1xQOK7VjrJ+INb/r30+bfmLKdYUv2
pGZZDnJsP+JOHDghe1oCAAACj9oSlAmXa0uGTl4xTp+pIzHOVeN3NbmHldFr
aqmYE2mJuqTb0fDozWOr9WbP/fi8evVUrYL6dTt7ckUl8d6239bdO2K0uvXm
n5a/IH7EdCeOo2lJ4c+l6D9Q8sp4YuXTtIUow5bsaes+X0xmcnnfz9UraXx8
9YKY6mFMW9o7kqTEksfG93zB25DyFcf2I2Z5hRNISwAAKHPUlqBMuFhbkrqI
7bjEVKJyiDewZO24gdlZC7vQ71RtiWhMYkKMwWbP2z7wncmVYsRgP+vv6VM5
ifrxJ16oH4wjDLO8lqK2JP/nYuMfSIp1br7jxrSBSXVV1ZKdnxQ4xWuicCXt
vUI5N/H96WedHfqGL3gTjz9kwRrn9iNrSEuQF9ISAADKHLUlKBMu1paI0Vzv
joXpp6YcGIyrTS5TUhCH0hJtYPFZUzWCnjykzok6RKxz8y3Dkze/jJ5snlKj
tGlJgc/Fpj/QwIheznybKbuYHeoooMJEX+wmWaPy7dnw+ejl3nNfX7wciURM
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
oKb9p2L37tXhtg5dR1pCdwuZydqDkQnrvk2lcxdTjw560jujpVUHyrVWrahE
lxJSkpYAxGXFc1i2nbtxbzicemTQEtISul4ITO58OnJhv3fAfhxot4mDb2ov
KXHwDalJSwDioi0BF29XUdOtpCX0hOzhq29dtHH3xIYdoNUcfEOHkJYARMSP
DF5vjoMuJi2hV+x+Nf50pjECtIGDb+gc0hKAatk9Osw85m7fWYEN3UtaQg9Z
viff7rV025NWD0IL1bOkZMegjyHFIS0BmCrco297MnIH/8zu1EOD1pKW0CPC
jptwoPCmyKV+7cHUo4Mudej0LEtKluwsDZ0XlVAo0hKAaSInJoQjg0NpDV1N
WkJviR8o7NQzaLarB9/UXlLyyJHUo4QIaQnAVaF4Xh0tnk120PWkJfQc8Ti0
2sTBNzN2KdEUjqKSlgBMqLUwe9WB1CODdpCW0HNGx0q3bI1MeS/fk3pk0Pmy
skqXEjqctARgwornI7fyW7a6j9MjpCX0opPDsbbe/aW9J1KPDDqZg2/oCtIS
gCArjCPTHw6UpIdIS+hR247Frv/rS+cuph4ZdKB6lpQMHE89SqiLtAQglMR9
GyM39KyEhp4hLaF3LX0ucgu459nUw4JOM2uXkiU7LSmhg0hLANTJUJKW0MtC
Zr4+MhuuqQLUaeRy+eCbh2qvKllX2nYsnN8NnUNaAvS6HYOxe7o12PQcaQk9
bf+p+PPd0HmBCczCwTd0KWkJ0NOye3fo75ebB9Hfj94jLaFnjZeFo3DyT3m3
P2U2HGqa6FJSOycpH3yTepTQIGkJ0NMWb4/c2Z0dSU+SltDrap0j/82XUo8M
CunomdI1j84Uldz+lCUldDRpCdC7HjkS2127KRTM0HukJVDeULA6d19YUzo5
bIUJXPXOaHktloNv6HLSEqBHnRwOBXD1zb2/dOh06pFBGtISCEKnytwz4C1b
S6NjqUcGxZBVSgs2z3LwjSUldAVpCdCDQsu+256M3N9XHTB7SM+SlkCpcoO4
bkvkBrH2YOqhQWr1HHzjJCm6iLQE6EUbDkdu8Qs2h5Wl0KukJTDh+Jux/Tir
S4NnU48M0gn71DbOtPvGkhK6jrQE6DnKYIiRlsBVQnWYdPXgm9pLSrYdSz1K
aD5pCdBbRsdKCx+3xBrypCUwKbZhsz+8bNik14QlJbGzoiZfi7dbUkK3kpYA
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
f5gLWqI=
    "], {{0, 1204}, {1466, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->432,
  ImageSizeRaw->{1466, 1204},
  PlotRange->{{0, 1466}, {0, 1204}}]], "Output",ExpressionUUID->"a833def0-\
2263-4722-b6e5-c2af76e0b1f4"],

Cell[TextData[{
 StyleBox["48\[Dash]52. Sketching derivatives",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Reproduce the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f0055eb1-c4f5-4aad-a41e-4ec3168537c7"],
 " and then plot a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "8c3bba32-f56c-47dd-b7a0-e9401b7d88d1"],
 " on the same axes."
}], "ExerciseDirectionsCell",ExpressionUUID->"08d570c2-5bc5-41d9-acab-\
2e4785669523"],

Cell[TextData[{
 StyleBox["48.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"f98766f8-5efd-4565-85c3-db20195b60df"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
z98192VfPTllXk2z14nafvpU+Vyf4a7Ko78I0sMELIGkFkPmgYEBEc33rF0b
GfKY8lhaULBt69auri4xGCe1c8rUC3914zPwp3/n/iQJfb3bkknqwHj/Ik+S
L97s1diw5rI1oL/cTGoxlHC5XB0dHWIgbFY0L/BYvmyZGG6L/oDf76dhtLnp
85ERsXg0nPvPm7/uq2/1P7pW/OX6lu+84Y8/r0yMpm+covnzJ859mKkCr5d0
6XTtH0dOg//LB7N8JgHN5VpSi5/3qcOH15SXZyGgjQ8xZt9eWzs4OBgIBFS/
E8iIyW98IZq2Fz66Fg3BaDQnvEJ95bUnP3Nn5HvFUDejRc5V9eFPIi/3qXu+
4eYUOKC3HElqkYxiSLtl82YlAW18FK5Y8eTBgxMTE6rfGJjqymtf/tyNtF1y
6JXFjFVvDHLF40++/eMsTMwWtQXP/G20VPGKjKwBbdk+qb1eb3t7e3FRUcqj
4NVlZSLid9TVPb5r1949e5qva2pqamho2LZ16/rKyqLCwpQju6am5vSpU6FQ
SPX7BBNEJnhHHjtevZT8N05/b3/ckXjmzL3E7Dvf/NQdKVQLIMtsnNQej0cE
a2QKbvKPBzZteqK5+UR/v9PpFClvzNC4rejM9LR4J4eGho4cOVJfX7+qtHRR
LyriXgz5xWsxrrGyS9/b9Kc3Onh3PPwvHyT9q5w+f3MkfsKdtc+AeKHo5Le7
b3/0RbMWWAFgNlsmtcjor+zenXxQiiHz1zs7RTSLwDWlANEGTk5OivAVQ++S
4uIky7hn7dpIXptSA7LN98Mv3HnjV/mHa3uSv/gbnRaef1fl/zeVvWvGc12C
X5+N1hy9oQyAbmyW1FNTU62trcncbBWZ3CXGzj6fL6MlieQ9PzZ2qK0tyWls
Ynx9+tQpyw2uP74W/nD64vu+9xKOzGavin99zz9j16Fb9Az24lLvw590fPqO
FPJ9zuxV8Z6/4b+c6C0V/yo+3u/O/D7xU9w8D8CwGtCWbZI6GAwe6+1N5pLx
xqoq8ZUi07NcYTgcPjc6unfPnqUFBcn0Itzu7J0ITUE4eOXX77756ugrz3/r
2bZH8u6rvHH+duOZ941fHLtm15IHn0nxUuyvz9Z9/i4x8DTxkXd9DbHU3ueP
f/Nv4mcXj+eOHxf//ZuK22/+Bu+qjP2nf/lgNtEkscBLTyw230O/eeMHzx//
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
Z2je2hRHL0S/xpjmS+pPktRZEHcRUb/fr7quxK68FrvOWGRAfeGjxT7L5Zdr
/4gxNWBvHR0dUuP2ld27VRelqditEGKn8fzh2p7ro5hLZ7/0B3nXF5V6w3/5
zZf69tU/8shXD734y8vazz22gxP9/dInuaamRud3XppIJh6fHXxr0c/y4U+e
/Mz8nTse6U+nZ0hSAxpyOp1Sc8GyokmJmQiUf8fDp/7rxplMMYL+7fxhkc5h
YScWW0T0ymtSwt59+6P/8sHiPyqGCWlLtrzAmBqwGZYVTdH8scyBf/inus/f
dfdtTZH7a0jnLLPcIqLS2mJzCdv4/RTWLDFe6b55LSYlJDWgJ5YVTYk8kydv
/tQyZJO1FhEVHTlpwnZeKnPJrsX9EH7pwu/SqY2kBvQkclk62EV2Myq8JXnF
if0/Sm8dR6Tum08/LX2G6+vrVReV2Ow70szD/LsqUzn1PX0+dmZj3uJXTTEi
qQE9iWNTusDHsqLJkE5gHn7rQ9UV5a5tW7dKSd3X16e6qPjm+sCGWd9x7spP
QuClJ0w5hR6LpAb0FA6HV5WWSoe80+lUXZf2YkY0+Xc8LMZEnIhQYmZ6Wupq
5mm+iKhxGlgqF5cvfW/Tn5p+/YWkBrT1ld27pUO+vb1ddVH6m9dU7nj1kup6
ctTw8LD06V1TXq71/QuGpP7s4FuL6ubNffEbL0hP8ql7vpHOmicRJDWgrcHB
Qemor66uVl2U9nw//MKdps25RcqMi4g2NzerLmpB85O6ID//qZ8u8mLT7FXX
/O23zOorktSAtnw+n3TUi8fU1BSncxOafSd2X+C8tO9jRcrWV1ZKH92hoSHV
RS3IMKZedFL7fiifPzfp40dSAzrbWFUlHfsOh0N1UfoyLjB1921NrzD5O+u8
Xq+xk+n3+3XuZAbG+6WCN555fxHfH29AffQX5tySRlIDOjvU1maxU4gKXb9E
KKJ55NLbsSNrs1pLJM944eaBTZt0jum52gx3V33pwu9i16q9BeOEtBNus8oj
qQGdnRkZMU7L0bnFU+aTbThafvw78f5caCmLvmPzdxa+/LNfXhTN7yJaYCye
cTJkR0eH6qJuYfaji0OVfxZb8yJu8Zt951trbpsX0/UnTbzsQlIDOrPerS5K
zF6NRLMYxUS6McEzf3uzzYy5m/WDf9xdkJ9/4PXfktSZY9EbDMUnZ/KZ7bE1
Jz/3e/IbX5gX0w8+k8KN2AsgqQHNWWj5iKwJB6/4/TPR/BUN7NKCgugoZq51
jZkBfvdtTeciY6Prp8dZtSzTLLxoz6/PRj82okf3yXZstzD9vf3zYvqR/vRv
y5KQ1IDmjhw5IrV7DQ0NqotSyvfDyPXE/Dse/tqL7rf/+fBcu/rnT8TOHJv9
6GLvkttvXjL4zoXAeL9ohJlglgXHenulvuX22lrVRSVLGh3fctESOaaf+n4m
7jUgqQHNGbc5KCosDIVCqutSRlrZO+/6+syx08bEmPrja2Hjbgt51++74Sp/
ptXX10tve09PjyXe9rkir77V8embq3/fffujx92/TfDll1568ouxe95tP/2r
DP2YJDWgubhbB4r4Vl2XMmIUI51kEAMfqYUU/zM8/oz0ZfOnliEjgsGgCC/p
nZ+YmFBdV1JufIqmz0fDWvwg4sf52ovu+WdiLr35Ut+XP3dnQX7+jaH0Q3//
rxevZq4wkhrQX0NDg5TU33z6adVFqXP1rf5H18YOeeKeYRDD6ugEofw7Hh65
9Pa7M7/PfrG55vzYmPRZLSkuttYpoLmV4j+6eOZvquadt7nj4Ue+eujrnZ37
6h+JXMWOfgK/9T9/dSXDu5+T1ID++vr6pNZv29atqotSI9oehoNXAoFAoinc
0peJ/3J1Oju6urqkz+rju3apLmpxIldPxCPw89Ntj8w7ORANaPF4tPXZly68
memMjiCpAf253W6p9RMthjUm02bG7OyNHbIscfUzp9TU1Eif1RP9/aqLSkX0
M/bh9MXxCxecTue50dFz5/73a6+73/BfznLHj6QG9CdajFWlpdK1vzMjI6rr
AuaJe/u/x+OxbocqWrnxD9lEUgOWsH/fPqkBbGcHTGhmeHhYSuo15eWqi7ID
khqwBIfDISU1O2BCNyxTnyEkNWAJiXbAVF0XcJNx6zfdd7q0CJIasAqaQeiM
7dQzh6QGrMJ4avEJTi1CG3Eu0Nx/v+qibIKkBqxieHhYagnXVVSoLgq4obm5
2TjpkQG1KUhqwCpmpqeNZxc9Ho/quoA5a8rlhda5kdAsJDVgIcZlJQYGBlQX
BVwTPUbpk5mflyf6lqrrsgmSGrAQ41KNTU1NqosCrp3o75c+maJXqboo+yCp
AQs5NzoqtYelK1eGw/HXvgay5vFdu6RPpuhVqi7KPkhqwEIiWwpKTaI4ilXX
hZwm+oolxcXSx/LV0VdU12UfJDVgLTvq6qQm8bnjx1UXhZwWzZHoQ/Qnw0G2
LzMNSQ1Yy7Pd3dLSyvX19aqLQk471tsrJbXoT6ouylZIasBaxsfHpVaxcMWK
UCikui7kLtFXlD6TPT09qouyFZIasBYRykWFhVLD6HK5VNeFHCU+kKKvKH0g
JyYmVNdlKyQ1YDkNDQ1Sw/hsd7fqopCjRC9R+jSKniQnecxFUgOW09fXJ7WN
22trVReFHNV99Kj0aRQ9SdVF2Q1JDViO2+02TrUNBoOssYzsE71E6dMoepKq
i7IbkhqwnHA4vKq0VGoez42Oqq4LOSfuDf6iJ6m6LrshqQErampqkprHI0eO
qC4KOef82BiL5mUBSQ1Y0cDAgNRCbtu6VXVRyDmifyh9Dh/ftUt1UTZEUgNW
NDk5KbWQBfn5gUBAdV3ILaJ/KH0OT/T3qy7KhkhqwIpmZ2dXlZZKi5U5nU7V
dSGHiJ6h6B9KSS36kKrrsiGSGrCovXv2SI1kZ2en6qKQQ0TPUPoEit4jNyBk
AkkNWNTg4KDUTj704IOqi0IOET1D6RMoeo+qi7InkhqwKI/HI7WT4jEzPa26
LuSKLZs3Sx8/0XtUXZQ9kdSAda2rqJCayuHhYdVFISeIPqGxo+j1ejn7nQkk
NWBdB1papKbyqcOHVReFnCD6hNJnT/QbVRdlWyQ1YF1DQ0NSa1ldXa26KOQE
0SeUPnui36i6KNsiqQHret/3nvEM5NTUlOq6YH+iTyh98ES/UXVRtkVSA5ZW
tWGD1GCePnVKdVGwOb/fb+wi+nw+1XXZFkkNWFpra6vUYIq/UV0UbE70BqVP
3frKStVF2RlJDViasc0Uo2zVRcHmDrW10T/MJpIasLSpqSnjecj3fe+prgt2
trGqiovU2URSA1bH3B5kU9zOIfMYM4qkBqzOeCryyYMHVRcF2zJecBFDbNVF
2RxJDVidcQ0Kpvcgc4yTGEVfkaXJMoqkBqyOW2aQTaIfyI2BWUZSAzbwwKZN
UuPpcDhUFwUbEj1AaVd08RB9RdV12RxJDdhAe3u71Hg+0dysuijYEAvYKkFS
AzZwZmREaj/ZLgGZwKYwSpDUgA0k2oJQdV2wG+NFajZazQKSGrCHLZs3S03o
d0+eVF0UbMXn8xk7hFykzgKSGrCHjo4OqQlt5lI1TOVwOKTP2AObNqkuKieQ
1IA9cKkamfZEc7P0GWtvb1ddVE4gqQF74FI1Mk30/aQPmOgfsuZJFpDUgG1w
qRqZE3e5b9E/VF1XTiCpAdswXqrmrmqYRYydRS6fffnlzs7Ompqa/Lw80TNk
QJ0dPp+v47q+vj7VtQBIS+RS9fJly3bU1T3b3e1yuYLBoOqiYE/io8XmqgCw
WKLxnJycDIVCqgsBAAAAAAAAAAAAAAAAAAAAAAAAACCO/x+fV89m
    "], {{0, 654}, {654, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{654, 654},
  PlotRange->{{0, 654}, {0, 654}}]], "Output",ExpressionUUID->"85c34a6a-b7f1-\
479e-88e6-2655d4929026"],

Cell[TextData[{
 StyleBox["49.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"3a0969ce-38ef-433f-b5ec-c48732d47677"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9e3n/2C1iMf/2dKebJzuPP+S6S+lZz8ZupLSpwXkzdH+fsWYXrpkidvtVrs6
IAtIamhH+LMz/fd/+erb7IsnRFP8qX27+G9DaanRYPha36nEWRmcfGv/yq9J
werMRkctWmlR0sv/64vimLfc0HTw5CdZOCiyKl5ML6qsdLlcTCGDPpDU0Izz
//KtL4hEno7aPSdCoZB4m33/+W9ea6sP/DHBN4dcLzV8/ebph333Z9m6Khme
IQobf2LJ9AeGm0173glwGlw74p30XlxVNTExQUxDN0hqaIT3yN9K/xTnfeWH
Jz8PQ0/3Wim7Eye1f9Sa4knyFIRmRIc1EaAFRw4fjtdNs0kWdIakhib4RqSO
WIzm4/9+LQovOKxN0zsL//e2F986qzyvTHTT0jca/+p7xy/lpLqZPvqcff2f
S6fBf/FRmLBW14HubsWYrly4kJiG/pDU0IK3n7k7kravBa+u9yjNuJb+lCh8
5wXH41+9SfrenJ6ani7p0pvSc33xjmdOcgpcPV1dXYpreouYHh8fV7s6IPtI
aqjvguM7111N25Ltr6bynVf7XDH+4qdv5HputgjrwLGdkTrF09FZ55l4wX/8
1FOc9EaxIamhOmmCtzQ2/O5c8n2x75ePyjvx3Jk+fvj9Z794YxqlInPi1X78
sceIaRQhkhpqO/fLe74i/SM03LjmFx8lnba+kWud+N+fzGWF14iwjsx8u+WG
pleysroKkhAMBuPtN33HsmUul0vtAoEcIqmhMs/Ld9909S33S8t+kvz1X0/3
2qv5frPpsDfOVexsm26rTw9GCi7ZcyIPTwq/37+hoUExppdXV7vdbi5DQN9I
ahVdvhK65Dtz2vNh3M4sfFH87YdnP576LJ915VXkDHZqwXfpzR99+cY08n1a
+KJ42d86e168qor5Lv7W4/F88PFUnO+/dhKAtjoPJicn7121SjGmV9TUiN8U
MQ3dI6nzKRS48P8+mDjx22M/f+6F9sbSvzFdPXm74thpeWREL9hVsmpf+tdh
Tw82fP1m0XhmcZTOrCGWXj2XJ1/veW6/GM8fPCj+/P5/uyHyxiuOHP1Xv/go
HG+SmH/ge6nme3DyLellj3yjwhTui6cGHr8v8oD77X9SPNTb++6P3OVt+tV7
rDKaOy6Xy2QyKcb0ytpaEeJqFwjkA0mdTx/8tEzxPadkZY/Cslonn5/1mLRO
tE7f4jS6T/GWlgxHenOtxQeS6CZaPiIJmPBHvtbVivHwax/N8awXT0nTwOYZ
jTFPEf294iNEpE8vnVnCtGTlEfni4dJLOsfvDtkwNja2uKpK8d/J+nXr/H4/
3TSKBEmdT6JNnj6nGr7od9ojC31IY8cp2ZodZ38TuR6aSSKEXC813/vAt1ta
sjjEAbf8/pM0e0nRt/56cGBgYGhoSFpSO9JQb3nhH0/89pj0t+LPeEudiFcm
8uoZblxz2DtXGRdPiW564MSEOGBk0dHIh4GrZzM+T/NZn442/kwxqaOvrUtX
ydN5HZCQ+Ccg3pQUY3pTc3MgwEpxKCIkdd7ErOMhnZS+FgpP/qv8W97r33Ht
AS22NDaH+nzl6iyLuw5JEvVEvlH896yL1Cund7+K/tt4TxHd0iZzpTj6RRDH
jExFK525xv3O9JfP/cu3vjBdwxM2keYTA4ce2djY+N3tr7x7XvnVC7/fXXLt
pP03X/WSGtkVbwkyMba0tQWDQbULBPKKpFaLeG+Pjoy4dwSf/Y10L1Li/SkK
UvhiZEuOWe1t4m+avW3HF+945p1UnzfqsoJoyf/pP68uOS466E9m5phd+zQV
p4ArV87/7/V/luGFACgSKRzvpmkxnt69mw9FKEIktZqi7vcRo+2NT2PSQcqL
1x4uEXE299XYghO1ikjpzHLfyX3brJQsabSmfKrh80VBr/ZoL/xjw9dvvuX6
h1KZxZ1xDVDi8/ni3Y1lKC3t7e1Vu0BAHSS1qq4thhmvqQx/dubFxddJS4Lo
qZuIuTFZutqbXGd6ftaLpjTpK6UjlCY5LW32EUjqrHO5XCtqahRjunz+/MHB
QT39+wdSQlKrK/pCbfRuj9fMxJnII/1NMI6+3Cx+9jcvJ/l9s1MynaS+En3d
Yfogj/46xbuiz71k+svIefvPL3YjfUNDQ7eXlyvG9NIlS9h3A0WOpFaRNIs4
+k1pnyc2qj/qbVU8MZ68S74zrzscfxj9/Wg2x2jcidlJ/+zRcVny6GDSWZmF
pI7+kFCqOPF+Lm/vuz/y7ax/kgnxLyHB/LGVtbUej0ftGgGVkdQqmz2LeMWx
07NO8c1cUc3kjt3c3U+d8UKaswL3a32nks79LCR19HbY6V1ZiKz+TVJnwu/3
x1vNu3TmbizxALVrBNRHUqtu/Ikl13Jn9l6KUhxs+N25TI6fq6TOcC76xVPR
y4xs+f0nSX9nNpJ69topqb7C0ft0TCf19Q+9SlKnzuVymc3meP/Anty5k63K
AAlJrS5py+PoK57XLlXP7Nqc+TXQ4ORbrzscYoxmjzjaW2fPZ1RW1Gn/FJMu
G0kdtXRJGucHxKepWZ+vmFGWuoGBgXgXpucZjX19fcwfAyJIavVFrbh1yw1N
//SfV6TzwNLi0knfu5Q/mb+FSp9PotM2ldP7Gc/9Dr//4uLrZp0fSHnCXmwN
+pvvlzvBYFD0y/Fa6cVVVeJzIDENRCOpNeDcP3zjq5F3qh2nLk2f9JuJb9FQ
/5vaxeXI28/cnXZLO2sqWur9bPTCKemevp7d16c8dbx4eTye1XV18S7HiL86
7fmQmAZikNTqkt6UomPL9Kv3xBelk6ttb3yq03etc5FtwtK4TBy9kVYqt3fN
eOuIFM2D596L7qz3vBNI5arorMvcJX9/MqX6i9bg4OCCiop4Mb2lrS0QCKhd
I6BFJLUWzDoVfOCPIddLpXG2h9CJC47IdLKkttiYTXp90vn2z7fhkD4CnWi7
tk+T9AHp88ed/8O7Zy5fUV6JZfphl96UlniVRib30BUJEcHb29vjnfGWLkyr
XSOgXSS16qZvpIqKnpLlD0l7KIsuT+3ScmamsY00xQrrvcQ3HZSzb2371olP
k/vOi1I0ixZYCuVZH5BabJEz2B/1thoNhkSbhUWtriZNLSCpE3A6nQnmeJtM
pvHxcZ2eOwKyg6TWhEtvRt+ylMal28Li++WjkVOgMTemJWnWperPkzdGKHDh
7NmPI/n79r77Re9WsvFn0uyvmM0rb7n+oePS8icznyISX3qOnq5f8t2fTX2W
Uu1FRLzIVqtVvOzxznh/u6XF59PtqSMgW0hqbTgv7boojbj7aumCaD+jb3G6
3/6ndNY6i7rJS/kygedlaUa94cY1P3jlpLR/qHhho2eOhT87E92bL33xhH/U
KrJ7zglm0fW3vZFcR198Tns+fKCxMcEZ7+cPHtTrP3Igu0hqLZCW1oy0aQ+/
9pGu38GmF82+epV5ZmOONE4di3CP7Jh5yw1N8mCNWdlbeq7oCwriFY65LToy
nhj3J3r9o7YAS2fPzeJgs9kWVFQkOOM9Ojqqdo1AwSCpNSJyzTS9s8GFYvrn
mlnR5Wpj9efPpHSROnKQ6XCPutj9zVdjb2iOPsEe7/OP4lKrpl+9N0f9s59X
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
XHGRDg==
    "], {{0, 652}, {654, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{654, 652},
  PlotRange->{{0, 654}, {0, 652}}]], "Output",ExpressionUUID->"47a79b96-6fb2-\
4fe4-babd-342a7b8b9dce"],

Cell[TextData[{
 StyleBox["50.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"19710855-9524-4fe8-99e4-40c8c961d137"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yXxr966bzeYj7e0nh4acTmc2O+5wOJ7t7WVjS2Y7brE8undvxfr1y35Lb6yq
Otja2nuD4SPP5e2Rhx9WX+rwuWJjM2rTXi+WQsTFn+J3o3gQ8XvyzMTEXIZv
pSQmUCmPlo2NTcdt6avq2NjYMr1p121OeVN/kLfV1x9uaxsYGMjENeO0m42N
jY2NTWz3Vlfr+Gj3bNq0r6XlxIkTU+fO6X7ocHZmphuI58D+/VGXTiTa1q9b
19zcbPR4ZbWrsVH5ND6wY4fRYwEK1+6mpjRjvdpk2tnQ0NXVZbVa3W73/MKV
OPomG0gkEAicHBpS7h6y7CbiPjw8HAwG5/kuTRXnqgGG83q9y64GGXerrakR
k+v+vr7p6Wnxm5Bfg8g+l8v1ra6uZE5FK15Yr2B0ZESpNtJBuwHDHWxtXXqR
CnUrKy3d1dgo5uljY2Oi+EYPHIVL9Ndqte5uakryW1d8346Pj/PyUi+0GzCW
mDInsz9czK/PTEwwYYHhxERbvHpM8tRKkXXxrcuyQrqj3YCBlBt5L31ksLe3
lyk2DBcIBEZHRnY2NCR5cGfd2rWdnZ0i9EYPPD/RbsBA/X19cX8Tion2gf37
Jycn2ccIY4nvQJvNdritrbysTL1XzrKnYYiyzLEOeSbRbsAoYjZ9d3l51O+9
bfX14qfS5/MZPToUOqfTedxiESHWxnrpdjc3N4+Pj7OcaRbQbsAoyilqyg/g
XWvWiP/LHYphOI/HI7pgNpvVWfayE+0NlZVPdXWxezybaDdgiMnJSeVH777t
2/v7+phow1her/fk0NCuxsbYWfYS7RZvPzoyEgpcZq6dZbQbyD7lFLUnDx2a
np42eiwoaCLZAwMDu5uaTCUliU4Uj233xqqq7u5uMdEO32D0x1FwaDdgCO7g
CQNdvHChv69PmWUneYG2cgrlo3v3jo2Nca2i4Wg3ABQIh8Nx3GLZ2dCg3R+e
TLvNZrNoPdcq5g7aDQB5TMyRz0xMdHR0KGeMxz2cnajd4l16enqyfHd4JIN2
A0D+8Xg8J4eG9rW0aK/Ljs103L+srKgQrZ+amprnXiG5inYDQH4IBAKTk5Pf
6uraVl8fFeUlptjqX26orDzc1sbSu1Kg3QAgLzEvdjgc4jd5c3NzWWmp0uK4
p4gnareSbBF9kq2LUOCyeBE15/f7r1zJ3LPQbgCQjtvtPjk0dLC1VZQ3mVPE
Y2t+b3V1R0eHzWbj0uz0XfV53jp14slDh2pq79C+Oiqq+W9P/P0/vOH0fDyv
8yeZdgOAFESvR0dGxBxZPesshXu+m83m4xbL7MwMB7J18dE7//w/D/zlsp/2
//z152dD8zq+TKLdAJCzRK+Hh4fF/Fr0OvbCriTbfdeaNY88/HB/X5/H4yHZ
eglf85x68gHt51lMsV9x+uf8fjHLFv8qZuJfueUO9V9X3db0/dnf6/XstBsA
coeYmolJsejsgf37762uXuKw9bLtrtuypaOj47XTpwOBgNEfVr6Zm3qh8XN3
qmcXFB176fWPI3+vzKzFn9dfI4VdLz/ySfULJ/789tsBXWbftBsAjOXz+cbH
x49bLLubmtatXZvkYeu47S4vK1Om2NwZJEPEnPqNF75mKilRvwTffGVWlDpu
kSPLxV7zPL/hFvULZPrzg7agDlfe0W4AyLJgMCgm1wMDAwdbW7fV12vnZSs6
60x5F/HnzoaGnp4em83GueIZ5v/1sSrtl+AJ+zK7wSNZn7Jov3ZFz/4m/XHQ
bgDINDEpczqdoyMjHR0dorNlpaUpnGYWtYnod3Z2jo2NcRO6bLn0fx4v0r5w
enD0d8vuAI+deq+69bHxy+kOhXYDgO7Er3SXyyVi3d3dvauxMZk94Un2+kh7
u3hYlhbPOr8SbnXSXfTVwaQL7B/94p9ov45fGH8vzdHQbgBIn7Ib/OTQkDKz
Xr9uXcqXcUVtZrP52NGjVquVXhvI9dwXtF/KVbc1vbKSufO7vQ2LdpsfGY+c
i57GUW/aDeS08JWrPs+b7/s/uhb/4lDxr27hw4+yP7QCJ0p6ZmJC/Ao92Noq
8qqevFS8wlt0xW53rVkjpuo9PT3i8dkfnhNmn4v6Utb+9J0VnS7+Xv+XtOvd
Fd3/gzQn3rQbyEFB75sj33mu/aGbvys+ec/Ts1G/Kq6cVy4vVQ+9GTPWwjDn
909PTw8MDIhptQjrxqqqpbu80nbX1tQc2L+/v6/PbreLKTxXYeeQsKu36Dbt
F2v1p/82+odxmUe4op7hdn3eTbuBPHPl/DOfvD3y+8Fkivr1/rjtA/WtPvb+
S+enbi/WXPxbdH8/MzS9iFKLhg4PD3d3dzc3N9ds3pzM7bcS5Tvuv95dXi5e
A4jHHxsbY2d4LtNOmZUv69bTF1f44ir6eHfR5y1vpzcq2g3klivnxYz71Lm3
3nzfH/rtsLL+w/Wf92emru+mu9H3Rb8NGgdpd2pEOm02mzKn3t3UpKxgtuyW
zJxa+zZ3rVmzs6HhSHu7eEngdDpZRVwOl89q10ZTJt3KMiwr4f/HL/6x9ruC
eTeQZ8ILlP8Wv961p7j80abvLLxWv/Talz8R+fE/9pLo+1unTuzf/dBDXz3y
itPPjtZlBQKB2ZkZq9Xa29urHKfWngGe/nll2q2stFQ8voj1i4OD4km58lpG
rue+EPVl/ezA+RX/oF19/cnPLHoBUNSY7l4y2g3ktNnnbpbl9h0j/359D17R
nsHfX7u+9GJogdEDzTki0w6HY2xsTPyWEwHd1dgYtcSovqUWW8X69eJZnurq
Gh0ZEU/NF0V6l89GNXfVbU0//mDlr5A1P8XX231/P/NuIJ8tfsX+xN//Q+Pn
7lx162Mruj4l7/l8vunpaVHM4xbL4ba2nQ0Nyp229E1z1CYef1t9/YH9+8UU
XrxCuHjhQtSo2A0iu6j10CLN3fPSR9dW/JWNOmJevHD8K82x0W4gt0Wf5VK8
+KS1gqJMpcfHx/v7+jo7O/e1tJjN5rLSUjWm2j91b3fN5s2PPPxwd3f38PDw
7MwMN/jIbyLQUSeHK2eprfyRon+ExeN8+dwf0hwe7QZyXPSqDgd+lvdz7jm/
XzT6tdOnRaOf6upSGr2hsrJ48Y7ujM6s762ubm5uFq8QBgYGxKReDMnozwqy
K+yKOiO05M7aH38Q/nh+hYdCfJPaM06LV76uS1y0G8hxoSmLNlJHz181ekT6
EPNWt9tts9nENLa3t/dIe7topWi0dkWyTEyfY7fVJtO2+vq9e/b09PSIwdjt
dkpd4CJ7xWPOMI+zxkIS5k4djPp+K9rzUvovv2k3kOs0r9tLbt8hXvlLdCBV
RNDlcolAj46MiEAfO3r00b17RaA3VlUlKmlUuHVv9z2bNu1qbDzc1iZ++4mp
vRgeZ4AjjtgTzFI5SH3pJ9s/HfU4uhzzot1Azlv047/rl5eMHs8iInwej0fM
VZXD0GLqerC1Vcyg79u+PeUbcOjVbvEKYWdDg8j0cYvFarXOzswwoUayFrdb
fB+u9OqwyBu/2R/1PSkm72muyqKg3UCue/fl+jvSfPGvs8nJSWX/dmVFhfaX
m46z4xW1e7XJtLWuTgzpSHu7+J0mMu1wOKIyLdHOCuSEmHn3sV/PrewRwlds
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
AAAAAAAAAAAAAAAAACAj/j99SXb7
    "], {{0, 670}, {660, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{660, 670},
  PlotRange->{{0, 660}, {0, 670}}]], "Output",ExpressionUUID->"1332fb06-cf37-\
414c-89ec-00e10dfa5714"],

Cell[TextData[{
 StyleBox["51.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"565fe633-3685-4fc9-8a47-b8b81e70a3b4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
uhFxMj011dDQkLl8eeR6FNPu0tLe3l7/7FU2XgMAYGd0I+JqdHT0icrKG6aj
cVK1+vr6C8PDqocMAABCoxuRAKIGy8vLo6lHMT2wefOx5ubx8XHVowYAANeh
G5EYMzMzg4ODu0tLo6xHMRVt3drU1DQyMqJ67AAAYA7diAS7MDz81JNPZqSn
Rx+QG9avr6mp6enp4RBsAAAUohuhhMvlamhoiHyyR+skanPnjh3iB/v6+jiF
OAAACUY3QiGfz9fd3b2gjdeBaVlGxsPFxfX19efOnnW73ap/FQC2JuYSxdu3
i6m8vJxTN9hWU1OT8TT19vaqHgtCoxu18Hxjo/FWcjgcqscSFx9OTBxrbi4o
KFhEQBrTvXl5VVVVLS0t/f39SjZni1/BeI4qKioSf+8AIhPv0MCpG1SPBWEd
2L/feJra29tVjwWh0Y1aEEVkPE1nzpxRPZb4GhkZOXrkSMH99y86IMWUnpYm
buGJykrRoqK0XS5XAkY+Ojpq3Hv+pk0JuDsAC0I3aoFutD+6UQup040BTqdT
VN/DxcUiAmNpSGNauWLFzh07ampqWltbRUlOTEz4/X65A6YbATujG7VAN9of
3aiFFOzGgMuTk12dneIRWOhBNKY1kKavZGVmPrB5c0VFRUNDw09On+7r64sx
JulGwM7oRi3QjfZHN2ohlbsxYGZmZmRkpLW19fG9e+/KyYl9JaR1WpaRcW9e
3rceeeRgdXVTU5OYcYmedDqd0Ry7TTcCdkY3aoFutD+6UQt0o4nRkC+//PK+
qqr78vPj0ZCmSZTqlsLCsrIykZRHjxw52dbW09MzODg4NjZmVCXdCNgZ3agF
utH+6EYt0I2RXZ6c7O3tbWpqKi8vj2Vz9qKn7KwssTAy/nvlihX19fUtLS1i
vidGJdrS6XS63W6fz6f6cQJSF92oBbrR/uhGLdCN0Qick01EmsPhOHH8uHjc
Hti8eVlGRuJL0jQZO1iKpMzbuLGoqGhXSUlFRcXB6urDdXUid1tbW8VMsqen
p6+v78LwsOhMl8s1PTXFWeZkEY+keLTFI0y9pyy6UQt0o/3RjVqgGxfH6C6R
CqLEuru7RaE99eSTItuyMjOVl+QNIzOw9lIs5gruv9+ozcf27HmislIkUG1t
bUNDg/iNWlpaTp06JV4Y4hcUtdzf3z84ODgyMjI6Oiri8/LkpOhP6QeP6+hk
W5t4PNfk5orHbWxsTPVwkGh0oxboRvujG7VAN8bItOJO/FU0lUis06dP19fX
V1RUiCoThaa8GOM3LcvIEL/g3atXb9yw4b78/C2FheJX3rljx7ceeaSsrEw8
AiJH9+/bJ4r0mUOHDtfViYel8ehR0aXHmptbW1tFdInHSszJuzo7O7rPnTt7
tqenR2RqX1+fUapDQ0MXhodFr4pEF8kqwmxiYkI8yG63W7Srd54oWNHwqiJW
3G/R1q2BB2R3aan4XVj9mDroRi3QjfZHN2qBboyH4Jg0/tvj8Yj4EUUkSkm0
k6ip4u3b195zj5RzSGo0RfP7xviYiB8XKZuVmZmdlSWCNmfVKtG0a3JzxbRh
/XoxO7o3Ly9/0yaRuAX3319QUPDA5s2idY3cFfkn/nho2zbx7DxcXCzq15h2
lZQYk4hhkYWBqewL4putOS3uRXz/43v3Bk8V1xs4f17d6xRy0I1aoBvtj27U
At2ols/nEwudwcHB7u7uk21tDQ0NYuYmOuQbDz4oOicjPV156ek4JaDGZd1F
V2en6tcgYkU3aoFutD+6UQt0o535/X63293b22s8R3evXv18Y+Mzhw49UVm5
u7S0qKho44YN2VlZyjuNadET3ZgE6EYt0I32RzdqgW60v3DnbwxsDff5fCIv
nU7n4OCgiEzxVJ5sa2tqaqqvrz9YXS0i09iQ+sDmzRvWr0/unS21m+jGJEA3
aoFutD+6UQt0o/3d8LzfCz2pjvj+6akpkZrili8MD/f394va7O7uFrNTEZzH
mpsbjx49XFdXU1Ozr6qqoqLisT17dpWUFG/fLspTjGHtPffkrFqVuXy58uhK
gknkfTTXDIKd0Y1aoBvtj27UAt1of/G4XoyU8zca/enxeESCive70+kUFTo0
NCRC1OFwGC3a1dkp5tKnTp1qbW1taWkRmSSitKGh4a+ffba2tlak6dMHDogX
4ROVlSJQy8vLy8rKdpeWikx9uLj4oW3bioqKRKwWFBTcl5+ft3GjWC6vyc29
e/VqEa53ZmdnZWYuy8jQ/dgi8SuIJhehLh6riYmJGz7sQ7CZ4D1JVI8FYYnZ
i/E0HT1yRPVYEFpPT4/xHIn5vOqxICyxmDaepucbG1WPBaGJ+gqszVA9lngx
gjNGA8L586Ja+75g5KuhZ173F0SkienMvI6OjvYv/OT0515++eWTbW2B6aUX
XxTpa/xpaLE4cfy4+HPnjh2xZKSYYYqEFjclfpGQqyKVhy4TExMTExMTU1JO
sayNXPTP3pmdLWXwyzIyirZufebQIRG3o6OjdCMTExMTExMTU5JNBQUFcree
ixDdXVra2trq8/nmTjLJZKfpgc2bjafJ6Hwme0535eQYT9PGDRuUD4Yp5MRb
SYsp8Faau7qx6sEwhZx4K+k1yYpGcTtPHzhw+vTpkZGRwKVwuLC4DXFcjBY4
Lsb+OC5GCxwXY3/xOC4GcSICr3j79sWFYs6qVWVlZc83NjocDo/Ho/pXQbTo
Ri3QjfZHN2qBbrQ/ulEjp0+fjj4U09PSthQW1tTUiAWZ0+lkXaKm6EYt0I32
RzdqgW60P7pRF5cnJwM7fkRer1hbW9vX1+f1elUPGRLQjVqgG+2PbtQC3Wh/
dKMuDlZXRy7GnTt2iDcaJ/pOMnSjFuhG+6MbtUA32h/dqIXBwcFwh8PclZNz
uK7O6XSqHiPigm7UAt1of3SjFuhG+6Mb7c/v9xcVFVmLcVdJSVdnp8/nY9/F
JEY3aoFutD+6UQt0o/3RjfZ3sq0tOBfvXr26vr4+cKZuJDe6UQt0o/3RjVqg
G+2PbrQ5t9u9csUK4znaXVra3d3t8/lUDwqJQzdqgW60P7pRC3Sj/dGNNrd/
3741ubkNDQ3j4+OqxwIF6EYt0I32RzdqgW60P7rRzmZmZhwOR+B6LkhBdKMW
6Eb7oxu1QDfaH90I2BndqAW60f7oRi3QjfZHNwJ2RjdqgW60P7pRC3Sj/dGN
gJ3RjVqgG+2PbtQC3Wh/dCNgZ3SjFuhG+6MbtUA32h/dCNgZ3agFutH+6EYt
0I32RzcCdjY9NdU+r6uzU/VYENbA+fPG08QJ+W2LbtRCf3+/8VYaGxtTPRaE
5vV6jeeou7tb9VgAAIgLuhEAAADRoBsBAAAQDboRAAAA0aAbAQAAEA26EQAA
ANGgGwEAABANuhEAAADRoBsBIMgVl8vtvfjO7/8Q+p8/9bjGx8ddno8TOyoA
sAW6EQBEKL52ouX73/yz9DvyjFnil9b+zYWZ67/pk3d/9JfbjX8V086u/1Iz
VgBQh24EkNI+effol24T88BlGRmBJjSmXf8+ee3bLv/iBzfdFvin9LS0JVte
uhz+Vo81N3u93viPHgDkm5mZ8fl83nkej+fy5KR7nsvlGhgY+PxS7+vWib/O
f9nj/+zS1WnvldlZ/+xV1WMHgHj65N3XTrR0vT0m5n8f//r179xyeyAOlzx3
PvA9RlsGT0sebY/QjeIbVq5Y8Xxj4/TUlJgDJ+Q3AYBZv98vYm98fHxkZKS/
v7+3t7ers/P06dMtLS2NR48erqurqampqqqqqKjYXVq6c8eOoq1bCwoK7s3L
W7d27d2rV9+ZnW39EL2gKXP5cjH3W5ObK27zgc2bHy4uFnf0+N69+/ftq62t
FWMQI+no6BADGxwcHB0dZSYJQCOm+dVvm78ZmPv98T1NzrmvTXbu/LL46001
r3/qcb3T8UL1ru1Lan/xyu8ifawO3Mjae+4Rc0jmigp5L77zZv8b586eFUvP
ju5z550X/bNXeUbs7Mr7b7zcMyL6h6cpwOfzud1up9MpUrCnp+cnp0+fOH68
vr7+YHW1KMBvPfJIUVHRxg0bRLBFH3jpaWmx9OEiJtM9Bv4qhi3aVeTlvqoq
8Uu1traK3/HC8DBbbWLEW8meWCollbdfujZPu23bzz6dvfTSoxnp6cbaxS82
wVzxf3Yp8lNsmlsWb98+NDSUmN8AAR//+vXvf/PPxOMvnsHgp2PpraVdb49d
UT08WPldv3z52+uWZWT8yZoXLqoeTMKIJpyYmBCZ5HA4zpw509LSYgTh43v3
PlxcfF9+frgaTHz4Jb4t1+Tm7tyx48D+/U1NTWIhOzIyIh4u1c+YBlLzrWR/
LJWSkHfg6Zuvbao+2PzDkq/esfSWyt4FPp3WmaF4kTQ0NIg5Hp8pEkAU/ts/
firy4ummmteZndqHWMwZx519bencRtLI+w/rZXpq6je/+c3g4GBPT8/LL78s
+qempuZ73/2uyKGQTZiUNSixJ0ULbSks3L9vX2tra19f3+XJyRs/B6kkid9K
WmOplLyuGFulg6cn3/hoobEX7lVRUFDAisd4E2/P95p2RrMkWnKol60DyonF
3P/7F4XGMu7aU6PVwk68hNxutyjD7u7uY83NtbW1T1RWGll4Z3Z2NC3EtKDJ
9Lht3LixqqrqZFvbyMjcNlnVLwdlkuCtlKxYKiUx8WQF7+I49yQ+1bWIVccR
XhUZ6eliycKrIn78A42fL1xu23bo9aGRjz7+1OPyXnzH8fz3THNUMR15b1r1
eFPapVcem3uXbT1w4thzB9bdqsXCzufzXRge7ujoOFxXV1ZWJuIwc/nyG7aN
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
AAAAAAAAe+X/AANE5Qk=
    "], {{0, 772}, {872, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{872, 772},
  PlotRange->{{0, 872}, {0, 772}}]], "Output",ExpressionUUID->"4f73aa8c-85be-\
4bc5-a4e4-01cbfffd4c47"],

Cell[TextData[{
 StyleBox["52.",
  FontWeight->"Bold"],
 "\t"
}], "Problem",ExpressionUUID->"84164b88-1ca8-4311-ad3c-c9ad0b2f4061"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
b6904qisrExPkXBsIh0cHJRa3fr8/OU84VScmf+OS1kzWejEW9LjRRi771L1
XGEpwRed1peXT4blrMl53zvw+SDSzxb83NH6L/9234P1muO7KBMZySlV+OuW
P9W/XJs8pXe6/uFfvvnJePifulrrvvXNFfX//acj87xLsZstK76iP8nuv73N
wqQAYBuJJ1J9Lf17Z4Rdu9JTJBybSCORiPFq9cjISFKeXEtlelKamTJz/15F
03qsun3t+w89Iu3qbhd339r7hfjey/lm2UuRcpHTmqanf/n6vUvzD+8Sgfaj
17+XlZmphfzPc+/dWHTuTmhtm/trrt/XnyQ9i/MDANJD74N6YCK9PjQkJdKi
LVvSUyQcm0iFrUVFUiJN8kK4ccsKiePwe/8q3T8zgnE69m71ioQGT1pO3OLz
GbPrz8/zDd4fXPdcXHRf8ecbj2pv9V/8+Fz5H39VfAR4axFLGNxLpDOfDpZQ
AwDArPRE+sAOz3A4LCXSx1avTk+RcHIi3V9dLSXSlpaWZD35bPq6N2FnvrUu
Y9Hb5/MfesDS8RYUv87ngwZn3o2f1jTn5KMHuRv/Pmv/LjLh39dHSiIFADvR
E+nO0tKFHznn9dNoNPWbCMLZiVTkT6nVJX0v0fjVOFd+uV66Hq3HNhHD7De/
O3506IK7gt6fBhefSKXr/jNPUtOzyCVeZ5Yk1VepWmAlfwCA5YhEqv15f2Ai
FXKys1M0og8Lc3IiNe4lurWoKInPr03i1vvuxHHu13I/4W88PxD3Hn7vX5ec
fz4ZD7/7TuB/9Q/2J/PovzcRfqnfu0iJeo/lH/7lm9K0pjjLTaTTs+k3/jrL
i+8vepl7fUnSjMRmVwEArEIfHZpIIt1YUCBlg+Hh4TQUCScnUvGpx9g5n+S9
RO+fxC0vlT+7UdFyFsDU1tKUBr0k5Vj2fpozOVNfifQP2t9f+JHLTKTTd/zx
60ctdgiEvru9nkj7bv9uCVUAAExoUYlUPEY6IQYCgTQUCScnUmF9fr7U8AYG
BpL7Eu+dvPcSK0689en0vbCkpaD7FnVfvFQk0iTM/f/d+z/60sP6YqRzLMd6
TzIS6ec7gWpPsti3VEuk+pd/7aH99JECgG1oiVQcO0pKHvjgiooK6ZzY19eX
hiLh8ERaWVkpNbzXX3stic8vos7HV0/qT37f0kaT/d9/6JHlD1m8e/uf3n0n
II7+5BHP9sux5fUVxw1XeNC092Qk0rgl7pfUwXv3vg8OzGwCABvR+0i/8fTT
D3zwwZoaKRi0t7enoUg4PJE2NTVJDe/okSNJfo24pfK/9pXvaIu0iwiqDVx8
9u8+Wv4rJHcOTvwS90t+hvgc/qB5W8ueax+7eT7/IX1ekrZb6CIHQsg12G+i
GQA4lkik2p/3RPpI6w2bjCdxHR4swOGJtK+vT2p4T23fnuwXGftPT31Z7zD8
7Pr1bEz9fIMhGwqe/rp+EXzhHktppvwS+idFthdxNP6HuMjFSKflftpFT9UH
AJiX3keaSCJtbm6WgkFDQ0MaioTDE2koFJIansg2SZzcpHU2avFMOzb/9UwI
1a4Rn/yfE8l6IZO5N6pT/PvAUZ3xu6kuuE7UXGY3bBIRtOeXvxIvqj/Py/+8
qJGg9z41zCTS1qHFfC0AwNSCwaB2Skqk08nj8UjB4PChQ6mvEU5PpMLja9dK
bS/pk5u0S9ifbe/eOhQb7syY3cj+X/7NpotefvLe9x/6fBOlh3fNvzb+DPEO
aG9Igo+/z+/e17aFeuEX4+K/3nl+rd4XrSX/z939P+//7/m6PWd+BPEFz+6u
Zc+fCwA40qISaW9vr5QKKisrU18jSKRzTG4Sn4+SGEi0xKX3ka7Y5D7m+qM5
1ya1j1++rl+yN+4LIJl5q+9fI2vvoLzd6jzuahFU79K8b/Dq9zr0CKot+ipS
67wrrMZtL8XSTwBgMx/eurW/urrmwIHGxsYHPtjv90upIJE1o7B8JFLj5Kbn
Dx9O8mt88t6PvvSw3gU3346itjHeWXNvktH9C17N576hpPNcNI99PDk6Oq7n
TG1qmEie2iwkbT8CLVhqE/w/W8Fp9rL+Akv0S/OwxCOZaA8AjqV3qOrHxoIC
1UU5AonUOLmpuLg42S9y9629X4ifd9Mften1+ulpkT/jV1Jy9XyQ0Jf9uvte
iP1exxyZUE+bD+968WdDH/30WeMMplj0dnxf6/r/+D/uvvtX4qu0dLrAGx5f
8OH3EuyhBQDY0OjoqJQKsletUl2UI5BIw+Gw1PbEMTGRzDlH8dPJReI68A+/
sWscnTWmzzDK/OrmhAeF3gvtX/vKd4wz5aWd62ee/JEn46cvzWxfFReG9U+4
4v9oo0znFbupDUbNYEd7AHC8WCxmTAWTk5Oq67I/EqnwxIYNUtvz+/3JfQn9
unCCV7Etaub7ml35/7NBpF9sWngQ6X3iRp/u/tvb0lukjwTQD2Ow1/dU1Xcv
Fcf9U5zmKnj2sr7+uov7hgEAtmOc8izCkuqi7I9EKrjdbqntJXc5XBF7tEC1
+HUyLej6+XsjQhczXFYE9eDpr3/2hcZVSX/3/uW9BXon6r8fHBMfY+d8Em18
qXZ9v+eXv5pv+KhO71b9vSea6CAFABQXF0upIOmL8MCIRCqI/Cm1PZFRk/kC
s5sKadfrk/m0pvTR69/Tt09a1IKr2qR77QK6+HLpivz0bNqMfTw5MTEx35T5
+IcJd2f//wNeNW6W/SKXMAUA2FN5ebmUCq5dvaq6KPsjkU7PtdTD+vz8ZD25
iEnaCvlf/MkvHND/dm846KLXur9/paz45Zv0e7U3MHlv45i+eegftL+fpOcE
AFjb/upqKRW8wdb2qUciFSYnJ43DmEOhUFKe/NP+s9plaEeMUPzd+y98+bNB
pCKBL+05tBEO4kh0nv5SffT697S+XGP6BQA41g9PnpQiQXNzs+qi7I9Eqnlq
+3ap+b3Z07P8p40Nd2qrD9l/+GjcxKJFzrKfg77vauo2Wr377l9powt+74mZ
6VcO6L4GACTEuLV9fX296qLsj0SqOVZXJ03lXkLzi0aj982jv+P/0ZcelhYp
sgfxbV5/rUaE7ew/q+r55a/0AZz6LKFlLykwsx/TTCj96mbx7iU9LmqfFGbq
fPpl4igAIF57e7uUSPdXV6suyv5IpJqOjg6p+e3etWsRXx+7eXlvgZagXvzZ
7JZDs3FUW6QoRTWrFLdS0x/+5Ztj2kJtt6+V//FXtbnw/215GXw2It7V8q14
S//94FhSqtb89h9/ptUpYrMjhlIAABbj2tWrUiQoLy9XXZT9kUg1H9y4ITW/
lVlZkUgkwS//tP+sPsFc/Jv9Z1VaF1zt27dSWrYq+tV5cfz++tbZXDczp2kJ
U+zno614r+3NpI0pffDE+QSMXj2t/aTEB4e7rPUEAA4gzua+WYFAIJE/+4OD
g1IkKN62LQ11OhyJVCOa6Lq8PKkFiqab4JcbF2bX46g9M8/nm35qfaSfjId9
Z/dp0fHZv/soWS+ivXW//cef7d/wlSRNPrp7zfX7K0qf77v9uyQ8GQDACkKh
kHaCTnCHevF4KQ88tnp1qosEiVT37N69S59bN7tRkZ5InZB5xruPSW+XtnB9
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
9xtPiztLS1nrW0IixWJp0bSwsHAJvabaZf3KysoLra3iefh9BACkwZ//4AdK
+kg1B2tqjGfDi21t6a/EzEikWLLrQ0OvnDu3qBVNjem0oqKiublZfITkyj4A
IEX2V1crTKQjIyN5a9ZIZ8DcnBzW945HIsXyid8pj8dTWVmZvWrVktPpyqys
st27Gxoa3uzp4ZcUAJBEeiIVpxglBVy6dMl44nt27142Q9SRSJFEkUjE6/We
fPHFJV/T14/1+flut7ulpcXv97NQBgBgOZQn0lgsNufyNd3d3UrqMSESKVJE
NC2Px/Pcvn2PrV69zHQqjq1FRQdrai62tQUCgcnJSdXfHADASpQnUiEYDBq3
R1yXlzc6OqqqJFMhkSLVotHowMBAc3Pzt/fsWdTC+wsHVPHnpaWlxefz8bsM
AFhYzYEDZuiTfPn0aeMZze12KyzJPEikSCeRTgOBwCvnzpWXlycrnWqX+Csq
Kl46daqzs/P60BCTpAAA8fTZ7moT6czypNu2Gc9iCntuzYNEinSKH8Kt9Z1e
aG19bt++x9euTVY6zZidJFVcXPznP/jB2TNnent7g8Egi6ACgJPpiVTttvLi
JNjf329c1jtvzRo2OiSRwgzEL+kHN250dHScOH58R0nJEhbhTySjut3upqam
rq6uwcFBZksBgHPU1taaIZFqGhoajOepiooKh8+7J5HChCYnJ/1+f0tLi8iQ
hZs2JTedxl/rLy8vFxn4QmvrtatXh4eHo9Gow/8gAIAtiT/1eWvWrMvLM8P1
8UgkUrxtm7Hv5fyrr6ouTSUSKcxvdHTU6/W+cu5cVVXVxoKCFAXUjNm9hgsL
Cyu/+10tpvb19V0fGmJqPwBYndl6GwYGBrIyM42X85y83z2JFJZzZ2zs52+/
LT5L1hw4MOfHzORm1IzZ1TnKdu8+WFPT1NTU3t4uXl384tChCgBYsrNnzhhP
OoWFheIcp7o0NUiksLpIJCI+VHZ0dDQ0NJSXlyd3klR8LjUeGwsKXC6XllQ9
Ho/X6w0Gg+Pj46rfEgCA2UWj0bLdu41nloqKilgspro6BUiksJ+RkRG/33+x
re3E8eMiMRp3E05FZNUP8Z+P5uYWFxdXVlYeq6t75dy59vZ2n88nwqpjP/kC
AIxEBptzE5mXTp1SXZoCJFI4QTgcDgQCHo+nvr5efPxMxWyp+ES6wJGTnb21
qKi8vHx/dXVDQ8OF1tbu7m6Rnz+4cYPp/wDgNL29vXOeLNrb21WXlm4kUjiE
NOYzEolcHxoSfwqam5tfOHr0mbKy5V/uTySRPjCvPrl5syjG7XafOH78lXPn
Ll++3NfX97/6B8WvqqiZkasAYDP19fXG08HKrCyv16u6tLQikQK68fHxwcHB
N3t6REw9VlfncrlSOrV/CUFXRNbCwsLdu3Y9u3fv0SNHGhsbL7S2dnZ2ij9c
onLx68zKAABgLdFoVJxu5uyjCAQCqqtLHxIpsLBIJPLBjRsi8nk8HpEA//wH
P9hZWrouL095Up3vEJ+sn9iwYUdJybf37BHVnjh+vKmpSQTXjo6Oa1ev9vf3
i29ndHSUfawAwCRGRkbmHE6Wm5PjnFBKIgUSJF0xn5ycDAaDWlIVke9gTY34
kCv+pBiXmDPDMedwAvG3bmNBgciu5eXlbrf7WF3dS6dONTc3i++ou7tbfGsi
vorvMRwO0/UKACkl/tjOOctJ/KH2+Xyqq0sHEimwfPFhNRaLiQg3MDDQ29t7
sa2toaFhf3X1TFgtLFyZlaU8mi4tu4pDJO11eXniD8XO0lKRYJ/bt+/woUM/
PHlSpPGWlpYr5y90/c21a1evio/z14eGxB8W8ZE/Eoko/KEAgLX8/O235zxN
iBs7OjpUV5dyJFIg6eabfyTCqshpIrB5vd432tubm5tPHD8uop3IeBsLCszZ
ubqcEKvdJT71i++uuLi4bPfuiooK8f3W1taKb7yxsfGVc+cutLZeunTpypUr
fX19fr9fJPlgMKgF2snJSYYWAHCU3t7e+f6iNjQ02PtPIokUMAMRYkVeHR0d
FXlMfEwWCU1EtZdOnRLhTaS4HSUl6/PzrRtZl3OszMpal5c3k2m3bRPR3eVy
VVZWut3ugzU1x+rq6uvr9WTr8Xg6Ojre7OkR4Va8h4FAYHBwUMu34XD4zthY
JBJx5rrTSLXY51QXgnlpf2Mt8TPq6uqaL5Q+U1Ym/qCpLjBVSKSWYKFfJSdL
3VlJ63QVzyxi1fDwsMhaIneJAHb2zJkTx4/vr64uLy/XUqslBgak+Yjfv0Ac
4i16NDf38bVrRcrdWlT01PbtWtAVyf/ZvXu1rPvC0aPijW1oaBBxV7zJzc3N
IvFebGu7dOmSCL3d3d29vb1er9fn842MjCT9xw1rCYVCWksr3LRJdS2Y1/OH
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
+WdIkUaYrGLKzsoq3Lr1udJSi8VysqbmTEPDpUuXent7BwcHxYaGZAWwMIoU
AOTX0tJieHzGWK2rs7O3FRaazeYDlZU2m+3c2bOdnZ3vXL8+MjLi9XqN/gcG
YDCKFADkFwgE7kxNiTW22+3u7++/0t3d2tra2Nhot9urq6osFsvzu3d/++mn
Nz35ZHZWluEJGsWUlZkpNkMmk0nr1fNNTeJndLlc4kf2+/2cNgikPIoUAFKM
SLjJycmbY2ODg4NOp7OtrU0EXl1d3cmamhf37zebzTuKizcWFGSuWmV4iIbd
mxr6xcfXrhVj3lNRIX4Eh8PR3t4uspyDAYBUQpECwBx3PZ7Ju7c/vD3P//6j
1zM+Pu7x/iGpg4rWorsWRdGJH2d4aKivr+9Kd/eF5ubT9fWi+g5UVopwfWr7
dpGCYStRnmldXt7OkpIX9u2zWq0ivHt6etxu98TEBLtVAbVQpAAgErTz3Plq
01+lP7pZWyV+bcNrw7qi+ezG68eeTfvzNZRM3TeNGWvSaQcM3Bwbc7lcvb29
ly5dcjgcL9fWatVaVFQkmlCS3apz/565atW2wsKysrLqqqrGxkbR24ODg5Qq
IC2KFMCy9tmNV//iYbEOXJmRoUudv/5fU1/Ndqf/R19/eG75rNjxxh3jRi2J
YN35/X6Px6Pta21vbz939qzNZvvBoUMiCJ/avt3YZNVNWZmZoqL3VFRYrdYL
zc1Op3N0dJRP/wHDUaQAlrXPbnSeO9/9wccez+Qf/uXnf/PgI8F0WVH/XnAe
rVrnTiu+30aRLmpusn5y65bb7b529erly5fPNDScrKl5Yd++nSUlGwsKDM9U
MT2xYYPJZNJ2qPb09Ii6JlOBZKJIASxnus9wf9v4nWCifG3Da2P3vjb1j6a/
FP/5jR9e+aPX82FHU9VfP7vC+j/emuD+m3ETCAS0Xaz/7dovWltbT9fXizIs
Ly9/avv2NTk5ya/T4Kf/6/PzzWazGMz5pian06md+B8c9t3bH77/nks0dldX
V8d/ufbe2O3PvwhwVIDM7o6+e7n3/3DzXDlRpAphUZITW6WU8sEbX2XJw8/8
06df/O6N72ekp2t7RMUre3+muwH/fGc+IXqz94V+3efz3Rwb6+/v7+zsbGxs
PFlTs6eiYkdxcV5ubtICNTitzMgoKioqf/Y7BzY8JP6X+N2YO+djD323+4OP
7yb/3w6L+ZPn/csVBeLl+7frm1h65USRKoFFSU5/+JefV5v+iq1SSpkZeOmB
R4Id8revNZi/+ehjDx54m5dTSlqsvnP9eltb26uvvHLi+HGz2bxl8+bQo4Lj
FaVhv6774jd+eIUVtTzEBlQ7JzGNI8DlRpFKjkVJTp9/ERi+eIitUiq6q31G
H/zoVvx58N3fs9NbCcGXSTsMYGBgoKury+FwVFdVPb97t9jMxVKqYRfzsLOJ
Px/Jenzv3r2n6+t7enrEdpbPtgwhNqD/+XCx7gViMyotilRaLErSEjk6+pop
kq3SipNv8wm+WsSLNfdQ0nsv4qFu9o+mDFGG4+PjLpfrzdbWurq6QwcP7nrm
mYReCkBbFWRnZT1XWnqypuby5ctut5tzppLgd2/tubf8lhw79/f1BzY8lJGe
/uVqmc2orChSObEoyezzgdNf7jB5+JlTPx/6YMr3R6/n7u0P+07vC92j8uqv
PjV6vFga8frO3RV26gavYOqbnp4eHhq60t3tcDheOnHCZDKtz89PXKOuzMjY
UVx84vjxNy5eHBwcJFDjTry1vDv6bvcHH2t//2L4XHAXN5tRaVGkEmJRktvU
z7Y9cO8IiqdfHfAHT3X58i9/8rx/Lv/BuYecrfh+G3vYFHOn3/zNR7+Mh4ef
eWuCvdypb+5LHPz7zMyMyNSurq4zDQ339qb+h0RdpUoE6s6SkpM1NW1tbSMj
I3zEHzv9Mjt8jo8a5UeRSohFSWq/7RIvxGMPHvin+fac3T81JlikKx+winAl
aZTy5ZsObaH7V9fJxzL2uze+L34rNv/s3olUb1y8KALSbDbHa1fq3NP51+Tk
lJWVna6v7+vr83q9Rv/cKYHNqAooUgWwKElDhKW2Vdr+Xz9ZYDZv+1cnPT32
0HfnbVfI6bdd//6Rr1Lhq+vkY1m7K96nrHjS8sGUL/jJiEZE48DAwOXLl61W
a/mz39FdeSOKKNV9fUdxce2pU1e6uz0ej1E/vPLYjKqAIlUAi5JE7m2VtN2e
87m3O/T2teDHvlqRso9UGYGPzuU/GDxyW7vABddMgKjQyauvHL5+a5H55l49
7JEtpv21O0tKMletWlKUzve/xJ+FW7dWV1WJOp2YmEjKz50q2IyqgCJVAIuS
NMRW6cOOptev/WqRQ0P/+MvgVol9pGoZfc2kv7osFyPF/WVft2s0vLnL/oMH
tCN2xAN/c+PXIiPtdntZWVm8Tu0vKiqyWq1Op5MToxbHZlQFFKkCWJSUE26r
ZPSYEIH7N2wSL1n3Bx//bNsDweWOCyYgUjMDf/PgI1/uXT/59hd/vhGVtgYI
rgfGx8d7e3tffeWV8vLy2AN1ZUaGCN1zZ8+OjIwY+bPLjM2oCihSBbAoKSdk
qwQFfHbj1b94WLxqL/3zvXNJ3ju2Nvhp6eafjc2Z7+5vbvyanaYI69OrtdpF
+MWvzdFf/r8I34qKDXFPT8/f/fjHJpMp8o/4w05bNm+22Wz9/f1+//yHFi1D
bEZVQJEqgEVJNdFtlWCou1qCrmga0v5bvIhfLXdzLuH1+5b9WrVG9BkulhPx
K/F2xb8JrqujO/xYlKTb7b7Q3Hzo4MGNBdFfb2pNTs6xo0edTqd4QlZBbEaV
QJEqgEVJKXHZKiHRAp/OTE56g52p3YRLlKf2et3bgv/5jHvxtuKri33d/1j/
Gz+88n//ZMywsZDAR53nzr/+ZnuMf7a0tDQ3v7XUJVf7nYn7kR7j4+OdnZ0n
a2qKioqi6FLtWlJHjxzp6+uT5TKnhrxMbEZVQJEqgEVJHQnaKiHOgrV5/65b
2i3SdGcwBfy3G1c8FHwp1//D/7z7/k/Fo7Q6ZaeTjGYGzN98VDtdXbtaQhR/
Bl/xCvdSP924+9Vb0fr3EvEbMjExcaW7W9TptsLCKOp0fX6+zWYbHhqK+8CW
xpCXic2oCihSBbAoqSThWyXETnfn+rT7F+qZ+/ZBOz/6l7X5wR1Nwb9oR5lC
Rp/d+NHXH960adPGgoKo/9SkP7p5qW8ngzef/dqG18ZCb3QSbx6Pp62t7UBl
5ZJOjNJGuLOk5M3WVsPO0DfkZWIzqgKKVAEsSupI8lYJ0fG2H9Jd9fHgu7/X
vVj3ovT+qzn3EpH/+hQnSCS+y9qSny3wkXZa3GMPffetiaR+OB4IBNxu95mG
BtGZkXepmLKzsqxWq2iAZI7WsJeJzagKKFIFsCipwritEpbmsxuXK748Z0S8
WD9xT4U9xO7zLwLa8aXa5/vdH3zM4aMIJX5P3ju29l7mPfyMWPANfB/q8Xha
W1v3VFRoZ1ZGWKcWi2VwcNCoMScJm1EVUKQKYFFSgTxbJSxMe2nE6xX4dGZ6
enq+U+bnzibcvf/3pA4Uihi+eO+uwVF80J844he7s7PzhX37Ir+WVFlZ2fvv
uYweeMKwGVUBRaoAFiUVSLhVwgJCL1oORCF4lTCx4Ev4uyTStK2tzWw2R9il
5eXlqXmZfTajKqBIFcCiJD3Jt0oAEuHzgdPagl/7v6clX/A9Ho/D4RAb+kWj
NCM9/WRNzeSkV/KfaGnYjKqAIlUAi5LcFNoqAYiXu+//NE21yy8EAoF3rl+3
WCy6M/tCp3V5eZcuXZLlEqaxYzOqAopUASxKElNxqwQgRoHRdm2dfPj6rYXm
mxn40dcflnDlMD4+brPZ1uTkLNylu555xvjrl8YFm1EVUKQKYFGSlepbJQBR
EAu+doeFPf/9dwvOOPWPpr/86oZf8pmennY4HHm5uQtEqXi7LdrVsIuXxgub
URVQpApgUZJSymyVACzB7Wvmbz56b238H38xNTMzGY7H+4e7o+82PvfvRM6t
qH/P6BEvYmZm5kxDQ3ZW1gJduunJJ51Op8JHJc3djO6+wGZUThSpAliUJJRy
WyUAi7t97Udff3jRM4PS/nwVejE1/FaNQzE9Hk91VdXCx5ceqKwUazajRxqN
4NH+93fsNN02ejwIiyKVH4uSdFJ3qwRgXvcPv0mbc1fZsJ9xz53U2ocwOzvr
drsXvvfT42vXXunuNnqkS/TZjf/01ANzf4qX/jm1riSQKihS2bEoySbVt0oA
wvjzHdkWneYu+7t+od4uhEAg0NLSsvBJTxaLRYGdpbev/cTe8PqxZ8PuLlhR
cuxvX2tobn5LvVcodVGkkmJRktOy2SoBCLq/E2Dqw44msdZ9+1L962+2d547
v+ifYubhWfVuwaANeGJi4kBl5QKruPX5+U6n0+jBzkv8FHdvfyheiPleMvHF
c39f//q1X33+BbfYkwVFKiEWJTktq60SgLAivJlsaizyojk3bdq0QJeerKmR
/DT8sK+X+KL29dR4mVIGRSozFiVpLautEoBlSwSn1WpdIEq//fTTN8fGjB4m
UgFFCgAAFjAwMLCtsHC+KF2dna3e6U6QD0UKAAAW5vP5bDbbAjtL7XZ76tx1
FEagSAEAQCT6+/s3FhTMF6Xl5eUzMzNGjxGqokgBAECEvF6vxWKZL0p3FBd7
PB6jxwglUaQAAGBJ3rh4cWVGRtgo3VhQMDIyYvQAoR6KFAAALJXb7Z7vE/x1
eXni/xo9QCiGIgUAAFGYnJw0mUxho3RNTo7L5TJ6gFAJRQoAAKLj9/uPHT0a
Nkqzs7Lef48oRaQoUgAAEIvT9fXz7Snl43tEiCIFAAAxunTpUtgozcvNHR4a
Mnp0UABFCgAAYtfV1RX2BPz1+fmf3Lpl7Nh8Pp/3Pr/fb+xIMB+KFAAAxEVP
T09GenpolD61ffv09LSBAzt65Ig2kvb2dgOHgQVQpAAAIF66urrS09JCo9Rs
Nhu4f5IilR9FCgAA4qitrS3sMaVWq9WoIVGk8qNIAQBAfDU2NoaN0q6uLkPG
Q5HKjyIFAABxV11VFfrxfXZWliH3GKVI5UeRAgCAuPP7/eXl5aG7SYu+9S2f
z5fkwVCk8qNIAQBAIni93i2bN4dGae2pU0keCUUqP4oUAAAkyPDQUFZmZmiU
9vX1JXMYFKn8KFIAAJA4YU+9X5+ff2dqKmljoEjlR5ECAICEOlBZqSvS9LS0
6qqqpA2AIpUfRQoAABLK6/VuLCgI3VPqcrmSMwCKVH4UKQAASLR3rl8Pc959
UVFybuREkcqPIgUAAElQXVUVGqWNjY1J+NYUqfwoUgAAkARer/fxtWt1Rbo6
O3tycjLR35oilR9FCgAAkqOrqyt0N+nJmprZ2dmEfl+KVH4UKQAASBqz2awr
0oz09ETfWpQilR9FCgAAkmZ4aCj0fvd79+5N6G5SilR+FCkAAEimE8ePh352
73a7E/cdKVL5UaQAACCZPB5PdlZWMneTUqTyo0gBAECS1dXVhX52n7jdpBSp
/ChSAACQZJOT3tXZ2aG7SRP07e5MTX1y65aYfD5fgr4FYkSRAgCAJJudna2r
qws9mvTm2JjRQ4MxKFIAAJB8d6amQneTJuHapJATRQoAAAzxdz/+sa5IszIz
k3ALJ0iIIgUAAIb45NatlRkZuig909Bg9LhgAIoUAAAY5QeHDumK9IkNG/x+
v9HjQrJRpAAAwChhb+HU29tr9LiQbBQpAAAwyuzsrMlk0hVpeXm50eNCslGk
AADAQB0dHaGXgRofHzd6XEgqihQAABjI5/Pl5ebqirSurs7ocSGpKFIAAGAs
q9WqK9KNBQWBQMDocSF5KFIAAGCskZGR0POb3rl+3ehxIXkoUgAAYLjnSkt1
RXr0yJF4PXldXd2O4mIxXbt6NV7PifiiSAEAgOEuXbqkK9LV2dk+ny8uTy7i
VnvO9vb2uDwh4o4iBQAAhvN6vaH3b+rp6YnLk1Ok8qNIAQCADF7Yt09XpBaL
JS7PTJHKjyIFAAAyuNLdnaAP7ilS+VGkAABABiI+szIzE/HBPUUqP4oUAABI
wmKx6C4D9YNDh2J/WopUfhQpAACQxJXubl2RrsnJ8fv9MT4tRSo/ihQAAEhi
ZmYm9Iz7/v7+2dnZWJ6WIpUfRQoAAORRXl6uK1Kr1Rrjc1Kk8qNIAQCAPFpa
WnRFGnuiUKTyo0gBAIA8Prl1S1ekYro5NhbLc1Kk8qNIAQCAVHYUF+uK9EJz
cyxPSJHKjyIFAABSsdvtuiItLy+P5QkpUvlRpAAAQCoul0t3DaiszEy/3x/1
GfcUqfwoUgAAIBURnyJBdVHa398f9RNSpPKjSAEAgGz2VFToPrivq6uL+tko
UvlRpAAAQDYXmpt1RfpcaWnUz0aRyo8iBQAAshkZGdEVaUZ6+szMTHTPRpHK
jyIFAACymZ2dXZeXpzuU1Ol0RvdsFKn8KFIAACChA5WVuiK12+3RPRVFKj+K
FAAASCj0dqImkym6C0BRpPKjSAEAgIRCDyVdmZHh8/mieCqKVH4UKQAAkFAg
EMjLzdVFqcvliuKpKFL5UaQAAEBOe/fu1RVpY2NjFM8zMjLidDr7+vo8Hk/c
B4m4oEgBAICcRH/qilQ0atT3EoXMKFIAACAnl8ulK9LH1641elBICIoUAADI
yefzrczI0EWpSBejx4X4o0gBAIC0dpaU6Iq0q6vL6EEh/ihSAAAgrdpTp3RF
arVajR4U4o8iBQAA0mpvb9cV6XOlpUYPCvFHkQIAAGmNjo7qijQrM9Pv9xs9
LsQZRQoAAKQVCARWZ2fronRkZIRrQKUYihQAAMjMbDbrirStrc3oQSHOKFIA
ACAzm82mK9KXa2uNHhTijCIFAAAy6+zs1BWpyWQyelCIM4oUAADILPTkptXZ
2YFAIPJnaGlp+cGhQ2JyuVyJGydiQZECAACZ+f3+rMzMWO7cdPTIEe1R7e3t
iRsnYkGRAgAAye165hldkfb09ET+cIpUfhQpAACQXHVVla5IT9fXR/5wilR+
FCkAAJDcGxcv6orUYrFE/nCKVH4UKQAAkJzL5dIVaeHWrZE/nCKVH0UKAAAk
d2dqSlekYvL5fBE+nCKVH0UKAADk98SGDboidbvdET6WIpUfRQoAAORXVlam
K9KOjo4IH0uRyo8iBQAA8gu9l6jdbo/wsRSp/ChSAAAgv9bWVl2R7qmoiPCx
FKn8KFIAACC/gYEBXZFGni4UqfwoUgAAID+v16sr0vS0tAhPt6dI5UeRAgAA
JazLyxMVOjdKR0ZGInkgRSo/ihQAACjBZDJFd3d7ilR+FCkAAFBCdVWVbh+p
w+GI5IEUqfwoUgAAoITzTU26IhWpGckDKVL5UaQAAEAJTqdTV6Slu3ZF8kCK
VH4UKQAAUMLo6KjuONJ1eXmRPJAilR9FCgAAlOD3+zPS03VRemdqatEHUqTy
o0gBAIAqCrdu1RWp2+1e9FEUqfwoUgAAoIqysjJdkXZ1dS36KIpUfhQpAABQ
Re2pU7oijeQCUBSp/ChSAACgitALQB07enTRR1Gk8qNIAQCAKnp7e3X7SE0m
06KPcjqdImXFFOFdR5F8FCkAAFCFSEpdkT6xYYPRg0IcUKQAAEAVPp9PV6Ri
El80elyIFUUKAAAUsi4vT3co6c2xMaMHhVhRpAAAQCGlu3bp9pH29fUZPSjE
iiIFAAAKOVBZqSvSS5cuGT0oxIoiBQAACrHb7bpP7cVXjB4UYkWRAgAAhbS0
tOj2kR46eNDoQSFWFCkAAFCI0+nU7SN9rrTU6EEhVhQpAABQCJckTUkUKQAA
UMjMzIxuH6mY/H6/0eNCTChSAACglrzcXF2Rjo+PGz0oxIQiBQAAatlRXKwr
UpfLtcD8TqfT4XA0NjZyX3tpUaQAAEAteyoqdEXa1dW1wPxHjxxJT0sTU1tb
W9IGiSWhSAEAgFpO1tToirSxsXGB+UWRarN1dHQkbZBYEooUAACoRfSnrkhf
rq1dYP5gkba3tydtkFgSihQAAKilo6NDV6QWi2WB+SlS+VGkAABALf39/boi
3VlSssD8FKn8KFIAAKCWm2NjuiJdn5+/wPwUqfwoUgAAoJaZmRldkaanpS1w
kXyKVH4UKQAAUM6anBxdlHo8nvlmpkjlR5ECAADlFBUV6YrU7XbPNzNFKj+K
FAAAKOf53bt1Rdrb2zvfzBSp/ChSAACgnMOHD+uKtPPc+c+/CISdmSKVH0UK
AACUY7fbdWc2/cTeMN/MFKn8KFIAAKCcC83NuiKtrqqab2aKVH4UKQAAUM6V
7m7dp/Z7Kirmm5kilR9FCgAAlONyuSK/bRNFKj+KFAAAKCf0tk0bCwrmm5ki
lR9FCgAAlDM9Pa0r0pUZGbOzs2FnpkjlR5ECAAAVZa5apYvSO1NTYeekSOVH
kQIAABVt2rRJV6Sjo6Nh56RI5UeRAgAAFZXu2qUr0v7+/rBzUqTyo0gBAICK
9u7dqyvSK93dYeekSOVHkQIAABW9dOKErkgvNDeHnZMilR9FCgAAVFRXV6cr
UvGVsHNSpPKjSAEAgIp0NxIV03w3Em1tbT129KiY3n/PleRBIkIUKQAAUFFX
V5euSC0Wi9GDQpQoUgAAoKJ3rl/XFanJZDJ6UIgSRQoAAFQ0PDSkK9JthYVG
DwpRokgBAICKPB6PrkjzcnONHhSiRJECAAAV+Xy+9LQ0XZT6/X6jx4VoUKQA
AEBRq7OzdUU6MTFh9KAQDYoUAAAoasvmzRHe2h6So0gBAICidpaU6D64d7m4
4qiSKFIAAKCo8vJy3T7S3t5eoweFaFCkAABAUYcPH9YVaWtrq9GDQjQoUgAA
oCibzaYr0sbGRqMHhWhQpAAAQFEOh0NXpHa7fXZ2Vjfb8NDQtatXxeTxeAwZ
JxZFkQIAAEW1tLToirS6qip0tqNHjmj/t729PfmDRCQoUgAAoKgr3d26In1h
377Q2ShS+VGkAABAUX19fboiNZlMobNRpPKjSAEAgKLcbrfueqRPbd8eOhtF
Kj+KFAAAKEpkjK5I1+fnh85GkcqPIgUAAIryer26T+0zV60KnY0ilR9FCgAA
FBUIBHRFKiafz6ebjSKVH0UKAADUlZebqyvS0IuOUqTyo0gBAIC6tmzerCvS
0dFR3TwUqfwoUgAAoK6dJSW6Ih0YGNDNQ5HKjyIFAADqKisr0xWp0+nUzUOR
yo8iBQAA6npx/35dkXZ2durmoUjlR5ECAAB1VVdV6Yq0paVldnZ27jwUqfwo
UgAAoC673a4rUofDoZuHIpUfRQoAANQl+lNXpKJR2UeqHIoUAACoq6WlRVek
1VVVunkoUvlRpAAAQF2dnZ26In1x/37dPBSp/ChSAACgLqfTmZ6WNrdIy8rK
dPNQpPKjSAEAgLpcLpduH2nprl26eShS+VGkAABAXcNDQ7p9pEVFRbp5KFL5
UaQAAEBd4+PjuiJdn5+vm4cilR9FCgAA1HVnakr3qX1WZqZuHopUfhQpAABQ
l9/v1xWpmMQX585DkcqPIgUAA/1/pEC9mA==
    "], {{0, 760}, {902, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{902, 760},
  PlotRange->{{0, 902}, {0, 760}}]], "Output",ExpressionUUID->"4cd122d1-9e4a-\
4d92-9a1d-c08e975decf0"],

Cell[TextData[{
 StyleBox["53.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Where is the function continuous? Differentiable?",
  FontWeight->"Bold"],
 " Use the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e9904608-6924-46ec-9c66-afbfc55dde36"],
 " in the figure to do the following."
}], "Problem",ExpressionUUID->"ba72d970-e3da-4ea8-af80-1815abd4e7a1"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4ff0e5ad-4153-49ad-b84f-5fad482bfa75"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "3"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f72d8010-d81c-480e-93c4-ed74db7ae086"],
 " at which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c2d15225-32ee-4866-b062-a34dcee14e97"],
 " is not continuous.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "722d94f5-c48f-4a80-b9b3-6cdc3e9ac078"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "3"}], ")"}], TraditionalForm]],ExpressionUUID->
  "bdd16edb-92f4-4764-aecd-77b0de4e887f"],
 " at which ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b2073aca-3890-446d-8c5a-ad87fa51fffe"],
 " is not differentiable.\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tSketch a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "c57bec2d-3e9d-4472-83ac-985ced844275"],
 "."
}], "SubProblem",ExpressionUUID->"4559a0f4-b447-4af4-9cb4-6d5763789627"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6vvBY692xTPffmTfzzf8XfbkWqlhxtOOXpI1i3xd1rX+R9i70q/9suzElXT0
FVJoI05+OYfCCjtnkdqwjT/t/W/hEzDMjrdTqyIkezE2DakdGESd0LBtcUq5
+s9PTLuOFzxCuuTknxE+GEwNHRfH064/z/xhZvTS3jtm60fsaI87bfDbwDk5
sWvqZyx+y7ieuXi4ry/U6m4T327FsQhbaD++eXOqHwdIC1IbtiHK56uDw16v
VxvYqR1hphsPnNP6TyMke0z8l49t+rv/UZ5S4g5f+GQwoU/1fpGhv/u34//2
/7wvjvbN35hKyfuXH/inY+c+eL+tra29vV38GXZZFf1yyjmz17x5LYY2jF56
9/WG47+/LJ588WzIZ16mtvgsNPFTBJM99NPU+nfCpra+L152rMf/PEQjCm39
kGAKbaiF1IZtBKtCGc1+ffoEAmJXu+HmY9MuBZe/m8A+VmkahZLw3cpVU7T/
ndapXdygdTRri6sY70Grc7Pj6Vb2TxL3+cfXSrUC/5tL6oKLoE6se3bXzhbx
UaHnxGs/3/Doo1t+caw/wjg3/5XXsu7VmvHj96+l8Emm0IbqSG3Yj0wQER/a
hVa5Jpj+5D8RW9fOyNow0ircCvOP6mttUfbGkH3T9hO5Y2nN5QT2CvnsLS21
RbV+9va4nPqdVf7O8OR2nFrER7iLm2fWfWuq5Sld44VCG6ojtWFbujlEkTa9
FcHx8dYs2YGb+Qaml27FkuxYFy25OS3oHz2UyD7aunVQxdP+4q/3r//u/bn3
PBnPaPDpqZ1YM8Kh0IYNkNqwr4kLs1qxaSzuxm5/9XrBPRlbijCj9B9aYp12
fXPaMxZutFgMpt2JzO44PxSlK7UptGEDpDZsTN+xq9+hctLEmh4inlI+UNl0
+h5q8bN/GtOc9OlxmWBqj2t9ExP380xrnLOubxz/m1naoHTZOZ78ZyoKbdgD
qQ27kqORtXJPHPv/GFps/vntp8R3w148j9Htweuf/M71/17oupDK48JnA6Oh
mxTE+bPLUWHyZ79rZ0ukNU+mS01qiw8M+pI2OIA/Pvru9VSttUKhDXsgtWFn
00cjhy63ElwELLkZwX6ZUMY4SPJIejHPafl719EvYlurJDWpPT5wTj99LN7e
B3FjbbfiVKU2hTZsg9SGvV3cvXQqhqbv/yijIeZtsMJLR2oHZjonOaZ99JJ+
SRNR7caWmylKbf2WJSFrrcRGvDRTS7rd82R70qldU1NjfJ4ptKEiUhu25h8+
85LWQzptKlNwW6vk+0y9fT0Xzp8PHKnzye9cE1sBJmyyayDO1EtRauuWSUnk
uoF/dNpnraRHo1Fow05IbdicbrmV3HvLjvVPFLCy53TzB9eTn6ad2sHnUScy
x3of4rOKPnxj7gJIxRhy/5XXC+7RPinJlUvj7IO42fSTO7V7SH6sIIU27ITU
ht3d+O0js7SrtbsujcjFVUSUT67cZT/+SzUrtSvMcZW6+uHfiRW54uOQXOo8
oWJfuvnhf//mVDPiHoI+DYU2bIbUhq0FqmAZYfJYduKKKGblBdjnO2+a3bw0
mdoBJN5uZf0qrzHPF9P57C0Z08d/f/n438zS7mrvFyPxXECY+qCVncT2ZxKF
NmyG1IbtycvFE5db3+j2Xz6WHWHrCpsIdtlnTw7hjmf3Db98chL6t1NbhMiP
Q+e3P6RdJBcflnSpffM/L12JXD77x29/OtX+CIvaxYhCG/ZDasPuAkmkDfPO
+v6TO0rvzsvJMc7dto/gSuBavWxYWyYKf8hcuS0fx5yY/lER05OlceDhpvWt
l787PDbRDDlH/oVPBiNORtOt6pbktC8KbdgPqQ37u/2pNg1K20EydONOGxk8
9szUSLDpk91iMa1rO/LVad/IUN+NQS1RZXd21vp35MixkA03c+958uzt4DeC
l9Cjr/qiH/afTKe2KLQfnD8/JLI3b9qU6P0BlkBqwwGmbYph3P/LTnw+n37a
1LrW/4h7RPqXJ6ZCP1I/wmQi58xe82Jr19V/fkI+sfpRZ2O3v9KX7d9v6Bjt
/I34VzPuJKJvfzJjDyi0YUukNmxPLu+plW9Pu/5s18geD2alNgws5k1DptNt
8Zl7b1nY4d8hK43Lx9r7xdTKpcEHHdPyV7tiL/6y+2LUINZtVZbgVqFBFNqw
K1IbTqD1sSZwxVgxwaFoMiXnfLvm868TuhNdz/iP379mzE3tIrx2BHf1CrnZ
1HKv2o2Xnbgy40Nr9xn2oWNEoQ27IrVhe+LML1MmJWtjWpt//A8Hp3qlE1/M
fOxSzcrsKLO2Ry8dfrxQq8frPumPUNGPafuA5Mxec/z3l4dnmkqmleey0E4M
hTZsjNSG/QVX6xKpbd8J2lOuvblJ6wuY4Vp0ZIEKd/JKtbgr/aXv8cnV2wJG
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
Tktt4e3Dh/WnbjkAaXVxsfi6KL3ZrclSkklt8QmtublZhLX4bJaXkyNf6Oip
/b2HHhJ5zRWYhJHayiG1lePA1Pb5fJEGIInTuzjJs0CldcSb2h6P5+TJk1VV
VY+sWqWPae3vkVJ7eVHRocZGBismidRWDqmtHAem9njw3CKLL+PZW35RnPPF
OZyVNEwXJbX9fn9fX5/4iCUK6leqqx8rKzOOLtOHdaTUXltaeurUKfb+SAlS
WzmktnKcmdpC9F0X9aV3R0cHJZhZtNQWr5c4xMtRXl4ucvYHDz+cP2eO8eNW
2I9hYVN74YIFoiTv6ekx+0e0FVJbOaS2chyb2kNDQ4sWLowe3Np5Pi83V5yF
xElelHW9vb1mt91BtNSOZRTZjK9j4KXMydm8aVNrSwuDzdKB1FYOqa0cZ6a2
HHImInjGLAh7TVXEvaj4DtbvE2V4ZkYuvVJdXfHUUw48HsjPTzisQ47FBQUi
SsQLZ/oPZeNDWxJ24YIFpjeGI5ZDi4BHVq0yvTEcsRwPzp8vXzLx62Z6YzJ8
bK2oEPmbTPkm/7K6uHjnjh1NTU3ik0+ahqDHsn4XB4fpx4yj9Dk4ODgsdYgS
Y+PGjftra1M7EJ3U5uDg4ODgSOEhSoxHVq3Siu7Ujknu6Og4frLNgUf0dVHy
cnMXFxSsLi4Wn5TEM19XV9fc3Nza0nLy5Mn3YAbxEsiX5gcPP2x2WxCTJ7Zs
kS/Z1ooKfnGUsHTJEvmSNTQ0OO0lE/E644C06If4549v3izOVOnu4PY50vi4
X+vCqKmpOdTYKF4yEeXi2e7u7h4cGGBJHKthNJpy9gRHo4nTIKPRVOHM0WhS
VVVVvDGdl5MjTke7d+1iMHlmiFJafqyS87VFTPsmL2IQ2RZEaitnD2PIVePY
1O7p6RERHGNBvbWior6+3uVyMXE7w7RaO637ayNVSG3lkNrKcWZqizJtbWnp
jJO1H9+8uf30aXZ9MlFIrQ2LI7WVQ2orx5mp3dTUFGlFU3EsKyzcX1vr8XjM
biaotRVDaiuH1FaOA1N7cGDAuGC17LN+YsuW9vZ2H0tSWwa1tlpIbeWQ2spx
YGrv3rUrZC2I5UVFdXV1FNcWRK2tFlJbOaS2cpyW2t3d3VPFdW7u1oqKs2fP
MhrZsqi11UJqK4fUVo6jUtvn88lBaD94+OH6+vq+vj6zW4QZUGurhdRWDqmt
HEeldvvp06K47ujooOdaFdTaaiG1lUNqK8dRqQ3lUGurhdRWDqmtHFIbVkat
rRZSWzmktnJIbVgZtbZaSG3lkNrKIbVhZdTaaiG1lUNqK4fUhpVRa6uF1FYO
qa0cUhtWRq2tlu7ubvFBSxyPlZWZ3RbEpK6uTr5khxobzW4LYrK2tPR7ixaJ
l4x9J2FB1NoAAKiCWhsAAFVQawMAkAL+0f/vD+fbT58Wx/GTbcd/f3l4bDzl
O5FTawMAkJwbnYeeX3nf1A6n2p9P1p++FlzvPVWPRK0NAEDiRi+9XnCPyGhR
Aufe86QosT8bGB282Lqj9G6RreKLebN+2X4rZcFNrQ0AQKJuNP3kTpnOdyyt
+XRMfGVMBHRwq9OJbwXq7lm/DH4rBai1AQBIiP+Pr5Vqu5Pv/WIk5Lvj186s
vC8Q6OLI2iUK7hSg1gYAIBHBUJaRnVX+brhQ9l/cvVR2cIvj2Yt/Sf4xqbUB
ADPzj1692t/35WcDEa703h687vF4rg4OO2erbq3QFsXv064/B6+Kh/JfPqYV
4xGSPT7U2gCASERMtx/Z9/MNfzcxsCon546lNZ9/PT4toUYvvbZ9nbyBONa1
/od57c0g/5W9d8yeSO3Za471h/msEvgAc/vTl++cdrOw4R47am0AQBijl0Qq
yaHRWkUpjw3/fmPqZgPntFSSt8kqfmvAvFZnzmdvaT/1N5fURZ7edbN13be1
J2fZiStJzuCm1gYAhDF66d3XG47//vLVwWH/5WM//c59WnBn7Ts/kVDBZNfC
a+I68Pp3HJDaYxd3L536kZ9pjXLp2123buojTdJPDrU2ACAs/ySR0X98rVRG
tiwtLwe+f0NWkXftbPlsYLTnxGs/3/Doo1t+cazf54Cu7ZtNP7lTuxCR9UZ3
pNuJZ2/4zEvaZYrce55Mcig5tbaKbrldbzR3jad0vR2knLev58L5wPKGzc3N
x0+2udxXU762IVJLvGTilWpqamptaZEvWUqm6tjEZ29pqZ0ze83Z2+PX3twk
Yiur/J3hsYlzkRbxZrc1/YK91doTEiW1A/5wcCq17y1LMrWptdXiu/7x4ccL
xev1rcUN18xuDCLRlkXS9waKv4hfWLk0MaxG+83S997Kc2zdJ/2OiKEZ3brw
wqz7tKfoxV/vX//d+0Xl+J4zP9ncuiC7DOSz8XznzWhvkj8c1N5X4h0Vdtxa
7Ki1VSHOKnKUprwm45TxHuoZu/TWcyHdfCHHXTtb+MRlKV82v2rMa+2zVqCS
qv84sGKG002NqtJPdzK7VSYZvaT/DDPDROxgasd645lQa1ufyOujz/1tSOFG
alvSmDbsJPqRtaudq+UWMXzmpbzcXPm6lDz7cmPjwYb9L4kySp/a4th98abZ
LTWffh2wGYdg2Zp//MsT2voqMy+fokvt5Ndaoda2uKv//ETgt+NH2w/W73u+
8F6tBCC1LejrC7UTH6tmr3mxtevq1f6hoaHAdNfarSIXQqbP7P1ihOuu5hs4
t/6794uXQ46n0k2kvXnpref0qe2McdEzEO9w/XOy69LIzP/GpkKeikymNrW2
lYmz+i236z23eImDAzx0QxpIbeu5ceyHfxU4va/e+2lwcE4wAiZSwHf949cL
7tFfdxUp4NQ6xUIu1awMjKcKXAAPM9rg2pub9BNyL2e+fVYT/JCTnboFQxSm
eyqotaGRAzKn/l83pIHUtpwvTwTGmwUH54Q/lQUH82ipnTfrl67/inBLZEZw
GHBW+bthf5UCL41+xFGExa8cZuKjqTwRTVtrxWluf6r1a8eb2rsuJXWdjVpb
JbqXntS2GL+oy8R57If/6olyo8Fjz2ivYO69ZQ4dfGsd3QdnyuKbZ9Z9S75e
dyytuTzu+E9Z0ztzs/adN7tB5tF9oosrtZOf+UWtrRJS27puihok6/tPfjYw
GmmYWeCEf+2MdlUt+V9eJG+Gkke30DQ9GuLZeL3gHm1dEXnFz7mzIaYvCjfD
fO3ugyn8uE6trRJS27rGvmx+9Y3mrhl+HXVX1ai1rWCG2ln3KYsx5O66ddqO
kxPv4aSX+VLZtNXFo6d2YJ7C5Ked5LvGqLVVQmpblfgdFCX2zJO5dKmdd/c2
+rWtTJThl2pWapeCnT5TL7hThojp47+/fPxvZmknIidPhdDeHtkzbcEpbjk1
DPWZ1iTfS9TaKiG1VafrC8va1W52axCNqI/kK7Wm0eXcglKavBr8fGfggsP5
7Q9pF8mXnbiiS+2b/3npikOeq8BAYd3G2VGHPdz88L9/U7tl8kP4qLVVQmor
Tn+hLMnZH0inm52HnteKo+BwNQevQusfFTE92XUbSCXt84ysMYfHJtLqz28/
Jb7ywieDzrgu4R/3X3kt696Z58EFV1GbWNP4nifP3k72gam1VUJqq22sffM3
tJfPucN4LG1s8GKrfjkj+Xp9v6FDyybb840M9d0Y1Epm2Z2dtf4d+Y4NPAm6
keRTMRS8hH7XzpYBJ33AkTNH5GWHH78f9nfaL9djmbg8/tK55B+UWlslpLbC
/HJCN72BVjXWc+I1GUbGdchlj4Yjrv1OJvLE+n7BtRnz7t6m/+HHbn+l1Zjy
I81o52/Ev3LiTiK6kSpZxQ3h1uGZ+qyec//yN6+l4LeeWlslpLa6/KNThfa+
8w6p2lTiH+089PzB+n0N+1/6+YZHs3U7tcm/iz83f3Dd9i9cyErjMmvEh0zt
BsFPm2MXdy/VPzPyL44cZu+X6xjLQ5Tb098h4l31G61TbNmJKynpO6DWVgmp
rSxt1WK5MKbtT/7K8QV5J1NJlJOi9NYvWRmcnmz/7XEHjz2jv8IgjuCuXiFv
16mrvtqNRSSZ02JTyeUrtZVvc2avmXYZ7doZbRuarF3tqdqil1pbJaS2oiYX
60h+a11kku/6x/qVNGTXhtmNSrPRS9o+41H3Fp/a3k5ElZN3jZfBLbsSsoM7
KS/afvD4ybbXtq/T9pKT4yJShVpbJaS2ksbkTBk5ypTubMVcO6ONvEp+Z2SL
E+kjrzn4RoYEb8SLQv6J6xLBm90aH3dsZEvyefP29bTXbpXvFpHdgQvj9y9/
ourNM9dvp/a3nlpbJaS2gi699ZyxcxDq8F/cvVR2Tdo+tTX04CTAN+n24PWr
g8Piz+CHGX/Kn0xqbZWQ2qrRZraKyOZMqKjRzt9og9McktpIXvquqlFrq4TU
Voo2uHT3xZtEtqIC517dauSkNkxHra0SUlsdWoH2wieD9GWrTbcOLRPtYTpq
bZWQ2orQFih+7qM/RTvJ37rw8p2zRaxnsGmIl1/bZnHOt2s+/9rs5sDxqLVV
QmqrQES2HEc606IcN1rXfTvv7m3Jr0uMtNJm49519Auz2wJQaytFn9qPHiK1
rWiyDzRrz/tfDXuvXu3vuzHYP93VweFbbtev/2FWYHnnfefNbrGj3R683tvb
K16RiJdEJi+P37E0UGgzPgGmo9ZWiH7pPCcs06SegXPaosTakgsh60PKr2jr
Su3/I52kpvFfPqa9EIu2H/x0bHwsZN7x6KXfPjIrO/qOTkBmUWsrY/IEoh3B
/lBOI5YR7KSetoCzYQcK/bYUgUUOuWBiKv0a0fJ4sbXrs4HRwPf8o4MXW2WV
nXtv2Xvuvzhj90kogFrb6q6d+V/V+1/bvi5syZb1o+0v/np/Y+O/UHebbHLN
0pAjJLVDgvvH719jQLKJtEGD2ksjf7OWFxVpX3my/vTldM69BeJFrW1lfr/f
29fz7usNIpfbj+w78E/HxN/1f4ovHqzfV3/mc3FW4fKdqW70nHgt0ssU9k9x
YwYkm0r8vvhFQa3/SDzxger+5SXPvix+rb4a9spVps1uKjCFWtva/NO3IprG
GzzGWX7QAnw6sdyel8w6xGsxNjYuV6HsuzF4a2h08teNvIYVUWsDcDa/HB/C
ZXAogVobAABVUGsDAKAKam0AAFRBrQ0AgCqotQEAUAW1NgAAqqDWBgBAFdTa
AACoglobAABVUGsDAKAKam0AAFRBrQ0AgCqotQEAUAW1NgAAqqDWBgBAFdTa
AACoglobAABVUGsDAKAKam0AAFRBrQ0AgCqotQEAUEVXV9eFIK/Xa3ZbAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMT9/zm8avI=
    "], {{0, 660}, {658, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{658, 660},
  PlotRange->{{0, 658}, {0, 660}}]], "Output",ExpressionUUID->"215cd2b0-2add-\
4615-bb2e-cbbf5716baad"],

Cell[TextData[{
 StyleBox["54.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Where is the function continuous? Differentiable?",
  FontWeight->"Bold"],
 " Use the graph of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "6694425d-c4b5-4f08-8393-cfcd96fdcdd2"],
 " in the figure to do the following."
}], "Problem",ExpressionUUID->"9808ab9f-88cb-4bda-a74c-64ab135370b5"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "400b3b7b-709d-4112-9f9c-93da97ac445c"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "4"}], ")"}], TraditionalForm]],ExpressionUUID->
  "c582fc85-0a5f-44bb-9166-09266989c2e2"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "09089136-933e-4c33-9fb1-f7b6475f3cef"],
 " is not continuous.\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "191eeaed-0601-4775-b406-34cc4d5f9c47"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "4"}], ")"}], TraditionalForm]],ExpressionUUID->
  "688df2f9-c202-4107-86b5-7321b11041e4"],
 " at which ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "ce172c23-2922-4e6d-8619-57c12194b349"],
 " is not differentiable.\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tSketch a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "'"}], TraditionalForm]],ExpressionUUID->
  "92787cec-5641-4480-bb3e-10e944f6662e"],
 "."
}], "SubProblem",ExpressionUUID->"1180735a-08a3-44b4-9e61-f44c31144a0f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3X9wlOW9//+039p+6pxitQVpYrQIyFAaFEb0HBDxYAektqZpjdPod6KF
T8V4KKLogAdmPH+An1SsBzgBxpl49HxiFGNCdU7kkCo4YU6QVIkNncSQUWZy
gIRGkpEgiUnI5vPevZI7d/a+d7O79717X7v7fMxtBvNj987m2vt1v6/7uq9r
2srHfvnw1zMyMtb/L/nwy99s+McnnvjN07/6rvxP/tr1RavX/vZ/r1j75G9X
//aJv1/5/8knX/i6+s//72EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAASAkdHR1e7wIAAAhp65YtXu8CAAAIacHNN3d2dnq9FwAAwIZkdFZmZs3+
/V7vCAAASWSwr/vs6VOnLoT6uq9PvtrRfvbioNNneqe6OvMHP6ADHACAMAZ7
L/yt7a+HD71b84d1j//yLolOqXNlW/Kfp63f7OvvKM+9XH1Pxp3FdQPDPp8v
5qeWjJbHycvLc7D7AACkuFPFMyR51aYyWm0ZS3e1B3+vb7ixxPg2+UdG8QdO
nloyWh7k+mnThoaGnDwOAAApTMrkM90XBwYGuo/tW3nV1UZSS4ZuaO71p7NZ
V+1tV4/Ful2aR0qeUTJaPdHxxkbHvwcAAKnJFxBIZN9w+4G8708dK5k31li+
fbDzzSeMGjyj8I2uWJ9X0tl4nFdeecXR7wAAQBpQkf0/O+42kjr7yjVBV6Ll
3/6e6vYDUn37k3rP8Zg7rktLS9WzyLZ2zRqXfgkAAFJd+wFz//ajx76wfouk
c93DGdlZWQ/XfR7z80g6G0m9eNEiB3sMAED6kPL53L57vj3Wv138gbVq9vV3
lORclTVl+d7OoZjHfi9auNBIatm6u2LuRwcAIL107V1tBGj2pI1Ng8Pjw9qn
6u6MpaUxDyeTXDb62NV28OB7Luw6AACpzl8jt1Wab9oqOT3UP/57Pv/3VfJV
247xCNXU1BgZrbbnt21zcms2AABpZOjTHRmTjbAOngLlq2PrJl3t5P4s8dzW
YnNBLdt9+fnOdhoAgDTSsPHGsUvVG2tMNbXvzJ4C+eS9dV1OSmDJ5aCa+oaZ
M5n/BACAyPguHng6OytLlb3fvPGFVt/ovVo9R1dedfW4z0RPEllyOSipZWtt
baUDHACAiASmQFEBes3k/L2dI9Vuy+9/Lgn+wHsdTurf5uZma0zL9lp5uUt7
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
3vTxKmEuUamm6PUOAkkmKZK6ubk5VO+uGqzi9Q7qQo21sx4h1QS2FRUVhLVD
TU1NoZpibm4u46YUeRHCDPtUTdHrfQSSif5JfbyxMdSVL+5FslVaWmr7csn2
yiuveL13SUyaYqj792mKtnbv2hVqxF1ZWZnXewckDc2TOsyx8cn16+W8nRIm
iJp4vKqqKtRkj6l6p3m8SVMMNbeJNEXaYSjSFEMNCOe8EYiQzkkdJqa3btni
9d7p7vChd2dMn27bE05YRytMTDMN14TeP3Qo1Hz1hDUQCW2TuqmpKVRMp+0t
MFGRKq++vv6GmTOtL6CE9av0PUYsfFOkmo5EXV2dbVOUjaYITEjPpD558mSo
cTvUg1EJ1S8hYc2q1pFobW2Vpmh7sZV6MCoNDQ2hmiKrWgPhaZjUp0+dWnDz
zRwb3RJqSN612dlqoTGE0tbWNn/ePNszxtfKy73eu+Rje94o73R/U2QNOCA0
3ZK6u6tr0cKFXNJyV1NTk21Y//C669J8mo4wOjs7QzVFiWk6vWMTqpPn+mnT
6urqvN47QFNaJXVPzwXbibbo9HYu1JioG2bOlC95vXfaUU2Rjp14CNMU02Ft
HSAG+iT1wMDAffn5ocbteLtvqaGhocF2CO7cnBxm1jKTpnjvr35FU4yfME2x
ra3N670DtKNJUvt8vqKiIttj4/PbttHT6Ja6ujrbI+SihQuZ6k0J3xS93rvU
cbi2VpqitdeCpghYaZLUW7dsse1p3LxpEzHtrpqaGtuZKO5esYJZtoYDTdE2
pqUper1rqead6mrbppibm0tTBMx0SOrXysttj41S2hDT8VBRUWE7I8qqVavS
/AUvKyuzPWOUpuj1rqWmUO99aYpe7xqgEc+T+nBtre159X35+QMDA57sUsqT
ON69a5ftEVIqyrQN6/cPHZKmaE3q+wsKaIrxs2P7dutJYybzEAIm3iZ1a2ur
7cxFy5ct6+m5kPj9SSuhljpKzzuFaYoeCrUAXHo2RcDKw6QOdev0/HnzOtrP
Jnhn0tDQ0JDtIsJSV6bbna3SFG+95RZrU1xw882dnZ1e713qGxgYeLCw0Pr6
S1Osr6/3eu8A73mV1BIT9xcUWGNC6prPTrQytWBi9Pb23rV8ufUIOTcnx/O7
9hJGGtt9+fm2TVEK7bS9FpBg0hRt51KQptjR0cFfAWnOq6RW/V1Bh0c5hT54
8D3elYkkNaNUjra9vmky/jZUUzxcW0tTTCRpivPnzbOeMklTvDg4zNk70pkn
SV1VVaWOjUHvSmZ/8kRzc7PtJdp0GPBcUVFhe7G+jAWevNDU1DRj+nTrn2Pt
mjVe7xrgpcQn9fHGRjX5RlBSP7l+fWJ2AFY1NTW2gVVaWprCdaXRFIM27uL3
0DvV1aGaote7BngmwUkdauhOXl4eN8J46/lt22yH9KTq6DLVFK19rTRFz4Vq
iowuQ9pKZFJLnWI7imz+vHly2KSK8Za8/qtWrbIeIaWFdHZ2pthfRw1otP6y
kt1MZem58E3R670DPJDIpLZOcZAZWO3ueGNjigVBkurt7b1jyZKgP5CcWeXm
5kq0pdLfSKo26xmjaope7xr8enou3L54sW3nG0PLkIYSltSh5iKrqKiI6/Mi
KidPnrQdXZZKc5dJU7SdMrSqqsrrXcOYME3R610DEi0xSd3Z2Tk3J8f6ptu4
YUP8nhSxCTW67ODB97zeNRdIU/zxnDmMItOf/Dlq9u+3/qXkLOv9Q4e83jsg
oRKQ1GpmCes77u4VKxi6oyfbpc0k4M6cOeP1rjkiTdF24WmaorZslzaTptjR
0eH1rgGJk4Cktr08PWf27NOnTsXpGeGQJFpeXp7tuOikvkpoe3lamiKzYGlL
NUUuWCPNxTupGxoabC9Pp0ZXagoLdcFCws7rXYtRfX297VJZ7x86REzrLNQF
CykBvN41IEHimtQ9PRcWLVxoPTam0vCkFGYdeSX/K2EnZ19J9+eTpmh7Iz/D
k5KC7SBA1RS93jUgEeKa1GvXrLFOGZqbm8s1wWRhnYNC/poSeUm3EGRRUZE1
pqUp9g8zoXRyeG5rsTWspRBIuqYIxCB+SV1VVZVpmTL0hpkz29ra3H0ixI+k
mMSZNePkHCyJymrbyb0ZKZFc5Jyq4Cf32jZFr3cNiLs4JbUcA2fPmmVdhoNb
VpOOnFmpP2XQETJZ/pSy/7a35b5TXU01nSzktFD+WE2fX8hYYLPuG39KpLx4
JLW8rdRwzaCk5uw3Sam1z6w1qf53yoQaObzusceSqE8AwyMXKQYr3g5ev0Na
ZlI0RcCJeCR1aWmpcWA3kvofbr2VK0rJSw05CDpI3pefr3ne7d61yxrTixYu
TJOlt1OML0CaovVven9Bgdd7B8SR60nd2tpqvReGUZrJTqJNzrWsR0id1yJs
bm6+fto0mmKKCTWMn9XtkcLcTeqhoaG7V6ywvomS9yZcKFLL1NfXZ2dlBf1l
JQqbPr8w7OvzegeDDQwMLF+2zHrrAU0xBUhTtF1ghdGqSFXuJvWO7dut7yCm
akwZtrOMFvzk3v5AlHu9d+Oo6ciCklqaIkOPUoPtLKN5eXm6tUPAFS4mter3
tp7oyudd2VV4ThWqQeN5VB+4VkfI5uZm1RTNSS1N8eTJk1rtJ2ImTfHOpUuT
63IMEDO3klreOHctX277xuHYmEqMEAw6H5MQ9HrXRlhPJ2iKKampqcm2KdIH
jtTjVlLbLsNR8JN7h4cHOTymGNtrHPp0PGq+e3CR7ZIr/K2RelxJ6tbW1h9e
d13Q+2XG9Ol0NqakoaEh2/4THQbf2jZF6qxUJU3Rtv+krKzM610D3OQ8qSWL
bSec5IJRCvvshM2YhBtmzozf2qmRCDX3KU0xVcnBx/ZyjDRF5kJBKnGe1HL6
mnoLGSMMNQGF7fWOhwoLPdyxih27rbtEX2jKs+0DX7Vqldf7BbjGYVLLiat1
UmXGe6cD44bloL/+O9XVniRjR/tZaYpB+6PVUDfESahx4NIUvd41wB0Ok1pO
XK1vkN27drm+n9DQ8cZGa8ejtKjAtLGJDmtpitZ5TmiKaUKaonVanvnz5jGD
MVKDk6SuqamxxrSc3DLPSfqwnQtl44YNCd4NqZ4yLUusSsnPJZg04fP5/uWZ
Z6yHo82bNnHtAykg5qTu7e1dcHPwCnRyWisnt7w10oc0A+skzBKXDQ0NCWsG
sg9SPdEU01yYpuj1rgFOxZzUoc5g47Sf0NbhQ+9ay+pEdq1Iq7PugLTPxDw7
9HHw4HvWg9LyZcvo5UOyiy2pbWcHkhJbTmupYtKN/MWLioq8Gq6grpUHJbVq
igl4dujmkdWrrU2xtLSU6yBIajEkdagbqBlpmbY6OzvnzJ4d1B6unzbtzJkz
cX1eaYq2a7fV1NTE9XmhLWmKs2fNCuoAl6bI7dVIajEk9Wvl5dZjI3cvprlX
y8oS3yo8eVJo7pVXXqFVIMVEm9TdXV1zc3KCOhtnTJ8e7+oJmgvV0/L+oUNx
ekZpitZCnsmpoHpago5R8r+Ha2u93jUgRtEm9eZNm7y6IgnN2Y5eWLxoUZzG
8zy5fr11IBlXJDEc4k7/2xcvZmgZklRUSS3t3xrTdyxZQvuHYntHwI7t211/
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
ysyU13DdY495vS9JbMHNN6uX8eTJk17vS7KqqKhQb+eioiKv9yWJLVq4UDXF
1tZWr/cF8COpnZOkVq8hSe2EJLV6GUnqmElSq4ghqZ2QpFZNkaSGJkhq50hq
V5DUzlFTu4Kkhm5IaudIaleQ1M5RU7uCpIZuSGrnSGpXkNTOUVO7gqSGbkhq
50hqV5DUzlFTu4Kkhm5IaudIaleQ1M5RU7sirZJa3m4dHR1e7wUmQFI7R1K7
gqR2jpraFWmV1E1NTddmZ69ataqmpmZoaMjr3YE9kto5ktoVJLVz1NSuSKuk
Fps3bVK/7/x5857fto0s0BBJ7RxJ7QqS2jlqalekW1L39FwwgkA2aUL3FxTU
7N8/MDDg9a5hBEntHEntCpLaOWpqV6RbUouqqiojqVVYyybp8NzW4ra2Nq/3
DiS1C0hqV5DUzlFTuyINk1rcl59vDmtzZEuJ/U51NSW2h0hq50hqV5DUzlFT
uyI9k1p+2Wuzs0OFtWxzc3K2btnC29MTJLVzJLUrSGrnqKldkZ5JLSSIVfsJ
Fdbqq1J9V1VVnT51yuv9TSMktXMktStIaueoqV2Rtknd29t76y23WJM6KKyN
yJ4/b96qVat279pVX1/PYrVxRVI7R1K7gqR2jpraFWmb1MOBZeJtk9o2rM0F
+LXZ2XctX7550yYpt+M3CO3J9etz05JxYeLuFSu83pdkZbyv5+bkeL0vSeyH
112nXsbly5YV/ORethg2oyn+eM4cr/+eSez6adOMpuj1vnhgzuzZkYd1mIva
DxUW7ti+va6uTsptn8/nSlJLToXat3TYQr3sbGyJ32iHvHRs2m7hkzrTkiby
j+ysrDuXLt24YUN9fT1J7crr7/lusLGxsbHpvIVP6kxTmsyYPv2+/PytW7bU
1NR0d3U5r6yPNzbWpSWjo+Od6urDtbVe705SMgZM3l9Q4PW+JLG5OTmqKVZV
VXm9L8nKaIpyePR6X5LY/HnzVFOsqKjwel8STSL1hpkzIw9r65duX7x47Zo1
r5WXNzU1MZG4W9SIMnnBmYgmNnKWyIgyVzCizDnGfrsinUeUPbl+fVSVtfxj
9qxZUqQ8v23b+4cOSeGsHsetC9NQjLHfZ86c8XpfkhVJ7QqS2jnGfrsibZO6
oaEhwmugixctkkwvq6yUl4hQTgDu0nKOpHYFSe0cNbUr0jOph4aGli9bFj6p
r582TY5yxsAwMjphSGrnSGpXkNTOUVO7Ij2TurS0NMwgsTuXLpVv6Om5IPns
9Z6mI5LaOZLaFSS1c9TUrkjDpO7s7Jwze7Y1qaWIfnL9+oaGBq93MN2R1M6R
1K4gqZ2jpnZFGib12jVrMsffq7t82bKysrJAEQ3vkdTOkdSuIKmdo6Z2Rbol
df2RI8ZdVzOmT5ci+nhjo9c7hXFIaudIaleQ1M5RU7sirZJ6YGDgzqVLpdnc
vWKFHMpYaENPJLVzJLUrSGrnqKldkVZJffDge5s3bWpqavJ6RxAOSe0cSe0K
kto5ampXpFVSD3OzVTIgqZ0jqV1BUjtHTe2KdEtq6I+kdo6kdgVJ7Rw1tStI
auiGpHaOpHYFSe0cNbUrSGrohqR2jqR2BUntHDW1K0hq6Iakdo6kdgVJ7Rw1
tStIauiGpHbunerqO5Yske25rcWMoozZffn5dy5devvixSzrFrOamhrVFLdu
2UJTjNn9BQWqKbIWMDRBUgMAoDOSGgAAnZHUAADEyNf3RcuRirera/bvl49/
+cvH7XGYTIakBgAgeueOvrjutqv9AZqdlSWbCtOszMxHSqpbfW7mNUkNAEB0
+j4pyblK0lly+Zrv/aak7tOO9rPdx/Y99bPvqrDOnrSx5sLw0NCQK89GUgMA
EI1z5bmXq0T+5o0vfDToT2RfgPElf6E9aaN8yRUkNQAAEfP9z467VW7KVtwS
tE6ob7j9wG1X/0Ct953hL6xdQFIDACbm6+toP9vW1tYVok7s6z77t7a/Nn3u
SjRpLBDEKjczCt+w+219DRtvNC5bP3rsC+fPSVIDAEKR8K0s36Muv6rLspfd
9GzT4PgrsH2fvPpP/2gMrPrFvhPe7W/cGQW1vBQP131u+z2+E68bRXeINI8O
SQ0AsNH3SfFlU1T+Gh9VQt1b1zX2bV21my+foj4/0uW7tLQr9KMmt6FP1Wvi
/32nLN/baTNgzH8O89Ux9ZoY3+ZwHDhJDQCw0fdJxY7dB5pbznRflCJx5VVX
G0mdUfzBSE09mubGl/xfzStL2aQ+Xmr8st+88YX24VCju8/vu+fbxmtyU+Vn
/c6elqQGANgaMjEPo5KQavXXiOdUHl3xVMXZL/ubKkse/+Vdq9fufKv1vFt3
J2lmsGHjjWPd2o/sC9Ot3fL7n6uLBa6cupDUAICJmcrJrCnLD3411PHyryWM
MgrKJbBUzRj4OJiiMS3Ol+dervLXn9R7jof51osHnjYuB1zzvd84HAJOUrvl
i5YjL71xZDhkZwhC6j/bXH/kSM3+/ZWVb1a8XX2k5YzDnqI0JK+hvHSylVVW
qtcw1QfgJkj3sX2vlpWlbpEYja+OrZs01gH+1AvFed+fqjIoXRZuC1x9VuE7
YVIPHy8ZS+rJ+SS15y51/HnfyhnyGn5r7q52r3cmuRhT+qjBKsZbQBp2Sd2n
HBsjIc1v5/1jPXJGh5u8hn/46JwUOF7vYDJrq1QNkre2/zZh07XXCQc/p6ae
o+aL9RPcfnW8xDimyZvRduxZ5EhqJ+QguWPtPWOjLFJ4xKP7BlteKjKPQjE2
4zNXPFWR9ofHCbRV/J+MBTcHjecxXkb/af/O+sAxFlHz9XeU5Fw18jLm8db2
M1+qnvBCbQrq+8ToVZj4RulAUkca6xMhqWMjGa3uHxzXbknqSA22/P7nQSfn
1rz2v6Qba+gJD+Xigad/eN116oVaVrR5z6uv7dr2z3LOb34BZdvYcN7rPU1G
PnMT5a2tXDr6nLlpbWjunfhnUodvuK3SmPMkqqR2Pv8JSR2DU+Ur5RX7xrK1
e/7t2cfnTR6LFd7OkZH3uzEuZf0fP+5oP3v2y/6/tf215g/rjM5bI76LW3rp
BrfRVZv3/alq2G3T5xd8Pt/oq3S+5aUi8+E0lW+ZiZtLH+4ed8bIW1sZbXVu
3SacXIJOVEhqncnxsPvYPjXqyd9KG0t4O0fp3N4l3/G/XHcWfzQ601Hgo/8t
f6njz0aX48g1hbyy9Ophi8wnz97mH3a7s972NObMngKjWY7eUIOIjR84xFvb
ZOTNmzk6/0laJbX5RIWkTgpj7dP05+DtHJG2Sv+Yse/95q1QQ0Z7jhrT+2QG
1qOpG0ibwaURCozCzSh8w7a9+V8r89CXEDMpwZ6vr+7hDImhSWtLdt5/48go
X97aiqn7V81/4vUOJZZp9Hu0Sb2h2VHfIEntFEkdHV/Hy7+W9/iS/wzZ3qQ9
d+1dbbyq10zOf4uiOsjxkony9/x/3fMt9QJedtOz7i5qn9o633wiOytLWt3B
r4b+9MDXeWuPGfrUWJHZmDU0ncZ8jjsBjiqpuUvLeyR1dM7vXfIdtWxruOxo
P2D0Mjlv5ClpgvNz0+zEXD6IQqDh+Ufqvt8uxbVxUxJvbXFi5y+CBn86n9Aj
yYyfOjVwP3Xog1hjiYvlBkntFEkdncGmypL1f/x4gu8y9TJRU9uaoEY2neow
9jti58pzL88cu+NgrF+Ct7aaoEyi+UBzy/+dc6VxET/NBnyOm807kjnK3LqE
R1I7RVJHI7I3tc+c1NlXruE6dVTkRf7k2dtG2mTxB9zmFhnfmT0F4w+qJPWo
0VpS9fcac1+rtSdMb+rzn51oTe3TauOdlTnRcpZqzOfIOIdH9rFCh8dI6ngw
XQ+SAsfrvUkycjKvXrrlL9al9mHTRcaCwqYikaQO8PUd+d2PjM5eeXHUpfyR
DCp84+LolazP/32VfHLdh92penIov6Z54emwI0D81bfR8+B8kDxJ7RRJHQeS
NcahwOHdDWnm/NEX1xkvXWDIGbOJRmD0sv74u97SNKkHey90dnYa53gndv7C
fz9gXtnY4DHTCPBrvvebg18FXrFA9/gVT1V0pXKL80lT2ZEx2XxXhX0Em9an
HnuJHCCpnSKp3TdoHnObToNLnRjsPrZPzcNjvhF43u7/vhh+8B5GlzK03Hie
lkkdSGF/EwrMSqRmecq+co155Jivv8NIK9XGOo68JD+lbr1MeeruFdX5/9N3
O2y/59LR58a6Hf651vmTktROkdQu86kbri1dkQjFP0hP1TjW6Vj91dDG9Bqf
Gy01Y17W1AUlp4NaWjom9f/suDtoNlp5ZeRtaPoWn3mZZvN0gukwdtF/0msa
RZOxdJfdtEJjtYZdu4oFSe0USe0uX99YQV38AcVgBPw93nv+7dl/eeaZx395
V6ZpSTLj4wPvdfBK2uuqVSMibqr8zPISpWNSd+1dHZTUgdWygl4Zn5pX07zJ
C+jNHnvAZ8yHLJuU1eNbju/Sh7uNgtquXcWCpHaKpHaVMbOu6ookXyY0FNA/
OiOrr79DSmzznIeBGSpYtNHWeXVa6J/tzebqajom9XDfJ8Yiqmrh1BCdWoNj
t1dPWZ5Wa9T6AowJe+XXH9f1137AWCUnY2PNRZeu2pPUTpHULhod2ON8Odc0
d6njz+YpGtR1BK93SjtqKrzQN+yfN898kg6nOmqdFzHYe6Gn50J/yNv21XIw
g+rbLg5GePdl6lBhrS7iq2tMf//Yv1a8Xb1j7T3XZmebh4i4haR2iqR2zeCR
3/1InaJLTKfbe9997QfMUzQzhD7Y6ADmjQ3n7fPI1zdWU6fZPG/0ZU1IndX0
n22u+cM61ZAkr/2d3lMXrF67c//fBty97YKkdoqkdknLS0V2w1cQG/+R1hj2
w81uFucP/fyb6hzmR6uLNm/atHbNmifXrzdvDxf9buwKwpTlv33iCfV5OQ5/
lH5VJGypLggJ5b7us2e6L8pHVUe7fqpDUjtFUrvBmKxDYprzebdc+nA3SR3C
yMQUI3XQ+MFR5pHz5rFVxtXbdLgXCTGI37GLpHaKpHbMGEgZsh8S0fOf6ptm
/yapxzv/9u1/Zw1oc1IHpba5viapkWAktVMktTOq7lOTENKj6DLTpKzcmT6O
r+/Y/orKyjdtt6qqqoqKisryPY/Pm6zK6q/Nf2TPq69VvF0tX33pjSNd9H4j
sUhqp0hqB4xJdB99vz3coa/n6ObLp0iUJ3DXUoDPWHfv2m8/25TKczzGaKK0
HVTXstWIMtMIZx89P0gwktopkjpWEtNqzOQD73WEPWae23fPt7OvXON87tx0
oxaHkm3qfzR7vS9Jh7W0oBGS2ilzUufxdo7Y6CXUjC3vnv2yv6P9bKfFme6L
X7Qc2XbXFf4pMYs/8HqP9dLXfba1tVVeopAnOaNd35fd5C+o6a2NHkkNXZDU
DpmnlWMmqEi1HzAWmjFu+A0atyPpbHyUr5acHkrVpfRi4DvxujFiedLakkDP
9vje7b5PXr5jUmb45X4wAZIauiCpHRk9Hhpb4FoqR8WwAhedbdPZHNzmzd9Z
wWVWE2MYnjqTkW39Hz9u+jwwItnX131sn6qm/fcTtZ7nDCdWJDV0QVLHov3A
c1uLd6y9x7YM/MaytU+9UPzii69TX9sYnS90ws2c1D99N/yF7LSjRuJZb/6d
P2+ecYfRIyXVjCJzxn8nl3ptvzWX7jJ4iaSOls/n6z/bXLFj94sv7vTfuLFj
t/WjfGnn/kYJF3odLc41VZbIaUxl+Z4IP8pG4ownjconhbP5XHEktacuWFa0
Wdre2S/7ObdxytcnbVW9o+UlZZlveIikjp6anX7kbWv9aP4qgoxOvjcc+UeE
Yp7GsLOzc7D3QmAmQ+4hco2a21l99HpfkNZIaiB5jYayb5iTQyB1kdQAAOiM
pAYAQGckNQAAOiOpAQDQGUkNAIDOSGoAAHRGUgMAoDOSGgAAnZHUAADojKQG
AEBnJDUAADojqQEA0BlJDQCAzkhqAAB0RlIDAKAzkhoAAJ2R1AAA6IykBgBA
ZyQ1AAA6I6kBANAZSQ0AgM7a2tpOBgwMDHi9LwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAECC/D8VYrhn
    "], {{0, 654}, {654, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{654, 654},
  PlotRange->{{0, 654}, {0, 654}}]], "Output",ExpressionUUID->"def9a4e0-5cb4-\
4e34-b79a-d45cf65ed8f5"],

Cell[TextData[{
 StyleBox["55.",
  FontWeight->"Bold"],
 StyleBox["\tVoltage on a capacitor",
  FontWeight->"Bold"],
 "  A capacitor is a device in an electrical circuit that stores charge. In \
one particular circuit, the charge on the capacitor ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "635ea8cf-c73f-4d39-b38f-9dae5f4c56ec"],
 " varies in time as shown in the figure."
}], "Problem",ExpressionUUID->"a1606400-bb0e-4176-b087-2c93a5bbfab2"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tAt what time is the rate of change of the charge ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "d6482a88-786f-41fe-85f0-aa8e35fc67f2"],
 " the greatest?"
}], "SubProblem",ExpressionUUID->"10953aea-a4d5-4f8f-a220-538c8b660075"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "ce812f4b-e7d4-4289-9119-2517bbc5b155"],
 " positive or negative for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "13df085a-6274-4cce-a3e7-ef2d1fa40b1f"],
 "?"
}], "SubProblem",ExpressionUUID->"ea117f7a-8347-4c71-aa78-ebaae7639da2"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "2fdc83e1-b694-45ca-bed2-ae99e7ceda37"],
 " an increasing or decreasing function of time (or neither)?"
}], "SubProblem",ExpressionUUID->"2699b848-39f3-44ac-88dc-c5951e71fe0d"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tSketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "855c8d08-4eec-4c4e-a29b-b55e3e53a7b4"],
 ". You do not need a scale on the vertical axis."
}], "SubProblem",ExpressionUUID->"0fc0680d-6312-4235-a8a2-62f440563e88"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X9Q33d+2Pnt3XR6zR/pzaX5UZDADJY0VJFt5KU+pDBeecZ4VVfnIRvc
YyQrFlrZW7yKjFq0OVJZlqeDV2sPg9RwPXxhRhPJugwpakOL9pgrctAkpPKk
RCZh98qWP4r32zQ24o98D+1+t/6i+9hsWPz5In59f3y+Px6P+azHK4vv+wVC
8OTzs6r11C+/9N994Qtf+Mf/Q/CPXz72jQOnTx/7377yPwb/p/nX/vE/evnX
Tnz14K/9kxMvnzj9P7f+98Evvh7849Xgf5/++30AAAAAAAAAAAAAAAAAAAAA
AAAAACgc8Xh8cXEx6ikAAChIQUn29vZGPQUAAAVsX339vYWFqKcAACCTfnRv
4S8XfhCPx4N/ZnWhjz/+uOzv/J3x8fGsrgIAQA4k//zPPvjd/+PQi7/6Sz//
d4LGW97+2uMvtP/m//nt781nY9GRkZFgiUsXL2bjxQEAyI2Pv/OH//zVrywH
5Pby8pU9ufyLf+/kb/7Zj+5n9tqZrq6u4MVfPHo0g68JAEDu/OA7v3OycWU3
tl78vT+a/i8/urcQv38/+cPYn3z7d1v/p59f/q/bfrb5X3zvBxlMyl/5yqcd
+8iePZl6QQAAcuaTP/7fVx7a/sJvDP7Zj37yXxc/89m/zfzbX/4bK5vzwncW
MpKUyWTy4erqpdecnZ1N/wUBAMiNT+4n/7Tv5MpE/Ce/96cPSsTg15M/jPU8
89M/2Uv5M8dH4hkYY2pqavk1rw8OZuAVAQDIhY//Q8djK2Py9O11rrUJkvKT
f39h5Zt84dKd9Oe4cuXK8gt2dnam/4IAAGTfx//6+N9aWYb/8Hc+2Mi+xuQP
Y/9X7d/K7C7KV0+dWn7BZw8eTPflAADIungoJr/wG4MbrsL49f/lb6582y//
u1iaZ1E2NDQsv1plRYW7mgMA5Ln/1H1oZRBu+9nmkb/40fpv9pkgHf9zz7Of
a9FfH/nkfnLLSTk/Px+6JdH7t29v7aUAAMiFyd8M9duT/+b7mzpk/WH///q5
nnyqN5bG7sn3bt4MzeNB3gAA+Wtx5uIXfvZz9yf/6W/88Sebeol46CqeLzz1
W+n05NtvvRXqyZdOnNj6ywEAkDWLi4t//tsvhOLty/8utsmXib/73E+tfHTO
p4fL07gkp6WlJTTS3trarb8cAADZ85e3Vz7jZnnn5CZPfYyH7mqezv7JYOma
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
AACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACk
Q08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08C
AJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAO
PQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkA
QDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0
JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAACkQ08CAJAOPQkAQDr0JAAA
6dCTAACkQ08CAJAOPQkAQDr0JAAA6dCTAEBIMplMJBL3Fhbi8fjdubkgEmKx
2Ozs7Mxnpqenp6amJicnJz5z+4/GA7fGxn7/5s3R0dGRwI0bw8PDQ5+5PjgY
bAMDA9euXXv36tUrV65cvny5/6+809cXbL1/5dLFiz09Pd2fefutt4LtWxcu
BNs333yza4U3zp9f+ufS9vq5c0vbudde2/gW/P7lVwhtK9daGmBpmO4VgjmD
9yvqP6h8oScBIA8tLi4u5VzwDToIuaWEW4q3oNyCZAuCLeiZINKW8iyIsaBw
guYJEujs2bOdnZ2n29tPnTzZ1tZ27NixF48ebWlpeb65uamp6dmDBxsbG586
cKChoaH+iSf21tY+smdP0AM7d+yorqqqrKhYCoPNbuVlZVv+Deu+bW62zY4R
fDCj/jTJF8s9GXwKpbm9dOLEusu9f/t2+gsF25eefHLdtebn5zOyVrAFf6PX
Xa6uri4ja33wwQfrrvXCkSMZWSv4aXHdtYIf0zKyVvD1bd21gnkyslbwZXPd
tYKvyRlZa199/bprBZ8/GVkr2ILvLMG3mLWXC75BZGSt4G/ruu/a8dbWjKz1
7tWr6671zTffzMha5157bd21gu/RGVkr+Pa97lqTk5MZWeuLjz++7lqJRCIj
awXbRnZBBLmSkbXGx8fXXetrL7+ckbWCKlt3re7u7nVfJ0iyhyorgy34l9C2
fdu2pa1h//7g+2bw9TxovOcOHQoCL/jLG3wreezRR2t27QreNvd1ZNvs9itf
+cq6nzAlYrkn09828k08+LKQkbWCv3HrrnV3bi5T79pGejL44S4jawWds+5a
wRefjKwV/FS77lrBD7kZWev1c+fWXevqlSsZWWsj38SDj3NG1gp+rl93rb9c
+EFG1gq2jfRk8LcjI2ttpCePHD6ckbWuXLmy7lrBjzYZ+ebY2dm57lrBjzYZ
eb82su8i6MmMrLW7pmbdtYKezMhaZRs7pBX8tJWRtW6Nja27VvCjTUbW6u3t
jcVi09PTwZeIT/cB3rgR/HBx+fLl4Nfffuut4JPwTEdH0MmZ+jDaCn0Lvh2v
+8lZIgq0J+ufeGLd76pBT2bqR7MN9mRGlttgT2ZkrXzryXevXs3IWhvpySCW
MvIxXLcnl45YZeT9Crb5+fl13zU9ufbWubGezMhaG9l3Udw9mZEPYy57smzF
Pj0792zrbnpy2XJPzs7OxtOzkehKJpNprrLxtYLv4xlZK7CRj+TSWS7pCz5E
OVsr+Oay7lrB7ym4tXwqZmStEv9UzMi7lm+fioGMrBXfwH7y+1n4VAxe8KOP
Yt/7j98dHx8fHh4OfiLu7e391oULnZ2dL504Efwg+ezBgw379wc/3WfkYLHN
tu62kd0XJcL1OACpNtJLZMTSD1wzMzMTExMjIyMDAwPv9PV1dXWd6eg43tra
1NT01IEDe2trq6uqIo+HEty2l5cvnRG6u6bmF3fvfuzRR4M/i7q6un319Q0N
DV968sngT6fx6ae//MwzQcw/d+hQ8Of1fHNzsAWhdeTw4RePHj127Fjw5xgE
/9defrmtre3rr7xy6uTJ0+3twRb8ES9tnZ85+5lzr70Wusj6m2++uXSF9YMu
sg5cunhxja3381b+p57PW/nKD7q6fOVl4Bs5tlIi9CQA2TM/Pz89Pb20R/Hy
5cvBt+mgHIK0CJIjSJFH9uzZvm3bcr04xJy6BS1Xs2tX8IEKKq5h//7gg7ZU
bsEH8IUjR756/HgQaa+eOrVUZUsNtlRZfX2X+vv7g+AJEv364ODQ0NDIjRuj
o6O3xsaCP473b9++c+fO1NRU8KcTxPzs7GwsFrs7Nxf8ecU/29297p789H/m
Wn6Fzb7UFn7/sk29IRunJwHYsqA9lnIxKJal/Yqn29uPHD7c2Ni4t7a21I47
Bz28c8eOoP321dcvhd9S9b104sSpkyd//RvfeP3cuW9duHDp4sXgYxWU3o8z
b2QkaLwg8CYnJ4MPZpB2wXfk+F+dw7DlBFq11gQVWaInAVjD0g7G927eHBgY
WNq7+NXjx587dKiuru7h6uo1yiryutvCtn3btt01NcG7FtRg8D62tLQcb20N
UjB4r5f2+wUd+O7Vq0sRGFT0nTt3gg/O9z/88O7c3AZPYd0I1UfB0ZMAJS6Z
TMZisYmJiSCTgl564/z5tra2pqamffX1BX3W4s4dO/bW1n7pySeDMjxy+HDw
Tp3p6Ajeu56env7+/uuDg0tNODk5OTMzE3wTXA7CpZyzWw82Tk8ClIi7c3NB
Ow0PDwc19fq5cy+dOBGE1hcff3zlGYx5vu3aubOurq6xsfH55uZg/qAPu7q6
ent7r165EsTwrbGxO3fuBHE4Pz//yf3k2kEoESGD9CRAMQkyKfh6/v7t29cH
B3t6eoLiamlpWXpqUt4eg66sqHhkz54vPflkU1PT8dbWpUp8p69vYGBgZGRk
YmJieno6SMSN3Otp+YOQ1Q8yEKInAQpUPB6/c+fO0NBQb2/vcjfm2yUw27dt
21tb2/j008F4bW1t51577dLFi+9evTpy40YQvTMzMw+6m6UmhAKiJwHyXFBW
sVhsfHw8yLCurq6vvfzyl595pmbXrshbseyz+xM+9uijjY2NRw4fPt3eHoy3
dGpiMO309PTduTlZCKVATwLkleV0fOP8+eOtrU8dOBDtRTFLOxifPXgwGKaz
s7Onp+fatWujo6OTk5PBN44HPUdJRkJJ0ZMAUbm3sBBU2fXBwe7u7ra2tsbG
xoerqyN5fnSQrA379z/f3Hzq5MlvXbhw+fLlkZGRDz74YI1iBFimJwFyI/gy
Oz4+HqTa2bNng3LbW1ub+z2NdXV1TU1NX3/lla6uritXrgTRODU1NT8//6CZ
7WYENkJPAmRD8EX11tjYO319Zzo6njt06Bd3785ZNz5UWdmwf39LS0uw9KWL
F68PDr5/+3YsFvvkvj2NQFboSYD0zc/PL+177OzsbGpqWv7SmtWtvKzsi48/
Hix3ur29p6dnuRvvP+B2i3Y2AlmiJwE2K5lMTk9PB/3W1dX1wpEjQdRl+1zH
T3c5NjS8ePToudde6+/vHx0dDQbY+P0YAbJKTwKsKx6Pv3/7dhByr5461djY
uHTBdZYasrKiYikdXz937vLly7fGxmZnZ10UA+QzPQmQKviS+N7Nm5cuXnzp
xIl99fXZ2/H4yJ49TU1NZzo63unrGxkZmZmZkY5AwdGTAPc/e7Z1EJA9PT3H
jh1bvvI6s3sgg1cL0vTFo0ffOH9+YGBgYmIiHo8vre7MRqCg6UmgNAUtd2ts
rLe396vHj9fV1WV8x+P28vKG/fuPt7Z+68KFoaGhqampewsLy6sLSKCY6Emg
RCSTySDqrly5crq9/UtPPpnxsx+DKH3hyJGurq7rg4OTk5PqESgdehIoYnfn
5kZu3Hjj/PmmpqbMPrUweLVnDx4809HR399/+4/G4/H4UjRKR6AE6UmgmAQ5
NzU19e7Vq6dOntxXX7+0EzIjuyIfe/TRI4cPf/PNN4eHh2dmZkKLRvX+AuQD
PQkUukQi8f7t25cuXgx6r2bXrkztgQxy9KUTJ4KXfe/mTV8hAdagJ4FCdG9h
4dbY2LcuXMjggey6urogIHt7e4NXXj5+DcC69CRQKIKGHB0dfeP8+WcPHty+
bVv6AfnInj0vHj3a09Pz3s2bd+fm7v/VkWslCbApehLIZ0v7Ibu6up47dGh7
eXmaZ0JWV1UFr/P6uXNDQ0Ozs7NRv3MARUJPAvkmmUxOTEx0d3c3NTVVVlSk
fxS7ra2tv79/cnLSA68BskFPAnliZmYmqL7jra27du5MJyCDBH324MHXz50b
Hh4OvrI5eA2QbXoSiFA8Hg+q70xHx97a2nSOZT9cXd3S0tLd3T0+Pp5IJJwG
CZBLehLIsSDzJicnL1282NTUtL28fOlL0BZiMvjydezYsXf6+u7cuZNMJtUj
QFT0JJAb8Xh8aGjo1MmTj+zZs+X9kLtrao63tvb3909NTdkJCZAn9CSQVTMz
M+/09T3f3LzlK2t27dz54tGjwYtMTk4mk8mo3yEAwvQkkHFB9Y2Pj79x/nxD
Q8OWr6lpamrq7u6emJhwLBsgz+lJIFPuLSyMjIy8eurU7pqarV1c89SBA+de
e210dDR4qajfGwA2Sk8CaZqfnx8YGDje2rr03MPNlmQQn197+eXgFWKxWNTv
CgBboSeBrbk7N3f1ypWWlpYtPPowaM5nDx58+6233r992+FsgEKnJ4FNCb5W
XL58+fnm5uVb/WzqypqlXZFLD8sGoDjoSWAjggIMMrKpqWkLJ0Y2NDS8cf78
0p3Go34/AMg8PQmsIR6PDwwMbOGgdpCdQXy+09c3MzNz310iAYqangRS3VtY
GBoaOnbs2GZvGlldVfXi0aPXrl27OzenIQFKhJ4ElgUFOD4+frq9feeOHZs9
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
AAAAAICh/B9ZscP2
    "], {{0, 896}, {880, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{880, 896},
  PlotRange->{{0, 880}, {0, 896}}]], "Output",ExpressionUUID->"8aa10277-2ae3-\
4e73-bc86-f69589b05eb0"],

Cell[TextData[{
 StyleBox["56.",
  FontWeight->"Bold"],
 StyleBox["\tLogistic growth",
  FontWeight->"Bold"],
 "  A common model for population growth uses the logistic (or sigmoid) \
curve. Consider the logistic curve in the figure, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "e942c76f-063d-4d5b-987e-c8de3d6ac13b"],
 " is the population at time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "6c9a6e24-ce26-4aea-a995-b32b70165031"],
 "."
}], "Problem",ExpressionUUID->"2dbac501-209d-4c93-a5c5-c3ca99bb13cb"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tAt approximately what time is the rate of growth ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "'"}], TraditionalForm]],ExpressionUUID->
  "254b9f36-ec1c-4c10-a9b1-273913d27b60"],
 " the greatest?"
}], "SubProblem",ExpressionUUID->"51ba8696-0d2a-4db7-8f2e-394fd3231110"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "'"}], TraditionalForm]],ExpressionUUID->
  "1227e1ac-d127-46cb-b679-2fd06e80d1e5"],
 " positive or negative for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "c40941d9-5686-47ae-9528-6384f9c2c676"],
 "?"
}], "SubProblem",ExpressionUUID->"be45de3c-84fe-4caa-af32-5240009fa03a"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "'"}], TraditionalForm]],ExpressionUUID->
  "7099445e-779c-4286-aaf1-aedf25b69e86"],
 " an increasing or decreasing function of time (or neither)?"
}], "SubProblem",ExpressionUUID->"85a3e9a0-e685-45b5-b6ab-42e3a20fe389"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tSketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "'"}], TraditionalForm]],ExpressionUUID->
  "ba50da21-8795-48c2-9852-f9482f892737"],
 ". You do not need a scale on the vertical axis."
}], "SubProblem",ExpressionUUID->"eed06e07-87b8-4f33-8427-a10b15d2636e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X9snHee2PdFiqRF/gia5teFzEgsuZRA2ZRkaYmt7NCxbIO+AlQK2Wu2
J8vuSq7kZcBol8pZWirHA2SUV996K1T2ginltXCudomAp8pgDvSFd2C9RQfY
DQEmoVoGyORKgPAyuUmoZSeHYZLJLN1nlwefdp4hOSKH850frxeeE2RKx+dD
LUm99X3m+T7/5fmvv3jxT33hC1/4O/9Z9MOL566evHz53NBL/3n0Hy9f+jv9
b1y68D/815d+9cIbFy7/V+f/k+iN34x++FvR//3s558BAAAAAAAAAAAAsDce
rKyEHgEAgJoxOTm5uLi4vr4eehAAAGrA8PDwxMRE6CkAAKgNp3p7r165EnoK
AAC29W9+OPkPJktwb3Lyu5Nz9x/k0tn/UN4Jcrlcy/79PT09rlwDAFS7f/G9
pr/6V5ubmrb9MdHcHP248ZO/cfl//p3Uav6zn5ZlhLm5uY13m81my/IOAQDY
C+s/F/3k3/3kX8+/P7gRhw8fX+j9+ne+/9v3Jicn/6e/NfDEX4r/6u+nc7sf
49bY2MY7TCaTu39vAADsqY2AzH/209/9m//pw3GY+HPfXPiPf/Kr0fGHc/+g
oCETf35g+o92O8DX3nhj47195733dv/hAACw136WiOt/cPMLv1CGX3j7RwUv
RPzZf/77f/Jrf/Yv/8Jv+9pHD3Z39q6uro13de7cud29JwAAKuVf/u7pv/hL
nzdhc1PTN/7RatHfmP394Yfrsfkvv/C//X87P206nf78XR3u7Nz5OwIAoILy
P/rWw0341/7CuX+U/6z4fTG/2JnR0f+Pd56PH09NPfyulpaWdv4xAABQEVEl
/uOrTxRcj9709Yz//p9848/9lXLV41vXr2/c071xfHTv3o7fFQAAFbL+B2//
6V94NePf+J0fF/+NP3/pYxnr8cXTpx9+V8PDwzt+VwAAVMi/+N7DC4DNv9T1
3X+V3/Q3L/32X/8rf7Us9ZjL5dpaWx9+V6d6e3f4IQAAUCkPJi4+nHB/5siN
5U2e+vKztcf57xTcNfPbxW+v2d79+fmCPST3JRJra2s7/kAAANhz639UsNPj
F97+0Ra/efz1zoLU/IOdnvn27dvxLcpnZ2d3+v4AANh7/3b2/H/xJ69j3GKv
np/5v7/78FMLNy5b7/j51JcGBuL1ODo6usMPBACAvVewV0/izw9ssVdP4Vbh
V/9h9Dt3XI9PnjgRr8eLFy7s6uMBAGAv/fORvx4PwoLfU/RB2F84fWvH16wj
D1ZW4ukYHcePHdvNhwMAwN756dq/erfzLzx8Jfqv/YVz3/n+b9+bnIyOv//3
3n3r13/tjefb4o3334797mZ31pTozp07ResxOubm5sr08QEAUDY/u+L8L3+3
YPudjZc+PryBT8HxQv///Dup1d1csN7Q09Oz2SkuDw6W62MEAKCMHkxc3JdI
PLzT49/6H//u337tv3/x9Olfef5UdEQ/+ZsXr7z+d//X73z/t3/4z5fT2f9Q
lvPG9+p5+Ghrbc1kMmU5EQAA5ZL/7Kf/58UvbLtXz8bLINd/rlynvnrlyhb1
GB0ffvhhuc4FAMDu/fyZg/+s4B7qb/yj1eJ3W5dVNps90N6+dT329PTs9RgA
ADyan2/e+Cf3y/yll38/navAace///2t03HjuD8/X8bVTgAAdun//V9OFezA
s8vbqEt0qre3lHp88803KzENAAAl+Tff/2/+7MO19vjYQgXOurCwUEo6RseB
9vZsNluBkQAA2N6DH5z+i7/0cK396v9TiVS7NjRUYj1Gx/j4uIvXAADVIPv7
ww9vEr7xgMK9tra21nHwYOn1eKq3d89nAgBgO/nPfvqPrz7xcKf92cv/ewXu
tp6YmCg9HT+/d2avpwIAYBvrf/D2n/6FvXr+xu/8uAKnPdXbW/QpNk+eOHH0
yJGi9XhtaKgCgwEAsJV/8b2HK675l7q++6/2/Lp1KpWKx+GzJ09+9bXXNn5+
eXDw+LFj7p0BAKg2n77/3z38osc/c+RGBfbqGR4eLsjCW2NjuVzuzTff3HjL
b/3Wb0Wh+Nb16w8/PHHj3pk9Hw4AgM2s/8HNL/ylh/PsC6fv/NEen3Ntbe2x
jo7Pz9jf359Opzd+6Vd/9Vc/r8eNt6RSqRdPn3bvDABAeP/+n/39v/3MwwuP
P7ty/ZdfeOeHn+5pQN69e3fjXN3d3clk8uF9eOL1uOGje/c+fzHkwkIl9qIE
AOBhf//vvfuzzXl+MR0fPv7UE7/6u2t7cuoXT59ua239znvv5XKFD0PcrB4j
mUxmeHh4XyIR/bgnYwEAsLnZ2X8aBeR3vv/bW/y48B8/K/sG3Q9WVl4/f/7H
n35a9Fe3qMcNCwsLFy9cKO9IAABsa+ss3PjVyj/bZdt6BACAz6lHAABKpx4B
ACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACid
egQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQA
oHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTq
EQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA
0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlH
AABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABK
px4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4B
ACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACid
egQAoHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQA
oHTqEQCA0qlHAABKpx4BACidegQAoHTqEQCA0qlHAABKpx4BACidegQAoHTq
EQCA0qlHAABKpx4BACidegQAoHTqEYBGkMvl1tbWstls5ucerKxERzqdXv65
JdiR9fX10J/aAahHAKpcFH5R5qVSqdnZ2R988snHU1MTExPfff/9d2/eHBkZ
uTY0dGlg4Ny5c6+cOfMrz5861dv77MmT3d3dXV1dhzs7Ow4ebG1p2fibbouj
ualp29/jcMSP6F8iob8+Avi8HqMvt298/eu7PPL5/LZnvDY0tPsTRcePP/10
23NF31jKcq7o+9W254q+lZXlXJOTk9ueK5lMluVct8bGtj3X4uJi9G358uDg
Ln986/r1bc+VzWbL8nFFR/R3zbb/HhweHi7LuaJ/e277oY2OjpblXD/64Q+3
PddH9+6V5VzR+9n2XNE8ZTlX9Oez7bmiP+eynCv6333bc0WfP2X5tI9+jD6r
tz1d9NVRlg8t+mrd9tM++qovy7mi70LbflzRd7NS/pT6+/s3wu/F06cfDr+j
R4481tHR1trasn9/8EJwODY7Grwey3JE33K3PePjhw6V5Vz35+e3PVf0vags
57p79+6257o2NFSWc0X/jt72XL/1W79VlnO9evbstueK8mD3J4r+UR/9XbDt
uVZXV8vycUVHKX9lP3H0aFnONTc3t+25+vr6ynKu8e9/f9tzRXVUllWUUipr
fHy8LB9X9Oez7bmiP+eynCtqkm3PFX3+lOVc0RF9Vm97uuiroyznKuUfF9FX
fVnOVcrlqui72bbvx4qfo9YP9bj7Qz3u/qjLeowO9ViWvyVLrMeyfFxv/fqv
bbuQVeF6LMufoXosyx9j0XpcW1tLpVLT09Pfff/9t65f7+7uLtcfo8NRtUeD
12N/f3/0F0H0d9NujlJeOxqV2C7PsnFE35O3PV30TWz3H1R0LC4ubvtxzc7O
luXjKiVFou/PZTnXDz75ZNtzpdPpspyrlCvy0b8+ynKu6CjlHzIf3btXlnM9
WFnZ9lwzMzNlOVcplyajT6EynGt8vJRPxWiesnyJRX8+254r+nMuy7lKuSJf
3k/Fbf8ni746ynKu6Kt12w8t+qovy7mif79H34g+npoaHR298uabUf9/6fhx
C4mOBjwavB4//PDDxrxvCNgx3zQaRDabjf41MTEx8db166+cOVOuxdIgx75E
IjpaW1raWlsPtLd3HDz4+KFD0XG4s/OJo0cdjkc9Grwe3XMNwGc/X3pdWFio
tlaMSi+apKen51eeP/U3L16JjsuDg8PDw99+553R0dE7d+58dO/e9PT0Dz75
JJlMRq0bfQipVGppaSmdTkd/v6+trfnHDpSLegRocBtLi9HfAtHfCFGefb6/
TWWuRO9LJJ44ejQ676tnz0ZBODIyEtXg+Pj4701Nzc7ORgUY5d/Dr0XJf/bT
z9b/KJ6C4hAqRj0CNJooxqJcvDU21t/f393dnWhu3utEfKyjI+rDr7722rWh
oe+8997ExMQPPvlkYWHhwcrKZtWnBqFqqUeARrC0tDQ5OTk8PHyqt3djB8W9
WFp8/NCh6P1HUfqbv/H2nTt3ZmZmUqlUNpuVglBP1CNAXcrn8xsLjOfOnTvc
2Vn2VozeZxSKlwYGbty48dG9e/fn59PZ//Czy8pAvVOPAHUjl8vNzs6+e/Pm
K2fOHGhvL2MrHj1ypK+vb3h4+M6dO9EpStnHEqhX6hGgpuXz+Sjnbty4EdVd
W2trWdYYo/I81du7WSu6DA0NTj0C1KKlpaUPP/zw9fPno9LbfTEe7ux85cyZ
kZGRycnJUjalBxqZegSoFZlM5uOpqWtDQ0+eOLH71cW+l1/+zd94e3p6enl5
+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
    "], {{0, 888}, {
    874, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->252.,
  ImageSizeRaw->{874, 888},
  PlotRange->{{0, 874}, {0, 888}}]], "Output",ExpressionUUID->"cab8771a-032d-\
4237-8203-8964da02e745"],

Cell[TextData[{
 StyleBox["57.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Explain why or why not",
  FontWeight->"Bold"],
 "  Determine whether the following statements are true and give an \
explanation or counterexample."
}], "Problem",ExpressionUUID->"4cf2568a-37b0-41b7-ac10-8c3b2b48e48a"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tIf the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7d60da73-d93c-4448-be91-d8fb27ffbb06"],
 " is differentiable for all values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "3c2316e0-9b05-4187-800d-420db421a15c"],
 ", then ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e7b78717-5bcd-4b57-8071-517e6d5907e1"],
 " is continuous for all values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "5166cb02-8033-4560-b0a1-9777b39404ee"],
 "."
}], "SubProblem",ExpressionUUID->"00789aef-b606-45ff-a6f4-da0bda73a654"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tThe function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{"x", "+", "1"}], "\[RightBracketingBar]"}]}], TraditionalForm]],
  ExpressionUUID->"ffd98066-22d1-47a4-8194-f6a2c8a5a585"],
 " is continuous for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a0b36c63-0492-403d-9318-d286725215db"],
 ", but not differentiable for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "d4807716-d58c-49a8-8417-df1a3a9664e5"],
 "."
}], "SubProblem",ExpressionUUID->"98ecdd27-d2b8-4fc1-9fbe-791367da7866"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tIt is possible for the domain of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "732ffb79-7639-4e4b-b6c9-f73bf1bbea6e"],
 " to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "b"}], ")"}], TraditionalForm]],ExpressionUUID->
  "fe852b47-7f82-4db9-a202-8ebc2e3db4b6"],
 " and the domain of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "e9a431d1-6ed0-45d4-b847-8c6b898c3e0c"],
 " to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "f401ab51-69d1-41f3-ac22-33be53d212ef"],
 "."
}], "SubProblem",ExpressionUUID->"2db8afa7-8ef7-4e53-a059-edc992298184"]
}, Closed]],

Cell[CellGroupData[{

Cell["Explorations and Challenges  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Explorations and \
Challenges",ExpressionUUID->"5b0ba4ff-2ada-44ab-8bb3-718fe1fa4325"],

Cell[TextData[{
 StyleBox["58.\tLooking ahead: Derivative of ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "n"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"d31964b6-43f0-46c0-a0df-d8d33cc13300"],
 "  Use the definition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"h", "\[Rule]", "0"}]], 
     FractionBox[
      RowBox[{
       RowBox[{"f", "(", 
        RowBox[{"x", "+", "h"}], ")"}], "-", 
       RowBox[{"f", "(", "x", ")"}]}], "h"]}]}], TraditionalForm]],
  ExpressionUUID->"91fb21e1-3e78-4996-8ce1-c63270a25cec"],
 " to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d0135152-cbb8-44f5-8fae-cc838f6bb185"],
 " for the following functions."
}], "Problem",ExpressionUUID->"ba958247-e3a6-463e-b427-b663aada5bfa"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "a1fd2ef2-9646-448f-939a-7de303a0f861"]
}], "SubProblem",ExpressionUUID->"7d3ddecb-6814-4d60-a22f-58eb5fd063fd"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "93f65943-baba-498d-a24e-a5d323ba0d0d"]
}], "SubProblem",ExpressionUUID->"11dd0b56-4b25-48a5-8561-6cca7d555b00"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "4"]}], TraditionalForm]],ExpressionUUID->
  "007606f3-8d48-4b85-b52c-8673fd40059b"]
}], "SubProblem",ExpressionUUID->"720bcb5c-1c24-43f7-ac9b-529a9b22b45c"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tBased upon your answers to parts (a)\[Dash](c), propose a formula for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "852039b7-6448-4395-869b-705dd8783dd6"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "n"]}], TraditionalForm]],ExpressionUUID->
  "4cc15327-4bd3-4959-88a5-728bd69cac3a"],
 ", where ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "aa414112-646e-4df8-8eba-359f31493e58"],
 " is a positive integer."
}], "SubProblem",ExpressionUUID->"2dc3f477-73d4-4b63-b86b-5297d9e7fb18"],

Cell[TextData[{
 StyleBox["59.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Determining the unknown constant",
  FontWeight->"Bold"],
 "  Let \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], "=", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {
                 RowBox[{"2", 
                  SuperscriptBox["x", "2"]}], 
                 RowBox[{
                  RowBox[{"if", " ", "x"}], "\[LessEqual]", "1"}]},
                {
                 RowBox[{
                  RowBox[{"a", " ", "x"}], "-", "2"}], 
                 RowBox[{
                  RowBox[{"if", " ", "x"}], ">", "1."}]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}},
               Selectable->True]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "8fb93f06-c4ea-4132-b1e9-aef88082a199"],
 "\n\tDetermine a value of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a9f3ac89-e6ff-4535-ba34-970390487f12"],
 " (if possible) for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "e3c94f58-289e-4021-98fb-a392feacde8c"],
 " is continuous at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "10f25507-9e4b-4376-b07d-a6c0615b571f"],
 "."
}], "Problem",ExpressionUUID->"c2c0c7e0-346b-48e8-a753-67a49911c960"],

Cell[TextData[{
 StyleBox["60.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Finding ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"503bdd58-b67c-4678-a098-9b60056ef4f0"],
 StyleBox[" from ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"25112e73-ba1c-4bd4-9e53-259c0415a096"],
 "  Sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "70cd2638-84a3-43f0-ada0-3ca3cc6dd4cc"],
 ". Then sketch three possible graphs of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "70df3c0d-59e2-4d2b-8f5d-ee3aa6ddaee9"],
 "."
}], "Problem",ExpressionUUID->"be0a228d-568e-4906-952a-078cff2f2ecd"],

Cell[TextData[{
 StyleBox["61.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Finding ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"1539d760-935b-455f-81ee-3d9f59857ebc"],
 StyleBox[" from ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"f4779e08-053c-4a15-9c5c-cd644d4a6c13"],
 "  Sketch the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "x"}], TraditionalForm]],ExpressionUUID->
  "e13fd211-4967-422f-9b2d-6bef429076cd"],
 ". Then sketch a possible graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7e68a682-29a3-46a4-982d-818549b0455a"],
 ". Is more than one graph possible?"
}], "Problem",ExpressionUUID->"6b3a6e9e-8a7b-42f5-839a-18d2ab5b2822"],

Cell[TextData[{
 StyleBox["62.",
  FontWeight->"Bold"],
 StyleBox["\tFinding ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"e3689316-1e90-4fda-99ea-06a5e00b086c"],
 StyleBox[" from ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"bbbb7e7a-205f-44fd-aec5-ea29074edee1"],
 "  Create the graph of a continuous function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "5868d60b-c6f5-4577-b597-7ae133167ae8"],
 " such that \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"f", "'"}], 
           RowBox[{"(", "x", ")"}]}], "=", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{
                  RowBox[{"if", " ", "x"}], "<", "0"}]},
                {"0", 
                 RowBox[{
                  RowBox[{"if", " ", "0"}], "<", "x", "<", "1"}]},
                {
                 RowBox[{"-", "1"}], 
                 RowBox[{
                  RowBox[{"if", " ", "x"}], ">", "1."}]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}},
               Selectable->True]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "44771d01-a003-4105-a142-b05c8b7ca03c"],
 "\n\tIs more than one graph possible?"
}], "Problem",ExpressionUUID->"62805b95-2370-4f56-8826-2ff0553ad13d"],

Cell[TextData[{
 StyleBox["63\[Dash]66. Normal lines",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  A line perpendicular to another line or to a tangent line is often called \
a ",
 StyleBox["normal line",
  FontWeight->"Bold"],
 ". Find an equation of the line perpendicular to the line that is tangent to \
the following curves at the given point ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "0892cfed-9436-49c8-937e-be247a6aafe7"],
 "."
}], "ExerciseDirectionsCell",ExpressionUUID->"29955277-80ce-440a-9d2d-\
fbd1feb001ae"],

Cell[TextData[{
 StyleBox["63.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"3", "x"}], "-", "4"}]}], TraditionalForm]],ExpressionUUID->
  "baa90ad8-14ce-46f4-9cb9-5064d95f0db4"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "cc4433f0-1d87-47c5-b294-c2a5f26bba09"]
}], "Problem",ExpressionUUID->"b40347d0-c138-4587-91b5-57efca211585"],

Cell[TextData[{
 StyleBox["64.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SqrtBox["x"]}], TraditionalForm]],ExpressionUUID->
  "22eb3b52-0fac-4ee2-bbd5-9996b93476c9"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"4", ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "e6de884e-da63-495b-828d-8961ec2288eb"]
}], "Problem",ExpressionUUID->"ef7a860e-2bc1-4e85-97e3-0876656ba5c3"],

Cell[TextData[{
 StyleBox["65.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["2", "x"]}], TraditionalForm]],ExpressionUUID->
  "79d3467a-f09c-496d-bd91-7f92d0ecdd33"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"1", ",", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f9c7bfd8-5caa-4661-aaac-34b8ed6a62ba"]
}], "Problem",ExpressionUUID->"06ba1083-cb7b-42c5-9062-9a15624be117"],

Cell[TextData[{
 StyleBox["66.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"3", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "56c4fcb4-7835-409c-b4f5-5e45f0af357e"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"3", ",", "0"}], ")"}], TraditionalForm]],ExpressionUUID->
  "1a52eb49-0681-4594-9550-ed9ab867ab07"]
}], "Problem",ExpressionUUID->"949ad6f7-a18c-4766-b6c5-1c92b173126b"],

Cell[TextData[{
 StyleBox["67\[Dash]70. Aiming a tangent line",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Given the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2e04b121-07c6-48cf-ad18-1215a01d325c"],
 " and the point ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "60513c7d-25ae-458a-b1d4-b5eebc71a2d8"],
 ", find all points ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "081e1584-e182-4cac-92bc-e5a195148e15"],
 " on the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "28cd5a98-3e8c-4ed6-a147-79a4c99f3279"],
 " such that the line tangent to ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "dd63ac85-3a88-4a6a-a270-f1c63e906735"],
 " at ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "d86f1726-9b47-4ec9-8156-025f1210fdff"],
 " passes through ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "cfe1af86-668b-433c-9da1-d049f76d5712"],
 ". Check your work by graphing ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "5089ce46-6d78-499b-884e-d94c8200d2b9"],
 " and the tangent lines."
}], "ExerciseDirectionsCell",ExpressionUUID->"db9f301c-38d1-4365-80bd-\
42eaaeca26b3"],

Cell[TextData[{
 StyleBox["67.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"d8082a88-52e8-41cd-aaaa-ee4ae80084f4"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", 
    RowBox[{"3", ",", "6"}], ")"}], TraditionalForm]],ExpressionUUID->
  "fae8b83e-1edf-4ede-bff6-9fe97fb8d408"]
}], "Problem",ExpressionUUID->"5f8e171d-98bf-4988-984d-bc5f7cd7c27f"],

Cell[TextData[{
 StyleBox["68.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"4", "x"}], "-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "3ff0adbb-05d6-4309-bc88-e5f88cfdf4bf"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", 
    RowBox[{"0", ",", "6"}], ")"}], TraditionalForm]],ExpressionUUID->
  "379978d1-72c7-47ec-b354-2c8928bd3bac"]
}], "Problem",ExpressionUUID->"62fac0f3-cea8-4508-b4f2-75755c7e9aab"],

Cell[TextData[{
 StyleBox["69.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["1", "x"]}], TraditionalForm]],ExpressionUUID->
  "522eb290-2657-4c1c-9bab-5d2cae385252"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "4"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f3b825ec-ad86-4f29-b199-126e79323d5b"]
}], "Problem",ExpressionUUID->"406805ef-2fe3-4769-804c-979f521f270f"],

Cell[TextData[{
 StyleBox["70.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"3", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", "x"}], "+", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "04d1396a-de5f-40ff-bee8-b721b03f656a"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "(", 
    RowBox[{"0", ",", "5"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9bf3dfb2-061e-41eb-ac71-243bd40d2fa2"]
}], "Problem",ExpressionUUID->"32a53498-1ef0-46ac-9fdd-04587e4b9499"],

Cell[TextData[{
 StyleBox["71\[Dash]72. One-sided derivatives",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  The ",
 StyleBox["right-sided",
  FontWeight->"Bold"],
 " and ",
 StyleBox["left-sided derivatives",
  FontWeight->"Bold"],
 " of a function at a point ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "5c755cd1-bc67-4a54-ac1d-f6204b6b73a0"],
 " are given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "+"], "'"}], 
     RowBox[{"(", "a", ")"}]}], "=", 
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"h", "\[Rule]", 
       SuperscriptBox["0", "+"]}]], 
     FractionBox[
      RowBox[{
       RowBox[{"f", "(", 
        RowBox[{"a", "+", "h"}], ")"}], "-", 
       RowBox[{"f", "(", "a", ")"}]}], "h"]}]}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"82913c43-b165-4b5e-b2a7-a382bd38ad20"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "-"], "'"}], 
     RowBox[{"(", "a", ")"}]}], "=", 
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"h", "\[Rule]", 
       SuperscriptBox["0", "-"]}]], 
     FractionBox[
      RowBox[{
       RowBox[{"f", "(", 
        RowBox[{"a", "+", "h"}], ")"}], "-", 
       RowBox[{"f", "(", "a", ")"}]}], "h"]}]}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"50d6cbe9-17f0-4cdb-a9c6-bbf6c48c7c30"],
 ", respectively, provided these limits exist. The derivative ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0b64dc02-fb19-4136-b8f1-7215f255a193"],
 " exists if and only if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "+"], "'"}], 
     RowBox[{"(", "a", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "-"], "'"}], 
     RowBox[{"(", "a", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "d35340ef-5653-49f5-a7f3-32ce733ee210"],
 "."
}], "ExerciseDirectionsCell",ExpressionUUID->"5facd463-197b-4944-8af5-\
c1d67b086d3c"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tSketch the following functions.",
 "\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCompute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "+"], "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "e473f549-ed5a-46d6-92da-1a2bf4b2831e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "-"], "'"}], 
    RowBox[{"(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "30587cca-ee17-42a6-a46e-c073a717501c"],
 " at the given point ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "30baccae-6616-42a4-a066-c48772cd2af1"],
 ".",
 "\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9000dd81-f701-4d9c-b8df-5ea290c6d77a"],
 " continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "5238c334-75c7-4e86-8e75-062bb498bcba"],
 "? Is ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d05fee35-aba0-47f9-8ae6-a49df6216ceb"],
 " differentiable at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "b41662a3-829f-465e-9407-987676d4500c"],
 "?"
}], "SubExerciseDirectionsCell",ExpressionUUID->"7a934b48-29aa-494c-ba16-\
d8e2a8a12fb5"],

Cell[TextData[{
 StyleBox["71.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{"x", "-", "2"}], "\[RightBracketingBar]"}]}], TraditionalForm]],
  ExpressionUUID->"ccc1a38d-b473-498a-b860-c44a0d52b931"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "0bbeb562-db6c-4176-80bc-8350a204c946"]
}], "Problem",ExpressionUUID->"4be60839-3980-48e4-8023-a310b1badd06"],

Cell[TextData[{
 StyleBox["72.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"4", "-", 
            SuperscriptBox["x", "2"]}], 
           RowBox[{
            RowBox[{"if", " ", "x"}], "\[LessEqual]", "1"}]},
          {
           RowBox[{
            RowBox[{"2", "x"}], "+", "1"}], 
           RowBox[{
            RowBox[{"if", " ", "x"}], ">", "1"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], TraditionalForm]],ExpressionUUID->
  "095e2dda-1404-4b31-9a9e-51bf8aa57148"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "7ede0abb-1d36-4ae4-8b1c-48a87ebffb32"]
}], "Problem",ExpressionUUID->"a27fccc8-0eb2-46b9-8292-6fca50f35282"],

Cell[TextData[{
 StyleBox["73\[Dash]76. Vertical tangent lines",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  If a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "4e01aa40-82fb-4d4c-9172-32588d52a159"],
 " is continuous at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "308beb93-3592-4429-81e9-01f37e914fbc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", "a"}]], 
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{
       RowBox[{"f", "'"}], 
       RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}]}], "=", 
    "\[Infinity]"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"ab8d6726-d7a0-45dd-984e-d281a362ae1c"],
 ", then the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ae700f0b-8fa6-455b-945e-dc820255a5b6"],
 " has a vertical tangent line at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "f3882184-614b-439d-8307-5add404f5cce"],
 " and the equation of the tangent line is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "a"}], TraditionalForm]],ExpressionUUID->
  "8354a2e0-3ed7-44f9-8c7b-f5fcd504dc74"],
 ". If ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "248ef053-75c2-4d92-8f58-9bac84745dfc"],
 " is an endpoint of a domain, then the appropriate one-sided derivative \
(Exercises 71\[Dash]72) is used. Use this information to answer the following \
questions."
}], "ExerciseDirectionsCell",ExpressionUUID->"d148f275-aab7-440d-a4a1-\
17e0e4189628"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "d93795f0-b193-4396-8195-c9b4171c96c5"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "a95ba398-c8d9-4182-be85-f35229aa3fd1"],
 StyleBox["73.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Graph the following functions and determine the location of the vertical \
tangent lines."
}], "TProblem",ExpressionUUID->"618ab7fa-76a9-407a-ad7f-51ec5546abd3"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "058172e5-2de3-41ba-9192-626878cca337"],
 "\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], 
     RowBox[{"2", "/", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "53538896-450f-440c-962d-f4d451a3e9a9"],
 "\n",
 StyleBox["c.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"x", "-", "4"}], "\[RightBracketingBar]"}]]}], 
   TraditionalForm]],ExpressionUUID->"7839a69e-a5b2-4e66-a7ac-6ce7bc9464c8"],
 "\n",
 StyleBox["d.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"5", "/", "3"}]], "-", 
     RowBox[{"2", 
      SuperscriptBox["x", 
       RowBox[{"1", "/", "3"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "8f41b01b-83ba-4b8e-943c-667f760e36bb"]
}], "SubProblem",ExpressionUUID->"9c7b88cc-425e-4829-848b-aa8c7010f2d7"],

Cell[TextData[{
 StyleBox["74.",
  FontWeight->"Bold"],
 "\tThe preceding definition of a vertical tangent line includes four cases: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", 
       SuperscriptBox["a", "+"]}]], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x", ")"}]}]}], "=", 
    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}], TraditionalForm]],
  ExpressionUUID->"3c944eb2-b263-4f08-92a0-fe5af1faf195"],
 " combined with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", 
       SuperscriptBox["a", "-"]}]], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x", ")"}]}]}], "=", 
    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}], TraditionalForm]],
  ExpressionUUID->"f5955a52-16b1-4c88-8435-ed13adb3f0cb"],
 " (for example, one case is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", 
       SuperscriptBox["a", "+"]}]], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x", ")"}]}]}], "=", 
    RowBox[{"-", "\[Infinity]"}]}], TraditionalForm]],ExpressionUUID->
  "f2182b4a-fe2d-416b-9fe8-afc4b2c7bd4a"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", 
       SuperscriptBox["a", "-"]}]], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x", ")"}]}]}], "=", "\[Infinity]"}], TraditionalForm]],
  ExpressionUUID->"93b0f5ab-ce3a-440c-a2af-453f919f4018"],
 "). Sketch a continuous function that has a vertical tangent line at ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "a1daf505-d896-4bf5-9fe7-3cd33c5f2306"],
 " in each of the four cases."
}], "Problem",ExpressionUUID->"be21e55b-e2cf-4ee8-b5a3-9903733956c5"],

Cell[TextData[{
 StyleBox["75.",
  FontWeight->"Bold"],
 "\tVerify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", 
     RowBox[{"1", "/", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "d8c0a6ef-23b6-485b-a419-c76441c5cd14"],
 " has a vertical tangent line at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "aa72f74b-8f93-4d16-8140-5a82d8fef9fe"],
 "."
}], "Problem",ExpressionUUID->"e8563962-809a-41c2-8f45-98f785d2092c"],

Cell[TextData[{
 StyleBox["76.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Graph the following curves and determine the location of any vertical \
tangent lines."
}], "Problem",ExpressionUUID->"88ec629a-61de-4c25-ad9b-bd25f3abad8f"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "=", "9"}], TraditionalForm]],
  ExpressionUUID->"3e31115d-551d-4294-bff6-5ec0e21d914f"],
 "\n",
 StyleBox["b.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"], "+", 
     RowBox[{"2", "x"}]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "0d8c0e6b-a83d-41d0-980f-3f572b359ecf"]
}], "SubProblem",ExpressionUUID->"6f123f7a-6b1e-47e5-bc4d-29620b71b128"],

Cell[TextData[{
 StyleBox["77.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"]
}], "Problem",ExpressionUUID->"44c823ba-d694-4947-9ced-23b5157e881e"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tGraph the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"x", 
           RowBox[{
            RowBox[{"if", " ", "x"}], "\[LessEqual]", "0"}]},
          {
           RowBox[{"x", "+", "1"}], 
           RowBox[{
            RowBox[{"if", " ", "x"}], ">", "0."}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], TraditionalForm]],ExpressionUUID->
  "00c9aa52-f3a1-4441-8bdc-7a4077887028"]
}], "SubProblem",ExpressionUUID->"ca771c96-35f7-4a33-a994-db5e6537a045"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "a04bfc2d-1aea-4e59-89f8-f66d03e8c3c5"],
 ", what is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "6d471cd0-6737-4784-a517-956b5308d680"],
 "?"
}], "SubProblem",ExpressionUUID->"41e88f40-b259-4231-9080-16f81a227038"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "d3dcd129-c5c6-4c27-9602-6f0e2601360a"],
 ", what is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "89d78016-50e9-414f-98b6-f42f50786069"],
 "?"
}], "SubProblem",ExpressionUUID->"c134395d-7d2d-46ec-9504-4e5bab79a60a"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tGraph ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "098126ea-1ba3-489b-986d-3dde51212196"],
 " on its domain."
}], "SubProblem",ExpressionUUID->"2c9a4eac-2d21-4321-9087-3e37aff41b70"],

Cell[TextData[{
 StyleBox["e.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "40dc0354-45d4-41e3-afa5-9b3bfc9ee5b2"],
 " differentiable at 0? Explain."
}], "SubProblem",ExpressionUUID->"205c174b-13f6-41f1-8bd8-47952070f7cf"],

Cell[TextData[{
 StyleBox["78.",
  FontWeight->"Bold"],
 "\tIs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      RowBox[{"5", "x"}], "+", "6"}], 
     RowBox[{"x", "-", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "88e36377-f3a3-43a7-968c-cd916ad81f2f"],
 " differentiable at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "ed900aa6-cd07-40e7-8518-3ceae68988d7"],
 "? Justify your answer."
}], "Problem",ExpressionUUID->"aadc0d17-85c6-40f4-b018-002ccb9bf91c"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
Editable->True,
Saveable->True,
Selectable->True,
WindowSize->{1024, 720},
WindowTitle->"Section 3.2 The Derivative as a Function",
Visible->True,
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[18], Selectable -> False], 
       PaneBox[
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"CALCULUS\"", "SR", Bold, 14, StripOnInput -> False], 
             
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[18], Selectable -> False], 
             StyleBox[
             "\"Early Transcendentals, Third Edition\"", "SR", 11, 
              StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], Bold, 
         StripOnInput -> False], Alignment -> {Left, Center}, 
        BaselinePosition -> Center, ImageSize -> {300, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {
            Dynamic[
             Max[0, First[
                ReplaceAll[WindowSize, 
                 Options[
                  EvaluationNotebook[], WindowSize]]] - 840]], 0}, 
          BaselinePosition -> Baseline], "CacheGraphics" -> False], 
        Spacer[
         Dynamic[
          Max[0, First[
             ReplaceAll[WindowSize, 
              Options[
               EvaluationNotebook[], WindowSize]]] - 840]]], Selectable -> 
        False], 
       PaneBox[
        StyleBox[
         StyleBox[
         "\"Briggs, Cochran, Gillett, Schulz\"", "SR", Bold, 11, StripOnInput -> 
          False], Bold, StripOnInput -> False], Alignment -> {Right, Center}, 
        BaselinePosition -> Center, ImageSize -> {180, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[6], Selectable -> False], 
       ActionMenuBox[
        StyleBox[
         TemplateBox[{"\"Section \"", "\"3.2\""}, "RowDefault"], StripOnInput -> 
         False], {
        StyleBox[
          "\"3.2 The Derivative as a Function\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["3.2 The Derivative as a Function"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"The Derivative Function\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["The Derivative Function"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.14  \[LightBulb]: Instantaneous rate of change\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 3.14  \[LightBulb]: Instantaneous rate of change"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION The Derivative\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITION The Derivative"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 1 Computing a derivative\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 1 Computing a derivative"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.15  \[LightBulb]: Example 1\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.15  \[LightBulb]: Example 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 1\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Derivative Notation\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Derivative Notation"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.16  \[LightBulb]: Slope of secant line\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 3.16  \[LightBulb]: Slope of secant line"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 2\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 2 A derivative calculation\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 2 A derivative calculation"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 3.17: Example 2\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 3.17: Example 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 3\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 4\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 3 Another derivative calculation\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 3 Another derivative calculation"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Graphs of Derivatives\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Graphs of Derivatives"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 4 Graph of the derivative\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 4 Graph of the derivative"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.18  \[LightBulb]: Example 4\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.18  \[LightBulb]: Example 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.19  \[LightBulb]: Example 4\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.19  \[LightBulb]: Example 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 5 Graph of the derivative\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 5 Graph of the derivative"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.20  \[LightBulb]: Example 5\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.20  \[LightBulb]: Example 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.21  \[LightBulb]: Example 5\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.21  \[LightBulb]: Example 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 6 Graphing the derivative with asymptotes\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "EXAMPLE 6 Graphing the derivative with asymptotes"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.22  \[LightBulb]: Example 6\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.22  \[LightBulb]: Example 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.23  \[LightBulb]: Example 6\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.23  \[LightBulb]: Example 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Continuity\"", {"MSG", FontWeight -> "Bold", FontSize -> 13}, 
           StripOnInput -> False] :> {
           NotebookLocate["Continuity"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"THEOREM 3.1 Differentiable Implies Continuous\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["THEOREM 3.1 Differentiable Implies Continuous"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 6\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.24: Not continuous at a point\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.24: Not continuous at a point"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not \
Differentiable\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate[
           "THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not \
Differentiable"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.25  \[LightBulb]: Corner point\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 3.25  \[LightBulb]: Corner point"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"IMPORTANT When Is a Function Not Differentiable at a \
Point?\""}, "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "IMPORTANT When Is a Function Not Differentiable at a Point?"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 7 Continuous and differentiable\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 7 Continuous and differentiable"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 3.27: Example 7\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 3.27: Example 7"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 3.28: Example 7\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 3.28: Example 7"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"SECTION 3.2 EXERCISES\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["SECTION 3.2 EXERCISES"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Getting Started\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Getting Started"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Practice Exercises\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Practice Exercises"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Explorations and Challenges\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 11}, 
           StripOnInput -> False] :> {
           NotebookLocate["\[EmptySmallCircle] Explorations and Challenges"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}}, 
        ImageSize -> {108, 22}, FrameMargins -> 0, BaseStyle -> {"MSG", 11}, 
        BaselinePosition -> Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0301.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ActionMenuBox["\"Contents\"", {StyleBox[
           TemplateBox[{"\"Calculus: Early Transcendentals\""}, "RowDefault"],
            Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Chapters\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Preface\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0002.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 1\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Review of Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Representing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Inverse, Exponential, and Logarithmic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Functions and Their Inverses\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 2\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Limits\""}, "RowDefault"], 
           Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Idea of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definitions of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Techniques for Computing Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits at Infinity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0205.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0206.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Precise Definitions of Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0207.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0208.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 3\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Derivatives\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Introducing the Derivative\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Derivative as a Function\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Rules of Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Product and Quotient Rules\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Trigonometric Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives as Rates of Change\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0307.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Implicit Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0308.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Logarithmic and Exponential Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0309.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.10\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Inverse Trigonometric Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0310.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.11\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Related Rates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0311.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0312.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 4\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of the Derivative\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maxima and Minima\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Mean Value Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"What Derivatives Tell Us\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Optimization Problems\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Approximation and Differentials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0406.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"L'H\[OHat]pital's Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0407.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Newton's Method\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0408.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Antiderivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0409.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0410.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 5\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Areas Under Curves\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definite Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Fundamental Theorem of Calculus\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Working with Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Substitution Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0506.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 6\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of Integration\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Velocity and Net Change\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Regions Between Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Slicing\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Shells\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Area\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Physical Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 7\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Logarithmic, Exponential, and Hyperbolic Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Logarithmic and Exponential Functions Revisited\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Exponential Models\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Hyperbolic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0704.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 8\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration Techniques\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Approaches\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration by Parts\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Trigonometric Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Substitutions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Fractions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration Strategies\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0806.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Other Methods of Integration\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0807.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Numerical Integration\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0808.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Improper Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0809.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0810.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 9\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Direction Fields and Euler's Method\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Separable Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Special First-Order Linear Differential Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Modeling with Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0906.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 10\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Sequences and Infinite Series\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"An Overview\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Sequences\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1002.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1003.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Divergence and Integral Tests\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1004.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Comparison Tests\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1005.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Alternating Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1006.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Ratio and Root Tests\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1007.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Choosing a Convergence Test\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1008.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1009.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 11\"", 
             InterpretationBox[
              StyleBox[
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Power Series\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Functions with Polynomials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Properties of Power Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Taylor Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Working with Taylor Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 12\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Parametric and Polar Curves\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Parametric Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Polar Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Conic Sections\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1205.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 13\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vectors and the Geometry of Space\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vectors in the Plane\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vectors in Three Dimensions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Dot Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Cross Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Lines and Planes in Space\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Cylinders and Quadric Surfaces\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1307.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 14\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus of Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Motion in Space\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Curvature and Normal Vectors\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1406.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 15\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Functions of Several Variables\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphs and Level Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits and Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Derivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule \""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Directional Derivatives and the Gradient\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Tangent Planes and Linear Approximation\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1506.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maximum/Minimum Problems\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1507.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Lagrange Multipliers\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1508.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1509.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 16\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Multiple Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over Rectangular Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over General Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Triple Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Triple Integrals in Cylindrical and Spherical Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Integrals for Mass Calculations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Change of Variables in Multiple Integrals\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 17\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Vector Calculus\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vector Fields\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Line Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Conservative Vector Fields\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Green\[CloseCurlyQuote]s Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1704.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence and Curl\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1705.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1706.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Stokes\[CloseCurlyQuote] Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1707.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1708.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1709.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 18\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Second\[Hyphen]Order Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Homogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Nonhomogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Complex Forcing Functions\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1806.cdf"], None}], StyleBox[
           TemplateBox[{"\"End Matter\""}, "RowDefault"], Bold, StripOnInput -> 
           False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix A\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix B\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix C\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Index\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"App. Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Figure Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1906.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Algebra/Trig (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_frontpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Calculus (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_endpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Table of Integrals (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_table.pdf"], None}], 
         StyleBox[
          "\"Answers to Odd Exercises\"", Bold, StripOnInput -> False] :> 
         Style["Answers to Odd Exercises", Bold], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  1 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_01.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_02.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  3 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_03.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  4 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_04.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  5 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_05.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  6 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_06.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  7 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_07.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  8 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_08.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  9 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_09.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 10 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_10.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 11 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_11.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 12 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_12.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 13 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_13.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 14 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_14.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 15 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_15.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 16 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_16.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 17 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_17.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter D2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_18.pdf"], None}]}, FrameMargins -> 1, 
        ImageSize -> {72, 22}, BaseStyle -> {"MSG", 11}, BaselinePosition -> 
        Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0303.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Expanded View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Expanded View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}], True -> 
            GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Answers to Odd Exercises",
              All, CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "AlgebraCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Algebra Check", All, 
             CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "QuickCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "CalloutIcon", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "Subsubsubsubsection", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "Subsection", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Outline View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Outline View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ActionMenuBox[
        StyleBox["\"%\"", "Label", 13, StripOnInput -> False], {
        "\"50%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.5]}, "\"75%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.75]}, "\"100%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1]}, "\"125%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.25]}, "\"150%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.5]}, "\"175%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.75]}, "\"200%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2]}, "\"225%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.25]}, "\"250%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.5]}, "\"275%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.75]}, "\"300%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 3]}}, 
        FrameMargins -> {{0, 1}, {0, 0}}, ImageMargins -> 0, 
        ImageSize -> {40, 22}, BaselinePosition -> Center]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]], "DockedCell", 
  CellFrameMargins -> 3],
ScrollingOptions->{"VerticalScrollRange"->Fit},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[
     RowBox[{
       CounterBox["Page"], "            ", 
       StyleBox["Chapter 3  \[Bullet]  Derivatives"]}]], "Header"], "", ""}, {
  "", "", 
   Cell[
    TextData[
     RowBox[{
       StyleBox["Section 3.2  The Derivative as a Function"], "            ", 
       
       CounterBox["Page"]}]], "Header"]}},
PageFooters->{{"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}, {"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}},
PrintingOptions->{"FacingPages"->True,
"FirstPageHeader"->True,
"InnerOuterMargins"->{90, 48},
"PrintingMargins"->{{48, 48}, {72, 72}}},
PrivateNotebookOptions->{"PluginToolbarEnabled"->False,
"PluginUpdateNotificationsEnabled"->False},
ShowCellBracket->Automatic,
Deployed->False,
Copyable->True,
ShowCellLabel->False,
ShowCellTags->False,
TrackCellChangeTimes->False,
ShowAutoSpellCheck->False,
Magnification->1,
GridBoxOptions->{AllowScriptLevelChange->False},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, ShowGroupOpener -> 
       False, CellMargins -> {{10, 0}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 20, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> None, ShowGroupOpener -> 
       False, CellMargins -> {{0, Inherited}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.5], FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontTracking -> "Wide"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{15, 0}, {2, 7}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       18, FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Extended", FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsection", "Printout"], CellFrame -> None, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{0, 0}, {2, 10}}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", FontSlant -> "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
       GrayLevel[0]], 
      Cell[
       StyleData["Subsubsection", "Printout"], CellDingbat -> None, 
       CellMargins -> {{0, Inherited}, {2, 10}}, FontFamily -> "Helvetica", 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       False, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Subsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13, FontSlant -> "Plain"]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> "Bold", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsubsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FirstCell"], ShowCellBracket -> False, 
       CellMargins -> {{30, 10}, {7, 7}}, CellOpen -> False, TabSpacings -> 3,
        FontSize -> 14], 
      Cell[
       StyleData["FirstCell", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       CellOpen -> False, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Text"], CellMargins -> {{30, 10}, {7, 7}}, TabSpacings -> 3,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Text", "Printout"], CellMargins -> {{0, 0}, {7, 7}}, 
       TabSpacings -> 3, FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{50, 10}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, FontFamily -> 
       "Times", FontSize -> 14], 
      Cell[
       StyleData["Item", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{20, 0}, {2, 2}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{70, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Subitem", 
       CounterAssignments -> {{"Subsubitem", 0}}, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["Subitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{40, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{90, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subsubitem", 
       TabSpacings -> 3, CounterIncrements -> "Subsubitem", FontFamily -> 
       "Times", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Subsubitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{60, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    StyleData["QuickCheckFont"], FontFamily -> "Helvetica", FontSize -> 11, 
    FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheck"], CellMargins -> {{30, 10}, {0, 7}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 51}, 
       LineSpacing -> {1, 3}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["QuickCheck", "Printout"], CellMargins -> {{0, 30}, {0, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, TabSpacings -> 3, 
       FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswerIcon"], ShowGroupOpener -> True, 
       CellMargins -> {{50, 108}, {0, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left,
        TabSpacings -> 2, FontFamily -> "Helvetica", FontSize -> 11, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> "Wide", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["QuickCheckAnswerIcon", "Printout"], 
       CellMargins -> {{10, 288}, {0, 0}}, PageBreakAbove -> False, 
       PageBreakBelow -> False, CellFrameColor -> 
       RGBColor[0.976, 0.855, 0.514], FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswer"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["QuickCheckAnswer", "Printout"], 
       CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{30, 60}, {7, 0}}, 
       PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.8], 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontSize -> 13]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DefinitionFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]], 
      Cell[
       StyleData["DefinitionFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Definition"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Definition", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TheoremFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["TheoremFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Theorem"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Theorem", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProofFont"], FontFamily -> "Times", FontSize -> 14, 
       FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["ProofFont", "Printout"], FontFamily -> "Times", FontSize -> 
       13, FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SummaryFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["SummaryFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Summary"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Summary", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProcedureFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["ProcedureFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
       FontTracking -> "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Procedure"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, CellFrameColor -> GrayLevel[0.85], 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Procedure", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Important"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Important", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    StyleData["RelatedExercises"], TextAlignment -> Right, FontFamily -> 
    "Times", FontSize -> 13, FontSlant -> Italic, FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide"], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Closed]], 
   Cell[
    StyleData["CalloutIcon"], ShowGroupOpener -> True, 
    CellMargins -> {{50, 60}, {0, 0}}, 
    CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
    CellEventActions -> {"MouseClicked" :> {
        FrontEndTokenExecute["OpenCloseGroup"], 
        FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
    CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left, 
    LineSpacing -> {1, 2}, TabSpacings -> 2, FontFamily -> "Helvetica", 
    FontSize -> 12, FontWeight -> "Bold", FontTracking -> "Wide", FontColor -> 
    Dynamic[
      If[
       CurrentValue["MouseOver"], Orange, Black], 
      ImageSizeCache -> {11., {3., 8.}}]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Closed]], 
   Cell[
    StyleData["FigureCaption"], CellMargins -> {{30, 30}, {7, 7}}, 
    LineSpacing -> {1, 3}, FontSize -> 14], 
   Cell[
    StyleData["ChapterPreviewFont"], FontFamily -> "Arial", FontSize -> 24, 
    FontWeight -> "Normal", FontColor -> RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SectionTitleFont"], FontFamily -> "Arial", FontWeight -> 
    "Bold", FontTracking -> "Extended", FontColor -> RGBColor[0, 0.34, 0.45]], 
   Cell[
    StyleData["ExampleFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SolutionFont"], FontFamily -> "Helvetica"], 
   Cell[
    StyleData["FigureFont"], FontFamily -> "Arial", FontSize -> 12, 
    FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FigureFontText"], FontFamily -> "Arial", FontSize -> 12, 
       FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
      Cell[
       StyleData["FigureFontText", "Printout"], FontFamily -> "Arial", 
       FontSize -> 12, FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    StyleData["TableFont"], FontFamily -> "Arial", FontSize -> 13, FontWeight -> 
    "Bold", FontColor -> RGBColor[0., 0.597656, 0.515625]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TableCell"], CellMargins -> {{30, 10}, {5, 5}}], 
      Cell[
       StyleData["TableCell", "Printout"], CellMargins -> {{0, 0}, {5, 5}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TypesetAnnotationFont"], FontFamily -> "Times", FontColor -> 
       RGBColor[0., 0.644531, 0.84375]], 
      Cell[
       StyleData["TypesetAnnotationFont", "Printout"], FontFamily -> "Times", 
       FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide", FontColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031]], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{30, 108}, {2, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.97]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Open]], 
   Cell[
    StyleData["Note"], FontFamily -> "Helvetica", FontSize -> 12, 
    FontTracking -> "Wide", FontColor -> RGBColor[0.6, 0.4, 0.4]], 
   Cell[
    StyleData["ExerciseFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.8, 0, 0.4]], 
   Cell[
    StyleData["ExerciseGroupFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.0625, 0.390625, 0.519531]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseAnswerGroupFont"], FontFamily -> "Helvetica", 
       FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["ExerciseAnswerGroupFont", "Printout"], FontFamily -> 
       "Helvetica", FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ControlFont"], FontFamily -> "Helvetica", FontSize -> 12, 
       FontTracking -> "Wide", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["ControlFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontTracking -> "Wide", FontColor -> GrayLevel[0]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseDirectionsCell"], CellMargins -> {{30, 10}, {7, 7}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["ExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{30, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 13, FontWeight -> "Plain", 
       FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TExerciseDirectionsCell"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["TExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubExerciseDirectionsCell"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -22, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["SubExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -16, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Problem"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -29, TabSpacings -> 2.5,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Problem", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -19, TabSpacings -> 2.5,
        FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TProblem"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -47, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["TProblem", "Printout"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -32, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubProblem"], CellMargins -> {{58, 10}, {2, 2}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -22, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["SubProblem", "Printout"], CellMargins -> {{58, 10}, {2, 2}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -16, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Comment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[0, 0, 1], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[0.87, 0.94, 1]], 
      Cell[
       StyleData["Comment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["EditorComment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[1, 0, 0], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[1, 0.85, 0.85]], 
      Cell[
       StyleData["EditorComment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    StyleData["IndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[1, 0.5, 0]], 
   Cell[
    StyleData["ApplicationIndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[0, 0.5, 1]], 
   Cell[
    StyleData["InlineCell"], ScriptSizeMultipliers -> 0.8, ScriptLevel -> 0, 
    NumberSeparator -> ","], 
   Cell[
    StyleData["Output"], NumberSeparator -> ","], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Objectives"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {18, -2}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.5], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 4}, ParagraphIndent -> -24, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14, Background -> GrayLevel[0.97]], 
      
      Cell[
       StyleData["Objectives", "Printout"], CellMargins -> {{30, 30}, {6, 6}},
        PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.5], 
       ParagraphIndent -> -15, TabSpacings -> 2, FontSize -> 13, Background -> 
       GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Solution"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> RGBColor[0.94, 0.91, 0.88]], 
      Cell[
       StyleData["Solution", "Printout"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Answer"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Answer", "Printout"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
       ContextMenu -> FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"],
        FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, 
          RGBColor[0.269993, 0.308507, 0.6]], 
         ImageSizeCache -> {11., {3., 8.}}], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            NotebookLocate[#2, "OpenInNewWindow" -> True]}]& ), Evaluator -> 
         None, Method -> "Queued"}], 
      Cell[
       StyleData["Hyperlink", "Condensed"], FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Header", "Printout"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Footer", "Printout"], CellMargins -> {{0, 0}, {0, 4}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]]}, WindowSize -> {808, 911}, 
  WindowMargins -> {{12, Automatic}, {Automatic, 24}}, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"],
PrivateNotebookOptions -> {"ShowProductBranding" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "3.2 The Derivative as a Function"->{
  Cell[1540, 36, 200, 4, 
  42, "Section", "ExpressionUUID" -> "c168c650-c480-421d-9412-e80e3a05e290",
   CellTags->"3.2 The Derivative as a Function"]},
 "The Derivative Function"->{
  Cell[2917, 76, 162, 3, 
  28, "Subsection", "ExpressionUUID" -> "edfa74b0-e836-4a27-b3f0-70872848c136",
   CellTags->"The Derivative Function"]},
 "Figure 3.14  \[LightBulb]: Instantaneous rate of change"->{
  Cell[3965, 105, 7272, 141, 
  318, "Output", "ExpressionUUID" -> "bae5afa9-4a4a-441c-a816-29e302b095ca",
   CellTags->"Figure 3.14  \[LightBulb]: Instantaneous rate of change"]},
 "DEFINITION The Derivative"->{
  Cell[17785, 465, 2456, 82, 
  155, "Definition", "ExpressionUUID" -> "e073f974-7b16-4fa5-bc43-788146064b92
   ",
   CellTags->"DEFINITION The Derivative"]},
 "EXAMPLE 1 Computing a derivative"->{
  Cell[22334, 617, 213, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "fcd35fbe-5acc-40d9-
   bc49-985ffc03714e",
   CellTags->"EXAMPLE 1 Computing a derivative"]},
 "Figure 3.15  \[LightBulb]: Example 1"->{
  Cell[30099, 857, 8253, 159, 
  450, "Output", "ExpressionUUID" -> "55db638e-a424-4089-8a02-7b0c4cfdf485",
   CellTags->"Figure 3.15  \[LightBulb]: Example 1"]},
 "Quick Check 1"->{
  Cell[38567, 1027, 905, 25, 
  29, "QuickCheck", "ExpressionUUID" -> "76dfd9b6-0e91-4bf5-90eb-b204d3f8ca8e",
   CellTags->"Quick Check 1"]},
 "Derivative Notation"->{
  Cell[39745, 1064, 154, 3, 
  25, "Subsection", "ExpressionUUID" -> "fe09c2d2-7ee3-42aa-9a65-3609909b1b6a",
   CellTags->"Derivative Notation"]},
 "Figure 3.16  \[LightBulb]: Slope of secant line"->{
  Cell[43806, 1185, 14864, 287, 
  522, "Output", "ExpressionUUID" -> "52b65591-aee5-4e42-adae-ce468ee51caf",
   CellTags->"Figure 3.16  \[LightBulb]: Slope of secant line"]},
 "Quick Check 2"->{
  Cell[66495, 1716, 1097, 33, 
  29, "QuickCheck", "ExpressionUUID" -> "5612eb3b-04e8-4d83-b2fa-e22a971b9788",
   CellTags->"Quick Check 2"]},
 "EXAMPLE 2 A derivative calculation"->{
  Cell[68656, 1787, 217, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "0b75de7f-0c65-4e74-9110-
   d594782228a7",
   CellTags->"EXAMPLE 2 A derivative calculation"]},
 "Figure 3.17: Example 2"->{
  Cell[76548, 2040, 47872, 795, 
  173, "Output", "ExpressionUUID" -> "01b1abc7-88ed-4cdc-83cc-40d45d6b076a",
   CellTags->"Figure 3.17: Example 2"]},
 "Quick Check 3"->{
  Cell[124635, 2846, 916, 24, 
  29, "QuickCheck", "ExpressionUUID" -> "dd824096-9637-4689-9c96-57d7abd189f0",
   CellTags->"Quick Check 3"]},
 "Quick Check 4"->{
  Cell[129519, 3004, 918, 26, 
  29, "QuickCheck", "ExpressionUUID" -> "86dcafd8-04ef-4020-8701-b35c99dfa80c",
   CellTags->"Quick Check 4"]},
 "EXAMPLE 3 Another derivative calculation"->{
  Cell[131690, 3076, 229, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "d5ac60c5-db29-4bbe-a201-
   ec3b40aad3d4",
   CellTags->"EXAMPLE 3 Another derivative calculation"]},
 "Graphs of Derivatives"->{
  Cell[136843, 3237, 158, 3, 
  25, "Subsection", "ExpressionUUID" -> "43b056ac-fab0-4a42-8b17-b1805ee2fc21",
   CellTags->"Graphs of Derivatives"]},
 "EXAMPLE 4 Graph of the derivative"->{
  Cell[137957, 3276, 215, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "
   73e687e5-50ac-4e53-9e41-4db24df7ce4d",
   CellTags->"EXAMPLE 4 Graph of the derivative"]},
 "Figure 3.18  \[LightBulb]: Example 4"->{
  Cell[138601, 3299, 6854, 133, 
  267, "Output", "ExpressionUUID" -> "98564a49-cc70-476f-a004-31b0e186f7cd",
   CellTags->"Figure 3.18  \[LightBulb]: Example 4"]},
 "Figure 3.19  \[LightBulb]: Example 4"->{
  Cell[149955, 3585, 11049, 214, 
  312, "Output", "ExpressionUUID" -> "4f196fc6-0320-4d70-95ec-84f240b43f82",
   CellTags->"Figure 3.19  \[LightBulb]: Example 4"]},
 "EXAMPLE 5 Graph of the derivative"->{
  Cell[162171, 3843, 215, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "58f7bafe-
   e5ae-4fe1-8874-782abfcfb2e9",
   CellTags->"EXAMPLE 5 Graph of the derivative"]},
 "Figure 3.20  \[LightBulb]: Example 5"->{
  Cell[162988, 3870, 6324, 123, 
  550, "Output", "ExpressionUUID" -> "94543d55-cf92-4621-be4c-b9a55458c477",
   CellTags->"Figure 3.20  \[LightBulb]: Example 5"]},
 "Figure 3.21  \[LightBulb]: Example 5"->{
  Cell[175504, 4201, 14431, 282, 
  578, "Output", "ExpressionUUID" -> "f35a6fb7-36ae-4ff0-bfc3-3efb764ec4d7",
   CellTags->"Figure 3.21  \[LightBulb]: Example 5"]},
 "Quick Check 5"->{
  Cell[190150, 4494, 1627, 51, 
  29, "QuickCheck", "ExpressionUUID" -> "bcff7e1f-5407-46a8-b193-ebd2e6eadf17",
   CellGroupingRules->{"GroupTogetherGrouping", 41},
   CellTags->"Quick Check 5"]},
 "EXAMPLE 6 Graphing the derivative with asymptotes"->{
  Cell[192044, 4556, 247, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "
   5127c522-2e57-4c88-9586-6c4b71af0b13",
   CellTags->"EXAMPLE 6 Graphing the derivative with asymptotes"]},
 "Figure 3.22  \[LightBulb]: Example 6"->{
  Cell[192619, 4574, 7637, 152, 
  522, "Output", "ExpressionUUID" -> "7bc1b505-b1c6-483f-86da-91de75729e4e",
   CellTags->"Figure 3.22  \[LightBulb]: Example 6"]},
 "Figure 3.23  \[LightBulb]: Example 6"->{
  Cell[204614, 4868, 15171, 304, 
  550, "Output", "ExpressionUUID" -> "bbfeecbe-d19b-418e-8dca-fa926fe7548d",
   CellTags->"Figure 3.23  \[LightBulb]: Example 6"]},
 "Continuity"->{
  Cell[220376, 5196, 134, 2, 
  25, "Subsection", "ExpressionUUID" -> "ce4f51f2-bd14-4e9c-a41b-a36836e6663b",
   CellTags->"Continuity"]},
 "THEOREM 3.1 Differentiable Implies Continuous"->{
  Cell[220848, 5207, 777, 25, 
  73, "Theorem", "ExpressionUUID" -> "43f59d82-c6f9-4c7c-ac90-1cce46c2565f",
   CellTags->"THEOREM 3.1 Differentiable Implies Continuous"]},
 "Quick Check 6"->{
  Cell[229653, 5479, 835, 24, 
  29, "QuickCheck", "ExpressionUUID" -> "36fb36a9-742e-44f2-9108-218654ab0e37",
   CellTags->"Quick Check 6"]},
 "Figure 3.24: Not continuous at a point"->{
  Cell[231293, 5530, 46051, 765, 
  231, "Output", "ExpressionUUID" -> "d059f4e8-6b85-4533-8419-5fc84759767a",
   CellTags->"Figure 3.24: Not continuous at a point"]},
 "THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not Differentiable"->{
  Cell[277347, 6297, 837, 25, 
  73, "Theorem", "ExpressionUUID" -> "9841ea68-3be5-4f06-b841-f64a3f6b33dd",
   CellTags->
    "THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not Differentiable"]},
 "Figure 3.25  \[LightBulb]: Corner point"->{
  Cell[282423, 6446, 9176, 179, 
  449, "Output", "ExpressionUUID" -> "b9de39bc-b2fd-48ec-91cf-54279f1680e2",
   CellTags->"Figure 3.25  \[LightBulb]: Corner point"]},
 "Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line"->{
  Cell[294335, 6713, 28329, 526, 
  294, "Output", "ExpressionUUID" -> "1fcd7bca-e47d-4a39-8669-c941ec960c91",
   CellTags->"Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line"]},
 "IMPORTANT When Is a Function Not Differentiable at a Point?"->{
  Cell[322667, 7241, 1720, 55, 
  144, "Important", "ExpressionUUID" -> "c1a9c9e0-7fc3-43a3-ad09-c2e6b32320fc",
   CellTags->"IMPORTANT When Is a Function Not Differentiable at a Point?"]},
 "EXAMPLE 7 Continuous and differentiable"->{
  Cell[324412, 7300, 227, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "f487797d-4782-42f9-
   a5e4-91f56bd489fb",
   CellTags->"EXAMPLE 7 Continuous and differentiable"]},
 "Figure 3.27: Example 7"->{
  Cell[326248, 7364, 17094, 314, 
  401, "Output", "ExpressionUUID" -> "f54fdb65-8062-49c2-a9c2-7f89bd429762",
   CellTags->"Figure 3.27: Example 7"]},
 "Figure 3.28: Example 7"->{
  Cell[348033, 7837, 16616, 311, 
  400, "Output", "ExpressionUUID" -> "7eb26245-7507-4d42-a40d-60e39c2e3c84",
   CellTags->"Figure 3.28: Example 7"]},
 "SECTION 3.2 EXERCISES"->{
  Cell[364898, 8162, 146, 3, 
  25, "Subsection", "ExpressionUUID" -> "d98292cc-7727-4023-9fe6-fcdd8c0d5577",
   CellTags->"SECTION 3.2 EXERCISES"]},
 "\[EmptySmallCircle] Getting Started"->{
  Cell[365069, 8169, 175, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "69895706-b08e-4689-b8d0-
   a67a5848bfa7",
   CellTags->"\[EmptySmallCircle] Getting Started"]},
 "\[EmptySmallCircle] Practice Exercises"->{
  Cell[640895, 13028, 181, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "77c2e5e2-bfb2-4af7-ac20-
   aeb9d061c5a0",
   CellTags->"\[EmptySmallCircle] Practice Exercises"]},
 "\[EmptySmallCircle] Explorations and Challenges"->{
  Cell[1252967, 23857, 199, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "
   5b0ba4ff-2ada-44ab-8bb3-718fe1fa4325",
   CellTags->"\[EmptySmallCircle] Explorations and Challenges"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"3.2 The Derivative as a Function", 1466317, 29006},
 {"The Derivative Function", 1466501, 29010},
 {"Figure 3.14  \[LightBulb]: Instantaneous rate of change", 1466711, 29014},
 {"DEFINITION The Derivative", 1466924, 29018},
 {"EXAMPLE 1 Computing a derivative", 1467122, 29023},
 {"Figure 3.15  \[LightBulb]: Example 1", 1467334, 29028},
 {"Quick Check 1", 1467517, 29032},
 {"Derivative Notation", 1467685, 29036},
 {"Figure 3.16  \[LightBulb]: Slope of secant line", 1467886, 29040},
 {"Quick Check 2", 1468082, 29044},
 {"EXAMPLE 2 A derivative calculation", 1468266, 29048},
 {"Figure 3.17: Example 2", 1468467, 29053},
 {"Quick Check 3", 1468638, 29057},
 {"Quick Check 4", 1468801, 29061},
 {"EXAMPLE 3 Another derivative calculation", 1468991, 29065},
 {"Graphs of Derivatives", 1469198, 29070},
 {"EXAMPLE 4 Graph of the derivative", 1469388, 29074},
 {"Figure 3.18  \[LightBulb]: Example 4", 1469603, 29079},
 {"Figure 3.19  \[LightBulb]: Example 4", 1469811, 29083},
 {"EXAMPLE 5 Graph of the derivative", 1470017, 29087},
 {"Figure 3.20  \[LightBulb]: Example 5", 1470232, 29092},
 {"Figure 3.21  \[LightBulb]: Example 5", 1470440, 29096},
 {"Quick Check 5", 1470626, 29100},
 {"EXAMPLE 6 Graphing the derivative with asymptotes", 1470879, 29105},
 {"Figure 3.22  \[LightBulb]: Example 6", 1471110, 29110},
 {"Figure 3.23  \[LightBulb]: Example 6", 1471318, 29114},
 {"Continuity", 1471501, 29118},
 {"THEOREM 3.1 Differentiable Implies Continuous", 1471692, 29122},
 {"Quick Check 6", 1471884, 29126},
 {"Figure 3.24: Not continuous at a point", 1472072, 29130},
 {"THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not Differentiable", \
1472314, 29134},
 {"Figure 3.25  \[LightBulb]: Corner point", 1472559, 29139},
 {"Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line", 1472789, 29143},
 {"IMPORTANT When Is a Function Not Differentiable at a Point?", 1473040, \
29147},
 {"EXAMPLE 7 Continuous and differentiable", 1473276, 29151},
 {"Figure 3.27: Example 7", 1473483, 29156},
 {"Figure 3.28: Example 7", 1473664, 29160},
 {"SECTION 3.2 EXERCISES", 1473844, 29164},
 {"\[EmptySmallCircle] Getting Started", 1474036, 29168},
 {"\[EmptySmallCircle] Practice Exercises", 1474258, 29173},
 {"\[EmptySmallCircle] Explorations and Challenges", 1474493, 29178}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1540, 36, 200, 4, 42, "Section", "ExpressionUUID" -> \
"c168c650-c480-421d-9412-e80e3a05e290",
 CellTags->"3.2 The Derivative as a Function"],
Cell[1743, 42, 1149, 30, 47, "Text", "ExpressionUUID" -> \
"61fa8482-373c-4629-a877-969a0872c7e4"],
Cell[CellGroupData[{
Cell[2917, 76, 162, 3, 28, "Subsection", "ExpressionUUID" -> \
"edfa74b0-e836-4a27-b3f0-70872848c136",
 CellTags->"The Derivative Function"],
Cell[3082, 81, 880, 22, 62, "Text", "ExpressionUUID" -> \
"1dc2095e-23d9-41c5-adeb-5ec840b2775e"],
Cell[3965, 105, 7272, 141, 318, "Output", "ExpressionUUID" -> \
"bae5afa9-4a4a-441c-a816-29e302b095ca",
 CellTags->"Figure 3.14  \[LightBulb]: Instantaneous rate of change"],
Cell[11240, 248, 1431, 44, 47, "Text", "ExpressionUUID" -> \
"1f2544e5-0cc0-4858-84a6-014e3df010bf"],
Cell[12674, 294, 755, 23, 51, "Text", "ExpressionUUID" -> \
"8df677aa-a86c-4df4-98a9-31ae91cab5f2"],
Cell[13432, 319, 2974, 94, 83, "Text", "ExpressionUUID" -> \
"2f4b4cc2-6b40-45cc-ba39-708dae6c0d4d"],
Cell[CellGroupData[{
Cell[16431, 417, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"3d45524f-6cae-42d3-a59d-96642c88ab7d"],
Cell[16535, 419, 1235, 43, 37, "Callout", "ExpressionUUID" -> \
"21f48a90-765b-4318-b3df-b4365272fdee"]
}, Closed]],
Cell[17785, 465, 2456, 82, 155, "Definition", "ExpressionUUID" -> \
"e073f974-7b16-4fa5-bc43-788146064b92",
 CellTags->"DEFINITION The Derivative"],
Cell[CellGroupData[{
Cell[20266, 551, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"a9bf549d-3ba8-414c-9d0a-ea0be51a0507"],
Cell[20370, 553, 640, 22, 37, "Callout", "ExpressionUUID" -> \
"f353c530-8150-4ed5-a7e6-86d2cb33d933"]
}, Closed]],
Cell[21025, 578, 1284, 35, 44, "Text", "ExpressionUUID" -> \
"8db4005d-0e98-457d-a37b-376afaaab0d6"],
Cell[CellGroupData[{
Cell[22334, 617, 213, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"fcd35fbe-5acc-40d9-bc49-985ffc03714e",
 CellTags->"EXAMPLE 1 Computing a derivative"],
Cell[22550, 625, 372, 12, 33, "Text", "ExpressionUUID" -> \
"1ef648f0-e27c-422c-95b1-fb8d95770c11"],
Cell[CellGroupData[{
Cell[22947, 641, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"7a78b81f-ac1d-4374-a4e4-a80e73bacb61"],
Cell[23063, 643, 4313, 121, 226, "Text", "ExpressionUUID" -> \
"b7879681-f55c-4534-8ea7-2b00da27a72a"],
Cell[CellGroupData[{
Cell[27401, 768, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"8cdb2e1b-f54f-4b36-b253-0e7c11551359"],
Cell[27505, 770, 801, 24, 39, "Callout", "ExpressionUUID" -> \
"66a8292d-b2bc-4406-a728-f1fde548dd17"]
}, Closed]],
Cell[28321, 797, 1775, 58, 62, "Text", "ExpressionUUID" -> \
"e11c393a-8844-4e66-a051-95a9e5912f1f"],
Cell[30099, 857, 8253, 159, 450, "Output", "ExpressionUUID" -> \
"55db638e-a424-4089-8a02-7b0c4cfdf485",
 CellTags->"Figure 3.15  \[LightBulb]: Example 1"],
Cell[38355, 1018, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"8f85e119-370f-45f0-a199-6c531e947ecb"]
}, Closed]]
}, Open  ]],
Cell[38567, 1027, 905, 25, 29, "QuickCheck", "ExpressionUUID" -> \
"76dfd9b6-0e91-4bf5-90eb-b204d3f8ca8e",
 CellTags->"Quick Check 1"],
Cell[CellGroupData[{
Cell[39497, 1056, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"d53643ea-62c6-4b50-8c31-03ac15a0b66b"],
Cell[39612, 1058, 84, 0, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"4b8285a8-8ed8-4acc-bbd3-fa5b2310c6c6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[39745, 1064, 154, 3, 25, "Subsection", "ExpressionUUID" -> \
"fe09c2d2-7ee3-42aa-9a65-3609909b1b6a",
 CellTags->"Derivative Notation"],
Cell[39902, 1069, 2965, 87, 102, "Text", "ExpressionUUID" -> \
"745be8d9-75ba-4c56-a7cc-80b2d7a2799a"],
Cell[42870, 1158, 933, 25, 51, "Text", "ExpressionUUID" -> \
"58607073-e1c8-470c-a4b0-29f709eea297"],
Cell[43806, 1185, 14864, 287, 522, "Output", "ExpressionUUID" -> \
"52b65591-aee5-4e42-adae-ce468ee51caf",
 CellTags->"Figure 3.16  \[LightBulb]: Slope of secant line"],
Cell[58673, 1474, 527, 15, 29, "Text", "ExpressionUUID" -> \
"ad6e68c4-182f-4f19-8aa6-9f4502d2a79e"],
Cell[59203, 1491, 1530, 41, 51, "Text", "ExpressionUUID" -> \
"f147f953-077c-46a2-bc89-7692630aba7a"],
Cell[60736, 1534, 1001, 29, 51, "Text", "ExpressionUUID" -> \
"f00b0ffa-a3a2-479a-ba3e-25f7a124a870"],
Cell[CellGroupData[{
Cell[61762, 1567, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"32924c64-b67c-49b9-bb9a-7ad87ab9aea0"],
Cell[61866, 1569, 879, 30, 58, "Callout", "ExpressionUUID" -> \
"7e814677-425e-487e-82ea-5527b1222426"]
}, Closed]],
Cell[62760, 1602, 567, 16, 48, "Text", "ExpressionUUID" -> \
"7a99ca52-0c27-4b5c-9276-e805582a03bf"],
Cell[63330, 1620, 949, 28, 51, "Text", "ExpressionUUID" -> \
"2b30e5b3-642c-4838-85b1-b81d26bbb767"],
Cell[CellGroupData[{
Cell[64304, 1652, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"29afb1e3-c21b-432c-b992-9d47c8abbfdf"],
Cell[64408, 1654, 590, 12, 74, "Callout", "ExpressionUUID" -> \
"3191e4f9-9236-49b5-a04c-496f85c772b7"]
}, Closed]],
Cell[65013, 1669, 379, 10, 26, "Text", "ExpressionUUID" -> \
"832c11df-d4c4-4c01-95d5-80993e68ad46"],
Cell[65395, 1681, 1097, 33, 51, "Text", "ExpressionUUID" -> \
"b44a4d30-26fc-4786-a316-8cb275e81900"],
Cell[66495, 1716, 1097, 33, 29, "QuickCheck", "ExpressionUUID" -> \
"5612eb3b-04e8-4d83-b2fa-e22a971b9788",
 CellTags->"Quick Check 2"],
Cell[CellGroupData[{
Cell[67617, 1753, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"9d46ff84-4aba-4e5d-b89a-ec2a39a13aae"],
Cell[67732, 1755, 887, 27, 59, "QuickCheckAnswer", "ExpressionUUID" -> \
"b5e98309-6ff2-4d8d-bac8-6a4c6dfe9a58"]
}, Closed]],
Cell[CellGroupData[{
Cell[68656, 1787, 217, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"0b75de7f-0c65-4e74-9110-d594782228a7",
 CellTags->"EXAMPLE 2 A derivative calculation"],
Cell[68876, 1795, 299, 10, 39, "Text", "ExpressionUUID" -> \
"edc29701-0b98-4eab-897e-73272adfb44b"],
Cell[69178, 1807, 352, 11, 51, "Text", "ExpressionUUID" -> \
"1fb23dc8-f60a-4bf2-a07e-57a57d2f563c"],
Cell[69533, 1820, 460, 14, 29, "Text", "ExpressionUUID" -> \
"c5229d66-83e7-41c9-aaf6-44c6b53d5d08"],
Cell[CellGroupData[{
Cell[70018, 1838, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"8cf90c6c-e7d8-4ecb-83c5-ea9abdd8cc90"],
Cell[70134, 1840, 127, 4, 26, "Text", "ExpressionUUID" -> \
"441fd493-8c51-4dc7-9561-d3ebd274f78c"],
Cell[70264, 1846, 3366, 95, 185, "Text", "ExpressionUUID" -> \
"dd8b5b4b-3497-4be0-a71e-69dd527b8a0a"],
Cell[CellGroupData[{
Cell[73655, 1945, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"27435593-16ca-4687-8bf8-2e05ecbb7d9e"],
Cell[73759, 1947, 802, 24, 104, "Callout", "ExpressionUUID" -> \
"feb9a93b-075a-421e-85cd-3b1cd94b6707"]
}, Closed]],
Cell[74576, 1974, 326, 10, 26, "Text", "ExpressionUUID" -> \
"c7308476-e135-4ffc-8192-7feceadb726e"],
Cell[74905, 1986, 782, 24, 55, "Text", "ExpressionUUID" -> \
"0b963f64-1983-4756-a388-7781d13d79b7"],
Cell[75690, 2012, 184, 4, 29, "Text", "ExpressionUUID" -> \
"44f5213a-34e6-4c29-8e84-984c2776c3cd"],
Cell[75877, 2018, 668, 20, 51, "Text", "ExpressionUUID" -> \
"de286b91-629a-403c-b859-fa2a5dc620b7"],
Cell[76548, 2040, 47872, 795, 173, "Output", "ExpressionUUID" -> \
"01b1abc7-88ed-4cdc-83cc-40d45d6b076a",
 CellTags->"Figure 3.17: Example 2"],
Cell[124423, 2837, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"45ef687d-e354-4c4b-ac7d-a74e82b8700b"]
}, Closed]]
}, Open  ]],
Cell[124635, 2846, 916, 24, 29, "QuickCheck", "ExpressionUUID" -> \
"dd824096-9637-4689-9c96-57d7abd189f0",
 CellTags->"Quick Check 3"],
Cell[CellGroupData[{
Cell[125576, 2874, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"376a8ec9-35ab-48d6-a7ad-31a3c960a1ef"],
Cell[125691, 2876, 685, 21, 62, "QuickCheckAnswer", "ExpressionUUID" -> \
"fc3e52b8-b743-45ea-acb6-96a196f16429"]
}, Closed]],
Cell[126391, 2900, 1185, 35, 44, "Text", "ExpressionUUID" -> \
"d6ce3c12-7785-47f8-bf4d-9dfe291922ff"],
Cell[127579, 2937, 755, 23, 51, "Text", "ExpressionUUID" -> \
"6b46bf4f-257e-4564-a59c-0385b4ee5855"],
Cell[128337, 2962, 1179, 40, 51, "Text", "ExpressionUUID" -> \
"596db0bb-a7ca-4d9a-9dc6-1f36c462dec3"],
Cell[129519, 3004, 918, 26, 29, "QuickCheck", "ExpressionUUID" -> \
"86dcafd8-04ef-4020-8701-b35c99dfa80c",
 CellTags->"Quick Check 4"],
Cell[CellGroupData[{
Cell[130462, 3034, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"dc3a1a3c-f6c7-4c7c-b6fc-2c80fd9f8b18"],
Cell[130577, 3036, 1076, 35, 60, "QuickCheckAnswer", "ExpressionUUID" -> \
"cc3a2f8b-75a8-44d5-a3ec-8f6176e88b3f"]
}, Closed]],
Cell[CellGroupData[{
Cell[131690, 3076, 229, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"d5ac60c5-db29-4bbe-a201-ec3b40aad3d4",
 CellTags->"EXAMPLE 3 Another derivative calculation"],
Cell[131922, 3084, 498, 17, 52, "Text", "ExpressionUUID" -> \
"df6259c1-f359-49ff-a9bd-d11ae66918da"],
Cell[CellGroupData[{
Cell[132445, 3105, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"ff007886-db3c-4acb-9ef7-41d88005e92b"],
Cell[132561, 3107, 4033, 116, 282, "Text", "ExpressionUUID" -> \
"1f1c6a1b-1d5f-4981-be6b-072efd058211"],
Cell[136597, 3225, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"e1f13bdb-4d64-4f98-a986-749cef8465c9"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[136843, 3237, 158, 3, 25, "Subsection", "ExpressionUUID" -> \
"43b056ac-fab0-4a42-8b17-b1805ee2fc21",
 CellTags->"Graphs of Derivatives"],
Cell[137004, 3242, 928, 30, 26, "Text", "ExpressionUUID" -> \
"dfe06a08-3f91-4ae8-95df-0f7b4d7a101d"],
Cell[CellGroupData[{
Cell[137957, 3276, 215, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"73e687e5-50ac-4e53-9e41-4db24df7ce4d",
 CellTags->"EXAMPLE 4 Graph of the derivative"],
Cell[138175, 3284, 423, 13, 29, "Text", "ExpressionUUID" -> \
"9500664e-1dd9-4f8a-92d5-f06c26135cba"],
Cell[138601, 3299, 6854, 133, 267, "Output", "ExpressionUUID" -> \
"98564a49-cc70-476f-a004-31b0e186f7cd",
 CellTags->"Figure 3.18  \[LightBulb]: Example 4"],
Cell[CellGroupData[{
Cell[145480, 3436, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"589be95b-dc6c-4a92-ba9b-361f3c7d8a90"],
Cell[145596, 3438, 2314, 79, 65, "Text", "ExpressionUUID" -> \
"ef6f9e5b-cec4-4dd5-b23b-7930b7b562c9"],
Cell[CellGroupData[{
Cell[147935, 3521, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"d46968e3-dd23-4080-952d-d47d74af45e4"],
Cell[148039, 3523, 1901, 59, 138, "Callout", "ExpressionUUID" -> \
"41de95ef-200f-453c-800f-950be30e6b34"]
}, Closed]],
Cell[149955, 3585, 11049, 214, 312, "Output", "ExpressionUUID" -> \
"4f196fc6-0320-4d70-95ec-84f240b43f82",
 CellTags->"Figure 3.19  \[LightBulb]: Example 4"],
Cell[161007, 3801, 927, 29, 47, "Text", "ExpressionUUID" -> \
"91a79a16-88a0-4c4a-9af1-85a0d5b67f4c"],
Cell[161937, 3832, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"4503132f-fe57-40c2-be88-339a61ac361b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162171, 3843, 215, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"58f7bafe-e5ae-4fe1-8874-782abfcfb2e9",
 CellTags->"EXAMPLE 5 Graph of the derivative"],
Cell[162389, 3851, 596, 17, 31, "Text", "ExpressionUUID" -> \
"ac804af0-56b0-4e77-a149-a8660bf17bf3"],
Cell[162988, 3870, 6324, 123, 550, "Output", "ExpressionUUID" -> \
"94543d55-cf92-4621-be4c-b9a55458c477",
 CellTags->"Figure 3.20  \[LightBulb]: Example 5"],
Cell[CellGroupData[{
Cell[169337, 3997, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"eafb9fb2-67de-4c81-872c-db3ce838f219"],
Cell[169453, 3999, 453, 11, 26, "Text", "ExpressionUUID" -> \
"f71ee06f-2e27-4d9d-9552-368f4423a8d0"],
Cell[169909, 4012, 735, 23, 29, "Text", "ExpressionUUID" -> \
"26e3b2b6-0371-4bc1-8b45-ab24ef16deb1"],
Cell[170647, 4037, 783, 25, 31, "Text", "ExpressionUUID" -> \
"e0d4c623-9642-4b4f-91b5-0789366b7892"],
Cell[171433, 4064, 441, 13, 29, "Text", "ExpressionUUID" -> \
"191ed5d4-0410-4d8c-85a8-feb16ea5447e"],
Cell[171877, 4079, 1272, 41, 47, "Text", "ExpressionUUID" -> \
"6d16eae0-3f31-4358-8b06-1b7ab77ec0ff"],
Cell[173152, 4122, 1524, 50, 47, "Text", "ExpressionUUID" -> \
"3809cc9c-b707-4478-90aa-cca4c444f621"],
Cell[174679, 4174, 822, 25, 29, "Text", "ExpressionUUID" -> \
"fe39b6ec-3ef1-4a24-bd20-b389ed0dbc92"],
Cell[175504, 4201, 14431, 282, 578, "Output", "ExpressionUUID" -> \
"f35a6fb7-36ae-4ff0-bfc3-3efb764ec4d7",
 CellTags->"Figure 3.21  \[LightBulb]: Example 5"],
Cell[189938, 4485, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"89671d7f-769f-4c37-89e4-0b386c7d71d8"]
}, Closed]]
}, Open  ]],
Cell[190150, 4494, 1627, 51, 29, "QuickCheck", "ExpressionUUID" -> \
"bcff7e1f-5407-46a8-b193-ebd2e6eadf17",
 CellGroupingRules->{"GroupTogetherGrouping", 41},
 CellTags->"Quick Check 5"],
Cell[CellGroupData[{
Cell[191802, 4549, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"06ff2ac8-0e56-4c84-8671-88f26a397904"],
Cell[191917, 4551, 90, 0, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"684f2e8d-b497-41f9-8491-18f840244ee4"]
}, Closed]],
Cell[CellGroupData[{
Cell[192044, 4556, 247, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"5127c522-2e57-4c88-9586-6c4b71af0b13",
 CellTags->"EXAMPLE 6 Graphing the derivative with asymptotes"],
Cell[192294, 4564, 322, 8, 29, "Text", "ExpressionUUID" -> \
"e9ac842b-0b18-4da0-97ac-d88aefb1d94a"],
Cell[192619, 4574, 7637, 152, 522, "Output", "ExpressionUUID" -> \
"7bc1b505-b1c6-483f-86da-91de75729e4e",
 CellTags->"Figure 3.22  \[LightBulb]: Example 6"],
Cell[CellGroupData[{
Cell[200281, 4730, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"225d5eed-d74a-439f-87f4-1e81c62fcf14"],
Cell[200397, 4732, 209, 3, 26, "Text", "ExpressionUUID" -> \
"17137d9e-b717-4a12-b84c-7c292bc9615c"],
Cell[CellGroupData[{
Cell[200631, 4739, 689, 23, 44, "Item", "ExpressionUUID" -> \
"81c048b4-add5-43ae-8e78-1a7b1d0c0951"],
Cell[201323, 4764, 559, 16, 23, "Item", "ExpressionUUID" -> \
"c421360f-eec8-43bb-b130-a68883bea7a0"],
Cell[201885, 4782, 550, 17, 44, "Item", "ExpressionUUID" -> \
"793519d3-b336-4fb5-9bb9-9828aacf20aa"],
Cell[202438, 4801, 409, 11, 44, "Item", "ExpressionUUID" -> \
"793519d3-b336-4fb5-9bb9-9828aacf20aa"],
Cell[202850, 4814, 334, 8, 23, "Item", "ExpressionUUID" -> \
"484d203f-e5ce-48fc-8a2e-59b91d7ea082"]
}, Closed]],
Cell[203199, 4825, 1412, 41, 44, "Text", "ExpressionUUID" -> \
"87cb44ee-bdbf-493d-847a-7b4da85de604"],
Cell[204614, 4868, 15171, 304, 550, "Output", "ExpressionUUID" -> \
"bbfeecbe-d19b-418e-8dca-fa926fe7548d",
 CellTags->"Figure 3.23  \[LightBulb]: Example 6"],
Cell[CellGroupData[{
Cell[219810, 5176, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"fd4b075b-93c4-4e2f-a2b7-7a6ebb8ead32"],
Cell[219914, 5178, 201, 3, 37, "Callout", "ExpressionUUID" -> \
"508d7a4b-45c7-41f2-a878-a96d67721c06"]
}, Closed]],
Cell[220130, 5184, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"3ca90008-3e8c-4663-ac97-92bbc3c7680b"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[220376, 5196, 134, 2, 25, "Subsection", "ExpressionUUID" -> \
"ce4f51f2-bd14-4e9c-a41b-a36836e6663b",
 CellTags->"Continuity"],
Cell[220513, 5200, 332, 5, 44, "Text", "ExpressionUUID" -> \
"6e8ff120-dd7f-400f-8e46-7548dd98916a"],
Cell[220848, 5207, 777, 25, 73, "Theorem", "ExpressionUUID" -> \
"43f59d82-c6f9-4c7c-ac90-1cce46c2565f",
 CellTags->"THEOREM 3.1 Differentiable Implies Continuous"],
Cell[221628, 5234, 401, 11, 29, "Text", "ExpressionUUID" -> \
"f9f387e9-9de2-4e58-b25e-197e9615a18b"],
Cell[222032, 5247, 722, 22, 51, "Text", "ExpressionUUID" -> \
"e0c689d9-e244-4812-8888-c2ac0143ed6a"],
Cell[222757, 5271, 677, 20, 39, "Text", "ExpressionUUID" -> \
"47d72d67-38b5-4858-886c-02a61b08c5ff"],
Cell[223437, 5293, 922, 28, 51, "Text", "ExpressionUUID" -> \
"b7c12bf1-b1ba-47fa-9004-6d7f24a9be66"],
Cell[CellGroupData[{
Cell[224384, 5325, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"16e5cfe4-a9d2-4d49-8581-9a482a94d825"],
Cell[224488, 5327, 488, 12, 37, "Callout", "ExpressionUUID" -> \
"9bbe0d40-01be-47dd-a015-feb41548141c"]
}, Closed]],
Cell[224991, 5342, 391, 10, 26, "Text", "ExpressionUUID" -> \
"8636bf9b-a634-4c7a-98a8-ab28f3f49a72"],
Cell[225385, 5354, 3575, 100, 157, "Text", "ExpressionUUID" -> \
"30e50563-f262-4676-902e-69daaf3d895f"],
Cell[228963, 5456, 687, 21, 39, "Text", "ExpressionUUID" -> \
"f94fa3cf-a0f0-4a27-866f-4bdb3f20339a"],
Cell[229653, 5479, 835, 24, 29, "QuickCheck", "ExpressionUUID" -> \
"36fb36a9-742e-44f2-9108-218654ab0e37",
 CellTags->"Quick Check 6"],
Cell[230491, 5505, 799, 23, 47, "Text", "ExpressionUUID" -> \
"b6aa522a-12fb-4c53-b95b-347701a2743e"],
Cell[231293, 5530, 46051, 765, 231, "Output", "ExpressionUUID" -> \
"d059f4e8-6b85-4533-8419-5fc84759767a",
 CellTags->"Figure 3.24: Not continuous at a point"],
Cell[277347, 6297, 837, 25, 73, "Theorem", "ExpressionUUID" -> \
"9841ea68-3be5-4f06-b841-f64a3f6b33dd",
 CellTags->
  "THEOREM 3.1 (ALTERNATIVE) Not Continuous Implies Not Differentiable"],
Cell[CellGroupData[{
Cell[278209, 6326, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"85b68ba4-af56-4a83-b219-4c68869c2bf2"],
Cell[278313, 6328, 612, 12, 141, "Callout", "ExpressionUUID" -> \
"de332b2c-bf96-41c5-9ce2-c2489975210d"]
}, Closed]],
Cell[278940, 6343, 2861, 84, 80, "Text", "ExpressionUUID" -> \
"eed79131-17c6-45e3-9397-907bf1edd1d8"],
Cell[CellGroupData[{
Cell[281826, 6431, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"dfc6dc8b-44f3-4388-a72c-f211864c477f"],
Cell[281930, 6433, 478, 10, 37, "Callout", "ExpressionUUID" -> \
"a437296f-1202-4393-acf0-1c995e1aa6e2"]
}, Closed]],
Cell[282423, 6446, 9176, 179, 449, "Output", "ExpressionUUID" -> \
"b9de39bc-b2fd-48ec-91cf-54279f1680e2",
 CellTags->"Figure 3.25  \[LightBulb]: Corner point"],
Cell[CellGroupData[{
Cell[291624, 6629, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"670b1881-1f13-4a61-9cf2-9296cdead3dc"],
Cell[291728, 6631, 830, 26, 57, "Callout", "ExpressionUUID" -> \
"46f81281-481a-4372-859c-fe641cfd3de3"]
}, Closed]],
Cell[292573, 6660, 1457, 41, 82, "Text", "ExpressionUUID" -> \
"36da9903-00d6-4eb9-a6c2-536c1058a375"],
Cell[CellGroupData[{
Cell[294055, 6705, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"0027fcd4-eb4f-47c3-8ac9-7e011aaf29a1"],
Cell[294159, 6707, 161, 3, 37, "Callout", "ExpressionUUID" -> \
"8f00cb7e-04c0-4c4d-828d-8e4e5c485416"]
}, Closed]],
Cell[294335, 6713, 28329, 526, 294, "Output", "ExpressionUUID" -> \
"1fcd7bca-e47d-4a39-8669-c941ec960c91",
 CellTags->"Figure 3.26  \[LightBulb]: Cusp / Vertical tangent line"],
Cell[322667, 7241, 1720, 55, 144, "Important", "ExpressionUUID" -> \
"c1a9c9e0-7fc3-43a3-ad09-c2e6b32320fc",
 CellTags->"IMPORTANT When Is a Function Not Differentiable at a Point?"],
Cell[CellGroupData[{
Cell[324412, 7300, 227, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"f487797d-4782-42f9-a5e4-91f56bd489fb",
 CellTags->"EXAMPLE 7 Continuous and differentiable"],
Cell[324642, 7308, 275, 8, 29, "Text", "ExpressionUUID" -> \
"e4424189-4bbb-453c-8677-193e6358ded3"],
Cell[324920, 7318, 1325, 44, 65, "Text", "ExpressionUUID" -> \
"fdd8d140-9c65-4cdd-8143-422bc44cf269"],
Cell[326248, 7364, 17094, 314, 401, "Output", "ExpressionUUID" -> \
"f54fdb65-8062-49c2-a9c2-7f89bd429762",
 CellTags->"Figure 3.27: Example 7"],
Cell[CellGroupData[{
Cell[343367, 7682, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"4b524403-28b9-44dc-8433-a4391c1c0e7a"],
Cell[343483, 7684, 602, 17, 26, "Text", "ExpressionUUID" -> \
"cfe8ea23-dd49-431f-88f4-80787f946904"],
Cell[344088, 7703, 655, 17, 29, "Text", "ExpressionUUID" -> \
"52590bc2-a622-45bf-b4c2-79b7088da86e"],
Cell[344746, 7722, 233, 6, 29, "Text", "ExpressionUUID" -> \
"da9adbad-8102-4137-a4c2-7c114658b023"],
Cell[CellGroupData[{
Cell[345004, 7732, 625, 20, 23, "Item", "ExpressionUUID" -> \
"a9f572ee-a803-4320-acd8-1bda47e84e9f"],
Cell[345632, 7754, 605, 19, 23, "Item", "ExpressionUUID" -> \
"8bb67f60-fb62-48ac-9ac6-eca850042d18"],
Cell[346240, 7775, 1136, 37, 24, "Item", "ExpressionUUID" -> \
"c543061f-7966-41cc-9c17-b58595966a4b"],
Cell[347379, 7814, 639, 20, 23, "Item", "ExpressionUUID" -> \
"2f6b28fd-e271-46a1-99b3-78ece0a0a35a"]
}, Closed]],
Cell[348033, 7837, 16616, 311, 400, "Output", "ExpressionUUID" -> \
"7eb26245-7507-4d42-a40d-60e39c2e3c84",
 CellTags->"Figure 3.28: Example 7"],
Cell[364652, 8150, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"f82b287b-9c97-4407-9130-f36f1ed17422"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[364898, 8162, 146, 3, 25, "Subsection", "ExpressionUUID" -> \
"d98292cc-7727-4023-9fe6-fcdd8c0d5577",
 CellTags->"SECTION 3.2 EXERCISES"],
Cell[CellGroupData[{
Cell[365069, 8169, 175, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"69895706-b08e-4689-b8d0-a67a5848bfa7",
 CellTags->"\[EmptySmallCircle] Getting Started"],
Cell[365247, 8174, 419, 13, 26, "Problem", "ExpressionUUID" -> \
"1256c0ab-7486-42b6-a65b-7a7cddbdfa90"],
Cell[365669, 8189, 814, 27, 29, "Problem", "ExpressionUUID" -> \
"9fae3a10-35d2-406b-b4a6-a3a2045b54ee"],
Cell[366486, 8218, 399, 11, 51, "Problem", "ExpressionUUID" -> \
"bd9cb6af-bb35-469b-8ef7-f527b4ff8517"],
Cell[366888, 8231, 427, 12, 29, "Problem", "ExpressionUUID" -> \
"4a6a4b0c-2d08-4de6-8951-173914d5d2aa"],
Cell[367318, 8245, 945, 32, 29, "Problem", "ExpressionUUID" -> \
"5d907e65-e1c0-4350-8a8a-77ecd905eb06"],
Cell[368266, 8279, 945, 32, 29, "Problem", "ExpressionUUID" -> \
"560da633-dd89-4fdc-98c9-28fb1152a578"],
Cell[369214, 8313, 633, 20, 29, "Problem", "ExpressionUUID" -> \
"6de69f7f-4686-49df-9fe0-127298418562"],
Cell[369850, 8335, 633, 20, 29, "Problem", "ExpressionUUID" -> \
"e0f980a0-2188-4df2-9af6-0689fd33b661"],
Cell[370486, 8357, 840, 28, 29, "Problem", "ExpressionUUID" -> \
"27ba4d8f-8614-4bf4-8abc-60773c65f18b"],
Cell[371329, 8387, 567, 18, 29, "Problem", "ExpressionUUID" -> \
"653c8b9c-df7f-4bfd-97b6-fdf1c1d7746e"],
Cell[371899, 8407, 519, 18, 29, "Problem", "ExpressionUUID" -> \
"3ab68d2f-9492-484b-9d89-200bc00b2f11"],
Cell[372421, 8427, 540, 19, 29, "Problem", "ExpressionUUID" -> \
"22939cee-962d-4ec8-a342-a5d71e981d2e"],
Cell[372964, 8448, 1213, 38, 51, "Problem", "ExpressionUUID" -> \
"678f49a7-d019-448f-85d2-229af8e4317e"],
Cell[374180, 8488, 1384, 42, 47, "Problem", "ExpressionUUID" -> \
"bd717769-ca05-4b4b-9314-c39c2a2b7971"],
Cell[375567, 8532, 286, 7, 29, "Problem", "ExpressionUUID" -> \
"b5994208-58c7-40b9-a1c7-35fa86b710f4"],
Cell[375856, 8541, 46678, 772, 252, "Output", "ExpressionUUID" -> \
"43866ce5-150b-4ce4-b552-917b0d0fc078"],
Cell[422537, 9315, 25759, 429, 257, "Output", "ExpressionUUID" -> \
"5d56dfca-b63b-4dcc-a21f-d1d448b774e6"],
Cell[448299, 9746, 316, 7, 29, "Problem", "ExpressionUUID" -> \
"80dc77b2-8106-446a-b731-9f4fa20a02cd"],
Cell[448618, 9755, 27385, 455, 262, "Output", "ExpressionUUID" -> \
"5ebe719f-58c0-475e-ae08-128766996d86"],
Cell[476006, 10212, 64994, 1072, 265, "Output", "ExpressionUUID" -> \
"de994fd5-180c-41dc-8c8e-9f18debdd0dd"],
Cell[541003, 11286, 515, 15, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "543a2b72-f73d-40c5-9e66-5e889c69e40a"],
Cell[541521, 11303, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"8a8e88f4-1dd1-4aa3-aae1-bbd32348ece4"],
Cell[541655, 11309, 25654, 427, 167, "Output", "ExpressionUUID" -> \
"2ed7a721-05f2-4da2-afeb-2a3ee3c28ef2"],
Cell[567312, 11738, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"08532d2e-3e9b-46ce-a54a-5a16fc497b89"],
Cell[567446, 11744, 21392, 357, 176, "Output", "ExpressionUUID" -> \
"9b3302ed-626c-4c70-9814-63a1eda1eecc"],
Cell[588841, 12103, 296, 8, 29, "Problem", "ExpressionUUID" -> \
"86d3f361-64f0-41ab-a91d-7f172dd54898"],
Cell[589140, 12113, 1107, 37, 40, "SubProblem", "ExpressionUUID" -> \
"b908d467-8708-4246-889f-26f33891eeb2"],
Cell[590250, 12152, 26613, 443, 233, "Output", "ExpressionUUID" -> \
"77557c41-dfee-40a8-b363-348613f0b46a"],
Cell[616866, 12597, 296, 8, 29, "Problem", "ExpressionUUID" -> \
"78b036d3-2c25-40a5-b1b3-3a98b6c1ca12"],
Cell[617165, 12607, 1107, 37, 40, "SubProblem", "ExpressionUUID" -> \
"89fac9d5-736a-40ae-bfc4-f002bc65ebc9"],
Cell[618275, 12646, 22583, 377, 232, "Output", "ExpressionUUID" -> \
"41d8a197-2b8c-4eac-8169-2de97d21f28b"]
}, Closed]],
Cell[CellGroupData[{
Cell[640895, 13028, 181, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"77c2e5e2-bfb2-4af7-ac20-aeb9d061c5a0",
 CellTags->"\[EmptySmallCircle] Practice Exercises"],
Cell[641079, 13033, 191, 6, 26, "ExerciseDirectionsCell", "ExpressionUUID" -> \
"96148c44-9b11-42f6-aee5-b05f774e1666"],
Cell[641273, 13041, 362, 10, 19, "SubProblem", "ExpressionUUID" -> \
"67d59db8-3e2f-4bd7-b848-52fd5022de1c"],
Cell[641638, 13053, 480, 16, 19, "SubProblem", "ExpressionUUID" -> \
"6bb69e84-fb64-44ab-9b4b-be81133e8c41"],
Cell[642121, 13071, 503, 17, 29, "Problem", "ExpressionUUID" -> \
"ff8e26dd-fc40-4932-b0a8-5f04480a7dd7"],
Cell[642627, 13090, 478, 16, 29, "Problem", "ExpressionUUID" -> \
"c9a53d51-350f-4744-a175-5c80f05d0628"],
Cell[643108, 13108, 536, 18, 33, "Problem", "ExpressionUUID" -> \
"3d39f0ee-6447-4112-92f4-bee9d5cf26d8"],
Cell[643647, 13128, 556, 19, 33, "Problem", "ExpressionUUID" -> \
"bd464d4b-68c1-417c-a1d3-f3b0b1ec9c4c"],
Cell[644206, 13149, 557, 19, 51, "Problem", "ExpressionUUID" -> \
"e006c720-21b4-42f0-a4d1-7450ceda6567"],
Cell[644766, 13170, 527, 18, 48, "Problem", "ExpressionUUID" -> \
"fbe696c7-067b-4e40-8a29-5b831c6066df"],
Cell[645296, 13190, 520, 18, 53, "Problem", "ExpressionUUID" -> \
"0273b59d-b134-4dd7-b7b4-0cbe35d5178d"],
Cell[645819, 13210, 526, 19, 39, "Problem", "ExpressionUUID" -> \
"02ded522-df76-41ca-84db-860f0c1783dc"],
Cell[646348, 13231, 598, 21, 33, "Problem", "ExpressionUUID" -> \
"65bf3e72-09df-467d-828b-66755379d489"],
Cell[646949, 13254, 551, 19, 33, "Problem", "ExpressionUUID" -> \
"eb18cef1-d7cf-49d4-9f5b-457be06dd539"],
Cell[647503, 13275, 594, 16, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "86328296-604e-40e3-b345-160c4b5e08c3"],
Cell[648100, 13293, 682, 22, 19, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "4543fa1b-a033-4f98-b01e-bfcb86019282"],
Cell[648785, 13317, 496, 15, 19, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "d14c3b78-46db-4df6-98ab-e1b0fd19fc04"],
Cell[649284, 13334, 413, 14, 33, "Problem", "ExpressionUUID" -> \
"71b347d7-d8ba-49f4-8a3e-3d35c4038c1c"],
Cell[649700, 13350, 425, 14, 33, "Problem", "ExpressionUUID" -> \
"9e4caa81-9bd1-4d18-a127-960ff09d6244"],
Cell[650128, 13366, 886, 29, 51, "Problem", "ExpressionUUID" -> \
"f65da522-22b8-43f8-aeb2-2e969cc7292f"],
Cell[651017, 13397, 917, 30, 51, "Problem", "ExpressionUUID" -> \
"099a55de-aa2f-41c5-a660-72a6d2c04ea5"],
Cell[651937, 13429, 192, 6, 29, "ExerciseDirectionsCell", "ExpressionUUID" -> \
"25849dfd-a66f-4465-80bd-348194c5e701"],
Cell[652132, 13437, 1003, 32, 40, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "dc73f701-4fe7-415e-9498-3b031c1612f5"],
Cell[653138, 13471, 538, 18, 33, "Problem", "ExpressionUUID" -> \
"61824f06-20f9-45b7-b526-31db6c929757"],
Cell[653679, 13491, 537, 18, 33, "Problem", "ExpressionUUID" -> \
"a9b78807-54e9-4309-bda2-0d0dd1693de4"],
Cell[654219, 13511, 494, 17, 39, "Problem", "ExpressionUUID" -> \
"371575b9-c985-41c8-bcb8-d6d7da819cd0"],
Cell[654716, 13530, 472, 16, 39, "Problem", "ExpressionUUID" -> \
"ca3cc478-2e7e-4631-8bb6-d21525b2512d"],
Cell[655191, 13548, 523, 18, 51, "Problem", "ExpressionUUID" -> \
"5eb7a940-d83f-4b11-b121-f4e60b9e940e"],
Cell[655717, 13568, 475, 16, 51, "Problem", "ExpressionUUID" -> \
"3de6b264-d966-4041-b740-15da1ef9ad56"],
Cell[656195, 13586, 1494, 41, 70, "TProblem", "ExpressionUUID" -> \
"960b6edf-b5df-4b15-888f-3ea1658204c2"],
Cell[657692, 13629, 1011, 32, 61, "SubProblem", "ExpressionUUID" -> \
"72ea6452-29d7-47f7-9f16-c7788e3656f5"],
Cell[658706, 13663, 61020, 1007, 223, "Output", "ExpressionUUID" -> \
"1499033e-55ba-4d8f-b139-093ac2d5cb3d"],
Cell[719729, 14672, 1041, 35, 29, "Problem", "ExpressionUUID" -> \
"7ddd589e-2b15-434f-8cfd-a11d5887b5bf"],
Cell[720773, 14709, 188, 6, 29, "Problem", "ExpressionUUID" -> \
"b36e2674-1753-4099-95f4-d81d989c7dfc"],
Cell[720964, 14717, 893, 28, 41, "SubProblem", "ExpressionUUID" -> \
"7bc0c11e-2055-47b0-af3c-10e8cef9b935"],
Cell[721860, 14747, 614, 21, 23, "SubProblem", "ExpressionUUID" -> \
"716afd00-dc2e-42aa-a9ee-dc94ab8bf71d"],
Cell[722477, 14770, 332, 11, 19, "SubProblem", "ExpressionUUID" -> \
"e6ddf0e0-88b0-4db2-a18d-6c2e90229f20"],
Cell[722812, 14783, 188, 6, 29, "Problem", "ExpressionUUID" -> \
"9b5d6cfa-be67-4fd4-be14-d600f6d65ef0"],
Cell[723003, 14791, 728, 23, 41, "SubProblem", "ExpressionUUID" -> \
"f3f31212-5c1e-4373-8829-47ff0cc580e3"],
Cell[723734, 14816, 570, 20, 29, "SubProblem", "ExpressionUUID" -> \
"31c8769b-9983-40af-b4ed-9113e6937569"],
Cell[724307, 14838, 353, 12, 19, "SubProblem", "ExpressionUUID" -> \
"d0e964d1-6f41-4d71-a05a-d1ca915a12bd"],
Cell[724663, 14852, 839, 26, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "62efa8e7-68a9-41ef-946f-3477722377b2"],
Cell[725505, 14880, 619, 19, 61, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "148b3cae-82e4-4f32-9af8-c854d3772fa9"],
Cell[726127, 14901, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"be1b683a-033d-411a-9a0c-4b0dd1714ea0"],
Cell[726261, 14907, 34904, 579, 166, "Output", "ExpressionUUID" -> \
"e2ca8a47-687f-490c-9cf2-c373968eb1d5"],
Cell[761168, 15488, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"642bc348-7250-4a65-aa63-0af09d3da0a2"],
Cell[761302, 15494, 30874, 513, 165, "Output", "ExpressionUUID" -> \
"18ad7f79-3da2-4d38-af90-956046e90e46"],
Cell[792179, 16009, 325, 8, 29, "Problem", "ExpressionUUID" -> \
"75131f09-6ba1-4bd1-bee1-2848f07f87d8"],
Cell[792507, 16019, 87432, 1440, 372, "Output", "ExpressionUUID" -> \
"aaffb8bb-e137-4d5f-bbec-246e8954d783"],
Cell[879942, 17461, 91047, 1499, 370, "Output", "ExpressionUUID" -> \
"a833def0-2263-4722-b6e5-c2af76e0b1f4"],
Cell[970992, 18962, 513, 15, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "08d570c2-5bc5-41d9-acab-2e4785669523"],
Cell[971508, 18979, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"f98766f8-5efd-4565-85c3-db20195b60df"],
Cell[971642, 18985, 27529, 458, 195, "Output", "ExpressionUUID" -> \
"85c34a6a-b7f1-479e-88e6-2655d4929026"],
Cell[999174, 19445, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"3a0969ce-38ef-433f-b5ec-c48732d47677"],
Cell[999308, 19451, 23515, 392, 194, "Output", "ExpressionUUID" -> \
"47a79b96-6fb2-4fe4-babd-342a7b8b9dce"],
Cell[1022826, 19845, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"19710855-9524-4fe8-99e4-40c8c961d137"],
Cell[1022960, 19851, 22071, 368, 198, "Output", "ExpressionUUID" -> \
"1332fb06-cf37-414c-89ec-00e10dfa5714"],
Cell[1045034, 20221, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"565fe633-3685-4fc9-8a47-b8b81e70a3b4"],
Cell[1045168, 20227, 44022, 728, 270, "Output", "ExpressionUUID" -> \
"4f73aa8c-85be-4bc5-a4e4-01cbfffd4c47"],
Cell[1089193, 20957, 131, 4, 29, "Problem", "ExpressionUUID" -> \
"84164b88-1ca8-4311-ad3c-c9ad0b2f4061"],
Cell[1089327, 20963, 43062, 712, 258, "Output", "ExpressionUUID" -> \
"4cd122d1-9e4a-4d92-9a1d-c08e975decf0"],
Cell[1132392, 21677, 388, 11, 29, "Problem", "ExpressionUUID" -> \
"ba72d970-e3da-4ea8-af80-1815abd4e7a1"],
Cell[1132783, 21690, 1264, 43, 61, "SubProblem", "ExpressionUUID" -> \
"4559a0f4-b447-4af4-9cb4-6d5763789627"],
Cell[1134050, 21735, 26613, 443, 232, "Output", "ExpressionUUID" -> \
"215cd2b0-2add-4615-bb2e-cbbf5716baad"],
Cell[1160666, 22180, 388, 11, 29, "Problem", "ExpressionUUID" -> \
"9808ab9f-88cb-4bda-a74c-64ab135370b5"],
Cell[1161057, 22193, 1264, 43, 61, "SubProblem", "ExpressionUUID" -> \
"1180735a-08a3-44b4-9e61-f44c31144a0f"],
Cell[1162324, 22238, 27373, 455, 231, "Output", "ExpressionUUID" -> \
"def9a4e0-5cb4-4e34-b79a-d45cf65ed8f5"],
Cell[1189700, 22695, 470, 11, 47, "Problem", "ExpressionUUID" -> \
"a1606400-bb0e-4176-b087-2c93a5bbfab2"],
Cell[1190173, 22708, 328, 9, 19, "SubProblem", "ExpressionUUID" -> \
"10953aea-a4d5-4f8f-a220-538c8b660075"],
Cell[1190504, 22719, 446, 14, 19, "SubProblem", "ExpressionUUID" -> \
"ea117f7a-8347-4c71-aa78-ebaae7639da2"],
Cell[1190953, 22735, 327, 9, 19, "SubProblem", "ExpressionUUID" -> \
"2699b848-39f3-44ac-88dc-c5951e71fe0d"],
Cell[1191283, 22746, 332, 9, 19, "SubProblem", "ExpressionUUID" -> \
"0fc0680d-6312-4235-a8a2-62f440563e88"],
Cell[1191618, 22757, 28891, 480, 272, "Output", "ExpressionUUID" -> \
"8aa10277-2ae3-4e73-bc86-f69589b05eb0"],
Cell[1220512, 23239, 632, 17, 47, "Problem", "ExpressionUUID" -> \
"2dbac501-209d-4c93-a5c5-c3ca99bb13cb"],
Cell[1221147, 23258, 328, 9, 19, "SubProblem", "ExpressionUUID" -> \
"51ba8696-0d2a-4db7-8f2e-394fd3231110"],
Cell[1221478, 23269, 446, 14, 19, "SubProblem", "ExpressionUUID" -> \
"be45de3c-84fe-4caa-af32-5240009fa03a"],
Cell[1221927, 23285, 327, 9, 19, "SubProblem", "ExpressionUUID" -> \
"85a3e9a0-e685-45b5-b6ab-42e3a20fe389"],
Cell[1222257, 23296, 332, 9, 19, "SubProblem", "ExpressionUUID" -> \
"eed06e07-87b8-4f33-8427-a10b15d2636e"],
Cell[1222592, 23307, 27899, 464, 271, "Output", "ExpressionUUID" -> \
"cab8771a-032d-4237-8203-8964da02e745"],
Cell[1250494, 23773, 293, 8, 29, "Problem", "ExpressionUUID" -> \
"4cf2568a-37b0-41b7-ac10-8c3b2b48e48a"],
Cell[1250790, 23783, 679, 20, 19, "SubProblem", "ExpressionUUID" -> \
"00789aef-b606-45ff-a6f4-da0bda73a654"],
Cell[1251472, 23805, 686, 20, 19, "SubProblem", "ExpressionUUID" -> \
"98ecdd27-d2b8-4fc1-9fbe-791367da7866"],
Cell[1252161, 23827, 769, 25, 19, "SubProblem", "ExpressionUUID" -> \
"2db8afa7-8ef7-4e53-a059-edc992298184"]
}, Closed]],
Cell[CellGroupData[{
Cell[1252967, 23857, 199, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"5b0ba4ff-2ada-44ab-8bb3-718fe1fa4325",
 CellTags->"\[EmptySmallCircle] Explorations and Challenges"],
Cell[1253169, 23862, 980, 31, 48, "Problem", "ExpressionUUID" -> \
"ba958247-e3a6-463e-b427-b663aada5bfa"],
Cell[1254152, 23895, 321, 10, 23, "SubProblem", "ExpressionUUID" -> \
"7d3ddecb-6814-4d60-a22f-58eb5fd063fd"],
Cell[1254476, 23907, 321, 10, 23, "SubProblem", "ExpressionUUID" -> \
"11dd0b56-4b25-48a5-8561-6cca7d555b00"],
Cell[1254800, 23919, 321, 10, 23, "SubProblem", "ExpressionUUID" -> \
"720bcb5c-1c24-43f7-ac9b-529a9b22b45c"],
Cell[1255124, 23931, 721, 22, 20, "SubProblem", "ExpressionUUID" -> \
"2dc3f477-73d4-4b63-b86b-5297d9e7fb18"],
Cell[1255848, 23955, 3123, 87, 96, "Problem", "ExpressionUUID" -> \
"c2c0c7e0-346b-48e8-a753-67a49911c960"],
Cell[1258974, 24044, 876, 28, 29, "Problem", "ExpressionUUID" -> \
"be0a228d-568e-4906-952a-078cff2f2ecd"],
Cell[1259853, 24074, 904, 28, 29, "Problem", "ExpressionUUID" -> \
"6b3a6e9e-8a7b-42f5-839a-18d2ab5b2822"],
Cell[1260760, 24104, 3194, 87, 112, "Problem", "ExpressionUUID" -> \
"62805b95-2370-4f56-8826-2ff0553ad13d"],
Cell[1263957, 24193, 555, 15, 47, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "29955277-80ce-440a-9d2d-fbd1feb001ae"],
Cell[1264515, 24210, 499, 17, 29, "Problem", "ExpressionUUID" -> \
"b40347d0-c138-4587-91b5-57efca211585"],
Cell[1265017, 24229, 446, 15, 39, "Problem", "ExpressionUUID" -> \
"ef7a860e-2bc1-4e85-97e3-0876656ba5c3"],
Cell[1265466, 24246, 455, 15, 51, "Problem", "ExpressionUUID" -> \
"06ba1083-cb7b-42c5-9062-9a15624be117"],
Cell[1265924, 24263, 505, 17, 33, "Problem", "ExpressionUUID" -> \
"949ad6f7-a18c-4766-b6c5-1c92b173126b"],
Cell[1266432, 24282, 1278, 38, 47, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "db9f301c-38d1-4365-80bd-42eaaeca26b3"],
Cell[1267713, 24322, 514, 17, 33, "Problem", "ExpressionUUID" -> \
"5f8e171d-98bf-4988-984d-bc5f7cd7c27f"],
Cell[1268230, 24341, 567, 19, 33, "Problem", "ExpressionUUID" -> \
"62fac0f3-cea8-4508-b4f2-75755c7e9aab"],
Cell[1268800, 24362, 506, 17, 51, "Problem", "ExpressionUUID" -> \
"406805ef-2fe3-4769-804c-979f521f270f"],
Cell[1269309, 24381, 547, 19, 39, "Problem", "ExpressionUUID" -> \
"32a53498-1ef0-46ac-9fdd-04587e4b9499"],
Cell[1269859, 24402, 2081, 72, 91, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "5facd463-197b-4944-8af5-c1d67b086d3c"],
Cell[1271943, 24476, 1333, 49, 61, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "7a934b48-29aa-494c-ba16-d8e2a8a12fb5"],
Cell[1273279, 24527, 522, 16, 29, "Problem", "ExpressionUUID" -> \
"4be60839-3980-48e4-8023-a310b1badd06"],
Cell[1273804, 24545, 2180, 62, 55, "Problem", "ExpressionUUID" -> \
"a27fccc8-0eb2-46b9-8292-6fca50f35282"],
Cell[1275987, 24609, 1644, 48, 75, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "d148f275-aab7-440d-a4a1-17e0e4189628"],
Cell[1277634, 24659, 745, 24, 34, "TProblem", "ExpressionUUID" -> \
"618ab7fa-76a9-407a-ad7f-51ec5546abd3"],
Cell[1278382, 24685, 1413, 53, 95, "SubProblem", "ExpressionUUID" -> \
"9c7b88cc-425e-4829-848b-aa8c7010f2d7"],
Cell[1279798, 24740, 1853, 59, 68, "Problem", "ExpressionUUID" -> \
"be21e55b-e2cf-4ee8-b5a3-9903733956c5"],
Cell[1281654, 24801, 532, 17, 33, "Problem", "ExpressionUUID" -> \
"e8563962-809a-41c2-8f45-98f785d2092c"],
Cell[1282189, 24820, 254, 7, 29, "Problem", "ExpressionUUID" -> \
"88ec629a-61de-4c25-ad9b-bd25f3abad8f"],
Cell[1282446, 24829, 639, 23, 45, "SubProblem", "ExpressionUUID" -> \
"6f123f7a-6b1e-47e5-bc4d-29620b71b128"],
Cell[1283088, 24854, 163, 5, 29, "Problem", "ExpressionUUID" -> \
"44c823ba-d694-4947-9ced-23b5157e881e"],
Cell[1283254, 24861, 1969, 54, 43, "SubProblem", "ExpressionUUID" -> \
"ca771c96-35f7-4a33-a994-db5e6537a045"],
Cell[1285226, 24917, 462, 16, 19, "SubProblem", "ExpressionUUID" -> \
"41e88f40-b259-4231-9080-16f81a227038"],
Cell[1285691, 24935, 462, 16, 19, "SubProblem", "ExpressionUUID" -> \
"c134395d-7d2d-46ec-9504-4e5bab79a60a"],
Cell[1286156, 24953, 286, 9, 19, "SubProblem", "ExpressionUUID" -> \
"2c9a4eac-2d21-4321-9087-3e37aff41b70"],
Cell[1286445, 24964, 279, 8, 19, "SubProblem", "ExpressionUUID" -> \
"205c174b-13f6-41f1-8bd8-47952070f7cf"],
Cell[1286727, 24974, 614, 20, 55, "Problem", "ExpressionUUID" -> \
"aadc0d17-85c6-40f4-b018-002ccb9bf91c"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature 4KNMRHnSbLh4MKksIb38ado1 *)
