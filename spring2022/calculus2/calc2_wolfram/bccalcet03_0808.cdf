(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.1' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   1650147,      32591]
NotebookOptionsPosition[   1423095,      27593]
NotebookOutlinePosition[   1611460,      31808]
CellTagsIndexPosition[   1609274,      31762]
WindowTitle->Section 8.8 Numerical Integration
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["8.8 Numerical Integration", "SectionTitleFont"]], \
"Section",
 CellTags->
  "8.8 Numerical \
Integration",ExpressionUUID->"0f263b4e-1a5c-48e7-9445-866a30a93d68"],

Cell[TextData[{
 "Situations arise in which the analytical methods we have developed so far \
cannot be used to evaluate a definite integral. For example, an integrand may \
not have an obvious antiderivative (such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", " ", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "ecc1cb12-2b38-4752-bc87-a878f392dce0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", "ln"}], " ", "x"}], TraditionalForm]],ExpressionUUID->
  "d7edb679-2d23-4316-83a7-2153f87b7b50"],
 "), or perhaps the integrand is represented by individual data points, which \
makes finding an antiderivative impossible."
}], "Text",ExpressionUUID->"6194d0d8-2d51-4f02-9612-26d58adcd391"],

Cell[TextData[{
 "\tWhen analytical methods fail, we often turn to ",
 StyleBox["numerical methods",
  FontSlant->"Italic"],
 ", which are typically done on a calculator or computer. These methods do \
not produce exact values of definite integrals, but they provide \
approximations that are generally quite accurate. Many calculators, software \
packages, and computer algebra systems have built-in numerical integration \
methods. In this section, we explore some of these methods."
}], "Text",ExpressionUUID->"5b2ccb95-44b4-47a1-8526-cc5d77a11463"],

Cell[CellGroupData[{

Cell["Absolute and Relative Error  \[RightGuillemet]", "Subsection",
 CellTags->
  "Absolute and Relative \
Error",ExpressionUUID->"356fcef9-f62b-4cc2-a416-7ab2e59457ee"],

Cell[TextData[{
 "Because numerical methods do not typically produce exact results, we should \
be concerned about the accuracy of approximations, which leads to the ideas \
of ",
 StyleBox["absolute",
  FontSlant->"Italic"],
 " and",
 StyleBox[" relative error",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"41844f8d-c05b-4c82-8299-c801156c8f27"],

Cell[TextData[{
 StyleBox["DEFINITIONS", "DefinitionFont"],
 "\t",
 StyleBox["Absolute and Relative Error",
  FontWeight->"Bold"],
 "\nSuppose ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "1d617699-96ef-446b-9b30-a672ff3080a2"],
 " is a computed numerical solution to a problem having an exact solution ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "be2a1b32-9d57-417c-8311-36696763b06f"],
 ". There are two common measures of the error in ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "c47e3ff4-d66d-44b5-b422-e2b037541b13"],
 " as an approximation to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "857bfe65-e2dc-43ad-b93d-594fcf3cdaeb"],
 ": \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          StyleBox[
           RowBox[{"absolute", " ", "error"}],
           FontWeight->"Bold"], 
          StyleBox["\[AlignmentMarker]",
           FontWeight->"Bold"], "=", 
          RowBox[{"\[LeftBracketingBar]", 
           RowBox[{"c", "-", "x"}], "\[RightBracketingBar]"}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "9d8fcec5-1efa-44e5-a73b-b75540eef412"],
 "\nand \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{GridBox[{
         {
          RowBox[{
           StyleBox[
            RowBox[{"relative", " ", "error"}],
            FontWeight->"Bold"], 
           StyleBox["\[AlignmentMarker]",
            FontWeight->"Bold"], "=", 
           FractionBox[
            RowBox[{"\[LeftBracketingBar]", 
             RowBox[{"c", "-", "x"}], "\[RightBracketingBar]"}], 
            RowBox[{
            "\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"Center"}}}], "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"if", " ", "x"}], "\[NotEqual]", "0"}], ")"}], ".", Cell[
        "",ExpressionUUID->"12c49abc-36bb-41e8-9525-59f39423eaed"]}]}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "35683c2b-4cab-4919-aaa9-81077ed387b2"]
}], "Definition",
 CellTags->
  "DEFINITIONS Absolute and Relative \
Error",ExpressionUUID->"9dd982c7-d5da-4346-b299-6b01c5e59501"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"627beffd-4adb-45f2-b53b-37d91bf6003d"],

Cell["\<\
Because the exact solution is usually not known, the goal in practice is to \
estimate the maximum size of the error.\
\>", "Callout",ExpressionUUID->"aef77558-8ef2-426c-94a8-82c00438a6c2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 1\t", "ExampleFont"],
 "Absolute and relative error"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 1 Absolute and relative \
error",ExpressionUUID->"0d48d670-2155-4c8c-99cb-f1a724bdce37"],

Cell[TextData[{
 "The ancient Greeks used ",
 Cell[BoxData[
  FormBox[
   FractionBox["22", "7"], TraditionalForm]],ExpressionUUID->
  "e43a0704-8ed8-4cc8-a186-056f89062e06"],
 " to approximate the value of ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]],ExpressionUUID->
  "a868c9f0-a9d0-431b-adb2-8917ea9dde0a"],
 ". Determine the absolute and relative error in this approximation to ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]],ExpressionUUID->
  "c1ce883d-ce42-4110-932d-7449a78a3f7b"],
 "."
}], "Text",ExpressionUUID->"c00804f6-55e7-4f55-b814-a2916773e4f1"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"a25298a8-2f52-4350-821b-b5a99e74e5c6"],

Cell[TextData[{
 "Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    FractionBox["22", "7"]}], TraditionalForm]],ExpressionUUID->
  "8b274cb6-5184-46d0-8f98-542fae0a44dd"],
 " be the approximate value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "b6b23b41-b5b5-4ca2-91e7-0fbc661f8268"],
 ", we find that "
}], "Text",ExpressionUUID->"67152e9b-0818-43bc-b9d9-a6fd9dae2f4f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"absolute", " ", "error"}], "=", 
         RowBox[{
          RowBox[{"\[LeftBracketingBar]", 
           RowBox[{
            FractionBox["22", "7"], "-", "\[Pi]"}], "\[RightBracketingBar]"}],
           "\[TildeTilde]", "0.00126"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4eaf4ed0-d20f-48e7-a831-adf3652eb57c"]], \
"Text",ExpressionUUID->"5b0f8bfd-8bd2-451e-a0aa-3739618107d5"],

Cell["and ", "Text",ExpressionUUID->"1a38b2f9-df39-48b5-a2c9-0003bd79e9d7"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         RowBox[{
          RowBox[{"relative", " ", "error"}], "=", 
          FractionBox[
           RowBox[{"\[LeftBracketingBar]", 
            RowBox[{
             RowBox[{"22", "/", "7"}], "-", "\[Pi]"}], 
            "\[RightBracketingBar]"}], 
           RowBox[{
           "\[LeftBracketingBar]", "\[Pi]", "\[RightBracketingBar]"}]]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}], "\[TildeTilde]", 
      "0.000402", "\[TildeTilde]", 
      RowBox[{"0.04", "\[InvisibleSpace]", 
       RowBox[{"%", "."}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c91acc40-b21b-44f1-b3c5-8525473ab2b2"]], \
"Text",ExpressionUUID->"8f941610-e314-4aaa-a287-acf8ffc9870d"],

Cell[TextData[{
 "Related Exercises ",
 "11\[Dash]14",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"b2169a0e-6383-48c1-9d99-bc6cba0b4571"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Midpoint Rule  \[RightGuillemet]", "Subsection",
 CellTags->
  "Midpoint Rule",ExpressionUUID->"e79ddbdc-85dd-42b0-8a23-01df1e6f681f"],

Cell[TextData[{
 "Many numerical integration methods are based on the ideas that underlie \
Riemann sums; these methods approximate the net area of regions bounded by \
curves. A typical problem is shown in ",
 StyleBox["Figure 8.12", "FigureFontText"],
 ", where we see a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "76d9b455-d6a9-4b85-aa10-d150a366a845"],
 " defined on an interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "2e077961-1370-47bd-9f27-07ba0a90ac7e"],
 ". The goal is to approximate the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"fc0480e0-b68f-4487-8484-00d06a0d01a7"],
 ". As with Riemann sums, we first partition the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "163de0a8-b230-463c-ad15-35a758d5beff"],
 " into ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "b236849a-f7a8-45e9-8b37-2b0f5a6ccc9a"],
 " subintervals of equal length ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{"b", "-", "a"}], "n"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "cc6d5246-1181-4bd6-8dc6-8b79e4e74381"],
 ". This partition establishes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "1d1009c7-0c7b-4358-b755-1e9b8f43f7a0"],
 " grid points "
}], "Text",ExpressionUUID->"e9fa2eb0-2067-4ff5-8a64-f271bbd3d846"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "=", "a"}], ",", "    ", 
         RowBox[{
          SubscriptBox["x", "1"], "=", 
          RowBox[{"a", "+", 
           RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}], ",", 
         "    ", 
         RowBox[{
          SubscriptBox["x", "2"], "=", 
          RowBox[{"a", "+", 
           RowBox[{"2", "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}], ",",
          "\[Ellipsis]", ",", "    ", 
         RowBox[{
          SubscriptBox["x", "k"], "=", 
          RowBox[{"a", "+", 
           RowBox[{"k", " ", "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}],
          ",", "\[Ellipsis]", ",", "    ", 
         RowBox[{
          SubscriptBox["x", "n"], "=", 
          RowBox[{"b", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c053e56d-9d9d-4804-885b-48408861e2db"]], \
"Text",ExpressionUUID->"c2abc622-b814-49e6-8de2-b27da1f72e0a"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "0838cb82-dda9-4373-9f5f-d1cf9ea6ceab"],
 " subinterval is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"k", "-", "1"}]], ",", 
     SubscriptBox["x", "k"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "167df0a1-9de7-4c00-bfbd-bed9817d9ba7"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", "2", ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"256bb957-0aee-475e-a34f-35bd3a7e1815"],
 "."
}], "Text",ExpressionUUID->"c59cf460-7158-444b-89b0-0e5294e5303f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 1, $CellContext`bValue$$ = 
            9, $CellContext`kValue$$ = 1, $CellContext`nValue$$ = 3, 
            Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
            Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
            Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
            Typeset`specs$$ = {{{
                Hold[$CellContext`kValue$$], 1, 
                "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
               Dynamic[$CellContext`nValue$$], 1}, {{
                Hold[$CellContext`nValue$$], 3, 
                "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 3, 15, 1}, {{
                Hold[$CellContext`aValue$$], 1}, 0}, {{
                Hold[$CellContext`bValue$$], 9}, 0}}, 
            Typeset`size$$ = {576., {203.9150390625, 210.0849609375}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`kValue$33474$$ = 
            0, $CellContext`nValue$33475$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 1, $CellContext`bValue$$ = 
               9, $CellContext`kValue$$ = 1, $CellContext`nValue$$ = 3}, 
             "ControllerVariables" :> {
               Hold[$CellContext`kValue$$, $CellContext`kValue$33474$$, 0], 
               Hold[$CellContext`nValue$$, $CellContext`nValue$33475$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, 
             "Body" :> (
              If[$CellContext`kValue$$ > $CellContext`nValue$$, \
$CellContext`kValue$$ = $CellContext`nValue$$]; Grid[{{
                  Show[{
                    Module[{$CellContext`x$}, 
                    $CellContext`RiemannSum[
                    $CellContext`funcC8F12[$CellContext`x$], {$CellContext`x$,
                     1, 9}, $CellContext`ComputationMethod -> 
                    "Midpoint", $CellContext`Intervals -> \
$CellContext`nValue$$, $CellContext`AreaColor -> \
$CellContext`bcAreaPositiveColor, $CellContext`BorderColor -> \
$CellContext`bcAreaPositiveBorderColor, $CellContext`ShowAreaValue -> False]], 
                    Plot[
                    $CellContext`funcC8F12[$CellContext`x], {$CellContext`x, 
                    0, 10}, PlotStyle -> {{Thick, Black}}], 
                    Graphics[{
                    Arrowheads[{0, 0.02}], Black, 
                    Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["m", $CellContext`kValue$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F12[$CellContext`aValue$$ + ($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], 
                    Text[
                    Framed[
                    Pane[
                    
                    Row[{"Height of \!\(TraditionalForm\`k\)th \
rectangle\!\(TraditionalForm\`\(\(\[InvisiblePostfixScriptBase]\)\(=\)\(f(\*\
SubscriptBox[\(m\), \(k\)])\)\)\)", "\n", 
                    "Area of \!\(TraditionalForm\`k\)th \
rectangle\!\(TraditionalForm\`\(\(\[InvisiblePostfixScriptBase]\)\(=\)\(\(f(\*\
SubscriptBox[\(m\), \(k\)])\) \[CapitalDelta]\[VeryThinSpace]x\)\)\)"}], \
$CellContext`bcPBS], $CellContext`bcFO], {0, 8}, {-1.1, 1.1}], 
                    Text[
                    Pane[
                    Row[{"\!\(TraditionalForm\`\(\(area\)\(=\)\(\\ \)\)\)", 
                    TraditionalForm[
                    RawBoxes[
                    RowBox[{"\!\(TraditionalForm\`\(\(f\)\((\)\)\)", 
                    SubscriptBox["m", $CellContext`kValue$$], 
                    "\!\(TraditionalForm\`\(\(\[InvisibleSpace]\)\()\)\) \
\[CapitalDelta]\[VeryThinSpace]x\)"}]]]}], $CellContext`bcPBS], {2, 6}, {
                    0, -1}], Gray, 
                    Arrowheads[0.02], 
                    AbsoluteThickness[1], 
                    
                    Arrow[{{2, 
                    6}, {$CellContext`aValue$$ + ($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0.8 $CellContext`funcC8F12[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], $CellContext`bcR, Thick, 
                    AbsoluteThickness[4], 
                    
                    Line[{{$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F12[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, {$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F12[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], Black, 
                    Table[
                    Text[
                    Subscript[
                    "\!\(\*StyleBox[\"m\",FontSlant->\"Italic\"]\)", \
$CellContext`i], {$CellContext`aValue$$ + ($CellContext`i - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), -1}, {
                    0, -1.2}], {$CellContext`i, 1, $CellContext`nValue$$}], 
                    Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0}, $CellContext`bcR], {$CellContext`i, 
                    1, $CellContext`nValue$$}], 
                    Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F12[$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, $CellContext`bcB], \
{$CellContext`i, 1, $CellContext`nValue$$}]}]}, 
                   PlotRange -> {{-0.5, 11}, {-1, 8}}, Ticks -> {
                    
                    Join[{{$CellContext`aValue$$, 
                    "\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)"}, \
{$CellContext`bValue$$, "\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\)"}}, 
                    
                    Table[{$CellContext`aValue$$ + $CellContext`i \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), 
                    Subscript[
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", \
$CellContext`i]}, {$CellContext`i, 1, $CellContext`nValue$$ - 1}]], None}, 
                   BaseStyle -> $CellContext`bcBSG, ImageSize -> 8 72, 
                   AxesOrigin -> {0, 0}, AxesStyle -> Arrowheads[0.02], 
                   AxesLabel -> {
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", 
                    "\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)"}, Epilog -> {
                    Text[
                    "\!\(TraditionalForm\`y = f(x)\)", {11, 2}, {1, -1}]}]}, {
                 
                  Framed[
                   Pane[
                   "Midpoint Rule: \
\!\(TraditionalForm\`\*SubsuperscriptBox[\(\[Integral]\), \(\(\\ \)\(a\)\), \
\(\(\\ \)\(b\)\)]\(f(x)\)\\ d\[VeryThinSpace]x \[TildeTilde] \
\(f(\*SubscriptBox[\(m\), \(1\)])\) \[CapitalDelta]\[VeryThinSpace]x + \
\(f(\*SubscriptBox[\(m\), \(2\)])\) \[CapitalDelta]\[VeryThinSpace]x + \
\[CenterEllipsis] + \(f(\*SubscriptBox[\(m\), \(n\)])\) \[CapitalDelta]\
\[VeryThinSpace]x\)", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO]}}, 
                BaseStyle -> "TR"]), 
             "Specifications" :> {{{$CellContext`kValue$$, 1, 
                 "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
                Dynamic[$CellContext`nValue$$], 1, ControlType -> Slider, 
                ImageSize -> 
                Small}, {{$CellContext`nValue$$, 3, 
                 "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 3, 15, 1, 
                ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`aValue$$, 1}, 0, ControlType -> 
                None}, {{$CellContext`bValue$$, 9}, 0, ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {754., {228., 236.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`x = 3, $CellContext`RiemannSum[
                  Pattern[$CellContext`expr, 
                   Blank[]], {
                   Pattern[$CellContext`var, 
                    Blank[]], 
                   Pattern[$CellContext`varMin, 
                    Blank[]], 
                   Pattern[$CellContext`varMax, 
                    Blank[]]}, 
                  Pattern[$CellContext`opts, 
                   BlankNullSequence[]]] := 
                Module[{$CellContext`xValues, $CellContext`yValues, \
$CellContext`\[CapitalDelta]x, $CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`optPlot, $CellContext`twocolorarea, $CellContext`twocoloredge, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype, $CellContext`partition}, {$CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype} = ReplaceAll[
                    
                    ReplaceAll[{$CellContext`Intervals, \
$CellContext`ShowPicture, $CellContext`AreaColor, $CellContext`BorderColor, \
$CellContext`ComputationMethod, $CellContext`ShowPoints, \
$CellContext`ShowAreaValue, $CellContext`PartitionType}, {$CellContext`opts}], 
                    
                    Options[$CellContext`RiemannSum]]; \
$CellContext`twocolorarea = 
                   If[Length[$CellContext`areacolor] == 2, True, 
                    False]; $CellContext`twocoloredge = 
                   If[Length[$CellContext`edgecolor] == 2, True, 
                    False]; $CellContext`optPlot = FilterRules[
                    Flatten[{$CellContext`opts, 
                    Options[$CellContext`RiemannSum]}], 
                    Options[Plot]]; $CellContext`\[CapitalDelta]x = 
                   N[($CellContext`varMax - \
$CellContext`varMin)/$CellContext`intervals]; $CellContext`partition = 
                   Switch[$CellContext`partitiontype, "Random", 
                    Append[
                    Prepend[
                    Sort[
                    
                    RandomReal[{$CellContext`varMin, $CellContext`varMax}, \
$CellContext`intervals - 1]], $CellContext`varMin], $CellContext`varMax], 
                    "Uniform", 
                    
                    Table[$CellContext`varMin + $CellContext`i $CellContext`\
\[CapitalDelta]x, {$CellContext`i, 
                    0, $CellContext`intervals}]]; $CellContext`xValues = 
                   Switch[$CellContext`method, "Left", 
                    Drop[$CellContext`partition, -1], "Right", 
                    Drop[$CellContext`partition, 1], "Midpoint", 
                    
                    Table[(Part[$CellContext`partition, $CellContext`i] + 
                    Part[$CellContext`partition, $CellContext`i + 1])/
                    2, {$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Table[
                    Part[$CellContext`partition, $CellContext`i] + 
                    Random[] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], 
                    "Trapezoid", $CellContext`partition, 
                    "Simpson", $CellContext`partition]; $CellContext`yValues = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> \
$CellContext`xValues]; If[$CellContext`showPicture === True, 
                    Show[{
                    Plot[
                    
                    Evaluate[$CellContext`expr], {$CellContext`var, \
$CellContext`varMin, $CellContext`varMax}, 
                    Evaluate[$CellContext`optPlot], 
                    PlotStyle -> {{Thick, Black}}, Prolog -> 
                    Switch[$CellContext`method, "Left", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Right", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Midpoint", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i + 1]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Simpson", {
                    Table[{$CellContext`areacolor, 
                    EdgeForm[$CellContext`edgecolor], 
                    Polygon[
                    Join[{{
                    Part[$CellContext`partition, $CellContext`i], 0}}, 
                    $CellContext`QuadraticPath[$CellContext`expr, \
$CellContext`var, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`partition, $CellContext`i + 2]}], {{
                    Part[$CellContext`partition, $CellContext`i + 2], 
                    0}}]]}, {$CellContext`i, 1, $CellContext`intervals - 1, 
                    2}]}], Epilog -> If[$CellContext`showpoints === True, 
                    Switch[$CellContext`method, "Left", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Right", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Midpoint", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1}]}, "Simpson", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1, 2}], 
                    Table[{Black, 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 2, $CellContext`intervals + 1, 2}]}], {Black}]]}, 
                    Evaluate[$CellContext`optPlot], PlotLabel -> 
                    If[$CellContext`showareavalue, 
                    Row[{" Area \[TildeTilde] ", 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}], None], Axes -> 
                    True], {$CellContext`intervals, 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}]], 
                Options[$CellContext`RiemannSum] = {$CellContext`Intervals -> 
                  10, $CellContext`ShowPicture -> 
                  True, $CellContext`AreaColor -> 
                  RGBColor[0.976, 0.871, 0.812], $CellContext`BorderColor -> 
                  RGBColor[0.796, 0, 0.42], AspectRatio -> 
                  GoldenRatio^(-1), $CellContext`ComputationMethod -> 
                  "Left", $CellContext`ShowPoints -> 
                  True, $CellContext`ShowAreaValue -> 
                  True, $CellContext`PartitionType -> 
                  "Uniform"}, $CellContext`\[CapitalDelta]x = 
                1/100, $CellContext`i = 1, $CellContext`QuadraticPath[
                  Pattern[$CellContext`expr, 
                   Blank[]], 
                  Pattern[$CellContext`var, 
                   Blank[]], {
                   Pattern[$CellContext`x0, 
                    Blank[]], 
                   Pattern[$CellContext`x1, 
                    Blank[]]}] := 
                Module[{$CellContext`partition, $CellContext`y0, \
$CellContext`y1, $CellContext`xm, $CellContext`ym, $CellContext`coefficientA, \
$CellContext`coefficientB, $CellContext`coefficientC}, $CellContext`xm = \
($CellContext`x0 + $CellContext`x1)/2; $CellContext`partition = N[
                    
                    Table[$CellContext`i, {$CellContext`i, $CellContext`x0, \
$CellContext`x1, ($CellContext`x1 - $CellContext`x0)/12}]]; $CellContext`y0 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 1]]; $CellContext`ym = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 7]]; $CellContext`y1 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 
                    13]]; $CellContext`coefficientA = ($CellContext`x1 \
(-$CellContext`y0 + $CellContext`ym) + $CellContext`xm ($CellContext`y0 - \
$CellContext`y1) + $CellContext`x0 (-$CellContext`ym + \
$CellContext`y1))/((($CellContext`x0 - $CellContext`xm) ($CellContext`x0 - \
$CellContext`x1)) ($CellContext`xm - $CellContext`x1)); \
$CellContext`coefficientB = ($CellContext`x1^2 ($CellContext`y0 - \
$CellContext`ym) + $CellContext`x0^2 ($CellContext`ym - $CellContext`y1) + \
$CellContext`xm^2 (-$CellContext`y0 + $CellContext`y1))/((($CellContext`x0 - \
$CellContext`xm) ($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - \
$CellContext`x1)); $CellContext`coefficientC = ((($CellContext`x0 \
$CellContext`x1) (-$CellContext`x0 + $CellContext`x1)) $CellContext`ym + \
$CellContext`xm^2 ($CellContext`x1 $CellContext`y0 - $CellContext`x0 \
$CellContext`y1) + $CellContext`xm ((-$CellContext`x1^2) $CellContext`y0 + \
$CellContext`x0^2 $CellContext`y1))/((($CellContext`x0 - $CellContext`xm) \
($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - $CellContext`x1)); 
                  Table[{
                    
                    Part[$CellContext`partition, $CellContext`i], \
$CellContext`coefficientA 
                    Part[$CellContext`partition, $CellContext`i]^2 + \
$CellContext`coefficientB 
                    Part[$CellContext`partition, $CellContext`i] + \
$CellContext`coefficientC}, {$CellContext`i, 1, 13}]], $CellContext`funcC8F12[
                 
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                3.4077287672712275` - 2.742196116267417 $CellContext`x + 
                 1.6646833353919273` $CellContext`x^2 - 
                 0.2629848021682558 $CellContext`x^3 + 
                 0.012199299434364114` $CellContext`x^4, \
$CellContext`bcAreaPositiveColor = 
                RGBColor[
                 0.796, 0.91, 0.855], $CellContext`bcAreaPositiveBorderColor = 
                RGBColor[0.467, 0.753, 0.651], $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> {
                    GrayLevel[0.85], 
                    Dashing[{0}]}, Background -> 
                  GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.12\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.12  \[LightBulb]: Midpoint \
Rule",ExpressionUUID->"8ede8485-de1d-4af8-a467-83fc20e7521c"],

Cell[TextData[{
 "\tThe Midpoint Rule approximates the region under the curve using \
rectangles. The bases of the rectangles have width ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"45c0be64-b5b4-4ccb-afce-cb9bb2ce5675"],
 ". The height of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "3ff4f819-1dfd-48ad-94ac-5a24766efc0f"],
 " rectangle is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["m", "k"], ")"}], TraditionalForm]],ExpressionUUID->
  "c105d767-d0cc-405a-9808-22b6f908e989"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "k"], "=", 
    FormBox[
     FractionBox[
      RowBox[{
       SubscriptBox["x", 
        RowBox[{"k", "-", "1"}]], "+", 
       SubscriptBox["x", "k"]}], "2"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "28f4e132-ce5b-4d4c-b0a8-6a7b1b598c1f"],
 " is the midpoint of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "2da55d60-f2aa-418e-85ed-fd1b1a65a0a1"],
 " subinterval (Figure 8.12). Therefore, the net area of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "dda0c031-d745-479c-a4ef-e58c47b597c3"],
 " rectangle is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["m", "k"], ")"}], " ", "\[CapitalDelta]", 
    "\[VeryThinSpace]", "x"}], TraditionalForm]],ExpressionUUID->
  "9e4e7cee-3d59-4b8a-a9ba-a0a4abc2ced8"],
 "."
}], "Text",ExpressionUUID->"7c465a7b-3dcb-4113-b6fa-9d4c04f1b316"],

Cell[TextData[{
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "d2b71336-5ad2-4f72-9f5d-e1939b3bc04e"],
 " be the Midpoint Rule approximation to the integral using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "d95065ec-4e4d-474b-86a8-c90877ad92ff"],
 " rectangles. Summing the net areas of the rectangles, we have "
}], "Text",ExpressionUUID->"559546af-d66c-41a2-861e-5da26122b774"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FormBox[
          RowBox[{
           SubsuperscriptBox["\[Integral]", "a", "b"], 
           RowBox[{
            RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", 
            "x"}]}],
          TraditionalForm], "\[AlignmentMarker]\[AlignmentMarker]", 
         "\[TildeTilde]", 
         RowBox[{"M", "(", "n", ")"}]}]},
       {
        RowBox[{"\[AlignmentMarker]\[AlignmentMarker]", 
         RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "1"], ")"}], "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}], "+", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "2"], ")"}], " ", "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}], "+", "\[CenterEllipsis]", "+", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "n"], ")"}], " ", "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}]}]}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "\[AlignmentMarker]", "=", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], "n"], 
          RowBox[{
           RowBox[{"f", "(", 
            FractionBox[
             RowBox[{
              SubscriptBox["x", 
               RowBox[{"k", "-", "1"}]], "+", 
              SubscriptBox["x", "k"]}], "2"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", 
           RowBox[{"x", "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0edcf42e-4f37-423e-b077-64f69465eeed"]], \
"Text",ExpressionUUID->"38ecd2e7-0db7-4c7f-a9c0-2dc5e5a18e25"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"8ff92544-7a8e-464f-9790-ec9a61cf2095"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["m", "k"], ")"}], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"a5f73cac-2dbb-4643-964d-4c528ff3834d"],
 " for some ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "d032fd62-fab1-4269-8ea0-4368a18609d5"],
 ", then the net area of that rectangle is negative, which makes a negative \
contribution to the approximation (Section 5.2)."
}], "Callout",ExpressionUUID->"bf3edf14-7dff-420d-a340-ca32751c7572"]
}, Closed]],

Cell[TextData[{
 "Just as with Riemann sums, the Midpoint Rule approximations to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"43cea314-ec15-461c-b9ee-07ce8d326b8e"],
 " generally improve as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0b5ff153-9560-4998-a43e-e9dc04a9faf6"],
 " increases."
}], "Text",ExpressionUUID->"c83739a1-069b-4f19-9457-9bb8077cb5ca"],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["Midpoint Rule",
  FontWeight->"Bold"],
 "\nSuppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7b72b163-79fb-4d0a-8902-d25ffe53d1dd"],
 " is defined and integrable on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "1b0cc3f3-76f4-47de-a4a9-580a7cbc3aca"],
 ". The ",
 StyleBox["Midpoint Rule approximation",
  FontWeight->"Bold"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"2864c111-36f9-496e-97a9-88242e5e9155"],
 " using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ae80c6b7-f887-43c5-a326-0b4772b74524"],
 " equally spaced subintervals on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "5b58cb44-6bcd-4d93-b8bd-e43552197517"],
 " is \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"M", "(", "n", ")"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "1"], ")"}], " ", "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}], "+", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "2"], ")"}], " ", "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}], "+", "\[CenterEllipsis]", "+", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["m", "n"], ")"}], " ", "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}]}]}]},
        {
         RowBox[{
          RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "1"}], "n"], 
            RowBox[{
             RowBox[{"f", "(", 
              FractionBox[
               RowBox[{
                SubscriptBox["x", 
                 RowBox[{"k", "-", "1"}]], "+", 
                SubscriptBox["x", "k"]}], "2"], ")"}], " ", "\[CapitalDelta]",
              "\[VeryThinSpace]", "x"}]}]}], ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "a52da818-de65-4976-b9b9-9a3b776b37d8"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{"b", "-", "a"}], "n"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "0d0e55a4-0519-403c-ad63-c2247ebc4135"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "a"}], TraditionalForm]],ExpressionUUID->
  "ddcc5e2e-21b0-4a03-89fc-bed9d23a84c6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "k"], "=", 
    RowBox[{"a", "+", 
     RowBox[{"k", " ", "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}], 
   TraditionalForm]],ExpressionUUID->"730614a9-96a9-4f4f-aab4-fe3f970bc14f"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "k"], "=", 
    FractionBox[
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"k", "-", "1"}]], "+", 
      SubscriptBox["x", "k"]}], "2"]}], TraditionalForm]],ExpressionUUID->
  "6fa356b5-377e-4ab7-8e5a-3e2b0643f84e"],
 " is the midpoint of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"k", "-", "1"}]], ",", 
     SubscriptBox["x", "k"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "9b5f5b82-2563-4c2a-93b5-400e78b4c0de"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"5e56575a-2b9c-47c6-ac2c-21e761f41c31"],
 "."
}], "Definition",
 CellTags->
  "DEFINITION Midpoint \
Rule",ExpressionUUID->"2781fe4c-54ca-448e-969b-b86498489af2"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"42532f34-ffae-4340-a863-a5cfeff67fbc"],

Cell["\<\
The Midpoint Rule is a midpoint Riemann sum, introduced in Section 5.1.\
\>", "Callout",ExpressionUUID->"ed04d23b-74e2-4dfb-a79a-d22f6b5b3f0e"]
}, Closed]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "1"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"a081efa8-ece3-4892-8dfe-f3f3d3a2a6e3"],
 "  To apply the Midpoint Rule on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"3", ",", "11"}], "]"}], TraditionalForm]],ExpressionUUID->
  "e0de1a66-c33e-4b12-bda1-aae4ba66ebae"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "8f0a55e7-a64f-4a6b-b4e9-57497bfaaf18"],
 ", at what points must the integrand be evaluated?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 1",ExpressionUUID->"83a34d50-24cf-4d40-87b3-14fcfb311bdf"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"49307789-8b85-436c-a353-6be5acd225da"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"4", ",", "6", ",", "8", ",", "10"}], 
  TraditionalForm]],ExpressionUUID->"3dee0fdf-92ae-489b-9e2c-9f1e23b2d61b"]], \
"QuickCheckAnswer",ExpressionUUID->"fa002b68-5888-4926-9474-fcc10e343aa0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 2\t", "ExampleFont"],
 "Applying the Midpoint Rule"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 2 Applying the Midpoint \
Rule",ExpressionUUID->"174d972f-69b0-4b47-9106-94199a194900"],

Cell[TextData[{
 "Approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "2", 
     RowBox[{" ", "4"}]], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"0a5e2e75-36df-466b-be71-476866d0083f"],
 " using the Midpoint Rule with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "393c8985-3804-4c88-afd3-58d3f4b1707b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "3ca80e6e-d787-4e52-916e-18020352b48b"],
 " subintervals."
}], "Text",ExpressionUUID->"9d8a8137-e0df-418f-907a-73d53c8d71ab"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"bef2e145-6128-4268-b2da-011294c15c40"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "898b53b1-e37d-4ce3-9419-f1b565f21ffb"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "6cfa7ac3-8037-4f1a-8a4e-f5065978243e"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2d1da198-46a9-44bd-84f6-fcbaacc106b8"],
 " subintervals, the length of each subinterval is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    RowBox[{
     FormBox[
      FractionBox[
       RowBox[{"b", "-", "a"}], "n"],
      TraditionalForm], "=", 
     RowBox[{
      FractionBox["2", "4"], "=", "0.5"}]}]}], TraditionalForm]],
  ExpressionUUID->"661ead85-27de-4491-9c76-1bbf3334abad"],
 ". The grid points are "
}], "Text",ExpressionUUID->"960808c4-fc2a-4af5-bd18-f98cc19de357"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "=", "2"}], ",", "    ", 
         RowBox[{
          SubscriptBox["x", "1"], "=", "2.5"}], ",", "    ", 
         RowBox[{
          SubscriptBox["x", "2"], "=", "3"}], ",", "    ", 
         RowBox[{
          SubscriptBox["x", "3"], "=", "3.5"}], ",", "    ", 
         RowBox[{
          RowBox[{"and", "    ", 
           SubscriptBox["x", "4"]}], "=", 
          RowBox[{
          "4.", Cell[
           "",ExpressionUUID->"2283b52b-e29e-4d18-9b1b-18d5f179e898"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"61c128de-7e47-4f1b-be3c-8db7da9cd227"]], \
"Text",ExpressionUUID->"3b1cde02-d296-4953-961d-94f826ff953e"],

Cell[TextData[{
 "The integrand must be evaluated at the midpoints (",
 StyleBox["Figure 8.13", "FigureFontText"],
 "): "
}], "Text",ExpressionUUID->"05e4348e-2f9b-4134-983f-b252fc657d9c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["m", "1"], "=", "2.25"}], ",", "  ", 
         RowBox[{
          SubscriptBox["m", "2"], "=", "2.75"}], ",", "  ", 
         RowBox[{
          SubscriptBox["m", "3"], "=", "3.25"}], ",", "  ", 
         RowBox[{
          RowBox[{"and", "  ", 
           SubscriptBox["m", "4"]}], "=", 
          RowBox[{
          "3.75", ".", Cell[
           "",ExpressionUUID->"9937afc6-0911-4dcd-8bd3-db0f4ed37f4f"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"19e3834f-2ba2-4ac4-bc63-b7739ed6c61f"]], \
"Text",ExpressionUUID->"3a8fd099-aa11-4019-b065-b8c83c26722b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
            4, $CellContext`kValue$$ = 1, $CellContext`nValue$$ = 4, 
            Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
            Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
            Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
            Typeset`specs$$ = {{{
                Hold[$CellContext`kValue$$], 1, 
                "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
               Dynamic[$CellContext`nValue$$], 1}, {{
                Hold[$CellContext`nValue$$], 4, ""}, {
               4 -> Pane[
                 "\!\(TraditionalForm\`n = 4\)", {48, Automatic}, Alignment -> 
                  Center], 8 -> 
                Pane["\!\(TraditionalForm\`n = 8\)", {48, Automatic}, 
                  Alignment -> Center]}}, {{
                Hold[$CellContext`aValue$$], 2}, 0}, {{
                Hold[$CellContext`bValue$$], 4}, 0}}, 
            Typeset`size$$ = {576., {181., 186.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`kValue$32554$$ = 
            0, $CellContext`nValue$32555$$ = False}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
               4, $CellContext`kValue$$ = 1, $CellContext`nValue$$ = 4}, 
             "ControllerVariables" :> {
               Hold[$CellContext`kValue$$, $CellContext`kValue$32554$$, 0], 
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$32555$$, 
                False]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[{
                Module[{$CellContext`x$}, 
                 $CellContext`RiemannSum[
                  $CellContext`funcC8F13[$CellContext`x$], {$CellContext`x$, 
                   2, 4}, $CellContext`ComputationMethod -> 
                  "Midpoint", $CellContext`Intervals -> \
$CellContext`nValue$$, $CellContext`AreaColor -> \
$CellContext`bcAreaPositiveColor, $CellContext`BorderColor -> \
$CellContext`bcAreaPositiveBorderColor, $CellContext`ShowAreaValue -> False]], 
                Plot[
                 $CellContext`funcC8F13[$CellContext`x], {$CellContext`x, 0, 
                  4.5}, PlotStyle -> {{Thick, Black}}], 
                Graphics[{
                  Arrowheads[{0, 0.02}], Gray, Black, 
                  Text[
                   Framed[
                    Pane[
                    
                    Row[{"Midpoint Rule with \!\(TraditionalForm\`\(\(\(\
\[InvisiblePostfixScriptBase]\) \(n\)\)\(=\)\(\\ \)\)\)", \
$CellContext`nValue$$}], $CellContext`bcPBS], $CellContext`bcFO], {0, 
                   16}, {-1.1, 1.1}], 
                  Text[
                   Framed[
                    Pane[
                    
                    Row[{"\!\(TraditionalForm\`\(\(\(\
\[InvisiblePostfixScriptBase]\) \
\(\[CapitalDelta]\)\(\[VeryThinSpace]\)\(x\)\)\(=\)\(\\ \)\)\)", 
                    
                    N[($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$]}], $CellContext`bcPBS], \
$CellContext`bcFO], {1, 0}, {-1.1, 1.5}], 
                  Text[
                   Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["m", $CellContext`kValue$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F13[$CellContext`aValue$$ + ($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], $CellContext`bcR, Thick, 
                  AbsoluteThickness[4], 
                  Line[{{$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F13[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, {$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F13[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], Black, 
                  Table[
                   Text[
                    Subscript[
                    "\!\(\*StyleBox[\"m\",FontSlant->\"Italic\"]\)", \
$CellContext`i], {$CellContext`aValue$$ + ($CellContext`i - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 0}, {0, 3}], {$CellContext`i, 
                    1, $CellContext`nValue$$}], 
                  Table[
                   $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0}, $CellContext`bcR], {$CellContext`i, 
                    1, $CellContext`nValue$$}], 
                  Table[
                   $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F13[$CellContext`aValue$$ + \
($CellContext`i - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, $CellContext`bcB], \
{$CellContext`i, 1, $CellContext`nValue$$}]}]}, 
               PlotRange -> {{-0.5, 4.5}, {-2, 18}}, Ticks -> {
                 Join[
                  Range[1, 4, 1], 
                  
                  Table[{$CellContext`aValue$$ + ($CellContext`i - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), ""}, {$CellContext`i, 
                    1, $CellContext`nValue$$}]], 
                 Range[0, 18, 2]}, BaseStyle -> $CellContext`bcBSG, ImageSize -> 
               8 72, AxesOrigin -> {0, 0}, AxesStyle -> Arrowheads[0.02], 
               AxesLabel -> {
                "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", 
                 "\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)"}, 
               Epilog -> {
                 Text[
                 "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \
\(2\)]\)", {4, 18}, {1, 1}]}], 
             "Specifications" :> {{{$CellContext`kValue$$, 1, 
                 "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
                Dynamic[$CellContext`nValue$$], 1, ControlType -> Slider, 
                ImageSize -> Small}, 
               Delimiter, {{$CellContext`nValue$$, 4, ""}, {
                4 -> Pane[
                  "\!\(TraditionalForm\`n = 4\)", {48, Automatic}, Alignment -> 
                   Center], 8 -> 
                 Pane["\!\(TraditionalForm\`n = 8\)", {48, Automatic}, 
                   Alignment -> Center]}, ControlType -> SetterBar, 
                Appearance -> "Vertical"}, {{$CellContext`aValue$$, 2}, 0, 
                ControlType -> None}, {{$CellContext`bValue$$, 4}, 0, 
                ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {754., {204., 212.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`x = 3, $CellContext`RiemannSum[
                  Pattern[$CellContext`expr, 
                   Blank[]], {
                   Pattern[$CellContext`var, 
                    Blank[]], 
                   Pattern[$CellContext`varMin, 
                    Blank[]], 
                   Pattern[$CellContext`varMax, 
                    Blank[]]}, 
                  Pattern[$CellContext`opts, 
                   BlankNullSequence[]]] := 
                Module[{$CellContext`xValues, $CellContext`yValues, \
$CellContext`\[CapitalDelta]x, $CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`optPlot, $CellContext`twocolorarea, $CellContext`twocoloredge, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype, $CellContext`partition}, {$CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype} = ReplaceAll[
                    
                    ReplaceAll[{$CellContext`Intervals, \
$CellContext`ShowPicture, $CellContext`AreaColor, $CellContext`BorderColor, \
$CellContext`ComputationMethod, $CellContext`ShowPoints, \
$CellContext`ShowAreaValue, $CellContext`PartitionType}, {$CellContext`opts}], 
                    
                    Options[$CellContext`RiemannSum]]; \
$CellContext`twocolorarea = 
                   If[Length[$CellContext`areacolor] == 2, True, 
                    False]; $CellContext`twocoloredge = 
                   If[Length[$CellContext`edgecolor] == 2, True, 
                    False]; $CellContext`optPlot = FilterRules[
                    Flatten[{$CellContext`opts, 
                    Options[$CellContext`RiemannSum]}], 
                    Options[Plot]]; $CellContext`\[CapitalDelta]x = 
                   N[($CellContext`varMax - \
$CellContext`varMin)/$CellContext`intervals]; $CellContext`partition = 
                   Switch[$CellContext`partitiontype, "Random", 
                    Append[
                    Prepend[
                    Sort[
                    
                    RandomReal[{$CellContext`varMin, $CellContext`varMax}, \
$CellContext`intervals - 1]], $CellContext`varMin], $CellContext`varMax], 
                    "Uniform", 
                    
                    Table[$CellContext`varMin + $CellContext`i $CellContext`\
\[CapitalDelta]x, {$CellContext`i, 
                    0, $CellContext`intervals}]]; $CellContext`xValues = 
                   Switch[$CellContext`method, "Left", 
                    Drop[$CellContext`partition, -1], "Right", 
                    Drop[$CellContext`partition, 1], "Midpoint", 
                    
                    Table[(Part[$CellContext`partition, $CellContext`i] + 
                    Part[$CellContext`partition, $CellContext`i + 1])/
                    2, {$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Table[
                    Part[$CellContext`partition, $CellContext`i] + 
                    Random[] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], 
                    "Trapezoid", $CellContext`partition, 
                    "Simpson", $CellContext`partition]; $CellContext`yValues = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> \
$CellContext`xValues]; If[$CellContext`showPicture === True, 
                    Show[{
                    Plot[
                    
                    Evaluate[$CellContext`expr], {$CellContext`var, \
$CellContext`varMin, $CellContext`varMax}, 
                    Evaluate[$CellContext`optPlot], 
                    PlotStyle -> {{Thick, Black}}, Prolog -> 
                    Switch[$CellContext`method, "Left", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Right", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Midpoint", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i + 1]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Simpson", {
                    Table[{$CellContext`areacolor, 
                    EdgeForm[$CellContext`edgecolor], 
                    Polygon[
                    Join[{{
                    Part[$CellContext`partition, $CellContext`i], 0}}, 
                    $CellContext`QuadraticPath[$CellContext`expr, \
$CellContext`var, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`partition, $CellContext`i + 2]}], {{
                    Part[$CellContext`partition, $CellContext`i + 2], 
                    0}}]]}, {$CellContext`i, 1, $CellContext`intervals - 1, 
                    2}]}], Epilog -> If[$CellContext`showpoints === True, 
                    Switch[$CellContext`method, "Left", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Right", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Midpoint", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1}]}, "Simpson", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1, 2}], 
                    Table[{Black, 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 2, $CellContext`intervals + 1, 2}]}], {Black}]]}, 
                    Evaluate[$CellContext`optPlot], PlotLabel -> 
                    If[$CellContext`showareavalue, 
                    Row[{" Area \[TildeTilde] ", 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}], None], Axes -> 
                    True], {$CellContext`intervals, 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}]], 
                Options[$CellContext`RiemannSum] = {$CellContext`Intervals -> 
                  10, $CellContext`ShowPicture -> 
                  True, $CellContext`AreaColor -> 
                  RGBColor[0.976, 0.871, 0.812], $CellContext`BorderColor -> 
                  RGBColor[0.796, 0, 0.42], AspectRatio -> 
                  GoldenRatio^(-1), $CellContext`ComputationMethod -> 
                  "Left", $CellContext`ShowPoints -> 
                  True, $CellContext`ShowAreaValue -> 
                  True, $CellContext`PartitionType -> 
                  "Uniform"}, $CellContext`\[CapitalDelta]x = 
                1/100, $CellContext`i = 1, $CellContext`QuadraticPath[
                  Pattern[$CellContext`expr, 
                   Blank[]], 
                  Pattern[$CellContext`var, 
                   Blank[]], {
                   Pattern[$CellContext`x0, 
                    Blank[]], 
                   Pattern[$CellContext`x1, 
                    Blank[]]}] := 
                Module[{$CellContext`partition, $CellContext`y0, \
$CellContext`y1, $CellContext`xm, $CellContext`ym, $CellContext`coefficientA, \
$CellContext`coefficientB, $CellContext`coefficientC}, $CellContext`xm = \
($CellContext`x0 + $CellContext`x1)/2; $CellContext`partition = N[
                    
                    Table[$CellContext`i, {$CellContext`i, $CellContext`x0, \
$CellContext`x1, ($CellContext`x1 - $CellContext`x0)/12}]]; $CellContext`y0 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 1]]; $CellContext`ym = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 7]]; $CellContext`y1 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 
                    13]]; $CellContext`coefficientA = ($CellContext`x1 \
(-$CellContext`y0 + $CellContext`ym) + $CellContext`xm ($CellContext`y0 - \
$CellContext`y1) + $CellContext`x0 (-$CellContext`ym + \
$CellContext`y1))/((($CellContext`x0 - $CellContext`xm) ($CellContext`x0 - \
$CellContext`x1)) ($CellContext`xm - $CellContext`x1)); \
$CellContext`coefficientB = ($CellContext`x1^2 ($CellContext`y0 - \
$CellContext`ym) + $CellContext`x0^2 ($CellContext`ym - $CellContext`y1) + \
$CellContext`xm^2 (-$CellContext`y0 + $CellContext`y1))/((($CellContext`x0 - \
$CellContext`xm) ($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - \
$CellContext`x1)); $CellContext`coefficientC = ((($CellContext`x0 \
$CellContext`x1) (-$CellContext`x0 + $CellContext`x1)) $CellContext`ym + \
$CellContext`xm^2 ($CellContext`x1 $CellContext`y0 - $CellContext`x0 \
$CellContext`y1) + $CellContext`xm ((-$CellContext`x1^2) $CellContext`y0 + \
$CellContext`x0^2 $CellContext`y1))/((($CellContext`x0 - $CellContext`xm) \
($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - $CellContext`x1)); 
                  Table[{
                    
                    Part[$CellContext`partition, $CellContext`i], \
$CellContext`coefficientA 
                    Part[$CellContext`partition, $CellContext`i]^2 + \
$CellContext`coefficientB 
                    Part[$CellContext`partition, $CellContext`i] + \
$CellContext`coefficientC}, {$CellContext`i, 1, 13}]], $CellContext`funcC8F13[
                 
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := $CellContext`x^2, \
$CellContext`bcAreaPositiveColor = 
                RGBColor[
                 0.796, 0.91, 0.855], $CellContext`bcAreaPositiveBorderColor = 
                RGBColor[0.467, 0.753, 0.651], $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> {
                    GrayLevel[0.85], 
                    Dashing[{0}]}, Background -> 
                  GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.13\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.13  \[LightBulb]: Example \
2",ExpressionUUID->"f1f85426-acc4-463b-ab3e-5900a745b06a"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "f1d2a112-2199-421e-acc2-a3aa80f0ae30"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "6d7cd382-78e1-4101-b315-9b2b9fe5179a"],
 ", the Midpoint Rule approximation is "
}], "Text",ExpressionUUID->"2e6dbd44-0a88-4bd1-a273-53985038b043"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"M", "(", "4", ")"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["m", "1"], ")"}], " ", "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["m", "2"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["m", "3"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["m", "4"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}]}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["m", "1", "2"], "+", 
            SubsuperscriptBox["m", "2", "2"], "+", 
            SubsuperscriptBox["m", "3", "2"], "+", 
            SubsuperscriptBox["m", "4", "2"]}], ")"}], " ", "\[CapitalDelta]",
           "\[VeryThinSpace]", "x"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["2.25", "2"], "+", 
            SuperscriptBox["2.75", "2"], "+", 
            SuperscriptBox["3.25", "2"], "+", 
            SuperscriptBox["3.75", "2"]}], ")"}], "\[CenterDot]", "0.5"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{"18.625", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"df915fb3-43b5-46a1-872d-7de7f476fd59"]], \
"Text",ExpressionUUID->"bd4d4269-caed-4b5d-bf3f-cf59b37eb858"],

Cell[TextData[{
 "The exact area of the region is ",
 Cell[BoxData[
  FormBox[
   FractionBox["56", "3"], TraditionalForm]],ExpressionUUID->
  "e5b7540b-d1d3-42de-ae7a-3ecc6b76bc91"],
 ", so the Midpoint Rule has an absolute error of "
}], "Text",ExpressionUUID->"0788d7c3-fb8c-4b7f-a9cf-b90a5d90d02b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"\[LeftBracketingBar]", 
          RowBox[{"18.625", "-", 
           FormBox[
            FractionBox["56", "3"],
            TraditionalForm]}], "\[RightBracketingBar]"}], "\[TildeTilde]", 
         "0.0417"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"65f4b680-0f5a-4890-a282-3ff265a01f46"]], \
"Text",ExpressionUUID->"86305ee6-c493-48eb-8927-c794818cb161"],

Cell["and a relative error of ", "Text",ExpressionUUID->"9c6b446d-3cd0-4bdb-b17c-3c1e916935a3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"\[LeftBracketingBar]", 
           FractionBox[
            RowBox[{"18.625", "-", 
             RowBox[{"56", "/", "3"}]}], 
            RowBox[{"56", "/", "3"}]], "\[RightBracketingBar]"}], 
          "\[TildeTilde]", "0.00223"}], "=", 
         RowBox[{"0.223", "\[InvisibleSpace]", 
          RowBox[{"%", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e158ab55-60cd-4cf4-bca1-fddb3748c6d8"]], \
"Text",ExpressionUUID->"b44703ab-3b87-4035-9b29-4535235aa7ef"],

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "ae105a81-a7aa-4a22-b39d-5907b25bd6fc"],
 " subintervals, the midpoint approximation is "
}], "Text",ExpressionUUID->"6b19016f-55ed-40e9-84fc-ecf59631cbe5"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"M", "(", "8", ")"}], "=", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "1"}], "8"], 
            RowBox[{
             RowBox[{"f", "(", 
              SubscriptBox["m", "k"], ")"}], " ", "\[CapitalDelta]", 
             "\[VeryThinSpace]", "x"}]}], "=", "18.65625"}]}], ","}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"37608bfd-7fdc-4b95-a45f-06bff2360046"]], \
"Text",ExpressionUUID->"46ce7812-4cd5-4504-b959-3f7ed0e4f940"],

Cell[TextData[{
 "which has an absolute error of about 0.0104 and a relative error of about \
0.0558%. We see that increasing ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "80ff87be-a732-44ea-812d-0b9995913cb9"],
 " and using more rectangles decreases the error in the approximations."
}], "Text",ExpressionUUID->"a476382b-e589-4d45-b971-0398ecabd811"],

Cell[TextData[{
 "Related Exercises ",
 "15\[Dash]16",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"f997566c-2288-427d-b0e8-428ffdf3b1a8"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Trapezoid Rule  \[RightGuillemet]", "Subsection",
 CellTags->
  "The Trapezoid Rule",ExpressionUUID->"f9f0883e-4bd6-4019-a8ec-f53ecf8262df"],

Cell[TextData[{
 "Another method for estimating ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"99d96943-42cf-4ed8-9458-d81933f51b70"],
 " is the Trapezoid Rule, which uses the same partition of the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "a573a8b0-e4eb-43db-8993-9f802c140650"],
 " described for the Midpoint Rule. Instead of approximating the region under \
the curve by rectangles, the Trapezoid Rule uses (what else?) trapezoids. The \
bases of the trapezoids have length ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"cc783a7d-1890-4422-b04e-02ed6ed05b94"],
 ". The sides of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "c9998090-4925-466c-83d4-b8f919565d3f"],
 " trapezoid have lengths ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", 
     RowBox[{"k", "-", "1"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "f5be29f2-a6d3-4c13-b879-e7441656254c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "k"], ")"}], TraditionalForm]],ExpressionUUID->
  "400c9062-994c-404c-a7fe-21c6170aa297"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", "2", ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"cd05412a-884c-4a8c-89f7-ef3d8014602b"],
 " (",
 StyleBox["Figure 8.14", "FigureFontText"],
 "). Therefore, the net area of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[VeryThinSpace]", "th"}], TraditionalForm]],ExpressionUUID->
  "6085ff5e-810e-41a0-b800-60b9afc13d17"],
 " trapezoid is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"f", "(", 
       SubscriptBox["x", 
        RowBox[{"k", "-", "1"}]], ")"}], "+", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "k"], ")"}]}], "2"], "\[CapitalDelta]", 
    "\[VeryThinSpace]", "x"}], TraditionalForm]],ExpressionUUID->
  "6dcf513f-7127-4426-90aa-f92e89ba7715"],
 "."
}], "Text",ExpressionUUID->"3afa67a1-5d87-414d-867e-f4e5c5be1bdd"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"504b1983-2817-4975-ae4e-c20d11b38cee"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.796, 0.91, 0.855], EdgeForm[GrayLevel[0]], 
   PolygonBox[{{0, 0}, {5, 0}, {5, 5}, {0, 3}}], 
   {GrayLevel[0], InsetBox["\<\"Area of a trapezoid\"\>", {2.5, 5}, {0, -1}], 
    InsetBox["\<\"\\!\\(\\*StyleBox[\\\"h\\\",FontSlant->\\\"Italic\\\"]\\)\"\
\>", {2.5, 0}, {0, 2}], 
    InsetBox["\<\"\\!\\(\\*StyleBox[\\\"a\\\",FontSlant->\\\"Italic\\\"]\\)\"\
\>", {0, 1.5}, {2, 0}], 
    InsetBox["\<\"\\!\\(\\*StyleBox[\\\"b\\\",FontSlant->\\\"Italic\\\"]\\)\"\
\>", {5, 2.5}, {-2, 0}], 
    InsetBox["\<\"\\!\\(TraditionalForm\\`Area = h\\\\ \
\\((\\*FractionBox[\\(a + b\\), \\(2\\)])\\)\\)\"\>", {2.5, 0}, {0, 2.5}]}},
  BaseStyle->{FontFamily -> "Times", 13},
  ImageSize->144]],
 CellChangeTimes->{
  3.518181377245111*^9, 3.53746221135318*^9, 3.537462798605377*^9, 
   3.547081879238559*^9, 3.548971460901753*^9, 3.598956057585917*^9, {
   3.5989918679736443`*^9, 3.5989918744618053`*^9}, 3.602174153160451*^9, 
   3.6130679836036253`*^9, 
   3.720262827134152*^9},ExpressionUUID->"dc0fa391-edad-4646-b162-\
4e4549dea62d"]], "Callout",ExpressionUUID->"0b19e6ae-6777-4016-acc8-\
306c2e603bb7"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 1, $CellContext`bValue$$ = 
            9, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
            0, $CellContext`nValue$$ = 3, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`kValue$$], 1, 
                "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
               Dynamic[$CellContext`nValue$$], 1}, {{
                Hold[$CellContext`kValueMinusOne$$], 0}, 0}, {{
                Hold[$CellContext`nValue$$], 3, 
                "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 3, 15, 1}, {{
                Hold[$CellContext`aValue$$], 1}, 0}, {{
                Hold[$CellContext`bValue$$], 9}, 0}}, 
            Typeset`size$$ = {576., {204.4150390625, 210.5849609375}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`kValue$33033$$ = 
            0, $CellContext`nValue$33034$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 1, $CellContext`bValue$$ = 
               9, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
               0, $CellContext`nValue$$ = 3}, "ControllerVariables" :> {
               Hold[$CellContext`kValue$$, $CellContext`kValue$33033$$, 0], 
               Hold[$CellContext`nValue$$, $CellContext`nValue$33034$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, 
             "Body" :> (
              If[$CellContext`kValue$$ > $CellContext`nValue$$, \
$CellContext`kValue$$ = $CellContext`nValue$$]; $CellContext`kValueMinusOne$$ = \
$CellContext`kValue$$ - 1; Grid[{{
                  Show[{
                    Module[{$CellContext`x$}, 
                    $CellContext`RiemannSum[
                    $CellContext`funcC8F14[$CellContext`x$], {$CellContext`x$,
                     1, 9}, $CellContext`ComputationMethod -> 
                    "Trapezoid", $CellContext`Intervals -> \
$CellContext`nValue$$, $CellContext`AreaColor -> \
$CellContext`bcAreaPositiveColor, $CellContext`BorderColor -> \
$CellContext`bcAreaPositiveBorderColor, $CellContext`ShowAreaValue -> False]], 
                    Plot[
                    $CellContext`funcC8F14[$CellContext`x], {$CellContext`x, 
                    0, 10}, PlotStyle -> {{Thick, Black}}], 
                    Graphics[{
                    Arrowheads[{-0.02, 0.02}], 
                    Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValueMinusOne$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F14[$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], 
                    Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValue$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + $CellContext`kValue$$ \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F14[$CellContext`aValue$$ + $CellContext`kValue$$ \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$)]/
                    2}], $CellContext`bcR, 
                    AbsoluteThickness[4], 
                    
                    Line[{{$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F14[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, {$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F14[$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], Black, 
                    Text[
                    Pane[
                    Row[{"\!\(TraditionalForm\`\(\(area\)\(=\)\(\\ \)\)\)", 
                    TraditionalForm[
                    RawBoxes[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\!\(TraditionalForm\`\(\(f\)\((\)\)\)", 
                    SubscriptBox["x", $CellContext`kValue$$ - 1], 
                    "\!\(TraditionalForm\`\(\()\)\(+\)\(\[InvisibleSpace]\)\(\
\(f\)\((\)\)\)\)", 
                    SubscriptBox["x", $CellContext`kValue$$], 
                    "\!\(\(TraditionalForm\`)\)\) "}], 2], 
                    "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\)"}\
]]]}], $CellContext`bcPBS], {2, 6}, {0, -1}], Gray, 
                    Arrowheads[0.02], 
                    AbsoluteThickness[1], 
                    
                    Arrow[{{2, 
                    6}, {$CellContext`aValue$$ + ($CellContext`kValue$$ - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0.8 $CellContext`funcC8F14[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1/2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], 
                    Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0}, $CellContext`bcR], {$CellContext`i, 
                    1, $CellContext`nValue$$ + 1}], 
                    Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F14[$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, $CellContext`bcB], \
{$CellContext`i, 0, $CellContext`nValue$$}]}]}, 
                   PlotRange -> {{-0.5, 11}, {-1, 8}}, Ticks -> {
                    
                    Join[{{$CellContext`aValue$$, 
                    "\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)"}, \
{$CellContext`bValue$$, "\!\(\*StyleBox[\"b\",FontSlant->\"Italic\"]\)"}}, 
                    
                    Table[{$CellContext`aValue$$ + $CellContext`i \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), 
                    Subscript[
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", \
$CellContext`i]}, {$CellContext`i, 1, $CellContext`nValue$$ - 1}]], None}, 
                   BaseStyle -> $CellContext`bcBSG, ImageSize -> 8 72, 
                   AxesOrigin -> {0, 0}, AxesStyle -> Arrowheads[0.02], 
                   AxesLabel -> {
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", 
                    "\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)"}, Epilog -> {
                    Text[
                    "\!\(TraditionalForm\`y = f(x)\)", {11, 2}, {1, -1}]}]}, {
                 
                  Framed[
                   Pane[
                   "Trapezoid Rule: \!\(TraditionalForm\`\*SubsuperscriptBox[\
\(\[Integral]\), \(\(\\ \)\(a\)\), \(\(\\ \)\(b\)\)]\(f(x)\)\\ d\
\[VeryThinSpace]x \[TildeTilde] \((\*FractionBox[\(1\), \(2\)] \
\(f(\*SubscriptBox[\(x\), \(0\)])\) + f(\*SubscriptBox[\(x\), \(1\)]) + \
\[CenterEllipsis] + f(\*SubscriptBox[\(x\), \(n - 1\)]) + \
\*FractionBox[\(1\), \(2\)] \(f(\*SubscriptBox[\(x\), \(n\)])\))\) \
\[CapitalDelta]\[VeryThinSpace]x\)", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO]}}, 
                BaseStyle -> "TR"]), 
             "Specifications" :> {{{$CellContext`kValue$$, 1, 
                 "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
                Dynamic[$CellContext`nValue$$], 1, ControlType -> Slider, 
                ImageSize -> Small}, {{$CellContext`kValueMinusOne$$, 0}, 0, 
                ControlType -> 
                None}, {{$CellContext`nValue$$, 3, 
                 "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 3, 15, 1, 
                ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`aValue$$, 1}, 0, ControlType -> 
                None}, {{$CellContext`bValue$$, 9}, 0, ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {717., {225., 230.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`x = 3, $CellContext`RiemannSum[
                  Pattern[$CellContext`expr, 
                   Blank[]], {
                   Pattern[$CellContext`var, 
                    Blank[]], 
                   Pattern[$CellContext`varMin, 
                    Blank[]], 
                   Pattern[$CellContext`varMax, 
                    Blank[]]}, 
                  Pattern[$CellContext`opts, 
                   BlankNullSequence[]]] := 
                Module[{$CellContext`xValues, $CellContext`yValues, \
$CellContext`\[CapitalDelta]x, $CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`optPlot, $CellContext`twocolorarea, $CellContext`twocoloredge, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype, $CellContext`partition}, {$CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype} = ReplaceAll[
                    
                    ReplaceAll[{$CellContext`Intervals, \
$CellContext`ShowPicture, $CellContext`AreaColor, $CellContext`BorderColor, \
$CellContext`ComputationMethod, $CellContext`ShowPoints, \
$CellContext`ShowAreaValue, $CellContext`PartitionType}, {$CellContext`opts}], 
                    
                    Options[$CellContext`RiemannSum]]; \
$CellContext`twocolorarea = 
                   If[Length[$CellContext`areacolor] == 2, True, 
                    False]; $CellContext`twocoloredge = 
                   If[Length[$CellContext`edgecolor] == 2, True, 
                    False]; $CellContext`optPlot = FilterRules[
                    Flatten[{$CellContext`opts, 
                    Options[$CellContext`RiemannSum]}], 
                    Options[Plot]]; $CellContext`\[CapitalDelta]x = 
                   N[($CellContext`varMax - \
$CellContext`varMin)/$CellContext`intervals]; $CellContext`partition = 
                   Switch[$CellContext`partitiontype, "Random", 
                    Append[
                    Prepend[
                    Sort[
                    
                    RandomReal[{$CellContext`varMin, $CellContext`varMax}, \
$CellContext`intervals - 1]], $CellContext`varMin], $CellContext`varMax], 
                    "Uniform", 
                    
                    Table[$CellContext`varMin + $CellContext`i $CellContext`\
\[CapitalDelta]x, {$CellContext`i, 
                    0, $CellContext`intervals}]]; $CellContext`xValues = 
                   Switch[$CellContext`method, "Left", 
                    Drop[$CellContext`partition, -1], "Right", 
                    Drop[$CellContext`partition, 1], "Midpoint", 
                    
                    Table[(Part[$CellContext`partition, $CellContext`i] + 
                    Part[$CellContext`partition, $CellContext`i + 1])/
                    2, {$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Table[
                    Part[$CellContext`partition, $CellContext`i] + 
                    Random[] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], 
                    "Trapezoid", $CellContext`partition, 
                    "Simpson", $CellContext`partition]; $CellContext`yValues = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> \
$CellContext`xValues]; If[$CellContext`showPicture === True, 
                    Show[{
                    Plot[
                    
                    Evaluate[$CellContext`expr], {$CellContext`var, \
$CellContext`varMin, $CellContext`varMax}, 
                    Evaluate[$CellContext`optPlot], 
                    PlotStyle -> {{Thick, Black}}, Prolog -> 
                    Switch[$CellContext`method, "Left", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Right", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Midpoint", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i + 1]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Simpson", {
                    Table[{$CellContext`areacolor, 
                    EdgeForm[$CellContext`edgecolor], 
                    Polygon[
                    Join[{{
                    Part[$CellContext`partition, $CellContext`i], 0}}, 
                    $CellContext`QuadraticPath[$CellContext`expr, \
$CellContext`var, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`partition, $CellContext`i + 2]}], {{
                    Part[$CellContext`partition, $CellContext`i + 2], 
                    0}}]]}, {$CellContext`i, 1, $CellContext`intervals - 1, 
                    2}]}], Epilog -> If[$CellContext`showpoints === True, 
                    Switch[$CellContext`method, "Left", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Right", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Midpoint", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1}]}, "Simpson", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1, 2}], 
                    Table[{Black, 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 2, $CellContext`intervals + 1, 2}]}], {Black}]]}, 
                    Evaluate[$CellContext`optPlot], PlotLabel -> 
                    If[$CellContext`showareavalue, 
                    Row[{" Area \[TildeTilde] ", 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}], None], Axes -> 
                    True], {$CellContext`intervals, 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}]], 
                Options[$CellContext`RiemannSum] = {$CellContext`Intervals -> 
                  10, $CellContext`ShowPicture -> 
                  True, $CellContext`AreaColor -> 
                  RGBColor[0.976, 0.871, 0.812], $CellContext`BorderColor -> 
                  RGBColor[0.796, 0, 0.42], AspectRatio -> 
                  GoldenRatio^(-1), $CellContext`ComputationMethod -> 
                  "Left", $CellContext`ShowPoints -> 
                  True, $CellContext`ShowAreaValue -> 
                  True, $CellContext`PartitionType -> 
                  "Uniform"}, $CellContext`\[CapitalDelta]x = 
                1/100, $CellContext`i = 1, $CellContext`QuadraticPath[
                  Pattern[$CellContext`expr, 
                   Blank[]], 
                  Pattern[$CellContext`var, 
                   Blank[]], {
                   Pattern[$CellContext`x0, 
                    Blank[]], 
                   Pattern[$CellContext`x1, 
                    Blank[]]}] := 
                Module[{$CellContext`partition, $CellContext`y0, \
$CellContext`y1, $CellContext`xm, $CellContext`ym, $CellContext`coefficientA, \
$CellContext`coefficientB, $CellContext`coefficientC}, $CellContext`xm = \
($CellContext`x0 + $CellContext`x1)/2; $CellContext`partition = N[
                    
                    Table[$CellContext`i, {$CellContext`i, $CellContext`x0, \
$CellContext`x1, ($CellContext`x1 - $CellContext`x0)/12}]]; $CellContext`y0 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 1]]; $CellContext`ym = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 7]]; $CellContext`y1 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 
                    13]]; $CellContext`coefficientA = ($CellContext`x1 \
(-$CellContext`y0 + $CellContext`ym) + $CellContext`xm ($CellContext`y0 - \
$CellContext`y1) + $CellContext`x0 (-$CellContext`ym + \
$CellContext`y1))/((($CellContext`x0 - $CellContext`xm) ($CellContext`x0 - \
$CellContext`x1)) ($CellContext`xm - $CellContext`x1)); \
$CellContext`coefficientB = ($CellContext`x1^2 ($CellContext`y0 - \
$CellContext`ym) + $CellContext`x0^2 ($CellContext`ym - $CellContext`y1) + \
$CellContext`xm^2 (-$CellContext`y0 + $CellContext`y1))/((($CellContext`x0 - \
$CellContext`xm) ($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - \
$CellContext`x1)); $CellContext`coefficientC = ((($CellContext`x0 \
$CellContext`x1) (-$CellContext`x0 + $CellContext`x1)) $CellContext`ym + \
$CellContext`xm^2 ($CellContext`x1 $CellContext`y0 - $CellContext`x0 \
$CellContext`y1) + $CellContext`xm ((-$CellContext`x1^2) $CellContext`y0 + \
$CellContext`x0^2 $CellContext`y1))/((($CellContext`x0 - $CellContext`xm) \
($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - $CellContext`x1)); 
                  Table[{
                    
                    Part[$CellContext`partition, $CellContext`i], \
$CellContext`coefficientA 
                    Part[$CellContext`partition, $CellContext`i]^2 + \
$CellContext`coefficientB 
                    Part[$CellContext`partition, $CellContext`i] + \
$CellContext`coefficientC}, {$CellContext`i, 1, 13}]], $CellContext`funcC8F14[
                 
                  Pattern[$CellContext`x, 
                   Blank[]]] := 
                3.4077287672712275` - 2.742196116267417 $CellContext`x + 
                 1.6646833353919273` $CellContext`x^2 - 
                 0.2629848021682558 $CellContext`x^3 + 
                 0.012199299434364114` $CellContext`x^4, \
$CellContext`bcAreaPositiveColor = 
                RGBColor[
                 0.796, 0.91, 0.855], $CellContext`bcAreaPositiveBorderColor = 
                RGBColor[0.467, 0.753, 0.651], $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> {
                    GrayLevel[0.85], 
                    Dashing[{0}]}, Background -> 
                  GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[PlotRange] = {ReadProtected}, 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcBSG = {
                 "Text"}}; {Null}}; Typeset`initDone$$ = True), 
           SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.14\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.14  \[LightBulb]: Trapezoid \
Rule",ExpressionUUID->"c99acf02-3643-4a20-8645-d3259a5a9e41"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"db066355-a405-4ce3-bf7d-4f8465a0e439"],

Cell[TextData[{
 "This derivation of the Trapezoid Rule assumes that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f0b28657-8042-4102-b4ba-0b78c1029d39"],
 " is nonnegative on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "08423c6d-2a32-4172-b84a-d8960ac18d70"],
 ". However, the same argument can be used if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "49b27719-2b76-46c7-885e-e5fad86acfc2"],
 " is negative on all or part of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "df92dc37-fa25-4a70-bb5b-5e249acf260a"],
 ". In fact, the argument illustrates how negative contributions to the net \
area arise when ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e1e8a3f6-b0dc-49dd-a6ff-0ccd30da87ff"],
 " is negative."
}], "Callout",ExpressionUUID->"9600f3d5-d431-4342-b541-d463f3ad297a"]
}, Closed]],

Cell[TextData[{
 "\tLetting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "2ea0a845-02a1-4cc1-88dd-fb68d7230b8b"],
 " be the Trapezoid Rule approximation to the integral using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e3940a8b-14c7-4341-b054-a736b5df3536"],
 " subintervals, we have "
}], "Text",ExpressionUUID->"10a84f23-c5f0-4079-b801-cec703119bcf"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FormBox[
          RowBox[{"\[AlignmentMarker]", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{" ", "a"}], 
             RowBox[{" ", "b"}]], 
            RowBox[{
             RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", 
             "x"}]}]}],
          TraditionalForm], "\[TildeTilde]", 
         RowBox[{"T", 
          RowBox[{"(", "n", ")"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{
          RowBox[{
          "\[InvisiblePostfixScriptBase]", "\[InvisiblePostfixScriptBase]"}], 
          "=", 
          RowBox[{
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               FormBox[
                FormBox[
                 FormBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"f", "(", 
                    SubscriptBox["x", "0"], ")"}], "+", 
                    RowBox[{"f", "(", 
                    SubscriptBox["x", "1"], ")"}]}], "2"],
                  TraditionalForm],
                 TraditionalForm],
                TraditionalForm], "\[CapitalDelta]", "\[VeryThinSpace]", 
               "x"}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{"area", " ", "of", " ", "first", " ", "trapezoid"}], 
              "TypesetAnnotationFont"]],
            TraditionalForm], "+", 
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               FormBox[
                FormBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"f", "(", 
                    SubscriptBox["x", "1"], ")"}], "+", 
                   RowBox[{"f", "(", 
                    SubscriptBox["x", "2"], ")"}]}], "2"],
                 TraditionalForm],
                TraditionalForm], "\[CapitalDelta]", "\[VeryThinSpace]", 
               "x"}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{"area", " ", "of", " ", "second", " ", "trapezoid"}], 
              "TypesetAnnotationFont"]],
            TraditionalForm], "+", "\[CenterEllipsis]", "+", 
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{
               FormBox[
                FormBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"f", "(", 
                    SubscriptBox["x", 
                    RowBox[{"n", "-", "1"}]], ")"}], "+", 
                   RowBox[{"f", "(", 
                    SubscriptBox["x", "n"], ")"}]}], "2"],
                 TraditionalForm],
                TraditionalForm], "\[CapitalDelta]", "\[VeryThinSpace]", 
               "x"}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{
              "area", " ", "of", " ", "n", "\[VeryThinSpace]", "th", " ", 
               "trapezoid"}], "TypesetAnnotationFont"]],
            TraditionalForm]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"f", "(", 
               SubscriptBox["x", "0"], ")"}], "2"], "+", 
             FormBox[
              FormBox[
               UnderscriptBox[
                UnderscriptBox[
                 RowBox[{
                  FractionBox[
                   RowBox[{"f", "(", 
                    SubscriptBox["x", "1"], ")"}], "2"], "+", 
                  FractionBox[
                   RowBox[{"f", "(", 
                    SubscriptBox["x", "1"], ")"}], "2"]}], 
                 StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                StyleBox[
                 RowBox[{"f", "(", 
                  SubscriptBox["x", "1"], ")"}], "TypesetAnnotationFont"]],
               TraditionalForm],
              TraditionalForm], "+", "\[CenterEllipsis]", "+", 
             FormBox[
              FormBox[
               UnderscriptBox[
                UnderscriptBox[
                 RowBox[{
                  FractionBox[
                   RowBox[{"f", "(", 
                    SubscriptBox["x", 
                    RowBox[{"n", "-", "1"}]], ")"}], "2"], "+", 
                  FractionBox[
                   RowBox[{"f", "(", 
                    SubscriptBox["x", 
                    RowBox[{"n", "-", "1"}]], ")"}], "2"]}], 
                 StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                StyleBox[
                 RowBox[{"f", "(", 
                  SubscriptBox["x", 
                   RowBox[{"n", "-", "1"}]], ")"}], "TypesetAnnotationFont"]],
               
               TraditionalForm],
              TraditionalForm], "+", 
             FractionBox[
              RowBox[{"f", "(", 
               SubscriptBox["x", "n"], ")"}], "2"]}], ")"}], 
           "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{
          RowBox[{
          "\[InvisiblePostfixScriptBase]", "\[InvisiblePostfixScriptBase]"}], 
          "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"f", "(", 
               SubscriptBox["x", "0"], ")"}], "2"], "+", 
             FormBox[
              FormBox[
               UnderscriptBox[
                UnderscriptBox[
                 RowBox[{
                  RowBox[{"f", "(", 
                   SubscriptBox["x", "1"], ")"}], "+", "\[CenterEllipsis]", 
                  "+", 
                  RowBox[{"f", "(", 
                   SubscriptBox["x", 
                    RowBox[{"n", "-", "1"}]], ")"}]}], 
                 StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                StyleBox[
                 RowBox[{
                  UnderoverscriptBox[
                   RowBox[{"\[Sum]", " "}], 
                   RowBox[{"k", "=", "1"}], 
                   RowBox[{"n", "-", "1"}]], 
                  RowBox[{"f", "(", 
                   SubscriptBox["x", "k"], ")"}]}], "TypesetAnnotationFont"]],
               
               TraditionalForm],
              TraditionalForm], "+", 
             FractionBox[
              RowBox[{"f", "(", 
               SubscriptBox["x", "n"], ")"}], "2"]}], ")"}], 
           "\[CapitalDelta]", "\[VeryThinSpace]", 
           RowBox[{"x", "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"19d975a6-0cb2-4c54-ab19-9e208d3d3c72"]], \
"Text",ExpressionUUID->"11e3b2e0-2969-4e30-ad5f-cf26e353351b"],

Cell[TextData[{
 "As with the Midpoint Rule, the Trapezoid Rule approximations generally \
improve as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0ca28406-9a57-46a1-957f-9c617481353a"],
 " increases."
}], "Text",ExpressionUUID->"82964c5c-3502-4780-93fc-a5ec864680e2"],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["Trapezoid Rule",
  FontWeight->"Bold"],
 "\nSuppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "14620af0-4721-4761-b740-24ba49912235"],
 " is defined and integrable on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "318d985c-ddf9-44a3-99cb-0fd2290be1d4"],
 ". The ",
 StyleBox["Trapezoid Rule approximation",
  FontWeight->"Bold"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"b6f917b6-5507-440d-b539-b10505f74bdc"],
 " using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ef19c8f6-ed3a-4799-895b-1e26371bc651"],
 " equally spaced subintervals on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "abb86c30-6624-40b6-bcb4-de1622f9ec48"],
 " is \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"T", "(", "n", ")"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"f", "(", 
                SubscriptBox["x", "0"], ")"}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], 
                RowBox[{"n", "-", "1"}]], 
               RowBox[{"f", "(", 
                SubscriptBox["x", "k"], ")"}]}], "+", 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"f", "(", 
                SubscriptBox["x", "n"], ")"}]}]}], ")"}], "\[CapitalDelta]", 
            "\[VeryThinSpace]", "x"}]}], ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "b1824360-d6dd-48dc-be55-117a69ec7afc"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{"b", "-", "a"}], "n"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "fc0b9ed9-b8f4-4b9c-bf35-a6d882e6f306"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "k"], "=", 
    RowBox[{"a", "+", 
     RowBox[{"k", " ", "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}], 
   TraditionalForm]],ExpressionUUID->"7df035d7-48f9-47f4-a296-17f9c9e75430"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "0"}], ",", "1", ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"b2829c6f-311d-4131-bbd4-823b87f73d20"],
 "."
}], "Definition",
 CellTags->
  "DEFINITION Trapezoid \
Rule",ExpressionUUID->"9a5d531d-c514-4ad8-be57-d9af65e4be7c"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "2"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"eb7984a6-bf72-4212-aaa3-c513e3256ad5"],
 "  Does the Trapezoid Rule underestimate or overestimate the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "4"}]], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"2c9b78dd-9352-4489-9a1d-9db506db8cb1"],
 "?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 2",ExpressionUUID->"9da9e99c-7932-4b77-b2b6-e90a925ed8d2"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"10ac565e-e16e-44f9-9bab-ee6e5a3c86ff"],

Cell["Overestimates", "QuickCheckAnswer",ExpressionUUID->"79bc92ef-b172-44e9-a851-a6f724050f8a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 3\t", "ExampleFont"],
 "Applying the Trapezoid Rule"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 3 Applying the Trapezoid \
Rule",ExpressionUUID->"1db5f308-68c5-428f-bb05-64962925e9c5"],

Cell[TextData[{
 "Approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "2"}], 
     RowBox[{" ", "4"}]], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"210558a9-e1b8-4c9a-b991-f7a1d1e86bcb"],
 " using the Trapezoid Rule with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "fe79d852-0669-43f9-836d-d9810a924493"],
 " subintervals."
}], "Text",ExpressionUUID->"c228fff4-d674-4977-975f-2994f4a814e8"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"d0430df2-7552-457a-98b6-e8523d518488"],

Cell["As in Example 2, the grid points are", "Text",ExpressionUUID->"d7cae65a-b36f-4076-8c22-680f9688e0d7"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "=", "2"}], ",", "  ", 
         RowBox[{
          SubscriptBox["x", "1"], "=", "2.5"}], ",", "  ", 
         RowBox[{
          SubscriptBox["x", "2"], "=", "3"}], ",", "  ", 
         RowBox[{
          SubscriptBox["x", "3"], "=", "3.5"}], ",", "  ", 
         RowBox[{
          RowBox[{"and", "  ", 
           SubscriptBox["x", "4"]}], "=", "4."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d2a29619-f744-4d44-953b-04ed22757621"]], \
"Text",ExpressionUUID->"d1feb23a-05dd-441e-9d1a-d11a14b11530"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "13891c46-bb95-4865-b751-5e1c7148bf32"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "b34bc365-acaf-4ac9-a00a-a64af58b0b2e"],
 ", the Trapezoid Rule approximation is "
}], "Text",ExpressionUUID->"4dfa465e-fada-4156-b879-6bf126026455"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"T", "(", "4", ")"}], "=", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"f", "(", 
            SubscriptBox["x", "0"], ")"}], " ", "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["x", "1"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["x", "2"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["x", "3"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"f", "(", 
            SubscriptBox["x", "4"], ")"}], "\[CapitalDelta]", 
           "\[VeryThinSpace]", "x"}]}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             SuperscriptBox[
              SubscriptBox["x", "0"], "2"]}], "+", 
            SuperscriptBox[
             SubscriptBox["x", "1"], "2"], "+", 
            SuperscriptBox[
             SubscriptBox["x", "2"], "2"], "+", 
            SuperscriptBox[
             SubscriptBox["x", "3"], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], 
             SuperscriptBox[
              SubscriptBox["x", "4"], "2"]}]}], ")"}], "\[CapitalDelta]", 
          "\[VeryThinSpace]", "x"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], "\[CenterDot]", 
             SuperscriptBox["2", "2"]}], "+", 
            SuperscriptBox["2.5", "2"], "+", 
            SuperscriptBox["3", "2"], "+", 
            SuperscriptBox["3.5", "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], "\[CenterDot]", 
             SuperscriptBox["4", "2"]}]}], ")"}], "\[CenterDot]", "0.5"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{"18.75", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"f00bf77a-9b17-4be1-b2ee-9671550660f7"]], \
"Text",ExpressionUUID->"a1296742-fee2-4e77-b5f8-4bc43cf107de"],

Cell[TextData[{
 StyleBox["\tFigure 8.15", "FigureFontText"],
 " shows the approximation with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "fae5cdc4-f781-4584-a610-d189db9070b4"],
 " trapezoids. The exact area of the region is ",
 Cell[BoxData[
  FormBox[
   FractionBox["56", "3"], TraditionalForm]],ExpressionUUID->
  "5370ceb2-3ea9-4383-a06b-55efe425c7ae"],
 ", so the Trapezoid Rule approximation has an absolute error of about 0.0833 \
and a relative error of approximately 0.00446, or 0.446%. Increasing ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "2187821b-48ae-4ff8-809a-b9d0f33db243"],
 " decreases this error."
}], "Text",ExpressionUUID->"d78b2ea4-80cd-476f-a5a2-cdb82973a10f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
            4, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
            0, $CellContext`nValue$$ = 4, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`kValue$$], 1, 
                "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
               Dynamic[$CellContext`nValue$$], 1}, {{
                Hold[$CellContext`kValueMinusOne$$], 0}, 0}, {{
                Hold[$CellContext`nValue$$], 4, ""}, {
               4 -> "\!\(TraditionalForm\`n = 4\)", 8 -> 
                "\!\(TraditionalForm\`n = 8\)"}}, {{
                Hold[$CellContext`aValue$$], 2}, 0}, {{
                Hold[$CellContext`bValue$$], 4}, 0}}, 
            Typeset`size$$ = {576., {181., 186.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`kValue$34131$$ = 
            0, $CellContext`nValue$34132$$ = False}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
               4, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
               0, $CellContext`nValue$$ = 4}, "ControllerVariables" :> {
               Hold[$CellContext`kValue$$, $CellContext`kValue$34131$$, 0], 
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$34132$$, 
                False]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, 
             "Body" :> ($CellContext`kValueMinusOne$$ = $CellContext`kValue$$ - 
                1; Show[{
                 Module[{$CellContext`x$}, 
                  $CellContext`RiemannSum[
                   $CellContext`funcC8F15[$CellContext`x$], {$CellContext`x$, 
                    2, 4}, $CellContext`ComputationMethod -> 
                   "Trapezoid", $CellContext`Intervals -> \
$CellContext`nValue$$, $CellContext`AreaColor -> \
$CellContext`bcAreaPositiveColor, $CellContext`BorderColor -> \
$CellContext`bcAreaPositiveBorderColor, $CellContext`ShowAreaValue -> False]], 
                 Plot[
                  $CellContext`funcC8F15[$CellContext`x], {$CellContext`x, 0, 
                   4.5}, PlotStyle -> {{Thick, Black}}], 
                 Graphics[{
                   Arrowheads[{-0.02, 0.02}], 
                   Text[
                    Framed[
                    Pane[
                    
                    Row[{"Trapezoid Rule with \!\(TraditionalForm\`\(\(\(\
\[InvisiblePostfixScriptBase]\) \(n\)\)\(=\)\(\\ \)\)\)", \
$CellContext`nValue$$}], $CellContext`bcPBS], $CellContext`bcFO], {0, 
                    16}, {-1.1, 1.1}], 
                   Text[
                    Framed[
                    Pane[
                    
                    Row[{"\!\(TraditionalForm\`\(\(\(\
\[InvisiblePostfixScriptBase]\) \
\(\[CapitalDelta]\)\(\[VeryThinSpace]\)\(x\)\)\(=\)\(\\ \)\)\)", 
                    
                    N[($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$]}], $CellContext`bcPBS], \
$CellContext`bcFO], {1, 0}, {-1.1, 1.5}], 
                   Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValueMinusOne$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F15[$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], 
                   Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValue$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + $CellContext`kValue$$ \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F15[$CellContext`aValue$$ + $CellContext`kValue$$ \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$)]/
                    2}], $CellContext`bcR, 
                   AbsoluteThickness[4], 
                   
                   Line[{{$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F15[$CellContext`aValue$$ + \
($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, {$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F15[$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], 
                   Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
($CellContext`i - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    0}, $CellContext`bcR], {$CellContext`i, 
                    1, $CellContext`nValue$$ + 1}], 
                   Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F15[$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, $CellContext`bcB], \
{$CellContext`i, 0, $CellContext`nValue$$}]}]}, 
                PlotRange -> {{-0.5, 4.5}, {-2, 18}}, Ticks -> {
                  Join[
                   Range[1, 4, 1], 
                   
                   Table[{$CellContext`aValue$$ + ($CellContext`i - 1/
                    2) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), ""}, {$CellContext`i, 
                    1, $CellContext`nValue$$}]], 
                  Range[0, 18, 2]}, BaseStyle -> $CellContext`bcBSG, 
                ImageSize -> 8 72, AxesOrigin -> {0, 0}, AxesStyle -> 
                Arrowheads[0.02], 
                AxesLabel -> {
                 "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", 
                  "\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)"}, Epilog -> {
                  Text[
                  "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \(2\)]\
\)", {4, 18}, {1, 1}]}]), 
             "Specifications" :> {{{$CellContext`kValue$$, 1, 
                 "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
                Dynamic[$CellContext`nValue$$], 1, ControlType -> Slider, 
                ImageSize -> Small}, {{$CellContext`kValueMinusOne$$, 0}, 0, 
                ControlType -> None}, {{$CellContext`nValue$$, 4, ""}, {
                4 -> "\!\(TraditionalForm\`n = 4\)", 8 -> 
                 "\!\(TraditionalForm\`n = 8\)"}, ControlType -> None, 
                Appearance -> "Vertical"}, {{$CellContext`aValue$$, 2}, 0, 
                ControlType -> None}, {{$CellContext`bValue$$, 4}, 0, 
                ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {717., {200., 206.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`x = 3, $CellContext`RiemannSum[
                  Pattern[$CellContext`expr, 
                   Blank[]], {
                   Pattern[$CellContext`var, 
                    Blank[]], 
                   Pattern[$CellContext`varMin, 
                    Blank[]], 
                   Pattern[$CellContext`varMax, 
                    Blank[]]}, 
                  Pattern[$CellContext`opts, 
                   BlankNullSequence[]]] := 
                Module[{$CellContext`xValues, $CellContext`yValues, \
$CellContext`\[CapitalDelta]x, $CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`optPlot, $CellContext`twocolorarea, $CellContext`twocoloredge, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype, $CellContext`partition}, {$CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype} = ReplaceAll[
                    
                    ReplaceAll[{$CellContext`Intervals, \
$CellContext`ShowPicture, $CellContext`AreaColor, $CellContext`BorderColor, \
$CellContext`ComputationMethod, $CellContext`ShowPoints, \
$CellContext`ShowAreaValue, $CellContext`PartitionType}, {$CellContext`opts}], 
                    
                    Options[$CellContext`RiemannSum]]; \
$CellContext`twocolorarea = 
                   If[Length[$CellContext`areacolor] == 2, True, 
                    False]; $CellContext`twocoloredge = 
                   If[Length[$CellContext`edgecolor] == 2, True, 
                    False]; $CellContext`optPlot = FilterRules[
                    Flatten[{$CellContext`opts, 
                    Options[$CellContext`RiemannSum]}], 
                    Options[Plot]]; $CellContext`\[CapitalDelta]x = 
                   N[($CellContext`varMax - \
$CellContext`varMin)/$CellContext`intervals]; $CellContext`partition = 
                   Switch[$CellContext`partitiontype, "Random", 
                    Append[
                    Prepend[
                    Sort[
                    
                    RandomReal[{$CellContext`varMin, $CellContext`varMax}, \
$CellContext`intervals - 1]], $CellContext`varMin], $CellContext`varMax], 
                    "Uniform", 
                    
                    Table[$CellContext`varMin + $CellContext`i $CellContext`\
\[CapitalDelta]x, {$CellContext`i, 
                    0, $CellContext`intervals}]]; $CellContext`xValues = 
                   Switch[$CellContext`method, "Left", 
                    Drop[$CellContext`partition, -1], "Right", 
                    Drop[$CellContext`partition, 1], "Midpoint", 
                    
                    Table[(Part[$CellContext`partition, $CellContext`i] + 
                    Part[$CellContext`partition, $CellContext`i + 1])/
                    2, {$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Table[
                    Part[$CellContext`partition, $CellContext`i] + 
                    Random[] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], 
                    "Trapezoid", $CellContext`partition, 
                    "Simpson", $CellContext`partition]; $CellContext`yValues = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> \
$CellContext`xValues]; If[$CellContext`showPicture === True, 
                    Show[{
                    Plot[
                    
                    Evaluate[$CellContext`expr], {$CellContext`var, \
$CellContext`varMin, $CellContext`varMax}, 
                    Evaluate[$CellContext`optPlot], 
                    PlotStyle -> {{Thick, Black}}, Prolog -> 
                    Switch[$CellContext`method, "Left", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Right", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Midpoint", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i + 1]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Simpson", {
                    Table[{$CellContext`areacolor, 
                    EdgeForm[$CellContext`edgecolor], 
                    Polygon[
                    Join[{{
                    Part[$CellContext`partition, $CellContext`i], 0}}, 
                    $CellContext`QuadraticPath[$CellContext`expr, \
$CellContext`var, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`partition, $CellContext`i + 2]}], {{
                    Part[$CellContext`partition, $CellContext`i + 2], 
                    0}}]]}, {$CellContext`i, 1, $CellContext`intervals - 1, 
                    2}]}], Epilog -> If[$CellContext`showpoints === True, 
                    Switch[$CellContext`method, "Left", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Right", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Midpoint", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1}]}, "Simpson", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1, 2}], 
                    Table[{Black, 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 2, $CellContext`intervals + 1, 2}]}], {Black}]]}, 
                    Evaluate[$CellContext`optPlot], PlotLabel -> 
                    If[$CellContext`showareavalue, 
                    Row[{" Area \[TildeTilde] ", 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}], None], Axes -> 
                    True], {$CellContext`intervals, 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}]], 
                Options[$CellContext`RiemannSum] = {$CellContext`Intervals -> 
                  10, $CellContext`ShowPicture -> 
                  True, $CellContext`AreaColor -> 
                  RGBColor[0.976, 0.871, 0.812], $CellContext`BorderColor -> 
                  RGBColor[0.796, 0, 0.42], AspectRatio -> 
                  GoldenRatio^(-1), $CellContext`ComputationMethod -> 
                  "Left", $CellContext`ShowPoints -> 
                  True, $CellContext`ShowAreaValue -> 
                  True, $CellContext`PartitionType -> 
                  "Uniform"}, $CellContext`\[CapitalDelta]x = 
                1/100, $CellContext`i = 1, $CellContext`QuadraticPath[
                  Pattern[$CellContext`expr, 
                   Blank[]], 
                  Pattern[$CellContext`var, 
                   Blank[]], {
                   Pattern[$CellContext`x0, 
                    Blank[]], 
                   Pattern[$CellContext`x1, 
                    Blank[]]}] := 
                Module[{$CellContext`partition, $CellContext`y0, \
$CellContext`y1, $CellContext`xm, $CellContext`ym, $CellContext`coefficientA, \
$CellContext`coefficientB, $CellContext`coefficientC}, $CellContext`xm = \
($CellContext`x0 + $CellContext`x1)/2; $CellContext`partition = N[
                    
                    Table[$CellContext`i, {$CellContext`i, $CellContext`x0, \
$CellContext`x1, ($CellContext`x1 - $CellContext`x0)/12}]]; $CellContext`y0 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 1]]; $CellContext`ym = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 7]]; $CellContext`y1 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 
                    13]]; $CellContext`coefficientA = ($CellContext`x1 \
(-$CellContext`y0 + $CellContext`ym) + $CellContext`xm ($CellContext`y0 - \
$CellContext`y1) + $CellContext`x0 (-$CellContext`ym + \
$CellContext`y1))/((($CellContext`x0 - $CellContext`xm) ($CellContext`x0 - \
$CellContext`x1)) ($CellContext`xm - $CellContext`x1)); \
$CellContext`coefficientB = ($CellContext`x1^2 ($CellContext`y0 - \
$CellContext`ym) + $CellContext`x0^2 ($CellContext`ym - $CellContext`y1) + \
$CellContext`xm^2 (-$CellContext`y0 + $CellContext`y1))/((($CellContext`x0 - \
$CellContext`xm) ($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - \
$CellContext`x1)); $CellContext`coefficientC = ((($CellContext`x0 \
$CellContext`x1) (-$CellContext`x0 + $CellContext`x1)) $CellContext`ym + \
$CellContext`xm^2 ($CellContext`x1 $CellContext`y0 - $CellContext`x0 \
$CellContext`y1) + $CellContext`xm ((-$CellContext`x1^2) $CellContext`y0 + \
$CellContext`x0^2 $CellContext`y1))/((($CellContext`x0 - $CellContext`xm) \
($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - $CellContext`x1)); 
                  Table[{
                    
                    Part[$CellContext`partition, $CellContext`i], \
$CellContext`coefficientA 
                    Part[$CellContext`partition, $CellContext`i]^2 + \
$CellContext`coefficientB 
                    Part[$CellContext`partition, $CellContext`i] + \
$CellContext`coefficientC}, {$CellContext`i, 1, 13}]], $CellContext`funcC8F15[
                 
                  Pattern[$CellContext`x, 
                   
                   Blank[]]] := $CellContext`x^2, \
$CellContext`bcAreaPositiveColor = 
                RGBColor[
                 0.796, 0.91, 0.855], $CellContext`bcAreaPositiveBorderColor = 
                RGBColor[0.467, 0.753, 0.651], $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> {
                    GrayLevel[0.85], 
                    Dashing[{0}]}, Background -> 
                  GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.15\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.15  \[LightBulb]: Example \
3",ExpressionUUID->"498674a0-22a2-4604-800c-276a81c5b2d7"],

Cell[TextData[{
 "Related Exercises ",
 "19\[Dash]20",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"49f92118-245d-462b-a84a-dc910154e1c4"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 4\t", "ExampleFont"],
 "Errors in the Midpoint and Trapezoid Rules"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 4 Errors in the Midpoint and Trapezoid \
Rules",ExpressionUUID->"5283e13b-4b4d-44c3-9c3e-186e07d299c1"],

Cell["Given that ", "Text",ExpressionUUID->"4eabb326-1395-4a22-97b2-6f69b072a2ea"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FormBox[
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{" ", "0"}], 
             RowBox[{" ", "1"}]], 
            RowBox[{"x", " ", 
             SuperscriptBox["e", 
              RowBox[{"-", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}],
           TraditionalForm], "=", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            SuperscriptBox["e", 
             RowBox[{"-", "1"}]]}]}]}], ","}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2950b162-933b-4a52-9213-1c387dca86d7"]], \
"Text",ExpressionUUID->"09ff4924-a11f-4de1-949a-1b40fbebcfc1"],

Cell[TextData[{
 "find the absolute errors in the Midpoint Rule and Trapezoid Rule \
approximations to the integral with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "4"}], ",", "8", ",", "16", ",", "32", ",", "64", ","}],
    TraditionalForm]],ExpressionUUID->
  "f0706652-db8d-44c6-8303-6ce9c8c2fb52"],
 " and ",
 Cell[BoxData[
  FormBox["128", TraditionalForm]],ExpressionUUID->
  "da5948ec-cbbc-477b-b04f-3581a42c2caa"],
 " subintervals."
}], "Text",ExpressionUUID->"b5498996-d62a-4ba7-9c4f-43a176db13fb"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"03f484c9-6b96-4048-8604-5125032c14e6"],

Cell[TextData[{
 "Because the exact value of the integral is known (which often does ",
 StyleBox["not",
  FontSlant->"Italic"],
 " happen in practice), we can compute the error in various approximations. \
For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "16"}], TraditionalForm]],ExpressionUUID->
  "b32a825b-bd56-4319-b7a9-0f0afeb5ad90"],
 ", then"
}], "Text",ExpressionUUID->"ac21a2b5-9f72-47d8-9bbd-96527b86925b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
          RowBox[{
           RowBox[{
            FractionBox["1", "16"], "    ", "and", "    ", 
            SubscriptBox["x", "k"]}], "=", 
           FractionBox["k", "16"]}]}], ",", "    ", 
         RowBox[{
          RowBox[{"for", " ", "k"}], "=", "0"}], ",", "1", ",", "\[Ellipsis]",
          ",", 
         RowBox[{"n", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"477860f1-584e-4e7c-b1a7-c96509c112db"]], \
"Text",ExpressionUUID->"42c3274a-7561-4b60-b26c-373603d5d82b"],

Cell["Using sigma notation and a computer algebra system, we have", "Text",ExpressionUUID->"0b6e598c-e072-43d8-9014-c3f673d5b8af"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"M", "(", "16", ")"}], "=", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            FormBox[
             OverscriptBox["16", 
              StyleBox[
               OverscriptBox["\[OverBrace]", "n"], "TypesetAnnotationFont"]],
             TraditionalForm]], 
           RowBox[{
            RowBox[{"f", "(", 
             FractionBox[
              RowBox[{
               FormBox[
                OverscriptBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"k", "-", "1"}], ")"}], "/", "16"}], 
                 StyleBox[
                  OverscriptBox["\[OverBrace]", 
                   SubscriptBox["x", 
                    RowBox[{"k", "-", "1"}]]], "TypesetAnnotationFont"]],
                TraditionalForm], "+", 
               FormBox[
                OverscriptBox[
                 RowBox[{"k", "/", "16"}], 
                 StyleBox[
                  OverscriptBox["\[OverBrace]", 
                   SubscriptBox["x", "k"]], "TypesetAnnotationFont"]],
                TraditionalForm]}], "2"], ")"}], 
            FractionBox[
             FormBox[
              OverscriptBox["1", 
               StyleBox[
                OverscriptBox["\[OverBrace]", 
                 RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]], 
                "TypesetAnnotationFont"]],
              TraditionalForm], "16"]}]}], "=", 
          RowBox[{
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"k", "=", "1"}], "16"], 
            RowBox[{
             RowBox[{"f", "(", 
              FractionBox[
               RowBox[{
                RowBox[{"2", "k"}], "-", "1"}], "32"], ")"}], 
             FractionBox["1", "16"]}]}], "\[TildeTilde]", 
           "0.26440383609318"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"5e5365d8-6816-4961-8e18-410702141452"]], \
"Text",ExpressionUUID->"1cb13434-cfea-4508-ac14-29e64710702a"],

Cell["and", "Text",ExpressionUUID->"b931a373-b23c-42c1-9bb8-c03e107b9842"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"T", "(", "16", ")"}], "\[InvisiblePostfixScriptBase]"}], 
         "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              FormBox[
               RowBox[{
                RowBox[{"f", "(", 
                 FormBox[
                  UnderscriptBox["0", 
                   StyleBox[
                    UnderscriptBox["\[UnderBrace]", 
                    RowBox[{
                    SubscriptBox["x", "0"], "=", "a"}]], 
                    "TypesetAnnotationFont"]],
                  TraditionalForm], ")"}], "+", 
                FormBox["",
                 TraditionalForm]}],
               TraditionalForm], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"k", "=", "1"}], 
                FormBox[
                 OverscriptBox["15", 
                  StyleBox[
                   OverscriptBox["\[OverBrace]", 
                    RowBox[{"n", "-", "1"}]], "TypesetAnnotationFont"]],
                 TraditionalForm]], 
               RowBox[{"f", "(", 
                FormBox[
                 FormBox[
                  UnderscriptBox[
                   UnderscriptBox[
                    RowBox[{"k", "/", "16"}], 
                    StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                   StyleBox[
                    SubscriptBox["x", "k"], "TypesetAnnotationFont"]],
                  TraditionalForm],
                 TraditionalForm], ")"}]}]}], "+", 
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"f", "(", 
               FormBox[
                UnderscriptBox["1", 
                 StyleBox[
                  UnderscriptBox["\[UnderBrace]", 
                   RowBox[{
                    SubscriptBox["x", "16"], "=", "b"}]], 
                  "TypesetAnnotationFont"]],
                TraditionalForm], ")"}]}]}], ")"}], 
           FractionBox["1", "16"]}], "\[TildeTilde]", 
          RowBox[{"0.26391564480235", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"1c119990-a244-4f8f-b313-ddbd183701a3"]], \
"Text",ExpressionUUID->"fefefb0b-4556-4706-8d04-5635f1acf1d8"],

Cell[TextData[{
 "The absolute error in the Midpoint Rule approximation with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "16"}], TraditionalForm]],ExpressionUUID->
  "1498970f-c7df-484d-a95f-0a321aa0c5fb"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"M", "(", "16", ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         SuperscriptBox["e", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], "\[RightBracketingBar]"}], 
    "\[TildeTilde]", "0.000163"}], TraditionalForm]],ExpressionUUID->
  "4df50df3-ca23-4cc2-baa3-84685e5e0f2f"],
 ". The absolute error in the Trapezoid Rule approximation with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "16"}], TraditionalForm]],ExpressionUUID->
  "52506b67-feec-48b3-801a-37bafd671961"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"T", "(", "16", ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         SuperscriptBox["e", 
          RowBox[{"-", "1"}]]}]}], ")"}]}], "\[RightBracketingBar]"}], 
    "\[TildeTilde]", "0.000325"}], TraditionalForm]],ExpressionUUID->
  "4956b67e-43d2-4273-b636-e229076cea9d"],
 "."
}], "Text",ExpressionUUID->"85d68def-cf41-429f-a8e6-f4a2ab8458ae"],

Cell[TextData[{
 "\tThe Midpoint Rule and Trapezoid Rule approximations to the integral, \
together with the associated absolute errors, are shown in Table 8.5 for \
various values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0a66fa28-4fe9-4343-8087-503480b30342"],
 ". Notice that as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "d5073065-f2ca-4284-910d-5a7ba53c97d3"],
 " increases, the errors in both methods decrease, as expected. With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "128"}], TraditionalForm]],ExpressionUUID->
  "dd6a7af7-fbd6-4dab-97d4-78917a4637cf"],
 " subintervals, the approximations ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "128", ")"}], TraditionalForm]],ExpressionUUID->
  "4a6e63cf-4614-4e29-bdd5-8c4a1b42b8a7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "128", ")"}], TraditionalForm]],ExpressionUUID->
  "5441bb11-fef4-4e0c-908f-8cf2fa61c985"],
 " agree to four decimal places. Based on these approximations, a good \
approximation to the integral is ",
 Cell[BoxData[
  FormBox["0.2642", TraditionalForm]],ExpressionUUID->
  "4453750c-dea3-4ae4-adde-4dfca8718fd9"],
 ". The way in which the errors decrease is also worth noting. If you look \
carefully at both error columns in Table 8.5, you will see that each time ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "76324735-cf8f-45d6-b300-489029fb691f"],
 " is doubled (or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"086a741a-58cb-4d1d-b2c2-cabb0c0e9721"],
 " is halved), the error decreases by a factor of approximately 4."
}], "Text",ExpressionUUID->"edde8417-3422-4349-a75e-2ed3568ca511"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      TagBox[GridBox[{
         {
          StyleBox["\<\"Table 8.5\"\>", "TableFont",
           StripOnInput->False], "\<\"\"\>"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Left, Top},
      StripOnInput->False], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"n\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"27ff6c0e-ffb9-4019-a297-849c8708cf22\\\"]],\\nExpressionUUID -> \
\\\"5089ebc5-0ce5-4e5f-8ad9-87b616f1abfd\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nRowBox[{\
\\\"M\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"5abccaa3-650c-49d6-b4ad-eb69ee3f4af6\\\"]],\\nExpressionUUID -> \
\\\"88879919-51c5-48ac-af51-e913448addb0\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nRowBox[{\
\\\"T\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"869624f5-a2ac-4c33-93fc-a4b27e96d7ac\\\"]],\\nExpressionUUID -> \
\\\"62187c56-ba1b-4a77-82cc-a0a9e4177efd\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\\"Error\\\", \\\" \\\", \\\"in\\\", \\\" \\\", \\n\\n   \
RowBox[{\\\"M\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}]}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"8fe5df61-9e32-4182-9e3a-744644764d66\\\"]],\\nExpressionUUID -> \
\\\"fc4559b2-83d5-447f-9a4f-63364b19aa11\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\\"Error\\\", \\\" \\\", \\\"in\\\", \\\" \\\", \\n\\n   \
RowBox[{\\\"T\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}]}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"270fe82e-b8f8-438a-92b5-861e0bc3d8a3\\\"]],\\nExpressionUUID -> \
\\\"3d59dcc9-031a-4631-81b2-064d92939343\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"4\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"3815c2b2-8218-467e-ae48-c29f4587db8c\\\"]],\\nExpressionUUID -> \
\\\"c7192cfb-bdb5-4bef-976a-5590308407d8\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26683456310319\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"b78eb3b1-9624-495e-a0a2-de950d935eda\\\"]],\\nExpressionUUID -> \
\\\"cdef399c-1049-43fd-98e5-acc6983b63ea\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.25904504019141\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"96b6b90f-d848-4c5c-ade0-5a69347f0e69\\\"]],\\nExpressionUUID -> \
\\\"e5ed2666-635f-4138-856a-4c03f51aacfc\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00259\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"df23c02e-dc2d-4496-8658-235437bd7e36\\\"]],\\nExpressionUUID -> \
\\\"ef006a84-1fa7-488a-bd58-02b1ae66e204\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00520\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"a2d2fce4-4eef-4502-a489-bf4372ae400d\\\"]],\\nExpressionUUID -> \
\\\"3af7b1f1-e903-4ecb-96d9-66c6dbd6481d\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"8\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"402a11a8-ff6e-4e93-a89a-ef9225597663\\\"]],\\nExpressionUUID -> \
\\\"567204bd-9bb2-404f-8d1a-ddef2b852a3b\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26489148795740\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"77e34c0a-2226-46fd-a6b0-c5dea161ccbf\\\"]],\\nExpressionUUID -> \
\\\"6ceb8231-188a-4a63-82a7-5d24cb4bc050\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26293980164730\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"be98dc3e-9d27-4902-abd3-c6a3d96fc502\\\"]],\\nExpressionUUID -> \
\\\"e6aa635c-095e-4c5f-bf94-66ccbdcb7c0b\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000650\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"126f38f2-a1c2-4dc4-9f08-c43df4262e07\\\"]],\\nExpressionUUID -> \
\\\"6cb9bc5d-1a5e-427b-b23b-336592a27126\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00130\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"68f3e75e-42a7-49c4-9cd4-51fc92e9e565\\\"]],\\nExpressionUUID -> \
\\\"f0d2088c-e03c-4c88-909a-5c133332772a\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"16\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"5e957f5b-dfd1-48fc-ba22-b7cb1f26db9a\\\"]],\\nExpressionUUID -> \
\\\"b5ce3369-afcd-49b7-84d6-f1a77a287086\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26440383609318\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"b5ad2981-1234-4b98-b7a6-6afe5bce974f\\\"]],\\nExpressionUUID -> \
\\\"6177ad23-811c-48ac-b7f9-0ead04045d36\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26391564480235\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"853c267f-8448-4503-94da-6f33773a30e4\\\"]],\\nExpressionUUID -> \
\\\"e1c1f19d-04b9-4fe0-92c3-b762aee06801\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000163\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"0f2201d3-55ad-4896-90d1-a18abf11c739\\\"]],\\nExpressionUUID -> \
\\\"a4130a08-ca10-4fbe-82ab-2401dd9157e0\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000325\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"7cd5ae4c-ec6c-4df3-8fdf-94f33c90886e\\\"]],\\nExpressionUUID -> \
\\\"dcfbc83c-5b4f-4090-a43d-62d4a5ec31dc\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"32\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"0287b5c6-0ea7-44ce-94de-65d4f8698f54\\\"]],\\nExpressionUUID -> \
\\\"5ee28b31-8d6c-4cb7-bb7c-3521b080d399\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26428180513718\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"9e5454ce-8473-41a2-b43c-3f7be2140d77\\\"]],\\nExpressionUUID -> \
\\\"0ce297d0-0ab2-498b-907d-be260a5ac0e6\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26415974044777\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"d1264fbd-4bbe-4b00-8807-c09ecd48ab9e\\\"]],\\nExpressionUUID -> \
\\\"366f8c50-4686-4fc6-bf8f-f8c082397a8d\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000407\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"bfa107b2-515d-4b0e-81bf-725898c93da4\\\"]],\\nExpressionUUID -> \
\\\"410fee62-ef16-490e-9679-85ae74297931\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000814\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"8643ed13-91d3-467a-b6f5-e061a5ce09ca\\\"]],\\nExpressionUUID -> \
\\\"9a663868-902a-4c35-8dbb-9cb3df05442f\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"64\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"59f945c9-0b3a-4c7f-afbc-17e4c49dda62\\\"]],\\nExpressionUUID -> \
\\\"e6c0b659-cee3-4763-acb8-551a7297383d\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26425129001915\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"dd848763-656d-49d8-a4e0-c6582e0e6dcb\\\"]],\\nExpressionUUID -> \
\\\"c31b1a83-cee6-4b74-8063-4189ae898bae\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26422077279247\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"e9957c2d-9b44-4b28-b85b-96b0a6298788\\\"]],\\nExpressionUUID -> \
\\\"b31b9be0-878a-4f8a-b932-fbdfc4f91ed1\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000102\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"cd15513a-6d9e-4fe7-a161-f1fa2f6c9d64\\\"]],\\nExpressionUUID -> \
\\\"8bf8972f-7040-47df-9988-b7ef1c38df31\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000203\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"57052100-6357-4981-af36-c8fc977ec7c5\\\"]],\\nExpressionUUID -> \
\\\"33f858b0-6da3-4f77-9ddc-880d1e6cccec\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"128\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"f3f753d5-701a-43a4-830c-e714aa8b3897\\\"]],\\nExpressionUUID -> \
\\\"82c04923-a1a8-43cf-9402-1060e9481cc7\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26424366077837\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"f5df27eb-9514-43d5-afc4-cbdaaa6ea551\\\"]],\\nExpressionUUID -> \
\\\"e5b10d51-9c49-4ea0-990c-a13ac61fb403\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26423603140581\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"22c859b6-ba79-4780-9819-6b101145d40f\\\"]],\\nExpressionUUID -> \
\\\"2fd84acc-ae37-47ae-98d8-f892d652680b\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00000254\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"536ee89f-6c43-4bc4-bd35-f8bb433e7f65\\\"]],\\nExpressionUUID -> \
\\\"af5af3f0-d636-4142-b132-9b8177e02211\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00000509\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"bbaf705c-8112-47f8-a94d-e3006a1f6dad\\\"]],\\nExpressionUUID -> \
\\\"bbf80db0-fa91-45a5-8a70-8797284eab38\\\"]\\)\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{FontFamily -> "Times", "Text"},
   GridBoxAlignment->{
    "Columns" -> {Right, Center, Center, Left, Left}, "Rows" -> {{Center}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {1.25, 1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 8.5",ExpressionUUID->"3482a4c2-2b1a-412c-8643-77b1f2db695e"],

Cell[TextData[{
 "Related Exercises ",
 "31\[Dash]32",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"4c3416f0-f52d-4fe1-aafd-f07440a232ba"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "3"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"7458cd55-daf6-4f3c-b25b-46b87e76e51b"],
 "  Compute the approximate factor by which the error decreases in Table 8.5 \
between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "16", ")"}], TraditionalForm]],ExpressionUUID->
  "7115aeab-1bcd-4919-94a8-0476fdd3c0a0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "32", ")"}], TraditionalForm]],ExpressionUUID->
  "e7ba5791-880b-4e22-9e37-7440bada53c4"],
 ", and between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "32", ")"}], TraditionalForm]],ExpressionUUID->
  "d86ca203-431f-424d-9d32-1d39b7b75455"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "64", ")"}], TraditionalForm]],ExpressionUUID->
  "86dfe3ba-d043-4978-82a5-947b189dd2df"],
 ".  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 3",ExpressionUUID->"9eb2d433-d0c5-440b-83ae-13d2676d091d"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"89f4db4d-6276-4579-81eb-8c1032671f46"],

Cell["4 and 4", "QuickCheckAnswer",ExpressionUUID->"bd5c505a-bce3-44bc-9a2e-80511d66b5a8"]
}, Closed]],

Cell["\<\
\tWe now apply the Midpoint and Trapezoid Rules to a problem with real data.\
\>", "Text",ExpressionUUID->"02384a3e-98d1-4c61-b72b-d56e2109e649"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 5\t", "ExampleFont"],
 "World oil production"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 5 World oil \
production",ExpressionUUID->"2b4b99ca-fccc-49b5-ad8f-914d6a41d901"],

Cell[TextData[{
 "Table 8.6 and ",
 StyleBox["Figure 8.16", "FigureFontText"],
 " show data for the rate of world crude oil production (in billions of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"barrels", "/", "yr"}], TraditionalForm]],ExpressionUUID->
  "10f68516-eec6-4080-b5cd-11e73ea34ba8"],
 ") over a 16-year period. If the rate of oil production is given by the \
function ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "30932a6d-3df9-48bc-b172-6934ffc229b4"],
 ", then the total amount of oil produced in billions of barrels over the \
time period ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[LessEqual]", "t", "\[LessEqual]", "b"}], TraditionalForm]],
  ExpressionUUID->"e6e202dd-41c7-4775-9c41-6c321e4306d1"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "a"}], 
      RowBox[{" ", "b"}]], 
     RowBox[{
      RowBox[{"R", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"27ecc756-0aa0-4904-82c7-5a9c6b0aab73"],
 " (Section 6.1). Use the Midpoint and Trapezoid Rules to approximate the \
total oil produced between 1995 and 2011."
}], "Text",ExpressionUUID->"966928da-b6d0-46d6-bcf7-46d735a7a6cc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       TagBox[
        GridBox[{{
           GraphicsBox[{{}, 
             
             GraphicsComplexBox[{{1995., 21.9}, {1996., 22.3}, {1997., 23.}, {
              1998., 23.7}, {1999., 24.5}, {2000., 23.7}, {2001., 25.2}, {
              2002., 24.8}, {2003., 24.5}, {2004., 25.2}, {2005., 25.9}, {
              2006., 26.3}, {2007., 27.}, {2008., 26.9}, {2009., 26.4}, {
              2010., 27.}, {2011., 27.}}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.92, 0.11, 0.27], 
                  AbsolutePointSize[7]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17}]}}, {{
                 Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.92, 0.11, 0.27], 
                  AbsolutePointSize[6]], 
                 
                 PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17}]}, {}, {}}}], {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}},
              AxesOrigin -> {1994, 0}, PlotRange -> {{1994, 2012}, {0, 30}}, 
             DisplayFunction -> Identity, AspectRatio -> 1.3, 
             Axes -> {True, True}, AxesLabel -> {None, None}, 
             AxesOrigin -> {1994, 0}, AxesStyle -> Arrowheads[0.04], 
             BaseStyle -> {"Text"}, DisplayFunction :> Identity, Epilog -> {
               InsetBox[
                FormBox[
                "\"\\!\\(TraditionalForm\\`t\\)\"", TraditionalForm], {2012, 
                0}, {2, -2}], 
               InsetBox[
                FormBox[
                "\"\\!\\(TraditionalForm\\`R\\)\"", TraditionalForm], {1994, 
                30}, {-2, 1}]}, Frame -> {{True, False}, {True, False}}, 
             FrameLabel -> {{
                FormBox["\"Billions  of  barrels/yr\"", TraditionalForm], 
                None}, {
                FormBox["\"Year\"", TraditionalForm], None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 324., Method -> {}, 
             PlotRange -> {{1994, 2012}, {0, 30}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0}}, 
             Ticks -> {Automatic, Automatic}}], 
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {50, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[50]], 
           TagBox[
            GridBox[{{
               ItemBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Table 8.6\"", "TableFont", StripOnInput -> False], 
                    "\"\""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], Alignment -> {Left, Top}, StripOnInput -> False], 
               "\[SpanFromLeft]"}, {
               StyleBox[
               "\"Year\"", Bold, FontFamily -> "Helvetica", StripOnInput -> 
                False], 
               StyleBox[
                TagBox[
                 
                 GridBox[{{"\"World Oil Production\""}, {
                   "\"(billions barrels/yr)\""}}, 
                  GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], Bold, FontFamily -> "Helvetica", StripOnInput -> 
                False]}, {"1995", "21.9`"}, {"1996", "22.3`"}, {
              "1997", "\"23.0\""}, {"1998", "23.7`"}, {"1999", "24.5`"}, {
              "2000", "23.7`"}, {"2001", "25.2`"}, {"2002", "24.8`"}, {
              "2003", "24.5`"}, {"2004", "25.2`"}, {"2005", "25.9`"}, {
              "2006", "26.3`"}, {"2007", "\"27.0\""}, {"2008", "26.9`"}, {
              "2009", "26.4`"}, {"2010", "\"27.0\""}, {"2011", "\"27.0\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {Right, Center, Center, Left, Left}, 
               "Rows" -> {{Bottom}}}, AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {False, {{
                   Thickness[Large], 
                   GrayLevel[0.85]}}, False, False, False, False, False, 
                 False, False, False, False, False, False, False, False, 
                 False, False, False, False, {{
                   Thickness[Large], 
                   GrayLevel[0.85]}}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{1}}, "Rows" -> {1.25, 1.25, {0.5}}}, 
             BaseStyle -> {FontFamily -> "Times", "Text"}], "Grid"]}, {
           StyleBox[
           "\"(\\!\\(\\*\\nStyleBox[\\\"Source\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)\\!\\(\\*\\nStyleBox[\\\":\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\
\\nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\\)U.S. Energy Information \
Administration)\"", FontFamily -> "Times", StripOnInput -> False], 
           "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.16\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.16: Example \
5",ExpressionUUID->"b7639b15-26db-4179-990c-4a4e04462b4a"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"c8ca9a62-e74a-4e3a-8e15-69158c72aeda"],

Cell[TextData[{
 "For convenience, let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "876361c2-0f37-40ba-91ed-6c7289d620f9"],
 " represent 1995 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "16"}], TraditionalForm]],ExpressionUUID->
  "88bf9c05-e710-4c21-8c0b-f782d40c1b55"],
 " represent 2011. We let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "246c8650-4983-45fb-8585-1784fb2e2a27"],
 " be the rate of oil production in the year corresponding to ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "c1dfec4c-cec6-40c8-bc46-170ca19e3c02"],
 " (for example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", "(", "6", ")"}], "=", "25.2"}], TraditionalForm]],
  ExpressionUUID->"19b168bc-a3f2-4752-bca0-5d423c8e5a85"],
 " is the rate in 2001). The goal is to approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "16"}]], 
     RowBox[{
      RowBox[{"R", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"4a4595af-dd85-4c3b-9675-0830897b93f7"],
 ". If we use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2c1e7d48-67d7-45ea-81ab-1a9d34a8dee6"],
 " subintervals, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "t"}], "=", 
    RowBox[{"4", " ", "yr"}]}], TraditionalForm]],ExpressionUUID->
  "1946b36b-f7e0-46aa-822a-06932d4a5e53"],
 ". The resulting Midpoint and Trapezoid Rule approximations (in billions of \
barrels) are"
}], "Text",ExpressionUUID->"3cdd0b87-7b31-4560-ad4f-87137a3a86d9"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Q", "\[TildeTilde]", 
          RowBox[{"M", "(", "4", ")"}]}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", "(", "2", ")"}], "+", 
            RowBox[{"R", "(", "6", ")"}], "+", 
            RowBox[{"R", "(", "10", ")"}], "+", 
            RowBox[{"R", "(", "14", ")"}]}], ")"}], "\[CapitalDelta]", 
          "\[VeryThinSpace]", "t"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"23.0", "+", "25.2", "+", "25.9", "+", "26.4"}], ")"}], 
          "4"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", "402.0"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c6c4745c-0001-48c9-a7be-1be461c5d523"]], \
"Text",ExpressionUUID->"b0437245-495b-4e2f-ba66-aa7bb0c8645f"],

Cell["and", "Text",ExpressionUUID->"9c1f0c7d-26cf-477e-b2f6-d421b54fde23"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Q", "\[TildeTilde]", 
          RowBox[{"T", "(", "4", ")"}]}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"R", "(", "0", ")"}]}], "+", 
            RowBox[{"R", "(", "4", ")"}], "+", 
            RowBox[{"R", "(", "8", ")"}], "+", 
            RowBox[{"R", "(", "12", ")"}], "+", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"R", "(", "16", ")"}]}]}], ")"}], "\[CapitalDelta]", 
          "\[VeryThinSpace]", "t"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], "\[CenterDot]", "21.9"}], "+", "24.5", 
            "+", "24.5", "+", "27.0", "+", 
            RowBox[{
             FractionBox["1", "2"], "\[CenterDot]", "27.0"}]}], ")"}], 
          "4"}]}]},
       {
        RowBox[{"\[InvisiblePostfixScriptBase]", "=", 
         RowBox[{"401.8", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e1bd22fe-7bfd-4d60-9ab5-c9ab6aa95e18"]], \
"Text",ExpressionUUID->"7cd73237-8559-4c10-adce-c4c2db8d481a"],

Cell[TextData[{
 "The two methods give reasonable agreement. Using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "d9100f7d-d925-4e7d-938a-852d88abc4cb"],
 " subintervals, with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "t"}], "=", 
    RowBox[{"2", " ", "yr"}]}], TraditionalForm]],ExpressionUUID->
  "8e81a895-81af-43ed-b8f1-134401012225"],
 ", similar calculations give the approximations"
}], "Text",ExpressionUUID->"fc3b186d-41ce-4517-95cf-6c2c3be5e26e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Q", "\[TildeTilde]", 
          RowBox[{"M", "(", "8", ")"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"399.8", "    ", "and", "    ", "Q"}], "\[TildeTilde]", 
           RowBox[{"T", "(", "8", ")"}]}], "=", 
          RowBox[{"401.9", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"76341c4c-4b60-4673-93d0-4a7f34571cc6"]], \
"Text",ExpressionUUID->"0c25ff7b-2c4c-4f93-8227-bfaa07e2c46d"],

Cell[TextData[{
 "The given data do not allow us to compute the next Midpoint Rule \
approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "16", ")"}], TraditionalForm]],ExpressionUUID->
  "c7fdb412-2233-4c56-91fa-6b060a70d9b6"],
 ". However, we can compute the next Trapezoid Rule approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "16", ")"}], TraditionalForm]],ExpressionUUID->
  "c5d2cb3a-dcf9-4f40-ac9f-5c07e61c0958"],
 " and here is a good way to do it. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "c247cfef-f083-4295-b67b-18ae3a8f498f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "4196c865-f219-4c84-b9c3-a12a6526930d"],
 " are known, then the next Trapezoid Rule approximation is (Exercise 76)"
}], "Text",ExpressionUUID->"6ebb649e-97d6-4af0-bb21-e32822307cd6"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"T", "(", 
          RowBox[{"2", "n"}], ")"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"T", "(", "n", ")"}], "+", 
            RowBox[{"M", "(", "n", ")"}]}], "2"], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"10c9ec11-40db-49d5-afba-6fd7c90cb909"]], \
"Text",ExpressionUUID->"61e8c1cd-0d7b-411e-ba6b-2a4d04807784"],

Cell["Using this identity, we find that", "Text",ExpressionUUID->"19b890f5-897f-4e3d-ab99-2006f86e264e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"T", "(", "16", ")"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"T", "(", "8", ")"}], "+", 
            RowBox[{"M", "(", "8", ")"}]}], "2"], "=", 
          RowBox[{
           FractionBox[
            RowBox[{"401.9", "+", "399.8"}], "2"], "\[TildeTilde]", 
           RowBox[{"400.9", "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"f973c1f3-09ce-4e31-9448-63740515b03f"]], \
"Text",ExpressionUUID->"ddf8d9a7-900e-4149-b801-4cbd129775be"],

Cell["\<\
Based on these calculations, the best approximation to the total oil produced \
between 1995 and 2011 is 400.9 billion barrels.\
\>", "Text",ExpressionUUID->"7fed6205-99ab-4374-9198-985f54fa5009"],

Cell[TextData[{
 "Related Exercises ",
 "37\[Dash]40",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"2b033a26-6afe-40ac-a1d2-cbf2de88310a"]
}, Closed]]
}, Open  ]],

Cell["\<\
\tThe Midpoint and Trapezoid Rules, as well as left and right Riemann sums, \
can be applied to problems in which data are given on a nonuniform grid (that \
is, the lengths of the subintervals vary). In the case of the Trapezoid Rule, \
the net areas of the approximating trapezoids must be computed individually \
and then summed, as shown in the next example.\
\>", "Text",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   51},ExpressionUUID->"76e2c26d-7f27-4700-84cd-f0f50a743453"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 6\t", "ExampleFont"],
 "Net change in sea level"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 6 Net change in sea \
level",ExpressionUUID->"8e84ade5-157d-42cc-acae-c714568e58fc"],

Cell[TextData[{
 "Table 8.7 lists rates of change ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "'"}], 
    RowBox[{"(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f0f2652f-f374-4bc8-8e8c-6066faaee73f"],
 " in global sea level ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "00836956-333d-432b-b9ad-8b404011f843"],
 " in various years from 1995 (",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "5c4cfde9-d092-4183-ad45-a2aab3d242b5"],
 ") to 2011 (",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "16"}], TraditionalForm]],ExpressionUUID->
  "25e35f6b-99a1-4307-988f-c3e00a41fd4c"],
 "), with rates of change reported in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"mm", "/", "yr"}], TraditionalForm]],ExpressionUUID->
  "b1a128e7-0ee9-4e45-9504-d8dcfb0bc9bf"],
 "."
}], "Text",ExpressionUUID->"72004dcb-2da2-4407-a5c5-2aec82082182"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      TagBox[GridBox[{
         {
          StyleBox["\<\"Table 8.7\"\>", "TableFont",
           StripOnInput->False], "\<\"\"\>"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Left, Top},
      StripOnInput->False], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"\\!\\(TraditionalForm\\`t\\\\ \\((years\\\\ from\\\\ 1995)\
\\)\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], "0", "3", "5", "7", "8", "12", "14", "16"},
    {"\<\"\"\>", "\<\"(1995)\"\>", "\<\"(1998)\"\>", "\<\"(2000)\"\>", \
"\<\"(2002)\"\>", "\<\"(2003)\"\>", "\<\"(2007)\"\>", "\<\"(2009)\"\>", \
"\<\"(2011)\"\>"},
    {
     StyleBox["\<\"\\!\\(TraditionalForm\\`s' \\((t)\\)\\\\ \
\\((mm/yr)\\)\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], "0.51`", "5.19`", "4.39`", "2.21`", "5.24`", "0.63`",
      "4.19`", "2.38`"},
    {
     PaneBox["\<\"(\\!\\(\\*StyleBox[\\\"Source\\\",FontSlant->\\\"Italic\\\"]\
\\)\\!\\(\\*StyleBox[\\\":\\\",FontSlant->\\\"Italic\\\"]\\) Collecte \
Localisation Satellites/Centre national d\[CloseCurlyQuote]\[EAcute]tudes \
spatiales/Legos)\"\>",
      BaseStyle->{
       "Text", LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
        LineBreakWithin -> Automatic, Hyphenation -> True, TextAlignment -> 
        Left},
      ImageSize->{Automatic, Automatic}], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   BaseStyle->{FontFamily -> "Times", "Text"},
   GridBoxAlignment->{"Columns" -> {Left, {Center}}, "Rows" -> {{Bottom}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {1.25, 1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 8.7",ExpressionUUID->"25a038e7-9808-435d-94f0-28b4c40f30c1"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tAssuming ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "'"}], TraditionalForm]],ExpressionUUID->
  "b35bd9ce-b1f4-45bc-8137-5fbf0ac6a38b"],
 " is continuous on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "16"}], "]"}], TraditionalForm]],ExpressionUUID->
  "332fb466-dd57-497c-9537-e0a076534e9f"],
 ", explain how a definite integral can be used to find the net change in sea \
level from 1995 to 2011; then write the definite integral."
}], "Text",ExpressionUUID->"12173ec6-9a04-4f28-9655-b0edda9d3093"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tUse the data in Table 8.7 and generalize the Trapezoid Rule to estimate \
the value of the integral from part (a)."
}], "Text",ExpressionUUID->"d3ac35bc-288b-43f3-b66f-a5e0d0cdcdf4"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"46ef6c2b-2e7a-49e3-a2b5-012fbd3f8893"],

Cell["\<\
The rate of change in sea level varies from one location on Earth to the \
next; sea level also varies seasonally and is influenced by ocean currents. \
The data in Table 8.7 reflect approximate rates of change at the beginning of \
each year listed, averaged over the entire globe.\
\>", "Callout",ExpressionUUID->"de9ffd4f-29a2-4eaa-ba60-036f20836fd0"]
}, Closed]],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"44ec8aeb-dd27-4395-bb45-241009cb99ee"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tThe net change in any quantity ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "b8df2e4b-344b-4c1a-ad22-d2e77e6d6478"],
 " over the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "f59555e2-81b4-461a-bae2-36074ae5d9b0"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Q", "(", "b", ")"}], "-", 
    RowBox[{"Q", "(", "a", ")"}]}], TraditionalForm]],ExpressionUUID->
  "3ec73a6d-b50b-453d-ba6e-6104fe728d7e"],
 ". When the rate of change ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "02a2f081-bd06-483e-8479-520305818b47"],
 " is known, the net change in ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "13eb1445-d92b-46de-b34c-6f7b8de88811"],
 " is found by integrating ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "'"}], TraditionalForm]],ExpressionUUID->
  "cc8a04da-9416-4d31-8a27-7fee94edc5d4"],
 " over the same interval; that is, "
}], "Text",ExpressionUUID->"50d4c311-599f-4d0a-8538-8a7fab8f163d"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"net", " ", "change", " ", "in", " ", "Q"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Q", "(", "b", ")"}], "-", 
           RowBox[{"Q", "(", "a", ")"}]}], "=", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{" ", "a"}], 
            RowBox[{" ", "b"}]], 
           RowBox[{
            RowBox[{"Q", "'"}], 
            RowBox[{"(", "t", ")"}], " ", "d", "\[VeryThinSpace]", 
            RowBox[{"t", "."}]}]}]}]}], 
        StyleBox[
         RowBox[{"Fundamental", " ", "Theorem"}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"55389110-5096-48ee-980d-baa6c5cb6d9b"]], \
"Text",ExpressionUUID->"7f2366c3-a5dc-4190-bd58-d328d681c347"],

Cell[TextData[{
 "Therefore, the net change in sea level from 1995 to 2011 is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "16"}]], 
    RowBox[{
     RowBox[{"s", "'"}], 
     RowBox[{"(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}], 
   TraditionalForm]],ExpressionUUID->"faaea9ed-8c40-4d11-a12a-9629f10a93d7"],
 "."
}], "Text",ExpressionUUID->"7b13cf88-1fac-433c-a7ef-5e66e7e77519"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tThe values from Table 8.7 are plotted in ",
 StyleBox["Figure 8.17", "FigureFontText"],
 ", accompanied by seven trapezoids whose combined area approximates the net \
area ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "16"}]], 
    RowBox[{
     RowBox[{"s", "'"}], 
     RowBox[{"(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}], 
   TraditionalForm]],ExpressionUUID->"1ee68020-c8dd-4cf9-8c1d-c65a4ecf05bb"],
 ". Notice that the grid points (the ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "75c8ae18-cd90-43a3-ad5c-d2a0d739dd0c"],
 "-values in Table 8.7) do not form a regular partition of the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "16"}], "]"}], TraditionalForm]],ExpressionUUID->
  "d1a0600a-64ff-444e-b758-17008d87331e"],
 ". Therefore, we must generalize the standard Trapezoid Rule and Compute the \
area of each trapezoid separately."
}], "Text",ExpressionUUID->"b66a737d-4690-4526-ab68-5a0e0593d4da"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1:eJzs3X+sFdW9+P3mPNU8/7Q+MdZL/MPENE1ummoMPtWH05Zaq6e511Zre+UC
t+Wb+gMit1gFBREhhiu20GIROf4ooKJQqC31QBX5IW2l5cCptYg5CNj0VM+5
/qzRg7GemByznr2GM5uZNWvNrFl7fu2933+8KoW9Z9asWTN75jOf+ayzrvrB
t6Z3fOxjH5vzf9f+51vfm/eV2bO/N//b/0/t/1x5/ZzrZlx/7TX/dv1N1864
dvb/d9X/VfvLGz7+sY+9cNLHPlb7z8c++ugjAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAColveGh8Wbb70l+l/q9/z5+QMAAABI
wb+Oeu3NIe/aquzrOwAAAABA4+R93vZd28XaBx8EAABAxh555BHvWktec5V9
3QcAAAAAsCdzznfv/m3p95UAAADtRsbU5bVY2deDAAAAAAA9+W5xXO75pl9s
Enue2VN/J3lwcBAAAAAp+LXx5DWVvLaKi6dT9wUAAAAAqkXez5nu4eT9Hvdx
AAAA2ZPXWHF19Pr69pfeRgAAAABod/Le7Ze/2RK5Z5M5UsTOAQAAiiOvveQ1
mHpdJq/VuC4DAAAAgHK89uaQN7cV7xADAABUh67Wnrxmk9duZbcNAAAAANqJ
rM+p5jrJd4rLbhcAAACOk9dmwZwH+Wd5DVd2uwAAAACgHchcJnX+UHLQAQAA
qkdeo6nzkRJLBwAAAIB8yXsx6m0CAAA0D3U+G5mX/uZbb5XeLgAAAABoVcF8
JmLoAAAAzSN4HSf/XHZ7AAAAAKAV7d7921AeEzF0AACA5qHWeJHXdmW3CQAA
AABaiTqvKHU1AQAAmg/XdAAAAACQn2Du0p5n9pTeHgAAALiR13LUdwEAAACA
bPW/1F+v5SKV3R4AAAA0JpgjIa/1ym4PAAAAADQ77rMAAABai58nQU46AAAA
ADQuWEOTXHQAAIDWEcyVoE46AAAAALjbvfu39Rj6n58/UHp7AAAAkA15befH
0eU1X9ntAQAAAIBmJePn/v3Ve8PDpbcHAAAA2ZDXdv51nlR2ewAAAACgGQVr
uvzyN1tKbw8AAACyJa/xqO0CAAAAAO7ku75+Pnpf3/7S2wMAAIBsyWs8P47O
9R4AAAAApLd913bykwAAAFpY8P1Dee1XdnsAAAAAoNls+sUmaqMDAAC0sGCN
dHntV3Z7AAAAAKDZMO8UAABA6+OaDwAAAADc+fdTskZ62W0BAABAPvz5cIij
AwAAAEB6xNEBAABaH7X8AAAAAMANtTIBAADaA3F0AAAAAHBDHB0AALS00Zzj
xXkvP0PyWs+v7UIcHQAAAADsyXso/36qynH0Dw7vFBu37xH/qEBbkLORfvGH
tT8Tcyd9WZx7wefFhM5OzzevvVU88ruj+YyB0WFxaNfD4r6514vJF4731uuv
W6532UOPi70Db5ffN0CLee/ppfVj7rJFG8XR0ZzWVTvGD/Y9Lu6aPF6ct2pf
6dvdbEZHXhFH+3rF9q2PhmrByd/lF98ZLb19sYZ6xOTTxompfTnFjPNefsb8
fHS5/4ijAwAAAIC9Zoijy/v3uz5+ujjjjDOa5j4VDkaHRd+aWd5+jnPmJ28R
24ezWaccW1vunB5afueU74krOk/XrrtjwTae5QBZGeqJHmMzezJb/mtvDnnP
x34089vhddxzsPxtbxbHesUvZl+ZeF7+f6+/u7hnjSP9YtU5p9afd/rPPNU/
y/9ecsnFx383PjXV/ncj7+WXjLouAAAAAOCmGeq6jO7/yYn4R9eDxDFb0eiw
eOLyk+v7+Zp1v/f+Xr6HcNMnojHtTOJgYzmE/jLHL9wSyquUebK6eNH4X/29
/P4CWsB72+ZHj+0szvEj/drzBnH0dA6vvjrcbxOmiZXb/yT6X+oXfX37I88g
pQnrX8i9Xe9uui4xrq86+Y69lVl+2chHBwAAAAA3zZCPvmd6R+h+deFLH5be
JmTrtZ99J5TzHfr3Ixuyj7Upcbavr9XXedDG+YjBAZkIPiOtH18X39NwHF2+
Z/KnzZu8GiSyjgvHcHrBc7J0+a+P6j97rFes6DqluGeNtXO3/36atXETxapB
y9ozeS+/AshHBwAAAAA3lc9HH+oRXzo9v/f+UQFKTFtXu0eN6TQapzkw93PW
MfngZ4nBARk61hvJG888n1mTm84xnOD5e9P1l9rH4ybmVuNE92wzSZrnrnkv
vwrIRwcAAAAAN1XPR395eac292vTP8pvG7Khxi2+/9wx7edknePuld2NzzWq
1GQ2ra9udFjsvfVyrx7uF6/MrjZ7GeTziLxjiEWsA61D5o7LeYW9OSsPvpH9
OpSaUcTRkwXfAZN1v21+b9XzeC456bV9+Vjn8dx3OU/GL3+zRfxxx5Ni+67t
Rrt3/1bs/6dlrnjey68I8tEBAAAAwE2l89FjatwSB2kRmhhXYly7Qb2zzg6t
b8kL75ffD0U41uvVg8/12CliHUAaxNHTUX53rXOt0+awOwjWAcojTp/38quC
fHQAAAAAcFPlfPS4ub5krtiuD8tvIxo0FnctLI6u1L6VuZbtMo62z+jIPYZY
xDqAVIijp6PMR2Fdr145l2fex4H9KH//M88Bz3v5FUI+OgAAAAC4qWw+eu2e
dtU5p8bWJP3GU0PltxON0bxzkHccPRjraZc4emge15xiiEWsA0iNOHo6Sl65
9RyaeeejB+L7xjlPq7z8CiEfHQAAAADcVDYfPXBPLuedG1jWFYmjn3TBYnF0
tAJthbui89GVWI+MozdzvXMbat3iPGKIRawDcEIcPR0lH106+Y69id9TzwFZ
zxcbrNneMWGa+Pbchd61y84jr2cSC857+VVCPjoAAAAAuKlqPnr9ntafU3So
R3zp9GhOetYxV909pfy7N996K/Xclv73pKza5i+v7Htfuf5Mtk/NfaxZ+NKH
+bVdE0dPm4/u0vcNj6vR4Xqfp1n/K5sW5D63QFbryOrYy/o40S5j9MT4l/9t
aN5bQ9uz3Ed5yOwcYNPfKftPXQZx9BQM85LE/dbKuWLV98escthtGX7/g875
7/9xn6c27+VXDPnoAAAAAOCmkvnogXvajpk99b/3ay+H4iFXrW58faPD4tCu
h8WcztO8uH09P/lYr7hr8vjQ+s5btc+8nJF+8cRd88TkC8dr78OvuO1+8eI7
KWILtXY9u/k+MXfSl8Wnzzoruu0Tpok563szi+Elef3A0+KBm6ca4w3fvPbW
5DhDbd/esWC+uHPJEs+PZn47shwZ2/b/XZKfn39vj/O7B/vWLqyvM7K+2v6W
eYfB9QUtWTxf3HzLPDFjxrViSteJdyKm9lnEHjIYV6/uXuftf92+9/qkr1c8
MP160X1oOLLu/uVTtftJfje4jXL77nzqiNNx0/A6sjj2cjhO3h86ePxYPm2c
OPmcu098t3aMb7lzunabv3Zjd/qayhmcM+QY8frXMIaTyGPDNj6YyTnA0N/b
1yyO9rdlm3TnkY7zL6nv92CuMXH0ZGp/+Zbu09dSU+cyybp/n18SfR/NpGPS
7V4OeZWWXzXkowMAAACAmyrmow/ef6k2B250/0+097VOeW+jw/WYkBrD9fKT
j2wwxop0+dK6nFyTG59Irr367v4HI3W8Zaxs3uIVkfii/LdNL4/kt09qfeHF
OQPr7JzyPXHzD28XN341Gv+T9XaM7dHkn1vx30tw2M+PdZ7its4YxtzMjMaV
zO8M5tD6cfM/7ngysmxde15e3plqe2zqNqic15HhsZflcSL7XMbjp38rnFfb
0fWgF4t97+mlVtt5/V67eRuyOmcEz5euEuOeWZ4DlP5Wl+v3d2IfHusVK7pO
ibRp7uxrxRWdJ/KpO86P5lbnFkcfO799/l/P9c5ZuTsj4dlug9thM77V40Lu
v0zrrWlqf9n4+tp9TvOjZr78CiIfHQAAAADcVC4fPfBOuZqXKOMud308GhNJ
GwOMyz0785O3iJ1HDsTeV6sxy8Orrz4RQ5h0u9jQd6ReW0Dm2uqWFddmtc7s
+XfviNyvqzG4vObLVJ9dyPiYWk/8g8M7tXUATLE/mUO955k9nr41syLfu2bd
7+v/Xv9c337nmIXMdfWX8fPZXwmvb9xEsXL7nyLr8z+/Zd310TFgiOlnOa5C
tXoXbItsu4wfx41JeazIbTjY93hknWfOfsjbtuC27h14O/3YcFjH3lsvz6yP
MjtORoe177rU+/+q1d47DWlibFN2vhrbd1meM4Lzu56/aJXYuH2P6H+pX0s3
d7P3fCHmGVXm5wBN/DvU3zZx9KGeyPMTNW6vPmMJrSPnOHqR8toWNcc86NKf
Hj/WDq2/LdwWzbmqYbVrgp9P/4GY/t3/Mr63EXfsJrYn7+VXEPnoAAAAAOCm
avnowdjYN56K5nXq7u3TzhU5sHWZmLVyjei+4aLYe2QZk4rEXc8I1/QItkfG
ELTrPNZrX29WqdNqjI9rYn+nPupQmyOOMt9cx8X3mPMMR/q1zzjG/+rv8evQ
xJ3ynGc0GHOM7d8ANd/XNN4yG1eBPombSzcY34zrsyJqQ9uuY2Bzt1h87/LG
+yjj42T4xc3i7l88Eslhj8TNJt3uPXc5OvC/3vODuM+b3pPJ+pzhj+nEeR0N
ef6682yu54DaMmX9l6UP3qftv8Q4utI38hgx1tMx9GNucfTatsn6T9/57v/x
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
Vva+KI729YrtaxbHrvP8u3eI/pf6vdhUw+/U6+rlxMWQlXxRm9okuhhXXA5j
o9TcZJv9rWtjUu1953GlxBVjY6HKmDf1m3q8eTGrRWu9uKOM066/+gv2sTID
l3U491HOx4luf8fmjB/ZENoPsXMcZ33OqI0Xbd9b1rQ+vPrqet9pty/vc4Bm
/tDY5ymGeaW9bZ50u9h55PX6Z+WcvL+YfaW5r2vbMWPGteKi2Y+Rm25xjCU9
P+lfPjX0eWNdfsOcsbpnRKbnTl9fu8/qnYWkWHXey5d05xNf3LVJnshHBwAA
AAA3heaj1+6f1XttL/5x8T3JOWAJy/XjQaZ4ydJ90RjjwNZl+njMVavFi+9Y
xtKVGJqVWnu6D0XvXU35nzpeXG/X9tiYXCa1aXW1FGrtn7fluVCcQb63rsbP
EvM9h3q0MTEvt/jlkezHn6mOfm1/x8U9dXWiZf8HY3aZjStNfq42pjPSL1Z0
hevzmmKBpnc1Qm1rsM5F2nU00kd5HydxcS+ZM37o3eP7XZ47ZY59aOzajPsM
zxnG93Ae2CH2PLPHs3v3b0P/3b71UbF62W3iik7LeHeO54BgvZpQP85+yDwO
DOcNV5f+dEf255oWoDsOZF+p+0Uej7tuOi/0udj4siGOrntPRDe3bPDY3njw
jfqzun1rF9b/7dNnnaX9zVflvXxJfe8m7txTFPLRAQAAAMBNUfnocbGpoAnr
X8h8mUGyrsRdk8dbfbZzyvfE/Hst8jqP9YZimnFi40OSIdarxjK8Ninv0Yfu
zxdsyy7HcnRY7L31cu16ui7791A8Trps0UZzXLq2fTd8/wderdjE/ho30auf
O3nZk+7bUmt735pZVuuTecB+rFJur7pdpjZ6OYVyX2QxrgwxJrmeWSvXeMfo
AzdPTbevDXNQ1r9/8T3m/ZWin5PWIePPmR17OR4nurjXjV9Nbrd8BpD0/kWm
5wzTWHEQOxdwxucAGTu/9qbZVseXPCa172Qoz5GMffepqd7zLjVn/5z//h/x
yO+OkoeeQNY90R1n3567UCy+d7n40cxvR/5NPvdLWu7ffviZ6PGjq/9jePck
jhx71s/B815+wjrKjqOTjw4AAAAA6RSVjy5zFbtXdtdj9iamHF+tY73aZT66
5v7I38ltlH8v897/sPZn9c+o/w1+Xv532UOP290zjw5786bp4rUyFiRjoLY5
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
ePOtt8Tg4GD9v6+9ORTi/538r09+Vt33ao2BUNsnTBMbD77h3l9Vy0cvI45e
65dXd68TczpPM/Zz7POrBuLoWY6VzMdLo8dimfnoOfdzWmXko2cyFirWjy79
QBy9PZCPDgAAAABuSstH/8hyvlFN/dWgyDxugThAYhy6Svnompz7JS+8n11/
VyUfXVPPPW2MLJYmHh2J885+KLk+RzPko7vE3l3j6LX++MvWZaE6Mpct2ij2
DrydX12XvMdKluMljarloxfRzymUkY+eyVioWD869QNx9LZAPjoAAAAAuCkz
H10XO1bz5YKxdlkvXK1je9IFi0NzGtbnF7WJm1QpHz1Q0z1VfNNWVfLR1e10
mEPQZlzZ1Fe48Ymj6ba9avnoBcXRBzTx81AsMa84ehFjJavxkkbV8tGL6mdL
6tyYReSjZzIWKtaPTv1AHL0tkI8OAAAAAG7KzEeX1JiJVJ9vtHaPvn3G8bj4
mZ+85Xi8/MiGyOfreeeBeRfH/+rvyeuvUj66Jo5uPc+ojarko2u2c2pfDvfx
tbYfWn9bYjzs8l8bYqNF56NXMY4+0i9WdAXeBRk3Uf+ORFFx9LzGShbjJeW6
KpWPXmQ/Oxw/heWjNzoWKtaPTv2gnh9qx3zqOUaIo1ce+egAAAAA4KbUfHRJ
M99o/T48EDP34+Kyju2qc04Nfd6vg+7HDBLnF/VVKB9dt10dM3uy6+eK5KMH
69er+y8Pci7MbfMvi42HaePIzZCPnmd9dE17rt87ZLXMrOqjFz1WGhovaVQs
H72Mfk5z/BSaj97AWKhaPzr1A/nobYF8dAAAAABwU3Y+uu4+XOae7//nqDgw
93Oh/+9/591N10U+L+dz8+PQ1rGLKuWja5brUhdAxnJ27/6t1fJLyUfX7W/b
5x7Kcp6cdm4oJ/SNvx401i7+4PDOcG51UmypzfPR1TmAOxZss15mZvnoOY6V
zMdLg8dAqfnoOfdzWmXko2cyFirWjy79QBy9PZCPDgAAAABuSs9Hl23YNj8S
n1i44if1d+Qjc4kG6rf4vnbdiXhB4vyivgrlo0tq7DLVM4HgMsZNjMY+KpKP
rn1eoNvHCfxnKfX6PbXlbu44NTGH/5VNCyLrrtcMStr2PPPRXXLL88pH19RO
il1ugXH0TMZKHuOlwWOg1Proefazg8Lro2c1FirWj6n7QUrzbkkjYxmlIh8d
AAAAANyUno8uKfHAjvNPT7yP18WcrfLtgqqUj/5RNM/eZ6ynoTi8+mpzHKMq
+eia/vD3s23uvT/3bOg9hbG2qu8uaMe8+tzG9rlDu+Sjp5yLNDgXcKZx9LzG
Sh7jJY2q5aPn2c8OIm1x6O9Ux2CGY6FK/Zi6HyTy0dsC+egAAAAA4KYK+ejS
wLKuSHwi7p5cjd35vvGUXczZU7F8dF1+se/GJ2Le8a+1af+Pp9XjHtr8wark
o0ua+fikky5YnBgve+/ppfXPq/nFflvT5nGffM7d0ZhVA9ve7PXRdbHAuJza
l5d3NhZHj+ufPMZKHuMlDdexlecxnFc/Oyi8PnqWY6FC/Zi6HyTi6G2BfHQA
AAAAcFOJfHRpqCcaP46rDz7SH5nTLXW8pYjYcsrPm3LSve9dtVrsHXg7VI/3
1d3rxJzO0+qfmbLz1fK2NQW/9r3ONet+H6mbIef8+/nsr4TiV6HPBNqaOD+r
sl2yX23qo+tyRA+tv03c+dSR2O+51nWZ2pcQ39DM0ZtFHF33jEqbU1vbVm2t
i5TzjCb1a+ZjJY/xkkaRYyvFd3LpZwcN13Vp4BydxVioSj+6jBfduyWp67pk
9BuB/JCPDgAAAABuqpKPrrsfT6oNrsZbYudCNKzzsc5TUsUN5Dye/nymtnFD
3TpMcSHd8nXU+GlifxWxrWkY8jaDPts1RfzHlVdGt3XcRLFqMD5/PHaOPiX+
bHqHQVc7qGPRWi9GJGNf66/+QnTcpdzfwTZF1pWU16mJiSd9Rxcjj8TrNcv1
t2Nl74viaF+v2L5mcez+O//uHaL/pX5vn6htSt2vWY+VnMZLGlmOrcyO4Tz6
2UEkDp122WmPwazHQkX60eVcpP6mSrHt0WwrcfTqIx8dAAAAANxUJh/9I6X2
rMxFf3kk/jtKTMN6ftExfj3xSLxw9mP6fMBA/RTVeav2aWMHwXf1w+t4SLz4
jiE+MdJvFUsPxS4WbIuNXRSxrakd2aB9HhCrNi66D2nu+zXPYb6+VtPOWt+u
6DoRW5L5p6Zt0c1/G+l3JWbksr9lrPPJaedGviNrQRjrh9S2V/cdGSfT9o90
rDe07fVtuPieUNtke9T4m4lXr2LX9ti4oRpHt+rXWptC4zLLsZLTeHE+11mO
rUKO4az7OaWBrcv0fXHVavP5Uu3btMdgHmOh5H506YcPDu/UHsfG35Zav+29
9XLtOmLrkKF05KMDAAAAgJvK5KNLgdoWie/XS4H4h/W78DH3/qrPXrToeBxT
1pCZPN7qO+MXbvFiQdfeNFtc0amvdR5aR9cUbf6jjGVum3+Z1TqNMYsCtjWL
Wum62G6qONjYtmpjv+Mmilkr13hj+4Gbp9rFhzTjSxvbG4v1uu5vGeeaMePa
xO90TvmeuG7F8Zid/52kGN2/TLqm/h0Z00vKj/XXUx9LQz2J37n0pzuOL19T
Yym2jy37Nbexktd4ScO2D8o4hrPsZ8vzvm175Ridf280fi2PC+dzbl5joeh+
dO0Hm/NDrS/keceP85uez6jfic3tR2nIRwcAAAAAN1XKR5f+9sPPePfgtu+2
+3mdaeZlkzXF/WcH0qNr7g/9f//+UpKxDRnT3rludf1z8r/BPwf/bvnGvV5e
X/fKbu1ndN955HfmWINclozhqHHTjvMvEdNvvy9xvsO8tzWT/T5W533upC9r
Yz0yliXrwieOhaeXerHjN996Sxzse1ysXnabmHnR1yL9dsVt91stT5L9sW/t
wnBcatxEMWd9bz2O5rq/5ff8f5P97/3b2LEY3C/y7+/ddfw77+5/UCx98L7I
vlT/HPyOjOfJ9gX/zdTGjQffCG371iX/GRp7cn/IOGYk5jfUE6rTL/t53pbn
GurXPMdKXuMlDds+KOUYzrCfbY7/P6z9mXY8B//OPzaWPfR4ZPw1es7NbSwU
2Y+u/TDSHzov6Pre5/f7oV0PR/4t+B3/vBU8n6A6yEcHAAAAADeVykeXRofF
0YH/TfX5wcHBtqjH6t/vtvp9r9w+bxtHq7edrd73DW+34z5z7dcqj5Wi+qCo
trVKP9OPaHfkowMAAACAm6rlowMAACAf5KMDAAAAgJvK5aMDAAAgF+SjAwAA
AIAb8tEBAADaA/noAAAAAOCGfHQAAID2QD46AAAAALghHx0AAKA9kI8OAAAA
AG7IRwcAAGgP5KMDAAAAgBvy0QEAANoD+egAAAAA4IZ8dAAAgPZAPjoAAAAA
uCEfHQAAoD2Qjw4AAAAAbshHBwAAaA/kowMAAACAG/LRAQAA2gP56AAAAADg
hnx0AACA9kA+OgAAAAC4IR8dAACgPZCPDgAAAABuyEcHAABoD+SjAwAAAIAb
8tEBAADaA/noAAAAAOCGfHQAAID2QD46AAAAALghHx0AAKA9kI8OAAAAAG7I
RwcAAGgP5KMDAAAAgBvy0QEAANoD+egAAAAA4IZ8dAAAgPZAPjoAAAAAuCEf
vQmMDovXDzwt7pt7vTjzU1PFrg8r0KZmUoH+++DwTvHI745q/+3d/Q+KyReO
F5//13PFZYs2iqOjFegzZG74xc3GMQAYjZ2/um+4SHRctVr8o+z2oOmRjw4A
AAAAbshHr6Y3/npQPLv5PjF30pfFGWecUSfjwNuHy29f1VWp//b/eJq37pPP
uTsaAxvqCbVP6liwrfT+Q8ZGh8Vjnacc379XrRb7/zlafptQWa+9OaQ9f3V0
PUgcHQ0jHx0AAAAA3JCPXjHP3xuJq5YdB24qVeq/Y71iRdcp9fiXLnb63rb5
0Tg6sbKWNDryinji8pPr43DVILF0KEaH62NEh3MDskA+OgAAAAC4IR+9YkaH
xR93PCn2PLNHbF3yn9o4MHVdmqD/jmwQk08bdzz2NbPHGPsa3f+TaKzs4nuI
lbWq2vjcddN59X295IX3y28TKuXQrofFL3+zRay/+gucG5AL8tEBAAAAwA35
6NXWO+ts8tGbrP9kvfNg3Cu23vmxXnHTJ04PtXHC+hdK7zfkKzguiaVDK1AL
iHx0ZIl8dAAAAABwQz56tb32s+8QR2+m/juy4cS6PnmLVe67rPexc91q7xjc
eeT10vsM+VNrvGz6R/ltQnHkeanjnoPxn9PUeCGOjiyQjw4AAAAAbshHr7bB
+y8ljt4s/afklpNnjFgj/fXxctIFi+PfW0DrqJ0nZM0npzg6dV2QAfLRAQAA
AMAN+ejVRj56k/SfEvNKjJEBH4Xnme1YsK309iB/e6Z32J0jyEdHTshHBwAA
AAA35KNXG3H05ui/4HpkPZf9/xwtfdvRBEb6xV0fP/EOw5Sdr5bfJuQmeJ4g
Hx1lIR8dAAAAANyQj15txNGboP/G6jSQiw4XoWcwHN8tK/juAfnoKBP56AAA
AADgphL56KPDXjvefOutTO/p/GVKWS+vqHvPLOPAWfdHERptcxFx9FAN9nET
xarBxnLRXcaW8TuBY6vI+FvsNoy1Kc12ZnV+qGS7hnrEl04/MUZPvmNvYftJ
brN/fDXTeUHt/yzart2Ho9kcO69sWhA6D2Wdjx78XcrqOG/G3wvYIR+9cfK4
+PPzB8SeZ/aIX/5mS6hPAQAAiiTjeZK8Jtm9+7feNcrg4GDp10tAqyozH/3V
3evE3ElfjsYXJkwTczZsE0f7esUD068X3Ycs7/NG+sUTd80Tky8cH1mm9LUb
u8WL76SIcY4Oi0O7Hta2sd7O9b25xicbigM30h9DPeKG7/9A3LlkidHNt8wT
m14e0X5/37I7xM0/vD30+SWL54t5i1fEtz/jfZh7HD0wV6QXAz3nbqf5It8f
Oij2rV3o5bXLZdiMqTf+elA8tnze8Vz4cRND2yWPrRu/Gu3DS3+6I7fxOjry
inh283319U7tGzb+W/AYuvOpI9rlfXB4p/jRzG9HtkHuw6X7hpq+XXW188xj
nacUlpP++oGnxQM3Tw3F7tVjbEOfftvrWuT84J/j53SeFj6GjvWKuyaH13He
qn1O+7Z/+VTj74faX6Exl5CPLsfuljuna5d92aKN6c9DWfctKot8dDevvTnk
xc393BMAAICq275ruzg68L+lX0cBraSMfHR5/x+ak3HCNDH/3h7xxx1Pip/P
/krk/v37zx1LXKYu38/kxieOJi7v3f0Phmp1yNiWH/dR4yvy30zxoka5xoEb
7o9jvcbnB77Pdk3Rf3d0WPStmaWN0535rbnGvsp6HzbSf7be3XRdaPlpcon9
GK4XwzPEylQyBlqPnSvbtevD48tcf/UXYvtO5rRmVb9dxv/lNujGin/cDmxd
ZozZavttpD9xG6S4WuJVbZfJwLKu0DLG/+rv2Z9PhnoiY61zyve8+K3umctJ
Fyw2HyvNfH6ord9/lqA7hj46ssE4Lha+9GGqPn95ead1myPjLS4f/fl7E8eu
97v0D7t25nHuRXWRj55O/0v9Xn5XmnvWYKydP/Nn/syf+TN/5s/8Oes/q/9N
Ij8n89TLvq4CWkEZ+eh7pneciAss2BaJGcoYti7uZXJ49dUnljfpdi+XUr5z
K2OKMtdQjTlG4hVqnyh1bMcv3BJpoxp3qMdgMu4rlzhwlv0xuv8nyfEeA7m+
4ByKl//aHH/Jeh820n/WlDxiKZjrbHSsV6zoOkXbr972G+Lof/vhZ8wxs0/e
Ih5/9plQbnwcedw1vP3P3xu7jnlbnhO7bjov9HfnXvD5+BjlUE+41vz5l4iv
/9ulxnVoa+hUtV1xx4pynGU9n6S6fBkj3zvwdugzMs9eN37i4qbNdn54fkmX
cZ/Jc8POIwe0y/LZPNNVt7Gvb7842Pd49NnX7Me8f5P5rb7QPtHF0a9aLf6y
dZnVMe71gcW7LXmde1Fd5KPbkfnnpnot8u/lMStj7PJzZbcVAABAXsPLei7y
HsOUAyCv/+T1S9ltBZpZ4fnoRzaEYjmmd8+D8Zm42EUwH9gYGzzWq40PaWOe
Sq1iY3x8dFhsn9ERWt6pjybUQnCgxoFl7YG4eH3m/fGRPvZkNZdmIM4cV+8k
jza79l8qSmxVLtsq/7N2DHzz2ltF98ruyLsNXh8Y4ugyx1q+kyVzaYN5xZ8+
66zw9ydME4/87qi3DC+Ot2ZWNMZm29YE8ndaxhCenHZubHxyZe+LJ7YpptZF
MF6oxhT3/3ia9TisarvixlIojp9Bnf3geAu17eJ7zDU/RvpDsW1fXH58M50f
BjZ3i4UrfiK6b7godj+fv2iV9jNWz8kM2xp8fmzVR5o4ujoWdx55/XgcVNan
WX+b9nNxOfR5nntRXeSjJ5O1RdX8Ltlv8r6UOQMAAEAzkNd5Mgddlxcg4+xc
BwJuis5HD77nLnNo42q49s462/ucMY4eiA/JZcXVqlBzzP14UiQXXqnTEZe/
rMZos84hlUJzWCa0J4/+8BzrjeZSJixf/Z4xDpdXm136LyU1F9dp2Zqc9ri6
Lqbt8n19rb6Gc+R5whkZP/cx5IDLWJ/2GI+JERrrUGu+E/csrtLtUmni1994
KoMcR6V+v1WtD/X50BkJcf1mPD+ox11t+/w/B/PiBwK537HPH5LocssbiKOb
3hFQf79i15PzuRfVRT66mewP9V5T/n/egwYAAM1M5pmpOeryWpDa6UB6heaj
K7GLpFiTH6c0xdGD+X2JMUElnmSKDaWKuyoxOpv4Z1pp6pLk0R++A3M/F4mj
JNU48GMvcTVv8mxz2v5LSx0rqWOnY8dE3FyCSX0bFFcXQxfrTJ0znXLf6Go2
JW1DUr0Z9TuJ+7Oq7bIZBxnsH7U+t209H208dmaP8fPNeH7QPYsy9U/DscYM
4+ixc9lqcsdN+y3vcy+qi3x0PXl/qeZqybx0+ggAALQKmRvgx/8eXXO/91/y
BYB0Cs1H1+XexsUSavfuMvZnU38l8X7eEJNQcz51OcbGOiBKHD0pv96FLg6s
bU9O/WFavh+fMcYjA/vaGLvLu81p+s9hLLvEv3XUeJ7VctSxl7RdaY+9tDRx
tsQ5GTW54on1p9XvJMXyqtquHMdT3LZb1/dOGzdtwvODruZTFrWOrPevQxzd
ZkxYfaeAcy+qi3z0KBlDV+fwkn9XdrsAAACyJmvUqbnpsnZd2e0CmkXR9dHV
/EhJzuP54jv6+/ijfb3af4vkS46bKKZ0dYlLLrlY64pO/fyLkVjGWJ1Z+Z0v
XnmL6D4Uc4+piWVmNoflGNt86tz6I0Ct75sUV0uKWxbR5tzy0TOMezrVB0o7
9nLKd67T5MEmxmw19UNSx6uTvlPVdtnsn6tWNxRHbzRHXpdjHpe33Gznh1zn
ILbZv3nE0S2/U8S5F9VFPnpYMA9dXg/L/qFfAABAq9u+a3solk5eOmCn6Pro
upoJ/n38vC3P2S0nYf61NOT8dmljVXK+xyfumhfJv8wjDmNVZ6ag/lBz9ePi
KAPLuuKXV1Cbc6uPnmcc3TEfveni6C750kXE0Ytol2b/qO8LxM29aaPRsa+t
bxOTY95s54e2jaOX/PuJ8pGPfkIwl8SPoZfdJgAAgKLIGnbBWDr10oFkReej
j468EokXhe75J0wTGw++Eb8cJQ4g83cPvfu6l1MkyfdU5H9fe3PI4//Z//fg
38nPWrVd5qnveljM6TzN2PbS8tEL6g+579S5ELXz0wXikMb5AwtqczvloyfV
dSGOXqF2afix5UzGqmZ/p65ppKupHzPGm+38kFvNp6yOv6zi6Or5pIzfT1QK
+egnBN9pJg8dAAC0Iz8vXdZLJ88CSFZ0PrpHE9uKxKRnP2Ss9SLjMMF4Td7x
j79sXRaKJ122aKPYO/B2+limA6s4cIH9EakpXDNl56uhz/h5qbFxwILa3JRx
9GbMR3eJPbvEuNPGq6vargLGqi6Onmp5ujkrE8ZmM50f2jYfvcjfT1QS+ejH
7XlmT6ieSzv3BQAAaG/BPAuZZ1B2e4AqKzofva52L7+iy5yX7rvxiaPR76p5
kjnNDzegiZ+HYvsl1EeX2xpZR0H9oV2XJk7j10k2zh9YYJut+s+FTd6nYxvb
pj46+eix4yCPfPS0cfTIsZ40Npvo/NCUcfSk/rf5TpG/F6gk8tHDOSRS/0v9
pbcJAACgLMG4INdGQLxS8tF9tXv+VzYtSIylX/5rJZauidVM7cvwXlCN8Y+b
KJa88H70cwXE0a1qHOfdH4reWWdHYtP1+QQDczSa5g8sss3tVB+91LouVc37
rmq7NNTjynU8mfZ36jbV+m7VOaemi+NqtqOq54fczg2W+6O0fPSCfy9QPeSj
h+u5yLqgZbcHAACgbHKe0eC7emW3B6iq0vLRA+S8ndvmXxYbSw/Gf3R1eE++
Y2827dHE0K7fO6T/bAn56Lp15NofFtsdjAn57U2aI7GoNhda14V89HQxW/LR
4/dPDnH0VPHSWj+kqY8e1xdVPD+0az564b8XqJx2z0eXtf2Duejt2AcAAAA6
wVwDGVcvuz1AFRWdj/7GXw8a655/cHinsdZLKH6TxRx6Y8t5ctq5oXx3v+ZA
fb0ze8zfr0gcPc/+0NHNFSvnE5Rz1fl/b5w/sOA25xkrU+eFLDsfveni6EXk
fVe1XTb7p3bucY6ja8ZV4vnMoh9sxkyznB+aMo6eRT56wb8XqJ52z0f359KS
+vr2l94eAACAqhgcHCQnHUhQaD567b57c8epibEcXa0XGYep5y8aci1PffRI
qva8u+m6cEznyIZ0sbAKx9Ez6Y+4cbNtfmR9X7vuO+JLpx9vY2K93YLanGes
zF93cIzu/6dhbtwU+7gp89GrWj+lqu3S7B819tzw/tG0SY5R63ippv5HbC2W
gGY4PzRlHD2L+ugl/F6gWto5H12ti95u2w8AAJAkeK0o4+pltweomkLz0cfu
321iOZE4jDI/pC7X0io+M2Z0/0+icaWUsTB/GXnGYWxr+ObSH3E0scZ63CZu
/sCC25xrDWT1uYvjfH3ko+cYr65quzTrVGPWaeurR46PkVci9c0l29ou6jlY
1mKxzo9vgvND29ZHL6BvUW3tnI8erPtJXXQAAIAoOceof70k3+Mruz1A1RSd
j+7f46etUSxjOKFcX03cSTrpgsWJsZD3nl5a/3wwl04XW4jL0Xt5eWfucRjr
nMkc+iOJuv0+7ZysOgW0Oc+cU12dYZf5+to2jk599BOGerxc7azHqS4v3LaO
v1rjasrOV1Otu+rnh8j5XnlWm6msYuJZ5KMX0LeotnbORw/W/Dw68L+ltwcA
AKBq1Pf3ym4PUDVl5KN79/ZJdXqVeIAu5nBg7ue0cRrpmnW/j8xjJ+cz/fns
r4Ri88HPqPnlcfEsbe0ZlxqzCdLkTGbdH4k0dXDSLiPvNuedc6ouP3Vs2nG+
Ut27ELFjL+t5LFWa2HPiMwUldpxLvLqq7VKo8e5Ga6PXx4khJz0xJq4c26nq
qhuWUbXzQ6F1XWoiNck1daAOrb9N3PnU2LPbHPPR8+5bVFs756NzTwgAAJAs
mHtAbRcgrKx8dCl2fjIllvWNp4ainzHk1AV9tmuK+I8rr4zExbQ1ODSxMD++
snL7n8TRvl6xfc3i2HWef/cOby7V7TM6Msn3jcQ64mqHZN0fKfenlDo/Mec2
p+o/F7Vx2lBsWlMX2yaep8bvpVWDMbXZNf2caRxd6Qdv+UnjX3O8JX1H96wr
Ni5e1XYljNNGa7qofRA5xhLOI8FnD651/6t+fuiddXbk87HHUIPU/H5vXC1a
68WiZYx6/dVfOP53ft0bw7kh7nmZ7rmJ8TtF/16gMto1Hz04b5a8Nyy7PQAA
AFUVrIUn/1x2e4AqKSsf3ff1tfuisbyRfrGi60T8IDY388iG6D1+knETRfeh
6L2jjEGocQsT7/33rY/GxiEajaMPbF2mX+6CbYX0h41g/NA5nzOnNjv1n8OY
DsbH0r6TEKyREIp9zX5IvPiOPqY3/OJmbe1p43bV2rj31su167nxiZhnWbZj
oHbcPDntXO0xYoq/mr4j+8+4X4/1hs4L9e2++B5tX1W1XRG1812wPpBsX+Z5
vrp65bVjaN6W50JjRh1bMobeSI52Vc8PxnPDVavt9pkDXY2dyPoDz7YOr77a
cG54TD8+asf5/h9P037nvFWa39mc+hbV16756MFan319+0tvDwAAQFXJ+nfM
KQPoFZ2Pro1T1+7LZ61c463/gZunpo95HuvV1i5IG5/06HI3FZf+dIfXJl19
7Hq7XesyHNkgZl70NattuWr2TH0cNMv+SBKIAdrOH5jrPsyi/9JS8pe1704E
j7mnl4prb5otrujUj50gmQ9af2+jtm1JY1MeSzNmXFuPc5niaup3Yt8NidkO
ua6k5XdO+Z64bsXx48H/TlLs7l8mXVP/jtV213Rd9u/e/qxqu+KO+TTjx5U8
X5nGg+wLdTxetmhj4/H8Kp0fZFsmj7dahuyP+fdmU1unTvMcOUg+dzn07uvG
Z16Rc8NFi44/D0qxXeMXbtHWSi/s9wKV0K756Hue2VPfbhlTL7s9AAAAVfXm
W28Vl28LNJlC89E/Oh6vknEoeVwe7HtcrF52WyTu2XH+JeKK2+4Xewfetl/2
6LB4dfc6MXfSl6Pxhq4pXpzednl+vCkYU5PLmLNhWySG8MHhneHc+VrbZY6n
cx+N9ItH19xfzxXz9438O//vfd0ru8XGg2/k3h9J/BojDdeiyKLNWfVfSs8v
6ToxBhLqpcgxI9fttzHYLrWN8v8/8ruxGOyx3si/B7/jfba2PLlsP9/60K6H
I58P8tfv0g/+dvjL8Ptbtw1L9x2PDb+7/0Gx9MH7tJ8P/le6d9fx7ZY1L3Tb
rH5PkttR1XaZ+jFY0yWXXHSFbPcTd80Tky+Mxl5l/Hj5xr2Zxkorc36off8P
a39WHxe6/Rvcj8seetytnk0M+dvSt2ZW+JnFuIlizvre+jlDbmPw/KVrp/9v
cqzIZe5ctzp0LvE/o45duW9z6Vs0lXbNR5e5VNT5BAAAsBOMGZTdFqBKCs1H
L8ro8PF7w9HG7w9t7zErfS+aYX+Yli/vSbPO3cy1zVlTanMsfOnD8tuE6lPm
gVjywvvFrt8/znJeR9ufH5oJfdvy2jUfffuu7fXtfu3NfN77AQAAaBXMzw7o
FZ2PDrSsQH0OWden9Pag2pQ6H6c+eqT8NgFoee2ajy7nFvWvd+U7kWW3BwAA
oMrktaKfc1t2W4Aqacl8dKAk7266rh4Xdak5jvbx2s++c+K5y1Wrs83XBgCD
ds1HD8bR22m7AQAAXATr5JbdFqBKyEcHshWsld5wTWi0psDctEXURAcAH/no
5KMDAAAkIY4O6JGPDmSvd9bZ9TkEuw+1T5wCFgI10TsuvifTOT0BIAn56G2w
3aPD4vUDT4vuGy7ifSc0NTmX9r61C715sM+94POeCZ2d4pvX3ioe+d3R4sc2
xxYQUbnj1NbY8Xzf3OvFmZ+aKnZ9mNN3mhhxdECPfHQgHwfmfq4eS1+6jznN
8JFXQ3/yaeOOx9AXbKvudSWAlkU+eo756CP94qZPnB6KI+T1Z/k8dsL6F+rr
lnOnPrv5Pi+O4b/v5P3WdD3Ibw2az+iw6FszKzSWdc785C1i+3C+beHYAgwq
dJzaeuOvB7XHs4yJm9ro8p1WQRwd0CMfHcjP4dVXi0+fdRb10iHee3pp/brr
xicYCwDKQT56jtt9rLf+rLQIHfccjMxZHfkMsT40G2VMX7Pu994Y/uDwTu85
lTrGT75jbyHt4NgCAqpynNoK1NTUxvp1MXGX77QY4uiAHvnoQL7k9cScztO8
9z/LbgvKs31Gh1cLfdPLI6W3BUD7Ih89v3z00f0/0cfbzr/Ee7/9jgXzPXcu
WSIeuHlqvcZX0Dn//T/ev0vys3NnXysmXzjeHEevrffQroe97Vt/9Rein7n4
HmJ9aCqhedgXbAv/+1BPofFsji1Ar0rHqZXRYfHHHU+KPc/sEVuX/Kc2Jh6p
0eLynRZDHB3QIx8dKAbX2gCAsrVzPrp/vZvbdiu5ax2Tbhd7B97Wf3asBox6
X26an1zWnz20/jZtHL2uds//WOcp1YpdAGkox8XUvuixGozfSeN/9ff828Wx
BZxQ1eM0hfpcZilyy12+0+yIowN65KMDAAC0B/LRc6yPHoijd8zsif/ssd5U
cXTtOtQ4nqYOBbE+NJP3ts23Oh5knnj3yu5M5jCU8b7IMykVxxZQV8ZxmjU1
zm8TE3f5TrOT14p+LL3stgBVQj46AABAe2jnfPTct9uPcY+bKFYNjsZ/NmU+
etCe6R32cXRqT6BZaMavzfHQkLE5DZzi6BxbaEdlHKc5GLz/0tQxcZfvNDvy
0QE98tEBAADaA/no+eejW8XXXPPRPzqRC0g+OlqKZp7evONz9WdS5KMDdko4
TvNAProd4uiAHvnoAAAA7aGd89Hzro/uzzOaGJOTGoij13NoyUdHK9G8o5Fn
fC40TyL56ICdgo/TvBBHt0McHdAjHx0AAKA9kI+eYz76sV4x+5PniyUvvG/1
Wec4+uiweHLauV4NdvLR0TIKzHNV6zuTjw5YIh+dODoA8tEBAADaRDvno1dq
uxuJo5ukyJmVzxIk2RdZxQLlsvzlFtqXte32112JfZvQR0nbkWYbKrHdoyf2
e0P7PjCHrm/hSx9m3t5XNi2IrCfLfPSWOrYMbWh0vGm/PzaO0vZZHn2T5bZW
5vzUZMdp3vuHOLod4uiAHvnoAAAA7YF89Bzz0dNoYJ5Ro4Sc2dGRV8SWO6dH
1ildtmijODqafhueuGuemHzheO0yv3Zjt3jxnYT5Vhvw6u51Yu6kL0djohOm
iTkbtomjfb3igenXi+5DgXFe66N9y+4QN98yT9y5ZEnEdSt6IuvxP3/zD28P
fXbJ4vli3uIViXEU2e/Pbr5P3PjV4/00tW/Y+G/BbbjzqSPa5X1weKf40cxv
R7ZbxnSW7hsqZPy+fuBp8cDNU8WXTo/ud3/fb+jTtz+4HcH9YNqmYJ/fsWC+
mH9vT/qxOrbv+5dP1bbX6+/Aerx2Bfu/zY4tf5sP7XpYe4zVj7P1vfZx77Hl
zek8zZuLuX7cHOsVd00Ob+d5q/YV2zdZb+tHjucnjtPC9g9xdDvE0QE98tEB
AADaQzvno+ddHz2VovPRn7/XGEsJxgQ2/cNuXbqcXpMbnziaad/JmGVwO2UM
RcZs/rjjSfHz2V+J79NaH8m4tTEeo6nVsW/tQnHD939g7L9gXNz3/tBB43r8
9gxsXZa4T06+Y++J5Y70i/VXfyGxv6fsfDW/cTvUczwOGlhf55TveXE29VmA
dNIFi81xJk1eq5VxE63HadDLyztTrSfU921ybPne3f9gqHaHbL//HEmNeXvb
9vKI8Zzkx3LV7+z6sPbvRzYY+06X45xH32S2rVmcnzhOc98/PuLodoijA3rk
owMAALQH8tErko9eVBz9qtXiL1uX2ccOz7k7Mafv8OqrTyx/0u1ePqPsUxk/
kjmDau3cSEyyQXumd5xY/4JtkfbKuItNn7739NJIO2NrXtf6d9dN5yXvs4S4
07wtz0WWc+4Fn4+PJw71hPq14/xLxNf/7VLjOlYNZp+r7M+jG4y97R14O/QZ
mbuqG9emmKaMse55Zo+nb82syPeuWfd70de3v/4Zn0u9FDk+5bIO9j0eGaNn
zn4ssp7QtrXJseUdF0rt+PELt0Tarcaz63HxwGeeX9Jl7Av5+Z1HDmi3x3Rc
5dE3WW1rHuendj1O894/PuLoduS1oh9LL7stQJWQjw4AANAe2jkfvVLbXVAc
XY377Tzy+vHtl+/Jr7/NHLc1rOPdTdeFYkRptk2Xt53akQ2h+JCpbkAwlmTs
01ofPNZ5SriPDDWv6zQxct3yBwcHxWtvDnnzwcbFElf2vnhifTF1R4L7UI3v
7v/xtOjnkup9N9Dvfj8ZazaM9Iu7Ph7d/+N/9ff4dVj2bcNqfRaMdVr1Vzsc
W9JQT+h5jjEmWdvG7TPCfXjqo+H6IAObu8XCFT8R3TdcFDumz1+0SvuZ4Dbl
0jcZbqvuOGn4/NTux2ke+ydAjYnL/Pmk+LvLd5od+eiAHvnoAAAA7YF89Irk
oxdUH91nyjMMxqcSY4qBGM2Zn7xF7P+nOedZzSO0ilFbCNbmkG2Iq7/bO+vs
+D5NqHmtpcR2EveZITddxl21bY/Zh8aa0ZrvxMXwGh2rVjVKlPx5P+YUmydf
YBw9st8biKO3yrGla3Ncvq0aUzS2QX1eVRsH/p8v//WJvhsI5PaH4r859U0e
25rp+SmtFjtOcxmLAYP3X2q9/Ea+0+yIowN65KMn898XkzUOY+c9ceTV/bpw
vPj8v57rNhcNWtdYXcH75l5v/Z5a2d7460Gxfeuj4tE199fPKzJHJ4vr+yLI
mqZ/2rzJa3/3ym5vG2T8RX0nEgCaUTvno7djfXQpdu5JTTs6Zkbn2pSCObyJ
+X665wRJ8RmL7QvG45JixX7OZ6o4elL8RbNdsftM83ldrYcgbSzQlINr+E6W
8R21rnhSW3zaOLJhbHmaMI7eMsfWmFRxQmV/xT2DUpcbN47U83NefZP5tmZ9
fkqp1Y7TvMaij7oudoijA3rko+uZ5gfK/D3JoZ7U18pobTIOrRt7mf9Wj9X5
lDU2ZV3OCZ2dHv/P8r9+vc7E50e1ZckakXF1DuV1bNq51AtVu99Jmr9LzhW0
8eAbicuSNVdlv/l9GOzP4J9lrkozPBsB0DrIR69IPnpR9dEt4glW31HysBNj
doa44zeeiok7WmxfpA5L3HX5SL93XWKs6+DSXxnE0eNqe3hc4lTqdzKKq6be
3oTvxraryeLoLXVsjVFra8fm8Cj7Ky7/WlcPw2oOyhz7JvNtzfr8lEYLHqd5
jUXTmLTJV3P5TrMjjg7okY+uMLxna32dlbb/dTknFtdlaEEJ81JlHkev3cNr
4961a6f/uPJKccklF3tk3HfKzlfNy6kdM6vOOTW0DPlehczfls8EnrhrXujf
YueEL8lAinmipKTnCjK3Qz6f8PtQ9qdu/rB2yGMAUC3tnI9eqe0uqK5L4jWl
5XciOYu1a4UpXV313znVFZ36a+lGr6PVnEtJzj334jv6mM/Rvl7jvznlo2ue
f8Tus7SflzS1FlLH0TOKbTWa535g7uci7TLmFLdaHL3Jji2/zbK2u1zPF6+8
RXQfijlXqrHLFHU3bMdRrn2Tw7Zmen7iOM1lLDYyJslHL789QFWQjx4ma7j8
cceTXl2KOZ2n5XONElyf8qzV6hoeral2vSDHnpzffOuS/9TGXDN95q25h5+w
/oVUy5DHixpD177jemRD6J6wStcdkRwZ2Q9jufm6a3Ff6vyR2v71ayFWsR8A
tAfy0clHT/2dhDkW0zj5nLsbusbV5Z/48bV5W57Lv7+KiKO75JbmFNtqtB6w
Nl9oZo++j9sxjl6hY8uWfGdb5sio+SGZx9Er0DdptzXT81O7H6c5jcVG+oz6
6OW3B6gK8tFjaPJ1M6/rorm+ThvLRGvKPeaqGXtLXni/oTbGzfGuXqNV4b2L
4HMs2b8rt/8p1Cb5nGDf2oXaa+KkuY5MfV7V5wkA2kM756O3Y310p1ifms+h
fEb++6F3XxeDg4Me+VxC/ve1N4c8/p/9fw/+XaPPMOTvslo7IdR2y/pr1ttu
sd9aNo6u6Z/UOR26eynTmGyHOHqFj62k7ZdzhelyzGyuaZ3qYZTVNw1sa6bn
p3Y/TnMai3Fjknz0KOLogB756Ga638LM4+hj69m5brW3D+R8jGVvd5D8vchj
m2HX90XG0dMuP1K3LimurKkbmDhfUI7kcXfXx49vf8dVq+Pr6Onmsz/DosZp
xn0OAI0iH5189NTfGemv/146xWgK6rvQNcnsh5LrJZRUHz1xH7vE3nOKbeni
c6muW3RzbZYdn6tSPnrVji3NNqjzH/m1G3W1NExtd7qnKbpvMtrWzM5PKbTk
cZrX/mlgTLZrHN2PpZfdFqBKyEeP4XKd1UrGnk231TZXSO7vjmliurbXp7pn
THG56PXvaeaMKev6w8+Pt82L181nn/q6UbmfbofrLwDV0s756JXa7qLi6En5
1TbfUXMVbecIzFPt93RFlznv03fjE0ez7S/y0VPH5yJ5rqY+brY4eqseW2MG
NDHLUOw37/roBfZNltvqyeL81MB4bonjNM/9oxmTcnzl8Z1mRz46oEc+eow2
j6Pvmd7RdttcJbk/824kpqteQ9le22ruJ23i75kbO7ZTbXOtv1LP+5Ww/cTR
ARSNfPSK5KM30zyjmhhL6jlC8lBr+yubFiTGqi7/tSFWRT566vGUermauehL
j89VKR+9iseWGgOuXeNr6z6miF065QYV0Tc5bGtw/zd0fmpgPLfEcZrz/qE+
uh3i6IAe+egx2jiOHozhtss2V00ZdV1s89HVed1PumBxfF0Un+aYKmpepJCx
+9pvPKWZEzXmO8H3S4mjA2hG7ZyP3pb10TPImQ3WQav/dt+xt/w+HCPnmts2
/7LYWJW2X8lHTz2eUscyNTkIpdeLqFA+euWOLc14vX6v4Vo553z03Psmp21V
OZ+fGhjPLXGc5rx/qOtihzg6oEc+eow2jaNH5oNsg22uosrmo2vu7+Sc7rbr
HVjWFb7+GjdRrBrMrkZgbtTtdnm/lDg6gJKRj16RfPRmqo+exTx2Y8t5ctq5
DeVfvvHXg8a6wh8c3mmspaDtB5f+KiKOXpV89I80dQxSXvNp6y6b7iuaLY7e
YseW5L+LbLWv867rknPf5LGtmZ6fUmjF4zSvsdjImCSOXn57gKqoRD567fdN
tkPe11Tqni7FdVaW7U+7DOPnA/1q+9use/8sizi6345G71212zqabhuLENxe
1zFR2Xx0zfVTmjGiPqeRSqntktaRDeFtXrAtkz5v9esvANXSzvnoldruouq6
ZFHD2ZDvmHaucH+eEeff/Fo7Nnecmhgf0l3LyrnQI+/NOeajp6rx1sx1XQzL
lX1pHcvU9JdxjvZmi6O30rElKde5if1fQhw9s77JY1uzPj+l0WrHaY5jsZEx
SRy9/PYAVVFmPvqru9eJuZO+HI3JTZgm5mzYJo729YoHpl8vug8F7ndqv1H7
lt0hbr5lnrhzyZKI61ZEf7v8z9/8w9tDn12yeL6Yt3iF+fyXcJ0V1/55W55L
1Rfyna99axd6v2E2dS7k8+7Hls87/punzHEh23XjV8dH2nXpT3eYl1vb1v7l
UyPf8bcn2G9e3z+VcA1Tu2944q5a+y6MtkP62o3d9vOU19p2aNfDYk7naeFt
rf3m3zU5vPzzVu0THw31iBu+/wPt+Ahuw6aXR7Tr88aLw1iRbdSNh/qYXt+b
KtZf1Ti6Luch1fVTbf986XSlf9LkTJQkWMvGeV8QRwdQMvLRyUd3+Y7ut1/+
htm+l+XPM54qtmNoq80yIs/sdfPBufRX2hhSk+ejy9oaat1kybZmhLofYu9x
mi2O3krHlkP/++u1uaZ1rSudW9/ksa1Zn59SaLnjNMex2MiYpD56+e0BqqKM
fHR5rg9eV8gY4/x7e8Qfdzwpfj77K/Hnzdpv1LOb7zPHKzXXJzI+LeOqauwu
8TfGdJ2lmYtD25aL7xH7/2mOFct+kNvixYctrsteP/D0idi5cg6Xv9dyeeuv
/oJTm15e3pm4PaHf15j6dDZzqviM85TX+l5u7wM3T9Vuq3xObdqfS57ZYRwf
vs92TdGvu7bevjWztMs+81tztbH3d/c/GNonso1+HF6N83vXfob4vaqqdV16
Z53d2PWTri5Mg+8z5n7OClyfpdmHEcTRAZSsnfPRm6E++pSdr7ovM6+c2bH2
qtefkpwfJel37L2nl9Y/31C+bKCtaWuMy7hQ5PpXVzfik7fEXrvrck5atj66
v/807xEmjqsxam2G2PFdZhzdJSbeSsfWRyfytoPicr/Ve8c0+ejWceOc+iaX
bc36/JRSKx2neY5F05gkH12PODqgV0Y+evBcLWsjqOd3GZe0OTcHfx+troNq
v2+7bjrP/tyvuf65bNFGY20zHXk9Hjm/1q4J4pah24a//fAzset4/NlntPdj
2uVr6lHIGHxf335xsO/xaJx+9mPev+15Zk/d3oG3tX12ePXVJ9Yz6Xaxoe+I
l/clly/ztXXXQmpM/vklXeZtrf1e7TxyQLscdX+qz6ZN69NR57Yx1RtUr1nG
L9wS2XfqcwXXvO8i8tFt3rF8rPOUSLtS1QnX3FNW+jrkyIb6eEu6v07kWpMe
ADJCPnq189EbqqWXY86spM4xHnTNut9H6hLIdy2D+TEyVtRQ7YJAWxPfY1O2
y7RNkTlbTNeJteUFr3Gt95kmJp6YI6p5b6/MOLop1zXxmY9aDy9pnxUVR6+x
eX5yaP1tJ96/bfVj6yP9fZPpOlVbmyTm/qaRe5o8+iaXbc3h/NSux2meY9FH
Prodea3ox9LLbgtQJYXnowfO1fJZsuk3P3j+jItzqzG9xOeuac79hrpsvnP+
+3+8fntg6y+8Giamz0V+v2t98M1rbxXdK7sj+cqm31J5TXB04H+9HO1g/vqn
zzor/N0J08Qjvzvqfd+Lja+ZFW1T3PyItW2OzOtheU8XfHZsrB1tuG8M3lMM
bO4WC1f8RHTfcJGxT6XzF63Sfia4LF1M3mp7AmPLeG2q3OcYf7Nry9o+I9yn
NrX9dLkbDb2vmbAvrOL7mryQ1HP+aO4pK3kdMvZugjp+ZO0o53sV8tEBlKyd
89GrtN2mZ/0NxVMMz7rjfqN1sRfjdwy5oUHyfb//uPLK6Ht9LnNza7YveF0e
O6eico32jaeG0u2HsVwQWWNy+5rF9e2W19m6dxYnL3vSyzmJ1CystSP1dajD
PDS67bCt6WClth2RfR+3T9XrHYs8BF0ND9N+a5R6r+P18aK13vWdvOfy3++t
38+0+rFlGHd+m1du/1PkWNDem929w6s9Ku97gmM28i5rrc2rBi3zUvLomzy2
NYfzU9sepzmORV/k+YzFceTynWZHPjqgV3Q+evC9m6Q5Nfzf3DRx7sT7jzQ5
HoY4ujyHbzz4RvTzsl73x/U54cZ37XTPAhK2QX0W6vv62n3az+t+74xxXJea
gVLg+UjSb7D1e2dq39R+q3TXJgNbl4WWExpTurivTU5x4Humfae+c5bmfUab
9+xyf+btEtPNIgZe9Xz02riTcwzEXZtp3zPJq88BIEPko5ebj+7Ph2OqTedd
dyzcYj+HTIApX1q+V6i93q793u3/8TTtd+R8M9rrlJi6eka167fQXEeuNNeo
8to30s7atUrwvU+ZXxn3rqp6HR4UzFeR+T+H3n09khthuqeQcdQnp50b+Yxc
juk61PQdeb1g7EPDe67yWtNlHBnpcmFq+1bOCRXs3+EXN0dic4nXOrX7M12e
TUO19GLo7kUi/Re4H2v5Y2ts7MUdC+oY3r710dhrZf/+MXifFvr3q1bbj8+M
+yaXbc3j/NSmx2leY9FnHJOaOgmNfKcVEEcH9ArNR1euVePy0SU/tyJVHD0p
Ppmm5qCubmJSDQtDvrVxWx2eBeiu/WKfeWtiycbYuGMcPZjXkZhrrdkHprwE
3TMDU667KR6gex8w6f0zv4/jck1SxbmV5+o2+WaVnGc0ixh4bf/rctqr8Dzf
NNeujlObHed2BYCstHM+epn10XU5DYlq10aJvxO167a9t15utbzPXrToePy2
9jusex9SR1evTv6W2cwT5P3OzX4ou1iuKeZd66dZK9d4Y1udV8cqxmGxPTLm
513Ha66Tr7jtfi933V+PrDs5Y8a1iX3TOeV73jtu/wh8JylW+C+Trql/J1h3
Lk7XZf9uno8oJRnfMsWH5fZc0Rm+RpT1MI33ekM93vxVN37VYizW9vH07/6X
l/efScwq4Z1jeT8pn5m0zbEV2CdJdUIv/emO+nvPpvwxebzY9oMcN3KetCyO
01R9k9W2+nHwvM5P7XqcZr1/aufLmRd9zWr8XDV75vFzpst3ctifZSKODugV
mo+uy71OqCkorw9TzQOaFJ9sMI6eWDPsI/M7oqb1qPHYxG1QYrI291jW/e4S
R1dy/BPf0zNcu+reCdPVNkkdu9S8g2Cbm2SsT6PZz7H7Qd1nCe9i6LY985ir
S63uLOLohv2fVw3MNPYtu8OrKbRk8Xxx63e/nXg/m/r9e02fE0cHUCTy0cvJ
R5e5f36/++0wUT+TdL0g36EKfv7RNfdH/usvUy5Lxhx2rlvt/Z36meD/l5Zv
NMwpM/bulm5ed1ljQcaNTHPpNELGm2UcWe5DOafP6mW3ReIcHedf4sW2U62/
tj3yPYFQXLp2zSnrMMoYefBz8hpG1nYMxs6DPji806vd6Pen3/d+3wb309J9
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
HO/1i554zPfappXLnCUr1ylpw3SO1xt7nnEe/O5YN74Znf3Sv7FlWPVKj7Ts
P593R6DcpFUL89YslDuVjp62P9be78vn4+uVKY9bJ5J6dhnodg48tcSZ9u2x
wut978Hm2H3X49zJV4Xt2HDjxHr5PF/3LHT01OM0Ih+d+vq+VXOE9Tjl0V3O
mcGYMWuet86/1+W8vHaJex4t5YCy/fXD114KjFFi8i8PJ5oXqe2fXTRDWNf/
PPthZ0Pb75PrZgb6LJVfVM9uHe885JzpbHeenXO/03xar/bxeV+Xc2LbCrdN
LrluvVKdZNmO1upPdxsbvgcwTel19Hmtua17kB1l9UcnaOyyff4Pp05ajwkA
AAAAAOQfG/7on3Y8P6Q3MHqnp50+Nc2/Rqe/tbw/oH79C+3Ouklf813jH6b+
xJlz9498n+lx67YTZq852O9q1lKtQJDzRRoO5cmI9C5eE2ch/Uf2Wfe9ecF9
zdn9a6TX9bjk8eMj1x3odnbc863Q1xPTj3zojyfDcnsk1dF19Mf31zZG1pG0
jhlE+ewyHjxwJtW4aJz+Y2fxgtnO7Y1XjLTLjVcEPseIjq5rnIblo5/aFNnX
3fb8S7bzFunZdc2Ve8/RL4e0/6gxR2VUPTtQdD3SzWVjk/62+qln674V27du
dtbuEvdXE32W4mXb1NtP+d3hg86vF3xHOrelwdtbXNh4eeQ8Zasd45RFd/3p
bmOj9wAZUXYd/QevwNcFlDsfve1om6/Pt+xusR4TAAAAAADIP1nno/Pe0WNX
7AvoFPya3dMlIq/fs9OnmzXM2uLXKAb7nVNNk+LphBqv+dmrq4OvC3t2unbt
ow9dr6Z7CNbBLEv2vRm4FvlBynTGFe9+6Vzsa/VpHZSzzPpJ8mzsFetBRsvN
kERH19UfSbvq7Oxwujr3BnW1BS+7fzv2+rE6x89+EojlnS33jNTP1MecnZ09
7pika1PepkhflunxPrh2FOlSpGs99NWghh45PpKgc5yKdPTa9f64f42y7qeS
c6yrn/zpia9L47jy0qXO3jdel7ZDoD6WH4qu64FuZ+N1l428Z/xM35jof3tP
5F5DWB2Z6LPs8xBURv5zqa/GmRdCEeznqMxTmbdjDHTXn+42NnoPkCGl0tFr
3xHa5/za3POLKT9V3qcE+aTMOnpvb6+v39M+nu2YAAAAAABA/snUH722VmM1
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
PVTL4XwIonKWZdqiVNMVeJJQvmjY9T2tRqpvmY45bh1mAO8Zr6Iz8r46qvsp
UbnfsfXOiwJfiojnAXg9UvoZ3LqZ+lakPlF7D1uXVC/CfN2MyqqEiT4vygEP
02dr9UbPiUj3wdLo6HHaXNL2SpqSIC809ntC9uD4/a7QMcddV5rfHbdeTc2P
uvsLACGUVUdXPjM7ito4p+thfI0g2iOXYfIc8DhUPR+dYPcSyAvBdjx5gve9
8VDR0T2tztPSZbmvHvCmB0APNJfz40uko4d5u5w5+2fr5QAAAJvk3R89sO4Y
NcGZPmmSuxcq4vZGca5PmJ4i8iSRajvDa0NC5iudRcx509FFMUVpZKLXS/cO
VLx0iCTacoL3BDwvJK/ndcvpRz5Uq89aTGc62901itY9g4TaexSm+vz7axsD
rxm7Yp/z9l/F/ercyVelf0uro6u2OdtnY+vonI++0nviaO+1OujcOt9tg3+8
c6nTfDpE4+J1dNkcE7NeTc6PWvsLACGQju5p6bZjSQ2ro+vy+Rrodp6dc3/0
+eEVQcmXLodAR7/oPL7c/8xXVmulIkDzn+j7+fj/alTOR/cgzS5KS6czy22X
GYCiIxq3vD+6Ny5lYxJ+SwCAqpNrf/SIcxTjQOeByjQvkSeJbC3p+e9Kr5dR
zHnU0UW5/dL1IpdzHaVNetpbpH+NSNOLyrdO8B5V72h+j0brM+4ZlTVJHLr6
vMjnxGXUBGfJvjfT11caHT2q3pLko2eVwx7C531dzr5VcwJjWYuObnh+1Npf
AAihVPnozLyjTUcHPur3mQrebnkCOvrQWGe/T6DljjDn7h8Jv3M/nDArto7u
aekinxgP+ltnZ4f1cgNQZMjfnB9bonx0YvZDC4RjEd4uAICqkxd/dBV9hnSr
05+ec+Ps7e2t//zo4z4f3u/op0dY2USeJMKz75i15tj/+B/x9TKKOZbPcYbw
urFM9w7Tu/g1Zqw8rjzlowuuK3uGIRF5yUc32Oep7XmvDl/s42c6u7rOJ6+v
vOWj29LRa3Xz4WsvOQsbL5fWtXQPK4WOrnt+1NpfAAihVDo6My7D9u/jQGNx
3+r1ubgvsQ07LxUpF52AP/pFVzdnv0do7NuOKS+Qz41OHZ0g/5YwLZ0+k3Q+
22UHoKjMnTtbWUcnnUg2Fule3HZZAADAFnnwRyftVLjWEvhEm1qTqZzt6OUT
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
9Hadfead28328duWSxUfL3HlP744Xv/UZp/gc961jjn6ZLHwz//SqF1mz7/O
Xzc8Pa7NvbB8ptE1lddL3X8D1jmttVSdi7SwBQvmTehhnO4vf6YjltninnVo
tc9M45q083m3LeoYd8o+0H/NeN2M9fVkdW8xLyl16rFz3nj/5pYn7KOLZ6vH
ro6Q7RJ6zrElxByVup8K9WCaXzRaO2aY431pgo4+sb5Onlmm3vcpKH3lQu/7
AcGBju5eX6R95i6PTXlFSF/30Yx1OrpJvLardmfinZ4qNt3WB+PRXTu0332U
I7IpuWtBXricB9TH2LFT4etiwi/+47DxsZy3C809uesPAABMSOqPfgbSKF97
7I52fWnsferWJ/a3aRi0J7ksG7Ft8yNt/yfKXF/0bk7n3fP4ponj6Kf4b/F3
67bzHhx03SVXf0mpdZFuRB7ZuetGB3mtPLd+aTHrzzr1yenX/H3r3m01GOty
jRwpnr1rflusItXf8o07O699Ymebx3jf5y9vxdG3nWvthlY7q9pU7AfkR7n9
8C+CtQfFBZNGKMdcUhnnr3xY64eTuv/S53et+Tv/Oh97Dymvw9V3SXneN1/6
p46/iZ8p207ZNmPXE8trojurNN2Bd0b4tswwrqnvUH9UtaGqTbf+8Firryet
e0NoTeD6+3a21loPDz5TbLrn9g7dk/rQV29/xK4eA7ZLsP7vQqg5KnE/Lb2D
vOOVfcudcY53pRE6+mlhL0xdtHRhD0NlHheQHejodsh+BUnikzzgnqno3dBU
D1Pp4qH90X30aZ/7qLpO6FjdKi2d8pJ+8KHCLw8AAW5vgyrnwYSObpln1Lfv
L757pbKMpK/nrj8AADAheTy6glT6vWvZWuUbzVPGEHUTo35tzml8bKY6tr2P
OvfXxtW5EEcsxsRS+Wk+ovcFir8hKP8oPbdRvMOPXny+eGrd0jbN3UYLzD2u
Qdx2aUz/T1QfuvuncdW4cteApujohOiflTOW/zcHzuY+Y/OJgFoBf3Q7aF4Q
NaE654gcHDyg1LFIg3PRs2109Bg6eOpzx2Ltloe1WjrpjE14DwF50OUO1o0H
Wx3dF523CzyMAABNILU/OgAAtBDiEsm32shjSGZ0eCInYYj8kAAAYEKTdHTZ
m438dXR7qUIj+6RpcyeAWoF4dDtkbbrO8wPt7VFpWOQD6atNizr6e8/sqo0e
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
R0c8evMQdMuu0mNDoYrxXbjT+PNDj1zpFsteQUce025oN/RFP0LFoyvWf2z7
PQBNpfY6+hh75/ex76DQ0YEJiEf356ovn32+m3LptKTXfuMQr0PZ6lqcRqb6
vY2OXpfYcFU5dHXgUm5Tfdy07lWIOjrn6UNrKylzooG40F4wVTtTPLdpX9PF
o4eKT3fh8ssvU97b6hXp9/YAAIBIlnh02f9ijDt+9genc6meA+h3dC+2Mar0
ufKzoepC+5wyOn4t42eZ0eG2MibrJyNHOny/8W4soejTNtqkrHcTvt4u7w6s
8CqTspwRxogV6Iv+BIpH/83A9Z3PtpNmFAO/rME9AhCZJujoqu8V6OjABujo
/sgaV0r9Us5zWkLaVCgtTKUNm+joqs+ZlCFHrKzPdWzWH0Lch6iHUjwvvF26
H3GtTmTDjq3G/SqFP7rLeblY+89N/Uz2egcA2EP6Ee0noXzBBM0LucvkShJ/
9BM7W+uGNBcS/7Dwax3zIfnpln8n6PjlG3eqfTFGh4s3X/qn4tbp57d0mwkf
3lP7i/Wzprad908efE1btpMHXy4eXTy7zc9T5K/nfbvYfvgXVvdLvs2vP/1w
8a2/GC/L7MFh9m8TOtYX5hRrnj6oPN/v397D1tna1+L6J/zmwJaOvQMXfWpZ
ceB38KMWUeVZtNIPjj7Z0Qed43rHxseRdbOV/Zn6mTjOFi9bWtz1g6Pa88UY
I+iLGQkQj07z2PpPdHpGnLN6X/77AyABTdDRO3yXxp6XSBeld+4YP4lZfzbV
/XsQ1A7o6P7IMcEp3xnnX/t15XMbPfvF1MM4Hd3HrySWThfzPCmZiCuW9FDO
H5/6Ru6xAcJAmrKqjZ95/VXj/mOjo6fS2Wm+oHvg1ulpv03uugcAmEHPQpT7
WDWWyf+OnkuGhoayl9OGJPHoilhdI8TYxtHhCT1P1pJf+sNppQ5Zoox1Hzu+
pcMLx02/5u+LxXev7NC4CfK6HnhnhL1HyiVE+ris44vvkcd33cOWUalDjRwp
nrjuTyvr6Zo97wdvM9Lu7+s/l73mjfdvbo2Htesf9c8neKZ/TLt4SqvNo3Nh
9fqKLbI3urV+oNI2+7c4+X6/s049Rxn1uYhjpBF9sUv6o5YA8eiq3KLiXEs6
+4+fHii2bX6k1Ta0ZnPP954p9hw9me4+AYhII3T0seemcv9O6jmmnLOhozcb
+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
WwHQ66j2zsg6Oo3jaRdPadw4Rjw6AAAAAIA5Zf7wrtDRR460PNFv+Mmp/GXp
EX77wvLW+8FFn55dvPSH08Xe+X1ndfTLHoCO3sXI8ZPkq+FzPsq54xqbynmD
uGpj5flC5hkNqbmHPJdK/87th+Gqh67auI7VZXOPF9AJrWOr2utzUz/j3HdS
+LqcPrXfe6yoPkee8Oi/ANQPitFWjU2Vjr747pXss0xdNWr4owMAAAAAmNNV
8ehndPS+uZuKY6M1KE+3c2r/RC7Xa/a83/rdc185B/HoPQTpO6FirWguUr13
UgxYLI25KmdnlY6u0u9dr+9DSJ+VkNj62ohweUZ1n9d5u8Abo36QdqNqq/6Z
VxitjVX1m1BjUdTNY45FeLsAUE/oubFKRz958OXK7yHyw8t9LyoQjw4AAAAA
YE5X6ehj77qlTzfFR9+/+8e10XG7DfLHeWr6uIdL34oXxn8/Otyuo9coHh3+
6HEQ9zn75tEiHV713rlk0Tw3Pc1C++IIGY+eglg+8bHOp20/Rz30qi9f2bg9
9b2KnGNBbCvX/sfFo+fYY+FyTc7bBd5EAOSDm6vE76kyHp3gnmdor03ue1EB
f3QAAAAAAHO6VUcXmXnn9mLP0ZP5y9dFfPDdb4yvV3xqWcvPpfV7WUdHPHrX
M//ar7e/U3qci/MU3bBjazZd10ZH15XFNEaV0/1iecKk1tltrueqo+u8MaAP
1AtV3j6CfBFc+6CNr4vu7yHHhhxbrzs3vIkAqB/ys06Vjs7ttanr3hLEowMA
AAAAmNNVOvrIEaWOPqHrfmFOK0Ydni+eHH1yok7X/PTjs7+vcTw6dPQ4kCe6
OMZc8/XS57hxK3ujp8wdGDoe3Vebi7Vu4HLekPei8vDgfF2465a/p/4i+g3V
Xb/oZbjYa1oLce2HrusvOcefiM4TAt9dAOSB4shtdHRClZeUoHkv9/3IwB8d
AAAAAMCcrtLRz8SjUxw0aeUfnzhc7N68qrh1+vkdz7Ffvf2RYt/xX+Uvc9MY
OVKs/8T4WkXfA4fb/4Z49J5Djrly1SkHdgwo3zdjeqObfN5ER6+jNi7Hv4fQ
yVN4sIvX9NFDOX2WYgpzjxlwFk5nonlF1xe1XuYJ8ozajmXbuHfyh1fG6S9b
mr3NAOg1PvjwBLu2dfq/zWZ1dG5viU/MQSwQjw4AAAAAYE636ehfvODC4tJX
P+z4G2nqz941HzHqnhxa09+qt3Mu2dBZZ5F0dNIZSD9YvWJ566ftv+mnGEtE
WprLecp/Uwx27naoC28cao+ddM2hRXWretfkfJJLXHMRtvQ2A/90l3j0VNpd
Dr9nE0w1/Kq289FD4e3SDLh9A/IeFJsxoeo3sfZbxBqDnP42efLk7G0GQK9B
8QGq8djyOtfo6DQ/cHMcPUvmvi8R+KMDAAAAAJjTVTr66XF/CK12OzpcvP/K
48W3/mKqMkYdPuo8owfuHa+rSTOKB4dGlXUbQ0fn3mFyQTGUuduiToh145oL
j4tLNfF3MI31rIOvi0+ZY2h2PjHnsXOacr4uJnWp0y9o70PuMQNOt2IeuTnW
pz/Zrr/E7scuY1Ln7TI4eCB72wHQS8j+dSWUv17W0eX5Y+6iheyaWJ30anrO
Rjw6AAAAAIAZ9MxUaum5y5Ka0vdl1vmTOmLU123fVxtPklpwav9EPU39/s/V
x0BH70nE/KBXfflK68/r9LRnXn81q6blq6On8EIx1f5y64Oq+tD6c3j6XHPe
Li3towbjpteR97KUUIynqj3L/QtVfSGGP7rteUyP1x13+eWXKesH3i4ApIX7
Lrnjvnu18egEPcNwzzd1WtMVdfS6ec4AAAAAANSN8rmJtPTcZcnJ79/e06Gn
E4hRP93Sx3cv6BvXxudu4rXxSDo6PdOX/ZR8Q+jnts2PWP1OjHcmHUI8ljsH
9/s6vfvUAdIly7qlGGDbz+v2TIfWpmw1MRsd3Uezc9HbQ9WHTdlSavGm8egc
G3ZsZfULxNvlR86tUELe4K79mPN1iUHsfMdcDCytW+ZuOwB6CW5vE81hVTo6
QfEFqs/TWlnueyuhvEHls+6x4+9lLw8AAAAAQF2hPYU9rw2ODhdvvvRPxfpZ
nT4vbTHqOv24y/nNwPWtOrjo07OL3cP6ukSe0d6DfD59NEr58yXkY59Cr1Xp
WmXsayxfl9T3E0oDFIkda6+LKzYtP6d/9Pq6cR2gNUpV21TlRKjqByb+6Kn2
ifigi2OlWP7c7QdAL0CaMjcOW/ONgY6uW9Oty1imcpTvg3UpEwAAAABAHRHj
fCkmNHd5UkKeLs+tX9rKS6rTzyc04RUvZC9zFk7snKijG35yqvJ4WUfPXv4z
QEePB2mS4ljZ++peq89z/gWUa89HT7PRWzmqdHROj1P9PoQPc6z42lAe0a56
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
FAAAAAAAaHDW14V0vtFffcgeN7P/fuP34fU/PDrv2MNbV5yJSX/4kP79gWCg
o/vDxXdRbKL0eK/pydnfF0xCt4pJI5WvS2o9LnT/0hj90Od4F007lz9HCk8a
G9yaeXretJ/5UMgH3XRPNG/g0wZd5zpsabj4o0v3Kyk9kyTyF4tNV6P5Vu32
B8DFl13q1Af1nwvfOVC2v2nEo5e8l0fMGsE+5LunXdcAAAAAAECQg9t733nn
P3OEP2b6cHX7JxbN925Zs9t8/FltHjr6fChm/2c//Um1Y+eOns8H8eKR99Tz
ZQI6elyZzVnLf+9d4mM4ij/3jSGL3ceSaNNQu+6P3mVC49Fz6pUhPv3rR8ze
LqRFaz/zoXC+76nXlbS1G+348bb+xWXeoJmG1j1xcyXUV2u3PzDc0D7N3DwP
zQH59t9e/U3LPqN1vV7ar8nWv8R+H9nWTmFfBAAAAACAAeKsjr72l6fZYyYf
M+ybaNtL9KwHzMKLHoRHep/Tr1cP3HAJ+41NnvRbfn5cP5814I/uD63rMNWv
zRs9xtulfo0Vq77inHZKj3STjt4fF7toXhJ5cfm/7bq+vuwh5WTDtUzm+Vxb
9NDQ+N8S9nGj54frO+la2s+9L+SXy8YqC5afaxypKR5dW08vGdey4TyTaX2F
dhsEw83el/Ya2ybFqEs8F7b3T5uObqKUubG269f3f69DHjradQ4AAAAAAIRo
09GZvUX/5SM/Z9OcmX67em7pedXCu1/Tv78C+ODlLaxmMi/Gv6AYfsSj+/HG
Qcs6/ggtxkbd7+KGf32JqmbUJ0U8uvaYOUW+Usxl+MSjS5dp6jrivF3Ih1r7
2feFysp0LxSjrtHuQuLRm7qW7885206OtmtKo7lmqA69L7TbIRheOP9+0ntT
P5sl+6PHwpUr8e7JsmJlAAAAAABAIGd19L/6e/P3nWlv0Qs/uaHa//sZPk34
uszywQtz94L8t7f8bc/X+on7vmn0yumt+bb41OcEOrofzzz5mLE+aW2/6xjM
NzabfNfb9Hrpa7ZR19FPvPK09/k+a7Jz+3S75DmlJti6z2dif46U6xja0r/l
9hHj89VF71kuFtSnr+jVt8O+rk7pOPij50TauyW0n+DS9PGJ5uJTuzj/AwYH
zoPuzm/fH/VsOPU3Dv7oWvt7xF6XPHG4dYld3s8DAAAAAADUOPLsGW38Uyvm
+bQcu2+58VvwSy+esKbZ94HhtPmh4ex8Qq98R75bvfm7xtzDzFQ18eTX5sek
Lx8rwg8HOrofdR+cOus23CEy9jON71aOrJlzLZuvqcQ402WMycWjh/iMaJBr
n0XXv/togG06uu8+cRJ++lJlyGnPRNe8Xbg5N+pDuLLyaQe+urHL/Iv086o9
B2abg2ibn/ApC/JCH5T5HzA4hHjQhT5P844N8HVxoZS9yFevNu/nQeuNtOsd
AAAAAAAIcNbLvPedt3hZ9Y1nX+jtg8l5edPeojaNd9bDxOafPiS8tfVMHFpb
XP6737lpbhlf+XB1dEY///BH94PbN5D2nko1ziPfAFrfQP82NXQXj/BQbBqY
r6+LLT8xOq3v/1OMyXOnz/m65NJGfdL01fSJQYnt5db+036q0vXhUj+D6I/u
q9On8miyebt0bf4HDAa2PUZT9TMu/ugp1ju19QMp5vNszzzNU2jXPwAAAAAA
EOCst0sbVj+X6cPVfx/5N3OOLUELVuOj8iDflgUrn2iPLa/FrffnIPZO6d8D
4tHdOXrsHfa5iYkR76KWlcIfvWRKqiMJX5fQtQgxWr3zvo0b7jA+Y5d+5mL1
PsAH8iA23cfm7VtV2mdJvi4xcfg58+XDoMz/gMFgx84d7BqJtnYv0T903R/d
pQy4Z56+q7XrHwAAAAAAyND08Z6noX9qxTxtl/YT/Ycf7Ki+teYLRs39pT/o
35caB7cbvXKM1NcEfMTHL9tcxBwEdHR3xsfHjc9Nm9+xz5g0t74Ver0YHd31
mlpx1DZNL0bvc/F6dtJDHfYZ1dZJY+piUPZtpH6hbe2KdNu1neuro9vaa6o+
LVW7zbHfLjf/Q+1Auy2C4ePuTebvffKJy/E8ufq6tM2ppVhzItUf0DpBrEMB
AAAAABh8Pjx+aL6fy+Jl1Ve/bfZy+X/v/T+t2vuKiSn1e+oE04erBz52bs9R
+KN3D84P0+TTIKnbxMSKhZ7bdlzKePTUPim58poqv1w8emllE5MnLs6PfKi1
+wFXOA8omidIXYauvi7SdZyiPYamH3t93/Ph7QJK4tqrrxFZDxP6HKX2dZEm
1F+O86CneQztNgAAAAAAAISZmao+mJpy03LPHkv/p3/r/1e/j67Q8HVZ+8vT
+nn6I/zRfbj4skuN4yWKScoxLtUcMzZp09FdfRtC8xHriy5dDzl9KVzi0UPb
QMx9SMYBcvs2dmUPN3o3cppqmwdUqv5BY5/R3Olr5Lv+tz+75LPGOt/20Db1
NgmGC67/6c/jpV7vlWqf0Zx9jsu5FEdhKmfS1zFGAgAAAAAAIJyDo8tnv68X
3v2aen76IB7dDdueXT7e6DQuM+29GBNzHrsO2lcrInL6o0uN913KpaRYeC6/
Ev7oMXlI4aXbxBbbOzGxX70/aIPbS4HmAaTbluu5pe4zGupvpFGGbcDbBZQA
+V9x2m6K59XY3yTwR7d968SuvQvZE5uwvavIo167LQAAAAAAANBF6r701z71
8yL8XPpAR3fDZ88uE6FjNAmNJ4VWNuj7jEpqcrafQ67jqqPn0Lt9qT8Hbfnh
/MVJq9TuD9qgvpTTU3O1yebxOedfSmpzEl4zrv3393/0PKup0VysdrsEw8FT
Y2PGNkheL7mebVdflxL6iLb8tOWR89DB/BkAAAAAAACezExVE09+bW58ylvT
+vmqAR3dDS7OkDzTXcZbpY0VXbDFb0vo6KGx3zn2DMxxbug1OF+Xku8jJP11
997VWW+XZ558zJh36m9Tlzm35qXNH931mZPwVPKFiztN1U+QD1tbWlz68HYB
2ty29lZjGzTt5cK155DnmfN1CY1HT9FH+qzXc50/e3CneQ/6rqyfAgAAAAAA
oASm3vxB9Y2lFxi/q//8wZ+KXIPW7pKOG0N9zE8xNTFpdSFONBQuNrbNGz0m
Dj0FUuNSk45O9xriuZ3TWzyVX0TOeRKJuOJUZR6SH67dkF8Sp02UPud3z+io
t45lKj/JdqURj+56Lzn7gBRlW2flyBo2Fli7XYLhgPteIb03Zduf09804tFL
jiWQiH/g5s9oTkO7PQAAAAAAAFAyv/7eN6srFpm1nzoLNr0Q7e+y96W9rdfJ
CXmcaJd/Ct49eZy95/6eXaFjsHmxxqfd9+OS0ndD4s7qOvqJV55WG+e6+qX6
jIdz7k8akr7UPqMp8iadHqcHla5N0LyiKd+bt29Vq5e2ePQmObTtktaWSF3D
5u1C7xLttgkGG9sex7bvFWlC9xm19TshcfEp1/3Uf+b2xiZP+pOnTqm3CwAA
AAAAAErl5/fd3YtFpG/q9V/8V1bd+Usvnoi6FnT0PHDlTPFHqfQdHx8BjTiv
Nl+Xkvbr1KB+j01dwPY3F1ziikPS9dEeXNL3mRPiIN2Z0ya0+wUbnF/u43t2
irYtn2Nyx6OX7DOU+v7Ie8hU/+Rbrd02wWCz79V90d8rrm3e9gyE6ui++Sil
r7Ctn4KnEwAAAAAAAO5QbNCxH2yrbrhg8bxv6wVXPhwVk06xbRT7RtA+mCH/
kvbdzw/p//30QtIivVm7vFNw9yZznNGqm2+cN5YqwcfFRW+P1fVz7DOacnzc
TJvThV304tTj+Gabio1H19QdfOaC6L5t2kTJ/Q23xr8eDxqyn10MvvHoqZCO
c5e8F6m0uPUI5I+v3TbBYEOaLdf2fNp6zDwopS21z2hqj3TJtWo33fzvjWV/
8WWXqrcLAAAAAAAAOsdHY5IHPrZo3vf1I5Mzqvmq7zP6s5/+RL+cCoTzlmh6
NJQSF5UDaR1d20tFglweFb5xxbFrA7Q9QLjYbtIqtfsGEzZfBZoX0GqbJh3d
RdPKta+o5Pxf232l7m9o3QHXBuDxAFJC8/umdkf7Noe099BnIWU8ekwfkuqZ
J2yeTqXv6QEAAAAAAECRHN89zzt97S9Pq+aprqPjO38+El6jIWNUKU02JtbK
po2G6Ogp4m+19PWcsfJNNP3RNbB5u9Dzqd1HNJmcnGTz63Pf9XjQepswxYna
vINmz8sYj+6jW3d5jsx2n5y3y/j4uHobBYMLxT6n8pRqQmsi2f6rpqO/d+Dl
5M+i5nNfp77Gs7l+UbttAAAAAAAA0EUOrJ+73h86etlQmZjGRKSR5BgD2ry0
Y2OAY87ndPSUcamu50jvL6qt883bi5aJR89R9m1tJnSupE1n5eayKP5Pu49w
7TNoXYtmO8rtj56THHui+sLFBcPbBaSCm8NLuRaGXTfV4utS9ysL2TNEYg8P
jhh/Pm7el6D60W4jAAAAAAAAdI6D24vS0et+jtDR50Oe8S5eo65ju9TkWr+c
wx89Zf61PSliru8ajy7hXaHdnvvU5/tKj/GjeOO2PkNjvqkUf3TJe8zlpRTC
gzvN7YAocR0F6D4+e6Knmjfuny8Zj17Cu4rSt+nr9evT2iNTPdD3pHYbAQAA
AAAAoHOcfn3OnqPaOjri0e1w3sw0HipNt+GIjdU05dFFR3eNTbaVgUacaYwH
RY76DI0r5soyNM8x9+qr4WwZe7Qz3i7c3NvKkTVZ24vrOgbbObn28JR8rlKu
4fHNG6en0d7c2u0UDB5c32PaE923bXvP2zn4o5c2n+eaH9LTbcdy+wzTOkbt
NgIAAAAAAEDnaOjoo7/6UDU/0NF5bN7o5CchPTYrdWxpQjMePbS8SvR+CLm3
0v3RXTRR33XzdE5XNMnb1t5qzGdzX+I6nMeBJFw8uu/12rRpH+26C32dKZ+u
+e7SOgrQfbj2due370/+TMzrb5h4dC3vt5zp0d453Ldjae8rAAAAAACQkZmp
XozJm7+b0c9Ll6j5uly4cGt1dEY3P/B14ZmY2M/GwKYcg8XiqxeHaGqpdPTS
yjJnrLzrvbfFFcd4u0rWiXRdchoR9WHafUUdbg0L+XykKD+pdlMKbc+V1HMn
vT7DBOftUuI6CtB9uLlG07x/6j7AJR5dmrb1bjn3Naf9MEx1Qe8H7XYCAAAA
AACUOP1675twxQTGgj68+52bZr+nz3/miHp+EI/Os+2hbcZx0PLrPpdkvMfR
1HukfLZjxpQhOjqnW4XoYpJ+qSm9LFLgEo8u7f8u2XZC07b5TZ88dUq9v+hD
XsSmPJJ3sWS5+HrjlOKPrtF2pHFZP9D/vU3b1G6rYHA4euwdtn/M9TzVj5fQ
0V3fY7n9mlzO4bzICDpOu70AAAAAAID8fPDCxt73oLa/tzYz029Xk5OTbnH5
NU+Xj1+2WT0WnYCO7lY2ddbde1cRWk5qbGPTUH/0FOS6TttY3ceX2Wfc34wv
j40rlvSPzt3WOU2S9vbU7i/6cNrJi0cOqJVbT7dx0NFL7LtKyFNMHuDtAnJA
fiGmdnb50qUqz1iIr4ukHt52T6l93uj63Jzqug13qLcXAAAAAADgz7snj/di
RPa9us+b5+9ZNfs9ONQ6+pFn53wbXzjy3Wr/7xk9ffpw9dzS884cu3hZteP9
AvL/R+joNlzXSPuMQWkuJedYNlWsdQ5/dKm8m87rkle6bb9IzXxI1qVr2qQ9
mp5J6se0+wuC5lRdvKBSlHEfztcnNh49lZ5dfxal8+WzdieV54Ntj1zt9goG
h7s3bTS2M9rzMvSZiWn3dR390MQu8b4l5/xa6Lwj6eXwdQIAAAAA6DgzU9XP
n7pzzj6XsQy1jl7zOq/zje+9Xr1fO+6f9o/NlvmFn1pR7XhrWj/vZ4E/uhka
H4Wukc6xZ6A2Jh2d7lvSbyWEUH08VNfV2O8sNB69xFhzk+Zru67N24XmhrX7
DZpnDo0JlSz7tv1p+3+P1a9cdequ7bUseX1ahwBvF5Aabl8G2/7Grri+O6R9
XXI+s7YYh5hnn3tfPTU2pt5mAAAAAABAC9OHq0cuOl9MP4eO/sd58ehNLr7s
0jk/f/Xbu4vwcqmDeHQzzzz5mLFOae8oyXGW6153tp+lPNJ90ilpn9EcmltJ
2n8p+0Xa8i2Zr2ZaS5YsKVaXIH8ZLl6+n3+JfWBD4iND4tFLXbeR2ys5tm1z
3i63rb1Vvc2CwYD7Dt31i1dVnlFOR495N+SeJ5eAe/ZpblW7zQAAAAAAADv7
Vi0Q19CHXkf/iH/+zYvVt9Z8wVw+i5dV//aWv60e2vsPc+LTSwI6upl6nH4d
WqcroavkJEVsq5SO3pa35t+lxtFaZSlxTc7XRVMrSLVXrAnyKTA9mxSPqd1v
3DM6aszb+pFbgu9dys+olPmXUubKcu5NSDHBpnYBbxcgAbd+ztVPKsWzGBOP
HruuTaJ/dfF+cnnnPr5nJzt+mpjYr952AAAAAAAAw/Hd1RWL5DV06Og1ZqZ6
focnT53q0RXvQ+joZriYVxoTSY83U5FyL8FQHb3E+NZUGrvUmoEmUnqoa35L
w6ZLkD+5Zr9B8cXG+Tdmb2JfX5uY9qu1z2iX1ouY+qc2vwdXzY9rs3jvglho
LY6pbdXXz1EbbPY3Ej5sLv7oNh295HeNFNx+ozQnrN12AAAAAAAAg8HHm/bE
pPWefc2XvGXp/9y/fWic+fzTX5/V5aGjdxv4o8/n6LF3WM2jVB+N3Ljo6KFl
JeHjHRKrpu0f7qyHZowrbpZJjMbr4j/rWm/cPNe2h7ap9h3cGn7ydc/RhlK0
m5TrHFLNNdXPL6XfXH7d54xtA94uIBZ2/s5x/ZzUM8L5o7934GWRNGOO0ewH
aB6V+6akcZV2+wEAAAAAAAYaOvr1PzwanebM/vuhow8AiEefD+dxzO0VGKpJ
2XSj+pgvl9bm46Ei4euSwm8mZZmkup5vupyvy6BiKp+VI2vY+EvNvoOLO9z7
0l71cgvxRw+9Xo54d8m1GDF/d43x5bxdaE5I+50Hug19m5ja1paxR7P3O7P9
TYQ/epdi1F3yattrWHvuFwAAAAAAMNR09AVXPizj1T19uBeTvmKiG/4lwAx0
9PlwsV2k3UmPr2Jo6tw+8VaxsVl1Hf3EK0+L3kdMOfrGpkuTQyfk4opDvFs1
5zJizv3+j55n4/toPYlW38HliXSU1OXTdrxPPHopMdyu5VCy7tbPG7UBrn3s
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
mvYX76r+bu++np80faf97Kc/qZ7bekf1+aWLjN/yH79s86y3y7H7lrvp6DXt
3nocUGVQdHSbN7pp378Y/+FSNEVN/xlORy9BR8tZBxr35hqPrhE7G1sGWhqo
zRMjlHX33qVyL2y7YXR0CS+i3LHqOduJT1u1+TanzjPNC5HuyrXHiYn96u9p
MB/y3HFd0+LThtreM6m/K3Lp6Frv5ljd3mce1JRGcx64/zPi0QEAAAAABDm+
21sH6HmjP7l59v+07r2ujfd+/8kNc/3Tz+Ictw5UGRR/dG5/wIsvu1R8rFUi
qePPm7j4o3e5zH3joSW8lU1jeFO6UvHoXSOl/wvFjkvr6DRH6VP/0mUzz9dl
CNtNW7n47p2QI3+xcB4ho5vh7VIi2x7aFtR/lN42OV8X17RTPJvSXuQl1g/i
0QEAAAAAZGlq222smJjqnfebJ75iP3bxsuqevz9y7loND3Vi7S9Pq98/mM+g
xKOv23CHsW2SZ3rouCQm9sv2c4yPegqdp83Tw4TkPqO+ZR1ajrn961Oly8Wj
a3t1uLZ5DdquT95P0jo66Zkp8h5alj6+LpKxqjmeQc31QimI8SyidRDcnLL2
exrMZ9XNN7LrWWK9q2Kf3Tq+6zKa8ei55/q7hik+/d2Tx73TQTw6AAAAAIA8
b+/Y5KQBXP69X8057592fHXeMbRv6cSTXzv38+VfNu71SDHrR2f07x3MZ1B0
dC4Gb8vYo0nGPCWP+1KMV5vnhejoMV46Jfi8lFLnrnHFNv01RMOUroMYrVZa
M3p8z05xHX35dZ/zykvq9pU6Hl06zVKeNy4vJeWvjs3bpadvFvC+Bueg+Q1T
XVGf1OVnLKWvi+u7zfbOCnn/SK2JCr03FxCPDgAAAACQiOnD1c6RvzZ+u1/4
79ZXf3fo/zOed2zPfbO+LuSZvv/3M/O8103A06VcBkFHP3nqFNv2StunKxW5
NZ26jn7iladF81yqPqVRD22+Ltr3m7PeU7YLm/YYysqRNWrlSb9r+ueG7jMa
6rOc+l5L9mgI0ds4v+SQdR3cnrm0D6n2+xq4fbuY9nXxbWeh69oknpPc+4xq
4Nsf5fg+QDw6AAAAAEBiZqaqycnJWT6YmnI+r/7zzPTb1d7VZi19wZUPIxa9
YAbBH33vS3uNbc+0T1fbGKSkuEOJvRhDYoilfF26qoenGg9LzRuU4nNdSv26
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
uq3dlNCOc9ffICDld8PFRZB/t/Y7flCx7THqWs/1dTTS61yk22doPLrGs596
/Z50Hus/N+MWEI8OAAAAACDIWW9u8hLZ8dZ0XFozU9VLt//LYrTgrrBv1YJz
sejLx6r3I9ObmNjf08FjWLJkyWyeaA/ZmLRuW3tr0vJ79+Rxdhy66xevRo9H
tMdzPmM27TFdm44u6dOa2rtBOu3UXhAxeqhkvXTJJyZ2ToF+39TRc3gRh6Zt
XMfQIX/0FHXbdo7ve0DquiHpxbbna6++xvgeTf0OH2ZSe9JJ7mMhgYs/ei5c
v/m08xVSb81jEI8OAAAAACAL6bgXLtward/2OL67NwZYMTGlfl+d4Mizc8ZO
o7/6MDpNih1L4dUTCo0HU5Yhd79/dslnncYXOdb2m64j5eebc51yG5Lx6KWM
aV3rU7Kc58TvGfa5NZHb1yVVTF7p9d4k1B89dx1xSMSjp5zfS7VeIdW9llKv
IcDbJT+jmzcay9zkSZe7HcasG2Jj5x19XULnBUvVxrVBPDoAAAAAgDAHt1d/
MfKcjI4+fbh6fNXXq71TBdxXB9i7uhaL/vAhmTSHTEcnbyHTdVfdfKPI+KOr
eovvmmSJ/NZ19BOvPN2atnYZadZfbPrNddu+eig3D1BynZSSv3oeUunopvpJ
EetvikcP1aJ85xJ9+58Usf5Snihtv8/tBRFyjRePHGDf413wd+si3BqAFJ50
0m09RFsPjUePzbv2WiCpMozJI+LRAQAAAAAKY2aq95325u9m9PPSEere9Asv
erA6OiOT7slTp6p9r+6bB42DXf9PXi79vG17aFtUWuQzk7Ic63lNPQ7NOTbr
wnWbP6fyR29eKzR+3yW+LrRsU3h++9SFazx6CbHBrunG6KyuGqaPNks/N+cv
bPuMhqx9kWh/PoTGo5cwn5E6H9r3KDlv4trfLb/uc8b3Ke2Do/3NNIhw8xYU
DxFbx9rt10SoP7r0c5rLf8z3HZbKhwfx6AAAAAAABXLWz+VPFi+rdrxfQH5K
Z/pw9cDHFvXKrOdNX1iZ1fcZ/dlPf6KeH44PpqbYcaiPN7rEOEUrXirFeDA0
zZQ6eqpyjI2DLaV9lLZfZI5Y3BLS8vFHb5JDy2ltN4n80WPSii2X1OtfSign
170lm/M+bdD8s+l9SnumaL/vBw2qN85HJ2WbMz1jsembnllTmq6+Lrmeqfqx
bXuapJwH9U3LN5YA/ugAAAAAAGVyYP1nz+jCn9xQ7f894tJtvP61f3Fu3iF2
f9cE1HX0ktdzU95cvNFL0D1ir+OjLWnt9Sito0vch7amHHL9kHNS+VzHxIF3
sb580fRHl2hbUvMvOfscrRj0HHMkbddI/XzYvF1ofZn2O3+QGB8fN5YzrQnQ
fG5SzkOFxKNLa/5a5aoJ4tEBAAAAAMrk4Ojy2XHA+c8cUc9Pqfzmia/MauiP
TJY539AVHf2e0VHjOJTyn3I86XOepkdublx09Jj5AYnzYus9Z2y6z7Vy7TOq
NUcjVfbSefDV0VN6p3DH22KSJf3RU9VbjLaceh8An7xpeEnYfs/Nm3HeLrQX
ifY7f5C4be2txnJeP2LfY1Sy/ea+Rqg/emheNd9XJYF4dAAAAACANNB31otP
P1E9cd83e9/35IfZ9m///59fumjOOGDBmt0y+5YOGB+8cG5PzNFffaieH46u
6OjcHl2kr+ceN3ZhvBaybtlH95aIRy9BK43Nr+89+LYd43p5g47uqpuVVn4l
5NH1mjG+LiHXli6LFH5Avrp37r0FfNCar0tZ522su/cudp2X9jt/kOD2dtky
9mj0M5Wz7bi8V/o/u+joKecacz+7bedKxFmYjm3OnSIeHQAAAABAmNOvV99Y
egG7ljeEBVc+DB29wQcvb+mEhk50RUfn2t/3f/R80jGUtLYSqqfk1NtcMOno
NJ6TGnOG1knMWDVn/HkMNj3U1SNZSouJ1QZ868V3fsg33tr2dy4eXVsLqvtn
W48L8EcvwdddUjfUrquUZeXbF9DfaW8R7t2aet/wYUF6b5dcbTc2Dc7XRUPv
l7qm7f2Su7/grod4dAAAAAAAQT4aa99wwWJRDb2noz98SP/eSuLg9tmy+fpr
x/Xz08JNN//74nV0Gs+b2p7LHl0laiEhYyNtmvnKtc9o6jjOVN7GKdNK4evS
Vg7Sz1UX1nQ08fF1kfCJkj4m9f60pdZpyj5V2g8s1T30zzdp61ysNK310n73
DwLc90tzb5ecz0GW+d5IX5fUc14S8eG56ssHxKMDAAAAAMgxu9+lIBd+akWR
e2eqceTZ2bL50osn3M6ZPlzd/olF1dpfnlbJcxfi0bc9tM3Y/sjrxXVs4eJj
wh0XOgaLiX1NcZ4kuXR0LSTG8KliAtv00BLaR0x+Sonra1LX0U8sW+kc+5+r
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
Ey8eOSA6/snhB9KnBO1E4lqh8ei2MXGbDhUa16tRrpJj/+b5mvHoLvc4KPMn
TUw6unaefMpKIh4959xHzFqS2POk7j1l7Hyq/HPeLrQ3uvZ3QZe49uprjOW4
eftW73qlb/eUz1cK6jr6oYldSa+V+95KzQfNucMfHQAAAABAHopLf/6eVdWX
li/vrdX9D0//T/bY3zzxFauGvuOtafX7AXGUqqP7romWQiqmsCvjrtDr5vBH
z6lB+dSjdhy1ix7alscSfI1s1wqJn3dZv2/Ulx01qrZ9RkPLLfXxs/fZ4o/u
m750bH3K56oEXS2kzDX6Gs5PjXRh7e+CLsF9O+99aa9IW5X0K4m9tglff3Qt
nyTfZ882v+eaVuhz7XLPiEcHAAAAANDnw+OHque3PFj97c1f6HmA0B6lW//u
NewtOiCUqqOv23CH05pon3jEFJ4KuSjtPkrYZzRW79PSw33qMlVcMfCvr1B/
dNe6Tk1ou8mx1idFfYWeU0L/Gnt917khU75t3i4nT51S/zboAm8cPGAsP589
RjWfh9hr9Dy6M/qju6aT0yMm9h5Cv28Qjw4AAAAAAEBaSvVHp7hz0zh0y9ij
TmOKpqd0SeQcN4aey2nM/XK16egljk9jyiaHv7NPOjZfl9A4YykPbtPxpWoX
vnlpi0eXiOOW0FEIek7naasJ/dFzaM+5247puS+h787BkiVL4O0Swfj4OLtf
q1a7cV2fI4VvPLotbyXs6dsVEI8OAAAAAFAwM1PVP/xgR7X/9zP6eQHBlBiP
/u7J42w83K5fvCo23kg9Jo3ViWLPl4y3bqYdEo/uo63G+heXNo6WzA8XV1yC
F3Pqc2LvMeb82Hh0CWKeael1DCXFbYfMdaWuv5j+2CXPoZ7ZLvfNebvQ94L2
90EXuG3trcbyWz9i3mNUuo1Kte0YP5JYHT3H/YWkX0Jd0TlcrAji0QEAAAAA
Cub47t64YMXElH5eQDAl6ujkH2oag9L+Z82xQ30MEhqDHhqb3TUkx382Hb3k
tQAa5SudptQ+o9oajS3dkrxE+umdeOVpJ390n7zkKMvZdtPijx6zXkHynlzO
L6FPTuVPoX0fBBdPTXwwhW++NijuPGQ9XarnJWc6feo6+nsHXi6qfbvec+x8
vkS5+p6PeHQAAAAAgHJ59zs39cYFa395Wj0vIJwSdfS7N200jkFX3Xxj1vFg
inRitJeS/DFc4tElfRtifUJ84t8l/DmINq0vVAtM6Y9eYgx6TL3GlHMzvbZ4
dO1nUrPdSNS1pKbF1XnI/rW56lhibsBnfsQW00qQl7fpPUx7gGt/I5QMzTOk
WE+XYm4x5T7prvHoXV6PlnI+LzRtxKMDAAAAACRiZqr3rfWzn/6keubJx3qx
Ry7Q+OmJ+75Zrfp358+OC6Cjd5sS/dG5WK7N27eKjR8lx4tdJFYnKmGf0Zxl
lNoHwyd913j0WJ+fEmJ+pcpeon7b/NFjy9M1P6FeC23x6K75jXkuut5v5iRF
WfmsFap/G9Sh32t/I5TMxMR+dj3dIDwPrnk26eiS9ys9f5tj7VCq+bn6c414
dAAAAAAAWWam3652jvw1GysTAnT0blNaPLpPLFfo2CNm30iXa8aMiUI1styx
lKE6uk/MWOr10Npj+lBy+aO31Z9LWbjmL6dvSOj8gK8/um9Zpb5vU7vRXs+Q
as1G6rYgVT4S8xCp+skHd8LbJYRtD21jveVTtifXtpX6G6Z/vqQ/eklr8VLV
n1QaiEcHAAAAABDk+O7qhgsWi2ro0NG7T2k6OuXB1M6WLFmSZByTai19CaSM
nyopHj13+ae+Xttcg5Q/eomU9izV82OLRy8t3yZi/NFLIGfsu6s+Ges3VWrZ
9c+Bt4s/3B6t6zbckbTNarUb7pgQf/SUe6P7XEtifjNFXbqkiXh0AAAAAAA5
fnz9QnENHTp69ylNR79ndFQkliuF/7JkWhKai/Q4zWcMm8Ifve2c0Fh91/xI
6WCpNUopn2ub74t0XHFo+0gV/x6Cbzy6BBJ9Q3/Nv0S7iXnmUsTB+jxrpWmU
kuUcU+a2NP7yqzcZ38e0V4n2t0KpXHzZpcYye3zPzuA2WT8u1RqKkLzYqOvo
hyZ2WdPI9Wzm+NbS7n8Qjw4AAAAAIMSRZ5No6NDRu09p/uh1Xb/O6OaNKmOS
0PFQqZ4hUmNwqXh0bV8J7fRC6sPV1yXVM9IlPdI1vy7HhPijS3i/SNWDrz/6
sJC6LNq0/pxx9r7pbRl71Pg+pjh1eLvMZ3Jykv1WfvHIgextWVPTlfB1ccl/
ynV3OcqNuxeRfUYRjw4AAAAAEM7B7fO+6f/8Pz3y0Xf9e2fGQjNnxkP9cRH3
Lx1H///1S/+tuv0Ti6CjDwAlxaP7eKOnHONoxxOFEhNP3JZekxAdPWTsm8r7
NzT9EuJfY3xdtNuw1Fr6lL7WlI9+DDfn63Ji2UrxduR6b6F1GBqP7jsXIO0L
3zxe6nmzHd+1d0DK/pTzdtn70l7175fSoDIxlZVpj9EUddVGyH4rXF7a0pL0
R48pt9TvCo1zbekgHh0AAAAAQIiGjv6lF09Ep/nBCxuhow8AJenoExP72di3
kPHFH0+/bhxr5PTgDDkmRmPzOT5GSyvFH11SD+wKUr4urmWl7T1QytoODV+X
0DybzjHFo2s/E1r+DrFl3zZ30PV9N+rX5taIkQ+49vdLaXC+dLTuL1fbzJ0O
d760jp4r7jz33sM+1L9pORCPDgAAAAAgRE1HX3Dlw9X7Eml+9D1H6a2YwNre
LlOSjr7toW3GMei1V19jHTf0Y0djxlvSmkWpOqIUqfzRpcsupqw1PGJc4t2l
9xmNjeONKSepeZ4c+Pq6aGjEtmv4zL+kionPeb+mY0Ji0KWJKVsNryabt4v2
90tpkG+8qaxIX6+XdfObxbVtxLSrHNTbkU1HT7G+JFX7j01P4pvC5zzEowMA
AAAACJFCR5+Z6nlBiqQF1CjJH52Le1t3713Zx1eucYi+SI91tWLS6jr6iVee
zlIPkh4t0tqvT73G1pmLHhqiTZSijYaUY0g8sO+zGOKPXhI5/dEl1iZI+rSU
SGqvZalrkK83vF3c4MopZo9R33OkvcxCqevo7x14Wf15S/U8ldbvIB4dAAAA
AECI6cOzfuZiOjoYCEqKR7eNQUsbq7iMuXKdm+J6bX83xaPH+CjniNOKncMo
YZ0DIR2PnosUHkip66N+vIuvS+hcTkxMpus12+ZfStDfSuoHB/WdE3IOrQkz
vZtvW3ur+jdMKdj2GNVuJzHtOTSeWtLXxXXdki2vzZ+14/clvof6x9XXN9Dv
EI8OAAAAACDDsfuWn/mmX7ysemRyJj7N6cPV6EUrqx1vTavfGwinFB39jYMH
orzRYzUg299zjrdc9S0X3S2lDlSKP7pEnWmPp22Y1v+H+KOb7tH3mfD9WYKS
tMwc8egpPQ6k49FjNdyUazgk201MO/fVw1LkX6LcNm/fanw/L1myRP0bphS+
/6PnjWV0+dKl2dpbTH1Le9H56Oihz0nqdq+VTsx1EY8OAAAAACDHzPTb1SMX
nd/7rr9w4dbq6ExkmkeexT6jA0ApOvozTz5mHINeddWVUWOV1DGWMeO/3PHN
oRqd6e82Hb2v/abS6nKOVVP78DTTd7nfLsWju9xPTo+RmGND9xmVWHchcc8h
8y/S8fXSxMRwtqUXU+Yp5kNSzfe55Im8XbhYa+11bKVw96aN7H6sku1Aum4l
06//7OqPrpHv2Hurk2se3rVM4I8OAAAAACDM9OFZLX3Bmt1R/i4HR5dDRx8A
SvFH5/bnWrfhjuzjJyktZZBJEY9eim+K73Vz68I2PTSHP06uck2RR0lfF63y
C+2fYuPRB9HXRYuU8fK+cHteNqE5be4drf0dUwKc9w3F8ku2HZe519i2IrL+
paGjSz/bJa8ji62nGBCPDgAAAADAQ/HlLz79RDU+Pu7EU2Nj1Y6dO6r/PvJv
zu05utL9fILOf27rHdXnly6aTQM6ercpJR6d1oe77s81qEj6Lcce2/b33L4u
UvfmojtLa7kh431bTL9PPLqUrh5b/jnjIlM9M6Hx6CnyHXIfsf7okvfq8zcJ
PcrVX9k3/5q6P3dPc2KCT79u/H1IecDbxQ4Xr097sUo8I11Dap9RyTWDbe81
bX8Zn2twf0c8OgAAAACAhenD1Q0XLGa/3XMBHb3blKCj03jAdX8uCZ8Iab3K
db1vqR6cIem56Oi2ehkkvUCatrJp00Nt8aUpNQmp++sjoX1KksMfvXlvkmtj
JP3RS/Vl0FizEIttv0FNmuVg83aZmNiv/i2jCfcN47q/S5P6/EdMW7K1p9B+
2PU8V390Ke26lOfG916ktXvEowMAAAAA2Nm7egF0dBBFCTo6rXMwta36/lyp
dR+p6/jis/9jjCeF9H3VdfQTrzwdnV5IXJjr/eWsU998c23AhrQ/ekn6Q8q6
CqkbztflxLKVzuc1f84R951if9qQ8tOoZ83rc/Wcc91BSjhvF/IG1/6W0YTW
a5rKpW1/l1RrZ7SejTlrIYTi0UvAd95Q8zlFPDoAAAAAgJ0PXjDvawQdHbhS
gj/6bWtvNbat9SPz9+eSxiVWS0rX1hjfxZYHVz65fV0k7zXW20UbTg/18caQ
xmc+KKScY+aQpEjh65L6nup6umQ8eop8S2uKEtf1ie8tpc5TXuOe0VHju/rP
Lvms+reMJtw3zC23j2RrK6XBxaOX1qYlz41NK+Tapu8ZxKMDAAAAAFg4vlvd
2wU6ercpIR794ssuNbatB3eOq48FSxiLpbiub5xpk5w6usTYUjofueZZTGlI
x6PbrhfbTnLVTSg+mmgqX5dcsequ8y+55yx8Yj0HydshZX1L6IjNNQ30865f
vMp+C75x8ID694wWXJz+lrFHW8vbtheGTz3HzBulaIdtvi5t+9u6vnti5t9i
+t7UvmahIB4dAAAAAKCFmanquaXn9b7XL7nz+d53Kf3+g6mp2b/X/z+H+t/P
/tw/tvlv/e8ErdH89vLzoKMPANo6+tFj77DjcvJj9RkHpSannltyDDxh09FL
yWMp+ZGMnSVc/Dm07zlXeUqXre1cm69L7jpo8yw2zr8IxKOnLu9c7UYy75rr
EtrmDVLohOS3Znpfj24eTm8X+ibmvmFo3iFle03RHqX0eFdfF6l1KCmeQ595
OWkdPnSNF/zRAQAAAADamXzsmupPFi+rdryf97oz+++Hjj4AaOvonDc6rROX
Hgum2vdTcszFpREaZ5kinpjwiUe3xTi7/BxbpjFppNbIQtKXikeXuDfXsX6u
WEuX40P/1oxHb4unlCx7iboK8UfXQtrjJXXZapdBzvTX3XuX8Z1N68q0v2c0
oD1WXb5hYvqLOiHvR8lnxDUtWzx6qc9cirJ3vd/YMum3L8SjAwAAAAA4cORZ
HT379OvVFYv+pFoxMaVfBiAYbX/0dRvuMI5BV6/280an9ig9RswR+1SKj6fv
dWw6upReUCeV1p67HiX0U2k9NKdm2UyjSz4czXj0ejuXfBZTPde+8eg++YjZ
Z0KaFM90yHvB1TunLe3SNEebtwvlVfubJjfbHtpmLAuKUXCpR41nJEe/2+br
EouPH1SKey/l3dW8T8SjAwAAAAC4Meu/MiTXBXJox6Nza8RNvqKl6QnS474S
cB3Ta+wzWkK5++r5Utees19kRDx66W0wJn+SuobJs9jHH91lPUzK/JuQ9gOK
zW/MsxSbz1I0sNLx9XahfUi1v2lyQ3P+prKgGIES6871nNj51aaOXvq7J7bs
fNJIGdeOeHQAAAAAgHScPHWqet/huN888ZXqL/+vbdX+38+o5xnIo6mjv3vy
eBJfUc1xVcqxosS4TCr2jdPRtcfKXdfHXMovpT+6VPso3as2ZK1JMx6d+q/U
dS2qa0X4o2s8V7muWVo7D7le6DqbYG8XZh0Z6eva3zS54fZJf3zPzmTt0rdf
0FgL4uvrYlunFDtfbTtfop+RKl+JvCAeHQAAAABAnl9/75tzvvWv/+FR6/Fv
79g0e+x/ePp/OmnvoDto6uh7X9rLjsVTje2aYxVND1ppTUQ6DRs549FT1ZHr
2FpKc5TytZX0dZH2dInRr33PCUkrpm584tE1aCsPrt2ker405tRK8Ntqo+S5
Ptf75t7dBO0drv1dk4vJyUnnfdIlnrkU7TLVnFpKX5eS5g5i8yzdHyAeHQAA
AABAlne/c9O8b/0LP7mhNdZ86s0fVDdcsLh3/Mcv21zteGta/V6ADJr+6Hdv
2mgcf666+Uav8Yi07uyjBWqN1aTHXr734aKj2+LLQryHQ/Nb2pjbVi4umHxd
YuLxUreV0tIPzc+JV56eo6PnnDMIrc85fkAe8ei+7aXLmrnrNVKWWUh/GLo+
w3cvES4PXBz2MHm7cPMJtMeoyz4h0m1Y+l0X896o6+jvHXg5WxmkLEet7wSf
6yMeHQAAAABAkLP7kc5j8bJq75TD+cd3z2rpdA609MFAMx79qquuNLbJzdu3
qo+jUo2fXPbjK5Fm/rT80X3Gt6WXaSjS+4zGlleMvphiTirVWoy2eHTpuR2N
dpNbm05ZPm19gm2dkuS9lBx/3sRnj2jO24Xe69rfNbmgOYOQWIDc+D5PEn1Z
XUc/NLErKj82JNcXhvSLUnNdUvml3yEeHQAAAABAhn2rFhi/9xde9KCzV8vM
/vvnxLG/9Af9+wJxaOnotEetqzd6c6zgM9bPSQmaZtv4Smrsl0NHL2ENe1vZ
aeiRLvuMho77u0bOe2n6o0vkM1U9Gf2AIvzRQ/PtOoficsywtGmOnPvUupTn
93/0PPsOJ78T7W+bHJBebtxj9N67krXPHHOPEumk9HWJuadB8rHqU/8mRjw6
AAAAAIAQp18/F0tew3v/0Jmp6sfXL5w9f8GmF/TvDUShpaPTtUzjzyVLljiP
SYbNX6KkfGnFo5denrFjd5fjTHHFKduEr26T02MmRX1x99uMR7fN56W8x9A2
JrGOIaU21RV9q4T+N0V+Q+6L/EtM7/FtD21T/7bJwZ9++tPG+6c5Bq7M2uIA
pNbTaLfTGB3dVgYllEeOuPe2a3DtCP7oAAAAAAAy1OPIL/qP/6V68ch7wfuF
fvBCzdOa/F3e178/EI6WPzq3Hpp0/RRjG5s/t8uYpXl+TGygrxYVG4eZQtds
09F9x4k5fBx8zi9B02PXyzvEo4deQ1vjjmkfqeOVm/Ho0utiUutekvHo2qRq
p77PQ2i8fAnlb8uDqW2bjl8/covxPX7t1deof9ukxrbHaGz5S9dn2/dPCjgd
vZRnIdd1Y99Lpj7I1u8gHh0AAAAAQIiD28/Ej698QiytPpf8j/+tf38gGK14
dBpnc3uUSY53ShgrtR1Tkn+JK7nj0VPEp3WVtrhiDf8LDX8bl/Ql9VaTP3qu
dTO+92HSQWP80TViunO2He15M5t+7/KMpyrPtnMe37NzaL1dduzcYbzvy5cu
DSp7l/1fteY529qb6f5y+Lpw5RpTTiFzubFz+JIgHh0AAAAAQIi+jv7wIbG0
Zr1dJNIEamjp6NzY27Ye2mcc1XU0tFCfa/nq6BJx2CnLtOT8NDVRyXj0ECS0
HM3nNvTasfuMSum2wb4uQvHopczd+JTroL4nNO+z3y+RF5vpXf7U2Jj6901K
RjdvNN736tW3dKqefdfauearqaP75ln6m6GEPiBHHhCPDgAAAAAghKCO/k87
vjpXR18+FuwRA/TR0NEnJvYbx5/kNZp7HGIaM2qsgc41RpO6N5OOXuL+r66a
QGyspu//ffMxR5/w9LnmyuD/Z+9tY/2q7jtfyU15cxUiIfC18gIJ5U1lkQTR
IYgzwtPpYFcJhEynTeSYQDVOsRVkCnEw2IVUyMJkzA1MeDAJBXxrE8px0hRD
CDmxcWfsiR27ENnuGGL3alywY1xDFI6tpFakE+3L+uP/YZ/tvfZ6+D2tfc73
xUf2OWfvtdfTfljf9V2/laL7UvpKbBqxbaUZe7z+M2Wf0dQyUcvY6g9NjKtP
bW8J/3NqupLPbq77qu8sXn7TjIzt4ltTt/rR+8X7WO5xmtR19ON7XzLLh+Za
DY17O3QN+NEBAAAAAJgY6ug3baal09hndJgmdPT+YhEf3e1B1jb+XHDtp8zH
ftLjtdxzJb1cOcfnxkdv+7uk1u0jVwMrAY79IrnLXHKMWw7t3tH0o/ehr0zp
NwLx0SnPGSu9OdazLjGPxJlnrmc8tR26YruceOst828cKXxlfvbl7aT65uon
lPncNlK1+ti4LhZecq17OXaekjPGFPzoAAAAAABMnD5Q3fbB2YN9QR85MpGd
TtOLjrgu/cfCj16/Zp0VX7s7OEZoep6lPI+c6XWNkSR8pxpl0oyPnrqnq4UH
VSIdXzli4rqUoBNw5SW3zrnrIBTXRYvc/s41/9K3+YMSyNHTpK+duxah7W++
2C4bN240/8aR4JV9e7PX1FH6Sol431MdfvRQGVOe+dL3jPT9yV0++NEBAAAA
APjYsWTW4Dv/wnNXVrt/naGlN+KiD/n0D4+alw3kY6Gjp8RGjx1DSHkHLcZT
3Gu0ueIz1OcwUnV0y3XnWv47LXL1UK05p1C9ScUSocxNxByfGh+d+kzi1rpD
fnQJz3Ps+ZJzZV1pS8Wu0Y6JY70exMUEb3unu+8L628cCdz8QFt558+/qoj+
wNm2uedI7TOa817WnJ+yXusGPzoAAAAAACNHN09+6zst/Zn9/xp33sR4teeJ
m1vHDBdesKgafbuAsoFstHV0Dh+XhLbXTLekca+0/pmTvqQfXXq82Se/X1vM
ec59Ri1iD3BeTzOfknFdNMrBHQ+oROrPeQvPfe68L/d1tOcAu2K7nBofN//O
4ebWZbe0lvX25Xl7jFo//yQ8Apzx0XO/Z6S/g6zoyiv86AAAAAAAvLx+/8jU
mCyfu7t6es/B1vjmvzq6vxp7YnV15ez2sZHjnHt2mpcJ0NCOj/7k+vVJPi7t
MUjJcGmeHOWnxkenlp3D08wx3g7tD9mlZzX/9tuTZ3v2Wn3FAnqohJebsz9o
6EyhY31+dM55Pcl5jTY/uoY+lXqO5POZ8qy09nyXcg3fsW4uvO3dPrpp1Pw7
hxv3vdJW1rXrv2neRyTW0OWc6/OjS60dlCwLd5rceajPt8OPDgAAAADAy8Tp
N87aJ3RSU//E/Mn/d2nnQ3738tXVoQn7MgEa2n70Jddf1x4bfeUdPGO3Fi2y
lPFZzJi2JP9Ul7bK4UcvuT6k6pZFD02Mjy4dPz7XAxxzbElrEyh+dA1/cOga
0n50qTj21L+X0HdCx1N89FLlT82T793u5uqtv3M4cf5633fxcI/R2PbJeQZq
7tERe27rfC8xrksJ30Jd8+JS93/Mz11pw48OAAAAACDAxHi19bbfD+rkXbi4
MGPjBZQFkNHW0X2eNbcuXGIcRBnbUH1d0h7fmGtKeUBzdPS+xHgtHa34HNr+
xdy+GutvpHraj23boLrPaIruEnN+KD56avoS/UYzXWtfrDRS+quPBze1xwyf
brFd9uzZ3VrGj196cXF9XDsf9fNCcV3aYpZJ1EtKv+e6RyzbEX50AAAAAAA5
3tm9vlp4/pxkDf0Pl38HPvRphKaOfujwz739asvBvSJjlra/lTJWtRiXccXH
8Onow7FxqfouxzU1rx+K62JVn328h6hlk4yPrkGMji4RV6ZNm9KK362tlaf4
SGPy4jufc+/UmDVcsZqnb57c7SFu/a3DxbqH1rWW0X1L5fTJ6UrTjy49D0ap
51L3FM8pG/zoAAAAAADCTIxXr279m+qBhZd26+dz5lVf+sbmwVjKPM+AFc34
6Bs3tvvV6rHRLdfwc+iJHPkrLR5uGxL7jErXXYpXv+SYrVJ+dKr/mTPdEr3C
vvjosfmV0KhT4Og3Gs+73Hg/nPUY299L6Jccdc51fn1evo6L+WL9rcPF0qU3
RsWm0/xW4bqfOftKTHz0PsRi46w/Db0efnQAAAAAAD3cutvBN96e3QNe2bd3
wIm33jLPG5BD049+67JbWsefty+/UXx81Fe9IwQlXieFHB1dMlaE9Xrs2BhA
HBqCz49eQjzZUq/PoeXXdfRj8xaL5okjpnLTQ0zdZ3Q6E/P84HjW9jXmTezv
3T6bbe9451OfLrFdLrn8stYyurg2Eu1HeWf4+iynX8F3LCU+em6+Le8ZrbRj
rg0/OgAAAAAAAHJo6ui+8acbe3OOWTjGiLG6aGr+UtPKuTZlrB17fl1Hd3Gj
ufOXsq8WVz3ktKckXn0iwlcs5Tf1HaMd96arz0r56i3iunDpXQNtJSE+eilw
zI+VuLahmQ/utTFcewunnueO961rHNs6Zv69Q+XIkSPe8nH0q9Lji6Q8j6j7
jHL2TY33ISXN1HdpV37gRwcAAAAAAEAWLR29KzZ6aIySsh8VBe4xbEmeRW6d
s9S4LpKUkr/c+OicMZUl66+Eem575nTFdeEok3S5Qzp6yvXb+lJObJvmz6m+
8NTr9wlOz7Amvtgubj2a9fcOFTcXELvHaKh9YuLSc/STWLi/f6Tjo2vWTUx9
lTIHgvjoAAAAAAAAyKIVH31002jr+NN51GPGPlN8TkzjT+5xVKm6BpW2csXo
6FqxBlKvF5pT4PS5SWhhUvHROcrLmSbHtTjacvj7lPjoFnUf6tex/UZ7bUEp
5HivS6k3yvW489oV28X6e4fKvWvWkPYYlYRTx+XoEzHx0bmulVL2rvuU6x62
vP/hRwcAAAAAAEAWLT+624Orbfzp9uyyGm9YjHc4xoGcY7nc8nP50TU9XKW0
tS8vsX0z14+eUvdc9wl3vArtdqxfKzWuS0zflqgfH1ZxXTQ9odz548w7NV6D
ZH44z99ycO+0je3i9kttK5fT17nrvKR5mpx+W1JclxKgtF/bc8737IMfHQAA
AAAAAFm0dPQrRkZEYqOHxiSlrLXNLU9sHGjt+J9acV009SaKts3RBrFoxEfv
A133SU5bh6DEdeFuk5znGnUdg9b6AM75Fa7YC326nyjvBa5yXvPJq6dlbBfn
qW8r12PPbxK9J7j6gLSPYMq6wZqOfnzvS6R8S+5RbtVG3AxjkcGPDgAAAAAA
gCwaOvqbJ456/WnPvry92HFPlwZD9RNZ6vs58U+a5OrokuPR0sa6UpoFlx+d
s/5itbvcfp9zXkwM7xTqOvqxeYtF2taXDsfzQsqP3kyLU6u2uKdzn4+5+eeY
Eyztubr60funXWyXrj1GLdpF6zopXug6dR19/55nVeohNY859Zgyl84VbyYF
+NEBAAAAAACQRSM+um9vrrbY6NpjRGr6Jay17kJKrw/p6Nr+eIv2suqXGvHR
uTVojfaQbkeqH12yLkOarvu5TUe3XMtT4vOyBDjiBWnWdzNd54vtiu2yY/sO
8++eHL77/eday+PW2km1g/Z8O2cf6YrrYuWViH3faMxdSd2P8KMDAAAAAAAg
i4Yf/Z47V7WOP12sUcux33TWiXI9lbF1whXXJUdHzTlHypvG2T6x1/P50TnW
GaQQW6eccTq0qechNT56bn1JEeNH78ucZczfU64VWx8S65xKIPc52nXegms/
1fred3ulWH/3cH7HSOzxEtMe1H4kvYYmJT46x73KWabSSHkOwY8OAAAAAACA
LBo6+vz5V7WOP93a79QxkLQmpzkOS9GDY+OdStA2Xk/V0TW0I0pdpOy5qd1v
nL9zStxZpvjoVvcE1z2src93+dE5NVwpjZuyjiG1fKXq8ZLxbCjtFno+5r4f
LHF7b7a99+fOnWv+3ZODL+Z78zvGoj9KzCFR8yG9zyhn2SS1eY37sX4N+NEB
AAAAAACQRVpHPzU+nhQbHciOwbjSa9PRh/tcSdBnDyd3O+bER8+N09q39uKI
U+JLoys+ulWZUtpLKj46d9+ZLvnS1s+6SL0ff3uSrnt2xXbZs2e3+bdPKr6y
uLh1vvbgXs9APV/Tw06J65KyF01Jz5zY+ayYdsgtF/zoAAAAAAARTIxXP/7R
DwYxJ1/75YR9fkCvkI6P7tL0edI4x2314zg1Q6oPXNMnyKVdxuTT50enxh/l
KoOl7k65dkz9acRH5+wrJWuYKT5galwX6boIaXZW/aYrFgjl/7Hlzq0vS0qZ
54g5fjh/2nasby2ai5Fi/e2Tgiubb9/UmLqxbneLPDR1dOt5Jeq3iUQbUdfV
tPUv9zf40QEAAAAAOjh9oHrgA7Mnv+kvPHdltfvX0NJBPNJ+dN/abndd6phC
InYChRQPVdcx3Bowx9iyCVd8dK1yUttKqm1y0svxo2uXK7fNfO3SdZwWlH1G
ue/1nOdXrh89VceeTsTq+ZQ6KKX+JGLlrPja3a3v/49ferH5t08KGzdubC2H
myeQru9UXddiDVvbMZJxXUq5Z7jz0vU+iH1XwI8OAAAAANDN6/ePnPVdv+yn
J83zBfqDtI7uiynq9HXr8U/JY7PSqevox7ZtUG+fVP0xVQvg9llz6r6cca5T
6oHDp1dqnKIYpOKja5Wjrd9orpexxnpdRO79E7O3Z4nt6LyyLnabLx7KK/v2
mn//xHLrsltay7B4+U3F9j3fO0fyPVr/e6yOLvXe4JinoLabRbsjPjoAAAAA
gJ+J029M8aIP+eo//8Y8b6A/SOroXbHRv/v955LHgNpjklL0iGZdhH4O5Z1D
0+3yo4fWsvvyVkp9W/WZ2HNT/OjSdVpim1H1E9/vOeK6UMpC1eY14qNT8yzR
1hZzGiXt5yCpE8bgi+3i5tKtv39i8ZVh7fpvet93qXWrvYeFdLp1Hf343pfM
+zoH1D02pPJYTxN+dAAAAACADk7uqhaeP2fKN/3vP/KT9mNPH6i+MnJ+NeuK
G6qx8QLyDopBMj6620uMEhtdenyVo7el+E77GA8htnwxcV1y/Ze5OpyUfifp
hctJx+dHL80Dbd2/ufuD6+e5cV1KIHUdg08zytGIY9Y45K6DyMlTSX2zlGt2
Pfsp8xW+2C6XXH6Z+fdPDCl7pXPtta0Z200Knx+dY11Tah3FeA8o9c75jUBt
K/jRAQAAAAA6OH2guu2DZ/zoc+ZV614d7zzWae4XXrCIT0efGK/+8Xuj0OV7
jqQffd1D61rHnguu/RT72CE2rnLp9MFn5ujS0WfaugGqrpgKJT46R13lpqHl
geZOd6iN1f3ox+YtTrp+yvxbbH+Kifcxpd8I+tE1/dcSHvRYXa3rZ2mfKVdZ
temK7eLybv0NFMLnB3Ax3jXbIuUZw5UPyto3rn1GS+7fHP70nHroSg9+dAAA
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
zKvWvZqufTtP9WMrFk0ZX1x47spq968n7MtXGE4//9vl/3FKXc1asH5a6ui+
eKJu7Jsz7uHwz3GPc6y1eI69tzj2XKwT40fP1aVDMUMtYzRo9Zmh97EtnVw/
eolaQ0pfkG6zEBQ/uvaxoX7DHcPBilLnYbi9sCnl1H4OcuXjq9/4umlslzWr
V7Vef+nSG03quO90+dGt6y/1GyL0/cT9DdqVp9C14EcHAAAAAGDkTGyXIf/u
Lx6sthw83qntum/Fl7/3zWrJfzmvdXyBmC5TadPPS9fRqfHRU+KJco17JNPQ
9nRxaGYWWlcf46OXqrmlwhEfPfY8rfuOq+2474V6LAdKfHQOyOsYMuOjx9a1
dByFPt+zUmXgXnMiff2u47tiu+zZs1v8W8jnh3ex23PK9duT8THBOdewxByv
MS9DjY/exzWJJTyj4EcHAAAAAOBl180fPXucMGde9Z9v/MvqnjtXDXDem4V/
cKl3PDPkdy9fXR2asC9TKbz51194Ty+/4obq3jVrqq+MnN8LHZ3iR/fFE3Xa
uhsTx44vuDzoFuOn6aLNto27u8rDraNb1x1H/8ydN0ntt11+dM64G9TzNed3
ONexuN+3rQeo6+jH5i0uqu5j4N6fllrH0nWTsibH+vlj0QYSaVC1TxcPru2b
wn2bSn8L+b51x7aOibQDtV2knq+p6freabE6+nS+97TKW5/vhR8dAAAAAICZ
0weqBz4wO6iRh7jwgkXVI0cQz6WOi3uz8/Av3v9dw/8/HXX0jRs3qsYT7fN4
JyYtq7jJOeTq6NJj5lLmNSSvLRkfPeY8aX95qbpKalyXXL92zrMi5pw2P7pE
fI6UNKTXU1imS61bDj2zlHqNvc6Kr93d+k3x8UsvFv0OcvnxeQK066iENQsc
aTV1dEo+KHHqUvNf6vsnNo/wowMAAAAACHD6QPXCZ84haeijr5+2L0fpNHX0
qx6edjr6rctuae0jty8/O55o7viAa0yjvZada1xXypiumY8uHd1Ci9HUCrS1
+uY1QvHR6960Jrn6A1dZOesr5x5ru35sOn2L69LVbyRjsJTWT6ikani+/iTh
6bbQ2nPrLubaz7683fvt+cq+vWLfQT5PAHW/dA44Y+do9hlKXBdrn0BM2VO+
VWPK0/WeStnPBn50AAAAAAA5Dj9/X7Xw/DlJGvq1f/UMYrnE0hM/OiU++iWX
X9baTx7ctNF8jJM6VilJt+Eoq3Q5Y/3oqXqbVL4tx+UU7bYNi/gcfULKz8mp
o1u0Wyg+esnlkNbtNeGKU0M5NubZGhODSgK3nq3tu8LFy5P6DvJ5AhYvv0ms
Tbn3ULbClwefjm4x90ytf+65LcnvEfjRAQAAAACEmRiv3D6iX/5P/njoI5//
r9X9z+ysXvsl4rgk0RMdPdePfujwz719phkb3TcWkVzTL+m3TD0+xVukjS/f
vjwOvc593GfUR6pXjNofqOeG/OjU61PzTLnPKXqptDYcG9eFs+052zFn/oVj
LstK6ytBY5yOec2la51MnTWrV3njxUl9B/nisq9d/83sdsq5l0uZ7+X4fqrr
6Mf3vmTe/0J1W9J3GQX40QEAAAAAFJkYr0689dZg78g3TxytTo2PF6n79oZp
HtdldNOoWmx0CZ0zllSdmSv9nHMktdvmMT4dPSWmiGadUcoqnZ9UuP3oqRp4
KX5CbXx+dGt9v422+zDkR5eu89S1JtT4KCnXLbG/WZBSD789SfcYu37aPLcr
tstAn2X+BnLfur7rubz43mkWazFSYodwreGQjuvC8T0zE+bqYq8FPzoAAAAA
AOgt09yPvmLlHa3jzqVLz46Nbq1RlDjWSUnHuv7aiPGjp+aborN3ef6151hS
SYnB4KDq6Nb9iXN9hubcUeo+o9JlCM15xPQbqfqbDrqW5bM89/kfMz+iEYOE
Oh+nGdtlz57drddye5t2lTHWX5/btyTW3Wm9sxxScV1K+DbiXJvTda/kvt/h
RwcAAAAAAL2kJ3703PjovnFucx107Jgi1dtmoR+Wtu7XUg+VjOtiMU7m6nOh
PQc5yhMT1yXmWtxedsu2aTs2th/Fpp8aH73teWF5z0rER+cuU4n7ZpboZ7e8
dzXK6pund/FXuL+B1j20rvVa13zy6qSyW89PWvSlrnMp+4xKlSflnWg1R5FD
fU4HfnQAAAAAANBbprEf3cX96VoHbTWWoI63Qhoo9Rqp/tGUsVqq1pMyXmz7
O4eOruGL7COhevH50bnH8dT19lJ5s9IrpPzobUg8i3LXMXC0I+d9KxnvQXON
gUQba9Wr9DU1Y7u4NXRt13Fx2qdDvXP6v1POocRH51hDwV3HJc07ddUP4qMD
AAAAAIDeouBH37F9x8Cf5XD+8JT/D3/+yEUXTebxkssvi0rjst+7pHXc6dKS
HD9QdT3AR11HP7Ztg0lbSGmB1npWiFg/Ohex9cHla0ypf411KcPju/zoJeg8
ofQ04qNraEYzjdCzixpDpVRcXJW27wznH+f8jvKtrXvs+U1s7ZZ7fErb58xv
NuF897X50bn18dw0StPVOe9P+NEBAAAAAEBvUfCjj20d83q2LGjq6FxjEI7x
iqbOpTV/IEnomrl+9FLnQnI8+RIxW9qu24zDG+srzvlbH+NTaOVJwo9OSSOm
/9X7Dvf+tBztJ7GPQeq6Hq1YHSX2de48U+uyfoxGbJcjR454v2e2HNzLWrYh
pc/TcvUJih+dIx+WcVm47/WUPgM/OgAAAAAA6C0KfvTSdPS5c+cG9bmYvbn6
ojdI5DN1z0mrskjsM0opn2R8k9L6SI4e6utXmmvVpfUjXx/gagO37iImPrqE
55Kl37T40X15q+9XIdE+1GM11khollczvzl+5Jw+TS3Ld7//nPdbw+nfkt9Q
oT1GfUjcNzl1G+t5pj6Tu66TEx+9Kz8lPEdz3qOp+abuEQE/OgAAAAAA6C0K
fvRT4+ODb+g6r+zbO/jXfUvH/N7tpTXM41NPfGvK35rHOlwsGd/Y9sFNG1nH
YznjjRx9RWt81rwOhxfTamwpuc8od5tZeK9jx9UxZWr+XjOuC1Wnl257jjaM
1W7qfvRj8xZn9yVKXcVep+04Lj+6L//cczVWUP3snHOhHJ5bDc1bqr6lY7v4
9hh1+6/3oR9qkfPM8unokrqy1FoUybbIqduu/MCPDgAAAAAAeouCH52D+j6j
P/7RD4LH+3R0n3+rpLEgZXzF5f/SzjtVf/Qdl6ujS8e+5qg/67yE0NpnNKf8
9eOonmGJ8lDS7IqPzpUnyTYMxUe3JrcfSM71lHBPSZWtDyxeflPr94ab/+f4
/nF6eVv6bXuMpr7juTRa7XkQrrRi/OjSz6HSnnOS+Rmu9YQfHQAAAAAA9BYF
PzoHdR1927Z/CB5/75o1reNOlw7HmCJnzbnVGEZ7DFiSViLhR8+tT0ltPkXj
4OoPoXSk/ehW6zO0r5+KRHx0zfaI8aNzXauUZxV1vrDE/FKO0Ziz4Uy3K7bL
myeOkr9/6vus16HuMSpZNzlpcLd1zBoe6fjoEmWTqFvtZwv86AAAAAAAoLf0
0I8eo6PX48DUcfq65lihpHFL32mOiWM0sC4dvW/alRSpaxpioeihHHMzpbVb
qP9SfPG+uC5NP7rmepSYftUa1yXRj57rtQ0dz6UDx/QFTqzmBiyuG/OcCM73
NWKF57ap23el7ZvjyfXrSd8+vj1GU/ZLt2zrnPrUjL2UEx89tawWZZSYg8x9
nrbtNwQ/OgAAAAAA6C3T0I/u4rH7vGHON8Y9DpMei8TEJ8/VQjW1RgudJceP
zjEWTj0vJh2OGD6aaMZH5y6vdd1RoMZ1aSu7qq7FEB+9L3FOuK7HVU9d8wjU
cnPOLVjfn23XX7r0Ru8aOMq3j8/rfsXIiHp/Kam+udLx+dE51kRwfvPEzjtY
tW1qfcGPDgAAAAAAess09KPv2bO7ddzp/GKx4xKqDk3RyiXHN7HX942JStTn
u+jS0ds8Uhx13IeYE7F5pGhbqXqolvap4b/maLvcfDb3GeXs5xrt1+ZHl9Rw
teNeUUntWxLPkRLnEqxxMVZ88/cn3nor+9vHxUBvS3PJ9deR664P9RqTd0o5
UvzolGuWWNex330S5YEfHQAAAADAHvdN9tovJ8zz0Tt64kev77MV0tHXPbSu
ddy54NpPmY1XJMZQJXikUsdeXfno+jlXv4/xo/dNR6O0LXVsnBI3QcOP7rt2
rv4fqzlp6PK5ZU+N65LbF6RImX/RyqP0GhWp2EpadZYzn2ytK3LNCdf/7ovt
snHjxuxvH1+MutWP3h+V95x5tNx3cew6q5i45Rrt647hio/Oke/S12RwzmfC
jw4AAAAAIMzE+OD78sc/+kG15eDxs/9+cld15ez3xhZX//cfQU9PYRr60evH
1lnxtbvP+q53Y0yJ8bT1eGW6klovOXFdujxapVGKztiGTw+19qZz1S13Oin6
VBeun8fsMyrppwxds+u5mxofPbcMFjFjpK5pkScJcvtYqF21npPOI84d28Xn
cX/25e2mbclxrRLWt3HGR+cqN6dezb1Oigv40QEAAAAAZPjV0f3VCw/cMamR
O8752IOtOu/4a9+rbvvg7PeOmzOvWvuTo+b57wU98aOn6Ohu/622cefoprh9
JjXGopJ+Vu0YFpb48jH04OXo6CWUv09zNj6/Y6wfXXp9fCl9VSt/ufHRc/Ih
8ayhxEfP0VB9cHlDLb3lEnNBlGvm5KcE7a/+jOsqw4ObNnp1b7dvS+p3j7tW
aI/R0p9vXP2O8vuuv/t0dO65KW2/unQbUM+FHx0AAAAAgJ+fPf7F1vFDp857
+kD1yMfOmzz2mid/Yl6O4umJjh4b1+WVfXuD404OSok5m5sPLW1HM15BG1I6
ekp5KPFASl27HdOuHPtFxuSnTzqShP+yeaxVfHQfqc8oST86V51r1JOF/q6p
05XwLJTQO7vm8VO/e1w8mLa05s+/Sq2dpPqadPvGphcT18X62RDKk1b+OH3u
8KMDAAAAAPDy+v0jXk9PUOdtaOnnPXXQvDwlM7H769MqrstTT3yLfdwZM0bQ
0AG0YhLk6r4ljjVDOrqkzm/tm+aIE0LJU8iP3qXvSs4PxfTvlHJT9mqTaN9m
XJfcNuWom5wypMQD0n7mxNYDZR5Eql9I1Vfp7wWpuQFfuXxx5VzMl9TvnluX
3dKa1uLlN5Hz2/WzpPZtpZf7zuOI68KxtrGU9ZEOjfk0d0340QEAAAAAmGj4
o5N1dMfJXdXC8+dMnvPIEcRLb+X0geo7Ix86q46X/fSkfd4axOrovvikK1be
IT4u4B7zWHiMtPPHoWl2jfly/eg5moL02DNXr43JF9dcUR0uP7pFXVP6QU7a
uem3zUVY+tE52oXqR4/VB7Wer7F7L6aUSQNL/ZvyzOc8L6cOOGO7uPn/tnTW
rv+mSntJzBuV0L/q5OjoOf0vdr2JlN+ilPoeAj86AAAAAAAPE6ffaNV1c+KO
1D3tpcYqMeHo5ureNWuq/3bTn3TX8xU3DPblvP+ZnUXUXayO7ltT/djzm9jG
LBSvasx4h4MSx08WPjSfjs6hLUrXayntlktMfPTS54pKykesdpMSH51D4+Wu
X8n5F8my9d0bz/Vei0nLUvPVaBffd8h3v/9c9DeP09x932dte4yWBHdbcMxr
+86TiI/eBzTWy3W1G+KjAwAAAAAw0fCRO770jc3VloPHJ/8WrYk3fO1f/eff
2JevBE4fqJ5b+2D15Pr1rbh4nMN/1z20rnp06yH7PP82Lj76ocM/9447U8YC
1mPwEsdDQzj8ppr1Kx0fvURK8a6m6qFtfatUn2PJ16jHdXF+9DdPHDXJW24c
lpAfve131OdSKZpZyf0qN73YueRS6pxj3sEX22Xp0hujv3n27NndmsbHL71Y
pW00oe4NQOlHMX506+/GkjzmlLaq+xfgRwcAAAAA4KEeq/vCc1dWY+O1v5/c
Vd32wdnVrMWPx+nopw8Mjh+m95m/L0MPBnnE+NG79uTK1fG4x3J9jPtCyRP3
OD21zDE6ekqeU8qTE1/CIkaqlCYq5SsuJZ5QTvqS7Tb8OcWPbg3H/It0X6mT
6t/n0GQ5vLhSbaVxDY74R9q4uCtt3yLOpx4b28X5GNrScN9ClPZx39KcbWQ5
18nxzRazzygVqxhS1Lxy5btt/R/86AAAAAAATJzxkLuxxln+8aGOHutHb3jb
Zz283758IJsYHZ1zT67Q+KTUcVGqDlv/PVeMBwt85ZP0o1v7vrn1C+7yxMR1
ka5/jjJxxo73tR/nvdbU0SneTotnQJsfndqOKc/v3GuVqu925Yv7vabZX1Jj
x3DPv4WO862NG9s6FvXN47zr2nu9UOrMYg6YA0pcF98xvvtAev6W2t5UUtae
wI8OAAAAAMDEGR3dedEPTTT+dsZfnhvXBTHS+02Mju7WO7eNO92+X9pjM6qu
pjXukR475dZZbL2E6oOqo3PoCBz1QW0LC8+gz1eco9VQ1gFwU3rsjeY+o9zp
S+xJG9NvphscWr60/ibZ1lrrNHKPbfq23bEp+2r4Yru4+f6Yb54rRkaK+Z6R
bAdr3bipo2usXUyBcq36uRzPCs7vCPjRAQAAAACYOKN9t2reiXFd9q1ZMFVH
j40HA4okFB/9yJEjXv/XloN7RccKmh7flPRL0VStvFYO6/joJeuA3Hlrakyp
fvQSNMHp0LYpcV0odU7Rm4Z9ZZhGve+E4qNzt4m0N93y+RfbHhL1m1vumNgu
EnBri12xXULfO13fM6F5SI25X4nzYu+ZUP9IzVtMfPSZgLZnAH50AAAAAAAm
jm6e9KNv/U3jbyl+9HfTuXL21LEH4rr0m5AffXTTaNKeXJZ6RqyWYa25aIzL
cnSdlHPqOvqxbRvY6jg1poBWfUrmIRQDovmzpq+4DzGIJGPM1NOmxnWRboNQ
fmL6jUTMDuv2jY0RwRXrqzS4fLfcaefWrZu/92nhvjV1Q9zfqXuM+vJJ8Yn3
pS+l1Aslrktqn+DE5zWXqCOJcsOPDgAAAADAw8TpN6rvzTpvMF5Y9tOTU/8e
60c/c1xz/AEdvd+EdHQXM7Rt3OlijHKNIUoZQ1rHIe3T+DrWj54S1zOXkB6W
q0OWuH7ewa2jc5czVP+peebeXyC3zrr86KXep1P6DcGP7itr7HM8xy9bEpYx
MrSeQ9TzNefcrvnk1VmxXe5dsyZpj9E6KbFnJPoBZ1tRiWnr2H1GU797OJ8X
EveW9dwz/OgAAAAAAHy8M/ql9zzpFyyqxsZrf4vwo7+ze/2UvUXrPHJkwrxs
IJ+Qju6LJerWVkuMV6TGItJ6bmz6fdCMfGWq55cS16WEMalF3XO1fUxcFy6d
tMR6zK1nqmYSEx+9ZGZKfPSUtta4dkwftMiv9JolSVY/en/rd8ncuXM7v3fq
cezqOH09tk1y2kpirxPO4yXm8C3iujTzzB3HXCvfMfnzHQM/OgAAAAAAH86T
/sAHzvjJ58yrvvL0i9Vrv5x4X0df/PhZx//4Rz+oHlh4qXcNLfYY7T9d8dHf
PHHU2/bPvryddcwVM1aQ3ofPN/6ijIckx1qUuqOO67njo5c2rs3tHxpxZ1L1
0L7oB6VodL48psZ1ocQlDvWBnOPb/OgWMaJytL3U2Ee5dSfRFpxplHwvx5aV
wwPcFdtlx/Yd3u8dF0O97ZzHnt+k2qZt90fp8U5Sr8+lo1uXrys/Ke8AX7tz
lx9+dAAAAAAAZg4+fdb44ZLLL5v8/80PPVH9t5v+5KwY6K3MmVeNvl1AmQCJ
Lj/62NYxUixRTV1MyqclnUYorRzNQWPc2aWjS16fGiMktv65vIgS8zGp+4zm
Xsd3jEasHmq/kCBln1EOUjWa0PEp8y+lzmlo1m/ssaXpfL68pfYnCin9J+e6
LsbK/PlXtX6fuFh0bd86XXuMavUjjfRj53gl1yO4a3Xp6CXfMyX3hRjgRwcA
AAAAEODg094YLSms+adf2ZcFkOnS0e+5c1Vr2y+5/jryGIOqh2r5BilpSZ7D
rXOl5pXqR9ccb2rFONFKuw/xOahxAjTWt6ReA/HR+foCR3to5E8zTcqaIcl3
nUTMj9RytP3eF+vcF9vlu99/rvV4F7tOu39o963cdCnXivGj565V4C5v7Nqh
UqnH7ocfHQAAAABABhezZff/c0OWfj7rihuq0ddPm5cB8NClo/v8Xi42qfW4
gRtfHM2Zjq8ucnV0aS3Vyn/JkV7s+dLx0TXaKec8LX3Dd53UuC455efqs61x
XRjnX7o0X+3nZ4pXnBp7g5IXyXJap8mVTspenl2xXfbs2X3Wt86a1e2+AOqe
6an1EvO76bAeJHafUUp9auvf0usec/ZMb14DfnQAAAAAAFmcnv7CA3dUfzwy
OxjD5U9u/2r1zP5/Nc8z4MUXH/3U+Hh0bHTrsUfseVz5yBm7UcZ41r76NkI6
OqcOW3JMBY11EU1tiduPLq3ZaLVR13oXDlLiunBcn7veuvzoWm2UEhcitT4k
y0BpT851WDHnlBh3SartfHP9TjNvfutc88mro3wBJb5vUvfjKGEuq+lH54pP
k5svy28Fzect/OgAAAAAAHo4Td19f7k9mpyXx+G+9VxMSeu8ATl8fnT3/5jY
6Frjg1LGQ5pjLa06y2lD7n1GrevKERtXgeIJDqUd0x6U+OgU3zBHuVPP52xn
ant2+dFj0+DU91PTouxPS2mLkp/Xmus2Si5HSptzevqpzyCfx9zt+9P81vH5
Aly8l760j1Rectu56xiufUb7QEnrGeFHBwAAAAAoD7c+c+fhX5jnA/Dg09F9
sUfd8Zzf/JQxB8U3Jj3W0SqXhdfXkaqjx/owJecS2vLRR2L1UKt7i+s6sedp
3QMS+4xqxtWwio9ObUMNb3oJfVqjnqfDdeq4tXE+ffyVfXsnv2dc3tqO+chF
F7GWWWN9Umq61Hde7pqJnPjoMViv9ZH+RqEeDz86AAAAAAAfb544Wh06/HNa
OqcPVLd98L0YMF9+4ZB5mQAdn47uWwPt9PWu7/pmDAqKXqrhRbVKpy/p+bD2
ozexml8I5UMCih9dKv9W8yKabcodHz21rFS9pW3+RVvTKwEpD7r03s9Sc4Kl
evJj03X7hPq+VYbfMxs3bmw9xsWFSbmmxfx7Sfp4ynV98dEt5xpS64Vjvlaj
LPVrwI8OAAAAAMDEyV3VwvPnDOKcj40T0zr49OQY5Kv//Bv7sgESbfHRu2Kj
S66Bpow3uOLX5sSukBx7c2ozKXkOXbeuox/btoFcTu5647oGVR/m8HXH6KGW
dcSVhnVZQtfv8qNzzONIz4Hl+NG7ysVxD2gcn1Kv3OscYp4f3Ncp9Tmcmo6b
k48p14qv3d36reL09eF3zoqVd7Qec/ty/x6j1s8jTSSePRxxXWLqJxSPjfP5
oFHH1HsZfnQAAAAAACbO+MgvvGARXUd/l8P3LRiMQS48d2W1+9cT9uUD2bT5
0V1sfIk10FS4tAKNNf99jR8SW9ZYP3pK3cXUmUU8D2pfSE0j9PcYHd1SA5Js
cwli71UOP7r0M6y5Hqj+s3S/STlX8jqpz17N50gpummOPqlRjpx0u2K7DOKL
vPtN49uPdO36bwbTb95TQ5w/JTaPqfGzU+9Py/eA73oS8dG15nS1riGRF/jR
AQAAAACYYNbR65708546aF8+kE2bjr7uoXWtY84F134qaizQNjbwjTn7qjdz
jq/qv4vVLjh8zhRKi+vSVm4N72xMm3KTE9clxaNXitYXkz/uNfhd15OIj55S
1ph27TqvtPjoMeUrOZ8S9z3Huoac8zljhFi0WVdsl671dU6D5+wb1t8zEjpz
bpqxcV1S5iOskX7HcLQt/OgAAAAAAEy8+5061NG3/oae3tbbfn9yHHLOPTvt
yweyadPR67+r49ZPW45bco6RjttREl155vYWUnR0Lm+eZH1pEtJeuuK6cJZF
q54t651y7bqOfmze4uh0S+lnqfGAuPfzk9B0c+u2lDbRrFcr2tpzim+ZQUf1
xW0ZxD/3rK/7+KUXT9v+odl/fOdT/eiW3wac9aCdz8EaDPjRAQAAAACScGOW
Hdt3TOLGEK9u/ZvqytkfHsRHf2jsH6f8PRaXztjzT1XfWPChKWORWQvWV28X
UG6QR1t8dOnY6Ba6KFccga7xp7YvWWtM1vZ7KT+6Rsyd2DR8v8/RF3Py6Y0n
EKmHctRNKPZsbn348ulLS3oPx7a/NetfYp/RkMbISa4fnTtOjwa55dPwmFp5
WlPjRoeOsWrrtjy5bxPfd8uty25p/b3zC3D3Ja62iu0/FvmPzbtEXBeuMlLW
BWrkM9b/MXxH1Y+HHx0AAAAAIJEz8Vt84wkJZj28377cIJu699zNl7yyb290
bHQpv5BVzGQLzZs6rpLyY4b+3qWjt43tuMkd52q0MbePt0lOXBft+ihp/ogr
L24/3di4LhLxSqixeULzL6l5Sl1XwtUuuXNHnNezWMekWcfaaXLUr/OXp3y7
Og97Ttkoc1CS+rnEnDLlXdbU0bnWJVHqn1IeqX0XuNcGIT46AAAAAEAGE+PV
niduVtPRL99+wr7MIJtmXJennviWf3208BiOa/wSyo+VxpcaW6UUbaqNVD+6
1NrxrmNK0nIp+WoenxqfA4SJiTNOiY8uHaMg5twS46P78l5S/nL6Tc5xfXl+
lYovtouPBzdtJF2Pq30s1tpw0zpvl+BHt3wGlHKfceUDfnQAAAAAAAIHn64W
nj9H1ot+1cPVoYkCygqyaeroS66/rrWtb19+YxFjBO30Y9NN2e/PqqyceeGK
6xLSjqRjB6R6/3LG+9xl6PKjU/VaiZgTXbFhcvMb6ifc+wE4JOK6aMIx/6Ix
HxbTh2LTzPXw9qltOfV33/2f460N5Ssm3ynPzq7YLm2MbpLZH1uz72j305T2
0IrrYjn/FPve0cwj/OgAAAAAAETO7C/KrqHPmVctvO8H0NCnAXUdfWzr2CB+
S1ubP/b8ps5xgC+WcwljnpRrWMf35fSgS/rSpOKjS9dValpWOn4XmvHRQ2ly
XaMPumWXH52qAWoQ8qNr3E+WaM0dSK494MhL39vZd83Fy29K/pZds3qVSV6t
68oh/Xyq6+jH975ESoszr9ZtIl0G+NEBAAAAABioaekXXrCoemb/v1Yn3npr
wJsnjkb/e+TIkQGnxsftywTYqOvoGzdu9I43NccpsT44Tu2TUyuZDuO0UJli
dfS+xNCRrKuca3cdxxkfPTZPlJi0Unni6A8pfmVJP3rsXFjsPEZrnAXP/Avn
eorUOsndZ1Xi/paKf5xzbc05GM65Wyvq3zGpOP29rUwac4ax92/sGp4S5jWG
P9d19P17no3KK8f7UbpurNYYxl4XfnQAAAAAACYOPl1dOfs9HX3rbwrIDyiG
+vjznjtXtY4zrxgZMRujcY9dcvQJiqYRGityaz456aVoOMN1B6l+dIruRRlj
Wo15JcmNz1GaP7q0+g5dhxIfPbYckmXlio/OoZVbo+XJppadUzO1fm5J5cl5
yqlrLFc/ev9Z6bp3XYzWW2K9UvoSV/kocV2o903s+dQ4Rqn1LF1uB/zoAAAA
AAB8TOz+Oo+OPjE++E587ZcT5mUCdL5w/Z9NjiV9nq6hX0sSybGopf+YO/1S
PFUccV1CY0YOfZ0jHxL12eU3DMHtR5eqfw19SVPDquvox+YtJudDW3+T2p+2
hGd3zP3DMYdq8azQzi+ntpj7nIudc3r25e1s8Qq3HNzL2hapdScR68dyDksr
PjpHHWqkm3Nvxl63HlcRfnQAAAAAgAI5unkyRvro2wXkB5Coa+dz585tHV8+
uX591Pd9SeuiLcdcudeTyI/UODqko5fo0UvV7Tl0DWo9pMTnSMk7572Zci1u
XS4lXer1YuO6WM3bha6rGR+d0l+o50yHdVNtlObrl5jfTa1PSjyXJkuX0vZS
nynE9sM2HZ3zuVNKbBfr78jmz/CjAwAAAACUyd7bL34v3vq5K6vdv4Yvvc/E
jEO5fVoa4xQuXTB13EfxGXOPrySR2me0BI9zCdfv6jdafnTL8mvqFLH3KCWu
C4cflfosyfWjU3y1fYw9opmHEspbUj5ScN8lXBq6w+2xTq0H7r0EcubMOO85
yreXhR+dsxwc17G4r9w14UcHAAAAACiPfWsWTI49znvqoHl+QD4hHX0YG10C
LY25VI2Auh6bOl6mjOOldPS+tKvpevkMPbR0P28p801df6PGR9eu/2Y6XPHR
LcuUmlZoHpQ6R9sHfytn2hzxc3Ly0Jbmg5v8+6Ln8tjzm1jrPrXuJNa4SM9J
+tKs6+jH974kmncNr4Vm3aX2mzrwowMAAAAAyOC+s7ZseLx6/L67qluX3VKt
WHlH8N/h//94ZPaUccesmzZXbxdQJpBHSEdvW+tcqn5J0RQ11xZrjL2oeQud
y6mjc3nQu+KPpuoTkv2Bqmt0+dEl+mPKnrYl+PE467pOKK5LTtm19tNr9hvu
uC6S52rcU5JIrK2K6WvUerCo05TrcOwv2qRtv9GUOs9F8zlASSulzCE/Orcu
zplGzLeDNLnXRXx0AAAAAABmTu6qvjJyPuu4Y9ZVD0NH7zEhHX3t+m+Kj1ms
xyvS+eKI6VBaGVPjo5fuh/ZdM1efkCxDjB89VgspUR9LybN0/uvpS8d1oZw3
PK6+31zz5xQ/elf/kVw7YP0cpOSjlLzHUvJ6MPetGjrG7X/OraPfvpweI926
H2jMs0e1oWBcF+770/qZxumNhx8dAAAAAICRd8clC8+fwz7umPXwfvuygWxC
OvqzL2/PHj/k+IOp1+AYb3GN1ShaVW5etLQRqh9dY25CC+5xcshbKhkfvaQ5
jFLSGxK7z2gJtOUtNz469fpS638ktO6Y9Skl91eNuC1d53DFbInBad7c37Mr
vnZ3dn1K+6utyF2zFbvPaN/qp8sjEPOckJ4Hhh8dAAAAAICPXTd/lH3MceEF
i6rR10+blw3k06Wjf/zSi8XHPBZxNRxtY/c++MZz66L+fw6tnTs+eihP1Dxz
jF0l2p4a18XaT56jkcbEibG8z3zX7vKjc86TcPeXyX7T4kcvxbvKfU3J+dWY
NLhiY1jWv0TdcJbjq9/4Ovs3bWj9XYxPnqPOuNbfaD1TW+ftiH702Lzn3GuW
+5vk1GWo7errjuBHBwAAAABgoulFnzNvsCbWxTt33P65/zD5t3vuXDX5+yEu
Nrrz/lw5+/3xxv3P7KwOTRRQNkCiS0dfcv11pG9/jfGFRRqUMRmXv43T25+j
pdV19GPbNpw1ntPUfUrTmKTnYyh+9FT9oC86RIrPOFejovjRc+qLu19Lz79w
9AnO+bK+wrWmqXmuxTuDO93637/7/efYdXTK+ruUsnDr29zrNDj6R5eOrrke
ZiZQLy/86AAAAAAAPEzsft+3c82TPzk7nvnpA9VtH5xdzVr8eHdaJ3cNjnPp
rPmnX5mXC+Rxany8Gt00Opgj+chFF3nHlF17bg1pxuPVHjP0/VoljfdSNCwO
Pzr3OvgcLaHrHKu2aV63eY/F6qEl9C2OPHBp/1RS4qNzzjNw+Zdj46PH5J3i
i+Vsp1LS0PC/a8G9dkkSt2aOS0O/YmREvd9YkdquOf0gx48ecx2NPtk1B8Xd
/tzrU+BHBwAAAABgYt+jg3HCrDtf9B7z+v0jg2O++s+/6UxrqMm7mC5j4wWU
DSTx5Pr10WPPBzdtFBk3pIwROPzbErqQ1DiJOx4AFd86doqOXro2k9OmMW1D
KXc9/S4dPbePcHlVNfVE7X0S6zr6sXmLWcoVo9fEnhvKQ2j+RSMWB7UNcvLE
da5kjIwS6lgaiT2b3Vw/l47e/N7JaR/N93fpfaauox/f+1IxZdGuN45nSMqx
8KMDAAAAADBxRkdf9tOT/mMOPh3U2h0Tp9+oHvjA7KhjQTk4D/o1n7w6eWzZ
9KTH6C9dfjateJ255I6DrcuiXa8hHZ3bY9WnuonVi3J1Jeo+o9Z9VbNNONPu
0z6jbcT60Sl12bc6kcy/lF+Vw9tPXbsTSkOjHwyvweFJX/gHl5r2O6m64e5n
KcdR46NTSZnTpfZXrjldjvsGfnQAAAAAACZidPSJ8eqFz5wziJ3+yJGJzvT2
rVkwOf4I+deBPU5Dd2uWc8eYa1avUh8DUccZWpqPtAdeStehjiFT/egS40xt
f2gpGqH2PqO5eplVzA2pGNspcV24y1R6v8mJE1NCLBSO5xLHGhCpvOXkT6t/
+tbApF7fxTTvik8Xwp275eBekXpN7ePN40M/5+RJq3254qPH9A3ub4FQGtS/
c9EWVxF+dAAAAAAAJs7o6Jf+3b90HjeM2TLrqofPjqFe48i33vc1h9IE9nTt
Jcqx5pkD6RjIlv5oiXSsNV3p+OgabUatQ878payDiPGjW/ePXHz1wBFzJFWT
auL6eZeOzjWnELueJzaNyX5D9KNLkRszI3V+R7rMFs+TmHrSKr9lP3F7js6d
Ozf5u8Z52ce2jvWqfWPaOvYYiTwN00yJ62LZd7TbLDb93PcV/OgAAAAAAEwc
3VxdOfvD1YXnruyMaT4lZstNm9u19Npeo4PjHt5vXz7gxe0nyhE71I03rcbh
1t7yUsqYg5TfkkNH73O9SuYjdKzPV2y9VoPz+iUw9PoN8ysd10Vap4vxo2vO
Q5WG9toOzvNLmiOw6hfOU/75BQuiv2ncsTE+9OnWz7X6Ql1H37/n2aT0ptu7
hDqHm1IH8KMDAAAAADAxMV59Z+RD740f5syrbrxteXXTH/5RddnvXVJd/d9/
NEUvP/Xiqvc18s/dXe08/IvJNF7d+jfVwvPnTBmLhLzrwJZLLr+MRUd3rPja
3b0dx1DzzDXukYhlYOGTy42PnqsDSZexrV3afkeJ48MFNT46V53GwF0vWs+b
tuukxnUpZe3/kBQ/Ovf8TG4aFu+X2NhR0jGNpPtOTl1zx+PIvUbXe+Sx5zd1
6ulufZ7zr3PVq3Q9apLSZqFnu3V89JwyWs4Xcb0r4UcHAAAAAODjndEveccV
i/aMTx7nPOmPfOy8aG0VfvRy2bbtH9g0dIeLsZ47LmiOObr+Fhqj5MQB0PLX
SsUT0Bx3x1xLw48uWWYt3VuiDDlxriXi9Zfmx+5Ki6oJOY5t29DpR9fWxlL7
MHUdA2ebal9Tc56Ls56k6yo3T9btGcv/WbS82vk7IwP+97K7eqFfx5Y55lvD
sl9xxUdvHk85l4PYODlW9wT86AAAAAAAfDh9fNKT3uCce3ZOPfZMnPQYEB+9
XO5ds4ZVR3f41kG7eD+SYzKp8VKOvlJy/JfQ2DqlvF3X0oiPHttmpWtkbeWl
eBa543PE1jNXm3J5obXvQ459Ri31Ro746ClrNKzrQ5OucuTGuOfMUyn1rJ2n
k7evnezz7v/WZdY8NzYdaox1X/oafvQS+7g18KMDAAAAADDTiG0+5NM/PHrW
sYfvC8eZvPCCRZ3x1oEtS66/jl1Hd2umLcYrXeM4yViTkumEvGNcHmKJ87nj
ukjWv6TPmTv9mPS44rpo5lminijp5+jzlPjoHPEwqD7MnHUMpZLzrPQdn1PH
0nN3lPkjjncPtc4t+lfbNVN09Bx/d84cCaXv9Om+TdXRqfd0DLl9VnI+l7qu
oAn86AAAAAAA/Dhf+nP3LhnEj5w//6rqzzf8T++xP3v8i50a+ujrp83LA/xc
88mrRXR0iTGXxvjQej1wX2mrB424LppaFYfurtVfKHqo1jxGbFpc6yOkylJP
g8OPLt1nhnuj5vQbzTnE0HlUD3fJa4a48tmXdTgcZcnVFa386DntytXHNZ/x
XWk3dXTNe7KUuQotv3z9uQ8/OgAAAACAPb86ur96bu2D1V9e/yfVF67/s8Ee
pfc/sxN7i/YAt5+Who5eives9OtK55kj5kLs8Ro6ulQdctRJ6jid4mdraqNd
fnSpOQCKP64UqHkO+dE1/JS+68WUjRrXhUN772scBon9oal1r0HKdUvcQ7uu
o2u+pyzalrOPxOwtE1w3VdPRj+99qch6k7qvNJ8HzWvBjw4AAAAAAEA+K1be
wa6jP/vy9qTxQ47nl0MLlPZkxVyLIy6LtjYXS4qOLh0fuEQ9TtLXXWp8Do6+
SX1GxOYhp96ofnRLLdalnaqjp7Sn79gS+mdqHqTihIXyYe2hLTE+GrWuQ370
EvqnZP1pry+qw7HPqHX7SH2zxsxL55YdfnQAAAAAgII5uau66Q//qFr36rh9
XkAro5tGWTX0j1x0kenYRiIOJXX8JJUXSz9TDDE6OkW/ijk3pQ6tx+MpeQ/l
OzY+urVfOjU/1oS0DEp89Jx+kHv88Jiz1jF4dPQS2kHKS5tyXam1O7nnc+h2
MfPYFj5xrXqkxnXJeQ9peJwl1h1R8t36niLsMyrpTeA8t4RnZxP40QEAAAAA
CmbfowNtddlPT9rnBbRyanycVUe/ffmNIt/91HG8pr4eohS/eG75Yr3jXTp6
V4xmy7aRrFfNfEr50VM9clx9nWPORIMuP3qJayxS1zGU2A6c2q9k/kvonxbl
ylnXkKPl5tZvm46e835yvpHUvHT1V07/cVddU9qN2l9i47pI3cup9S9ZF5rf
qPCjAwAAAACUy66bPwodvQfcc+cqtZguEmOUkjRy6TEY93hSUtPnio/O7f+i
pCfl3eRup1g/eglo6ou5601iofjRS9BZqfHRNdue87lg9T7irmNNjbSE/spB
bnz0Usqfo9mXAkdcF0ssY1VRvnPgRwcAAAAAKJNTL76vzUJHLxvnSZ87d66I
Fz3lW785JrEYo0ivCZYcS3F5RbnKF9LRpfx20u3P3W4ScPrRteeZOPpoSpzx
HD3Cd05KfPSUOsgpb05fzu03KR7htt/FPvtLowS9zDJvoXYsJV9d1+2K6zLd
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
dIs13NK6uZXPL8dXnFt2Kx3QYg4ldW7D7acbGx+9REpZx1BS/A9L726sDq+x
FqmEeCaxdZRCMz567Hnu25q7jKXprdJpU/YZlZo7kJo3yTlPqs3gRwcAAAAA
CHD6wOS+oH+xM03zPvXiKq+G7mKsj40XUD4gDjWuS0m6MUfeLHWV3DrP9b5R
ypfrR8/NO0dbWNSTRJl8fvTS8qmNlBd+SN2PfmzeYrXrxl4jdG+1+dEt50Up
9VPy/aldF9L5Dq1V4r62ZFwXC12f2+Ms2b6ceQ3FdXn1nePJ1+RY8yVdn9Lp
hoAfHQAAAAAgQE1HX/bTk2nn1rzsdS796nPRvvZT4+P2dQBIDHT0M/pKbFyX
4fgnltDeVZx7W5U0HgrFRukzEnFdpkMdcekfzb5Tv+coca5jrpVSvrbrxOid
2vEkOPpVanz0UubkJvtNIK6LpFczp59yxlm3fF9YeYW5YnxxoeGrb36bNP3o
0n0kd16YW2untkPueqX6ebHx0Uuinv+U2FpUP0CoP4Tqvd7v4UcHAAAAAAgw
1NFTYqMPadHR7/3hwfjz9z2ap9+DouCMj17i2mKJtLnyEjt/QM1fzhgvlIZ1
XBfquJXbYyuxr6GP3Pjomu3TJ2LbLqSjS16b43yuuC4p8wPTrZ+VotVz552C
rw9q7jfre1+F9hktvc1S89mlv2qXtUtHT5n/kZhj6Eu755QVfnQAAAAAgABn
dPQLL1iUHIdl4vQb1XdGPvRebPUrbqhGXz+ddP6pl9ZCR58GNHX0nYd/0csx
Rx/yOJ3Km+JHD+kplPkDbl8zZ71KtVGOHmrdX2LzluNfT/V95+6L2Yzrkrou
J6edKJ72Zv6k9hlNhWu+kKs/5PQFjhgSKfOWlLxK1o9E3bb9LXe+KaSjc7Yh
R9tMJyT86FaeB8r6Lom4WF35gR8dAAAAACDAyV2TOnqyH31ivHrhM+dka+F7
b78YOvo0wOdH5/LzWI0fQ+Pw2BivueOnkmNucugoHHFdpMbE3ONWqdgkuXnl
8KNztFdb+UuJpR3Ke865TT86h5aqWWatfUb7pBlK3tsSdSGtgfep7WLyH9pn
NDQXVuo8g8VzNnUtRuw+o5rxdEpsa+74f/CjAwAAAAAEqMVH//QP0/YZdQx1
9FkP7086z3nRr5z9Yejo04Cc+OgpYwKu8UwpHrrUPGj4pyzqQyo+ugRamgO3
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
KFUPHG1Tmn+QSso+oyW1Q0np5dAVH51rnoCrLtqOSZl/yYmdFHNeiNjzOeet
JM8tIX3J/Gi+o3OupRXXpS9tm5Jfat5j4qOnPIf6sIav69sq5v8ceYMfHQAA
AAAAAFm64qOnai2SWkVuXBJNfWu60lZf032fUc2YEqn6EJcfnapFcrZHbuyE
2GcQR165/OhWz582P7pFTIQS5kc5ym35HuHe45WzzBpx2n57Ms7f7NPRm3vw
puaNooPGeqNLWwuU2sY+P7rUHBylPjjKWwqIjw4AAAAAAIAsdR392bvuKm78
0gdStLv679asXlWt+Nrdg38l6yd3DNiVnz7HR3/25e2T9b52/TeL6S8+mppP
ih9ds+/E3AcPbto42e/373nWtB/EaJH1/zd1dM1YPhz9qt5vJOMVS5Ey1yr5
roltx+H/68+b1Y/eT7qWVCwkrXezttf9/yxaPtnn//eyu7LzUkpd9ukbqv68
+cfvyX0jSM7vWrVDzLNs+F3g/l7/RoCODgAAAAAAgCw7f2dk8pv7b5fcwjZ2
yI0LkJM2dbxtMTbdcnBv9eEPf3gS6zym1mGujq7hZwxdw2nnw3r/089+Njm9
1HE7t+87xo8uncdc/uhLX5is+1RN0ZouP7pGPKdUnbir3+zZs1usD3DML2j2
V+m+P/b8U9WsT8we9PmFf3CpSR5Sr1FqDI2Yc+s//68rPz/Z57dfu1g1X5LX
0IoRkrsO0FH3aEjq6Jx1b7VOhdPv7up6WO+DNihgnAEAAAAAAMB0oktHL8n7
xDU+zPXXxsYmSMlnjI6eMsbNiSWa28YhHT01lgOHbhZ7DeeJHta703Vzyi9V
rzFw+NGl5558f19y/XUkHT1XM7KK6yLtQc/uNy06ek69a3nAOUjJa+pcbVd6
jz2/abLPz59/lUr5rI6XiCFCSSdFR5eK3SGpc4doK5OW78BaR9d+TmnGfukq
w49/9IMpz3rrMQYAAAAAAADTjRQ/OmVMlTPe6TuhsqT40aXzkkqf47rUdfSh
H12yrrjbgys+ulZfqbNoyRcn6z4mpk6qdse9DsYX18XtM9oVY7lEKDo6R1+S
6le+dEuJafzd7z9H0tFj15xQyq05J6X5jqf60aUo9TuHs23rz5stGx6PvmYp
83Qcc/u+/KfeoynHw48OAAAAAACALFQdnWN8YQl3jJjYMnfFdYndh0yS0Hpn
Dh2dUteUegjp6BZ58p3f9jufH50zNkLqMbFtGetHt3o+dJWjKz46x/oPLu+6
79h6v6nHprd8FsdqxKnrW6zy3va7XD96qn6u2T7c+eHyaTd/R9HR2/qYluar
tY5Fct2az48utT6B+kyIPb+Ub1dfnup+dOjoAAAAAAAA8JMS10V63Xjo/Bx/
kOSYh5q2ph+9DocGxe1Hz63LmDZv6hspOnruPAvFexYiJz66BW15qMdHH/rR
tX3KufWUE9eFG8q8X2p8dM0YFBb9Vet95tPRLb362nWaq1FS81+qH926nTjz
6nsHW8d1sajrEtZq1P3oiOsCAAAAAAAAP1x+9Jjvf434o6WMw2LiS8Tq6Cmx
Kij+uJR6jNXROceVXO3MGdfFQjekxEfX8kz6qPvRY+K6lEQzrktsveSuL+Fu
H4u4LhLl0rgGZx6pcV2k6yelv3K+wzWenT4d3XLOXWp+KrQ/SigN7rV51jo6
ZU6Gez4nt31zrgs/OgAAAAAAALJIxHVJHTdYxSqJOU5yrW+uH72EmAapfvSS
/HbNfUYt85bTlhLx0Zv5kNJ66vHRQ/uMxs4Jac3huX7ui+vSB+r9Zsf2Hdlt
G/vsltayU+cGc/LK0cbOj/6Riy6K1tE5y2VJCWsMJPzoUnFJYtHaJ5Sadv15
49PRrfuu5FyO1hqT5s/wo9Nw70ZXp9b5AAAAAAAA5ZIS16WJZBxvjv0CS9Cb
ffntio9umS9f3TWP44zrkuKHDOU9RmN1PmiJ+OihOuU6n+JHty5bjB/del7N
14e44rrkas/UeinFj04tFzV2iHT+m/nIjY9OLWPuc5WSH849LzieA5w6uuTe
kDH1YZVGbpnqfvT6PqM5325dP1tr8Sn1rTH/BT86jVf2vfdtfs0nr65GN41W
p8bHzfMEAAAAAADKItaPbjVWkbgux1iGI18l6Oi5UHR063Evtx9d2nf26jvH
p/w+Jz66hIbWVW7f9erx0UN+dOu2aNZ7CfHRfWWMKXeMH51Sf6XeR23k3A+5
+Rt7/qlq1idme3X0nPtIGutnNFf+UnR0q3Uufabr/aMd1yV3Xj2WvtyL8KPT
WbHyjsnvlLlz5w5+dvq6db4AAAAAAEAZcMZ1kVwbTx1vUGJjSpTFpdPU0WPG
fKVoVTE6uvQcSC4p+4xS44nEppVyrrYfnVM/4I6PHpM3rn7Y1NG57k+JeNRt
+cj1o3O0P9W33Ge9ktOPntPuXOdbPs9z16eFdHTuMlmsw+P6tuE4p36sdXx0
rnbkiC8lcV0fdR0dfvQ8nAfd6ef1b/Th83vjxo3wqAMAAAAAzHA046P7xghc
Y+k+jLnqUPzovmvm6FU547UuHb3p45Xyfub2m6ee+JZoXJfcOo2FIz469V7M
LW9dR3/8vrvE6igmj6n3RoofnSPevGS/2b/nWVL99eFZHFvvOfdCSvlT9hmV
rleONsyNXWFxD0jER+eq75j6p8TxyWkjTrrio1v3C6nrpraxxPu2HtcFfvR8
XEyXpo4+xO13ceuyW+BRBwAAAACYofh0dEvdJ+XavnEKV8xdrrpoppESH106
bkjO3znjo3OWNWZ83ozrolXfXOW3jI9Orad6XJcYP3quj1kiPkmMH12zXlOv
LxkfnTuOUOocRwnzFL48hPzo1HeV5JqMEjXOtr81526Hx0nq6CX0Oal8Ur+H
mnFd6vHRtUh9BpXenrHlgR+dDxcj3ael15/pT65fD486AAAAAMAMIuRH940t
uPRrzXENZ0wWjnT6FB+9WeZcHb2EdQi5+4zmrqlPvYdCdPnR267FUX+U2AH1
n7viupSu9fn86JxzdpLl69LRLTQk7XqQmFuJoe5HX/gHlxZXr9Zw7k3aJFZH
73pmlVafpeXHR25cl661PDntUsp3pNa8K/zofLi6DenoTY+6e7da5xsAAAAA
AMiiFdelRI+vtAe9Sx9ofp/Hniddl7Fph3R0zfZOvVZKfPTcskjGZ6DGdaFo
4lQWLfmi6D6jkuXQ8qNzlbH5c8w+oyXlXyM9jTbUjI8uXW8x71IrfbMtXZ+O
rnHtUud9uL+HfH+rP280/Ogc6xi7juPuM1LfCPCj83LPnauitfQhV4yMVOse
Wjd4z1rnHwAAAAAA8BPS0YfrpaU1Z63xE3f6lGv3yY/epK6jH9u2QbUNqePP
enx0F2dEWovmTjsmrkuqhkip/5T2qOvolH1GJT2BPj06JT567PVS1zhQ+l2s
ji61psjKhy+dzxA5OnrMOhOOdLTuI6sYG9xxXbjqL6W8JX97deHzo0vVoXQ7
tMG91itmX41QHuFH58XFa7ns9y5J1tLruPgwK1beMVibdOTIEfMyAQAAAAAA
Gl06OnV8ExpjdOlxlLFjaetu29JOiY+eUh+xa6Bj6rqr/XLiumjq1V1ldzr6
rE/M7vSjl+Tz7vIVU+tJm7a4Llw6UVcf52iTFD96zj0lDUd89JxnDUfbUtuQ
y1ca0gDb2jdln1GOOikljgX3tXLykRvXRauMWtfl9KDHxuPPjesi3Y9yy9SH
dnbAj85P156jOcydO3fwLTT0rCO2OgAAAABycDHlPn7pxQPc9wX+jfvXQf2e
czH9rpz94QEc34d/PDJ7Mo8+3DW7/t52fDPdtt9p4a7bVYZQ+YbnN+sttV5S
iUm/7Zi2vNX7zbAvxrRbbr7b0klJv57/Zt1L13FMfwmVY1jHDlfnw/qPLXvb
/UMtX1uf8PWV4f+bz57YvPrqMFSOrrqN7T/Deq/3eff/4Xm+PHT9nuO+CNX1
MI/u3yHD53zzfeLLa+5zKbVOpOqISky/i+mDbc+bUL/ueuY1r5/yHOR4lzbP
iU2D41nkq4Ph/33Pyvo9m9relL4a83dKPXPfKznP2eZ3qa/uY/sHx/sppQ26
0um6F1Pynfu9EnNMsz+0fSPg37x/h/9vPsc5cWm7OVbnWXea/aHDPzcflwMA
AACgfJYuvVHs+wQAAAAAAAAAAEhFUkdvw2n3zmPm1jJYj9EBAAAAUCb1tf4A
AAAAAAAAAIA1Gjq6i6Pu9jV1nvQ3Txw1H5sDAAAAoGxcbLgTb701ift+wP/D
/3f71byyb+/Ar5D7b/3b0K0pPLRn1+D3zX+P730p6l+XNx+/Orq/9f+x56Ti
ux7X/3Ov6XDxOOvfz5zlyKn7nLZxZaC0G0e5ctKu7zPq4qNr95fY8nX9zdW9
u//d/4f/tp3L0V+52skdU58zde2Q2mfa+O3pA8lpUI7z9Xtq3aSm08xH6Jr1
Z717rnPkW7pfcaVJyWfXOb6+V///2PNPTda7W7tPqVeuduBqQ+l85rRJ/f+3
L39/reOa1auy64bjvatZz9Lvsmbe2t43V4yMTNa9iwGdkk+p8lDqLrd9Odss
Jn9u74thvbv9Md33QX3cgH/T/nX15/Zu5dbML7n8ssFabBcj3Y3HECMdAAAA
AKA/1GOsu+85lnQnIr8Hh8c1/829Vs75GuX0nFv/pmbJe2o9ho7jrE+utNrS
SUy7rms5XVe1z8wkWtqlrmtt3LiRfs/n/J3rnBKv0UH9WZ88Zvc9qynPbg0K
yGdd11pw7afS+kdqfktoh5g6V8qn086zvm9y86f5Ti2cuo5eTGwK6vMg99vW
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
nZH39avfvXz1WWv53f1S17hm8np/zrrHO9mu7kPgnaxT73gXF8LJXdXC8+dM
aYPRtwvIFwAAAACAJT3wm0FHl6OpZ33l27uqV985Xp0af29twgsP3OEdt0PT
Embfo+KaAKjx7njxtg/OnlLfbdohIPLuO+eBD7xfz5/fcsx/bEPLRf/3M1x7
72J9rH70/rPigcy66uGkujvyravjnvdHN0+Zg5+Jei5n3eOdbFf3QfBO1ql3
vIvLodHnXTscmiggXwAAAAAAVvTEbwYdXb79O7+N3x3T1OdTZvr4UYXTB84a
R6LOBWkZt89a/DjGiwKcemntlHnb0NxsXVd0x2/9jX0ZSsTFP5iy92RD/0h6
djS18UA83KZ/etlPT5rXRy/rHu9ku7oPgXeyTr3jXVwUZ62/mIHzpAAAAAAA
dfriN0N8dCHO7JXltKngOs2Wsc1MXsMvza6bP/revfa5u6fMY83UMbsoDX80
PFey1N87Ubp4TZ+J0d3B2fWW6g9tfht0rhlou9ZNm2f2cyq37vFOtqv7AHgn
K9Q73sVl0fBaORbtGbfPFwAAAACAFT3ym8GPLsNwXW7snkHvjH5p6pgdmpYI
p15cNUVjHFs6C2N2QXYsmTWlX3fF6wZ0hs+d6LqGjp5Hpj/UrUGbomXFxMNt
enVnegzdzLrHO9mu7rvAO1mn3vEuLgzERgcAAAAAmEKf/GbQ0QU44zNJ8q81
vqkxZhfg6ObJOh7eky985hyM2YUY6iN1znvqoHm+pjNnrRNf/Hhnn57iX4ff
Np5cf2jjvHM+9mD4vHffJ/XnlOPSv/sX+zroU93jnWxX913gnaxS73gXl8eU
vRoY13YAAAAAAPSRvvnNoKPLcPj5+6p7f5gwTmmsI8eYnZnaGtrJ2EkNfQpj
dkZa4t06DQtryGVpjs0dV3z7n6LaCLFZE8j0h+69/eKsOfOz5kdm8rMqs+7x
Trar+1bwTtapd7yLi+T1+0emtunD+83zBAAAAABgRs/8ZoiPXgiNsQ72/ONl
uKbfjR8n67U5ZocfiI1mTIQZ76HVorlW/Ayf+ftDZx07jEl81n0BwmR6opvv
+VjtpL5/7Ix/PwjF6D4LvJNF6x7vZJ16x7u4QN7t5829jGfa/tEAAAAAAHX6
5jeDH70QGvoXvKGMHHx6sl7///buPkaKOs/jeDJR/jtNCGfI/UFi9r+Nyxk2
h2HuxFtXxj98YD1OTtiT5HzAwAoKyIPyEMI6nswJJ8goyIMygIwoOiDgAHLr
ss4wE8/DMQMOmow4E1ZEIy1BJyZtfte/YqqnHn711FW/qu7p9x+vjM50V1X/
qrqL/tS3vr/ln/009Htq3/RQzJ9lzO13dkCcO7ZdPHX/FNv8EdLYP/xR7Ork
PvMk2HqkW6/pPt1WPL6PPvFr177JersrSin1oYq60NA1iI71VXWmq6FHtxLn
ZH1jzzk5nXHnXFyeLP2MuNcFAABUvQqsNyNHLw/O/pXUpiRkoLvYZ8n1XqT2
TQ/nPMvj7dmhH9nPmx7d8Tmv5xaNnmgf76krGe9SlFIfqrhXIPTnvCJHr9o5
6VKqR+ecrGnsOSenN+6ci8uS87PFdl2k8P5oXN8oTn/H2AMAgCpRgfVm5Ojl
4fjMGmqwNPi4/sp9HrK/kqsfKLVvWnjVQ0v3LNsodrceFx8cPij2rFnsqoUz
PvuY7zIR1r4tKne925/5NlashOrRS83RqzrXTakenXOynrHnnJzeuHMuLk/O
c3Nxzlfz+E9xjiwAAIDMVWC9Gf3Ry4DlHmep/pPL2W/TMFCcc7HwnWRDn+K7
IN/ZtVB9d/esex7odvUJNR4/uyXz1zEcdK+Z7l1vWNgn3EteolLqQx21oeTo
KY59VJyTtYw95+R0x51zcRlSXE81P1/Ma0xc4wYAAFWlAuvNqEfPnq3uLez9
C/BnuablOacW39m1cPYUCez9WfjcdPZwlZQ5C6Lpb/HM0c08i97oJSihPrSY
IVbQvw/KUgr16JyTNYw95+TUx51zcRlyXKMzx9e85sE8DAAAoOpUYL0ZOXq2
rNmK8j5nRFf4Lt76yJUcRPb49Py+yXd2LWPvmiMizLgqPv/kvJiZv54KdrFj
m3+GTr1t6TLuj06Orq8enXOyhrHnnJz+uHMuLksXm2d5noflfuXzBgAAVJtK
rDcjR8+QZb6tqp43LmHm95TA2iu+syev1LmWC89z1sExx1zprPOYmT1u8wNf
io7/muH5HZ6awwhKqQ/9vr3i7lcrSzrr0Tknaxl7zskZjDvn4rLknGPUOsb0
ogcAAFWpAuvN6I+eneJcQ/RWSI7lnpAw7x++syes1O/uBb0NdfrysSpi+56u
mK9M1qmr5pSj9jaCjOvR05qHvCxprEfnnKxh7DknZzPunIvL00C3ODjjRts5
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
AAAAAAAAAAAAAAAAAAAAID3/D0FlTdI=
      "], {{0, 1136}, {1490, 0}}, {0, 255}, 
      ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
      Automatic], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {1490, 1136}, PlotRange -> {{0, 1490}, {0, 1136}}, 
    ImageSize -> 432],StyleBox[
   "\"Figure 8.17\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.17: Example \
6",ExpressionUUID->"f4d6a28e-47f5-4a22-b338-1b4f312f12b2"],

Cell[TextData[{
 "Focusing on the first trapezoid over the subinterval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "3"}], "]"}], TraditionalForm]],ExpressionUUID->
  "fdc16f6e-3bcb-403d-b3b9-9ccd667a3ba5"],
 ", we find that its area is "
}], "Text",ExpressionUUID->"12029dcb-d0ca-47c7-908a-d8f9238e2c41"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FormBox[
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{"area", " ", "of", " ", "first", " ", "trapezoid"}], 
            StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
           StyleBox[
            RowBox[{"A", " ", "=", " ", 
             RowBox[{
              FractionBox[
               StyleBox["1", "TypesetAnnotationFont"], "2"], 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["b", "1"], "+", 
                SubscriptBox["b", "2"]}], ")"}], "h"}]}], 
            "TypesetAnnotationFont"]],
          TraditionalForm], "=", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], "\[CenterDot]", 
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "0", ")"}]}], "+", 
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "3", ")"}]}]}], ")"}], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[
              RowBox[{"measured", " ", "in", " ", 
               RowBox[{"mm", "/", "yr"}]}], "TypesetAnnotationFont"]],
            TraditionalForm], "\[CenterDot]", 
           FormBox[
            UnderscriptBox[
             UnderscriptBox["3", 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox["yr", "TypesetAnnotationFont"]],
            TraditionalForm]}], "=", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], "\[CenterDot]", 
            RowBox[{"(", 
             RowBox[{"0.51", "+", "5.19"}], ")"}], "\[CenterDot]", "3"}], "=", 
           RowBox[{"8.55", "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"774f0d4a-14f7-41b4-82ab-acb0cec7747d"]], \
"Text",ExpressionUUID->"708e7cdd-d90e-42b0-a592-f1653f80c727"],

Cell[TextData[{
 "Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "'"}], TraditionalForm]],ExpressionUUID->
  "6e9496a2-d823-4e8c-93b6-eefd4905e8e2"],
 " is measured in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"mm", "/", "yr"}], TraditionalForm]],ExpressionUUID->
  "43713954-a6d1-44fc-9c85-75346a99231b"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "bfaf3267-2e77-41fd-927e-dad1d145d3f8"],
 " is measured in ",
 Cell[BoxData[
  FormBox["yr", TraditionalForm]],ExpressionUUID->
  "ac1bb11f-5466-45da-bf70-33f958ab3e7c"],
 ", the area of this trapezoid (",
 Cell[BoxData[
  FormBox["8.55", TraditionalForm]],ExpressionUUID->
  "8646b9df-cb3b-4518-833b-fa48c5cfe6f6"],
 ") is interpreted as the net change in sea level from 1995 to 1998, measured \
in ",
 Cell[BoxData[
  FormBox["mm", TraditionalForm]],ExpressionUUID->
  "15b806c2-337e-465c-90ab-1bd02d00e8eb"],
 ". As we add additional trapezoids to the ongoing sum that approximates ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "16"}]], 
    RowBox[{
     RowBox[{"s", "'"}], 
     RowBox[{"(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}], 
   TraditionalForm]],ExpressionUUID->"4c901613-cce7-466f-807e-5e7f0c1fcf38"],
 ", the changes in sea level accumulate, resulting in the total change in sea \
level on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "16"}], "]"}], TraditionalForm]],ExpressionUUID->
  "b9dc40c4-42ef-45b0-aa71-12a031eb5600"],
 ". The sum of the areas of all seven trapezoids is "
}], "Text",ExpressionUUID->"090a53f5-3adc-4a7c-8da4-446d496cf3f3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         FormBox[
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "0", ")"}]}], "+", 
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "3", ")"}]}]}], ")"}], "\[CenterDot]", "3"}]}], 
            
            StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
           StyleBox[
            RowBox[{"first", " ", "trapezoid"}], "TypesetAnnotationFont"]],
          TraditionalForm], "+", 
         FormBox[
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "3", ")"}]}], "+", 
                RowBox[{
                 RowBox[{"s", "'"}], 
                 RowBox[{"(", "5", ")"}]}]}], ")"}], "\[CenterDot]", "2"}]}], 
            
            StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
           StyleBox[
            RowBox[{"second", " ", "trapezoid", " ", "\[Ellipsis]"}], 
            "TypesetAnnotationFont"]],
          TraditionalForm], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"s", "'"}], 
              RowBox[{"(", "5", ")"}]}], "+", 
             RowBox[{
              RowBox[{"s", "'"}], 
              RowBox[{"(", "7", ")"}]}]}], ")"}], "\[CenterDot]", "2"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"s", "'"}], 
              RowBox[{"(", "7", ")"}]}], "+", 
             RowBox[{
              RowBox[{"s", "'"}], 
              RowBox[{"(", "8", ")"}]}]}], ")"}], "\[CenterDot]", "1"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"+", 
            FractionBox["1", "2"]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "'"}], 
               RowBox[{"(", "8", ")"}]}], "+", 
              RowBox[{
               RowBox[{"s", "'"}], 
               RowBox[{"(", "12", ")"}]}]}], ")"}], "\[CenterDot]", "4"}]}], 
          "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "'"}], 
               RowBox[{"(", "12", ")"}]}], "+", 
              RowBox[{
               RowBox[{"s", "'"}], 
               RowBox[{"(", "14", ")"}]}]}], ")"}], "\[CenterDot]", "2"}]}], 
          "+", 
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"s", "'"}], 
                  RowBox[{"(", "14", ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"s", "'"}], 
                  RowBox[{"(", "16", ")"}]}]}], ")"}], "\[CenterDot]", 
               "2"}]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{"\[Ellipsis]", " ", "last", " ", "trapezoid"}], 
             "TypesetAnnotationFont"]],
           TraditionalForm]}], "=", 
         RowBox[{"51.585", "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"93d286e8-a715-45b1-800e-d739b053bf53"]], \
"Text",ExpressionUUID->"606501d6-fa61-4300-9dbd-7a359d54545a"],

Cell[TextData[{
 "An estimate of the rise in sea level from 1995 to 2011 is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"51.585", "mm"}], TraditionalForm]],ExpressionUUID->
  "ccadb4c8-3f92-419d-bad2-b5efa4d6bd21"],
 "."
}], "Text",ExpressionUUID->"71cbb798-71fd-4a0b-951f-e59432417f10"],

Cell[TextData[{
 "Related Exercises ",
 "41, 43",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"1c256d89-eea4-4c0c-9c0f-7eed5ba5d7b8"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simpson\[CloseCurlyQuote]s Rule  \[RightGuillemet]", "Subsection",
 CellTags->
  "Simpson\[CloseCurlyQuote]s \
Rule",ExpressionUUID->"583fca97-2349-498c-bf4f-965e541ef8ea"],

Cell[TextData[{
 "An improvement over the Midpoint Rule and the Trapezoid Rule results when \
the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f664616d-ade9-4e20-8953-728b99ccfcbd"],
 " is approximated with curves rather than line segments. Returning to the \
partition of the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "566924c3-2329-4282-a713-b73a312661ea"],
 " used by the Midpoint and Trapezoid Rules, suppose we work with three \
neighboring points on the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "3a596edd-e524-4b86-a5b9-cdbb9601620b"],
 ", say ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "0"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "0"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"9ea9086e-d009-4dfd-a221-e2aca9efe532"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "1"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"8723f3e9-60ad-4fa1-ab93-5fcc33716bfd"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "2"], ",", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "2"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"6bae214b-102c-4cc7-b324-ff85f516b424"],
 ". These three points determine a parabola, and it is easy to find the net \
area bounded by a parabola on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     SubscriptBox["x", "2"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "b0b25fd3-0db6-4bea-a6e8-87b0102a82ee"],
 ". When this idea is applied to every group of three consecutive points \
along the interval of integration, the result is ",
 StyleBox["Simpson\[CloseCurlyQuote]s Rule",
  FontSlant->"Italic"],
 " (",
 StyleBox["Figure 8.18", "FigureFontText"],
 "). Our immediate goal is to determine a formula for this rule."
}], "Text",ExpressionUUID->"9c25a050-0d45-4981-92b3-08b62116b2ad"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
            14, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
            0, $CellContext`nValue$$ = 8, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{{
                Hold[$CellContext`kValue$$], 1, 
                "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
               Dynamic[$CellContext`nValue$$ - 1], 2}, {{
                Hold[$CellContext`kValueMinusOne$$], 0}, 0}, {{
                Hold[$CellContext`nValue$$], 8, 
                "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 2, 16, 2}, {{
                Hold[$CellContext`aValue$$], 2}, 0}, {{
                Hold[$CellContext`bValue$$], 14}, 0}}, 
            Typeset`size$$ = {576., {226.9150390625, 233.0849609375}}, 
            Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`kValue$34561$$ = 
            0, $CellContext`nValue$34562$$ = 0}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`aValue$$ = 2, $CellContext`bValue$$ = 
               14, $CellContext`kValue$$ = 1, $CellContext`kValueMinusOne$$ = 
               0, $CellContext`nValue$$ = 8}, "ControllerVariables" :> {
               Hold[$CellContext`kValue$$, $CellContext`kValue$34561$$, 0], 
               Hold[$CellContext`nValue$$, $CellContext`nValue$34562$$, 0]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`x$}, 
               If[$CellContext`kValue$$ > $CellContext`nValue$$, \
$CellContext`kValue$$ = $CellContext`nValue$$]; $CellContext`kValueMinusOne$$ = \
$CellContext`kValue$$ - 1; Grid[{{
                   Show[{
                    $CellContext`RiemannSum[
                    $CellContext`funcC8F18[$CellContext`x$], {$CellContext`x$,
                     2, 14}, $CellContext`ComputationMethod -> 
                    "Simpson", $CellContext`Intervals -> \
$CellContext`nValue$$, $CellContext`AreaColor -> \
$CellContext`bcAreaPositiveColor, $CellContext`BorderColor -> \
$CellContext`bcAreaPositiveBorderColor, $CellContext`ShowAreaValue -> False], 
                    
                    Plot[
                    $CellContext`funcC8F18[$CellContext`x$], {$CellContext`x$,
                     1.5, 14.5}, PlotStyle -> {{Thick, Black}}], 
                    Graphics[{
                    Arrowheads[{0, 0.02}], Gray, Dashed, Black, 
                    Dashing[{}], 
                    Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValueMinusOne$$], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F18[$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], 
                    Text[
                    Framed[
                    Pane[
                    RawBoxes[
                    FormBox[
                    RowBox[{"f", "(", 
                    SubscriptBox["x", $CellContext`kValue$$ + 1], ")"}], 
                    TraditionalForm]], $CellContext`bcPBS], $CellContext`bcFO,
                     Background -> 
                    GrayLevel[
                    0.95]], {$CellContext`aValue$$ + ($CellContext`kValue$$ + 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), \
$CellContext`funcC8F18[$CellContext`aValue$$ + ($CellContext`kValue$$ + 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]/2}], 
                    Text[
                    Framed[
                    Pane[
                    "The curve \!\(TraditionalForm\`y = f(x)\) over two\n\
consecutive subintervals is\napproximated with a parabola.", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO], 
                    Scaled[{0.1, 0.9}], {-1, 1}], $CellContext`bcR, 
                    AbsoluteThickness[4], 
                    Line[
                    $CellContext`QuadraticPath[
                    $CellContext`funcC8F18[$CellContext`x$], $CellContext`x$, \
{$CellContext`aValue$$ + ($CellContext`kValue$$ - 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), $CellContext`aValue$$ + \
($CellContext`kValue$$ + 
                    1) (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)}]], Black, 
                    Text[
                    Pane[
                    Row[{"\!\(TraditionalForm\`\(\(area\)\(=\)\(\\ \)\)\)", 
                    TraditionalForm[
                    RawBoxes[
                    RowBox[{"(", "\!\(TraditionalForm\`\(\(f\)\((\)\)\)", 
                    SubscriptBox["x", $CellContext`kValue$$ - 1], 
                    "\!\(TraditionalForm\`\(\()\)\(+\)\(4\[InvisibleSpace]\(\(\
f\)\((\)\)\)\)\)", 
                    SubscriptBox["x", $CellContext`kValue$$], 
                    "\!\(TraditionalForm\`\(\()\)\(+\)\(\(f\)\((\)\)\)\)", 
                    SubscriptBox["x", $CellContext`kValue$$ + 1], 
                    "\!\(\(TraditionalForm\`)\)\) ", ")", 
                    FractionBox[
                    "\!\(TraditionalForm\`\[CapitalDelta]\[VeryThinSpace]x\)",
                     3]}]]]}], $CellContext`bcPBS], {10, 4.5}, {0, -1}], 
                    AbsoluteThickness[1], Black, 
                    Arrowheads[{0, 0.02}], 
                    Arrow[{{
                    10, 4.5}, {$CellContext`aValue$$ + $CellContext`kValue$$ \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), 
                    0.7 $CellContext`funcC8F18[$CellContext`aValue$$ + \
$CellContext`kValue$$ (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}}], 
                    Table[
                    $CellContext`ClosedCircle[{$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$), 
                    $CellContext`funcC8F18[$CellContext`aValue$$ + \
$CellContext`i (($CellContext`bValue$$ - \
$CellContext`aValue$$)/$CellContext`nValue$$)]}, $CellContext`bcB], \
{$CellContext`i, 0, $CellContext`nValue$$}]}]}, 
                    PlotRange -> {{0, 15}, {0, 6}}, Ticks -> {
                    
                    Join[{{$CellContext`aValue$$, 
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \
a\)"}, {$CellContext`bValue$$, 
                    Row[{
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`nValue$$], 
                    "\!\(TraditionalForm\`\(\(=\)\(b\)\)\)"}]}}, 
                    
                    Table[{$CellContext`aValue$$ + $CellContext`i \
(($CellContext`bValue$$ - $CellContext`aValue$$)/$CellContext`nValue$$), 
                    Subscript[
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", \
$CellContext`i]}, {$CellContext`i, 1, $CellContext`nValue$$ - 1}]], None}, 
                    BaseStyle -> $CellContext`bcBSG, ImageSize -> 8 72, 
                    AspectRatio -> 0.7, AxesOrigin -> {0, 0}, AxesStyle -> 
                    Arrowheads[0.02], 
                    AxesLabel -> {
                    "\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)", 
                    "\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)"}, Epilog -> {
                    Text["\!\(TraditionalForm\`y = f(x)\)", {14, 
                    $CellContext`funcC8F18[14]}, {1, -2}]}]}, {
                   Framed[
                    Pane[
                    "Simpson\[CloseCurlyQuote]s Rule: \
\!\(TraditionalForm\`\*SubsuperscriptBox[\(\[Integral]\), \(\(\\ \)\(a\)\), \
\(\(\\ \)\(b\)\)]\(f(x)\)\\ d\[VeryThinSpace]x \[TildeTilde] \
\(TraditionalForm\`\((f(\*SubscriptBox[\(x\), \(0\)]) + 4 \( \
f(\*SubscriptBox[\(x\), \(1\)])\) + 2 \( f(\*SubscriptBox[\(x\), \(2\)])\) + \
4 \( f(\*SubscriptBox[\(x\), \(3\)])\) + \[CenterEllipsis] + 4 \( \
f(\*SubscriptBox[\(x\), \(n - 1\)])\) + f(\*SubscriptBox[\(x\), \(n\)]))\) \
\*FractionBox[\(\[CapitalDelta]\[VeryThinSpace]x\), \(3\)]\)\)", {
                    Automatic, 
                    Automatic}, $CellContext`bcPBS], $CellContext`bcFO]}}, 
                 BaseStyle -> "TR"]], 
             "Specifications" :> {{{$CellContext`kValue$$, 1, 
                 "\!\(\*StyleBox[\"k\",FontSlant->\"Italic\"]\)"}, 1, 
                Dynamic[$CellContext`nValue$$ - 1], 2, ControlType -> Slider, 
                ImageSize -> Small}, {{$CellContext`kValueMinusOne$$, 0}, 0, 
                ControlType -> 
                None}, {{$CellContext`nValue$$, 8, 
                 "\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)"}, 2, 16, 2, 
                ControlType -> Slider, ImageSize -> 
                Small}, {{$CellContext`aValue$$, 2}, 0, ControlType -> 
                None}, {{$CellContext`bValue$$, 14}, 0, ControlType -> None}},
              "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {717., {247., 253.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`x = 3, $CellContext`RiemannSum[
                  Pattern[$CellContext`expr, 
                   Blank[]], {
                   Pattern[$CellContext`var, 
                    Blank[]], 
                   Pattern[$CellContext`varMin, 
                    Blank[]], 
                   Pattern[$CellContext`varMax, 
                    Blank[]]}, 
                  Pattern[$CellContext`opts, 
                   BlankNullSequence[]]] := 
                Module[{$CellContext`xValues, $CellContext`yValues, \
$CellContext`\[CapitalDelta]x, $CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`optPlot, $CellContext`twocolorarea, $CellContext`twocoloredge, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype, $CellContext`partition}, {$CellContext`intervals, \
$CellContext`showPicture, $CellContext`areacolor, $CellContext`edgecolor, \
$CellContext`method, $CellContext`showpoints, $CellContext`showareavalue, \
$CellContext`partitiontype} = ReplaceAll[
                    
                    ReplaceAll[{$CellContext`Intervals, \
$CellContext`ShowPicture, $CellContext`AreaColor, $CellContext`BorderColor, \
$CellContext`ComputationMethod, $CellContext`ShowPoints, \
$CellContext`ShowAreaValue, $CellContext`PartitionType}, {$CellContext`opts}], 
                    
                    Options[$CellContext`RiemannSum]]; \
$CellContext`twocolorarea = 
                   If[Length[$CellContext`areacolor] == 2, True, 
                    False]; $CellContext`twocoloredge = 
                   If[Length[$CellContext`edgecolor] == 2, True, 
                    False]; $CellContext`optPlot = FilterRules[
                    Flatten[{$CellContext`opts, 
                    Options[$CellContext`RiemannSum]}], 
                    Options[Plot]]; $CellContext`\[CapitalDelta]x = 
                   N[($CellContext`varMax - \
$CellContext`varMin)/$CellContext`intervals]; $CellContext`partition = 
                   Switch[$CellContext`partitiontype, "Random", 
                    Append[
                    Prepend[
                    Sort[
                    
                    RandomReal[{$CellContext`varMin, $CellContext`varMax}, \
$CellContext`intervals - 1]], $CellContext`varMin], $CellContext`varMax], 
                    "Uniform", 
                    
                    Table[$CellContext`varMin + $CellContext`i $CellContext`\
\[CapitalDelta]x, {$CellContext`i, 
                    0, $CellContext`intervals}]]; $CellContext`xValues = 
                   Switch[$CellContext`method, "Left", 
                    Drop[$CellContext`partition, -1], "Right", 
                    Drop[$CellContext`partition, 1], "Midpoint", 
                    Table[(Part[$CellContext`partition, $CellContext`i] + 
                    Part[$CellContext`partition, $CellContext`i + 1])/
                    2, {$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Table[
                    Part[$CellContext`partition, $CellContext`i] + 
                    Random[] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], 
                    "Trapezoid", $CellContext`partition, 
                    "Simpson", $CellContext`partition]; $CellContext`yValues = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> \
$CellContext`xValues]; If[$CellContext`showPicture === True, 
                    Show[{
                    Plot[
                    
                    Evaluate[$CellContext`expr], {$CellContext`var, \
$CellContext`varMin, $CellContext`varMax}, 
                    Evaluate[$CellContext`optPlot], 
                    PlotStyle -> {{Thick, Black}}, Prolog -> 
                    Switch[$CellContext`method, "Left", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Right", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Midpoint", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}], 
                    Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    Table[{
                    If[$CellContext`twocolorarea, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    Part[$CellContext`areacolor, 1], 
                    Part[$CellContext`areacolor, 2]], $CellContext`areacolor], 
                    If[$CellContext`twocoloredge, 
                    If[Abs[
                    Part[$CellContext`yValues, $CellContext`i]] > Abs[
                    Part[$CellContext`yValues, $CellContext`i + 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 1]], 
                    EdgeForm[
                    Part[$CellContext`edgecolor, 2]]], 
                    EdgeForm[$CellContext`edgecolor]], 
                    Polygon[{{
                    Part[$CellContext`partition, $CellContext`i], 0}, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`yValues, $CellContext`i]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    Part[$CellContext`yValues, $CellContext`i + 1]}, {
                    Part[$CellContext`partition, $CellContext`i + 1], 
                    0}}]}, {$CellContext`i, 1, $CellContext`intervals}]}, 
                    "Simpson", {
                    Table[{$CellContext`areacolor, 
                    EdgeForm[$CellContext`edgecolor], 
                    Polygon[
                    Join[{{
                    Part[$CellContext`partition, $CellContext`i], 0}}, 
                    $CellContext`QuadraticPath[$CellContext`expr, \
$CellContext`var, {
                    Part[$CellContext`partition, $CellContext`i], 
                    Part[$CellContext`partition, $CellContext`i + 2]}], {{
                    Part[$CellContext`partition, $CellContext`i + 2], 
                    0}}]]}, {$CellContext`i, 1, $CellContext`intervals - 1, 
                    2}]}], Epilog -> If[$CellContext`showpoints === True, 
                    Switch[$CellContext`method, "Left", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Right", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Midpoint", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Random", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals}], 
                    AbsoluteThickness[0.5], Dashed, 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Line[{{
                    Part[$CellContext`xValues, $CellContext`i], 0}, {
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}}]}, \
{$CellContext`i, 1, $CellContext`intervals}]}, "Trapezoid", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1}]}, "Simpson", {
                    AbsolutePointSize[7], 
                    Table[{
                    If[$CellContext`twocoloredge, 
                    If[Part[$CellContext`yValues, $CellContext`i] < 0, 
                    Part[$CellContext`edgecolor, 1], 
                    Part[$CellContext`edgecolor, 2]], $CellContext`edgecolor], 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 1, $CellContext`intervals + 1, 2}], 
                    Table[{Black, 
                    Point[{
                    Part[$CellContext`xValues, $CellContext`i], 
                    
                    Part[$CellContext`yValues, $CellContext`i]}]}, \
{$CellContext`i, 2, $CellContext`intervals + 1, 2}]}], {Black}]]}, 
                    Evaluate[$CellContext`optPlot], PlotLabel -> 
                    If[$CellContext`showareavalue, 
                    Row[{" Area \[TildeTilde] ", 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}], None], Axes -> 
                    True], {$CellContext`intervals, 
                    Switch[$CellContext`method, "Left", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Right", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Midpoint", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Random", 
                    Sum[
                    Part[$CellContext`yValues, $CellContext`i] (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Trapezoid", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    Part[$CellContext`yValues, $CellContext`i + 1])/2) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals}], "Simpson", 
                    
                    Sum[((Part[$CellContext`yValues, $CellContext`i] + 
                    4 Part[$CellContext`yValues, $CellContext`i + 1] + 
                    Part[$CellContext`yValues, $CellContext`i + 2])/3) (
                    Part[$CellContext`partition, $CellContext`i + 1] - 
                    Part[$CellContext`partition, $CellContext`i]), \
{$CellContext`i, 1, $CellContext`intervals + 1 - 2, 2}]]}]], 
                Options[$CellContext`RiemannSum] = {$CellContext`Intervals -> 
                  10, $CellContext`ShowPicture -> 
                  True, $CellContext`AreaColor -> 
                  RGBColor[0.976, 0.871, 0.812], $CellContext`BorderColor -> 
                  RGBColor[0.796, 0, 0.42], AspectRatio -> 
                  GoldenRatio^(-1), $CellContext`ComputationMethod -> 
                  "Left", $CellContext`ShowPoints -> 
                  True, $CellContext`ShowAreaValue -> 
                  True, $CellContext`PartitionType -> 
                  "Uniform"}, $CellContext`\[CapitalDelta]x = 
                1/100, $CellContext`i = 1, $CellContext`QuadraticPath[
                  Pattern[$CellContext`expr, 
                   Blank[]], 
                  Pattern[$CellContext`var, 
                   Blank[]], {
                   Pattern[$CellContext`x0, 
                    Blank[]], 
                   Pattern[$CellContext`x1, 
                    Blank[]]}] := 
                Module[{$CellContext`partition, $CellContext`y0, \
$CellContext`y1, $CellContext`xm, $CellContext`ym, $CellContext`coefficientA, \
$CellContext`coefficientB, $CellContext`coefficientC}, $CellContext`xm = \
($CellContext`x0 + $CellContext`x1)/2; $CellContext`partition = N[
                    
                    Table[$CellContext`i, {$CellContext`i, $CellContext`x0, \
$CellContext`x1, ($CellContext`x1 - $CellContext`x0)/12}]]; $CellContext`y0 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 1]]; $CellContext`ym = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 7]]; $CellContext`y1 = 
                   ReplaceAll[$CellContext`expr, $CellContext`var -> 
                    Part[$CellContext`partition, 
                    13]]; $CellContext`coefficientA = ($CellContext`x1 \
(-$CellContext`y0 + $CellContext`ym) + $CellContext`xm ($CellContext`y0 - \
$CellContext`y1) + $CellContext`x0 (-$CellContext`ym + \
$CellContext`y1))/((($CellContext`x0 - $CellContext`xm) ($CellContext`x0 - \
$CellContext`x1)) ($CellContext`xm - $CellContext`x1)); \
$CellContext`coefficientB = ($CellContext`x1^2 ($CellContext`y0 - \
$CellContext`ym) + $CellContext`x0^2 ($CellContext`ym - $CellContext`y1) + \
$CellContext`xm^2 (-$CellContext`y0 + $CellContext`y1))/((($CellContext`x0 - \
$CellContext`xm) ($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - \
$CellContext`x1)); $CellContext`coefficientC = ((($CellContext`x0 \
$CellContext`x1) (-$CellContext`x0 + $CellContext`x1)) $CellContext`ym + \
$CellContext`xm^2 ($CellContext`x1 $CellContext`y0 - $CellContext`x0 \
$CellContext`y1) + $CellContext`xm ((-$CellContext`x1^2) $CellContext`y0 + \
$CellContext`x0^2 $CellContext`y1))/((($CellContext`x0 - $CellContext`xm) \
($CellContext`x0 - $CellContext`x1)) ($CellContext`xm - $CellContext`x1)); 
                  Table[{
                    
                    Part[$CellContext`partition, $CellContext`i], \
$CellContext`coefficientA 
                    Part[$CellContext`partition, $CellContext`i]^2 + \
$CellContext`coefficientB 
                    Part[$CellContext`partition, $CellContext`i] + \
$CellContext`coefficientC}, {$CellContext`i, 1, 13}]], $CellContext`funcC8F18 = 
                InterpolatingFunction[{{1.5, 14.5}}, {
                  5, 7, 0, {20}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                   False}, {{1.5, 2., 2.8, 3., 4., 5., 6., 7., 8., 9., 9.3, 
                  10., 10.5, 11., 11.5, 12., 12.7, 13., 14., 14.5}}, {
                  Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 
                   10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, {3.6, 3.3, 
                   2.7, 2.8, 3.3, 3.5, 2.8, 2.6, 2.8, 3.4, 3.6, 2.8, 2.3, 2.7,
                    3., 2.3, 1.9, 2.1, 3., 2.8}}, {
                  Automatic}], $CellContext`bcAreaPositiveColor = 
                RGBColor[
                 0.796, 0.91, 0.855], $CellContext`bcAreaPositiveBorderColor = 
                RGBColor[0.467, 0.753, 0.651], $CellContext`bcPBS = 
                BaseStyle -> {
                  "Text", LineIndent -> 0, 
                   LinebreakAdjustments -> {1, 1, 0, 0, 0}, LineBreakWithin -> 
                   Automatic, Hyphenation -> True, TextAlignment -> 
                   Left}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> {
                    GrayLevel[0.85], 
                    Dashing[{0}]}, Background -> 
                  GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[PlotRange] = {ReadProtected}, 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcBSG = {
                 "Text"}}; {$CellContext`funcC8F18 = 
                InterpolatingFunction[{{1.5, 14.5}}, {
                  5, 7, 0, {20}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                   False}, {{1.5, 2., 2.8, 3., 4., 5., 6., 7., 8., 9., 9.3, 
                  10., 10.5, 11., 11.5, 12., 12.7, 13., 14., 14.5}}, {
                  Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 
                   10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, {3.6, 3.3, 
                   2.7, 2.8, 3.3, 3.5, 2.8, 2.6, 2.8, 3.4, 3.6, 2.8, 2.3, 2.7,
                    3., 2.3, 1.9, 2.1, 3., 2.8}}, {Automatic}]}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 8.18\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s \
Rule",ExpressionUUID->"d210afe9-cb1b-4173-968a-f15440827234"],

Cell[TextData[{
 "\tTo ease the computation involved in deriving Simpson\[CloseCurlyQuote]s \
Rule, we consider an interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "h"}], ",", "h"}], "]"}], TraditionalForm]],ExpressionUUID->
  "66730a57-920a-47cd-9cb2-3034192d2564"],
 " symmetric about the origin with grid points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "h"}], TraditionalForm]],ExpressionUUID->
  "f39860df-eeb3-49d3-8698-86357026f6a7"],
 ", 0, and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "4c53a5e5-cb0c-4691-924c-1c3a99f4b687"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "=", 
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}], TraditionalForm]],
  ExpressionUUID->"a00ee1a1-625f-45d7-86d1-041bbd05333a"],
 "; we label the corresponding points on the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "be40fb27-ce5c-488e-bac5-b4ca5ab21554"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "h"}], ",", 
     SubscriptBox["y", "0"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "2ff15c5c-13f0-4170-8a16-9087945366ac"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "3b5a8e08-a12a-4143-8646-8867c762352e"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"h", ",", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "fac8e436-e876-4c11-9153-dbf0d5857738"],
 " (",
 StyleBox["Figure 8.19", "FigureFontText"],
 ")."
}], "Text",ExpressionUUID->"b6c060c4-e9d0-468f-9a90-e27bba35d01d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
c52j7BurIN8DmCgFY/KF3ye687ua6Qq+S622U61vWZwHm933txln041JxX6v
OSq5412Zm0uuA4J+Lgrqw004zV6D7ZDrilry82cGmbTuz/u+ltVd35kyGq9v
83My6ce14L5KF86X5HsAE6NJT4uKrKbLyk6+OzVjgMfm/trN6/K2zZPAZF1X
nz10XHwuKtbjKueuf5+wycJNec9muvVNl65Nj9Oh629P74Vox+2z+eKDbGt9
/8/j+WNSjmtxT8x46ofKkO8BTAxNVpfxstKf0WW1inzvYqy2sO7TwXcL+d7C
8Pu+uF7dRw8dp5+LQb5Ps94d99UiP+M61/QhB44dH81rFo0hpHOC1M/K4ufF
Zl/7PH9MynEt3ocd6DF1lHwPYHLo+iA06len5ncP+T6lGQd0u1Zi/rkjXs8o
EvnMUlkL4KqHToufi1DSz+PRo8P+61V/5n+Ps31q8rPyOt57vDfpi1nUN8d2
Hk/gz0nnj2tH+2JmyPcAJoaSuRr1mlG+I32N3wvdGJiz2mfNPGOX31npfpE1
B1rkNbsp3/XpXNTrb9cqWkPB1fii189FF0TYZyWj76VocO1ccF1QeX+xT5+T
2I5r2Tzp0NtmgHwPYCI07Bmj+77O/5zPfD82t9dlTzY137tex7Zn/e/1/czr
cdZ3xufnogtiy4F5mvs2xsdd87NWv5dd+5zEdlxjXCOgBvI9gIkwNj5mOF6t
+c7Nj4H5zPfW62aVGM+rbmtK+1B/OzTSD3NtOkZf1csj30+yS5+LTogtB2aa
zN/P0V9DNv+97NznJLbjyvg9AMRP6XNmNKamPb+P9g/xOn6vuWfvLMM2qVWq
Ie3dvevx9upzduzxNzaZ21fG9Q0+e+j4/Fx0QWw5ULNdjcbMdX13bN5j1z4n
sR3XwnWBqb8HgGgofc5Mvj90Y9DqWJy3fF80t8tXb56O3HNuXS4j1boG0h0/
F/URHj8XnRFbDsxo87l5P9GiGrBGNfNd/JxEdlxL++eQ7wEgvLFxmOrzc1GP
Ge3jle91J2PhBWN5Lr5bdN9bXe6/4ou6n2rnLE02sM4tHj8XnRFZDhx+VjR9
LmuNl7usv+/i5yTC46rdj4563fpGvgfQe+p9c4MxrCN7NhiPo7336Lqx6wCr
79Dh9q5eqHNxMZ6XJ2N7S1m/tkp+bnWj6x9NNrDaz74/F10RYw7UrXNdZ/sK
ezE2OJd09XMS43Et6BPg7Hwp54jB95GPay7yPYDeU3JW5blZ811b+jO6teCb
1mHkXnv4HaeM6x28R7Mtz+43fw1NXWk036exUPZRo0ykWdu+cQ+dNj4XXRFh
DtSNB9QZKy+qzTGdm9uLz0mEx7XovoyT+yDD7yU/91TI9wD6THd+rvzOrFtv
o7keaPz9tDhPYOR6QsmJ6lhylg2MM2jTXkKTJJeJGvcg1439Na1/buNz0RUR
5kBdbY1xnV5B7/tGY/dd/pzEeFyPFvcCazyGL98X2Xwwjz1LyfcAek1z37zs
e2zsXG5677TmPQLdmovZ9+xYLijL44vfiXXqR9Se/tTeK5Rc3jj3aHNb+bVU
yM9FZ8SWAwtqa0zy3+H9O/TZvqLGu5efk9iOa57Sn6H0Xojp8fZcx0++B9Bn
4/fNS/KVkutqjdsq36GlY3f5xw7O8el3xHCMTbN9BfVCx65Fao6/K2ON0X2X
htRgLrbpZ6Jyf4f+XHRFZDlQv2ZteWZO6+J182lNcl9fPyeRHdeqfZj/nqjc
f1L/NHK83a43okO+B9Br6neoph9FOham1L/WHZdJjYzxlHxnFvW2KPteL8oC
db8Lx76nLOcC98ihVzX9rgfHpEnWKM1vS9fqv9tDfi66JKIcWLmO2+BYH713
dnGNhtnk8O1bCnou1siKff2cRHRctfJ1NTrX/6/0OKe/+5Lndz2eroWn1oca
HWMHyPcAequwB/TadD0kOf/+6i9Gx/dl3L3xuIoy/l9Y56+Zd1n1nVaUI2rP
vzPdxklTkn9qXfMZPM/ItWZ+/4f8XHSM1KakOSrUNhQcq0YGnwPJhsbnnR5/
ToIfVxOz9zY81qtbvW4h3wPoLU19xKFL1o/93ZFPLny/qvWsjeTyXWGNjlx3
5MfwTMeI8+N2ajZssH2M3R+Tjqvecd+I7O/kT2GU7+W7X3kenew5R8ZbpTYo
1OcC9ex63Og4a8l4fjq+sLfZOSfk+QMpueebnh8Mcv2RtRuC3I8g3wPoq/G6
2GPrU6V9dXy8rnLPoKyOVr7b625Hk58ZUq53gvfLQOExbvIz3j7TiFLr5w9o
pfcbFuuv0us2m2s3h8j3AHpLqZVo3Hu8rlyOdrKWrQPqWqysZwUA/UW+B9BL
mtr7Vu9H52pkY7gPnp8/HMs1BwDAD/I9gF5Sa+899xrWytW7huwHMTq3jpp7
AOg78j2AXhrrMdF+rk1rYrIaoRDXF0eV9VRM1+oCAHQa+R5AL4WqvVeoGb/N
cfx8tq+1VhcAoNPI9wB6p2C9xpDblK9/b7R2Vk353kEx1P8DANpDvgfQJ+l4
uWZ9xxjmlGbj6a1si6yzWLROKgCg18j3APogzfVla4fntDF+Hho9rgFgcpHv
AfSGrCmZrQ25o+jPPcwxBQD0GvkeAAAA6A/yPQAAQHc8P/dScv8DDwTfDsSL
fA8AANAd56xYkea2rVu3Bt8WxIl8DwAA0B3Xzsykue3U004Lvi2IE/keAACg
O155+eVhdtu5c2fw7UF8yPcAAADdcvGqVWl2O+dLXwy+LYgP+R4AAKBbfrz3
6WF+k/m2obcHcSHfAwAAdE82z/aK1auDbwviQr4HAADonm2zs8MM9+Zbbwff
HsSDfA8AANBN0kNHMtytN24Ivi2IB/keAACgm7Ic9zsf/WjwbUE8yPcAAADd
dPC9d9Jsz3pXyCPfAwAAdNfMuqvTHHfG8s8E3xbEgXwPAADQXax3BRX5HgAA
oNtY7wp55HsAAIBuY70r5JHvAQAAui9b74o8B/L9ZDv06r7k/puvS66+Zn1y
7cxMsubGu5IdP3/G6jkP79+R3LzjOa/b3cZrAADQJdl6V9JPh/WuJhv5fjJJ
P61Hrl85PPaqqQu2JM/NH6n9nE/+9aXpz//a0huTdw/Oe9v2vz39+OF2Pnkw
/P4EACAG09PTrHcF8v0kmp9L7vv8bwyP+6k3bUveGPz9/Ob/OpLxf3PTL8yf
89C+5JZPf3Ahc591R+1rgybv4eEVx6Wv95Hf/uNk64u/Cr9fAQAILMt10yd9
Ivi2IPzngHw/GWTse+fXpobH/P03/Wz4b6/ccu5Ivs//W6n9dyYrT1iykO3X
bE6vFdp6Lz9Ze+Zwe7/z9IHg+xcAgJBY7wqCfD9ZXrvzvOHx/sjxa0fG2Zvk
+yN7Nh6r6Wlj3F4h57E9az5OxgcAYJHMqZPvxGXLlwffFoRBvp8gB3YPx9nF
yh++Ofbv1//hyem//ftVG6rr2vffOXKt8OihQO8rV28ktTrffyOCfQ0AQCCs
dwXy/eR49rpPucvjh/YlV/7WifGMm+e257iTv936fQQAAGKSrXd1/kUXBt8W
tI98PyGUsfupbz7R/LmU+bnGdfqevffoOjfvDwCAjpNxe9a7mlzk+8mg9sYZ
q82p4c17Lhm5DxBNf8rBdceGD5zo5D0CANB1Un9PvptM5Pv+y/eLTy05vXmN
unIfoFYPzRbk5whLLf4j74TfJgAAQmC9q8lFvp8Ar2xPzjzx2Ni9rD3VtD79
nzZ8fuQ64ZZ/jqzOXXmvsdQOAQAQAutdTaaY8v38G2+lc75N1j2Vx4nQ+68L
8vU0Vpn3wO6RObU21wmZw68tHMfKnvnzc+njqsYf1HsVjOEDACaZ5HrWu5o8
IfK9ZLBDr+5Ldj8ym2zeeF1y+ReWjeTP6Yfmin9+kPPy+W3qrPVu678Xez6e
eeIp6fi0d4PXOvl7z7nb/kEGv3ZmJv19zlx52gkj+1de94a7bh95zOyL/1b5
3O9su3LkeaY27Ki9fXLc/37Td8aOeWHPm0P7kv956WdHHvu57eXzhPJ9gio/
TwAA9BjrXU2mEPn+pes/Npo3FbJOUuF4bq7nupcaDM3z++Zy+/PrV7nchrEa
/oGv76m+Jhga5PT83FedsecbXKvofqb083FU1tzaUOvxAAD0GetdTZ5Q4/dZ
bc3bu7eMzNccbssv3tP//CDz5eurnee3Qb4/Z8WKtF+sbxeffVH6WrVycoXD
+3ek82nEY48/kfz9hq+P7Cu5hv8vdz+R3juRf88eW3kP5JXto8ep5hxdqcOR
z9qOnz+T1tjIdqrHfaSnZcn1QOXxVmrwo5wnAABAS1jvavJEUX+vZkc16yl+
efflo4+9YIuX8Vm5Dgl9fGyptfdSM99kX6lj4jbrxGbzK0bm6n74WD2/7Pfh
erRr7k6vB35y/3Xp9dBZF38r2frir8pfQ3NtUFXTAwBAn8m4onwfyrpXobcF
/kWR74+OZ73Kvuq5awJ6pBR7eMVxxtdNZfJ9J4WLNWLVawYZZ5c1dbMao6bX
bXJ9oL5vPiMAgEnGeleTJZZ8P1ZTYVDfvfNrU/XrwCeJZhy7yZpPurzspCZK
6ccj1tx4V3rdZtP3xtv2AgDQYax3NTmiyffzc8OaDKOx5sHjv7v0Q3ZrNfWd
ozp0X3k5X4dTOdc2gu0FAKDL7n/ggeFcPNa76rdo8v3R8VpxqdEprAFZzK7k
tmJjNfNVNU8FfOZltS4rfe7LthmtgVC2vWqvHxe9+gEA6LpTTzst/V5kvat+
iynf63pTFo03Z9cCPmpznn/qR8mP9z6d1qq18eeuF173sj/V7Nw0N/vM92M1
+B8u6Z1k8d5Z5woAgNx6V9PTwbcF/kSV7+fnxurFtWsTLdZt+xi71+VN33zM
/dRl8t/c9Atnz+Vs3w+OpU3fzSLqfGDyPQAAo+tdSb1O6O2BH1Hl+4E9az4+
NuasPibrr9JkrmiVvuR7mVurzl39ztMHGj+ft3yvrEfs6riq63yR7wEAWMB6
V/0XW75/79F1I7lsrA/j4nivr3pqWYdJ6mba5KUu/JXtzvKt1/F7Td8kF9c7
Y9eJzNMAACDFelf9F1u+V9e6UtdRyuqqfYzd94l6nWSTb73l+6wHknI/w/a5
dX15yPcAABwj61zJ9yPrXfVTdPl+kPlu+fQHR7LZcL7lYvZvugbrJHn2uk85
HRMfm6vrIC/reue4qKXRXo9Y9uQBAKBPWO+q36LL90fHs+nJ33su/fus5oL1
rMrp+kPa3u94Z9uVoxm8Ya/NocVeSZLlf/DivrFxfJu5ArqaftavBQBgVLbe
ldTjh94WuBVjvldrS9JstpgHpy7Ywth9FXVd2IbrWo1Qe5fa9LnJraubXaup
9fLZNV1GrlmkXtBoDH7w/CM9ebgmBABgDOtd9VeM+V7NklMnn5esWbEwHmud
UyeBsv9K1wkzNT+XbJw60UlmzrJ8vl+nen9AruPyWb7WegfKnF165wAAoDd9
0ifS70rWu+qXKPO9prcjNRbm1HWAdT1Gm1Dr5auOh4y5y3hAPqdnfSvH6vc1
mfzRQ4v/lt27MayhH5tbTO09AABarHfVTzHme938SOt67wmi1rp8brujeTNK
z83SWql8Xl9yerLuwb3JU3f9t+GxHBtP16xt9h++uzN5e/eW9HnqjMGr75/a
HAAA9Fjvqp9izPdCXX+UjGZInVvqovZ+kZwDdn5tyqjupag3Ttn2qLk8b+1P
DefbKtcJY+snAACAEZL/5DuT9a76I9Z8n6/HdlVfMhEW1/9yWnufp9T2F90b
UOvpTfr4FK0dPP3QnPPtAwAAC6Q/Zva9yXpX/RBrvs9qyEfqsFFNybc+5iz8
ZO2Zx669ivrgH9qXXP+HJ4+M9d+847lazy1j/SY/k5e/B8DYPQAAZljvql+i
zPe5dU2py6knm79au66l5vHJ18AM1x/TkJqe+TfeqvX88jON5sMqc3SteugD
ADBB8utdST/q0NsDOzHm+2x9K5lfGXpbuiY/L9nrnOTcfQK1l2UI6pzsfO9N
AABQjfWu+iO2fJ/VYEvdB7UVNSl9RX33E83X2Ieuc8/ft4jhegMAgK5hvav+
iCrfL9ZXUHPfzMj81CWnJ1tf/JX318z3yfFSC2T0vjdScw8AgCUZG2O9q36I
Jt8f2L0w9uywn2MfPfnXl6bXQKevWJ18/43Rf8vPLZ365hOtbdPwdQfHrvWa
91zNPfd8AACwk613deppp3EvvMNazffzc8m9X146suZR+vdZtmc+bTmlN85I
Hcog52Z9MeusBeWC1L4P+960mPEP798xfM9TazYXr7UFAACMSF0O6111X5v5
XtfffMnKs4fjr5dsez74/oiZuv+y3pTq3NJQdTK/vPvy4Tas2OK39v/gYzPD
1+JzAwCAO6x31X2h873JukdY9Mr20Xx/2bY02/8g1zM+eNYdbOOVp53gfY6r
XM9MnbU+mX2R+z0AALiUX+/qx3ufDr49qK/V+hxlbdWFMWgyWh1F68JKTc6t
P//X4NuXoWYPAIDuYr2rbmt9fu38XLL7kdm0pmvXC68Hf/9ddPi1l5Nd27ck
W7duTY/fjp8/Q54GAADOsN5Vt0XTP6cHZE6K1KqxLgQAAOg61rvqLvK9OzKe
znwUAADQB1mukX46Mt8v9PbAHPnenaxWjf0IAAC6Lr/eleTF0NsDc+R7d7Lf
gW2zs8G3BQAAwFa23tX09DRz/TqEfO/GM888M9yPUocfensAAABs5de7Yvyy
O8j3bvcjtfcAAKBPWO+qe8j3bmS198wxBwAAfcJ6V91Dvncju3f12ONPBN8W
AAAAl86/6ELWu+oQ8r09uZbN9iH9owAAQN+w3lW3kO/tZXPLz1mxIvi2AAAA
+MB6V91BvreX3bO6dmYm+LYAAAD4wHpX3UG+t5fV3su9q9DbAgAA4AvrXXUD
+d5Ovh6Na1kAANBn+fWuQm8LipHv7VB7DwAAJgXrXXUD+d7OOV/6IrX3AABg
YlyxejVjm5Ej3zf37sH54b6j9h4AAEwC1ruKH/m+uaz2Xu5Thd4WAACAtmT1
C6x3FSfyfXNSk5Penxp8xkNvCwAAQFtY7ypu5PvmpO5M9pvMsQ29LQAAAG3K
1rtiDmJ8yPfNSC9Mas8AAMCkYr2reJHvm3ns8SeovQcAABNL+oyw3lWcyPfN
XH3N+nSfnX/RhcG3BQAAIIRsLiLrXcWFfN9MVnPG9SoAAJhUrHcVJ/J9ffna
+2eeeSb49gAAAITCelfxId/XJ9en6b2okz4RfFsAAABCkrFOeo7EhXxfX1Z7
z5oOAAAArHcVG/J9fWcs/wy19wAAAItY7you5Pt6ZB5Jtr+en3sp+PYAAADE
4NTTTmO9q0iQ7+u5/4EHqL0HAABQsN5VPMj39cg+kn0lc8VDbwsAAEBMsl6Z
1DCHRb6vJ7v3JNeoobcFAAB0z+HXXk6O7no8+Hb4kK13JXkp9LZMMvK9OZkv
wtwRf+bfeCs936V/RrA9AAC4lNasSK6fvXfBs/uDb5NrrHcVB/K9uayujGtS
T3p+zgMATLjsOy6nj3XqrHcVHvneXPZ5pfbeA8nz6nmvp/cuAQATakK+61jv
Kjzyvbnp6el0P0kPndDb0ifp2MWEjGkAACZc/l51j+9ZZ+tdMSYaBvneDLX3
Hk3IuQ4AgHSO2QSMaT32+BPkpoDI92aovfdkQu5VAgAwlH337Zjt9XffsuXL
We8qEPK9mYtXrUr30dXXrA++LX0xUpeTO8fRPwcA0HsTcO+a9a7CId+bkfVq
6fXk2ASc2wAA0JmEOh15L1l+Yr2rdpHvq+XngUtf19Db0wu6e5M7uHYCAEyQ
fI1q9n3Yszod1rsKg3xvvo+kjiz0tvRBOjaRz/XU5QAAJpXm+7BP97JZ7yoM
8n01au8doy4HAIDUSJ1OLuv3qU6H9a7aR76vll13Sq+n0NvSefTLAQBgVM+/
G1nvqn3k+3LyOcz2T5+upUMoWseKuhwAwMTr+b1tGbtnvav2kO/L3XrjBmrv
Xen5uQsAgKaGdTpKPX5fxsDy613Rq8Q/8n258y+6kLUZXJiAHgEAAFjR1en0
qLec9NAhU7WDfF8uq73fuXNn8G3pqqIev30ZkwAAwJke3+tmvav2kO+LSaan
9t6Bnvf+AgDAlaK13Q+/9nLwbXPx3rJxU8n6obenz8j3xbLae/o5Weh5TwAA
AJwrqNPpw1gj6121g3xf7JwvfZE6MQvpWEPPe/oCAOCFjIWpa7z3YHxM5tZm
uZO+4/6Q7/Xy95CovW+2/3R1OYde3Rd82wAAiN3Y9+jif/ehTof1rvwj3+tl
tfeS8UNvSyep84N6Mu4AAEBbhvfBlfGyrt8Hz693Jf8denv6iHyvl9WHSY1O
6G3pnB7XDQIA0Cq1Tqcn89hY78ov8r1e9rmTObaht6VLRu4n9mzePwAAQfSw
Dx3rXflFvh8nGTXbJz/e+3Tw7emUHvftBQAghL6uI8N6V/6Q78dl15TU3tdE
XQ4AAH5k37HqnNvQ22UhW+9q+qRPkBUcI9+Pm1l3dbo/Ll61Kvi2dMVIL8we
jS0AABAN3T3yDtfis96VP+T7ccuWL6f2voaiXpjU5QAA4M7I2ra5Mfwu955m
vSs/yPej8rX39Gwy1LPxBAAAYqW9Xz7I+F29X856V36Q70dtm52l9r4OtR5w
8U/q6AAA8GTXXm3GD75dDQ3Xu6InuTPk+1FXX7Oe2ntDRfP56YUJAIBnPaqL
Zb0r98j3o85Y/pl0X8h+Cb0t0evRuQUAgC5Jx9jUXjqDP7tai896V26R74/J
14A9P/dS8O2JGjX3AACEJWNq6lhbR/tSZ/XRrHflBvn+mPsfeGDYhzX0tkRN
dz6h5h4AgPbpxts6WovPelfukO+PkffPvaFyw5p7Jd9Tcw8AQCA9qZfNMqmM
s757cD749nQZ+f6Y7LqRNRb0xvrcZ/9NXQ4AAMGM9LvIf093LOOz3pU75PsF
r7z88nA/yH+H3p4oZfcAe7Q2NgAAfZDOq+1BX3zWu3KDfL9gWHs/PR18W6KU
9blXxgeouQcAIBL5Wvz8ujSht6uG/Hjrzp07g29PV5HvF2RrK1B7P26sz33H
e3ABANBbulr8jtXRyhpErHdlh3y/QMbtZR/IOH7obYnJWM19R2v6AACYBCN9
8fN/duh7m/Wu7JHvR+8F0XNVQZ97AAA6RVuLP9ClWnzWu7JDvj+aztFmLoeG
WnNPn3sAALph115tLX5XvsNZ78oO+f5Yndekvn+dtJ+9puaePvcAAHREx+/B
Z33Lb71xQ/Bt6Rry/dF0HQV5/3KtGHpbYjA2n5aaewAAOqdwDl1HMn6WUaUn
PutdNdt3k5rv83M4uP/T/XMBAAA4Zng/Xp1z24ExO8kk2Rgs613VM+n5Pnv/
y5YvD74tUehB71wAAJBTMJ+uC/NtWe+qmUnP91nt/dXXrA++LcExnxYAgH6S
8Tv1/nwH5tuy3lUzk57vpaZL3vtjjz8RfFtCSntpqffumE8LAEB/ZPfo89/3
yj365+deStcCknwo5L8lY4fc7mwNUta7MjfJ+T5fex/79atPI2thMJ8WAIBe
SrOOrn/GIPdLHszW+tSR+phQa4D+eO/Tw+2Q64/Q+7ELJjnfS7+l9HpwxYrg
2xJK2e966G0DAABuqT3y/vGumeEcVhOS80OsKct6V/VMcr4//6IL0/ctczdC
b0swzKcFAGCiZDW5D33zKuNcnye1zW3XwmfrXclr0++w2iTn+4mvvdete9GB
uTYAAMDOk1s2Nsr2+Yzf9jh+tt7VRI/LGprUfC/XnRNde6/2ymF9WgAAJkK+
r7yNtntWZplVtj30PozdpOb7Sa69H651wXxaAAAmTtZT3oU2152S65Ks9oL1
rspNar6XHkvyniXnh96WNqnzasj2AABMliwju9D2GL6sVySvy7qk5SYx3797
cH74nidprYS0DinfBzP7b3rlAAAwEWTOoatsn2mzDp/1rsxMYr7Pau/l+lWy
fujtaY2uxz3zaQEAmBhZfbJLbffFv3jVqoUaa9a7KjSJ+T6rO+vL50L6RMk1
i/x+Cfnvscxe0AeTbA8AwOTI6ltcarvWmfWuqk1ivs/WSOh67b3MLZH6s6Lf
N3mfae9PXR/MgbQWP4L3AQCT7vD+HcnNO54Lvh22ZMzo1WeeTnZt35LMrLs6
OftDpyRrf3og+HZ1lXwu/sf2PU6fU7Je1/O9yPLPpGTXuiYt38u5J3u/cv0X
enuakDq3slyvWvm708nr99wzku3TtS0cbU+d7yXO/W75OPcDaI+cE5/860vT
c/WvLb2xkzWjsv0ynnTmifrvoO88zTm+6Wfjb08/Pt2HUxdsSZ486OZ5fdTn
hOhlw3pX5SYt32fzSuTzEHpbmpDPc5N579IrVtagdtkrx/R7iXO/H77O/QBa
cmhfcsunP7jwO3zWHZ39HX7h725Iaz7+5P+eHju/f+T4tZ19X1GYn0seXnHc
wr787T9ObvnnI9bPmeVil0KNl05PT/eiHsOHScv3We39+RddGHxb6srXmzUh
Gf/l7Q+52Z4a30uc+z3ycO4H0IL9dyYrT1gyvD5/I/T2uDA4H234wIkj5/ip
y7aF366Ok7GcH6w909mYWL6OwYWQ46Wsd1W9byYl32d1LfK+Q29LHelac9Pj
+bguJ/1im34vce739tlwee4H4NeRPRuPnQPPuiN5br4f1+X5e4rDcaWH5oJv
Vx/Ivt2z5uPOzvNXrF7tLN/LuGnI/cJ6V3qTlO+lPit7r232anXBZb2cTR8r
m+8lzv3+uD73A/Bk/50j9y8fPRTBNrlyYHdy5W/lxnCWnJ58/40Itqsv5ueS
+z7/G8P7tTb7VnrIu1jjSp4jdB++rB/QGcs/E/4YRWSS8n2Xa+9drjXXeAzf
9nuJc79fDs/9ADw4tG/kHNi76/Dcd4Q47uRv9+beRDRynyHb/Svj3bZ54qmP
fy54vme9K71JyvfZNZ6sixB6W+rI1uNySX4fam2Hi+8lzv3+OTz3A3Aod/0t
3n/Tz8Jvk2P/tOHzI+f4qW8+EXyb+uidbVc628fSx65pjtg89cnk6NSZydFl
lwbfJ9l6V12cW+nLJOX7rtXeyzWxZHtZh8t1vpf588bb4uh7iXN/O1ye+wG4
8eY9l4zc/+xdX4HB94Raf/n1Pf8Wfrv6SJnLtvKHb1o9Xz4HmpLXT7P9oiPn
rgm6T/LjoKx3NX5c+5zv87X3sR57GVOX2ni5z1Cnv30TdXpJOfle4tzfHsfn
fgCWDuwe9iTo69i9+h6pEfTrlVvOHdnXj7xj93yHX3u51pxb6Xedz/cxZPxs
7dI+Z9k6JiXfS26W9xhTD6Usz8vv1KmnneY1zzfO966+lzj3t/vZcnzuB9Dc
yL3LJaf3so/te4+uG70/e9Yd/ej5GatXto+sKePimlFqBiTn33DX7cmSlWcn
/+73P5V87PfOSLOhLqP81a9/YizjH7pkfbB9sv3729LtYr2rBZOS77P1mCVL
h9oG+bxJni/6XWmTaR8pV99LnPtb5uHcD6ABpa+ArAXYx3kxz173qZFzfNk5
R74LZXwrpgw2/8Zb6TaZrB8sj6s9h8015Z64y3GcH7/9UjL1g82pU378UPr/
t+/brc0Sar5Px/HXhltrivWujpmUfJ/l6bb7o0pNmPSG9V1vU5fRWnMOv5e6
fO7v3HlfeDz3AzCXnw+Tjm1s2BF8m5wbnG++u/RDI+/zql+8N/a4n9x/3ch9
3HR/rNnc6vWOjFHLOXrvkw+kGfDyLywb2Z7Sns3KeXXqrPVB51Goc9pc9ZvW
5XuRzWHNu/qEk6LK+Kx3Nb4v+pzv872TfGcveX65hpA53DY9LeV6RO41yPFx
3T/H9HPv7HupI+f+Pp33ha9zPwAzujU/ejnvSLlfKOMJI/2Tc+ud67R5f/Gl
6z9W+v1Yem9Z6QHX9raPfb4emzHf9hqK8r2M4au5Rv6/9MiMJePn17uyWeun
DyYh32e195KZfTy/jIXLGL1NzY2M70ufKulroxu31l03N2Wy1pzT76WOnPv7
dN5Pj6Gncz8AQ4Nz38iYRU9r78fGgi7Ycux+52Af5O8D69Zhb/PcJN9t8h0r
f769e8vYmFLR+FPqwO6R77Lg51Xlu9XV56so34us1jnv4rMvSo588ivRZPxs
Gxuv9dMTk5DvsznhLmvvZUxd+tzozlUm5FqgLM+rXn3maSfZXq5rpd6k8j06
/F7qyrm/V+f9xX3r49wPwMyRPaPrjve1Ti6/dnZ6Hs/uFea+R+S8P/viwhjR
WK/kwBl57L5xSV/hX959+dj3WbBtP7RvpFea+Nx2+/6AZfn+By/uS2sA1O/G
tPb51+PI+Kx3tWAS8n2WGW3v1cj6t3KN0KTuRn4f5GdlfnfdunLJ43JtLGtJ
2OZ7eX2T13T5vdTZc3+Xz/vC07kfgJl8Hythtebc4Hwk915lXEj+FDLG5Ou/
5XVu3vFc9XYp/XhFOo6QW2tvxZafle6X0GMh6ndOZR/o3HdD0Pqc995JHl5x
3Mi2u9iesnwvvnXbTWPZ4ozln0mef+pH0WT8rOaha+uZutT3fG9bey+1N7Jf
mmR66cUqddzPPPNM4+3Psn32O5If666rznxyZ99LHT/3d/W8L3yd+wFU0/3+
2ZzLjuzZaD2+U5fR+UKpTZRzpHxXZPWdY2MKmrVQgp+X1HudH66uR935tSmj
x3XpM5apyvdCV49824N/E03GZ72r/ud7uWck761O7b18FprU08sYvexDqbmR
3zvbbVezfabJOH6dvkFOzxldP/d39Lzv/DgCqMV9vt9Q+7xv6zc3/aJyu/Lr
H6bvccOOZPcNC2uun/w9zfi/shZKDOdKdY329H2Urf2d9YxYcnrQdVxC5nvJ
8mMZaHo6/beyjN9mf/ysb2Efs62Jvuf77B5N1XuT3xPJwHX7WMo1gFwLuK7x
Smvki66Bz12TXkOYbKu8/7r3LVyeMzp/7u/oed/1cQRQj4/fP3nO/Dyhoj/l
+8Pm/2d/mmyT+h5P+9qFC+/1sm3ansLqvP9Y5iSo31XZWJT28YvjPqHPp7o+
GC7WVzDJ9yJbLzZv/c1/GU3Gz3qrTOp6V33P99kYvORh3b9L/U3dmnrJ1bZ1
N2Vk/biybJ///ZJ+VfL7JLVvstacOOdLX0yPq8zJbfL6Lr+X+nDu7+J5PzuO
Ps79AKpNxPV1rs5SPUcW1TGqa6FEs08G5271fRT1I8i+E4LfdziqqSF18J1p
mu/v+YeHx/aZZCmZg5tl/MK+OoMs08b+meT1rvqe7+WYyhh2fiyiyVh9Nk7f
NDMbe3Z/6TVv0e/ZRXt3DH8fN79UfU+1jLPvpb6c+zt63hc+zv0Aqk1Evs/V
X06dcuxc/52nD+gfr5mPZVID1ArNtmnXDFlc9zGWY6nOV2sz36fZ47Kvj30/
yt8NH7P36cKMf3TZpd73j2TA9FgOcn7oY9W2vuf7PKlTkd4ApmP18jjpIdBa
f6Vdextl+2jzfV/O/R0976efeQ/nfgDVJiHfq+eX7N5s4c9o5jPF1LNX7fWm
ey+v3Xle+m8rf/hm8O3Nb0+ofK9b80rI2H72GKl1KBzHH/y9i/mKRSZ5vatJ
yPdy/VhnfSh5rPTCbHU7Jdvrrm8HDl/1p6W/X7Hm+z6d+7t43s9vE/keaF+f
8718T6hzk6rmHdWqdQzgvUfXjWzfWD3j4vww0zpH2Udyz1/GCKVWRXKF6/c7
9t3keX6t9B9R84eMm6rf9VIfkX9MVcY3WpenoUld76rP+V5+l3TzP3Sk/kbu
4wSZg3HvbGG2l35SVdnedb4Xtt9LfTv3uz7vC5lnIed8OffLZ3XXC69r5yTY
8HHuB1BNdw7s1e+fphdCae+Bo8d6i5k+vnXKmicyHpL/zsrqHSvHcObnkif/
+tLCvPGFm3Y4+RyE7J8ztuaVZm3KG+66feyxaU2OLu9I7YLUJ3s4rpO63lUf
873U1pv2tpSx+qDH+477CrP9r/7CLNv7GL+3/l7q27nf1Xl/4PD+HcmaFcfr
P5ODa6B1D+51ss2TUB8AxCymtTxcG+vXWbU+tmY+VizzlIYGufyWT39wZBuH
a5YvfgfIGE7pMVSe45N/tj39jpbxnHzml8+C7fiV9hxf0Luijrr5XkiWV7/P
pGd4NtfWKOOLXW6+/1TnX3ThMPMF/5y1pE/5XmqrTHK9fOaCjdXnpGs9FNXk
3L7FONv7GL+3/V7q3bnfxXl/4J1tVxpdd8o52jYH+Dr3AzCj/r5Xro/XIbp1
xkvPLepaKL/9x8mjh8K/D5Xa4yHr45zdCzVd/6RojCpfM2l9vedpvRiTfK+r
09H1LJHaHd3Ppz0yizL+vfp+hzYmcb2rPuR76X1pkuvlMTK2H0O+Kftsv37P
PdrfB6lf0/23j3xv+73Ux3O/7Xlf3acnLf9yOpagzjnIWM8tjm2tMGDSKOe1
GNbFcEJzbtH2HMgZGzPKz2EaPN+OQRaJoR5TrcVMz5mLx3Hqgi2leTz/s4Xf
YUq/Bu06MKYO7fOyXkyT8Xuh65cpZA6u7vFVY5yuj+2krXfV5XwvNcsmPS6l
Br/1+bIF0nniJfVnLzz297XG7X3le6vvpZ6e+23O+/n7E1NrNo+9lxf+7obx
nG+bBTyd+wEYGpy7Nk6N3peMaf59Y2r9ZcX9WV3Np6xdno35ZGMkw3uimcH5
9fIvLEtru2U8xFXtYinlu2/q5POG9ZSl96CV772ysZT8XDOrsSylJ4Wr/glN
832aRTT9MmVNnqLHH7r+9sKM73odrElb76qL+V7us5iu3Sq9c0Jvb6Zs3Sqb
bO8l39t8L7Vx7u/Sef/osWsDuQ4ovI+h1PhbZwFP534A5tR7mX24h6aOdRx3
8reNxzfU74Rf3n35wrlRrWXRrDuifZxrBeu2VB435fth7U8L+kBr3pt837k4
Dq7qL23yvdTb6/pl3vbg3xT+jNQsFGajZZc67Z85SetddSnfyxxokz6X8hhf
a8s2VtLbXnpDSR+VptneS74/2vx7yfu5v2vn/aML/YhM8rV6H8MmC/g69wOo
QTlfVd7r64CfrD2z1nlqbD7W4phINo4t3xHqPU21t29e4RoqDujmLcm5u6o+
Nf99qfZfGLO4Vkr+M9Hk3Kz2R3N1f7Ys36u1wTrrb/7LsWMm9dFlP/Py9odK
M1I6PurgvU3SelddyPfy+yZrx1blerkHJDk59PaOKel/KdemJr8vIfJ90+8l
3+f+rp33s/sZRlldGcO3yfe+zv0AzKnnjc7fR5ufS7679EP1zi1qvadyDtXt
D3V8ydW4hwl1nKXy/Sk19VV9ktV71o1qdJTX1F0jNWUzfp/RzYmUHFf2M5Lf
Cte6ley/Y4/1e5PrqElZ7yr2fC/7X9dXdSTXr1gRbU/TsvkjVWvS6uanF10L
+Mj3jb6XWjj3d+q8v7gfdz8yazY/WblH0Pj9eDz3A6hJOcc1rceIgjLuY/S9
UHCOl74NRT+rG/dp6zyf74VgdN9THY836Iujfo+NzT0I+Jmqk++LMklW654n
ubporm32XGntRVn/TOkpbvn+svW4+r7eVaz5XrKtjMeX5Xo5NrHm+tJ5tDV7
2wcbvxd1zyEtnPs7dd6vS8n3jcfc+5QngB7I99/qdB/8+bnk/puvS7PD5o3X
Jf9j+57q8+DgZ3bfcOz7XOZMzTywq3IfyFoh3/jKZ9Pveulfnt3bbOs8bzyu
rsx1MvluaDJWlJe/P+t6/MbF+L3Ies7nyd+ZXCMcOXeNt3m3k7LeVWz5Xn4n
pD5KNz8jI/3rpc9l6G0tUjqPtqT/ZZT5/mjN76WWzv2dOe/Xlbs+snkNn+d+
AA0Mrt3z99Rqj9diWNPidbwidw/aNHMf2bNxJKOY9Da2yvfK9YTrulRX+V7G
6nVZTvKbyc/LOGhRjpI6nvk33mr8HrO5nH1e7yqmfC+9bqr64kj9lsu51M7t
KKm1b9Ajx7Q232e+78L3Uqzn/bry11KNr1U8n/sBNJS7fm86p3JiZfckPa8h
kJ2D65x/1XvKJj+rziMz7ZWm1u5br5Oi4SrfC91cW6m5Nv350t46omFNfn69
KxnPD/759iCWfF81f1Zq7GNfc6ys1l6uNV3Mow2S70XM30sRn/drydXmNJ2D
18a5H0Bz+Ro/6uYM5caYfN6jPfjYTLP6KaUe0mQbm/ZKG1n/1tN3cVm+L1tn
s4hurm3RurY6pfNupV5Heug3eJ/ZeLJsS/DPuAeh833VmL3U4sj6tKH3Uxm5
R1T62dPMo9XNnTUdt9f9m/d8fzTS76XYz/s15M/3TfdvG+d+AHbycytL+6Qj
vW+ajVlU9aWxsnjfs0ldpIvxe5N7wvk6IJ91l7bj92pG0c21FWVzbXXPWTrv
dvBvdet18utdRV0X0lDIfJ/1IS1yxerV8a8xJveGdPeOFv9Oriub/k5ENX6/
KKrvpQ6c9+u+RprL82v31tDWuR+AveEcmSWnJ7f+/F+Db0+UDuwe1kTKOc3b
+Tfrf1OxFmMRNd97qb/Pf0ecdYfX87ttvtfRrV0kY7t1n6esJr9JD00ZQ5Zt
6eN6VyHyvdQ6lfXGkXs5XZjTXFaPY7sebaz5XkTxvdSR876JfB/SxuftFs/9
AOzJ7/1wrZDB+YV5MuNeuv5j6f755J9ttz+nzc8l93556XB/D9c8z/W2bDyv
Slm3xOTeaZ3xe+knkT2/jP/47r3UJN9XjU8WrWt7w13mY6CZsrWw0nroteZZ
vc/rXbWd7x97/InS3jiyDbHfJ5H+OGX1OEf+4Kuln/Wq2pwmv0dt5vsYvpc6
c943kN0TkesUox756uex5XM/AHeyNbrFii1++391zaFX9yW7XnjdyXPp+iov
WXn2cFzEdH6r1uIahsN8X7f/fcncsaw2VFyy7flW9ruP8XshWV49BlU98cty
UGkOk397dn/le5Uakb6ud9Vmvs/WFCiqs+/CmH3pWrSL140uc7vJdXHb+T4T
8nupM+f9Cvk1eptk+xDnfgBuyTX6laedwJwZj8rWTbE+dyrrOsraLVXr1/7t
6cePPL7oHrTc2506a30y+2J7649X5XubWmLplaLuf11PfFOldRSG62FJ9s3q
hUJ/Tl1qI99LPU7ZHFqpy7LpY9qGdA5tyXoLcq9I7hm5us6tK0S+F334XvJ6
3i/x3qPrhuf2JtlehDj3A/Cjq+fQTlDG2BfG2d2dO0fqbap6uSnrGE5984nw
+yfHZvy+KvsX9cSXLKp7vEm9Q1W9TtXcW3mNbDs6Mc5syHe+l32VzV/Q3Zfp
xP2Qojm0uXoc6QNU5/Nu0mOqzjVyqHyf6fT3kufzvk427i5zdk16enZ6/wJA
BKS2dvcjs2lPPlf3f4eUtdtLazqVfprBe1UobPK9CW1P/EFOlBr9ps+Z1usM
sljTsfxsrV3p6xJ6/7viM9/nn1sl4/mvPvN08PdfRq730nWQSz4vMpc71Jh9
TPm+67ye9xVZnxujbD8/l/b/9FkjBACwk++TkM2FKnpsvvY+xl5nvvO95Hhd
TUe+TqdpDVDaC78s4y+7NP2+V9+zvJ70dpG1dUPvf1d85Xu5BirK9vJv0Y9H
yph9WZ39J0f749jOmSXfT4jFcRvTbC/fF03XugIAtCg/hl9Uo6PcL/bZu6Gp
uvlexmrLxtV1f3/PPzyszYdFdTomzznMYxXrYUk9RtM1sbrEdb6Xuci6+ROZ
2OtxKuvsF9erssnzVZ/NJtet5PsOyPWwlHP/zLqr02td+b3L/ynk34Y9cSKr
zQQA6GXzqhbqPJVexYtjNtm/n/y954Jvr07dfN+UrueKbZ1OXtorv6y2Wq4B
du0Nvr99cZnvJZdKD1Fdrpe/T9cfi+A9F5LarLL7OjV62tvML2/yvOT7yCn9
keugLzYAdMcLf3fD8Pwt91+v3/xQsmv7lrQXRfb3MfdCrcr3ZeP1JvLjo2cs
/0xpnU5Vnqoaa5XMVjqWvzhmG3tf9iZc5XuZR1vU117G86Neh3Zw/WZy/H1d
w7q4XiDfR2x+bqRXQh1e1+UFAPjxyvbk5j85d+yc/u9XbYi+31lVvi+jy/5l
+UXqdFyte1Wmso+mjPMb9NLsEhf5XmpuirJ9zHORTebPmo7Zl11D+lzrinzf
AYN8v2PweybzdjZp/ixz91NvhN9+AEBj775+JB0fjn7e4SKbfN+Erp9O03Wv
SnPaUz9K59dWza1M519GcBxs2eb7sh458m+h31+RdG5FWb9Uy7Wq2ka+BwAA
ttrO90LXT0f+Tn1c0XhpnbHSw7dvqcx/RX12usQm3187M1OY7R97PNI5gbL+
rMFxleu8wmvAis9R09p79eeKnkd3/4t8DwAAbNXN97b1+ELG6nVZUubgNn3O
sqwmc3gr6zdknPfcNdGvv1qkab7P1vPVzX2WtZ5Cv68xO/ZU1thL7pfruqbX
hLZ53gb5HgAA2Kqb713lnm/ddpM2V0qNvq8MJfXXVTU7WT1H13J+k3xf1Nte
euS88nJk9zOk95HBsZPrONu109rM8+R7AADgmkm+95VnzvnSF8eypaw75apn
ptCN275+zz3VtR0dy/l18/3Fq1Zps73USUXVI8cw11fV4nQF+R4AANgyyfdl
eV/N/nXqdyTHn3LKeL85yf2usnyZqp75+THh2Ovz6+T7smwfzfWMSR3O4hzp
l7fXv+9U9hk2+ZkmjzP53SDfAwAAW03yfVO63HPbg3+jzZrSZ6corzfJZmXb
ZFKbn9Xnx7pGlmm+L8r20ts+inUB7rjPKNfLdZnch3F9zRca+R4AANhqM98X
0a1tW1aLX5dJxquV8yV/Sv+WCI5fxiTfF2V7WWMs5LbLPYN0zQKDeylpH/ut
xdd+Jsc59GPLfoZ8DwAAbJXle9M+fy7oemZKDxeXtfimmSvN+YZZM3SNvoy5
y7pU+bkMModB1tzJ19EXzaWVbB9srQZZb1buiRhcU8m+lnoqV9dzbapTs0a+
BwAAtsryvc04ZN3HSs9MbS3+ihWlGd9lrU7jnL84v7PNMX3J7jJOX7TebEbG
7IvG7S8++6LWa3JqjdUv3iuRNaxsj6WPx/pAvgcAALZc5HtXimrxJce2ke2K
HL7qT81zflan73Fd3G2zs5W5vopk/rayfXp/4477zPrg5HJ9VX29y3F60xou
n58z8j0AAHChab4/emB3Ze1Mk7WwitZS3bzxOmdZrmlGlHFko7mfuZqS9B6A
w6yfr7NvSu6J+K7JaZLps2sjWafA9rj6HIe3ee6qnyXfAwAAW03zvc98reuL
73K+rW2fQ8mfxnXjag3PIPM2rdd/7PEnrLO9rF3lbdz+2f1p7U2ta6DcPAaf
ubltTdd5Jt8DAABbpvneZLzeVQaT15E5orr5tlKnH0v2k2sTmfNZO89mdeUy
tn/vrFHel0wu79823wtna9MO8vzh27csXLfUqF/Kj9Wb9Lh0eazL7te0fY1A
/xwAAOBDVb6vk3kkl8t1gIvsIzleV2Ourm9btH2u1yyqzPpP/ajefFzdGPYg
70oNkPSVUcfYb71xg5Nsn9Xe1/2cpNcgg2uRdHz+D77a+H3KdY1cE7nob+ni
2LWR6etsM/keAADYkkwRy/xaldTj6PKp9NL0mcFsyXqqVlk/l/llbFyey9XY
fSbfOzOTXlM8uz/N8XKdIa+b3puwfB9Zpq+zj2PocemrN1MZ8j0AALAlmcJn
vi+rQ1Yzky7Tfeu2m7T5VPq2t5kJmz631OoPc3LDfPyLqf/LabYXs5/+o/Ta
wUV+L5prINcIMdXF+9yWpvX2KvI9AACwJZki1vH7jPTH1GVUWbMp9LbVzZdp
Dx6Zm1sjU2+e+qTzfP9Xv/4Jp3k+m08g9y5C7+f8/vb13K7yvIp8DwAAbEmm
qJvv21zXNiPj9bqceumfr6v8WXXs3XQs3vf7Smv2F/N+2fi+j3x/9QknOcnz
Mj/W9X0T2zkVTV/D9fFu8nzkewAAYEsyhav5tT5zlsyplb7t2qx6zfpW8lj+
333VAqW1+0rm95Hvr/ytE43nAMh8Wsny0itHrklcvl+b/Zj/Wd/Z36Wy5yff
AwAAW5IpfNTnFGUYm7oGyfhnLP+MUcYPMZez6X2CKi7WtNLW50h2/+Qi6d0z
yPBybZGOyTvO8T6ysI+fC7W9GfI9AACwJZki9vr7vKLe+C7H8evktTZypPQK
dZ3v5Zqh6PVcjamb/P8usK21r7N2BPkeAADYkkzRpXwvJO/KOqx1M36Ifoeu
FF3TNCHrCtiuVeZKyPF59Tl8zZmtg3wPAABsSaYwyfdleco2FzXJ3ZLxizLv
RZd9PXhOc5lDRVGf0CZ89x3yMXc1pnF/0897k3s/5HsAAGBLMkWT8fs6eU2X
h1yMlcoYdNE4vvTbMR2jDtE3pegxZTnWxRpXurH7rTt/mF4v2bxnF/nb9v5K
2c+0vU5tU+R7AABgSzJFrPU5Jn04y8bxV/7udK3cWpYvfdX2lD1XPjO7Gr/f
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
1rdqU1uZ3uR1YlrvrEpV//vt39+WrouVz/nSO8l5zs/VgYj33/Sz6p/JjfVn
vXFu+WeDseXB+SR/HWF6XTDRBsdnwweO7bOVP3wz/DYBAKIhmcLl+lameaZq
rNikR42L2nAf9eVN8qR6TVH1/9XXKBq/j20+Q+h1cEO//6r3Zrq+1datW5Pp
6enhMZ8+6RPJrTducNZP/s17LhmpsTHpu67W3ZvWjsi1Sf5aIuu9SR1+uVdu
OZd7HgAALckUk9b/3mW+tBk/dpldq/rf277PKjb3depeH/al3kenzvq1kuVl
rSjJ9vmcL39ndV4YHMd8XxujsftD+0bGk9O6kcu2Gb9mPqvWGvufZK9sT848
8cP1jhMAYCJIpijL966yVCzjpk3fTyzbX8TH/Frbtaja2me+rrGq7iGp/160
v+p85urk+4yMf8vYvdTqDHP+9HQ6xt/knPBPGz5fP2ertTk158mqfXSo0TE7
7vm5yYzhAwAykimajt+7Hkd18Xw+156K5T3qtFl/H8MatL72dejeQE3yfUbG
89WcL7X69z/wgPnzKLXwUidjUmPz2p3njeXzr+/5N/PXVcai647/+zD/xltp
P1KTmid5XIjepc9eN7pWwvRDc0H3GQAgDpIpYu6fE1M2LxLD2H7V+P2k1L10
/T3Y5PuM9M6Ueq18zpde+tKDp+pn39l25WjG3rDD6DXV2vva+V4zx7atXvgy
Di7ZfO+TD6TXR5d/YZl5Zp6fGxlDnzprvdFcBVfUfqSsHwAAEJIpXOV7V2Of
dZ6n63nOFcn3p5xyYq36nJj3nfoZCLmtTT/XTe5zuMj3Gcms0kMzn/9+vPfp
wsfretEbZXQl42a1IrXWXlJ6cbZZb/LS9R8buzYxzsyauqRW6+DV+x7MWwAA
HDXP977yVZ3nNR0nN6nRqVOPbfqzbdHth3yO872+VZ195WMfxrJmsI/ndJnv
M5LzZe3bc1asSHbu3Fn82EFWzM+rrdPfcuTnFrN51VpY6nOEyvdyXSP3POTP
t3dvGXsv4qpfvFe43WN1RW2OoWvmNX9u+0vBv1cAAGFJpqB/jp/cVzXuW5V5
62RiX+vXNul96mNfuf65UKrG9H3ke1Nja8+a5uuCbF4r3xeM39d6DlfU65wP
l68h9cu7Lx997AVbWsv3ck3y8Irjwt0/AABESTKFz3wf+3zXvjDtf49RdfZP
G/syZL5Xe1Sa9q93MvY+yPe6ewC1anwcGukh9GGDNQBy1wRt5mtdvqcGHwAg
maIs35uMj/quX4l9bqjpa/sca24yfq/bnqb7um6fybaPQ901iau22dexDJXv
rXKig9p53euLtT89EObcqOnnUzUXYefXpurPKw553AAAvSWZos74fQy9YmLd
vpDXGLbrW8WqS/cf6m6rrlank/ne0fh9qPp7rfm5sTV1y2p05PHfXfqhdM5C
m/ccdHOiTXuaAgD6SzJFbPX3LtaMdcXnmLvuuav+f9H791V/38X96prt561O
H52u5ntdbU2tbO6iht+xN++5ZKxGpzA3L473hxg7H6slYp0rAJh4kinayPeh
xmHV8fyq8f2QdSbqdtW5D6HL9zb9hmzugzTdT1U/Z7pNVY+r+5loU1fzvfXY
e8D+OYUGmV2tFyrqJ5RdC7RZm5NR500E328AgOAkU4Qcv49hHDeGbbBVZ/3a
EL2CmuhKbU7d7Sx7fBfzvfysWstSu05FV59TNafVt/m5sd6T2rWuFq9NQtW9
q2sHk+8BAJIpXOf7unMZmwo57qp77bZ6SepeI+b6HJ/HKbZrANvt6WK+F9br
12ryfQzzRNX3NXXZtrHHZPl65Q/fjGMbI9hvAICwJFPUyfe6/OJr/DumNUxD
576q53CZ70221dU1XBePqc+emiH7Y9rke3UMuXa+1/SrKZ3P2pL3Hl1XPnd1
ce5Bozmt83PJzh/82CqL6+6dkO8BAJIpivK9q+xlUwceMi92KXs2yfex9x2t
uw111iQO+Z5jrc+xyon77xzL93X6wKs5WkSxDquy1pXakz+b21pr7H6Q6//x
rpmF65klp1vV0mjvu1y2LXn34Hz4fQcACEYyRdv193X6idjmLx+9+W2fw1UO
zavK96F60PvK1m0dx7bnZsS0vlWtfH9o31itep2cqfaAabvPZKFBFr/l0x8c
2barfvHewr8tZn8ZuzfaT/lc76pWfvCcan9M1q8FAEimMMn3MYzjtqHJ+/TV
L6bOc0u+P+WUhXz1ja98Nvh+DK2tz6vt3AJ1O0Pm+3e2XWk1v/XZ6z5l3k8y
RzsGfcGWaMag1fd18veeS/8+q3uvqkOS9/eT+68buz+R5XurHqCadX9D9PAB
AMRFMkXT8fvQmd/3urkxvbdM0XiyaX1O0c+H7CEUy3Frsh11sr3J84fM92M1
NnXH0DU/X9RPcoSmf36ouao6au1QOj6++F7lOqRq7P7Ing1pjr95x3PJoVf3
Jfd+eam78Xtl3gK9cwAAQjKFi/qcpr1jfNSqmLKtE4pJ2/1zfM4xFSbj4nXH
zn3VVbnYtkzQfD8/l2ycOrFxztaNw5vUiujuGxSO+w9y9eVfWJZMT08nJy3/
crLuwb3+94ty3TJ18nnJmhULNTFG1y+K/Fxk2/F79dqD2nsAgJBM4Xt+bQgu
62yKxrarXqON/j/Zc/rI9z63v8ufLZ+C5vuj43XwtWu5lSxcmV/rXFNo1ptq
pc+OpnenTZ17fp6D7Xi72huT2hwAgJBM0fb82jaznavXct2/3fU+CN3/vmt5
3cc6xS72Qeh8r2Zok/oTVbaWq0n+HpvTu2FH4WN1PTgz33n6gLd9orsvIbm8
6dpb6vh943yvrL913Mnfrt+jEwDQS5IpbPK96x6Lofq8xP68VeqsX9sGm3p+
3T40nWuh/r2LeQWuj2nZNoXO92qWbZo/1fsAp960bew64Zd3Xz5WW1J2LTHW
Y6fFnjHqdYjNOLk6ft+4Pke5VxJFP1EAQBQkU5jkexfrGdnWzLjuVRIT222r
M37f1jq7odYW7sLxKhI636cc5UY1v8t82zU33pVs3nhdcuVpJ4z82xdu2lFZ
Ny7zVEPl+/wcAdsad1f1OfnaHMbuAQB5kinars/xlSVd9X+p81xt9Z2pGr8O
UZ/j6r3bPo+LrB2qf1BM/THz8j0hbdZDlX4x2274b2Nr02Z5f+Wf3pHseuF1
4+c7vH9H2v912fLlyfkXXTjsu9NWvrfuZ3nUUX2O0jfHZ30SAKB7JFPY5nvb
cXVfzxWS7Rh53Z+5dmamsD7HtE+QSV2Mq+PadpYOOeejzmvHku/V9aqGazpZ
ePOtt5NXXn45eX7upfS/XfR5ydbc9VqbMj+XfHfph5zNX7Udv1drqH5zU8DP
CQAgSpIpfIzfh1wb1FeW87G9rp6zrfF71/1MfV3Ltf0ZcPV60eR7kZtrG9N6
U0NZHZHntW6zexmu7hHYjt/nfz7K4wIACE4yRQz1OXXzkcnjTe4FuMploWv7
TfN96O2sux/V/+/q/k7Z84TcR1Hl+6OjdedRzd/M3V/wWZtz8LEZ6xollc34
/ZE9G6m5BwBUkkxhku9txm1djVG77HUZaq1WX9sXU/+c2K8hYhZbvhf5vjVr
fxpBnff83LAu59eW3ugv4y7WuLuouc9rPH6fq7mX6w2yPQCgiGSKGMbvY6DL
pa7WuPU9r6Bo/N7HfZEuien9mNTlx5jvxbBXy5LTk1t//q/htmXwe5TVwsv4
tcvcrb5OuqbV4P02WaO2TJPxe5lXnM0lnlqz2dm9BABAP0mmqJPvy8aWXWep
mLJZDNtYtp7s1desT0455cRG9fdN72fEtq6ByftwuXaVj/cUa76XOZ0/WXvm
MOOH6tfy0vUfS7fhk3+23X78en4uuffLS4fvad2Dexf+Psv2jubTquqO32c1
QuKSbc8H/ywAAOInmaLN8Xuf1wCxXA+E6AHkoz6n7fUG6tbax3I9qesN1HS/
xZrvM/me9iu2+O1JqSP9Nuv00yyj66e/ZOXZwxqYlT9808t7qDt+L71yps5a
n8y+6P5aAwDQT5IpfOX7Lq8Ra/MaptnO5NrEdDt89M9p4xollmsyn+rcH4k9
3wupFZH1qbreu6VsvSyf4+RO+t8DAFBCMkVZvveZv3yOvVc9Xxs96dtkku/7
sLaAyTFwdexDzMHuQr7PdDnbpwbHN6tpP7aWl/9xclfr1wIAUEQyRdPx+7bm
brrsd9OFewpNnsukPsd1ttcdl9h7E9Xd577qg4r2U5fyfR8cfu3lZPcjs8m2
2VlndT9VGL8HAPgmmaLv/XNseuW7Xs/J13uxrc/xcb9Dp6gfkc/96eK+RVvH
m3zff4zfAwB8k0zhMt+3PX7blfFi21qkqp+5dmbGef29j/du8zNtXYOERL7v
P3X83luPTwDAxJJM0ffx+75nQtF0/L4v79/le7Pp+2m7P8n3PTc/N+zfnwnV
axQA0F+SKZqsX1tn3Pxffv64cY5SH9tkHDf0mH6Inp1Zvpce+Gq+t9kG39vf
5+uLJvuAfN9Dg0y/Y9OmZPPG64a9N1WnfPPmZNPgMXc/9Ub47QUAdJ5kCtvx
+xgzmuu5pLHPy82P33/jK5/1tl9Nr7divi7I/6zvnkJ1x/fJ9/0ja4P9410z
ybduuynN8EVuvXEDPe4BAE5Ippi0+hzT8X3TDOnyfoH6XFXPnW1j3fqcUPc4
fPScafN9+X5+8j0AALAlmaLNfO9qvDTk2qU278HmZ8u20STfF/WucXl8XB2X
GO8JtbG95HsAAGBLMkVZvteNV8bWG7JK6Hr8Nvjuj1m0D11+Fnwfp6b3Y5r2
SG2yb8j3AADAlmQKm/H7svritq4DYu6d3taasbb5vo9iugdgui3kewAAYEsy
Raz1922Mu8c+b9aUyfq1MR5Hl7192lpP2ednhHwPAABsSaZoI99XZbG2xrlj
Y5oxqx7X1/H70Bm8beR7AABgSzJFrOP3Oqb9ZGzzYgy5smwb1P3QZr6PuZ9+
17eJfA8AAGxJpqjK9zHlnzpM+sVkXNw/sFn31HY/Xzszo833bc9NKFrLzOW+
a/O5dM/n894T+R4AANiSTNGl8XuXOa7Jz6vXDHWuIXxmbdPx+6rrCpP/dqHp
fRjd35vO0zB9XJ1jWvc1q7aBfA8AAGxJpqib79UxWt34pcmYZlfvC5hq8/31
tf5+0pDvAQCALckURfm+Tr9wX3mnSUbu+3WDTpbvTznlxF7l+9BrF/j+LKnP
T74HAAC2JFOE6J/TBbb19K5f33T9Wt/9MUPvF9vnjnmNXfI9AACwJZkihvp7
k1rvor+vM6ez6VqkPt+vC03yfSzXXD62Q/1MmLyGi+2wvd9AvgcAALYkU1Tl
+672pu9CbY+6b033tbqdRfX3bbwf23WmYjwuVcfJF/I9AACwJZmi7fH70DXV
LrNmUe5s+z2azK8t26aqPi8u30/orB76M1O2D8j3AADAlmQKV/le7SsYon9l
jNp4H23W3/vSdIy8yf6teq1Qnz3yPQAAsCWZIob6e5eZrs5Ys0ntfizXGWXv
K0R/zFD7xde9kSbP63o+B/keAADYkkxRN9/H3H+kK1y89/xzhO5/32Tsva05
r023LwTyPQAAsCWZoirfV2Us0wxWp5++q3FUVZ1eO02FuG5pku99bqfuGLax
78u2x9XxdNmXk/73AADANckULutzfGTGtuqyy/Jn0zV66zzeJkdeOzNjPX5v
8vqx3XNpo3dP3W2wQb4HAAC2JFPUyfex5bsuaHt+bVl/zFiPX1e20/exJ98D
AABbkinanl/bhXHhWBXtp6b1913a73W3tekcXJt9YvKzZfdxyPcAAMCWZIou
9s/xlc/aeD4frxFqfm3s1we+5tT66uFDvgcAALYkUxTl+7LsphuDVB/vej6l
+vxt9ktv6zmbPo/k+1NOOTHN99/4ymd79d58vhd1zYbQyPcAAMCWZIq+jd+7
yn4uH29bk1T1WB/j922sT2YyDu7qMU24ft6qfUK+BwAAtiRTtDW/1rQHTf41
YlkDN4ax5zIm+V7d1656wre9b3y9XtM+sPTPAQAAMZFMwfj9KNsxW19jyUUk
X4Ze38rHe4rxuVx/Fuh/DwAAXJNMUZXv6/ZtD5H9mvQt6cqapibb6yrf151z
YfN8IT9DsSLfAwAAW5Ip+jh+72oM3SR3lj2m7N/Ubaz6/2Xy+f7iVauC7nvb
fVb3Z2yfy+V6tLafO/I9AACwJZmiSf+cIuoYr885q13j872Zrm/lUmz3P5pe
Z8WEfA8AAGxJpgg5ft+V3BX7Njepz3HZv8dEm3MSbLfZ53q6Zc9FvgcAALYk
UzTN921kntjGiGNlW3+f3/8+9nnR88V4rRQS+R4AANiSTNH2+L2LTKeunRUi
J5bVWvveHvX5Y6q/b2M/tN2jyPZ9mtbqk+8BAIAtyRS++9+H7K/jYnt9zRet
+vk6z5lfv1bN922t1+ti3L/rPY5ske8BAIAtyRQm+b6PfQ5ffeZp79uuG6N1
2a8lU6c+x2dteZeZ3hOoc++g7r4l3wMAAFuSKXzU58Sy7qzv54yB7/Wt2phn
4fKap+oegMk9gVD3qcj3AADAlmSK0P3v+5q723zvbdbfT/Lx8o18DwAAbEmm
CJ3vM3VrrUPWaseWcV2M37f9nlwfL5/bbzs/wvRnyPcAAMCWZIq6+d5mndUm
jw+RQW3fY91tL5oTbNp3xWd9jsv31tZrdhX5HgAA2JJMEcv4fdvUfBhTv8W6
yupz2s7Xrl4vRH53/ZpV9yjU1yPfAwAAW5IpfPbPMRn3bmPsV+2XX8S2XiRU
b5o64/d17k346jPvcm1Z259X+yi5eO9Nt5F8DwAAbEmmmNTx+1D50ofQ9Tmx
7NsQ11cu5xGQ7wEAgC3JFF3L9zHm67qajg0XvfdrZ2ac5Xsf91N8zl1oSxvX
DuR7AABgSzKFab73nbGaPH9RbUWb7yPEGqvqe4h5/L5o37g4DqZ1VzEweb/k
ewAAYEsyRVG+91F7XdUbxkeOclnr7fsaR82rpvlVl+991c77fu5QYrhHQL4H
AAC2JFPY1Of4zuttjI23sd2+s2PI8fv8e7M5Xib7yPT5Q2f1qtcveh/kewAA
YEsyRZN8b5KffGb/0Pkttu0wzfehtzfU69dZX6DpNrt4b+R7AABgSzJFjPNr
fdfI9622RPL9KaecqO1/X0Sdu1CWe0NfF7Sp6L22cS+JfA8AAGxJpnDZ/96G
7zVida/n8nnrvHbTextF+yjm+bUujrvr/R9S2XaS7wEAgC3JFCHG712Nhbax
NlYXlK1f20UhehLF8D7I9wAAwJZkihD5PtbsVjWuXvceg4trjKLnyP993fH7
NuZDNLlHEeqazPV6BKxfCwAAQpFMEWP9fSy5ryvvsSzfVz1v3de12c42xuW7
PPZPvgcAALYkUzTN91W92tUx0Sa5MOZcH9O2ua6/V49dzP3u2zoOZa/javyf
fA8AAGxJpijK9zHlVxOhx23L9pfvbetb/X3d/evqsxH6M0++BwAAtiRTdKE+
p4jp+q6ua1RcclHTH1P/nJD7ss1aoybPX/V65HsAAGBLMkXofF/Whz10/jNR
Njbc5PWajPXHlO9d7veQ1wpFx8HnNpHvAQCALckUdfK9q2wTug6ib66+Zn3p
+la6ewS6v2vSZ95VbX6dfjuueubHhnwPAABsSabwOX7vMmPVGddu+rq6dW7z
/z9EZvTRH7MNVbVTMeVvm21x+T7I9wAAwJZkirJ877oveGy6VCteJsZ8H5O6
dfBtHVv1Goh8DwAAbEmmaDJ+XzXO3XbmiuF6IuRaui7753SpVt7Xa7Z9PZAh
3wMAAFuSKdqaX2tTp+0qX/no4+5q255/6keNn9d2/L5J3X3b1wExXMPZMPns
ke8BAIAtyRQm+T7WbFW1XSH7npv27qyj6P0U5fuu3xNxsW9cPd73sRXkewAA
YEsyRej+mF0Sa+atW58T6/vIqxrv7sJ7qLuN5HsAAGBLMsX/397dxdhRnfn+
l5whFxkNiqKMhXKRS6JEgRx1LA+WPCTiHDAXmdAEIhwmAYSIUTicgI1pxXaA
mUOixgdbxgEGeTJGBpM0kwQLetoBCw/8pcQvGCYYDA5BIjSxA5GBiQWKbNNG
9d9P2dWuvfaq17VWrVW1vxcf2eDuvVe9dO9fPfXUWj7yfVbusTWXvGn2ayI7
ln2PMl93x/i4t+drXc1V1PQYTY951fHr3o98DwAATEmmcDX/vYtedx+5rw3K
9N+XmWfT1X4N7dnbUI87+R4AAJiSTJGV74syUAgZyWbNt8r26N7Xxljq7lMb
82O6rJ+bbmPT51oTay3okO8BAIApyRRN9+dUqSM3WXOuwiQHu7iv0cT89+oz
paHdn2lqXh4b75P1GuR7AABgSjKFrXz/5v693jNeKJnR9HurZkPJ9/Pnz7Uy
/33XhHQNUoR8DwAATEmmqJPvfdfPTceY/jffdWgb+9Lm+la2qPvU9j6uMkel
j16bOsj3AADAlGQKl/05eXmpSo9zma/1nc1sqNsDn9efo75mmWdfTecqUreh
ib5+V+rOc1TnWJLvAQCAKckUJvm+qd7lJnNaFtM6f533L/t+efm+Ddla3Tdq
r1eoz+Tafg/yPQAAMCWZIi/fNzWnSlZeanKOwzr1Vxs5NEuV/d5Uf06b75FU
Ob556zO4HCP5HgAAmJJMkZfv6/YttzkH+siapvuriflz6m6b6deV1dRzFHWv
d9Xx6cZLvgcAAKYkU/hYv9ZlzguJrbyZ3ke6urOL9WubvnfTtvEUHac6yPcA
AMCUZAofz9e6yPRF9VFdvdTVHJbquFznSpP6vbpfTJ+tbeL86SryPQAAMCWZ
wnf9PrSs12TPvy1l8n3TYy+znpOrcVV9v6bWxipCvgcAAKYkU9TJ9y57nX3P
R++LSVZ00Z/TlmMW6jVXHeR7AABgSjJFUb4PNT/57seu2nvkcj8m9XtZw/ab
V19l/T2b6GNyqcpaWOp5VfU8M3l2mnwPAABMSaYw7c8pm2fq1HhdZUHd61bJ
gKby9kVWX0vevkj356Tzfd39G9o6BSE9E1DlWFYdK/keAACYkkzho/8+1HsC
bRmfqo3zY4b22iEg3wMAAFOSKbLyvc/nMUPPeKGNocn+e5dzEIWyP30h3wMA
AFOSKcrW76vkH1+98bbXjSr7/Vnb21RmLLN+bZ31WlVVj6nuPcv2txf1vJic
YybHxeV1KPkeAACYkkzRlvkxbWUoF3MhmlzL2LgGcN2f46u2beMa0cbYbWT6
Ms9VkO8BAIApyRSm+b5KHbVq1vI9R05bSL6XuXPy6veuhdDfInzV9W0g3wMA
AFOSKfLyfdl5XkzkvUeT2T6E9bOK9kvWHD9l+nPKjiP09QdsHqeq2+r6HCHf
AwAAU5IpmujP8fHsbNFrNTn3ZhHT+xQhzZ/jev+GwsX2ke8BAIApyRRt7r9P
e3P/XmuvVaauG1Kdu0y+d9GHHkqGd3X9aLJ9dc4P8j0AADAlmcJ2vreZs23m
LWFSJ6/zvUXfY2selzr9OTb3dZXtrHKNEOL6Wy6R7wEAgCnJFCbzY/rqgSnS
ZJ9PCNtrqz8nlNxsaxxNHLuqdfq8ryffAwAAU5IpbNTvm5ynssnsFpK8bcjK
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
pY/e1Xmio5sDvyku7lmQ7wEAgCkb+T4rp+nqxaFl6zrZv2xPe5O978lc8Lb6
c2zP72PzGKXJXP9NzvlvOu6isZDvAQCAqaJ83/ScNjZr/21iup9999+XOS5l
jlXV/bDitltOzIE/Ouptu2wed/J9O01u3Rr/3G3cuDF6+513vY8HADDc6tTv
fWTqovd0MadP2dcM4Rojne8Xf2mkFWNO7+e637tm079mXtOEtI1lke/bK/kZ
/MyZZ0ZLrrkm2rFjh/cxAQCGU9vmz6ki1J5xG++jbkuZ+r3r5xxMt7FOL5fM
m+PqmQMf5wf5vr1enX4jzvbJ8Ut+Fu9dt5aaPgCgUa7mz2lqDdNhUOY+go/+
HNfr2JaRngNf/l51X9Zdj9jV/STyfbvdMT7el+/TqOkDAJrSdP3eRuazXWvW
vZ7Jc7ZZ46vbk15G+vlal7Vsk/1i833T/63Ogf/m/r1W37vJexvk+3Y7euRw
fH2dlfHFyMgINX0AgFOm+b5undJWvzx1/hNs1+9dPOfs6lgleUp68X0fh7Lb
nrUvyPftt/2pp3PzvVrTl6/3PWYAQLeUzfdN5WgffeAhqrq/Tfvv20zmzpHt
lrl0bO1PX8j33SC5vWzGT9f0Dx444H3sAID2s92f05Yc1cT2VFkXwFTV+n2X
jlOZOfBdng829yX5vhskp6vP2lbJ+nJ9IHNtPvPCXu/bAgBoH5N872I+87zX
t5m1s3q0XeT5JjKm6fpW6des8tysy+eoy762rF0r2y1r2YZyjOq+H/m+O6Qe
Xyffq+Q6Qe5Ryf2pR7ZsocYPwBv5/SPzCCB86VwonyPnLV3SWrItXXyvMuSZ
2vTztb7H0+Q++vtF/zOo7bZ1HP/u8ku8/35AfeOrVtSu4Zet8cs1hNT45ble
35/7ALqvyvNFaJ90BjH5Gtvv2dT25o1F928+x153m6psY5ltznq9on1jc9+5
fq2q5wVgi1xHyP2rsbExavwAnCHfAwDQjHQPz+TWrcy9CcAJWcdP7hsKuU/J
n+H+mZ7nYeSsz0eX3zo2S55XLPNn1t/T/6/Oa+q+z+S9yr5+0XtkvUaVfVNl
X5TZV0mPipD++yr7PG/7q3yv+qf0m5ieN+n/l/fvybZL/3qV18x7j7z3rvK6
VfanPAOTbIs8Mx3C7wj+rP+nq/4c+Rm/aenS+BncV5//dfT+0Rnvn/sAgHCk
77VI/Sfdx1n096w/i76u6O9pZd4v/WfZr8n62jJjVl+jzjjL7mPdftWRz/nk
OMo9+qxjYXt8ReOs8755r5l1rklvgmz7xMRE4bGrsl+rbIeNYy3HLjmOckzL
jg/hsfV8bfK7Wa4Xdj1ObR4AUEzN977Hg3rUfO97PE1L7kNJBvI9FhPk+24w
mR9Trc373hYAQPvs2LGDfN8Bw57vZa4S2XbJ+b7HYkL6p8n37Vd5fauzPh/X
+6nNAwBsoH7fDcOe75Ptb/s5TP2+/arMLyHXAdJz43vMAIBuId93w7Dn++Q8
ljqo77GYoH7fbvIshfTXFPXfUKsHALhEf043DHu+lzm7ku1v81wi1O/bTZ7/
oFYPAPCtr37/jcu8jwf1DHu+l7ppsv2S9X2Ppy7q9+2le6ZWavVyHGcOveN9
fACA4UH9vhuGPd8L6c2R7ZdrVt9jqYv6fXtJfUSOm2R8mf9Gfrf6HhMAYDiR
77uBfP9hfP62PRdTv28nuaaUNRjkmNFXDwDwjf6cbiDffxjXTGX7JSP7Hktd
1O8BAIAp5s/pBvL9qWcb2zwHPvV7AABgiv6cbiDffxg9smVLvP3SJ+F7LHVR
vwcAAKboz+kG8v2pa1V5vtH3WOqifg8AAExRv+8G8v2J+QmTfSDzZfoeTx3U
7wEAgCn677uBfH9Csg+eeWGv97HUQf0eAACY6qvf05/TWuT7E2Q9IdkHk1vb
uU4o9XsAAGCDzNcs6yu+f3TG+1hgdhylL6WtvSk2JGsM3bturfex1CHHTo5j
cix9jwcAAADwKal/D/M9DAAAAKArpG4v+f6bV1/lfSwAAAAAzCRz4Esfvu+x
AAAAADAj8+a0fQ58AAAAACfIc6nJ/DMyH77v8QAAAAAwI7V7yfcy96vvsQAA
AAAwk8yBL734vscCAAAAwMySa65p9Rz4GC4fvHUg7iU7VPS1M9Px10kPmu8x
AwAANGnFbbfE+f6mpUu9jwVQHXtzX/TExh9GN158weyzIuK0eT+IXpk5Pvg9
x/ZFP73+/L6v/erUG963AwAAoCkbN26MM9Clo6PexwLM6uX0tX81ty+nq67b
8+f+73lvl/Z75lz44+J6PwAAQEdMbt0aZ6CRkRHvYwES0ocj157bXtwf99h8
8NK2aPEnz+jP7bc+fep7cq4HyPcAAGCY7N+/fzYH+R4LoPP+0Zn4z9+tvagv
t3/07HVxj87RI4ejX1z0sfj/fXrZQ/H1wLOPrI6WfO3q6MIlt0cTr//F+zYA
AAA0RbIRc+CjDY7vWdtfmz9jYfTksQ+jt+6//ESd/srN1OkBAAA+ZA58tMR7
u6Llf9Pfg7Ns3aa4b+fTf/uP0eOHAxgjAKBVpM755v690c6pzdH4qhXR1z4x
P1r53Hvex4VqkmMovb1iYmIi2vnan2Z7AIbRBYsWxVlJ9oXvsZTBz+JwSvfh
FD5rCwBAht0/uj6eV+Tcufr5G8ZePuJ9jCgmuUD6cdXn89R7/f/7oaeH8v5+
Mgf+HePj3seShZ9FCLUHP+7L+e7kUF+fAwCqee0/1kRjY2PRDV8ZGfhM+fTp
K6PdR/2PEQWO7YvuPvsTfcfuwtseiWv2UgN+Yu11A/NqD9t9fsn1su2S832P
JQs/ixADPfhc2wEA6pqZjjbMmTtQM/I+LhQeNzXb6/o41Ln3hq2XV/pyZLul
T8f3WMocU34Wh9h7u/rvw52xMHr4UADjAgC0jvR3/Hzh6ayJ2DJ7ln2u75jN
e/CVzK898uSqoZ0zW56rjefAP+vz3sdShJ/FIde7vlOP/+Jfve1/XACA9tHU
jO75g2ZtdARDvY8vPRza9ewTmtzw1xtf9r4dTXh1+o3ZbZb87Hs8ufhZHG4H
pwaewfjIXb/xPy4AQPu8dP9Aj3ZuVoRfmr6cvNp94uj28f5rgiHq00m2Wda7
8j2WXPwsDi/Nz/Ww3WsDANhz8J6v93+epNdFR3iUDFi6R1czv3aZ64IuGBk5
8dzq9qfCPrf5WRxeurlzhu06HABgiaZvg7mWw6b23Zet8erm1/7o2euGojYo
c0/K9sqaAL7HkomfxeF18ppdsvx/vj44J9YP97L+AQCgAqXfVz5fmK8hYMf2
DdTgq8yvotaHh6W/+6alS+PtXXHbLd7HkomfxeHU+5le+1dz+67nip6dl2v1
gwcOMC8+AEBrmOdVaSW1N6fic7Lq8R6WHp02zIHPz+JwSrJ8+uf48OTy/nPh
ys19Wf7tn1zL/R0AQKbfrv5y6bka3n7n3bhmJH/6Hveweuv+ywfyeaXPeM38
HMMwv/ojW7bE23rOggXex5KFn8Vuk5q7HK90Tk9+ngeu5ZSfU7mX8+Sxk/92
8hqfdW0BAFqa+Rp0ayU++8jq/jn75LNl2QPUFj1Q79tXzveaZ2yHoU6czIH/
mTPP9D4WLX4Wuy2d189YGK169IXo+U03n8jup68cfH62dz4kPTuJL969I3p3
1+b4dXjmFgCQSVMj6vvMOLYvuue8j2vndCiqL8IBzfOXlXu0Nfl+GLKC1LqT
7Q2y5s3PYqdlzY2T9/yL7lo+oVunGgAAkdvj2csb6RyYzC84bHXfoGiere27
b19GRr4fhuc4pXYv2/vMC3u9j0XFz2K3qcc3kbc2rbqG3ezxf2za+/YAAMKl
1odmPzd6eSLpAZhz9fejra+f6P9Qa1BkiobZqL1nvEala4SWkt572d7JrVu9
j0XFz2LH9a7N77xkXt/P3Pptxc+1P7vy3L5af5nvAQA0oPf5PL5qRTx/h5D5
+Vz+Xd6r1GeApr8zvk+cqhGPbu6/5z+w9g6ZolkZ9fuq+V7t3x6W+v2l37gs
3t571631PpY+/CwODXnGdubQO5W/h+doASAsx/dsyOyhdKVUL64yz6I84yVr
JCX93V+deqP/6zW93/T8NsxC/V6ywi9HTxvKfl65DpZtHRsb8z6WPvwsAgDQ
Klk9lC6VmQ89mT95tv63dlu0a81l2d+vqfsy93LDbNTvbfTwt5TU7WV7pY7v
eyxp/CwCANAuUi9N5j1O7s3a/m+5d5v8tygzLrWGe97SJSeyRcZc6Ee3j5vl
SpjL6K2x0Z8zDMdS+u5le0ObA5+fRQAAYExTw036AnYf1X+PuvYO/b5hHDdb
z9cOQz7cv3//7Db7HkveMeVnEQAAVJbq950z/1S2+OHejB5szfN/ZXqAYJe2
d/6Mhebz3+dkyS6Re1zJNst8+L7HE+NnEQAAWKDOvZHXCxBT1t4RWWuywC3j
9Ws19eJhqv8mc+DLera+xyL4WQQAAKakBvyLiz5WqQY888D/Gaj3yvwevrdl
GL11/+Vm+V6TD+fc+rT37WrKBYsWxdv8yJYt3sfCzyIAALBC059RlO92fHvO
0ObB4ChzKYoqcyMeeXLVwPcPzL/YYUuuuSbeZlkrwvdY+FkEAAA2DMzXecbC
/Pv7mn4O5uLzqHc81P5r6ecou/6Nuu5p5f79lkvmwL9p6VLvY+FnEQAA2FB5
XXt17Z0hmSs9ZOr8KWV7NHT9IHOu3DxUa2Nu3Lgx3u5LR0e9j4WfRQAAYEyz
7uXIY9O536P2e/c9+9d7vW29vET/b8PUHp2ium9C0w+y+Fdv+9+eBm1/6ukT
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
U3/3shYhAMCm9BoqUkNiHjYAcEd+x/IsLQDAtXQPKL34AOBOuqbC/AYAAFfk
3jD3igHALXW+HHruAQAupefUoaYEAPala/fcKwUAuPb+0Rlq+ADgiNp3T+0e
ANCEdA2f2hIA2CNriHOPFADQNLW+5Hs8ANAV6fnumYsYANAkPoMAwD5qJwAA
X9LrrrCmLQCYS89RJvMR+x4PAGC4pOdv43MIAMyle++pmwAAfOA+MgDYk567
QLK+7/EAAIZPej1b5nADADPpee+ZexgA4AOfRQBgT3reAmomAAAf0vmeOXQA
wAz5HgDgG72iAGAPPY8AAN/I9wBgD/V7AIBv5HsAsIf6PQDAN/I9ANhD/R6w
aGY62jm1ObrzknnRvAdf8T8elHL0yOHohd1bonVXnN2a49bGMeeRfD8xMUG+
BwALQsn3R55cFX3qU5+KRkZGtM6dOz+6bs+fK7/u8T0bet+b/brinAULYvL+
K597z/sxQbsce3NftHvzhuiGr4zE51DiI3f9xvvYkO2Dtw7E12Lrb/h6a45b
G8dcFvV7ALAnlP6cd3dtju5dtza65Jy5fZ9bfc5YGN3zh+OVX/eO8fFo2ejp
2a/bc9aib0XL1m2Ktr5e/RoCQ+rYvmj532Sfr13IXJ3UxuPWxjFXRL4HAHtC
yfdpv1t7Uebn2KdPXxntPlrvdSXrSy2/7/X+9h+je1/8b+/bjBaamY6mHp6M
66m668cuZK5OSh036aNqxXFr45grIt8DgD2h9OeoDt7z9cyMP+fKzdGhmq97
eHJ532vV6fkBBry3K1r8yTM6l7k6T1MXD/64tXHMJZDvAcCeUPO9s/vRqRwm
9wKePOZ3O9+6//JOfDYPvZnp6OcLT+9c5uo6eUb1l6Onteq4tXHMZZDvAcCe
EPtzYr0cnpfvxeJfvV39dVM5bM6FP659H8DWNsq1Rhc+m/FhJzNX17UxK7dx
zGUwfw4A2BNs/b5Evq/zvG36s9F3vk/G0YXP5mHX1czVdW08bm0ccxnU7wHA
nmDr96n+nDlXf3+gt7nu87ah5Hvpy+nSZ/Ow62rm6ro2Hrc2jrkM8j0A2BNs
vk/V7/9648vRhy/db+V52xDyvfqMbxc+m4ddVzNX17XxuLVxzGWQ7wHAnmD7
c1L1++SzK13zNnne1la+l/2VeP/oTKnvUbP97PVLg/t25tA7fWM3eS3d90v+
qLJPTPZnk9ta9rwqOidtb2N6n7t4bZeyjkl6e2xtS/o10//vFxd9zEpWdrH/
XY85JOR7ALAn2Hyfqt+nP7v2LPtcZsYvM9elWr+v8jksa0dOrrk5WvylEe37
/8OKf8vsFZL33bXmMu33nbZoSbwGl1hx2y3R+KoV0apHX7C3L2emo/2P/zj6
3hXn6+9/zLs8Gt+ys9I9EHm9eM73MxZGjx8+dczWXXF232t/8e4dTvZnU9ta
VlFN9eD2B7VjkvHIsa6TB//44lPxOqbqmg6JC5fcHj30/KHc19j9o+ujsbGx
vvNP/pRzcNl9TwyMS75evib5uvT3LL9t/alzIceb+/eeOO7Sc5c+f07uJ3Ud
YHHxXdtqHTNZ80Jd6zXe7/O/HF3/8HPx9u349pxaWdnJ+et4zCFL5/tXp9/w
Ph4AaLNg+3M09ftYL7/dffYn9Bm/lxUmXv9L4WvXqd/r6u5Z5DNY/f437vxs
6e+3+XktWSH97IKs5yV5TLKYuk6O/FvW/pP8Knnyvn9eMvA98RyjL92fmTPH
Xj5ifX+63NY6dPk+vi/TO48zz9d0drvwltJZ8IOXtkXLF3yy7/sXfPuqeFt1
2VheO2td5tcm/l/2tZDm50Py/U1Ll2Ye66xrbDl3ZjO97vzp/Vz/+7fOtraP
5FrznvM+3vf9C0eXxmNPr5E9Z/7gM/xlfvZcnL+uxxw66vcAYE+w9fusfC8O
TtV+3rZO/316rS151nfbi/tn75lLrVg3Fqlbp2uf8r7y+fXC7i2DGWfZQ/G/
ie1PPR3/ufO1PxnvQzWDfOGfpga29/cP3ajPW6mvKVpPeGrf4NpOeZnPxv50
ta116fL9OXdNDuS1PLIvi+rfx/esLczucf7XzD117eSr2ePfPl4q36e39z9X
nlsq3+dd28oxkPOncK6sZEzfnSw+HsrvB3kPdR+p14JVsrKL89f1mNuAfA8A
9gRbv8/oz5mV97xtLwPk5fYq/Tlv/+TaU69769OzX9/3fRlzeerm52/s2bhe
XkjXWPOyrLbunPp3qfEuW7cpuvfG83Kz1/xb10c/vX6wFpzOfLb3p+1tNaG+
dt/1xnduj3/G7nv0Z9ETa6/L/LrT5v0gemUmY85X5ZyX8zfza3vXx2v/anAf
znvwFe3Xy3mprs9VdP2rXmtk5ftjb+6L+y2kht933+GMhf3bvmhJtH7bK/G5
IM9NPL/p5sF91Puehw/lHAdlXTzZn5nX+xnnWd7Po5Pz1/GY24J8DwD2BJvv
8+r3J6U/a3X1Mt33VKrfp/JU0X2BI0+uGrzO0Lx+U/lerWdL5s2qDavPLWfu
F3WN1lQ+S9eGX/uPNfoM6mB/OtvWinTHNRmLtge+d02iy9/iq1Oa3mMlA8rr
5ubck+8xUO/NWDNCN/7CfaNcV2Xl+7R07TttdPNvtNfaumfqs67J4ntk6b70
Eutj6K5RMn8eHf0+cDrmFqH/HgDsaWV/Tkqd523L5vv0525hnVfJX1mf1U3l
e7WnJi/z6urCWftFl8+kjql+XTLvh+v96XJbq9Ad18IMnlGL1dXwf7v6y4X7
XEfXJy73t9QsXSvfa45RUb7X5V7t9UxqH6nXKFk/L+prl9pHmm3Ien0X56/r
MbcJ9XsAsCfYfF/Un5NQa8rK56mar0rX71O1yc+ceWZhTS2rfqtml6byvdpP
ndezotYDpTaZ1fcxkO+L+iUc70+X21ppf+vycYle8eN7NhRfm9bI0XnfW/a6
szDfa65PisY1sP8LnoHQ9Q3pfl50X6d7rrvMcdP+PDo4f52PuWXI9wBgT5v7
c2Zl1EGT/KbeRy+T7wd6f3qZSObBu2DRIq30/BZ5n7uN5fve+0j/soxN5uDI
nSdRqWnn1b/VfJ9bK29gf7rc1qr7u9Zxzbg+TX+vWuOtOmbdPS5d/bmJ+r0u
3+dtS5X8XfRzb/L6Ts5fx2NuG/I9ANgTbP2+Sr7/MLsOmtRRk36EMvPf69aP
qeujZ6/ry0ghfTbLc4/yrKfaQ20737vcny63tQqT46p7jqRv7vya11QJbS+4
0qPjs35vI9+r+7Bs31WZ13d1/roccxvRfw8A9gRbvy/bn5OS97xtul5Zpn6f
/vyUr3vm3TeigwcOVKbbpz4/myUbyBpC6vzpaubK6plQn3csm+9d7k9X21pV
7eOqeU41OTez+vorjVnTw66e+0313+vunxRtS5n8XXnsOd+rO262z98mxtw2
1O8BwJ5g833F+n3iWc2c3Gr2SGpxmZ+nytyCrudJb+KzWd732UdW9+U8WV8z
nmPbdX+Ow/3pclsbO66anJzO92rtuPKYNXV2X/neRf0+6xqozHMVpY6bg/PX
+ZhbiHwPAPZ0pT9nVs7ztsmaMck8GJnz36v1zrLPkJbg47NZ5qtMb8+Ftz3S
lyOqZK469Xs5lq72p8ttbey45tTXs3Jg1XxfVL8Xbe3PMamF67Z74Lg5+H3g
fMwtRL4HAHuCzfc1+nN036uSNXSSZ9/y6vdqHio9X0mBRvN9bzv61k/t5ZIf
7n1v8Otc1+81xyNzrZ+AtrWx49ob+4Y5Sn39ZH981jwslc7H3jXv3Wd/IjdL
+uzPKdr/tfL9lZvt9bo4+H3gfMwtRP89ANjTtf6cWTnr2xbmF13eKjnfeBmN
fDZrMvXK5zR598MG6ve9fKmu5WRzf7ra1saOa8585ln5vtL1kav++0Dq97p9
b3UuGke/D5yOuYWo3wOAPcHW703z/Yf6tX3E/Pn59XsrzzSefJ1//9bZA3Ne
N/HZ3Lcm5qfy52Kvkrl0898X7ReX+9PltlYdm0l/Tt79Dd0armXm1s97fXV+
zDbne9088sLWXPJOzt+MPkLmvyffA4ANwdbvU9mhcK3IHHnP21bJ93XGIblM
1sKZ9+Arua9t/bNZc+8iL3c5r99/OFirtLU/XW5rFTb77weyo2YbK+VLTf1e
lyMr5/uDU5X7VlzV79X1favs/zr5vs75m8zvlZy/LsfcRuR7ALAn2Hyfqt8b
3Qufmc6cuzpvLnVdzVSySNnn6pIcI9+TvufuK9/n1QVN6vdl87G1/an2MDjc
1ipszn8/cL5r+udF2R4ddf573Xlfq35f8dpKt/+L7v/UXn+q5DWQdrs1v29c
nL+ux9w29N8DgD3B9uekao5V5pXIei3d87a5r6upeYrT5v2geL737eOzXz/y
2PTAv5vMm1GGLovk1RoH6oi9zFWlfl+qjuxof7rc1qrU41qmvqv2lmRdb+h6
zcqeN+q4dNcF2h6Ugn7w3629qNK1VczB87XJ+aX9GVfW8RqQMzep8/PX9Zhb
hvo9ANgTar5P1/nUGngtmlpj0WfinmWfG/iexP9+6OmBuapljdSfXn9+X51U
/ZqyOeq/No1H67e9UmtbB2qkGTlKxiLzSVapIdbtz7GxPyVLqV/jclurqFtT
VWvrmTX5ujX8g1P9Y7pyc2Z21OV13TbItu7+0fXa41h0z0J3/6Sofq/ef8ua
Z0bX7yK+8E9Tmdusrcv3fh5157SL81e3z22OuU3I9wBgT4j9OfKZrn6Wqs9U
1qHWQPP6c2IZNbu0sxZ9K7p0dHRg/VGpC9/zB/1aNerzoHFmWfZA/NmfzgR1
77nrMm8yJrlmePX5X0dPbPxh7radc9dk/Bkr2Sqd2QYyTs522t6ful4Il9ta
9ZwdWIeqIHMd37OhUjbW9bvLdk68/pfM/Z2u8xbV49N15r5z8+rvR9te3N+3
L+U5iDnzvzx4nHouvmtbnNV0azUNPJ/dk3v+lJy7P6asQ6VuQ7y+2cmvfXP/
3r7srTt/llxzTbx+wqGcsZiev/KaTsfcIuR7ALAntPq95Nu+ecxTrn/4OePP
rXSNr9Q97Zfu12aYXAWZV63Z6uhq/6XlrPGlkprizqnNubkl6TPR1b/j/Xjl
5vJjrbk/tXPZO9zWOnTXbTL2Zfc9ET3z7huz9dgP3joQPX7n4r6v++LdO8q9
j66no/ceqx59oe9c/uClbQPZvrCPJGMemqx9Kcdc99xpQu3FlzHp9r1cx2Y9
575rzWXa17528lX9duiugQxIVu6ro9s+f5sYc0vQfw8A9oRSv9fdc85i1FOR
et62dM9qL1NlXXMMjG3ZQ8W9RDnP/Cbjqp3tEyUyg9RZD50cT2YNcdkD0Z2X
zCu17QtHl8ZZtnCf2t6ftrb1u5NG14+SR5/fdHOl/Dfnwluih54/VPl9snLv
311+yez6bem8V/p86h0bXR+Qek7I6+nuWfzDin+La/1qJi7Mrydrz/e++N/x
92Rtn/o9upwvNYK8n6/075H0etaJ/3HN2mhix69yn82xev42MeYWoH4PAPaE
ku/f3bV5dhyJiYmJgf8n7nzgMbPPsZPPpxX25ygObn8wuvHiCwY+c+We/LJ1
m6Kdr/2p/Bh6OVOyYF8W6+UV6eO19hnde48n1l7XlzfjsfYy+EDe62Xk5Qs+
eSrDzf9yXBOW19imOQZ5yj4rYXt/1t7WeZfH22qr5hn3+m9/Ippcc3O8fWre
l3Etv219te3TkEwo77H4SyMD+3DBt6+Kf05qXSf29qU8/9GXyXvn5oVLbu97
JiR55uAL37m9MA8XnTPJz3py7si5UeZcy7s2kt8p37tisJ9FrkPHt+ycvUaR
exayrnXy/7z8Pki9pssxh4x8DwD2hNaf0xT5jKyb5+R700zHIuNwfT+97Dht
bI/v/Rnytro0c+gdJ8emjb0eTR5r2+dvE2MOEfkeAOwZ1nwPAAgH/fcAYE8o
/TkAgOFF/R4A7KF+DwDwjXwPAPZQvwcA+Ea+BwB7yPcAAN/ovwcAe+jPAQD4
Rv0eAOwh3wMAfCPfA4A99OcAAHwj3wOAPdTvAQC+0X8PAPZQvwcA+Eb9HgDs
Id8DAHwj3wOAPfTnAAB8I98DgD3kewCAb/TfA4A99OcAAHyjfg8A9lC/BwD4
Rr4HAHuo3wMAfCPfA4A95HsAgG/03wOAPfTnAAB8o34PAPaQ7wEAvpHvAcAe
+nMAAL6R7wHAHur3AADf6L8HAHuo3wMAfKN+DwD2kO8BAL6R7wHAnmD7c2am
o51Tm6M7L5kXzXvwFf/jQXt05Nw5euRw9McXn4ru++cl0adPXxk9ecz/mABX
yPcAYE9I+f7Ym/ui3Zs3RDd8ZST61Kc+Nesjd/3G+35C2Lpy7ry5f2/07COr
o+9dcX7fdnz6b/8xevyw//EBrtB/DwD2BNGfc2xftPxv5vblmTZnNDSoK+fO
S/dnbkOS76nfo8uo3wOAPUHU72emo6mHJ+OeimWjp7c3o6F5XTl3etux6/Gt
0fanno4ev3OxNt9Tv0eXke8BwJ4g6vdp7+2KFn/yjHZmNPjVoXNnz7LPke8x
VMj3AGBPcPl+Zjr6+cLTO5HR0LAOnTtv3X85+R5Dhf57ALAniP4cxS9HT+tE
RkPzunLuHLzn6+R7DBXq9wBgT2j5XuYE7EpGQ7O6dO6Q7zFsyPcAYE9o/Tld
ymhoVpfOHfpzMGzI9wBgD/V7dEWXzh21fv+pMxaS79Fp9N8DgD2h1e9F2Ywm
4xXvH53xPmabsrYn2V6b2zxz6J2+1zV5Ld33S+auOl6TMfk+d5LtNX19W/V7
W8dXtqtrP2cIC/V7ALAntHxfVIM9uP3BgbU9xZx5l0erHn0hM4Mc3T4eXX7r
WHTH+HhsxW23DPx9bGwsfg3d9+/+0fXxv6vfs/y29dErM8eNt1vWX51cc3M8
v+NHz14XHUr+7di+6LHeuHVrHv3Din+rnvlmpqP9j/9Yuw+T/Ti+Zeep9y9x
vOT14rnn0zXm93ZF6644u++1v3j3DqdjcnXuFPnji09F62/4enTuXP3aVBcu
uT166PlDlV5T139fan0ry8f3+J4Nfdt17eSrTn/+MbzI9wBgTxv6c/5648tx
zr377E9oM0tffrnwlmj30cHXfXeXfv2jtG9efVW07L4ntOP6r03j0Y0XX6B5
vx/XzvdSW332kdXR8gWfHHhNyV9yTVK0vWLlc++Vej/ZB+n54SUzynWKXKPc
ecm8gTw58fpfMo+RZNr7/nmJPoO+dH9m1h17+YiTMbk8d7J88NK2gWO34NtX
xeO/4Ssj2tff+vqfS712nfq9zX0Z06wnIH64t9z5BlRBvgcAe9qQ78+5azK6
57yPl8q6cXY5fWVmFvrd2osGv+eMhdE9fyiX0X+7+suz3zfvwVdqb+OOb8/J
zplXbo5zf9ntFV+dyu9XPTy5vO/rv/BPUwM13N8/dKM+rxftv9R+n9qnz4SJ
6/b82fqYmjp30o7vWVuY3eP8/zdzB96jTA28ar63vS9129h3zeT59wS6h/57
ALAntP4coWa0vtzyndvjsd736M+iJ9Zel/l1p837gb6uPjMdbZgzmLnUurKO
5Mdk/STJgSZ9OZL91mz61+jeG8/LzZtzrv5+9C9Te+LPuxd2bxnoeUnLvEY5
ONVXT8/Lddr6d+rfX5v4f9GydZsKxz3/1vXRT68f7BGZzfcWx9TYuZN46X4l
2+fcwzm2L1r7V4PnW9G1YaX5MR3tS3U7yfdwifo9ANjThvp9klm0Pcy9bKPL
TyKrpq3WOuOM9t3J4vGlcpSteVlke39x0ce045c+CPl39esH5lYp2AZ1e/Oy
olo3TnqFBr5WXSv2jIWzf0/Xp1/7jzXaHOxiTE2cO5LX0zV5ee2HDxWfNwP3
NAruGVXJ906O78ljrO6fUtsL1EC+BwB7Qqvf6zJaYaZ4b5e2DyKvhj+Q60r0
6Mxmrgr9PGXo8npRT31Wn5FuP6lfm1sL1tSms/Kfbtxzbn1ae0zlWQPXY2ri
3En3Z2Vtr07WNWXWM71V+nNcHd9Y73pGnrNY8rWro8Xf/zFzdMIZ8j0A2NOG
fF+mti7zfOjqsOl+77S3f3LtwNfm1uRT1wSFmagiNSfL/DmFvT+6a5SMbVCf
083r31B7rvP6kHRztJet7boYk/NzR6nd551fAzTfm3edWKV+7+r4Ak2i/x4A
7GlDf06pXhi1X6ToezV129znDVN1z6JnWauq1DOR83159fPnN90cXbBoUbRw
dGn+XI1KfTcvV1bqEW9gTK7PnSNPrqq9vWLPss8NvEdWL3uV+r2r4ws0ifo9
ANjTmXz/YfWavK7HJStvJX0Zpechr0DNyaXvDxycGsz3Ne8tyPz78sypOq+l
q3zvYkyuzx3T7VWvD5L7C7oeHd29EZPzrs7xBZpEvgcAe0LrzxF1M5o6j0hh
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
      "], {{0, 1104}, {760, 
      0}}, {0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
      Automatic], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {760, 1104}, PlotRange -> {{0, 760}, {0, 1104}}, 
    ImageSize -> 216],StyleBox[
   "\"Figure 8.19\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.19: Net area bounded by \
parabola",ExpressionUUID->"162e136e-21f6-4668-a292-01cc413ccd92"],

Cell[TextData[{
 "\tIf these points are to lie on the parabola ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"A", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"B", " ", "x"}], "+", "C"}]}], TraditionalForm]],ExpressionUUID->
  "76317c21-0c26-4eb2-9a71-c1f8c043bfc6"],
 ", they must satisfy the following conditions: "
}], "Text",ExpressionUUID->"400181d5-7a14-4154-ab49-0aaefe8a501b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"p", "(", 
           RowBox[{"-", "h"}], ")"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "h"}], ")"}], "2"]}], "+", 
            RowBox[{"B", " ", 
             RowBox[{"(", 
              RowBox[{"-", "h"}], ")"}]}], "+", "C"}], "=", 
           SubscriptBox["y", "0"]}]}], ","}], "or", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["h", "2"]}], "-", 
           RowBox[{"B", " ", "h"}], "+", "C"}], "=", 
          SubscriptBox["y", "0"]}], ";"}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"p", "(", "0", ")"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"(", "0", ")"}], "2"]}], "+", 
            RowBox[{"B", " ", 
             RowBox[{"(", "0", ")"}]}], "+", "C"}], "=", 
           SubscriptBox["y", "1"]}]}], ","}], "or", 
        RowBox[{
         RowBox[{"C", "=", 
          SubscriptBox["y", "1"]}], ";", " ", "and"}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"p", "(", "h", ")"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"(", "h", ")"}], "2"]}], "+", 
            RowBox[{"B", " ", 
             RowBox[{"(", "h", ")"}]}], "+", "C"}], "=", 
           SubscriptBox["y", "2"]}]}], ","}], "or", 
        RowBox[{
         RowBox[{
          RowBox[{"A", " ", 
           SuperscriptBox["h", "2"]}], "+", 
          RowBox[{"B", " ", "h"}], "+", "C"}], "=", 
         RowBox[{
          SubscriptBox["y", "2"], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"04a7ada1-cef0-4a45-ac02-04673512520d"]], \
"Text",ExpressionUUID->"5ff5f57a-07e3-4116-8ed5-68d77011301f"],

Cell[TextData[{
 "Solving this system of equations for ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "94b790fe-e7aa-45c5-af81-465c0c6e0c5a"],
 ", ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],ExpressionUUID->
  "e0447136-76ed-407f-a9a9-d3bcc1349d90"],
 ", and ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "8d19736d-e625-4604-8620-2d87ffcb59ce"],
 " yields "
}], "Text",ExpressionUUID->"c1939fb7-6f66-4509-9a83-a46c3577612e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"A", "=", 
          FractionBox[
           RowBox[{
            SubscriptBox["y", "0"], "-", 
            RowBox[{"2", 
             SubscriptBox["y", "1"]}], "+", 
            SubscriptBox["y", "2"]}], 
           RowBox[{"2", 
            SuperscriptBox["h", "2"]}]]}], ",", 
         RowBox[{"B", "=", 
          FractionBox[
           RowBox[{
            SubscriptBox["y", "2"], "-", 
            SubscriptBox["y", "0"]}], 
           RowBox[{"2", "h"}]]}], ",", 
         RowBox[{
          RowBox[{"and", " ", "C"}], "=", 
          RowBox[{
           SubscriptBox["y", "1"], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"675e3cc8-05d0-44f8-a608-abd227af2b7f"]], \
"Text",ExpressionUUID->"5e2d77b9-5b0e-4028-874b-cc69fcbc4d2e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"655a6f81-8fe2-4ac5-8ec0-1075b6173cf4"],

Cell[TextData[{
 "Recall that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "4d21b081-a136-465d-8f46-f9311bb42df0"],
 " is an even function and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "d5668e57-b0fb-455d-bb49-a75a7984c25d"],
 " is odd, then ",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{" ", 
             RowBox[{"-", "h"}]}], 
            RowBox[{" ", "h"}]], 
           RowBox[{
            RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", 
            "x"}]}], "=", 
          RowBox[{"2", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{" ", "0"}], 
             RowBox[{" ", "h"}]], 
            RowBox[{
             RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", 
             "x"}]}]}]}], "and", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{" ", 
             RowBox[{"-", "h"}]}], 
            RowBox[{" ", "h"}]], 
           RowBox[{
            RowBox[{"g", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", 
            "x"}]}], "=", "0."}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "32f574a2-f707-4e14-9224-5bcea8cd48a7"]
}], "Callout",ExpressionUUID->"2c0d75b0-e804-4f11-9454-72d0e41a8bc1"]
}, Closed]],

Cell["Therefore, the net area bounded by the parabola is given by", "Text",ExpressionUUID->"b9c301ba-9a7c-471c-8f2c-cf0a8eced6b2"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{" ", 
            RowBox[{"-", "h"}]}], 
           RowBox[{" ", "h"}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FormBox[
               UnderscriptBox[
                UnderscriptBox[
                 FractionBox[
                  RowBox[{
                   SubscriptBox["y", "0"], "-", 
                   RowBox[{"2", 
                    SubscriptBox["y", "1"]}], "+", 
                   SubscriptBox["y", "2"]}], 
                  RowBox[{"2", 
                   SuperscriptBox["h", "2"]}]], 
                 StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                StyleBox["A", "TypesetAnnotationFont"]],
               TraditionalForm], 
              SuperscriptBox["x", "2"]}], "+", 
             FormBox[
              OverscriptBox[
               OverscriptBox[
                RowBox[{
                 FormBox[
                  UnderscriptBox[
                   UnderscriptBox[
                    FractionBox[
                    RowBox[{
                    SubscriptBox["y", "2"], "-", 
                    SubscriptBox["y", "0"]}], 
                    RowBox[{"2", "h"}]], 
                    StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
                   StyleBox["B", "TypesetAnnotationFont"]],
                  TraditionalForm], "x"}], 
                StyleBox["\[OverBrace]", "TypesetAnnotationFont"]], 
               StyleBox[
                RowBox[{"odd", " ", "function"}], "TypesetAnnotationFont"]],
              TraditionalForm], "+", 
             FormBox[
              UnderscriptBox[
               UnderscriptBox[
                SubscriptBox["y", "1"], 
                StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
               StyleBox["C", "TypesetAnnotationFont"]],
              TraditionalForm]}], ")"}], " ", "d", "\[VeryThinSpace]", 
           "x"}]}], "=", 
         RowBox[{"2", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{" ", "0"}], 
            RowBox[{" ", "h"}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{
                 SubscriptBox["y", "0"], "-", 
                 RowBox[{"2", 
                  SubscriptBox["y", "1"]}], "+", 
                 SubscriptBox["y", "2"]}], 
                RowBox[{"2", 
                 SuperscriptBox["h", "2"]}]], 
               SuperscriptBox["x", "2"]}], "+", 
              SubscriptBox["y", "1"]}], ")"}], " ", "d", "\[VeryThinSpace]", 
            "x"}]}]}]}], 
        StyleBox[
         RowBox[{"Use", " ", 
          RowBox[{"symmetry", "."}]}], "TypesetAnnotationFont"]},
       {
        SubsuperscriptBox[
         RowBox[{
          RowBox[{"=", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{
                 SubscriptBox["y", "0"], "-", 
                 RowBox[{"2", 
                  SubscriptBox["y", "1"]}], "+", 
                 SubscriptBox["y", "2"]}], 
                RowBox[{"6", 
                 SuperscriptBox["h", "2"]}]], 
               SuperscriptBox["x", "3"]}], "+", 
              RowBox[{
               SubscriptBox["y", "1"], "x"}]}], ")"}]}]}], 
          "\[RightBracketingBar]"}], "0", "h"], 
        StyleBox[
         RowBox[{"Integrate", "."}], "TypesetAnnotationFont"]},
       {
        RowBox[{"=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["y", "0"], "-", 
                RowBox[{"2", 
                 SubscriptBox["y", "1"]}], "+", 
                SubscriptBox["y", "2"]}], ")"}], "h"}], "6"], "+", 
            RowBox[{
             SubscriptBox["y", "1"], "h"}]}], ")"}]}]}], 
        StyleBox[
         RowBox[{"Evaluate", "."}], "TypesetAnnotationFont"]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["h", "3"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["y", "0"], "+", 
             RowBox[{"4", 
              SubscriptBox["y", "1"]}], "+", 
             SubscriptBox["y", "2"]}], ")"}], "."}]}]}], 
        StyleBox[
         RowBox[{"Simplify", "."}], "TypesetAnnotationFont"]}
      },
      GridBoxAlignment->{"Columns" -> {{"=", Left}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"230d18f7-1b25-49a9-bfe0-ba797c6e032b"]], \
"Text",ExpressionUUID->"b27f07a3-41c1-47b6-967b-101f129fa674"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note  \[RightGuillemet]", "CalloutIconFont"]], \
"CalloutIcon",ExpressionUUID->"3150fb5c-a87d-4509-af63-b7117a1053fd"],

Cell[TextData[{
 "In the event that the three points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "h"}], ",", 
     SubscriptBox["y", "0"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "37dc565c-7a3d-4e82-8ef3-d514e8b390b8"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "f0f8a0f9-45a4-4931-91b0-bfdb7fbf3603"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"h", ",", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "2b565307-2c68-4347-8348-42cb8d4ad908"],
 " are collinear, there is no parabola that passes through all the points. \
However, it can be shown that the net area bounded by the line segment \
through these points is also given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["h", "3"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["y", "0"], "+", 
      RowBox[{"4", 
       SubscriptBox["y", "1"]}], "+", 
      SubscriptBox["y", "2"]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "2e2931d4-4993-4c5f-9358-5f847035d96f"],
 "."
}], "Callout",ExpressionUUID->"26bc990f-d631-4f22-b661-e1f0983dfa7a"]
}, Closed]],

Cell[TextData[{
 "Notice that a horizontal shift of the parabola shown in Figure 8.19 does \
not change its associated net area, which implies that the net area bounded \
by the parabola on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     SubscriptBox["x", "2"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "50a4f152-42aa-4db9-8cd5-185047a0e756"],
 " shown in Figure 8.18 is also given by "
}], "Text",ExpressionUUID->"0a2ac5c0-c4b3-4f58-92c0-1d24ec9ff2b8"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox["h", "3"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["y", "0"], "+", 
            RowBox[{"4", 
             SubscriptBox["y", "1"]}], "+", 
            SubscriptBox["y", "2"]}], ")"}]}], ","}], "or", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "(", 
            SubscriptBox["x", "0"], ")"}], "+", 
           RowBox[{"4", 
            RowBox[{"f", "(", 
             SubscriptBox["x", "1"], ")"}]}], "+", 
           RowBox[{"f", "(", 
            SubscriptBox["x", "2"], ")"}]}], ")"}], 
         RowBox[{
          FractionBox[
           RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d3fc6cce-8f3d-431b-8f29-62caeb7648c2"]], \
"Text",ExpressionUUID->"43d99ec6-4f12-468b-bb0b-3c64b288b17b"],

Cell[TextData[{
 "Similarly, the net area bounded by the parabola on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "4"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "a6801a84-96da-4795-aee1-79ebedd78b18"],
 " is "
}], "Text",ExpressionUUID->"cc85e91f-67bf-423f-a596-6940296e1271"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", 
            RowBox[{"(", 
             SubscriptBox["x", "2"], ")"}]}], "+", 
           RowBox[{"4", "f", 
            RowBox[{"(", 
             SubscriptBox["x", "3"], ")"}]}], "+", 
           RowBox[{"f", 
            RowBox[{"(", 
             SubscriptBox["x", "4"], ")"}]}]}], ")"}], 
         RowBox[{
          FractionBox[
           RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d37fa578-8971-451d-9df2-5866078c0849"]], \
"Text",ExpressionUUID->"ab9146c4-0c00-4d34-8806-837d9f2a433c"],

Cell[TextData[{
 "When we sum the net area of all such parabolas, we arrive at an \
approximation to the net area bounded by the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f289f1fd-c91e-4024-b313-c5c5bdcdeeba"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "504979d6-4ffb-4997-a5c0-2a1c6cf2d0e2"],
 ". With ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "f211adc7-6416-4baf-82cf-02381be11841"],
 " subintervals, Simpson\[CloseCurlyQuote]s Rule is denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "b6fac31f-baa1-4d81-bf20-0b1f987e5372"],
 " and is given by "
}], "Text",ExpressionUUID->"8a7a28d2-5d74-445e-bed0-83fdf98e4a17"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"S", "(", "n", ")"}], "=", "\[AlignmentMarker]", 
         RowBox[{
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"f", "(", 
                 SubscriptBox["x", "0"], ")"}], "+", 
                RowBox[{"4", 
                 RowBox[{"f", "(", 
                  SubscriptBox["x", "1"], ")"}]}], "+", 
                RowBox[{"f", "(", 
                 SubscriptBox["x", "2"], ")"}]}], ")"}], 
              FractionBox[
               RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{
             "net", " ", "area", " ", "bounded", " ", "by", " ", "first", " ",
               "parabola"}], "TypesetAnnotationFont"]],
           TraditionalForm], "+", 
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"f", "(", 
                 SubscriptBox["x", "2"], ")"}], "+", 
                RowBox[{"4", 
                 RowBox[{"f", "(", 
                  SubscriptBox["x", "3"], ")"}]}], "+", 
                RowBox[{"f", "(", 
                 SubscriptBox["x", "4"], ")"}]}], ")"}], 
              FractionBox[
               RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{
             "net", " ", "area", " ", "bounded", " ", "by", " ", "second", 
              " ", "parabola"}], "TypesetAnnotationFont"]],
           TraditionalForm], "+", "\[CenterEllipsis]"}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"+", 
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"f", "(", 
                 SubscriptBox["x", 
                  RowBox[{"n", "-", "2"}]], ")"}], "+", 
                RowBox[{"4", 
                 RowBox[{"f", "(", 
                  SubscriptBox["x", 
                   RowBox[{"n", "-", "1"}]], ")"}]}], "+", 
                RowBox[{"f", "(", 
                 SubscriptBox["x", "n"], ")"}]}], ")"}], 
              FractionBox[
               RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{
             "net", " ", "area", " ", "bounded", " ", "by", " ", "n", 
              "\[VeryThinSpace]", "th", " ", "parabola"}], 
             "TypesetAnnotationFont"]],
           TraditionalForm]}]}]},
       {
        RowBox[{"=", "\[AlignmentMarker]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["x", "0"], ")"}], "+", 
            RowBox[{"4", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "1"], ")"}]}], "+", 
            RowBox[{"2", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "2"], ")"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "3"], ")"}]}], "+", "\[CenterEllipsis]", "+", 
            
            RowBox[{"2", 
             RowBox[{"f", "(", 
              SubscriptBox["x", 
               RowBox[{"n", "-", "2"}]], ")"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"f", "(", 
              SubscriptBox["x", 
               RowBox[{"n", "-", "1"}]], ")"}]}], "+", 
            RowBox[{"f", "(", 
             SubscriptBox["x", "n"], ")"}]}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"], 
           "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b137b66d-21b9-4e97-92cd-7ae8e051a82d"]], \
"Text",
 CellOpen->True,ExpressionUUID->"ae671f0e-5d85-48cb-9886-f28efc4f9eda"],

Cell[TextData[{
 "Notice that apart from the first and last terms, the coefficients alternate \
between 4 and 2; to apply this rule,  ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "d7750cbe-2709-4576-aa50-13b14fa38f87"],
 StyleBox[" must be an even integer",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"ede92a59-eedb-4c3b-8a4b-987288d43b7c"],

Cell[TextData[{
 StyleBox["DEFINITION", "DefinitionFont"],
 "\t",
 StyleBox["Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold"],
 "\nSuppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "78dd44d2-0586-4738-9200-601353fdd498"],
 " is defined and integrable on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "18cb478f-4cf6-415f-b50e-67f480000a88"],
 ". The ",
 StyleBox["Simpson\[CloseCurlyQuote]s Rule approximation",
  FontWeight->"Bold"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"881f414f-2204-4d29-b998-351a07a82c91"],
 " using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "95e20e7b-23b6-454d-b338-be1516d1958a"],
 " equally spaced subintervals on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "9efb8627-a185-4c46-a291-468f296b7d16"],
 " is \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"S", "(", "n", ")"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f", "(", 
               SubscriptBox["x", "0"], ")"}], "+", 
              RowBox[{"4", 
               RowBox[{"f", "(", 
                SubscriptBox["x", "1"], ")"}]}], "+", 
              RowBox[{"2", 
               RowBox[{"f", "(", 
                SubscriptBox["x", "2"], ")"}]}], "+", 
              RowBox[{"4", 
               RowBox[{"f", "(", 
                SubscriptBox["x", "3"], ")"}]}], "+", "\[CenterEllipsis]", 
              "+", 
              RowBox[{"4", 
               RowBox[{"f", "(", 
                SubscriptBox["x", 
                 RowBox[{"n", "-", "1"}]], ")"}]}], "+", 
              RowBox[{"f", "(", 
               SubscriptBox["x", "n"], ")"}]}], ")"}], 
            FractionBox[
             RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "3"]}]}], 
          ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "1117191c-7c7d-441e-89c5-b2cd1b6362ee"],
 "\nwhere ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4e3086bc-db06-4944-8cb4-93d93fa1c300"],
 " is an even integer, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{"b", "-", "a"}], "n"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "4e595ae8-95d9-4234-adb3-41707239f960"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "k"], "=", 
    RowBox[{"a", "+", 
     RowBox[{"k", " ", "\[CapitalDelta]", "\[VeryThinSpace]", "x"}]}]}], 
   TraditionalForm]],ExpressionUUID->"81f1017b-4b56-4065-9ba8-ad1e8358b308"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "0"}], ",", "1", ",", "\[Ellipsis]", ",", "n"}], 
   TraditionalForm]],ExpressionUUID->"994eacdb-3d78-49a2-a3e6-3825590725c6"],
 ". "
}], "Definition",
 CellTags->
  "DEFINITION Simpson\[CloseCurlyQuote]s \
Rule",ExpressionUUID->"07a9a5d2-fa9a-48a1-87ad-8553930550a7"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 7\t", "ExampleFont"],
 "Applying Simpson\[CloseCurlyQuote]s Rule"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s \
Rule",ExpressionUUID->"d7737cf9-98ee-48eb-8c82-405f9536747e"],

Cell[TextData[{
 "Approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", 
      RowBox[{"\[Pi]", "/", "2"}]}], 
     RowBox[{" ", 
      RowBox[{"5", 
       RowBox[{"\[Pi]", "/", "2"}]}]}]], 
    RowBox[{
     FractionBox[
      RowBox[{"sin", " ", "x"}], "x"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"b230bca0-ca16-470f-9ce4-8e25cb5404cf"],
 " using Simpson\[CloseCurlyQuote]s Rule with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2a23724a-49cf-456b-96d7-1bf7fb2056b2"],
 " subintervals."
}], "Text",ExpressionUUID->"63017e70-f420-4bae-9274-ea26c353b425"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"4a256a92-9adc-4959-bfcf-d58f56159a81"],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "2"}]}], "-", 
       RowBox[{"\[Pi]", "/", "2"}]}], "4"], "=", 
     FractionBox["\[Pi]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "3e3215cd-ed79-49ae-bc21-d47fc0e1d916"],
 ", and therefore the grid points are "
}], "Text",ExpressionUUID->"9bd95932-b095-439c-abd4-ebd7de832b9a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "=", 
          RowBox[{"\[Pi]", "/", "2"}]}], ",", 
         RowBox[{
          SubscriptBox["x", "1"], "=", "\[Pi]"}], ",", 
         RowBox[{
          SubscriptBox["x", "2"], "=", 
          RowBox[{"3", 
           RowBox[{"\[Pi]", "/", "2"}]}]}], ",", 
         RowBox[{
          SubscriptBox["x", "3"], "=", 
          RowBox[{"2", "\[Pi]"}]}], ",", 
         RowBox[{
          RowBox[{"and", " ", 
           SubscriptBox["x", "4"]}], "=", 
          RowBox[{"5", 
           RowBox[{"\[Pi]", "/", "2."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2226c6b2-6d7f-43d2-9c55-e6feeebac267"]], \
"Text",ExpressionUUID->"c08dc076-6785-4fec-8668-389e5f509122"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{"sin", " ", "x"}], "x"]}], TraditionalForm]],ExpressionUUID->
  "7565cbeb-e354-46a6-ad10-20a7d95c9eeb"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "87404d99-14ab-4ab4-baee-7e0a139ed320"],
 ", the approximation given by Simpson\[CloseCurlyQuote]s Rule is "
}], "Text",ExpressionUUID->"bce7a3a2-3463-4de1-aedf-067dbc420c91"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"S", "(", "4", ")"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "(", 
             SubscriptBox["x", "0"], ")"}], "+", 
            RowBox[{"4", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "1"], ")"}]}], "+", 
            RowBox[{"2", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "2"], ")"}]}], "+", 
            RowBox[{"4", 
             RowBox[{"f", "(", 
              SubscriptBox["x", "3"], ")"}]}], "+", 
            RowBox[{"f", "(", 
             SubscriptBox["x", "4"], ")"}]}], ")"}], 
          FractionBox[
           RowBox[{"\[Pi]", "/", "2"}], "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"sin", " ", 
              SubscriptBox["x", "0"]}], 
             SubscriptBox["x", "0"]], "+", 
            FractionBox[
             RowBox[{"4", "sin", " ", 
              SubscriptBox["x", "1"]}], 
             SubscriptBox["x", "1"]], "+", 
            FractionBox[
             RowBox[{"2", "sin", " ", 
              SubscriptBox["x", "2"]}], 
             SubscriptBox["x", "2"]], "+", 
            FractionBox[
             RowBox[{"4", "sin", " ", 
              SubscriptBox["x", "3"]}], 
             SubscriptBox["x", "3"]], "+", 
            FractionBox[
             RowBox[{"sin", " ", 
              SubscriptBox["x", "4"]}], 
             SubscriptBox["x", "4"]]}], ")"}], 
          FractionBox["\[Pi]", "6"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"\[Pi]", "/", "2"}]], "+", 
            FractionBox[
             RowBox[{"4", 
              RowBox[{"(", "0", ")"}]}], "\[Pi]"], "+", 
            FractionBox[
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}]}], 
             RowBox[{"3", 
              RowBox[{"\[Pi]", "/", "2"}]}]], "+", 
            FractionBox[
             RowBox[{"4", 
              RowBox[{"(", "0", ")"}]}], 
             RowBox[{"2", "\[Pi]"}]], "+", 
            FractionBox["1", 
             RowBox[{"5", 
              RowBox[{"\[Pi]", "/", "2"}]}]]}], ")"}], 
          FractionBox["\[Pi]", "6"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["2", "\[Pi]"], "-", 
            FractionBox["4", 
             RowBox[{"3", "\[Pi]"}]], "+", 
            FractionBox["2", 
             RowBox[{"5", "\[Pi]"}]]}], ")"}], 
          FractionBox["\[Pi]", "6"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["8", "45"], "\[TildeTilde]", 
          RowBox[{"0.178", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"880351b9-7391-493b-912d-f92762cf6c64"]], \
"Text",ExpressionUUID->"4b51202f-c97d-462a-9440-f41cd0527aaf"],

Cell[TextData[{
 StyleBox["Figure 8.20", "FigureFontText"],
 " shows the approximation with two parabolas. To perform error analysis on \
our approximation, we need to look ahead to Theorem 8.1; this theorem \
involves finding an upper bound of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftBracketingBar]", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
   TraditionalForm]],ExpressionUUID->"2ca2c449-0428-47ea-ad79-d93a1cf141c5"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"5", "\[Pi]"}], "2"]}], "]"}], TraditionalForm]],
  ExpressionUUID->"3065675b-655d-45bc-98bc-8c01d61701a1"],
 "."
}], "Text",ExpressionUUID->"2f6a1903-0014-4251-a238-0d106ad465b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
PvbJep0pry67aLXWqLomaf7bW2cpaXlIn+pd6scz4R63leP9/sCBhq/V8qPE
cWP7GoWx1uqFavlRPIsBAACmvm5yl3YymZDDLFywoFoPE5+3UECV+WWzvWpm
XH57Zh1Ds2M+tuazR+ogTv1Wf+ebldf6yZnvGB9rq/UxNL+W9RlJ0/2hY1lD
Ym1NyvvTdobyZsg4Ppq4F7/zwqHs5xwcii6K7encde5Sf24zB6Lr7nsyeua2
q7LHXrf2qGb2usei3w7eWz2OXrsAADA91ecuISs5Z+7caGBgoLqWKK2upVsh
g1m/fr0Mpogq88X6GoEwVwzz1MS6iR/vav+Ylflvbc+bMO/tOLPp8jxqeUGY
4zadn5MtpTblgtsfS2QXYV/p+n2NZqzYnHnM17auTP29cOKyezL3TQq5x+eP
T8kAK6+TVVPz9KqPpL7Osi27O74OWXsVhQwm696K93ipZ30RAABMT632Mwp9
dEP/lqGhoWp/3fCYkKGEXGYiGczmwew5GpMoNsd+26pHx78Xn3e22ycjrKmo
1RxM+rqKyvlsXfaB8THbU6a7axivTanlDWHdWahhW3v1gpZZSMhallyzNPr0
aSe1/J0w51Pnj9fV1N8/mSpjCb2/q/lHXV1Vq+c0rd2JqfVj6Sg/ia2Lqsms
AwIAAKa8iewjHTKZkMeEY4QsJdTLdJK/hMeHPiLP7/2v3K/DdFXf6zS+B3B8
jUc7uctrj9/61uMnq84lrjIPr687UPfSuZCZfPrbW6r1aXu2PRit++bKaNGF
H2+8H95/bvSJG++IHt39UuoxQr+d8Lsh1Lm14+5H9lSfF+poQo+hdp5Tq5UZ
fuCO9GPedVfDfzvpVRTG8b1LTn/r5+OdC6JVW1vUzcRrbmYOtH4OAAAwpU0k
d0kTeuqGY4Yeu53WwIQMJ+/rMa3EemF8cntjbUj9vPP9l61q2TOlfu+ZkOHk
2suirr9qmC/f+6J+L3Qn5MtBR88b6+I5AADAlNTr3KVemHeENQkhU2m3V0zo
L2MN0uR4YfXZDX/Ln1Av2oNDDfsJF2J9T90ex832NwYAAIB+6WfuUq+WwbRb
BxP6x8hf+ujgUEPP0mY9UVuK7yXcZh+YyVDfG3hC5wgAAABdmKzcpd7I3r3V
12qnH0yof9m27eHcr9NUE+8ZGl9j1O2xwvqiQu3hHNvbdyLnCQAAAJ3KI3ep
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
dwl7SYTc5T9mnJn4rHvK7JOj10f1saBzhat3eTO5F0nNJZs72Dv96Lywo94w
R3Xzs9T0OUd7gHRy3PDY8Jyg2+uY9Xr1x55QJlU5r9qxevn7JxyrF+ff1vtT
dw7dXIvf3vuV7u7PSbqWmSZY75K1j3ZxcpfYfk1d1MzF759e3o+9IHcBoEzk
LhRRWr1LMPaeS6vZS9p+ue5fulHMvrofTZ3TBRfc3v4ez6HX6XOv/LGtx47t
fi4avONrHWU14fhDG2+Jlv/t+5M9fA8PV7+36MN/3TgvPeMz0aqtu1OP97un
t0Xf+MKnU+fD655ob5+lsKfTpn9ZHl10wrsaziN8/Yf/fGXqNZ2/7DvN9+iO
CRnwly/6UHLOXTm3a28brK6LXHvN1e3XfoyNVs997dULUvdtC866ZlV09yN7
OrqPwjFr1yI+7w7nUHvfGu6vmwbbzl/G79PKsVvuVz5Z17JNE6536XCd0eCa
q6Ibli+v/t+peitXXF89z/j9sH3NP1Uff8PK1YnnfGXZmpbjnOg6o9rP0afO
/+vU8/zEjXe0/bulX+QuAJSJ3IVCiu1nVMtdDtz8/WruEvaVjn8OPGnWrGhk
/wT+3sq0VMR6lzf3bcqcf1fndp/5akc5QZZabnLtuX/eePwma5Nqz0mbK9f2
ut71r2uajj9426pH3zru4eHoe5ec3vTxzeopWp1H/TqYZpZtSc+D6sdZvwYs
ZAOr7/xZdc5325c+nDheO3t4h/f62vc17o3zwYWfqs65U/OI826M7n0x+71v
yFrS5t2Vc/jpFWc1vQ7hNdq6vypj/8aa27qbf/fjWnYiLTfpoCaktndT1s9A
3PADd6S+n6k/b0dzl8WLrsz8OWp1PSaSu7T781I93/ue7O370gG5CwBlIneh
iLLqXYKQuwRf/+/JtRhLrlma+9gpl0LmLmHelbHWqCdznoND0U3nvSN73p2V
u2T8jb/mK9t+FW1d9oGGr737bz6QOXeszlErc/f6jGDG+8+t7g+f9RoNdQ+V
65Q1/60e6/Lboyce/Frbc8ig2VqZ+tcKuVH8Gr32+K2dZQWx6xnyjvjcOOQo
afV9aRnRb77x7szzCvPuO3/1v1KPlXrtVvR3Htvza9mhidS7ZOUS7fQUTntu
0x5MlXs8/jPVXu7SXX+X+rwm3I+hxqq2T3jIjtJ62jRkqJNI7gJAmchdKKqs
3KW2p3SQNp/buWtn7mOnPAqZuwSHh6O1px7fen58xmfaXoNTE+acF1+2tHrO
aXUmmfPAyhxwZO/e6hqEZjUTYY63duuOt45Red6v11za/Dw+89Xo0d0vNbzW
Y2s+23KOF3KJcB5pNRLx4/+/D/6i+vth9yNbmtbXpK1pqZ+nH/u+r2bPr+uy
lGZz4/i8P1zzzGMeHBrfo7lefM/isFYsXMNwTRpqaGYOxF7rs+Pz6XCdn7nt
quR1qDynWV3NRPT6Wnaly/4uzWpB2loLVbnePznzHYn3vunarpSx9qPe5ZUf
L27I3VLHVLkX07K7nr8/bZC7AFAmcheKqFm9S21P6WDdfzst8flv4YIFuY+f
8ijcfkZ1Qr7RrC6lYe52+e3drT3qZh74ZpO+opVxpM6jK69T29s6bva6jJ41
Kc9JnadXHpe1D1Sz3iNZWdCMxfcnHvvC6rPfmsMet6JpXUOtVilzLnp4uGHu
GubELTOOWF1Q7dyy5vpZPYKy+gMl+rCG6/DjXX25r3t6LbvUab1LyLKaZXUt
16g1uadb/rylrDvsde5Sfz3Ce9Lsd0lWzc5k7x8udwGgTOQuFFVW7hK88akl
TWtetm17OPfxUw6FrXepqczTHrnm4raylzAPb3v+V3f8jueBQcrfvTP/Rn5U
6nytxXqWgw9c2/b8MS1raNXv9elVH0m9jg05SCybalqjERytT8iaG9fnDu1c
g5r6eoRmGVHWtb74/uGm72c81+nL3jw9vpZdy1gz9+lvb4k2bNwYrfvmyugf
/v6KzL6yNe/5+7WNdVr9+HmL5XTd5C6tetc0rNe787nm55BW89IkA+wXuQsA
ZSJ3oYia1bsEe7Y9OJ67bPnTOYnPwgMDA7mfA+VQxP2M0oR+F/H+q1ky60cy
xPOKbnOXrJ6i41Lmuq2ek6hLaFrj0TjXbDmnDypz2rQ1PA2ZQ1pNULNMonLM
0AejYX+nuu91Oodu9tzM6xG71i3XmXR6jt3q5bWcgKx6rXacfv5l0eI1mzrL
W+rOv+PcJeVnraf9XWL1NC3zk4zatY8N7uv9/dKE3AWAMpG7UFTNcpfg8Fmf
G89eEvX3FWEunfc5UHyFr3epV5nvPH33jS33CqrO5bLW+6SI5xXd5i4t84OU
tTKd9p5t9pyuzuPNjDqSWA1KvEYlOO3GjZl7+YR1KWnfi9ehdLS/b0a/5dT1
QF3kLok8oB+5Sw+v5YRk1Lv8zRc+Ue3P/tGB/5H+c5VRX9S2Sctd2l9nlLj/
Zw5Ue1ufM3fuuPp/Z16bPt0vWeQuAJSJ3IVCythHul5tT+ngP2acmfgMeMrs
k/M/DwqvVLlLzeHh6MEbLuxZ9jJpuUsXtR5pdQm9zl1CHpS4drHnxtc71c9R
O9lX6jffPL/73OXNjLVaKVlA/LoVKXfp1bWciJb9XSr3d9rePUGzPa9aKlru
ktUXqQthP6e2ft56RO4CQJnIXSiiVuuMxveU/rMLx7OXtM/I7mlaKWXuclRY
e5Q1N6xpZ4/XSctdunnOJNS7pO0dlXhuyvqYhsef8Zno3h0Hmr9Oypy709wl
tQ9L2nkWuN6lJ9dyotrZz6jJvumt+gZ1dJ1zzl3qxxPW5oXaopH9I1Uh26j9
71R79zY8tq/vWYzcBYAykbtQVO3kLq+uWj2eu7w4YyDx2fikWbMm/bMg5VLk
/Yzacni4+Z5HbewHXOTcZVLqXdqdC2fsodswv112T/aamJTagm5yl0Q/45Sx
FrnepSfXcoLa3c8obZ+nrt63Tu+1Cf7ctN3fJdbfqOvzyoHcBYAykbtQRO3W
u9TvKR18/b8nex/csHx57udDcZW53mVcZS7XbN1Rq/lzkXOXSal36WQuXJmn
trMuI3VfqR7Vu8RrnEpX79KLazlRabUsaXv+NNn/vKu9k3Oqd8nczyh+P7WR
0xaF3AWAMpG7UEht9HcZ76972fUNNS9pPUd37tqZ/zlRSEXaz+iNHT+v/k7u
do3Fs9e/N3N+2GxeV+TcpVD1LnWPf+a2q1rmBWdv2JN4XlrO0NEeye2siUq5
boXMXSZyLSeo3XqXrPt2/Bq1uQd41/fa0dePZ209W2eUcuxe7x3VL3IXAMpE
7kIRtVvvklbzsu6/nZb4bLxwwYLcz4liKlS9y9HeHV33p8zaE7nEuUtu9S5t
zKcPv/xsy/7GDWPNqJ3oaJ47lepdJnItJ6qd/i51mu073VEmVLT+Lim/M9rp
CVUEchcAykTuQlG1m7sEhy5Y3JC9pNW85D6nppCKlrvU5lfXPf9GV8eI93Xo
Z+7S6d/gi1zvEu/zGp9Lj+1+LrPXSKhTyuqxEx9DWr+QjvYmTuvvkpKPFLne
pVfXckJj6KTe5ai0/cY7zoSK1t8lY+3b9j90uNaocpyfXnFWdPH9w325Z9LI
XQAoE7kLRdRJvUvw28F7G3KXnxzzfyQ+F8+fNy/386J4CpW71K1D6XaOmbbW
SL1L63Np2CMo3uMivC8zjm+Zj/z23q8k5/LHrWjoAdLNfD8+1nje9Z0XDrW8
boXJXXp4LSekw3qXZj9fqfdMJ9e5jdwlvodVv/YzGh/Tj3d1dD1rmVSv14M1
I3cBoEzkLhRSB/1dasbec2lD9nL+X8xKfJbctu3h/M+NQinafkbbl77VG/pj
g/s6fn5WPUVRcpdOa2Qmo97lta0rmz/v6Nw0zPtb1QEcfODaxHy8Yb6b0p8l
aHetUfz4YU1aWhZR2HqXXl7LCeg6/8p4/9rOhbrJXTrIHrN+FpqdW9rvjPD4
tvvrHh1fV3UyEyB3AaBM5C4UUaf1LsGBm7/fkLts+dM5ic+S58ydm/u5USyF
qnd5M7Y+oNO9RSpzuvrcpuaSzSMtXnOScpfKnLVw9S4p8+DE8ese08451vfL
OPZ9X03MxRN5Qgdj/cUXZrT33ha43qWX17JrXda7VO3blKg/aTfjTN1LvEVe
8+s1l044d2maWaXU09Sud6vr8drjt44//q/u39P7+6UJuQsAZSJ3oaia5S4P
vrwnNXupz12CtM+SGzZuzP3cKI4i7WcUxOfkYS6Yuo4kRdrf8FvOVbv5+3tQ
mRN33N+lMl+N917qZ71LmGu2vHax+XdqP926a9SyF0tsXp16LbuseYlfi2Zj
6abeJZ4H9LKfSt+uZZey6l3azTnjNVKd5FW/+eb5ieek9rKtnP9jaz7b1Wu0
3d/l6Ouk5bU11942mOjHE/og3/alD7/1eyaj7qqf5C4AlInchSLqpt4leHXV
6obc5T9mnJn4DDkwMJD7+VEcRat3ydo35br7nmw+59y3KZGDtJU7pPSUbefv
/mnjbFkfkVJj0HLvlJTnZOUTaeslmv3NPpxDfQ6UmVHFsqmmvUNj2VLmWrG0
molm9U2x+qJW63TS+is3vRdSah76nbv07Fp2IatPSyf9SdLyk5pmNWZZmc2M
z3w12vL4zuoefYN3fG38/Zhx7mdTe8V/4sY7qr+z0noUJ3KUVrVzGTUvNSfN
mhWdfv5l1T5pibF0WpfXI3IXAMpE7kIhddHfJW1P6SAxF60In9NyP0cKoWi5
S2p+UpuXnfGZaP1DjzTMs8LeMA987X+mPn7Zlt0tXy9rDnjisnuy/35d+fnc
uuwDyfGdd2N2FnB4uLrfSeJ1mtTzhHNL29smvE7a2NKyhprFazaNX7fXR0ej
p+++sf2sKaUm6ILbH0tkEqEGoH68oXam031qwhw2kbFV7ol45tI0F8u4hzLH
Uzm/p1d9pOt7qCP9upZtavbzMj6em5L1HVnnEq8RqnfajRvTj5OSdWapZYFp
vW9r4nuV7/rXNamPCxlns2sYzyHb0k622ydyFwDKRO5CEXVb7xIcvuz6ljUv
p8w+OfdzpBgKl7vUzcVP/MRXom984dMdz4VCLnHvjgOZrxGyliXXLI0+fdpJ
LY/17r/5wPjf7sPzvnjZpS2f88GFn6rmHAeOPmfxoitbn8PfXTr+nDD/a/a3
9/rXqc8F0updPnX+X7e+Xpff3nyenTVPrsw5l9y8rrp2ce3VC9rLOFKOnZUD
hPOLv0ehxiErD2vrulXGHN6P6ly5yTqW+HN6tj9wP69lE1l1ZK10s0dXXGqm
V3leVn/e+vty+Og1i+cu85d9J3rouRfHr0s4v0UXfrytcwrvf2aeVhlX1j7e
ifNadk97+VSfyF0AKBO5C0XVbe6SVvOS9rk43Pt5nyP5K9p+RrV5aUOvzcrX
dj+yJVp7zdXZ+UVl3hrmYmGdQqvXeGPHz6v3f23O0srdj+xpeF4tp2pm3RMv
Vp8T9ngfP06L563duuPIGCtzv3YeH9TnS2l9dWt//1/+t+9v+F5YM7HkH++M
Ht39UlvvS8iPPv3tLdHI/pHqe/HDf74yMc+d8f5zq7lIu8esF+owNv3L8tQs
LOQvq+/8Wcs5bqgRafc9rdUlDT9wR/P3/uh70CzH61S/r2Wqo/dUp9rpsxt+
LpodI7x3WevXtq/5p8Qe5h+/6v8Z/5kLj6nV1Zx1zarq19MyqPDe/9sP33q/
mv3shJ/hpu9n5fXCffHliz6UuBdDDhvy0Z69LxMgdwGgTOQuFNFE6l2CQxcs
bshdXpwxkPj8GGpewue2vM+VfBWu3qXi0Ev7ms6xwzqZkb17x7mPj2i6n9HY
6Pi1y3ucLVXGWhtnz/urUEiFvS/r7sWikbsAUCZyFwqpg/4uaXsbhb+xx2te
/uG9yX4U7nmKtp8R3etqH2mglOQuAJSJ3IUiaqfeJcyXm+UxY++5NFHzEvZk
qJ+XhX+HWve8z5f8FLHehe7IXWD6kLsAUCZyF4pqIuuMggM3fz9R8/Ld9/9f
iZqXG5Yvz/1cyY/cZeqQu8D0IXcBoEzkLhTRRPu71Lz5Zxe2rHkJQo+MvM+Z
fMhdpg65C0wfchcAykTuQiG16O+S1tMlzaurVidqXn7y/nNT99XM/ZzJReH2
M6JridzlvBsz91wGyk3uAkCZyF0ool7Vu6TtKR3MOWNOIntR6zA9qXeZOp69
/r0NP9MnvnNBW/sAA+UjdwGgTOQuFFWz3KVVT916ry/7x0Tu8sDfXZ7IXRYu
WJD7OTP57Gc0RRwciq47bmbi5/pLT7ya/9iAnpO7AFAmcheKqJN6l1ZrjrJq
XgYGBhJztG3bHs793Jlc6l1KbGw02v3IlmjTvyxP/CzXm7/sO9HWR/69+v7q
9wJTg9wFgDKRu1BILfq7dLqv9BufWpLIXR65allyfjZvXv7nzqSSu5TYwaFo
4IR3Nc1c4uuOtv9hLP9xAxMmdwGgTOQuFFGv+rvU7Nn2YLLm5c8urOYs8bmZ
z2/Ti9wFoHzkLgCUidyFoupl7hIcPutziexl+5p/SuQuYf1R3ufO5LGfEUD5
yF0AKBO5C0XUrN6lWT+XZt/73T13JnKXkMWk1byEOXje14DJod4FoHzkLgCU
idyFQmqjv0snexrVjL3n0kT2EvKYeO4S9pnO/RowKexnBFA+chcAykTuQhFN
pL9LszzmwM3fT+Quhy5YHC1edGUiewmf5fK+DvSfeheA8pG7AFAmcheKqtf9
XYKdu3ZW++nG++uGvrvx3OWU2SdHr4+O5n4d6C+5C0D5yF0AKBO5C0XUbr1L
s34uWV5dtTrZ5+Wy66Ml1yxNZC9+JqY+uQtA+chdACgTuQuF1EZ/l257vVRr
XuJ7SleM7N0bnTRrVkPuEv4dPtvlfj3oG/sZAZSP3AWAMpG7UETd9neJ179k
1cO8vuwfE7nL2PI10coV1ydqXm5Yvjz360H/qHcBKB+5CwBlInehqPrR36Xm
2R2/TK15CZ/j0mpeQi1M3teD/rCfEUD5yF0AKBO5C0XUy/2MstYgvfGpJcma
l7U/aviZqAm9X/K+JvSHeheA8pG7AFAmchcKqc3+Lt301a3Z/ciWZM3Ln11Y
3cMo7GUUz16qfWHyvi70nNwFoHzkLgCUidyFIppIvUsnDl2wOLXmJXyOi+cu
CxcsyP260HtyF4DykbsAUCZyF4qq17lLWm3MbwfvTeYu77m0+vpzzpiTyF7M
y6ce+xkBlI/cBYAykbtQRN3Uu3S75qias8TXG20ZjDZs3JjIXebPm5f7taG3
1Lu09trjt0afPu2kahb5iRvviIb7+Xpjo9U1gLd96cPRjMtvr/4uyPv8KY6Q
ldfm2n29Dyk8uQsAZSJ3oZDa7O/SC7+7585E7nL4rM9Vx3HO3LmJ7GXbtofz
vz70jP2MWti3KfEzMGNFb+c4h17aFw1tvCX68kUfanydc38gd2Hc2I669Z8z
B6LBg/mPifzIXQAoE7kLRdSs3iWrriVr36J2hH66iZqXX/1n9bNcfM4Zspi8
rw+9o96lude2rkzmLr3KQ8ZGo80XHpM4vtyFhMPD0epjThi/N0585wK5yzQn
dwGgTOQuFFWrepeJ5CxxB27+fiJ3qfbcrYwjrC2KzwfDGqS8rw+9IXdp4fHV
fc1Dhh+4ozpnCuuK5C5k2b50dsO9IXdB7gJAmchdKKKJ7mfUTa+XtJqXsd3P
VdeexOeDAwMDuV8jekPu0sLBoejzxzfe/7PXPdb71xkbjX5y5jvkLiSk1VzJ
XZC7AFAmchcKqcP+Lu2uPWqWx7y6anWyz8tl11fHE/aQjn/uD5/1cr9OTJj9
jFoL/Vf+7YdH5jcPPfdix8/ff8vCaMZNzzR/XMqaI7kLIfe76IR3yV1IkLsA
UCZyF4poovUu3Xh2xy9Ta17CnHPnrp2Jz/2nzD459+vExKl36bOj82a5Cx2r
3BP3zX97au8fuQtyFwDKRO5CUfU6d2mnH8zry/4xudZo+ZrqeBYvujLx2T/8
/OR9nZgY+xn1UV2WInehU6/8ePH43kV3/up/6atLA7kLAGUid6GI8qh3Ga95
ie9rVPH66Gg0sndvas1L+F7e14vuqXfpn/F5s9yFDoU9o0+aNevIvXDnc9X9
jK47bqbchXFyFwDKRO5CIXXY36UboU9F2terPV3i2cvXb62O64blyxPZi5+b
cpO79MfBB65tzFDkLrTr8HC09tTjG++Bg0NyFxrIXQAoE7kLRdSs3iWrN278
693saZRZ8/JnF1brWsLnvPG/wR4V/h2+nvc1oztyl861qvH67b1fSe4J3cPc
pfazGMhlpp6nV31kfH3RvS+OHfl6fF+tyvfkLtOb3AWAMpG7UFSt6l2y+rW0
08ellUMXLE72eVn7o+q4Vq64PjGnDF/L+3rRncLsZ7RvU7WeKvweThPusevu
e3L88bv+dU205JqlmY+vPWfdE8n9h8Jz468V/r1q6+7M8YU91Qfv+Fp17nvs
qd9KzzvGRqNfr7k0tQ/qjHM/2/z1WuQuh19+Nhpcc1XqsT9x4x3R8CS+V6HX
9nOv/DH9+2NHMqGwLlEm1IXHV4+/rx8b3PfW19W7ECN3AaBM5C4UUV79XWr2
bHswteYljC2r5mVk/0ju143OFaXe5Y0dP49uOu8dqblC7e/7n/72lvG5/GuP
3xpd+74Tsh9f8cGFn0rNUp657apoIGVv3reterThcSFfGNp4S3TtuX/eVh3K
C6vPbjqepq/XJHcJ55o23vj+NuO1ET0Ufq53P7Iluu/bX4++eNml4+NI1O9U
xh9yofg4L7j9sZ6PKfQ+Ccf+mxPeX70v+q7yWrPX9f48EuqylRkrNmd+T+5C
IHcBoEzkLhRSH/u7tLv+qFnNS/3PTU34+33u142OFW0/o198YUbi3gr1JVn1
HCFDSctoWmYQlZ+xn15xVvo6oMoct1kGlNl35fBw9RqGnOKiWP5w4rJ7qtd6
27aHo62P/Hv1cY/ufqlhPInc5fLbq7U57eY4mXU4naqMJe19qL++33nh0FuP
37epcQ1MzJeeeLWn90gtd5lMLdeJ9fCan3jcimSmInchRu4CQJnIXSiidutd
Ounh0un6o//auimZu7zn0ur4Qn+JsJdRfG4S1hbkfe3oTFHqXcZV5vDxmolj
3/fV7HU0lfnqT85szEhS560pz9u+dHbqHDbM6y++bGn1mnzvktPbz12OHjc1
Q+miv0s8gwm9sKu9ZSqPffruG1Mfd93zb0z8Pagcf/iBO6rrtNJqihrej7p1
MSGP+ejA/+h7ZhHen/nz5lXrbxYuWDCuX/8Or9Xr7Ciuvg/zqqdS+gfFchf9
XZC7AFAmcheKqpN6l4n2dMnKbw6f9bnkeqMtg9XxpdW8LF50Ze7Xjc4ULnd5
M6XmpUX9ymtbVybuxYZ6jDSHh6PVxxzJFOLrixqk5Dot9xnqce6ybEt635n6
far7VpdRd53ir1FfdxLWEx1o8Xgy1GWNmfeiehdi5C4AlInchSKaSH+XXtbA
/O6eOzNrXoK0mpedu3bmfv1oXxFzl4YaiqPO3rAn+/GVuX5DLUCrLOXNxsyg
aUbTzf7OPcxdUmsfauI1EOF1Ft/f2/civo9Oraam7rUbxpiSUzX0hyXxvteu
V9O6LrkLMXIXAMpE7kIh9ai/Sy1X6XZP6aCas8RrXoZ+Xh1n+LwXnyeGuvzc
rx9tK8x+RvXSaiZaZB3PXv/exrVGLealtZqalhlKxf5bPppL7tLV67RxPh2J
ZWBhDVfIBu6b//bqvy/ZHOunnZXT5H1PFdRvvnl+e/mf3IUYuQsAZSJ3oYjy
3s+o3oGbv5/IXarrj46Odc4ZcxLZS2HqJmipkPUub4asY2FHa4fSHp9ZZ1GZ
w9b63rZTixE/9nTKXeKZU6gjqn0t9ZziOY18IFNDf+A7n2v+eP1diJG7AFAm
cheKqtd9dSfyvOoe0vGal1/9Z3WcGzZuVPNSYkXbz2hcSn/dzLVDKfUxzTKI
Wl+UdjOBaZu7xNcMVeb6f7fq6ur7Evr8pq2Jie+lHR6X+71URHX3bFvvmXoX
YuQuAJSJ3IUialXv0k0f3Yn03k2reanuM310vAMDA4k5b9gvN+/rSGtFrXdJ
28s4a65ZvxdMg7R+vO32060zbXOXfZsS+2FnXtej41l76vENj/2r+/f05d54
dscvq/frZEjs+d0D9XtptdzzPIit35K7IHcBoEzkLhTSBPq7TKSXS7PnptW8
jO0+UhsfPvPF52Zh79XcryMtFTZ3eTN9n6LEuqCUPq4NYus32u6nW2e65i71
1//M008a/9+Jni418Zxm5kDb17gjKX2X+62XezI13Nfh/qy8j+E9C3uEpzmQ
cW1reU39Y/P+mWXyyF0AKBO5C0XUTX+XidSztPPcV1etTvZ5uez68TGfM3eu
mpcSKnLu0lZ/3bo5+Ce3jybWucT3iOmkn27NdM1d4r2Kq8e//PbM48dzshOP
XZO9P89ElDx3iffM6Rk9X6YVuQsAZSJ3oaiK0le3PptpVvPy6EODiXlAyGLy
vo40V8j9jOqkzVHHayjqcofaPjsNvUqPGt9Pp65moOm+1IkxTMPcJa1nTov6
lXhO0+46rk4dfvnZ6r06WUJ+/Nwrf+zhPZ3sAd0L1h5NL3IXAMpE7kIRtap3
aXctUdbjul2L9Pqyf2xa8xLWFsXnAqHvbt7Xk2yFrncJUvrr1jKMkLGcNGtW
Y46Ssu6oNv+vzXc7nZ9Ox9wlLb+asfj+7Oek5DRfeuLV/O+fAorXZKl3oRty
FwDKRO5CIU2gv0uv1xfVC70s02peDr10pOdGOF58LhB67uZ+PclU2P2MalKy
hVDbsv0PY+P1FbV/154Tz0nC98P9W+v52mkdxnTMXWp7PtVr2qtl3ya1F+0a
+nk1j+7EA1/7n4mMZfWdP2t4zI9+9EB/1nVRSHIXAMpE7kIRddPfpRe5Sju1
MGk1L9WvHR172EM6Pl8L8/q8rynpCl/v8mZ6f90lN697a3+XWO/csPdLfQ/S
UBNz7hcubS8/SDHtcpeUvaRmnHdj0+PGc5qe7qtEtZ7IPtLUk7sAUCZyF4oq
j/2M2q55ieUuoQamWc3LnDPm5H49SVeG3CU+55zx/hNazj/jucFE8oBpl7sc
HGq43kHTfjgpOU1DFlY53poN2/O/j8os9p7IXZC7AFAmcheKqNf7GTXLYuLf
a6dGJq3mZWz5mvHxf/GySxPz3fDZMO/rSlIpcpeK33zz/MQ6i6Z5RsaeN530
063pSe5SlOe0I37tWvUNieViDTVFtb4veo9MjNyFGLkLAGUid6GQWvR3qWUj
vaxt6WRNUmrNS1hvNDpaHf/OXTsT891TZp88/n2Ko+j7GY2L9Q+p5QH3vjiW
/viUPq9dzVW7zEPum//2xteO9aAJfn3z16JVW3dP6HX6kbvEM66Wx4zlNOPn
Wje+SzaP5H8PlZnchRi5CwBlInehiHrV32WimuU61X2MmtS8LLlmaWKeHH7e
8r62NCpLvUtaltGqP24iP1jRxdwkZX+kdua8aeucwutX97re/Vz00yvOahxT
5XVqfX/bfp1untPG+caP+Vf372n+nFjuUstpti+d3f11p5HchRi5CwBlIneh
qPqRu/SyTiar5qU2/pH9I4l5Z+hvqualWAq/n1Gdgw9c216tS01sD+rrnn+j
49dM6+lbnfcuu6fp3jENY80Q8onaMZ657arOXmdsNHpszWdTnzN73WPd17xU
rll9T+JwnVv1IU7bczrtHJkAuQsxchcAykTuQhFNpN6l3311673xqSXJ3OXr
t46fxw3LlyfmYX7OiqU09S5B3dxzxuL7Wz++rkbm2FO/1fb8P2QtoV7r06ed
1DI7effffCB9DU1KfU5DHnHejdXxPHLNxS1fI3jvOTccWbtzeDj63iWnt/Wc
027c2HH+Es+LTjx2TevrltFLZ8blt8tcenjvx/Mwucv0JncBoEzkLhRSi/4u
ea0titv9yJbUvY1qNS3hc2GocYnXvISv536NqSpV7lLxm2+8u3oftbsXdC1H
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
Iffv5lMPH4p/3Ikx56Yz5rLWCAAAoMuQu8BGVfZ3qbueparvb3vdTVyP3bee
fd59zZSzBLMX5TGm9yWgG/z6Wx905lzy/eR5Ra3jzo6Fp5G7AAAAdBlyF9gq
KXcJZhRxmUWeuo66HluVJudJ79x/LPLfp5ati+2xOzY2FspdtP7IXYtkwf4E
dD3fWiT54o4J89sEAACAVOQusFEd84yy5hJl607yfH3ZmUZV5E15fo+4Hrut
zQ+4r5v66QazFx1jTO9PQE84Meb8/Xtn/q7OOmO9M256ewAAAJAJuQusVLC/
S568oY51PVE/3/u3Mr1VbDJ5512xPXY1Pzo4V1ofa9608X0K6HLtvro5Zhm1
Du53Hvn2bc7Na9c6191+i7Nh/Tr3//P+9+trNjkjJ8w/BwAAAN2I3AU2qqPe
pawm+68Es5qqvl/av2Xlri0KrjfSGqTp1033acGal5WrVhvfp4Cu1Tru/HLT
4vbfU6bMZfprfj74V6G/xTK+9swb5p8LAACALkTuAltlyV3qqh1psibFdD/d
Ij//0Ojj0T12x550a1s+fN6HQvdsB148YHyfArrNyX1POjde8p6Ov6U55/+t
s/VYK/7rAn1gqnDW+5ZQ7wIAAFAQuQtsVLTeJWuGUDRX6dY1QnU8L+4M6Yj1
Rnr9/McVzxWXX258vwK6xYs/3hTKW4IGfxbds/o3Gz/V8bgPfvaT7rwx/Q36
/00f69/l00sXtT83MDDQ/nfRx3O+/IPkWUsAAACIRe4CKxXs71I2H8lT+1F1
nUo3ZjpRPXbfuu1e9zXUvVrwPnF09Anz+xbQBfZu+kf3nKx1e8sv+kx0DUpU
b90j252BMz/gfn7eLduc/a//4e3PTR9XN3/kvbG1K0fvWZqY5wAAAKAYchfY
yMb+LklZSZ1rhfLOjy6T3+T9PV558L7I9Ubq5fnwtm2h+0RlMab3LaAbTf32
Bec/vnJh6G/qb0aOdDzu17dfOrMW6Y7nQt+jtW9o5nOXfD9cu9I67uxYeBrr
iQAAAGpA7gJbZc1d8mYFJvqpZJlpVGS7kuZK19mT1+/UZSvCPXbVd3f6NfSv
a/Dcv2WL8X0L6FbBXrlz1u94+/NT487G0850znrXpsgZ0y+s+3P3a94xuCf8
vWdnVJO7AAAAVI/cBTZKq3fJUtMRzB3SvqaKdT7+72G6X27c71VlfYy8sO+p
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
Q6RcJaoeUXTMVr1i1plEVZ/Xs0jKYaqei1xUkRmITc9DqgO5C4CmkbvARlXk
LlH38TbVjtSxPXmuYcpcNzX9nljazyv7PGpuha7fo67tNafUv2+Su8BG5C6w
Vd7cpaoaF/V5sXEmUdHzWZW1pCaUmTEdfP8ny3s3ab8zuQtE13g63sStLQeq
RO4CG0XlLll63Jq+rrDtegbZ6f3Qu/9oXuQ1vn++EbkLbETuAlvlyV10TRpX
35KlxkXzi94Y3NjoucP2tUVVv08Sdb1Rdc7TRI0PuQs83jFK68s3rF/nHHjx
gPFtQm8id4GNTPV3SboGiKqzraNexbb11TaKWgcV9/k8tPb/yjM/ENmz0ds3
v/HVr6T23gWaRu4CW2XJXXSfk1TjMjB9XE6qcdEM6JdHttZ+vilzful1RedY
m9oechf4jz/BY45XA/Pm8ePGtw+9g9wFNmpyjnTS9yzTR6VMTW0vsuFaNcs2
aCZG1HX/5lU3uPsm9S6wEbkLbJWWu5SpcTE1A1r3aVWeg2yqD0l7XyPLzzVx
nUNfXZShOpeo449qYG5eu5YaGFSC3AU2Sstdsl5nJWUfVc8dqvJ6IO81ThXb
VKS3XtGcqs65RmWfI+0TUfONZM/OEWfF8mupd4F1yF1gq7jcRfcx2leTalyG
3zk/ci1RlX1yvXVCUecO/xqiLOeWpP4jec9XRc6LdfdCa0oT20nuAj/VtSTN
qvdqYPR+GzUwKIrcBTYqus7Itt65tlxflPlZNmZGdW+DejF+488/GXkf4M9d
qHeBLchdYKuo3EXXm0n3NzedMTdU41LnWiKbzj9NnS/zziq04RzuV3bGNLkL
gtRjN+m4FKyB0d+E6W1GdyF3gY3ScpeiWYCNmUzctYzJvKPOmc7d4heb73Bz
luD5Vv1fvJp46l1gC3IX2Mqfu+iYqX5ZeWpc6lpLVMd5rVvPlXVsd5V1rHVc
u5G7IEpSn6m4GhjNvKcGBlmQu8BGdfbVrXNtUdXXBkWvhfK+j2VqO5O+R5Hs
J+/vm/b43detiTzPXvqnZ1PvAquQu8BW3n3MgC+zTq1xOX2hO5eoaB+VJtk2
a7HKPsBNvv+T9rOyXLtlvfZhnhHiaI590nEqjr5Gxzr1iVHdjH8OJuAhd4GN
bJpnFLV2qcneMHmuf4rWCzcxZ9ImeX7f737iLyPPr7qHoN4FtiB3ga20ZtPL
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
dwEAM3TvlWXGEdlL/yiajaTlLmn1LWQyzb2+WXrmRs2EDtIM6Li8ZWBgwDnw
4oHSx6ip377gHqf+69+GnKGhGf/78Z84ew6+avz4CeRyYsz5+kXXOXt/X7zf
A/pUTE2F39eeeaPza6b3t5vOmFt5vQQ6n2NdL1de6yKt486OhadR7wIAPUTv
R0edw+/+o3mR92J13DPz9Wa/vgr0d7Fflp65cTOK/DSTPmqdokf9o+LWJGV1
ct+Tzo2XvCfxPkPv+23dx/olWGD2/kt9jOK4dQkf+Zfy92PoP1PjbuY8/PQB
d83mKz8fdWuT/cfDdwzu6Xh8XE5D7lKdqL637nP8oxfLf/+acjNyFwAwK+59
6+CMo7Reu2V7dvD15r6+7M8md7GLl8XpdVXPXDdPKTijyO/hbdsia+RE/67P
lzoetY47P930d4l5S9C8W7ZxHwGjfrPxU5n21bIzYAFP8J6/nen51qecteZB
t6fLiz/e5Cxf+HnnqmWrS83Xgc/UeGQuUnaGkSeuVy+5CwB0P/W+jDrGB2cc
ZZlzZLp+g6/P9vVV1skUyV3i+sb4M4Msj+fj6I8P7h7O1MNFPXPTjg+qX1m5
anVs5qL6l9LriqbvF3at+WSuzKV9LbriUePHUPSpmLUGUfdjrDFCZZ7e2LmP
zR1wRk683W9kzpd/QB5do9/t2hB7LqrieY/rG9NR11QAuQsAmKf7qovmzQsd
4zXjKC57sWF9C+oRl33EqbveJbiv8XH8xy/seypTD5e0nrke5Snq1xJ3P6k8
popj0Avr/jzwvt7fOd/a9D23hka9JNf+P5+glgDWad/nfu4Wd1/dMbIj8r+s
iUOlItahrLzzbnf9kTI+ZTDGt7GHBc9XntL9dCWmp658YW+5NbzkLgBgh7gZ
R1Hzpd37tgu/ZDwfQP2yZDCsM7LD5J13uWuGEvMWzY1O6ZnrUf+nuBoXHSt0
T1nJ8efI9o73bQd3HYx8XFLfF/Uy5F4DjfKtNbjpVyfNbw/6R8K9eajHLqoV
1z9n+txVyTquE2Oh/j1ezVzZcxy5CwDYQ/fYUfdZl/7p2bH3cHp/PXj/1829
Tvj6/IrkLtRLVeelXdsz9XBJ65nrUf2b+uPG1ZZccfnlbn/dqo477fcOs1y3
Tt9v7F19Xi3vBQJ5nHjsxtnarO8b3xb0n6i+rlWtc0GCmLWFsfO8c3r9Ryui
1zBVsHaM3AUA7DI6+kTkMf/qeefEzkCJyl78GUDwHjvq3/j65r4+7nFF7/vz
5C5NZ0K9TDOWs/Rweeu2ezP//Wtf8eavRKn8Ws1XM5B5rVDM+41z7njO+PET
fWJ6H9z8kfe280L1LNW6OM2c4b4XjQj2eKHuytjzXkXvFVfruPPQBX9SWx0T
uQtMah3c7zzy7ducm9euda67/RZ3rov+P+9/v75mE/XN6Clx86W/8eefjLyv
e/WsyxKzl6K6pUdtt3191dlHVeuMqIHJrsoeLh5dkyWtK1ImW/WxxpvbkHdO
Q9R7guQuaIr6asb9rbjvU3x7OPd731yTIpfgepSq1rkgWUzu8v779pf+3nFz
jKqqpSF3gRGt487PB/8q9nxZBOsp0Wt0TI7a17/7ib+MXcegGSqm70fRvKTc
hfqWamkudJU9XOS1ycnYmWbeuiKtParjOOOtMcp9Do2o9SZ3QSOmryF3LDwt
/dowoVdR8PtxTYoi+2GwNoK1lvWLy0ZK/81Nv54/uWZO5Pf+4o6JSrad3AWN
S+hFVRS9w9Gr4no8DH/2qth7PrIX++WpK8mSm6TVu1DHUp7WFLl5SkU9XDz6
vlH9tNs56/R1Wp3HmOe+d51z7lc3538vj9wFpqjH0KZ/dL7x1a84iy79TOo1
YuKME65JUdSR7e7cA46BDYupdxn8WcnMy99f3v+a5qwFTULugqb9ZuOnOvbn
D372k87FCxa47+f5/00f69/l00sXtT+neZrev4s+rqLXEWAr/9+G3+4r/zb2
/u+n//mw8ftU5BeXj6TlJmXWGQVzHT7u/FjPfZY1Ra21m3L/bWtdQty9m3q8
KJMxffyJFXGNyj0HTNBavld+Pup872sX5a4/4ZoUhfj7C9V0j45ocfUuc370
YvHvm1Dr8p3fnKps28ld0ChfNjzvlm3O/tf/8Pbnpvd5HcPi3ic4es/SavJM
IM30vqhruG9dc7VzwUfPad8DqWa5CnM+ceZM/XPGfVnrC3QtFzwX6D3yX153
c+x9oNZDZLlnR/crmrvk2TeCj+2Hj901RSl5i/rq5unhIgdePODeo8XdI2rN
UV3riirj68db+P1Gy4616H5Tv30hMn/RnPNQTRfXpCgoapYRtU4NiZnzXGaN
V2yWU/F7CeQuaJJ3nIrajxN7+82u5eV4htpNH8/v+Fx0L/Oq5VmLOnF0InIt
wkXz5jlvDG6MvSecvPMu9x7Sew/ff28ZnLOTpQ6Ar8/+9XHqmFFdVV9dzNBa
vUxrisaezH2MUc/spH6gQ0ND5o+DWQRq7HVfu/f3OXpKWnqsRW94eevXQ/tB
cNYM16Qowts39PrrfByseyGLq1lMrVHhWVJxtUs11K2Ru6Axs3Mnz3rXpsh1
5F5vv8g5YLPryDnHoU46l0Zl6HXQvpy3773u8aPu11QL486pjbk/1BqJvPed
ts4B6oavj/raPFlLkVyGeUbVybKmKM9caI/qV5J65+rvWHUwpo+DWXnv9xd5
X9D2Yy16Q3Af7Zh3wjUpipjdb/x57t7V53XsZ6F+Qq3jXXVs7waR9UYF5xlF
9dSuan5RELkLGqM8cdUN0Tmwr2bszx49FPq85gV610+c41CLiP5otd4LRNU8
Z7Bn50jk99Pa89bmB2LnrJxctNL4/SzqUyR3Scp3+jF/ybKmKO9caE9a71zN
nrV+XZGf794j97m5S4616AGB/bQjG+SaFAV4GYt/Xzrx2I2dGXSgTuL1H63o
yGlQgYjzSJGsxHttOl6/S75f2zmD3AU28OeWoeOSr9cR5zjUImIW4JxPXOLc
vGGje1yUu2/f4Nx4yXvan/P+3fuc//+967ULV4U/5/3/pof3Ft5erVOIy17c
dQ8Js21N39siWdG8I2vuwkzpMK0pUo+WxJ655y7ONRfaL6l3rrKYHSM7zB8D
c/LuOz2ZZ2x22bEW3e/oPX8dnbsk4JoUep1fm5zs+Devfiq09iy45nJ6v/DW
XLbXq614lH67FfNq0vzy9HiJWos4Z/A7tb5O5C4wzt8fae5AuB7YdzzjHIda
+GbSuTXp+yYjHxf1PkeH6fO0/76iyh7oQf5jt5/WMbj3hzF1L6+edZnzwr6n
jN/rYkZaDhLsIROH/i7FaE3RsTkDyT1cCqwpkiy9c4PX9V0hWEOQZ35HFx5r
0d3872dnyl24JoU/R5neB2565H+c5753Xbt+LvSaB46Jct7dP3V+9/S97vdh
P6lJRG93vV6p54Ppc8fjNy8MnZOvenS89m0md4Fp/rwy6tjkf98hd98+IM30
8feRK97drlGM3b9812KJefrs+bqJ86yO2VH3c1ctW+20Du6feY8+5l7y0Ojj
xu95e53ykrRcpar1PHXkLqbnN9f58fhjP4zNJsuuKZKe6Z0bwX8fm+s418XH
WnQxX9aXJXfhmhRxs4qS7umDPV78WF9Uo+nzRSh7mbZm+GD4sdPnoBd/vMnt
zdRR4/K5W5yd+481sr3kLjBqarxj/w+9bxZ8X62G3tLob+3ZcSkZefteI+Vx
3jrfpu4F1Bci6jy/Yvm17j1j0kwW9bNg3Ul1mngu435G2dylX/YD5Vx1rilS
/UpS71zVv2gbTB/3CjuyvaMfbp77iW4/1qI7+Xvrpu6vXJPireieH6n7jy/f
8wv12EXlNDv+P75yYWROtvTWr7trfa9ftjj0eZ07BndF5DM1IneBSaFeVCse
7fh8cJ56rnpmIIPfbPyUu29Fzizw+GbMJV7jG1r3rYwlLnvR5/W+fdw9pmZQ
Z70fD9ZvpH3cbV9f9vFZ7/vryDjScpd+7JMblDRvveyaIsnSO9f08a4UX72K
ZO7p0kPHWnQfbz+JXDMUwDUpRPfx//rFj3ben2eYDd0xF2d6f2v6nr7fvfLz
0Y7XLc4Va77jDD99wMjfLrkLjJm+btqx8LTOc1igBjQ0p5JzHCqm9befv+7/
S75u99cpJ+2Ds7MlTdwLRGX5/uwlac503Kwj7tXj1fHclMljknKXsnOLgo/p
to+1pi52zd0s1cAUXVMkcXVnoixmdPQJ48e6svy193kzl1461qJ7+HOS1DVG
XJMiQDPm8s6ZK/I1qJbW2et9EPWs17lXdF3wq8MvGd82chcY47tu8gTn9QXX
Sya+TwbUIXAtltST3j/jo8g8u7Li1jesXLXa/bw7Zzph1pHOU6bzDHTmB1mz
GPrqRlPf3NQal+GRwn9zPds7N8Bfd19b3XwXHWthUKDu6upvD0e//v7aqSyz
xLkmBVAzchcYEzjHhd6zCpxbJUudH1ClUF1xwnyNjnsGQ++DxWUv7TUOmjOd
0E90z84R4/fKTeuFup48uUvWGUndTL2L0vrmttZuKvW3pt64cb1z9e/d3DvX
z59xaEYHx1oY5Z835FvTcfczb/fFPLnvSefGj53ZzuUy1UNxTQqgZuQuMMmb
y/bRS5d1nDPbnt44M8ttdo6b6e1Fn/HNKfXE9lU7st2K+mPVt6bWvSTNOprt
t2v6vrmXJNWtFFlbFJWbUO/y9nOd1jdXtV36Gyj6NzZxdCKxd+7AwIBbB2P8
+FUBrQ3ysqVMM3j76FgLQyJm9rb3hU9c4vz1wP/VUQuTZ9/gmhRAnchdACBG
RH/6uHsBzZ70v/dt8l4gS/aixyTdn2p9hul76G5RtH6kypqTMrlLMPvp1lqY
yTvvSl1T5K61K/G3pfnQSb1zNTfB+HGrIv76k9rXU3TpsRZmqO/pyKbrOjIW
jzKTmx/Z6ex//Q/GtxMA/MhdACBCRI+92P6NU+POTWfMte492Csuvzzy3rDd
a3eau9YioS6gW+/BTWt6LnPV9S5R2582y8nUxwd3DyfOS3f35WXrSvU6TKtx
URajNXrGj1tVObJ95n19HcvW78h3LJv+2sUX3eLs/X3y7JheOtbCLHqZAugG
5C4AECFQy+7dC0TeS0S8V2vDvYCuQ+OyF91Deo9L6rcrmgeTdO/rz2ayfGzb
15f52Bb9us4oU99c9TQq8XekGpe4Pi7e31Iv9M71H/u8/hlJvW0jza4XUh/T
zLlLDxxrAQBIQ+4CAGH+malp1/fBGQe23QvEvU+vf2+/R/js84l9SLWGw/Q9
dq9Im+tcJNtJy116rZeussC6++ZOHD6cWOOiLEaZjOm/70r5eouqziXX106N
t+tW8vSC6aVjLQAAcchdACCgdbw9f7Lj+j7qvd/p+5Rg3bv72C//wKp7gbj7
R83A9bKXU68eSVyvcXLRyp66dzch7/OXNS/pl3oXPRdpNS5l++ZK39W4RBzL
5gx+x71G1LVh0n+/tel7zt23b3h7xszcAWfrsexrjHrtWAsAQBRyFwDoFJxn
2r6+j3oPNzB70vNnjx4y/nsEXb9sceTvpfkr6l/R/v0Ter5oDpL6aZi+/+4l
cfUtSXlL8Gvy5i62rpdKkmk2dMm+ufo7iFub5/VxeXjbNuN/y5VLmBGTV561
Sb16rAUAIIjcBQACInoISNR8jcj7hrkDznd+c8r87xFB84yifrf558/vnH07
PJJ4f8u6o/RalCbX9uTNXbJsly3ZjLZVtVZJ+6Nmc6leq8zfxtDQUGqNiz+f
7BlT45E1J0XFzn/us2MtAAB+5C4A0Cnq+j62h0AX9nnUrNu49/J1j9t+7LPP
u/UtSfe6pu/JbWMqq6h6nZEt68myzIZ2M8ISfw/q49KXNS6zgrOEylA/3XGO
tQAAhJC7oHat485P//Nh97p1x8iOWuh7/+/Hf5Lreg+INb3P7lrzyfax8dyv
bo7ft6Yf+/PBv8r2WIv4j/1+er9/dPSJ9uPU+0UzeJPue/3zjrpBMFPI+7GN
eUWZ3CUtK/J+J+9xwY/jvk+Zj8fGxtxcr87Z0JKlxqXn+rgEvDyy1X0egtTj
Jurfk9y/+xDHWtTi5L4na72OrPJ6NPMsLwB9hdwFtTsx5gx4/fbqNHfAGTlh
we+LvqT7v7L3gE3TfVXc31NwTkvSrOljcwbcXqdZMgn/vbXpj6vICvKqqx6m
ynqXKraxTLaVqcal5Gzofq9x6WbdeKxFeb/+1gfrv46syDsG9xh/vgDYh9wF
tWsdd0Y2Xef2lbh57drarLz1Pt77AnLS+3Nx7/cHzwmaEZO07khzZFSnUEeu
YIu66lnK5ju9MM/ohX1PJc7TqmI2tKTVuKxYfm3P17gA3UZr0uq+jqzkWnR6
G9cMHzT+fAGwD7kLAPQ3ZSVx96FaZxF8fOK6I3ruFpI1z1Eeo3wizzyjqMfb
0jPXk1bj4uZ9zz5faj9X3+i0GhflkKb/HgEAQO8hdwEA6J5UM42i7kcvXrAg
/P5/yrwj9ebo9dqXsqrMPvLUuyiHqeJnVlH7o30krcblrdvuLb1/61qHGhcA
AGAKuQsAQHTfqYwl6r5UmUzHrKNpmtubds/8yoP3Gc836hbVN6ZpVa4zCuYp
df1ubwxurL3GRb8LNS4AAMA0chcAgEf9KrW2KOoeVfUCwX67LtUjpNS+VFVj
YYO0HCJqTU/dc47y5C6mM6Imaly0H6vXQlLvS2pcAABAU8hdAABBOh/E3a9u
WL8u/DXPPp/Yc1d+sfkO45lJr2qir64/O4rrF5M2YzpLjYv6N5fZdzWHSHUs
1LgAAABbkLsAAKKotiWuJ4bWbkTNcnXnzSTcV0fNPKp6tnPax1HrgrL+m62S
chdTv4M/p8kyq6hsjUta31xqXAAAgCnkLgCAOLp3jqsdiOr54spQ+6K6h6z3
7FV83G3rnIJrk9IyoLL1LnVmTGmzipTHlKlxUf6XVJ8lAwMDzujoE8b/ngAA
QH8id4FN1KdT1/97do6474nvOfiq8W0C+l1Sv13VwwwNDUV+XVrty6tnXea8
tGu78YzDZJ5S5vv4s6Qm1hnlpe1Tb586a1y0XihpTZHoOuetVrg2C0D/4ToT
gCnkLrDByX1POjde8p7o6+a5A86a4YPGtxHod1qjEXdvq168UeuOstS+nFy0
svZ6FNvXC5XNYprIXaLWYcU9VnOs6uzjojVFcf2f/fvkxNGJwj9D26d7NNN/
dwDK4zoTgGnkLjDt5a1fT7x29sxZ8agzacH2Av1MtS1xf6Nad6T3DyO/NmXm
UZa1R6ZFrcWJql/Jk6FUlQflzV3qmq9Ud42Laq/U1znpXKH9sEzfXDdrGXvS
eevxf5/5rwV/dwCK4zoTgA3IXWDSicdu7DjnfXrpIuf6ZYudgTM/EH1OvOM5
49sM9DtlK7q3jVt3FHcucesHUu7JVQcx/tgPa89Q0nrv1pnV1CFr7hLMW6K2
LTiTKGtG49a4nL6wthoXZX5pa4q070XWXWWhtUhe3uJTdr4SAHO4zgRgC3IX
GDM17tx0xtz2ewz7X//D25+bvv598cebwufFuQPO1mMt89uOvqXMQdmCcod+
noui3z1pnYfmykwcPhz5ta3NDyTen4vymeDco7r41zh5fVOKZiVlM5aiX9/0
PCP/91Quo7ViiXmaev0U3NfUDzcu5/OvKdLao8L79LPPh/KWDvSHKcybi6Ye
Uaa3BX2G60wAFiF3gSneexA6F8Y+7sh258rAOfELe7n+hTk3r13b3hfLrGXo
Ff5zSFTti+654r42re+uvLnm1q6bRVRlDhSVd0TVn5jqq/vyyNbUGhc30yiw
b2WZC6085uFt2wrvv24tS1LeIgW3HzP8+WypbAzIietMADYhd4ERrePOT66Z
45z1viWp7yscvWcpNaCwhu4bNJNW94OF1zP0GOUASfUIuu+Kqw3Sfa/mCCdl
L8fmDIR6v6StE7K1j27e7cr6eBO5izKxOmpcVCeV1MPZy/R0/VL0b7Cjh0sc
fZ46l9K8eiW9pqa3BX2E60wAliF3gRFT4+77C5nObYH3IjgfAvbR/e/KVatj
75PVlyOxLmF4JHXtUbD3blo/26p7x1Y1AzrtewSzliz1PlXkLmkZj/f5g7uH
k2dU6XUsUCOibE71ZMpUkjIX3b8XnVOUNW9hjhHQ5bjOBGAZ5S66Hk7qhQhU
rnXc+el/Puzs/X2GNbQnxtrrczkfAnbT2quk3qfubN+Yvi+uDHOPdF8/eedd
jdR01K3JeUZV/CzlXkmvzdSydbn3GW9GUVreohozZVZF9stMeQs9dIHewXUm
AAD5+PqiydeeecP8NgGIpVqEpJ673hqRuK9X7Yx7/56Sv6jm4heb7yiUHwTn
DJWZO1S2F2/e+peiuYsU7ZWjr0tcD6YaF9Us5dhPlLfo/Z60vEXr+or2UnLX
IWXIW+jhAvQxrjMBAHBa+4ba50Kt0x05YX6b0L+8eUa6F+zneUZZaO5v0j21
nkM9n3Ffn2XudJb6l6rWB+XNYpr8/nX2d9FzmzZ7Ks+6nKx5i+qmtA8V2fey
1rec3EcPl7ppfaFea9Urmd4WIArXmQAAvOX8ZuOn2ufDdwzuMb496G/MM8pH
a4qSal8y9et49vnU3rv+/i9VZSxRNTBl6lry5DF5f4e03CXu56bV+aTlXu5M
8Iz7gmpPsuYtRXvmZs1b9Bj6YjfD//dfdJ0YUCeuMwEAfc9X+8l7ELCB7huY
Z5Sf3vNO6vuStvbINX2vnNjP1Tf/SLN2VEtTZ82JTaqqd/Fqg8Yf+2Fin2Pl
YFlrXPz1LUmZi7cPFKkjc/uyZMxb6JnbLG+ekfIX09sChHCdCQCA8+vbL21f
k//NCNfKQDdLm3kkuj9LnHskwyOZ619OLlrpzt8xnYvYlLuk1dykzYd2ex9n
eL1V65RlPpHX1z93jtk6PpO3pGUt1LcAiMF1JgCg7x3Z7gzMzvWbs571HECv
UD3FxQsWJN6L6/NJvV9cOfIXPa5oD966VNkDpop6F+VTqb1zM/Sf1eurtWNJ
r2+ZvMWtV9F2ZMxbqG8BEInrTABAv2sddx654t0z58JLvu+Mm94eAJW7f8uW
xLVH3uzg1Pxl+h48U//dWWlrkJLykLr75SZJ6sVSNndJ653r1sCkvJ7qd6TX
K2veknc9Uea1RNS3AEjDdSYAAO26z3d97JvO3t+3jG8P4NH9urIC1WMwz6g8
PYf+XsVl85cs86f9NTC/vPOf25lG2RzE+x7+udJ5vm8wU8mT8RTNXbR9WotV
dD60Xj/1ZNH6sDrylly1Ld48aOYTWUV5HPOMYBuuMwEA/e71H63gXAhrMc+o
HgdePJA698hbf6Q+nUnfS3UOrbWbMucvXh+Yl0e2NlKzUubzVeYuP/3PhwvP
h1YGprVEab1bCs0nUm6i/CRrbcs0txbGgv0YYf6/a/2dm94egOtMAEC/+92u
DTM95c9YT095WEn3xXpvX/f/rGOonu7ns6xV0UwprVNK+36ac5xlBlJHHcyy
dW4mUXXmUucapby5S1rv3Kj50F5ti577tNcnz2vk8nrk5sha6N3SHZRPK3tj
nhFswHUmAKDftc+FzPED+p7u1dJ673q1FFq7MnF0Ivl75lyD5K2xUT5RRwZT
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
wAj5PyDceD8=
      "], {{0, 846}, {1118, 0}}, {0, 255}, ColorFunction -> 
      RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
      Automatic], Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {1118, 846}, PlotRange -> {{0, 1118}, {0, 846}}, 
    ImageSize -> 324.],StyleBox[
   "\"Figure 8.20\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 8.20: Example \
7",ExpressionUUID->"b3f6f147-68aa-41ee-addb-43cc615e635a"],

Cell[TextData[{
 "Related Exercises ",
 "23, 26",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"1aa4acf8-1b27-4e77-a0c8-44808ccf7abc"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "5"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"455ca5ef-0377-488e-afed-36dac30bbd43"],
 "  Write the Simpson\[CloseCurlyQuote]s Rule formula for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "3"}]], 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"9b18dc37-f272-46b9-b0b9-845ccfaabf10"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "f2f28bba-b66d-40da-9260-db575380a66d"],
 " subintervals.  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 5",ExpressionUUID->"62928e91-8040-45b0-a5b4-e2d4f11c04bd"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"580ed224-5a99-476a-bc36-86706ac4aff6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "3"}]], 
    RowBox[{
     RowBox[{"g", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   "\[TildeTilde]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", "(", "0", ")"}], "+", 
      RowBox[{"4", 
       RowBox[{"g", "(", "0.5", ")"}]}], "+", 
      RowBox[{"2", 
       RowBox[{"g", "(", "1", ")"}]}], "+", 
      RowBox[{"4", 
       RowBox[{"g", "(", "1.5", ")"}]}], "+", 
      RowBox[{"2", 
       RowBox[{"g", "(", "2", ")"}]}], "+", 
      RowBox[{"4", 
       RowBox[{"g", "(", "2.5", ")"}]}], "+", 
      RowBox[{"g", "(", "3", ")"}]}], ")"}], 
    FractionBox["0.5", "3"]}]}], 
  TraditionalForm]],ExpressionUUID->"48edbfab-8be1-412e-ae70-7d4de6a55233"]], \
"QuickCheckAnswer",ExpressionUUID->"59343f0c-16bc-4fb7-b970-adf81c943e1b"]
}, Closed]],

Cell[TextData[{
 "\tYou can use the formula for Simpson\[CloseCurlyQuote]s Rule given above; \
but here is an easier way. If you already have the Trapezoid Rule \
approximations ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "43a3c2f1-c875-4f21-989c-c12b20c47a88"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", 
    RowBox[{"2", "n"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3fa9293d-22f8-4d32-a3fd-0fc777a7f88d"],
 ", the next Simpson\[CloseCurlyQuote]s Rule approximation follows \
immediately with a simple calculation (Exercise 78):"
}], "Text",ExpressionUUID->"801fe57d-07d5-4eb7-8e24-fcaf8e1c017f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"S", "(", 
          RowBox[{"2", "n"}], ")"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"4", 
             RowBox[{"T", "(", 
              RowBox[{"2", "n"}], ")"}]}], "-", 
            RowBox[{"T", "(", "n", ")"}]}], "3"], "."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"607e382b-f94d-4605-a7ac-264fb91b548a"]], \
"Text",ExpressionUUID->"c45ed578-9693-49f0-b1ce-0b0454d2e415"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 8\t", "ExampleFont"],
 "Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s Rule"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s \
Rule",ExpressionUUID->"62040c3f-9ab1-463d-a9d7-40d1a6be3225"],

Cell[TextData[{
 "Given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "1"}]], 
     RowBox[{"x", " ", 
      SuperscriptBox["e", 
       RowBox[{"-", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"2", 
      SuperscriptBox["e", 
       RowBox[{"-", "1"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "4ead62db-4e5e-40e5-b14d-a3e1b7d51dd1"],
 ", find the absolute errors in the Trapezoid Rule and Simpson\
\[CloseCurlyQuote]s Rule approximations to the integral with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "8"}], ",", "16", ",", "32", ",", "64", ","}], 
   TraditionalForm]],ExpressionUUID->"8518fe02-e7e1-42f1-8c72-88ee499e559d"],
 " and 128 subintervals. "
}], "Text",ExpressionUUID->"bc0a8565-0ab4-40ea-b5f5-e7d91ed40aa5"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"bca25288-a828-40ce-b3f1-20f388c6cc95"],

Cell[TextData[{
 "Because the shortcut formula for Simpson\[CloseCurlyQuote]s Rule is based \
on values generated by the Trapezoid Rule, it is best to calculate the \
Trapezoid Rule approximations first. The second column of Table 8.8 shows the \
Trapezoid Rule approximations computed in Example 4. Having a column of \
Trapezoid Rule approximations, the corresponding Simpson\[CloseCurlyQuote]s \
Rule approximations are easily found. For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "ff0e32d5-e6c7-42fd-a8fa-5ed946e4326c"],
 ", we have"
}], "Text",ExpressionUUID->"871ec8de-d955-475f-b206-7ce0b2178862"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"S", "(", "8", ")"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"4", 
             RowBox[{"T", "(", "8", ")"}]}], "-", 
            RowBox[{"T", "(", "4", ")"}]}], "3"], "\[TildeTilde]", 
          RowBox[{"0.26423805546593", "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c34d8d4a-5e2d-4484-9450-e0a922473fef"]], \
"Text",ExpressionUUID->"dc1f0c58-bc6e-4bab-af6b-ab76030ac748"],

Cell[TextData[{
 "The table also shows the absolute errors in the approximations. The Simpson\
\[CloseCurlyQuote]s Rule errors decrease much more quickly than the Trapezoid \
Rule errors. By careful inspection, you will see that the Simpson\
\[CloseCurlyQuote]s Rule errors decrease with a clear pattern: Each time ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "c4670ca8-9613-4d7d-8cf1-e9177c0bf3be"],
 " is doubled (or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"433718a6-c0b3-4bf5-8dfc-6deddcd45990"],
 " is halved), the errors decrease by a factor of approximately 16, which \
makes Simpson\[CloseCurlyQuote]s Rule a more efficient and accurate method."
}], "Text",ExpressionUUID->"5564d098-fa94-454f-a17f-1afff8b9ea65"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      TagBox[GridBox[{
         {
          StyleBox["\<\"Table 8.8\"\>", "TableFont",
           StripOnInput->False], "\<\"\"\>"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Left, Top},
      StripOnInput->False], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"n\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"9d9d6d1f-b3eb-4be5-afec-9831ddbbddbe\\\"]],\\nExpressionUUID -> \
\\\"62ecf050-d2bd-4e95-80fe-a8b092cc30dd\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nRowBox[{\
\\\"T\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"4e05c819-23a4-4cb6-bb6d-03af470b981b\\\"]],\\nExpressionUUID -> \
\\\"3b5247f1-1b9f-44a9-981a-7b8e15368c5d\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nRowBox[{\
\\\"S\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"8cef1362-10fb-49a4-8753-8b92adeda306\\\"]],\\nExpressionUUID -> \
\\\"87547c1b-052f-47da-b64a-a1cf0228ac38\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\\"Error\\\", \\\" \\\", \\\"in\\\", \\\" \\\", \\n\\n   \
RowBox[{\\\"T\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}]}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"40a8ccb0-5c67-40b5-bcab-2d1264bf989b\\\"]],\\nExpressionUUID -> \
\\\"027610ca-0bca-476e-a5c3-4f47970aa3b5\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\\"Error\\\", \\\" \\\", \\\"in\\\", \\\" \\\", \\n\\n   \
RowBox[{\\\"S\\\", \\\"(\\\", \\\"n\\\", \\\")\\\"}]}], \
TraditionalForm]],\\nExpressionUUID -> \
\\\"031d038e-12af-408f-b312-348b25b68f0f\\\"]],\\nExpressionUUID -> \
\\\"729d6f54-ac99-4099-95ea-8db09e942cde\\\"]\\)\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"4\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"d6f1b3b5-aaf3-46d3-a9bf-0d13b7bece6b\\\"]],\\nExpressionUUID -> \
\\\"ebc14c25-75b1-4593-a1f3-47c6bbac6b9c\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.25904504019141\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"c075dda9-db26-4a7d-a3e0-73d5b8eb8de2\\\"]],\\nExpressionUUID -> \
\\\"ae6dab77-6f3a-4ada-a541-2555d85a91b2\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[\\\"\\\",\\nExpressionUUID -> \
\\\"4c367bab-822b-43c9-9548-652acd8dc083\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00520\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"bf2b1eda-1162-4f72-8be2-e1d9136aa30d\\\"]],\\nExpressionUUID -> \
\\\"2319d5d2-7881-4e56-8c6b-bcbfd5c9e195\\\"]\\)\"\>", "\<\"\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"8\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"a28fb4c6-14d8-4be0-8637-4cd5ec465093\\\"]],\\nExpressionUUID -> \
\\\"52bf6d09-0a3e-4e52-b4bc-ebdbd00563ff\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26293980164730\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"297c89da-05cd-4bbc-8a05-7feeeedec669\\\"]],\\nExpressionUUID -> \
\\\"356a6d94-af21-4584-bc3a-7e0536a2b92d\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26423805546593\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"62dd8715-30b9-4cf6-b485-936fd095a625\\\"]],\\nExpressionUUID -> \
\\\"c4dea54f-9634-4bbb-83a4-8648b12e2bae\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00130\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"5e5e9fb3-3d78-4eeb-acb5-06ac0f09d368\\\"]],\\nExpressionUUID -> \
\\\"19067cfe-d6e9-45cd-ad5b-69a99930610f\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00000306\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"63509b41-77d9-4870-b37f-30940f7cb042\\\"]],\\nExpressionUUID -> \
\\\"8a8c1989-0efb-4d85-bf06-756cbe451d3f\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"16\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"e3c4d4c4-a55d-40f6-9dda-0d47cc0f891d\\\"]],\\nExpressionUUID -> \
\\\"a2c291a3-de25-411f-9d71-2ca70d35133c\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26391564480235\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"58261c60-5b35-40d3-b60a-798f8dad7f31\\\"]],\\nExpressionUUID -> \
\\\"ecb92a4f-51eb-4699-b803-403b1cfb86e5\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26424092585404\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"7d6e353a-3c76-401e-b58b-95f207d9ab5a\\\"]],\\nExpressionUUID -> \
\\\"7901a2dc-eb6b-416f-8bbd-d5d3ebf2d01d\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000325\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"163e470f-1fe8-414c-82f1-886dcdc1e973\\\"]],\\nExpressionUUID -> \
\\\"8bfc2b55-3874-40b2-a8cd-93a04a42ef2a\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000000192\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"2b9f5e5c-6a3f-4dcf-946c-6aa634719a83\\\"]],\\nExpressionUUID -> \
\\\"bb87c30c-1719-4396-b5d8-f0053c13a7ae\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"32\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"bbdcea9e-bc10-49c5-b53b-ba1b94615e58\\\"]],\\nExpressionUUID -> \
\\\"f10226a6-2892-424e-9734-8d274272b608\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26415974044777\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"b798b944-6f0b-4c13-a762-57dbecb07b00\\\"]],\\nExpressionUUID -> \
\\\"2063611f-2598-49b7-beb0-b89cce8fd5fa\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26424110566291\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"7a0c5711-4970-4af5-80c7-e450a6f46091\\\"]],\\nExpressionUUID -> \
\\\"8d80213e-32e4-49ac-9a7b-75fe228b8e9d\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000814\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"7caac579-9d7c-4596-a5ff-5070fcfb8a71\\\"]],\\nExpressionUUID -> \
\\\"52dadc03-2d7b-4fb0-a6c9-0ac13baffa76\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000000120\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"ffecfcfe-e042-4ee5-baa7-5f6fa06b6334\\\"]],\\nExpressionUUID -> \
\\\"2a3ca154-dfa6-4bb6-a904-32c4b5928cbd\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"64\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"f11f2c1b-70ca-4d5f-b5dc-5fd053befadb\\\"]],\\nExpressionUUID -> \
\\\"54aacaa4-d62c-4645-b5ef-cf03c5f9047b\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26422077279247\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"827873d9-b89d-4c45-a000-6c19411fb435\\\"]],\\nExpressionUUID -> \
\\\"df711ea8-e7ec-4803-8924-fa2257caf210\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26424111690738\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"fef06f1b-744b-415b-8687-178d4ea04078\\\"]],\\nExpressionUUID -> \
\\\"e7466c33-478d-404b-b878-bbbedca1f668\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000203\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"941ac985-8350-461b-af64-a889db41b2b6\\\"]],\\nExpressionUUID -> \
\\\"25b8e979-12b2-4209-b229-4437f4e6c32c\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.000000000750\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"4336edab-0de3-4fb3-97b4-242cbe267e6d\\\"]],\\nExpressionUUID -> \
\\\"da722020-234e-47e3-8a34-a5aa6616eb17\\\"]\\)\"\>"},
    {"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"128\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"afe2518b-fbec-434e-a9c9-89538182bd6b\\\"]],\\nExpressionUUID -> \
\\\"7b6fdcf8-6f3b-44dd-b086-374d8bef6640\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26423603140581\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"f7a1e6df-0395-4698-b0e2-a8fb14a3feab\\\"]],\\nExpressionUUID -> \
\\\"7690f5ab-224a-42b3-bfdb-0bb308ca02c9\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.26424111761026\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"2a7faa91-39b3-481e-88e1-f43f1df36223\\\"]],\\nExpressionUUID -> \
\\\"f0f47a20-eea9-4ee5-b305-16e5179b4ffa\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.00000509\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"4b809f90-0d5d-450e-a414-444288d1b1cb\\\"]],\\nExpressionUUID -> \
\\\"ffa4964f-78f8-4f53-b3a7-390192bf0656\\\"]\\)\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"0.0000000000469\\\", \
TraditionalForm]],\\nExpressionUUID -> \
\\\"1e83fc62-3a4a-4a4c-aaa0-73304df718e2\\\"]],\\nExpressionUUID -> \
\\\"d6200738-60e2-442b-9ded-917fd0e7ed83\\\"]\\)\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{FontFamily -> "Times", "Text"},
   GridBoxAlignment->{
    "Columns" -> {Right, Center, Center, Left, Left}, "Rows" -> {{Center}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {1.25, 1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 8.8",ExpressionUUID->"b6ae4d27-6761-4d6e-9d14-d3d70b544a0e"],

Cell[TextData[{
 "Related Exercises ",
 "45\[Dash]48",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"ee6333a5-bf65-4b0c-b7f0-b8c994f75329"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "5"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"9955ca6f-021c-466d-9e2c-46fc5ff8695e"],
 "  Compute the approximate factor by which the error decreases in Table 8.8 \
between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "16", ")"}], TraditionalForm]],ExpressionUUID->
  "3ff575b8-3843-4cfa-9dae-da96710aac3d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "32", ")"}], TraditionalForm]],ExpressionUUID->
  "3cadb736-cb50-46b9-bd14-4005f1e11f76"],
 " and between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "32", ")"}], TraditionalForm]],ExpressionUUID->
  "6a97f150-fce7-480d-a4b7-e173dea2922f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "64", ")"}], TraditionalForm]],ExpressionUUID->
  "91821fc6-5c4b-48f6-9e69-f61882db0c76"],
 ".  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 5",ExpressionUUID->"7e234550-5d96-497e-bbf7-0a3fc49c4cc9"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"aca96364-ff3b-417f-9fcc-a6bc3245f6d9"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["16", TraditionalForm]],ExpressionUUID->
  "beb8c86b-b883-44c8-81ba-431c723e02d1"],
 " and ",
 Cell[BoxData[
  FormBox["16", TraditionalForm]],ExpressionUUID->
  "4035091d-64e0-4ec8-aa34-521882755b03"]
}], "QuickCheckAnswer",ExpressionUUID->"deadd036-e124-4a40-bac7-73d538bc6279"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Errors in Numerical Integration  \[RightGuillemet]", "Subsection",
 CellTags->
  "Errors in Numerical \
Integration",ExpressionUUID->"46166a70-9c13-431b-b99f-760f69ca0845"],

Cell["\<\
A detailed analysis of the errors in the three methods we have discussed goes \
beyond the scope of the book. We state without proof the standard error \
theorems for the methods and note that Examples 2, 3, 4, and 8 are consistent \
with these results.\
\>", "Text",ExpressionUUID->"1ab5e28a-670d-48b5-a45c-9f1d15f521f1"],

Cell[TextData[{
 StyleBox["THEOREM 8.1", "TheoremFont"],
 "\t",
 StyleBox["Errors in Numerical Integration",
  FontWeight->"Bold"],
 "\nAssume ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],ExpressionUUID->
  "283e20d0-c848-4382-9e88-806b40aca397"],
 " is continuous on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "2318c59b-37a4-4983-a59e-14eb9f2ab6fb"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "3ea84eb4-735e-4eee-990c-e46853418912"],
 " is a real number such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}], "\[LessEqual]", 
    "k"}], TraditionalForm]],ExpressionUUID->
  "d4e4d22f-02d9-4432-adde-274427352818"],
 ", for all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "63a3c6b9-7670-4d80-9df5-083a48323291"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "acd24943-0e5d-4100-abde-b58b5982a13f"],
 ". The absolute errors in approximating the integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"07776e21-4298-44f3-81b9-f16cd682bc54"],
 " by the Midpoint Rule and Trapezoid Rule with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ab92756a-20dc-411a-b293-71c9f837d2c2"],
 " subintervals satisfy the inequalities \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SubscriptBox["E", "M"], "\[LessEqual]", 
           RowBox[{
            FractionBox[
             RowBox[{"k", "(", 
              RowBox[{"b", "-", "a"}], ")"}], "24"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], 
             "2"], "  ", "and", "  ", 
            SubscriptBox["E", "T"]}], "\[LessEqual]", 
           RowBox[{
            FractionBox[
             RowBox[{"k", "(", 
              RowBox[{"b", "-", "a"}], ")"}], "12"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], 
             "2"]}]}], ",", Cell[
          "",ExpressionUUID->"d32311cb-542f-41b2-9542-5b4a3a02909f"]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "6513c67b-12a4-47d0-920f-83899d0f42ef"],
 "\nrespectively, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{"b", "-", "a"}], "n"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "7bfa1c11-26fc-42d9-83c3-39e745ca3b1f"],
 ".\n\tAssume ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"(", "4", ")"}]], TraditionalForm]],ExpressionUUID->
  "577f051f-0cd1-414a-98b7-cb9e4d7406af"],
 " is continuous on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "fdc50e12-b38c-4cca-98ce-b4837f4907b2"],
 " and ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]],ExpressionUUID->
  "baf57176-4e56-4bb6-b02a-52721c097110"],
 " is a real number such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
    "\[LessEqual]", "K"}], TraditionalForm]],ExpressionUUID->
  "fc6f57c0-66cd-43f9-994e-4b57d9660220"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "2b03553c-d02b-433b-aac1-d477db16a2f0"],
 ". The absolute error in approximating the integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"02742400-c734-4b0d-bfaa-ca28ec8da6dc"],
 " by Simpson\[CloseCurlyQuote]s Rule with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "daf5a873-0c38-4d40-a75d-abc6e7bbeb22"],
 " subintervals satisfies the inequality \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          SubscriptBox["E", "S"], "\[LessEqual]", 
          RowBox[{
           FractionBox[
            RowBox[{"K", "(", 
             RowBox[{"b", "-", "a"}], ")"}], "180"], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], 
             "4"], "."}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "f7486949-bd97-458a-b467-3eab50e0d746"]
}], "Theorem",
 CellTags->
  "THEOREM 8.1 Errors in Numerical \
Integration",ExpressionUUID->"d92573ac-534f-45d2-9c28-d7e39e94ed23"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"38e1074f-7fcc-463c-aa8c-0f173052754d"],

Cell[TextData[{
 "Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], "=", 
    FractionBox[
     RowBox[{"b", "-", "a"}], "n"]}], TraditionalForm]],ExpressionUUID->
  "649c3274-a588-46cb-9d6e-e4be3ec72cc9"],
 ", the error bounds in Theorem 8.1 can also be written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "M"], "\[LessEqual]", 
    FractionBox[
     RowBox[{"k", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "3"]}], 
     RowBox[{"24", 
      SuperscriptBox["n", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "98536a64-35d2-43da-8f24-73563e60434f"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "T"], "\[LessEqual]", 
    FractionBox[
     RowBox[{"k", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "3"]}], 
     RowBox[{"12", 
      SuperscriptBox["n", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "77677eaf-1397-4eab-ad70-f79bbe8d5508"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "S"], "\[LessEqual]", 
    FractionBox[
     RowBox[{"K", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "5"]}], 
     RowBox[{"180", 
      SuperscriptBox["n", "4"]}]]}], TraditionalForm]],ExpressionUUID->
  "98ae2f79-9a1a-4d46-b644-04ec1599b4d6"],
 "."
}], "Callout",ExpressionUUID->"803c204d-03a5-408f-b681-0e8ff469ea2a"]
}, Closed]],

Cell[TextData[{
 "\tThe absolute errors associated with the Midpoint Rule and Trapezoid Rule \
are proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], "2"], 
   TraditionalForm]],ExpressionUUID->"ed82a697-5ded-45fa-b326-7d49f98c7d45"],
 ". So, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"039f2e4a-1e74-45a6-9857-749b05ab2511"],
 " is reduced by a factor of 2, the errors decrease roughly by a factor of 4, \
as shown in Example 4. Simpson's Rule is a more accurate method; its error is \
proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], "4"], 
   TraditionalForm]],ExpressionUUID->"519c2257-4a5f-491e-a651-538a8a874afc"],
 ", which means that if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"f3e4d524-c525-4025-8e58-3d47cce804f4"],
 " is reduced by a factor of 2, the errors decrease roughly by a factor of \
16, as shown in Example 8. Computing both the Trapezoid Rule and Simpson's \
Rule together, as shown in Example 8, is a powerful method that produces \
accurate approximations with relatively little work."
}], "Text",ExpressionUUID->"cc745157-e676-4e79-843c-026f0bfd6a94"],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "6"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"66c9ccca-9011-4a80-ad79-c77b5496ec77"],
 "  In Example 7, we used Simpson\[CloseCurlyQuote]s Rule with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "609bc13e-bc49-45bd-b3a4-a89e513dae8e"],
 " to find that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", 
       RowBox[{"\[Pi]", "/", "2"}]}], 
      RowBox[{" ", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "2"}]}]}]], 
     RowBox[{
      FractionBox[
       RowBox[{"sin", " ", "x"}], "x"], " ", "d", "\[VeryThinSpace]", "x"}]}],
     "\[TildeTilde]", "0.178"}], TraditionalForm]],ExpressionUUID->
  "1f22e74f-0ed6-43dd-bad9-c98ca49034f2"],
 ". Use Theorem 8.1 to find an upper bound on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "S"], TraditionalForm]],ExpressionUUID->
  "c2c4612e-b76b-441d-87d7-e2e82c407a2c"],
 ", the absolute error in this approximation, given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
    "\[LessEqual]", "0.2"}], TraditionalForm]],ExpressionUUID->
  "46c51e09-684d-41b5-9f79-3aa828257c18"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"5", "\[Pi]"}], "2"]}], "]"}], TraditionalForm]],
  ExpressionUUID->"264f57c6-4df7-4377-8ca2-d8e90345a0cf"],
 ".  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 6",ExpressionUUID->"21aad782-275f-4a50-8ab1-41368124f7fd"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"be47f2ab-0a8d-478f-83d3-412d4e680922"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["E", "S"], "\[LessEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{"0.2", " ", 
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}]}], "180"], "\[CenterDot]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["\[Pi]", "2"], ")"}], "4"]}], "\[TildeTilde]", "0.0425"}], 
  TraditionalForm]],ExpressionUUID->"c830c810-2855-40d3-93c8-e52b896f83ef"]], \
"QuickCheckAnswer",ExpressionUUID->"561b92bf-8275-4f90-b128-948ea150fbe0"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises  \[RightGuillemet]", "Subsection",
 CellTags->
  "SECTION 8.8 \
EXERCISES",ExpressionUUID->"d5206ca9-9c5e-4f6d-9d92-45afe85ccbd6"],

Cell[CellGroupData[{

Cell["Getting Started  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Getting \
Started",ExpressionUUID->"bcec0647-5fd4-4167-b280-c58c5db96c1d"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tIf the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"4", ",", "18"}], "]"}], TraditionalForm]],ExpressionUUID->
  "6808bc69-8956-470e-929e-0ae52fe5e5e9"],
 " is partitioned into ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "28"}], TraditionalForm]],ExpressionUUID->
  "82707a58-2037-4828-b1dc-7d6fa3679cce"],
 " subintervals of equal length, what is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], TraditionalForm]],
  ExpressionUUID->"7c790a2a-d609-4676-b08b-f0eada73ce61"],
 "?"
}], "Problem",ExpressionUUID->"fa5b9c99-4770-4a8d-9f97-11b644637383"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tExplain geometrically how the Midpoint Rule is used to approximate a \
definite integral."
}], "Problem",ExpressionUUID->"169d5111-858c-4b5c-ba6f-0aa8153ecac7"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tExplain geometrically how the Trapezoid Rule is used to approximate a \
definite integral."
}], "Problem",ExpressionUUID->"5d2a74a6-bb4f-4992-b367-67f5b6979227"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tIf the Midpoint Rule is used on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "11"}], "]"}], TraditionalForm]],
  ExpressionUUID->"7874dff4-ea53-4068-83a0-3b7b90dd1bb9"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "64cee15a-0217-45c8-a9cf-766d76b8d3e0"],
 " subintervals, at what ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "7ff1de05-8832-46ec-aba7-6ba0fbf8ba5c"],
 "-coordinates is the integrand evaluated?"
}], "Problem",ExpressionUUID->"0b6089b1-6a2c-4cf8-87cc-e427c533f7e5"],

Cell[TextData[{
 StyleBox["5\[Dash]8. ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 " Compute the following estimates of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "8"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[InvisibleSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"185ef79d-7412-490a-a11f-6c3a48797892"],
 " using the graph in the figure."
}], "ExerciseDirectionsCell",ExpressionUUID->"7cd6b3a3-7b78-44f4-bc4c-\
b07baaead389"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hTVrPN/vze/+Tel6lKV5CxGQXu9431c4D6E187kSlqM8Vm1CMor3PBPNyW3K
X7e6PsXnDNPOG3bibYuPMC6set3qw6Tur2OOjPfMrc3t7vUeLo0ZeTLjbMf8
9STGrDGQXhd1MPAsedha3s/dv349ypZ4Wax6PRmvYlnPHd4+mCuxmstxPu+5
Tc9z2siz81tq8a7XzVmt4Rovqw1TS+5KmV7f++VW9EmTwKzXrS9rs26dFoxN
ZdcB5kzFjq2KH/zgmdK48axgnO0k5TGNQX4OcexYREcpjHWj6KFirm/tc/8m
hFWvp9T3PX3zFQPn1nvueab/d8t3GDsXm4kac8P//b7rBzX1uDUhi5yfzwtt
fvzVH6zz2aeau17S7i6vb2r561Z/PXY8obD1TVP317EmaJnubXPuOqhaj3Wc
9TdSG7NGxWp0Sq+LiSno9ZF8tMJz7VFqMYSAVa+n9GxxYB6F+cPnc7Lb8hyn
tRTXDx32rKyKYr2cabaVq/1j6yIV883tvmyV5X4JNV5HOt7L7ca8hvz26qz1
GRpWf93y11P216FrvTrmqB0SO75heHn38N5H3UZqY9aoSK+LqSnq9VG88sJ3
pNfjkZxXUZgvueGyD2f7rlzxTttUi6iVFDR25ZpTwyiprzmpBjZtnve8192X
FWrEj1Vj//z6WW3rjyaF2V9PPX8dOT+eR436orHjG4ZX0xG57aNug3m+qdWf
jx2L6C7HP/S2AR9taD3kSTR+AKTXE+j7ih5x3mePHVvLKeawTLtu6Loc9mE5
Jsv9QrEO/7Nf+N3VZyMDfUShTsxADvv5+45Rc9DXzbFd1v5dfg5j/jrGdka9
nrK/jtqHZXoXuet4nhQ7vmF4dShRO2bUbTD765pvKqbFalq7z6aLFPJhNvxJ
O2qoSq8n0Pcta76B+8d3rawFMFXuNAnF+vVT120qPuuoykfKzUOH9v7E0a9l
T37uI6vHb9180hL//j9/9uvZS08u9nX8OHNQi+3u+hwH9nyYlP11z5++bu/e
Tuh1rwY71isddRvM/rryYcTUFDzNYh29IsNqtceCVa+n1vcV176xnGdRwbL+
Xdx4Ye3X5dc+uKHcAy/g1X6pWlOtqLPz3PjkmZHbndf962r2dxB2vZ6qv442
eec7xqtxcsBjUUcNdmZ/3Z6bxY5FdJtizReMzXc8uV4nPffAzQOf+52//lH0
2A1WvZ6Uv/7LwfvBaXM6aCjMuZwqdz1PISf+N7/6b6WfK+bijHKv5a0pO9Zz
gUJ8beqPJoVdr6fqr0OnlZ3vmH+Kf+uCXvdqsO/csWPkbchfl78upucX//RX
63KHf2PHDdn/u/gX2eId89kfXDb4b3seaFf/wqrXU/MqTPt1eU354BR0a505
at++ca3GppsTs3y/sHDlZQP3+/OPD1/X6u9u2jHgxR/sPTtWbHmPPgVvHbDr
9VT9ddRr9LQu2twFvY45sWVtuHzz5pG3keKYNQrS66J2zp3Jvtf7i2xfbuzN
s3Fmrp+b2sha6lPCrNeT8SrOnsrmz8+N6HoeckiKc1BGzicZ8Zjkc04OfN+v
tfzWaz8ZW2tN8p0+hbowU9VwbxGqD5Omv751y5bSMRU6viv+elVOzzjbSGrM
GhE7t5UPIxrhfL0HXF94bXvNBVa9nlI+zOp6SfOPRo+lSwzkmU+7tlEZubmn
xdqLUSiuabrY/lp4o6L6MOn566dPn3Z1LnLC0eZnn/th9DhHwasfP+p8WWZ/
3dodOxYhYiO93u2+z/KZN1zTjvqgnaEwX7yp2pf5HPWpa89MSX5OctfrNxZh
z4dJ0V8/evTeUo2L9YesJncX/HWA2pNlbUFt+VG+z+yvG7FjESI2rHo9ib7v
fD1u5ayPz8C8zYu3Zne8Ovra4OPy7PxavnmtOTfjkMvV37D9YBI563nY9XqK
/jrqNZZp3Lm5udVj3RV//dpdu0rbgnuSUb7P7q9LrwvBq9c776+fObHiD1fU
/mMHtcxxP4P530ee+8XAv+XnXG7444eajeXcmdX1SnG8PvXdn4fdF7l1lrBO
W2paHbDr9RT9dczHLNO4GKcsp7kret2bN7uwcGik7zP761rfVIgVWPV6J7wK
1Ae/ZtOqzvvE8X/u//3ciydWczn2faO8ViA9xdov+fzxFx4aWKfogZ8GiGdZ
s5+0mjHLx3KUOjB18OZ3/2a1rRs+em+yOVPsej01fx063MtdRw6Jadeu5MMs
3Lbgzpsd5fudGbNqRvnrQqzBrNfb7lWU1tr+3StXvdIPPBJG83WR4r5DTcW+
Vi2sBRs6P+XZe25Y/e0d93yn0d/Kr/vQtjqydaP6MGn5694aQ8gDR33Ervnr
S0tLpe1Bnswo32f215UPI8QKrHq9C/kw3to48tVH4IWHBvX63i9nr//ypTWP
O+b9znP399dlaLpmDOrfbPgvN2UPnw6cfxMB1YdJy19HjnpZv4fxyvR6l/LX
Mc549x+jfJ/ZX8c1LX9dCOn1Vvd9Z06sW4sLcwWPP5/OuNzocX7gD0vHSG8d
4uQ4F2luawTY82FS89dRA6bs2kVbu+ivo25jWXtQ53GU7zP761ovSYgVWPV6
Z/q+s6eyJ776QP956uM/fDF+PB3jrVeeyR5/4L7syOLd2eLiYrb0t99Kqo6h
WIFdr6fkr3vrgQIcZ9PrXcpfB1VtGvZdZn9del2IFVj1eif8dSHESLDr9ZT8
dYxDZbp2544d/X/vor8OvGcGo9xzMPvrqg8jxAqsep3RqxAiVdj1ekr+uler
/ODNB/v/3sX8dTAzM1PaLhzDYd9lHbM031SINZj1OptXIUSqqD5MGv46jiNy
uqt0bVf99T27d5e2C7l6w77L7K8rH0aIFVj1uvJhhEgH1YdJw1/36qgA+0xX
89fzY22eQ7cOXzOJ2V+36zp2LELERnqdp+8TIlXY82FS8dehXcs07dU7r1r9
DPQ62rx07MFO+evemkkf27dv6Hflr8tfF4JVrzP2fUKkCrteT8Vfhy4v07QL
C2setOl1eK5d8te9NZNmZ2eHfpfdX5deF4JXr8tfFyId2PV6Cv46jqGXu/7E
E4+vfs70etfmm06zZhKzv25zFWLHIkRsWPU6o1fx1FNPrRI7llBgnRJrc9f1
zKigndZmtD92PCFg1+sp+OtoyyhrCnXVXz99+vTEayaxjll2TctfF4Jbr7N6
FUx9H3w5azPGy9jxhACeo63hzXJvpvow3ffXUa9xlHyRrtZzxDk66ZpJzP66
ETsWIWLDqtcZ82EYcwGhV027Mul10zMsel31Ybrvr3v1yYvjUlf9dTDpmkns
/rr0uhDS62x9H5teZ/TXkQNjx5pNr7Pmw3TdX0fsXu469Hn+s13NXwfIVS9r
48mTJ4buH1Z/XeubCrECq15n7fvYatlCr9qxZtHr0DCmZ6TX0yYVf73Xe3jk
3O6u1l8H3tqtR4/eW/k9dn+dyWMSwoNVr8tfjx9PCOCvmz/Dotfhr5uekV5P
m1T8dW8tobm5uXWf7er6puCG/fvL61XetlD5PWZ/XfkwQqzAqtdZvQpGvc7m
r0uv96LHE4pU/HUvd/3w4TvXfbar800B6siXtRM6vup7zGOWzT+KHYsQsWHW
66xehfJh0oYxH0b1YbrrryNur25KWb5LPh+ma3odeS+jPkco7iPWMYvNYxLC
g1Wvs+bDsOUCMtaHYfbXVR8mfkzjgtjLNCxqqZR9Pl8fpmt63asxj+cLVd9j
9tel14VYQXqdr+9jygU0f116PW3Y82G67K97Od17du8u/Tw8967mryP2srZe
vnlz5feY/XXVhxFiBVa9ztr3sc3dYcyHkV7vRY8nFCn461u3bCnVsEcW7y79
fJfz16tyf6q+x+yvs41ZQniw6nVWf53Nq7D6MEz+OmP+Orte76q/jr7Y06+4
7yz7jvnrXdTrwKszX9U/MfvryocRYgVWvc7sVTD1ffLXpddTpuv++tLS0tj5
IZa/vnTswc7VXwfe8wR4C953mMcstjVDhPBg1uuMXgXbs0Xlr3PoddWH6aa/
/rF9+0q163V797rf6XJ9GLBzx47SNmPNKO878td5PCYhPFj1OnM+DFPfB8/K
+nzp9XRRfZhu+uue1wzf3ftOvj5MF/11zKMta/Pi4l3ud9j9daYxSwgP6XX1
fSljep3JX1f+ei96PKHosr+O69HLXa+6Vk2vdzV/3VvL9Zb5efc7zP4625oh
Qniw6nXWvo9Nr6v+uvR6ynTZX/fWDoLnXvW9fD5MF/11rNla1m7kBnnfYfbX
2eZcCeHBqtdZ/XXm+jA47rHjCYH0ei96PKHosr+OHPUy3Yp67FXfM73exfrr
wJtjOzs7636H2V9nWzNECA9Wvc7sVTD1fdDrmm8aP6amYdfrXfTXUQOmTLcO
y33ocv11gDGnrN3bt21zv6Mxi2fMEsKDWa+zehVMzxYZ6zky5q+rPky3/HVv
nU8w7DlY1+vD4H66rN2bNm50v8Psr7M9ExbCg1Wvs+bDsNWyzeevKx8mXVQf
plv++uLi4tges5GvD9NFvY5z1btXwX1n2XfY/XUmj0kID+l1rr6P1V9XPkza
sOfDdM1f92oaYjwa9t18fZguzjcF465xyuyvKx9GiBVY9Tpr38eo1+Wvx4+p
adj1etf8deR+lOnVUXRZ1+s5gnHXOGX219nWDBHCg1Wvs/rrbLVsGf11xvx1
dr3eJX8detvLBxmlDV2vDwOu3nnVWHNtmf11No9JCA9Wvc7qVbDlAjLON5W/
3oseTyi66K979cdnZmZG+n7X668Dr5alt8Yp85glvS7ECsx6ndWrYMoFtPrr
0utpo/ow3fHXr921q1SrHrz54EjfTyEfZtw1Tpn9ddWHEWIFVr3OnA/D1PdZ
/XXp9bRRfZju+OveXEu0ZZTvp+CvY6wt2wfw3cs+z+yvs41ZQnhIr3P1fWxe
BWM+TD5/Hfcrvd7D2YEDB7KdO3b016jBXD+AOW/Io8V6kqiv11WvErDnw3TF
X8f16OWu4xiOsg3z15eOPdjZc9Zb4xTPHso+z+yvKx9GiBVY9Tpr38eYv271
BVj0Ovz1o0fv7Y/9npfpAT2PvISu6SB2vd4Vf31h4VDpeYd7yVG30fX668Bb
49TL4Wf219nWDBHCI6/X8Swun+OcMtAkAL6i9YOxY2oa5EaizXg1bRM7piZB
+6Bb7VjHjicE8By9uWzjAu0AfRW7TaNi5zd8h9TPbQNzN7t0fmM9pLJzDfXY
7dnfMOBNW5vtXjx2uyY5bmX7AffX3n6wvptpzDp066HV9sbWSkLEpqjXrR9I
EVz/9mpjO/oC+3vK5Pt7vNrfbLxLiXy7inodf8u3OaX30ADwx+vQ6kXdjm3H
Pq5Vxzp/TZteZ6Co12PHU3WcoLO95z24LxzWF1n7yvR6Fyj2S971hn/Pt8u0
K87vol7H/XmxH0/pfb69sbWSELEp6nUb++y6SeF9fky3/q2o1+3vbYi3qXZb
f49259ubHwtjx1zne4Djm3+mUNbmFN6jjePmvowLPFBopbYc3/z7/P3owm0L
yV7Txfdl/npbYiu+h1fqnVt2XtmxtGNX1nebXsexxt/se21p5yjnKvD2xZHF
u0v3RX7Myv97sc9L6b3pdfwttlYSIjZ5vY5xLnY8IUAes/UJTLmA+f4d9e9i
xxMCqw+DMS/V/PUqr64Jrx35w7HbXMTm4wGm/PWTJ0+s6rm2569Da5adU7Oz
s2NtJ4X6MGCcNU6Rv273JkxjVv4eJ3YsQsSGdb4po17P+2+xYwkFxj5rd4p6
Hd7TKDobdWCwFgv2B/YDdA7eQ+ujPoynHcqAj4/vxW57Hub5pubfjlpfJRaY
U1p2Po077qRQf71qf6CeU/GzGLMsT0RjlhCcsOp1u2dX35c2+fowOO6x46kT
tKtOPxwaHv3BqHk1qBEZex8YptdBmd5JFdProM3+Oo6Pdx6Nu0ZAKv468su8
fJjiZ+Ux8YxZQniw6nXmvg/PVWPHEgrLhwEp+evQacP0NOajlD1bH8Zbr/2k
nzc6imZHLkMbfF1b3xT3MIz+Oq7rNhwHD9xDec9qxt2W6XUc6y7767jfLdsn
yPMvfpZ5zLJjHTsWIWLDqteZ/XWmXMAU10tCfXWsd1SVr2Lza6fJNcfvII9m
FA8/trcLrcqYv57X67GPQRX5cSbP3Nzc2Nsyvd71fBivFj3y04qfZdfrTGOW
EB6sep2572PyKuAvW/2EFPQ6dKlXwxpAx+fratQxNxTP54dpdsQUUy8O5MNI
r7cO3NOVnTeobzPutvL5MF3W69488bJ7GPYxS3pdCF69zuqvmy8VO5ZQWD5M
Knr9Y/v2VfrqaC98cWvzuLnBHtjOsNruMTU783xTa3db82HQ33rnzCT55yms
b2rHrmyflK31yqzX7VjHjkWI2LDqdea+j8mrSCkfZtj8Ujuu0DD2TKEuvQ5w
3Xg1LWJrdstfl78eP6Yi3nmLZ0GTbA8aP4X8ddx3lO0X3BcXP8s+ZjF5TEJ4
sOp1Vn/daqXEjiUU+fowXdbriL2qbkv+2oWGqdtfN+Dh4nn9sHz20PX9zV9n
nG/adn8d+dhl5wnmQ0+yvVTy173nDmVzcKXXecYsITxY9Tpr38eWD2P+etf1
+rW7drn6uJjvinwYG+fq1usGtFaVZke8IfcPcz5M2/11L49q0hr+5q93Xa8D
7/opHkv2MUv5MELw6nVWf53Nq0ghHwbrr3vjOrRQ0Vdt0l/PM0yzl9W5aApm
vd5mfx3XnHd+THo9Wv466tJ2uf468Oo8FdvFrteZxiwhPFj1OmvfZ3nNsWMJ
hdWH6aq/Dp+tqnZj2fkbwl83hmn2Sep/TAKzXm+zv+7VFsJ6upNuM5X6MMCr
9VS8rpnHLLY5V0J4sOp1Vn+drTZW1/11b00VgGu37Duh/HWjKlcHhFhvlFmv
t9lf99bw9M7dUcjXh+m6v471xsr2D56p5T/HrNfZxiwhPFj1Omvfx5oP00V/
3asfYf6kN6czpL8OoBOr6sZg/lzTukr1Ydrpr3vPhqbRX6bXU8hf9+qzFp9L
MY9ZbM+EhfBg1eus/jpbLVvkw1i7u6bXqzQwdJr3vdD+OsA1hXuIqvuLJv1f
1Ydpn79edb85Taz5fJiu++sHbz5Yun/w9/znmPW68teFWIFVr7P2fWz+uun1
rvnriNnTOsgxqPpuaH89/7tVNSeHxT0NzPkwbfXXMZ6UnQdl6wGNg+n1rtdf
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
kw29Vffvdd1fN7x5jMDWfTRUHya8v151Xjd572B6PaX8deDVsMf1jDEL+T+s
HhPTmCWEB6teZ/XXNd80fAzwg8vGYdRCaeL3UvDXQVU9neLcU9WHCe+vezXD
Z2dnGz8v7PxOyV/3aiNhjDKPCZpdY5YQnLDqdVZ/nS0fxuqvx9Lr8DzHnTs5
Lan468CrqVPcf8z5MLH8dW+dXluTsylMr6dUfx1cvfMqN7cIY5b1Y2xjFtsz
YdEeXvzhd7JHj38p+8L8TdmN11+TXXHBR7Kv/CxePKx6ndVfZ6tla/XXY+n1
hdsWxpo3WQep+OsAGtTLE8jvQ2a9HsNfxznm3UfhfrHJ306x/jrwnsNhLgez
x6T8dRGSl5/6n9nn/uCaddfhb314Xza/+HB2OmJsrHqdte9j89dj58N4HiRq
Fjb1myn566Bq7qntR2a9HsNfx1gRMscrT4r1YcCBAwdK9+nCwiHqMUv5MCIE
P33m0Wz+ygsGrr0NMx/J7vi7H2SvtiA+wKrXmf11Nr1u9WFC63VvDRRQtVbn
tKTkrxtVc0+xL5n1egx/feeOHaXHou61BMrI14dJSa9Dl5ftU4zRlg/DqNfZ
1gwRgTl7Kjt+Y6E/u3hr9onj/xw/tgKsep3Zq2DKh4lZH8arTV21TmcdpOav
23H09Dq0PLSq6sOE8der5mSE6E/z9WFSmm/qPUdCngxzPUc2j0kE5KUns/3v
vGjQU99+MDv56rn4sZXAqtdZ/XW2XMBY+TDe+ieWj9rkb6for4OquaeLi3et
1rvr9R6OHmsoYvjrS0tLpccA8wxC/H6q9Rzho5TtV8xDxT0Sq78uvS4a4cyJ
9Vr9mtuj5qcPg1Wvs/rrbLVsrT5MaH/90K3lz7YxR7JpXZWivw6q1j2FVjx6
9F5KvR7aX/eeGzU5JyNPqvVh0Fd5z+PMY2Ks56j6MKJ2zp7KPv32Qa3+jsv+
LHsmdlxDYNXrzP46U98Xy1/35pk2uU67kaq/DlAr0PPYr921S/nrDf9e1Zqm
ofLsUq2/jrZ496LMHhPbmCWa5+vXFWqOXbw1u/Nf25kDk4dVr7P2fWxeRYz8
dejFqrmRTf9+qv66Ab/R27/Q82x6PaS/jmcX3r4PlY+Taj4M9p+3b5nHLOXD
iDp545GSdd4Wn44e1yiw6nVmf52p74M+tj4/lF6PNc/USNlfBydPnnB1Deae
suXDhPTXvTkEeLYRqs2p+uvAO6/RTma9zlQjQTTIG+vnl15ywY2tz4MxWPU6
a9/H9mzR9Hoofz3mPFMjdX8dePdEAHMHYscXitD+urd2VahzG5i/jlzulPx1
4OXRYZyyNrONWfLXRV28cmT9uPGee7pzz8+q11n9dbZatqHrr1etZxpqPmDq
/jrAPYmn16F5YscXipD+elVNzabW6i0j1frrwFtnwPIYGT0m6XVRC+fOZEtX
DK6HdMmvvz+77/Sr2b+eWMxu+siV2RUXFbT8NZ/sr5cUPfbzsOp19X3x4wlB
vj5MCE0Rc56pweCvg1vm5yvz2GPHF4KQ/np+rMiDtZNCtjnlfJjZ2Vn3+QXr
mMW2ZohoiBceWqfHRwV1Hh87O93vQ3/g+p6GvL7Ae9zfo/+d9BW5pehPALRS
G98jxsXFxT7W/8WOKcR7azNoQzwh3uP4WpubPjerapdgvLXPhTy/kcvdhuPQ
xHtoVa9WCf6ectvtFbXQ7Vg3+ZvAy4VBTnvI9mM+sbUZ50Ds41Dn8fT0+oED
B1bbjJyY2LGGeA9QoxXtZfKYRDO8cOcH3PF5x40L2f3He/3+ZGnhxlJdjzz3
aTR71TPhWGD8MO8jny/dtvdYNxv+HPq/tsRU13vvFe0FaHt+7mkbYm5qP6C/
b7LN+b95z7JxHxxiP9srxje0F6D9KR5n89w8zxdYfce2xFz3ccYr7hHtWHvn
5bTv7Xe8/Yy1qixfI0T78+e3xRf7mNT1Huds2T7GGqfWj2F/5/d1G+Ju4tzG
q43R8tfFtJTpdfjmpWuZvvRkdnj7Bes/v3fy87Cter3Yt9o12Yb3+X5gpe9b
LNU7bW7DsLZV9X12n+K1OaX3eDW9Dor7qc59jd/xrgnkwlhOTtNttt+x42xr
CKV2nE2v43Xrli0VWnIxmbZ7er3p8xtAL3r3ovnzrsm+1H4DY4yd3972u3TM
rV14xZpTZfsZvnveYwqxv2Of28Dai/ex9Z7oNv/4R4PPB5G7/pWfVXzn7KlS
zT5pnXbML8KzwT69hyd6zd/Po09GX9h/BlV4HfU95vQhTydP/m/2PtYrsNpY
ALkDZZ9pcxuq2lb1/9ZmUNXm2O2oc3/g+Fr/j7zXuttsYCz1NCPON3y+7Byq
633+1ebjATxfHvf7XXoF3jru5rF37Toe5/pGH27HGnMv6ziHyn7TuyfC8438
uV11bdV1zWFOhrUZ74f1f1053gBzyDy9bv1Y2Zjltblr53wxzryej633RIc5
dyY7tvNXB73y930xe3XY9779+fUe+6cei9YO1vmmdh+PHLnY8YQi71/EjiUU
odZLasM8UwO6zY51yvNN81TVd8Q9S+z4miJfH6ap+abeupt2Lxq6zfn5pqnV
h/HWo8LcMPPU2cYs6XUxNWV6/XPfHul7ixsvHPzee2/PTkdqB6tetz6Are8z
7Ro7llBAq9mzVxz3Jn4DmqlNWtHqwzDp9SpNGbp+SUhC6HWvDg889xhtTnV9
U4D+wtvXzGMWk8ckGmBSvb7Ms/M7xvflG4JVr7P662xehel1eFNN+etebm+o
9UyLMPrryA305uqBVMf7EPXXvVwY6PgYbU65nqM3Jw21eZj9dc03FdNy8sYr
BnX3n5wY6XtvPDJY02Bo3nuDsOp1Vq+CTa9brmtT+TA4l7yagrFqgGPMNz3D
otfffPPNfs1M71jE8oKbpun661XPLaCbY7Q55fVNcc/l7W9mvc40ZolmKNaH
GTmvpZDDLr0eFnZ/HeNc7FhCYf46jncT+TDeeqbgrdd+EqXNrHodbfbqawDo
+dhx1k3T/vqhWw+17v4n5fVNgXf+Wm1WxjFLel1Myzq9PmpeS0Gv43vKXw+H
6XXGvs/qJMeOJRQ239Rq4tS9fS9XALoxVptZ82FwbgPPY8ec4KZyRmLRtL/e
tlwYkHI+DPDmruN5HbwWtjHLal3GjkV0nKJPfuH1o/nkRb2u+aZBYc6HYZu7
A71qz5Hr1uuoq+Z5YTFrkjD669Dh1uaqNZRS6+Oa9Nehi9uWC2NxpTrfFHjr
ruFZB+uYJX9dTM3ZU9kdmwZrvXz0718b+r1i/vqoee9NIL3O1/ex6fWm6jm2
bZ6pwajXLR8G92aoiYdjUHZsMG8vJY+9SX/du++JPRfA/PVU82FQa71sv+N4
2JohsWMMRX7NkNixiO6zLifmjx8a+p1nbhqcp3rg+29Gi59Vr7Pmr5vXHDuW
UDSVDwNt5HmPseaZGox63fx1AL2OtnvHBz5l7Hjrokl/Hfc2ZftvYSHu/ks9
H8abg4G1HBj1OpvHJBrkzIls7sKL1q6ri7dWr1d69lT26bevff4dmz4TLRcG
sOp1Vn+dbe4O8lKayIdp4zxTgzV/3c5vrPmJv6HuetnxQX57U7XKQ9OUv45+
0Tu/cT8Ys82p58N4zzXwPI/VY5JeF3Xx+pc/vi4f/Rnns/9+3/UDn/3Ud+M+
m2XV66z+Opteb8pfb+M8U4PVX7ex3fR6leZEvxc75jpoyl+/Yf/+0v2G3OrY
bU7dX8fzi7J9jzwZVn+dacwSzfOv9+4b1OzX3J49dnbwM68/enDgMx945MfR
42bV66z+OptX0UT+etvWMy3CrNf7+TDn9Tq4eudVrsfe1PpZIWnCX8dcAK/G
ThvGiNTz11F3tGzf43kRq15nGrNEGF7tFdZtvnhrdv3CYnbffX+eHfrI9oF/
2/eNf4seL2DV66z+OlvfZ/XX6/TX5+bmSsfT2PNMDen13urf0X7v3goecuy4
p6UJf70q97+JNQzGxfR6qvkw3v5H/8Ko19nmXIlwvPXKM9mX/p892RUXrb/e
Ns7MZZ9cWMqePlOR3x4YVr3O6q+z5cPk10uqQ6/j3PG0TOx5pgZz/npRr4Nr
d+1yj1nXPfYm/HVvfyEfI3Z7QT4fJkW9jj6rbP+jLjujXmcbs0QcMLYD9KNt
rSHGqtdZ/XXzK2LHEoq666976z0ifyD2PFND/npv4N+q6oij5kbs2Kehbn+9
qu7R0tJS9Pba8Ux5fVPk5Ht9jPS6ELyw6nX56/HjCUG+Pkwdz/K9tQfbpPsY
9brVX8/Xh8nj5TCB2PVOpqFufx3PiDyt2BbPCXo25fz1qnsmxjGLbc6VEB6s
ep3ZX2fT63XNN63K64253mMRRr1eVh8mT5XH3oaaPpNSt7/ura3Zpn2Uev46
8M7Vo0fvpRuz2OZcCeHBqtdZ/XXzpWLHEoo66zl6tUZQtyF2O/Mof71X+hlv
PVrQVd1Xp79edU/TphwM89dT1uveWlWLi3fRjVlsHpMQHqx6ndVfZ6tlm89f
nyYfxsspNc8rdjvzMPvrVXq96hi2yT8ehzr9da/mOnLAYrczj+WvLx17MMn6
6wC1YMqOBdZpa9O9U9MwzrkSwoNVr7P660bsWEJRV/31AwcOlI6f8MGQOx27
nXmk13vu57y13kEXtV9d/jr2n+fp3jI/H72deVKvDwO8tXkP3nyQUq8zeUxC
eLDqdWZ/nU2vT+uvQ8t468e0cZ1M6fVe5b7x9DryZWK3Y1zq8tdR+8XbL22r
eZmvD9PFe6xR8HK34BtIrwvBCateZ/XX2eba1+GvI2e0K1oGMOavD6sPk8fL
++iix16Xv+75uW2puZ7H9HrK+eveOYrnQ2x6nW3OlRAerHqd2V9n8irqmG+6
dcuWzmgZwOyve/Vh8uA88PQ66j7Gbss41OGvV+X1t1En5fNhunZ/NSrIQSo7
HljLSmOWEJyw6nVWf50tH8bqr0+q16GHPC2Df4vdvjKY9fqwfBijymNvU23O
YdThr3dpbgYwvZ5q/XXg1cFHjSq2MYttzpUQHqx6ndVft1zu2LGEwuqvT6rX
vbXZ21YzI4/0em/o51Px2Kf116HHuzQ3AzDUX/fmE6A+PtuYxeYxCeHBqtdZ
/XW2uTvT5MNAC3iaDv5X7LZVxc2Wvz6uXgf5vq+rHvu0/vqRxbvdfdDWdV8Z
6sN4z/WQm8c2ZrHNuRLCg1Wvs/rrjHrdnimMq9e9PAH4kXWs/d4U8td7I30H
/YCnVfFcJXabRmFaf91bzxR5F7Hb5pGvD5OqXsd16+UosY1Zyl8XYgVWvc7q
r7N5FZPWh4Ee9/IEkPscu11VMOr1cerD5Kny2Luw76bx19H3dWmeqZGvD5Pq
fFMvXwt9EtuYpXwYIVZg1eus/jpb3zdpPgyuBU/LtF0jMOr1cerD5EFf4N2X
dcFjn8ZfR55+1+ZmAIZ6jjiWXv/T1nnuTcA450oID1a9zuqvs+XDWH2Ycf11
aJauajjlr/fG+m6Vx47zJ3bbqpjUX6+ab4s172O3qwqG+jDAOz5MfgvjmCWE
B6teZ/XXza+IHUsoJvHXjx691x0ru7BWCbO/Poler/LY25zHDSb116vuUd56
7SfR21UFQ/114HkG6J9ixxYK6XUh1mDV6/LX48cTgkny1705eNu3bYvenlGQ
Xu+N/f2DNx909Wub+4hJ/HXsq67OzQAM+TAA/U3ZMcJ6y7FjCwXjnCshPFj1
OrO/zqTXkc9g7R5Fr1etj4SayLHbMwrS672xv1/lse/csSN6+zwm8der5mZ0
oY4li7+O9ZPLjtGhWw9Fjy0UjHOuhPBg1eus/rrlfcaOJRSm10f115H/UDZG
tnWtxzIY89cnrQ+Tx1sDHky6zaaZxF/38iygD2O3ZxTMX1869mDS/vqe3btL
j1Nb17FqAkaPSQgPVr3O6q+z1bIdp/46dICn17p0bTD76+PWh8mDvG3PY0eO
VOw2ljGuv141N6MrdUcY6q8Db/2HLuQs1QXjnCshPFj1Oqu/bsSOJRT5+jA4
7lWf9fwsaLhJ1qKJBbNenzQfxlhYOOTq2TZeN+P661gfs8tzMwBLPoz3vAf9
VOzYQiF/XYg1WPU6s7/eRt3RFNDro8w3xbjv6TTMRYzdjnGQXu9NtR3kPpWd
B9C6sdtZZBx/Hfet3jneJf+SZb7p4cN3lh6rLtSUrQvpdSHWYNXrrP4621z7
Ues5Xrd3r6tlhvnybYMxf70uvQ48nQTaVktvHH/dqzfS9vWRirDUX8f89i7l
ZjUB45wrITxY9Tqzv87kVeTz1z3dDT/a02ddzBWVv96benvenMy2zTse1V/H
Z7xz/Mji3dHbMQ4s+TBerSpGvc40ZgnhwarXWf11tnyYUeqvf2zfPlfLQPvG
bsO4MOr1OurD5Kmal9mmfnJUfz0Vbx2w5MN489+7eMwmhXHOlRAerHqd1V83
rzl2LKEY5q9Dw3s1QZAjEzv+SWDU63XUhynizc3E+TJq7cSmGcVf9/Iquuit
AxZ/HX2Td/7Fji0UjB6TEB6sep3VX2ebuzPMX0e+i6dluqoFlL/eq2WbVTkk
qLUXu81gFH+9K7k9o8KSv45z2jv/YscWCsY5V0J4sOp1Vn+dVa+XzTetylvv
qrdu7WL11+vU6wBrm3rnSBu04jB/Hf55St46ML2eej4M8I5dW57vNI3y14VY
g1Wvs/rrbF6F1V8v0+tVNWG66q0D6fVebdvF/vPOkTbU1avy17tWm3JU8vkw
qet17/h1uX8aB+XDCLEGq15n9dfZ+j6rv17U61X11ru+Hon0eq/WbXvraIHY
a4JW+eveejsAOe2xj9mksKxvCrx5wujXYscWAsY5V0J4sOp1Vn9d+TArf5+b
m0vSWweM+et114fJ4837A7HXBfX8ddyzefOoY8c8Lbg+GfLXgZeP1es9HD22
EDCOWUJ4sOp1Vn/d/IrYsYQiXx/G9HpVjgNqO8aOeVqY/fU668PkyfeTRWL2
m56/3uZnAtPClL/u+QptW7erKaTXhViDVa/LX48fTwjK6sNUzSHsYr31Isx6
vYl8GNu+l0sMHzvWGrhl/vrJkydanXM/LeavM+h1b20IrMEbO7YQMM65EsKD
Va8z++uMet3yYapq9OFaiB1vHUiv9xr5jao1lGLNeSj668gL8urGp5DrBSx/
fenYg0m0p4qDNx8sPY6YmxA7thAwzrkSwoNVr7P665b3GTuWUFh9GLQbOtar
RR3TI60bxvz1EHodVD2biZFTnNfr8NcXFg658bWlZvy0MNWHwZhcdiyxbkTs
2ELA6DEJ4cGq11n9dbZatnl/vapexsJtC9FjrQv5673Gfgf3f945hHtBb43R
psjrdehYb44pcnlSqdmdrw+Tur/u1c/veg2rUWGccyWEB6teZ/XXjdixhML0
OsY9T8tAZ3VxnUcPRr3eZH2YIlVzT0P7nvn89ZmZGTeuLtdvLGJ6nSF/3cvf
m52djR5bqPbLXxdiBVa9zuyvs+l1eDNX77zK1TKp1Vpg1OtN14fJA5/ay6sC
IeuvmL/uzUsEOPdjH586yefDpO6vY3wqO6a4N4sdWwik14VYg1Wvs/rrbHPt
kb9w6FY/pxf5yLFjrBvlr/ca/z1cR945FTL3BHp9cfEuN5ZU5pjmMb3OUH8d
bfWeCcaOLQSMc66E8GDV68z+OpNXgeNb5YWmqGeZ/fVQeh1U1TgPVTcRba2q
B5Nin85Ufx1jVdlxRW5f7NhCwDhmCeHBqtdZ/XW2fBjUxPC0TAprI5Uhvd4L
8pvw0L2a7CBEjeyqdXpTzZlgqg+DeRne8Y0dWwgY51wJ4cGq11n9dattGDuW
ECAPwBvrUqrfWER6vRfsd1HDsSoXpcn+pWotAZzfqeXBGPn6MKnrdeDNk0+1
/8rD6DEJ4ZHX63iPPh59YMqgv0dfj/U2MLYztBlYm60OWux4mqaqXgbqVGMf
pLYf0B5odDvOWOsytTZ67bY2m+8a6ner8mLgvyPHvO7fxTY9HQewzk6K5zfA
PZAda7xPsY15vGc4uFdMve12PUuvCzGo16/bu3fAg031FWA8A4uLi/3/t/6/
DfE10d58m0HK7cUrzmVPy2zftm11HGhDrHW85vM88Tc7zqh9k1I7q9qP9qLG
Pmrph/hd26+olVg1RwL/huNQ129jW1W/h/tUfDb2Man71cD+9vqxFN+XHWvc
q+F5eMrXNsD1bGN0bK0kRGzK9Hp+7E8RWzsnr9fz7S6+dh1rh7UZrym3F3nD
VTkK+HcbD7190MVXaBf7/6Jej31MmiZ/TUPHFP+t6VecU1V+N+aE4lhM205o
1ar5pfBisdZA1bndVazPyuv1snaWfa/Lf8e5BVDbH+M16gHl7xe7flyrkF4X
Yo28XsfcPOSKpE4/X2C5zwfIh4kdTyiszSB2LE0e2yo9g/M9doxNY/kCOM7I
m8Az89gxhTjuq+f3cttj/P6w+0Q818GxmeY3qnK8ALR67GPRNMjxsmM9zf7s
EqhLuzpm9R6OHk/TWJ+Vf34SWysJERvm+aaAbb6ptTt2LE1RtfYk9FLs+EKA
vE/G+ut2boecb1oE8yKq9DTuJXF8xt0uatEM0+os/Te0nB3rVOfUFrGaZgD3
K7HjCQXDmCXEqEivc+n1lNeKg5dcpWdYjjVjfRjUvbM2x9TrAHkLVech8mbg
GY66vWFrCACsYYp7ltjHIQTwXe1YT3Lv00Xyep2lHwOpj1lCjAOzXmfs+yzf
MXYsdXP69OnKWtiotY7PxI4zBIx6PVY9R4+qmjHG7OxsX3t620A/NUz72/xS
5Ekw6XU71mx6ndFjSnXMEmJcWPU6a99nOi52LHWzc8eOyjwY9PkM9YqB9Hov
ejxgFM1ueht5NNDcOE+RBw8tP+p3Lb8XOTOx2xyCvL/Olg+jMUsIXqTXufq+
FJ8tVuWsI/cAc/DQZha9zpi/3qZ8mDyj+OOTgrVNHz3+pVW9zuavYy6i/PW0
SXXMEmISWPU6az6MPV+MHUudbarSNPAqrb9XPky6mL+Oc7tNeh2gX61bq6Pf
xrbRVju/mfx1O9ZMep15zlVKY5YQk8Kq1+VVxI9nWvAsfNgaj6iDZvmP0uvp
0sZ8mDw4D6vqjI4K5mjktQvmWFu7mfx1tnwY3Isxe0ypjFlCTAOrXmf2KlLo
+zB+VdXMQD47PgedZO2WXk+Xtut1ixHrv0yq1TFnupjTBb1ux5rNX2ebb6ox
K348QsSEWa8zehVodwrPFqvml8KDNF0DvW7HmkWvM+avd0GvGzg3oduH1Wi0
+RfIgffqyLDqdevHWPQ6s7+eypglxLSw6nXWfJgU1p6Az1ilcfLHVP669Hqb
wfmJORY4pzF/9Npdu/rvoeexLs6wHBflw3DkwzD76ymMWULUgfQ6V99nxI5l
UobN3UMtmPznoVeVvx4/pqZpa32YpmH119nyYZj99a6PWULUBateZ+37ulzL
FvWpq7T6gQMH1n2HMR+GUa+3uT5Mk8hfl7+eMl0fs4SoE1a9zuqvd3WtuF7v
4cpaMFiPvex70Ktsel35673o8YSC1V9X/nr8mELQ5TFLiLph1evMXkXXcgGh
Oau0OurkeVrF8mFUfz1tmPU6q7/OlA+jMatbY5YQTcCs1xm9iq49W8TzbtR7
qaoFA33qfd/yYaTX04ZZr7P662gzi15n9te7NmYJ0RSsep05H6YrXgXG4iqt
Ds8derxqG4z5MNLrvejxhILVX9f6pvFjCkHXxiwhmkR6navv68raE9Ccw+pT
Q6sM2w7j+qaM+euqD8Pjr+OZm/LX48cUgi6NWUI0DateV98XPx4P6OphWh21
YkbZlurDcOh11Yfh8teVvx4/phB0ZcwSIgSsep3VX2/7XHtoaswfrdLq45yn
yofh0uuM+TCs/jqTXmf219s+ZgkRCla9zupVtHnuzig5MAsLh8bapurDSK+n
DKu/jjYvHXtQ9dcTp+1jlhAhYdbrjF5FW58tDptbCg7dOp5WB+avM+l1xvx1
Zr3O5q+rPozGLCEYYdXrrPkw9nwxdix5MP4O0+o4TyfZtvJhpNdThtlfRz8m
fz1t2jpmCRED6XW+vq9NXgX2f1NaHVh9GCZ/nVGvqz4Ml79u/Zj89bRp45gl
RCxY9br6vvjxQFdVrVsKbpmfn+o35K9z6HXVh+Hy1+38lr+eNm0bs4SICate
Z/XXrW5x7FiOHr23UqfXodWB8te59DpjPgyjv6766/FjCkGbxiwhYsOq11m9
Cmt3zDhwng3T6nWdi8iHMY+GRa8z++uMep3VX2fKh9GYJX9dCGa9zuhVGLFi
uGH//qFa/cji3bX9nul1Jn9der0XPZ5QMPvrqg+TPm0Ys4RoC6x6nTkfJkbf
h/mA1+7aNVSr1/3cU/XXpddThtVft7kKLHqd3V+XXhdCep2t74uxVhy8oZmZ
mUqdjnmnJ0+eqP238/VhcNxjH4MQMOavqz4Ml79u5zfLfFNmf13rmwqxAqte
Z+37QucCYmwdtmYp6jlCVzfx+9gu23xTZn9d9WHix9Q0jPUc2f115a8LwavX
Wf31kM8WoSWG1WvcumVLX182FYPqOXLpdcZ8GEZ/XfVh4scUAuXDCLEGq15n
9SosN6Tp31pcXByaq75zx47Gc1Ty+ess+TDS673o8YSC1V9X/fX4MYUg5Jgl
RNth1uuMXkWItSfy55TH3NxcP+e46Tar/rr0esqw+uts+TDM/rrWSxJiBVa9
zpoP02TfB80EHT5Mq+OcC9Vm+evS6ykjf13+espIrwuxhvQ6V9/X1Fx77NNh
NWDqrq0+Coz+OqNeV30YPn996diD8tcTR/VhhFiDVa+z9n1NzN2BJhxWAwbz
TqEtQrdZ80059Lrqw3D566q/Hj+mEGi+qRBrsOp1Vn+97meL2N6wGjDQ8rGe
W1v9dSa9rvz1XvR4QsHqr7PlwzD768qHEWIFVr3O6lWYL1XH9g4fvrMVNWCq
sPrrTHqd2V9n1Ous/jrTfFONWfWuey1EF2HW6/IqJueG/fuHavU9u3dH1xDK
h5FeTxlmf50pH0b+uvx1IVj1uvJhJtsGdNG1u3YN1eq3zM9Hby/I14eRXk8X
Zr3O6K+z5cOw++vS60JIr7P1feZLTbrfRqkBc/TovdHbajDWh2HMX1d9GC5/
nS0fhtlfn2bMEiIlWPU6c983iVeBMXKUGjBt25/Kh+HQ66oPI389ZZj99UnH
LCFSg1Wvs/rrxjjfwz4aVgNm65YtfZ0Yu41FrD4Mk7/OrNcZ82EY/XXlr8eP
KQSTjllCpAirXmf2Ksbp+7AmyTCtHrsGTBXy16XXU4bZX2fKh9GYJb0uwvL6
N45nS0tL2dLffit6LAazXmf0KsZZK26Ueo2oAYPc4dht81D+uvR6yjD762gz
i15n9te1vqkIzgsPrWqcd2z6THY6djznYdXrrPkwo+YCor7LMK1+8OaD0ds0
DOTD2PNUFr0uf70XPZ5QsPrrWt80fkwhUP66CM7ZU9kdmy5c1Tkb3vfF7NXY
MZ1Hep2v7xvmVYxSW/3I4t3R2zMKpteZ/HVGva76MDz+OuaYKn89fkwhUD6M
CM2z8zsGtM6G994uvR4R9nyYKq/iur17h2r1LvWdqr/OoddVH4bLX1f+evyY
QjDKmCVEbXz78+v0jvz1uDD7697aE6Osg7Rp48a+Xx27HeOQrw/T1jmxdaP8
9V70eELB7K8z6XVmf13rJYkgvPFktv+dF63X6/LXo8LsVZT1fdA6V++8qlKr
o/Z6F2sdQ6+zzTdl9tcZ9Tqjv442o3ZVF/ukSdCYJb0umuXr121c0ecfOZh9
5rd/Tf56S2DPh8nns2CMRz3GYbXVu6p1Vc9Rej1lGP111YfhHrOEqJvXv/zx
vta55Nffnz18+ufZ1z64Qf56S2DOh8nP3cEYMEyrb9+2rdN5JPn89S63Yxyk
13vR4wkFs7+O61r+etpovqlonDMnsisvWtE7H3jkx/2/3bPjP8lfbwnseh3j
HLT6zMzM0HWQuq4BVH+dQ6+rPgyXv27nt/z1tFE+jGiUc2eypSsuWNHlf/zQ
6t+O7fxV+estgTkfBu3Gml3DfPXZ2dnOa3Ugf51Dr6s+DJe/bue3/PW0Mb2O
6zp2LCI9XrjzAyt5MBdenz129vzfi3pd/npUmP11aHXkuFRpddSJafOapePA
6K8z63XGfBhGf1311+PHFAL566IxcrUbD3w/p3fkr7cKVq8C7R2WA5OSVgea
byq9njLM/jpTPgzrmCW9Lhrh7Kns029fqd244VOPDf6b/PVWwZoPM0yrz83N
9c/V2HHWidVfZ9LrjPnrzHqd1V9XfZj0yc+5ih2LSIdv33hFX/O8Y9NnsmeK
/96Qvw4fFOPxNOTXs8Q69CdPnpgK9Cttx/SM9X2x4wnBnt27h/rquI+JHWfd
4PjascZxjx1PCJDTa23GNR47nhDgXszaDL0eO55QoM+1dmMfxI4nBDinrc3Q
7rHjCQHjmAXkr4u6OfvNW1Z0z8Vbszv/9dz6zzTkr+O5d5UGiwHyo+36ajO3
zM/3WVxcjB5L08A3H1azEccNHobNzbTXrr23dVTsbzi+B28+2D/W+b6/LfE2
8R7tR3vR7qNH721FTCGOux1nPCfE37vQD02KtXnhjs+tHut87bvY8TUJ+ipr
s/VZqbY536eVjVltuf6aem/tVT1HUQtnTmRzF67kwVy6dKr8Mw35623W6zan
G9dcG99bf299QRtiauI9npkM0+r22bLXrr238c3+Dr1qOg5jXtfbN+o+QJsB
rkf7t1Sx421thl5vw7XXxPtiu9HW/P2oneP566ANcdfZ/rxet3vztsTX1HG2
85vFYzLy7Y2u9US3Wdbhxz/0thUNfs0RX4M35K/j+Sdykqdh08aNq3HhPdad
x3qWk4Jn0cipBHhWa695yv4W+u+HD9/ZB31/1ee6/B5j+TCtjnHAvlM8ZrHj
H/d9WRtwfO1Y49zscvtG3Qdop7UZ41zVNZEKaJ+1GeN72XFO7bjjFfej1u5R
2hw75jreo89avaZ7D6/+PcW22mv+mkafZn1Z6iwu3rXqOUTXe6LT/Pt91/d1
D9YwfeCnFZ8t8ddPtyB+wDrfFL4MQJ8QO54mwL1c/l6sTKsjPzB2nE2Tr7/O
NN/UfDnNN00baDnzIhmuZ2DzTdF/q/562uSfh8aORXSY5+7Prji/hulH//61
oZ9XfZj2kHp9GGiXqlow0PEs2hX1YWycY2mz6jn2oscTCvOb0W62eo64D2er
D8Oo1y3HK3YsoqMU/PL3fPLG7GP79vVzhcteb7z+mkHNdPHW/t/tMx/5yKG1
tZUCI72eXt+H86oqDwbPVGPHGArVX5deTxnz19F2Nn8dsOh15jX+LLc/diyi
u+T1+rQMzadpEFa9nmrfh3zWqnMN83eY+j7VX+fQ66hta7pVej1tGOuvpzxm
VZGvHRA7FtFRzp3Jlq64oL66KhdvlV4PSKq5gBi73n3ppe55hlr7bLmAlg/D
pNflr/eixxMK1nwY81yZ9HrKz4Q9pNdFHZx78UR2ZPHuvp857PW++/48+4PL
LlrLX7/sw9nh+760+hm8X7fGUiBY9XpqXgX8xaqcddRgz9cqjh1vKJQPw6HX
5a9z+evWfzPNN01tzBoFazPTM2ERn+J809jxGNLrafR9+eNYBHU2ba04Nn+d
sT4Mo143fx3Hmk2vs/rrbPnrdk2nWtOsjHwt+tixCBIaqr9eB9Lr3dfr6L+r
8q1Ms+XX44gdcyjMX2fS64z568z5MIz+Olt9mNTGrFGxfBimMUtERnq9VaSU
CwidgjWuRqkFwzjXXvkw0uspw+qv2/nNlA+Typg1DozPhEVkStZLkl6PR0pe
BeqBelp9dnZ24LOMc3esPgyTvy693oseTyhY/XXGfJhUxqxxMH9Jel0EQ/56
q0ilPgzGak+ro04M2pn/PKNel78uvZ4y8tf5/HXlrwvRIIX6j+/Y9JnsdOyY
zsOs17v8bHFYHkyZH8E411756xx6XfVh+Px1rHspfz1tlA8jYvDkvV/IFhcX
l7kru2Pp8ejxGKx6vet934EDByrrrJd9h9GrQD6MPVdg0evM/rrqw8SPqWlU
f72bY9Yk2HFmGrOE8JBe717fBw3mafVNGzeuy4MxGOfam15n8teZ9TpjPgyj
v86YD9PlMWtSGHM4hfBg1etd9Srw3H/7tm2uXq/KdWF8tqj669LrKcPsr7PN
N2XNX5deF2IFVr3eVa9i4bYFV6vv2b278ruMc+3z9WG85w6pwZi/zqzXWf11
tnyYro5Z08A4ZgnhwarXu1gfBv4w6r6MWg+mCGv+Ott8U/nrvejxhILVX2fM
h+nqM+FpYHwmLIQHs17vWt937a5drrd+ZPHuod9n7PtUz5FDr6s+DJe/zpgP
w+qvKx9GiBVY9XrX+j5oEE+r79yxY6RtMM61z+evs+TDMOp11YeRv54y7Pnr
TDWIhfCQXm+/Xod3WFVrHePXKNth9CpUf51LrzPmwzD668pfjx9TCBjHLCE8
WPV6l/JhquaY4viNuh3Gvk/+uvR6yjD762z5MF0as+qCccwSwoNVr3fFq6ia
Y4pa6+OM0Yxz7Rn9den1XvR4QsHsr6PNTHq9K2NWnTCuyS2EB6te70p9GKxV
6nnrS0tLY21L802l11OFWa8z+uvM65uy5a+z1TQTwoNZr7f92SJim3aOaR7G
Z4tWf51JrzPmr6s+DI+/jjmmyl+PH1MIGNfkFsKDVa93oe+bmZmZeo5pHsa5
9lZ/nUmvM/vrqg8TP6amUf56e8esumF8JiyEh/R6O/s+5Lp4Wv2G/fsn2iaj
v658GC69zpgPw+qvs+n1to9ZTcA450oID1a93mavoqp+4yjrmHqw6nWrDyO9
ni7Mep3RX0ebl449qPrriaP8dSHWYNXrbfYqquo3TnOMGOfaM9aHYcxfZ9br
bP666sO0b8xqCuXDCLEGq15va30YjLle/UZ47tNsm9GrUD6M9HrKMPvr8B0Y
/fW2jVlNwrgmtxAezHq9jX3fgQMHXG99Wl+cca691Ydh8tcZ9brqw3D563aP
In89bRhzOIXwYNXrbez7oLPqrN9YhPHZovx1Dr2u+jBc/rqd34z+Olv+uvS6
ECtIr7dHr+/ZvdvV6/CJp90+41x75a9z6XXGfBhGf1311+PHFALGMUsID1a9
3rZ8GIxBnlaHjq/jNxjz13GfYx4Ni15n9tcZ9Tqrv86WD9O2MSsEjM+EhfBg
1ett8ypmZ2ddvV7XM1/Gvs/0OpO/Lr3eix5PKJj9ddWHSR/lwwixBqteb1N9
GMTgaXXMP63rdxjn2qv+uvR6yrD669aXMel15vx1phrEQngw6/W2PFvEXNK6
10Yqg9GryNeHqXNfthnG/HXVh+Hy1+38ZppvKn89fjxCxIRVr7el7+v1Hna9
9Vvm52v9Lca+D3qdbb4ps7+u+jDxY2oa1nqObfKYQsE4ZgnhIb0et++bmZlx
vfW6/TLGufaq58il1xnzYRj9ddWHiR9TCBjX5BbCg1Wvt8GrQB/keesLty3U
/nuM803z+ess+TDS673o8YSC1V9X/fX4MYWAsaaZEB6ser0NXsXWLVtKtfqm
jRsbGXsZny2q/rr0esqw+uuM+TBtGLNCw7gmtxAerHo9dn2YpaUl11tfXLyr
kd9knGsvf116PWXkr/P562x6ne2ZsBAezHo9Zt9X5a039Zvy1zn8dUa9rvow
fP760rEH5a8nDuOcKyE8WPV6zL6vyls/snh3Y7/LrNc13zRtVB+Gy19X/fX4
MYVA+etCrCG9Hl6ve946/t7k7zLOtbf660x6XfnrvejxhILVX2fMh2H115UP
I8QKrHo9Vj5Mlbd+9Oi9jf42o1dh9deZ9Dqzv86o11n9dbb5prFzOGPAuCa3
EB6sej2WV7F927ZSrX755s2N/zbjXHvlw0ivpwyzv86WD8Pqr7PlcArhwarX
Y9SHiemtA8Zni/n6MNLr6cKs1xn9dcZ8GNb8del1IVZg1uuhny3G9NYB41x7
xvowjPnrqg/D5a8z5sOw+utsY5YQHqx6PXTfV7WWaZM1YfIw5q8rH4ZDr6s+
jPz1lGHOX2d7JiyEh/R6mL4vtrcOGPs+qw/D5K8z63XGfBhGf1356/FjCoHy
YYRYg1Wvh/Qq8DuxvXWLg22uvfx16fWUYfbX2fJhmPPXmWoQC+HBqtdDehUz
MzPRvXXA6FUof116PWWY/XW0mUmvy1+PH48QMWHV66Hqw8AL8bz1xcW7grab
se9DPoy1m0Wvy1/vRY8nFKz+OvP6ptLrQnDCrNdD9H1X77yqVKtv2rixX9Mi
ZLsZ59qbXmfy1xn1uurD8PjrmGOq/PX4MYWAcU1uITxY9XqIvg9ayfPWY+xr
xvmmqr/OoddVH4bLX1f+evyYQsBY00wID+n15vT6tbt2ud56jLGV8dlivj4M
jnvseEKg/PVe9HhCweyvs+l1Vn+dbU1uITxY9XrT+TAYUzxv/Zb5+SjtZpxr
D73ONt+U2V9n1OuM/jravHTsQdVfTxzGZ8JCeLDq9aa9iuv27nX1eiwfjNFf
Vz1H6fWUYfTXVR+GS6+zzbkSwiOv16Exe72HV+ZsJf566NZDfY4evbf27S8u
LrpafW5uLlq7rc0g9v4P9Yrjy9bm/Pm9tLQUPZ4QrwDPrdDmw4fvjB5PqFf0
NWj3wm0LrYgnxCv0mx3rNsQT6tWuaRzz2LGEesV5jfYyeUxCeBT1Oq4R8y4s
jyBF0N8fvPngal9QF9hvXk0YWx/JxpzQ+9najNfY+z8EeF4OvY42g9TP6bJj
bfejseNpErQPx9rajOeE9vfYsTUN7k2K53fq7cY9qLUZ/SiOfeyYQpAfs1I/
xvk2W3tjayUhYlPU67hGbPzDa2pY+4p9Xx3bxCv0kafVoePz/WyI/Wzbx6tp
dZDq8c2DsRzHw9ocO56myR9razPab+daalh77Xl5mV5PkbyeMb1u53fq7e4f
94JeT7nN+XbXOWa1mfx4anod72NrJSFik9frePaEOsYG/j3//6mAPGbrG6w2
Vl3bRn/q6XXMjSr7TtP72baf7w+R7xv7OIQgP98Ued2x4wkB2mnHGfnrNg8x
dlxNgtxtO87IX2c4v3FM0Va7rpHjbH+PHVuT2HxTYH1qqm22a7c4ZsWOKwRo
d37Miq2VhIgN63xTu4evs5Yt+hjUaizT6nt2747e7ryHETuWUECvmg/LNt/U
9HrseEJg801xrDXfNG3y9dcZ68Mw1l9nGrOE8GDW66DOufZ4Nu15623QTdb3
sdVztHwJJr1u9yhtOO9CgHtlG9fZ9Lpd1yx6nbH+uj0/wrFmqw8jvS7ECqx6
3fqBOvu+yzdvLtXqO3fsiN5mYG1merZo9RwBk17P58PEjicEzPUc8zluseMJ
geXDMOn1pjymtoPjbHMUYsciRGyk1+vp+9CneN46xtTYbQaM+TCs/rp5Uix6
ndlfZ8yHsdwnNr3O6K8rf12IFVj1et1938zMTKlW37plS/T2Goxehc03lV5P
G/PXcX6z6XVWfx3HmkWv417M+m7pdSE4YdXrdfrr2IbnraOeXuz2Gsz5MEx6
HRpG+TDxYwoBq79ubWabb4pnCmx63ebixI5FiNiw6vU6/fVrd+0q1eqoFRO7
rXkYvQroVfOlWPQ6s7/OqNdZ/XW2/PUm5ly1HRuzmGokCOHBqtfr6vvg73je
etv2J6NXwTrfVHo9fkwhYPbXmfJh2PU6k8ckhAerXq/LX79h//5Srf7uSy9t
3fjJ6FUw5sNIr/eixxMKVn+dMR9Gej1+PELEhFWv19H3QY9Dl5fpdezX2O0s
wtj3WX0YJn+dMX9d9WG4/HXlw8SPKQSMa4YI4cGq1+vw1xcWDrm5MG3Uhox6
Xf46h15XfRj56ylj9WEY55uy1UgQwoNVr9fhVWA+aZlW37N7d/Q2lsHoVSh/
nUuvM+bDMPrrjPnrrOslsa0ZIoQHq16f1l9fWlpyvfW29qeMXgXyYay/l15P
F2a9zuqvM+XDsPvr0utC8Or1af11b30k/D12+zwYvQrT60z+OmP+OrNeZ/XX
0WYWvc7sr9v61LFjESI2rHp9Gn+9an2kNueaMHoVqr8uvZ4yrP462/qmzHqd
7ZmwEB6sen0af31ubq5Uq1++eXP0tlXB6FXk68PguMeOJwSMel31YXj8dcwx
Zctfx7Flrg/DNGYJ4cGq1yf116GFPG8d9WJit60KRq8Cel3zTePH1DSqD8Pl
r7PlrzPXczS/JXYsQsSGVa9P2vfl91eRtvtbjF4FYz1H5a/3oscTCmZ/XXo9
fRhrEAvhwarXJ/HXoQm89ZGwzmnsdg2D0avI568rHyZdmPU6o7+ONqNWCkv9
del1njFLCA9WvT5J37e4uOh6610YNxj7PtVfl15PGUZ/nbU+DKteZ5tzJYQH
q16fxF/fvm1bqVafnZ2N3qZRYNXr8tfjx9Q0zHqd1V/Hdd0Fn6QOmPU6Ww6n
EB6sen3cvu/kyROut44xM3abRoHRq2D01xnz11Ufhstft/Nb/nraMHpMQniw
6vVx/XWvhuPWLVuit2dUGL0KxvmmzP666sPEj6lp8vkw8tfTxvR6m9c1ESIU
rHp9nL4POs/z1ru0zxi9Cqu/Lr2eNsz5MIz+Olv9dXa9zjRmCeHBqtfH8dcP
3nywVKujVkyXxkhGr8Lqr0uvpw2zXmf115UPkz7S60KswarXR+37kBe7aePG
ztZwzMPY9zHmwzDmrzPrdVZ/XfVh0sfazOQxCeHBqtdH9dePHr230zUc87Dq
dasPw6LX5a/3oscTClZ/3Z4TSq+nDeOa3EJ4sOr1Ufu+mZmZUq1+9c6rordj
XBi9Csb6MIx6XfVhuPx168u65plMCrNeN2LHIkRsWPX6KP46tI7nrXdR8zJ6
FYz5MIx6XfVh+Px15a+nD2NNMyE8WPX6KH3fx/btK9Xql2/eHL0Nk8DoVVh9
GCZ/XfnrvejxhILVX1d9mPgxhYBxzRAhPFj1+jB/HWMf6r+U6fVb5uejt2ES
GL0K+evS6ynD6q+r/nr8mELA+ExYCA9WvT6s78O+8HJhurquPaNXofx16fWU
YfXXlQ8TP6YQMHpMQniw6vVh/jrWLS3T6nt2744e/6QwehXIh7EcIOn1dGHW
6/LX48fUNMx63fIZY8ciRGxY9XpV33fy5AnXW+9yX8noVZheZ/LXGfPXVR+G
z19fOvag/PXEYaxBLIQHq16v8tfhoZdpdXjusWOfBkavQvXXOfS66sNw+euq
vx4/phBIrwuxBqte9/o+eFSet3748J3RY58Gxr4vXx+mq/MOxoVZrzPmwzD6
68qHiR9TCBjnXAnhwarXPX994bYFV6933b9i1euabxo/pqZh1uus/rrmm6YP
Yw6nEB6set3r+1BbvUyroxZ77LinhdGrYKznyJi/zqzXWf115cOkD6PHJIQH
q14v89cx9nneOnza2HFPC6NXkc9fVz5MujDrdUZ/Xfkw8WMKgen1Lq4nLkTd
sOr1sr5vbm6uVKtv37Ytesx1wOhVqP46h15XfRguf135MPFjCgHjmCXC8tYr
z/SvqUePfylbWlrK7j/eyx7/4YvR4yqDVa8X/XX8zfPWFxfvih5zHTB6FfLX
OfS66sPIX08Z6XXpdVEvb373b7Ibtl/o6r4Nl304u+PJl6LHmYdVrxf7Pm+e
6bsvvTQZ34qx72P015W/3oseTyhY/XXlr8ePKQTWZiaPSTTP927/PVenr9Pt
f/xQdroFMQNWvV701731TK/buzd6vHXBrNeZ5psy++uMep3VX1c+TPowrskt
muU78ztG1up5zR47bsCq1/N9X9V6pinMMzUYvQqrvy69njbMep3VX0ebpdfT
xjwmphoJojnOfvOWNX138dbsE0e/lp166eX+9fXiD7+THV+43tWCf/qt/4ge
P6tez/vr8NBTnmdqMHoVVn9dej1tmPU6o7+u9U3jxxQCxppmoiHOncmWrrhg
xS/ffjB7+sy50s+de/FENr9pfV77hmuORG8Dq17Pj+3e/VRq+4PRq2DMh2HM
X1d9GB5/HXNMlb8eP6YQMK4ZIhriufv7uu6SX39/9sBPh3z2zIls/zsvGtCD
l1xwY/bY2bhtYNbrS8ceHGh/kdTGP0avIl8fhkWvM/vrqg8TP6amUf46l15n
eyYsmuHZL/xuX9f9zl//aKTPv3JksL73SDq/YVj1ut2ze/NM9+zeHT3OumH0
KhjrwzDrdcZ8GFZ/XXo9fRg9JtEA53NhLrnw+tE98hceyq68aFCvf+VncdvB
qtfRB6C9nreOcTB2nHXD6FUw5sNIr/eixxMKVn/dno+q/nramMfENGaJZnj2
nvnsE8f/efTvvPHkQE6M/PU4WN937a5dpVr98s2bo8fYBIxehdWHYfLXGfPX
mfU6m7+u+jBcep2tBrFoCUW9Po433xCseh3XP9ZCKtPrh249FD3GJmD0KuSv
S6+nDLO/jr5M/nraSK+LaCzr9bkL1/R6G2qws+r1qnmm0DuxY2wCxr5P+esc
el31Ybj8devH5K+nDeOcK9EO3nhkUCP+/j/E719Z9frMzEypVt+5Y0f0+JqC
Ua8jH8baLb2eLqoPw+Wv2/ktfz1tGHM4RTv42gc3rHnr7709O92CmBj1Ovp4
z1s/evTe6PE1BaNXYXqdyV9X/novejyhYPXXVX89fkwhYPSYRAs4X6vd+NR3
2+GFMOr1hdsWSrU68tlT9qgYvQrVX5deTxlmf135MOljeh19eOxYBA/HP/S2
NW/9U49Fj8dg1OteLsx1e/dGj61JGL2KfH0YjHmx4wmB9HovejyhYPbXVR8m
fRjHLBGXs9+8ZVUTvmPTZ7JnWhCTwabXoWWYaq7nYfQqoNc13zR+TE3DrNcZ
/XXrx6TX00Z6XQTl7Kns02+/aLXe+l++Ut+24afMzc311+Kc5BXk1/fE+6t3
XtWfczk7OzvR+5MnT/Q1AnRSG18/tm9fqVbftHFjvx/E52LHWPcr2oVX5OaD
xcXF/r/Z32PH1+Rrr/dwv71od9vPzbpe0U5rM9qf4jlddo7b+Q3aEFOIV6wZ
ZG1O/Xq29uF+zPoxnOsM5zfaaccZx7wNMYV4tfYyeUwiHl+/buOKJrx4a3bk
uV/Uuu0qrzgWS0tLq3OBzNds0/9Dl5fFjbWT8v5z/rtdJt+egzcf7HPL/Hz0
uEKB/t7anV/fNXVwjNFmtD92LCHAsbVzG/NTYscTor24rhfu+BzF+Z3vxzDG
WJuh5VLrs8vabuc3WFy8K/l227mM6xn3ZXgfW8uJtHn2//vvq1r90I/eqn37
bdbr+bmNbXlFvo8XN8b4Yv9n37WaKl18b/+P/t00XF6v22es/89/t8t/s/em
19Hm/P5oS5xNtduOdf56LGt/Su+tzbjO2xBPiPeHD9+52u7Uj6/1WUW9XtSs
sWNs6r31Y9CvxX2Sarul10UIXv/yxxuvBYN8Reur0Ifh/bj/D1857zHj3h3X
x/ivKyBHuK3csH9/qVZHHlDs2JoEuY94zWu22DGFAs/QTcsi7zV2PCFAO63N
aH/seEKQr2GJfInY8YQCbbVrGvsgdjxNYv0Y8iSszcib8D6XEqhBbJoccxaq
9k9K5Mes2JpOpMnrjx5c1YI3PnkmejxVHDhwgGa+6eWbN5fqddzDx44tBHk/
JnYsobAcX7tHiR1PCKDbzKOCnokdTwiY55vaNc1WHwbnuOabpk3+mVHsWESC
fPvzqzpw3zf+LX48Q2DR6+jjvFwYljXyGL0K6FV7psSi11Ufphc9nlBYfRjA
otfNawbS62kjvS4aI6fVP/DIj0f7zhtPZvvfeVF24PtvRomZpZ5jVS5M7NhC
YX0f/ObYsYQC/rqN7Sz11xnXN33zzTdX71HY9Lq1m0WvWz1H9GPS62kjvS4a
4bn7sysuGlOrnzuTHdv5q/06j1/5WZy4WfS6VxcGOj52bKGwvg9+c+xYQiF/
nUOvm7+OY82m103PMNZfZ3k2yq7XmTwm0TAvPJRdeV6rb/iTE32fA9dXnvzf
8P6nzzyafea3f23lOxHXO2XQ6xjTvFwYptwQRq8i769Lr6cLcz4Mq7+ufJj0
sfsypnFaNMe5F09kcxdeNFUNxCZqPY4Kg16/bu9eNxeGre9j0+vQq6ZnpNfT
hVmvM/rrdn7LX08ba7P0upia87nn02j1De/7YvZqxDakrteR1/ruSy8t3fdY
65Sx72PKh4G/bv4Mi15nzF9n1uuM/rrqw8SPKQTS66IWzp7KPv326bQ6+M2v
xq0hk7pex3Xu7Xtbwzt2jCH3BWM9R/nr8WNqGma9zuqvKx8mfSwfhmnMEg1w
7kz25L1fKFk7aD1Yg2793xezO+5Yyp6J3I7U9frc3FypVt++bdvqejKxYwwF
az1H6fX4MTWN6sPw+eu2RlTseELArNfZcjiF8EhZr8Nv8nJh0G7ct7P1fWzP
FlUfhkOvqz4Ml79ux1p6PW2k14VYI2W9jnyXMq0ODY9/Y+z72Obam7/OpNeV
v96LHk8oWP11O9aab5o2jGOWEB4p6/XZ2dlSvX7trl20fR9b/rryYaTXU4bZ
X1f+evowPhMWwiNVvY7+rWqeqeVIqO9LG6sPw+SvS6/3oscTClZ/XfVh4scU
AuXDCLFGqnodc3q9XBjoNta+j22uvfx16fWUYfXXVX89fkwhYFyTWwiPVPX6
zh073JrrzHqdzatQ/jqHXld9GC5/Xfkw8WMKAeOYJYRHinod/qKXC3Py5Il+
38eaD8PW9yEfxtrNoteZ/XXVh4kfU9PIX9eYJQQjKer1hYVDpVp908aN/br5
zH0f21x70+tM/jqzXmfMh2H115eOPSh/PXEY1+QWwiNFvY61kLya6/h39H02
xjH2fUx6XfXXpddThtVfV/31+DGFgLGmmRAeqel19OVeLgy8VnyGue9je7aY
rw+D4x47nhAw5q8z63VGf135MPFjCgHjmtxCeKSm1/PtybN1y5bVz5i/ztr3
MT1bhF5nm28qf70XPZ5QMPvrmm+aPozPhIXwSE2vX755c6lev2V+fvUzzH0f
m7+ueo4cel31Yfj8deXDpA/jnCshPFLS6+jHvFyY/HNT5r6PUa+z5cMw6nXV
h+Hy15UPEz+mECh/XYg1UtLrN+zfX6rVZ2ZmBj7H3vcx5cOo/jqXXmfMh2H0
15UPEz+mECgfRog1UtHreB6OtUvL9HqxXez1YZi8Cvnr0uspI39d/nrKMK7J
LYRHKnod17WXC1PUacx9H9tce0Z/XXq9Fz2eULD668pfjx9TCBhzOIXwSEWv
z83NlWr1q3dete6zzPVh2J4tar6p9HrKMPvryodJH+l1IdZIQa/DV/JyYY4e
vXfd55nzYdjm2lv9dSa9zpi/rvowfP462iy9njaMY5YQHino9cXFu0q1OjR8
mefE3Pex5a9b/XUmvc7sr6s+TPyYmkbrm/KNWdLrQqSh13fu2FGq1/fs3l36
efV9PH2f8mG49DpjPgybv445pspfjx9TCJQPI8QaXdfr0CbePNNe7+HS77Dn
wzD1ffn6MNLr6cKs1xn9deWvx48pBIxrcgvh0XW9fujW/7+9u4ux46zvOC4Z
lUqVGqRIRVEvuOhFVPnCqhKUC1uyLEu4iCJHGAms0Bi0EKu1nKBscRAujkiF
BRu6NJsoCmvHpScofmk4Co6x05RswdghsVQXCHmpiU0caN6cpI4bLOIXNN3/
sZ/dmTnznJc958wz8/y+Fx+dlbNn95nMnpnf+Z///GeyMKsvWbzY+xz1Y59a
XlebD6PYv66c11Xr6+T1+CmeswCfuuf1ZUuXFub1LVu2eJ+jPB9G7dhHPwx5
PWaq9XXb5ua+A8xfj5ziOQvwqXNet2sJfb0w9t98z1Pvh1HqX3fzYZTq64p5
nfkwOvV15sNonbPU7skN+NQ5r9+2aVNhVl+5YkXH56kf+5TyOvV1jbzOfBi9
+rrta+rrcVOcaQb41DWvWz3NN3N96u6pjs9VPvapfbZI/7pWXlfsh1Gsr7t9
TX09bor35AZ86prXrbbi64XplsuU+2HUrrW3fhi33Sp5Xbm+rpjXFevr7u+b
+nrcFD8TBnzqmtfXrl1bmNXt37s9V/nYp1Zfd3ldqb5OXp8Jvp6yqNbXmb8e
fk1lULzmCvCpY1633OWrrTebza7PZz6MTl5n/jp5PWbK9XX6YeJH/zowr455
3frTi7K69bNbX3u35yv3w6hda5+eD2P7PfR6yqDYv858GL36OvNh4kc/DDCv
jnndN3P91vHxnp6vfuxTqlVYXle73lS5vs58mPBrGrX0fBjyetwU78kN+NQt
r9uxaiEz19OUj31q19ozz1Erryv2wyjW192+5nrTuCn2cAI+dcvrN2/cWJjV
rebe689Q74dRy+tq/TDk9Zng6ymLcn2d/vX4kdeBeXXK61Y/8s1c72ftysc+
tWvtmb9OXo+Zan2d+TDh11QGxXMW4FOnvN5oNLy9MP2cq5Tnw6j1r1NfJ6/H
TLW+zvz18Gsqg+JnwoBPnfL6qlWrCrP62NhYXz+HfhidY59ifV0xrzMfRqu+
Tj9M+DWVgX4YYF5d8rrlDl9t3c5Z/fws5WOf2rX2XG+qkdeZD0N9PWbK5yy1
e3IDPnXJ6zarsSirf/Daa/v+WerHPqW87uavK+V1+tdngq+nLMr19ea+A9TX
I6d4zgJ86pDX7Vzsu870zomJvn+ecj+M2rHPzV9XyuvK9XXFvK5YX2f+evg1
lUHxnAX41CGvb9++zdsLs5AMpnzsU7vWnn4Y8nrMVOvr9MOEX1MZFO/JDfjU
Ia+vXLFiKNeZOurzYdTyuuvZJ6/HSzmvq9bXud40foozzQCfquf1Tvcz7fc6
U4d+GJ1jn+J8GMX+debD6NXX6YeJn+I9uQGfqud1q6EP6zpTR/3Yp/TZIv0w
Gnmd+TBa9XX6YcKvqQyKnwkDPlXO65avfLX1QdaqfOxTq6+7+TBK9XXlvK7Y
D6NYX6cfJvyayqB4zRXgU+W8PvnNycKsbrNiBrlXJf0wOnmd+jp5PWbU16mv
x4z+dWBeVfO6nXuWLF5cmNdtFvsgP1v92KfYD6NUX1fsX1fO64r1dfrXw6+p
DPTDAPOqmtd3Nh7w9sLY8XqQn60+H0apVmH9MO5zBZW8Tn19Jvh6yqJcX6cf
Jn6K9+QGfKqa130zHK9fvXrgn63eD6NUq3B5Xam+rpjXmQ+jV1+3bSavx02x
hxPwSef1rV/f2jrX2zHQHkN93am2bv9t0N9jx3u7l7Wx813IbS3za6tTuFpF
6LWU9fXhw4fmttv2e1XWNaqv7dHNnDe2/aHXVMY2Wx+z22Y7v1dlbaP+2t6b
uNe0/T+owppG/bXlVTt223bb+/EqrGnUX7tzlspr2n3t3pcp1ZgAn3Ret9q1
cec895lj2V8vW7q0MKtbP7s7Nw2yRnu09yZ3TkwkjUYj6LaW8bV7tG127Ngf
el1lfL179665bQ69ljK/dtts21+VNY3q79qdz9022+eEoddWxtfG7v3strsK
ayrj62azObfN7nwQek2j/jr9923nrNDn6LK+Tp+jQ2clICR7z275PJ+LbS5L
0Tlx1I9m6u4pb23drjPtdt7u9uiOc+ljX4htLevRnc/S22zHwNDrGvWjez9i
n8fY9qbzTOyP7jzXel82m20Geb1U9TH9d+32dTqvh15fWfvZ8nr67zv0mkp5
bafyerruEONj0fHbzlkxvqaLHl1et69D5yUgpKKsbm7euLH1mXoIn7z+494Z
jvY56DB+h32Gasd8qz3OzDwWbFvLZtvshF7LqNl7UXu0fgHbz7bNtt/dv8es
1S9w+e/bPjsPvZ4y9nX6NW0ZLvSaymK5xrbZhF5LWexv2r2m7WuF17T7+za2
z0Ovpyytbb78nix0XgJC8tWyB7l36CDsuOurrdv77GH9HubD6NQqWsf82eO9
bbPK9aau79PY9odeTxnselNXX7b34KHXU5b0fBi1602N0vx11XOW+5wh9FqA
kOxYN6qZiQux/qabRnJ/pDzla+3V7hXn7m9q26yU193ft0pet1mGtr22r8nr
cWM+jNY5y2136LUAofnuSWTXoZa5jk7vHYa9FuVjnzvPhV5LWSyvu21Wyes2
W8Fts1peN2rzHN3rWm3+um23Un1d9ZxFXgcuWbVqlXcWS5nr8NXWzbBzFsc+
nWOf5VXyevg1jZq7X1KrH0Ysr7t9rVRfb113uu8A9fXIuW2mHwb4fevaUl9O
tnNBGWvo1Ld+26ZNQ/996vdLUjr2WV51MxbI6/Hi/qZa9XV3HCOvx03xmivA
Jz1/vWhOTBlrWLt2bWm1daN87FOtryvldcX+de5vqlVfpx8m/JrK4M5ZSj2c
gE+nvD7s6zyL2DyusvrWHfVr7RXzOv0wcXP19db1pmJ5XbW+bttMfT1uitdc
AT6d8rqxmY+j/P2+/vlRvldQ7odR6wV082GU6uvKeV2xH0a1vk4/TPwUZ5oB
Pt3y+ihnsds9L3y/1+7jNqrfq3zsU+sFpL5OXo+Zan2dfpjwayqD4jkL8OmW
143dY2zYv9dqQb5Zkvbv599+c2TbrHzsU+sFpH+dvB4z1fo6/TDh11QG+mGA
eem87svPK1esGPrvtbkvvvcHjUZjpNus3g+jdOyzfhj3HkUlr1Nfnwm+nrJQ
X6e+HjPXD0N9Hcjm9U4z0Id5z0A73vh+z7KlS0e+zerHPsW8rlRfV8zrzIfR
qq/Tvx5+TWVQnJEA+KTz+tTU5Mhr7FYDskzuy+s2L2bU26w8H0atF5D56xp5
nfkwevV1+mHiR14H5qXz+r333pts377Nm6Xt+tBBf1+nPpiy5r3TD6NVX3d5
fdSzSauC/vWZ4Ospi3J93baZvB43xc+EAZ98XrfzXqfrQAc5J9jrLuSsd0f9
2KdUq7C8rna9qXJ9XTGvK9bXub9p+DWVQbHGBPjk87r9287GA95cbfXxhfwe
uy7IMnmZM2h8lI99ap8tMs+RvB4zxfq6nUvoXw+/pjIonrMAn6K8bjr1mPd7
PrRjjc1x9/28sbGxUrdZuR9G7diX7l9X6Ychr88EX09ZVOvr9K+HX1MZ3DlL
6R5/gI8vr9t1n758bX0xvdYqrebju4fpMHpsFkL52KfWC8j8dY28znwYvfo6
eT1+ijUmwMeX141d/+nL2TYvptv5wfKRfZ/vZxjrLy57m9Xnw6jlderr4dc0
asyH0aqv2zY39x1g/nrkyOvAvE55vdM9SI3VzX0ZyOrznZ5rrE8+xDbTD6Nz
7FOsryvndcV+GLX6OvNhtM5Z7lqF0GsBQuuU102nvhjXz2JzHu18aez8Yf3o
nZ5j7PeG2mblY59aLyDXm5LXY6ZcX7fjGPX1uCneMwTw6ZbXjd1HqVv+7kdZ
c9Z9lI99avV1N39dKa8r9q8r53XF+rrb19TX4+bOWUo9nIBPL3nd3Do+PpSs
bj8n9DbTD6OV16mvh1/TqCnndcX6uvv7pr4eN8VrrgCfXvO66XT9aS/unJgI
vr1G/dhHP0zcFPM682G06uvMXw+/pjIozjQDfPrJ68Yyd7853Xrc7bwSelsd
9fkwSvX19HwY8nq8mA+jV1+nHyZ+iucswKffvG7seNHpfkqO3c/Ufn7VziPq
/TBKtQrF+TD0r88EX09ZlOvrzIeJH/0wwLyF5HXHalnrb7opM7fRvv70jTcm
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
1bd9+7bWOfbmjRtb769CrwfxIa/roL6ugfq6DurrGqivV9/MzGP0pWOkyOs6
qK9roL6ug/q6BurrAMjrOqiva6C+roP6ugbq6wDI6zqor2ugvq6D+roG6usA
yOs6qK9roL6ug/q6BurrAMjrOqiva6C+roP6ugbq6wDI6zrs3mrO2bNng68H
o7F79665/bxly5bg68HoXL969dy+fuGFY8HXg9E48tQTrX1sNZexsbHg6wFQ
PvI6AAAA0IeLp5NTP/9RYrM8rWftwN5HkiefOZm8NaLfR14HAAAAejCb04/s
2Jwsf/+fZq4LnHPVsmTD9GPJy0P+veR1AAAAoIsLx5PpJVfO5eYP/MkNyfTM
ieSVt95JXjq6N5lI/bf3XvPV5N9/O7zfTV4HAAAAOrh4OmkuvyKTx5+6kPue
2Tz/4Oo/ms/zV2xu/54FIq8DAAAAfi/e/ZFM38s3nvPM7Xj10UyvzKKNjwzl
95PXAQAAAI/Th7IZfN3Ojt//9OblmWz/t/91ZuA1kNcBAACAYvna+vrDr3d+
ztPfynx/t3zfC/I6AAAAUODC8eQf/+D9mfkv//pGl+f87miy6Y/7fE4X5HUA
AIDynTp1Kvn1Sy91ndl9/u03W99nc0hCr1lOrlb+3iV3dZ/VePF0su/6P8w8
7+rm8YHWQV4HAAAYvTMv/Sz5t29PJONrVmUz4DVfTY4VPefC8WTP+pWZ7/3Y
914Mvh1Kfvqlxdnelo2P9HRPpBMTq9t6Yga5lxJ5HQAAYITyPRUF2nqiX8/1
VLjc95f/PLJ7aCKnoE6+6L6ne3ru7x6/PfM8m9U+yDx28joAAMAIWZ18YjrZ
e+TnrZ6Wd5/5brImd3/MRV85lPl+X74nr5co34feR17P99GQ1wEAAOolP3PE
+qJbPTEXTyf7P/ueS9nw87ta+f7EgxPJ+jVrko98bjzZefLd4GuXMZvXx67M
5vWeZzMW5PVBrjklr8fr/BvHkiNPPZEc3P9w0mw2k4f2zyRHfvVa8HWhHGee
2N/a783/+Bm1GBGv/eoXrdf7jok7ks23rEuWX7FhqPfDRvnsOsNTP/9Rsv/R
/cne/Xtbr2lXow29Ngwol+dshsjed36fvLrtU3P9zl2va8RoFdTXF5rXB53D
Tl6Pz7nnvp/ctvJKb4/coms+l0wf7TI7FPX26qP9XcuO2rIsd98X1rW9zq0O
N9F4jH1fV68fTXaMr+nY73zdusnksZc991hE9RVkwdump1p9MoP2TmBITj6U
uU8SeR3D8vw9n+l4fM/k9r9/lHN5jC4cT6aXzL9fo9cxTu8cO5hMrLki+5pe
tSGZfvIF9nfNndr7xcx+/cTknuTJZ04mL7/8cvL8zHeSO3L1mBuax4KvGQtQ
cC2j99pTBHHhJ3cuPHOT1+Hxi9zsoF4ze+h1Y7jaZkiR1+My+35s/+bca/2q
ZcmX9/93+LVhYJl8MLtf73/2/wq/L1+b2fLLc8HXjv7le9hbx+we5wWiBKcP
tV0XTF7HIPLH+C/v/mFy/PVTrXsxWE/r/qlbvJn9H35WfD5ADRUcH8jrESmY
77Zo5dbk8FsXw68Ng8vNBOk4Z/vi6aS5/Ape5zVXVL/lvVeFDLl//fP/+faC
10Jej0DquG3n7mdPF5+7L752KJlY0t7Xbte0BN8GDK7guMJ5PCKnD7Vn9XX3
0NMWkfS85l76l/v9flRQvn47hPvWY4iGPB+GeY7iTj4097dg15Z3/N6Cc/4H
rticPHWhAtuBgfz45kv3YFu0YWty10ffN5/pPnQPeb3uCmYxe++HiNpK90b0
dDxP5QHyek3lPicxH//JG+HXhUtm83r+2Nvr/PX8Zyc9vaY7IK/X34kdn+j+
2WnKGzvHhvo3hPDOPPJ3c/vS5kX88K8XUV+PiHsvlq7BbfsNPTCxcXP83D6e
fPF85+fk8jrH8RoqmD+y6BtPhV8XLhnm/U2vvGWg2ih5veYuvzfv6+/g1Ucz
n79Rl6m51Oepn3r8leTcuXOZ4wv19XrLH/NbGs8GXxeGL3/tYbdexUw9ns9J
6yc3yytdY6HPrTqO3bF8QT3EJyaWZp+38ZGB1kFerz+771lfsyFyfc7UZWos
fe2Cm/WTqwdQX6+xgmsSLJfRBxOnomsPr3vQM6sx97fBrK/6KZoNQw2tgnJ9
6D31IhbU5QftcyKvC8rn9QE/o0E47vPzTG0tn9epr9dWvnetY35D/Z0+1HZt
m1n94C/avjfdI2XHcPJdzVzOgJbN97/1QludnbltFZK/fqiXa4JHUBclrwvK
Xe9MXaamUu/5M8d26utxKLgOzY75e15+K/nNoUZyx4Y1bX2v1627vXW/pOBr
x4IVvUdrmTh46XU8+3dxePPyzN/EzpPvBl83+pDKf26+X/4alaL35SdO/ir8
2kVlri2Z9eEf/E/H789/VrboK4cGXgN5XU++H3aQ+f0IJHW8b7s2ifp6HF59
tC2P98rmPPKZWX399EuLi/ftVcsyfxO2n33ze1Fdc7O8UtctupkB6R7p9HHb
vY/jfB1Ivv+syzUG6ZkPw5oPQF7Xk5kd8iHmN9fR05fra+9dcld7Hx319Sjk
6zmZ/ojNU8lD+2eSgzMzSXNqc2Gu5/rDGpt9DbfNBMrpVt9DBczux1feeifz
byd23FCc93JzYjI97Jc/S+W+p2GdObi1t9dgrt/96ubxofx+8rqYy7PanW88
dzb8mtCXuc/ZfO/Zqa9HoSivWz218F6mrx9Ntq+8ov37B5xHgLCev+cz/s9Q
/uoO3o9VWXoO2+V7jh/ZsflSFi+63qDgHgt/ce+Pk9ePNlo5nmtQqyE/c7Ut
Q83u91H1G5PXtez/7Hvm/46Y8Vo/qevRvO/Zqa9HId8T0fV8PXu+L8rszGmv
sdlzf8fep9m8cP+zXJdYRb7ZL53m6nv7oGZtPno6+DbhkhP/8jeZfbN8fDJp
NpvJfV9Y1/Z+a5i/l7yuI339Q2EfBaptNoe791v53sb891Ffr7mie3T08r4r
9zks78vr67dPte9LH2aJVM//7rmlcF+tP/y69zlF8zxbeXDvr4NvD7LOv3Es
efhr69t7EWffj41tnm7dt3DYv5O8LiL1WZvV6brOIkLluON/1zprQX2daxRq
ZqH31Jt9XmNxdi4c16jUz6m9X5z/XOXKWy71QM3u2yembui7ZotAfnc0mVpz
TebzsYkjr3R93pN3rM7s160zJ8JvCzo6//abyZkzZ1pG+XvI6xrmrl2aff0z
+6uGUtciuflfneTzevD1oz8D3AP7xMTq7PPoh6qVzJyQgmtUrO5edH2xfWbK
+7LqcVmun+fYParPnuXaMmSR1+M312tFDaaectntuts3J7eOj2fctmnT3OPm
W9a11d7S37thwyTXqdVAesZ2K3f3OL83P6+V69RqJH2NYof3aOee+37m++ib
AOJHXo9bulbDLJiaKqi1DmIY91nD6OXnw/Tc15LrYSev18cr3/pYx9p6xsmH
2jI7n6UA8SKvxys9K5Rry2us4D6XA5nNAeT16mvL671msVxe5/qFmsi9L++l
v6XtHopcqwBEi7weqdQ5e/wJ7qtRdxdfO5TsbDwwZ/fuXd7HPXu+nXzhmtT8
12s+l2zf83Drvxn7mtlANZCvkxfNbO7heWS4mljIHNYLx5PpJfPXF/PZGRAv
8nqEUufrTz3e/Xr0lsv32t3yy3Ph14+BMX89Arks1uu1xvn+9V773hFYwRzW
ru+zcs8hrwPxIq9HJjVHpOesfvmYT59rJLhfUjTaemJ6uFfesTuy16nyHrw+
0vezs761rnN3F5LxAdQSeT0iqdkCVlOzGVKnTp3KSP+bff3OsYPJXR9936Xn
cF+VOJDX45G6n21P1yDm7mnOjL96yb8/u+7BY52fk/sMhs9SgHiR1+Ng/c2Z
8/oCMOsxEuT1qGTmcV+uofquP8jfU5GZUDVzuS8x3d/SqcbebVY7gHiQ1yOQ
O8YvBJkuIuT16Pxm13j29brunrYZ+ul5UH31w6FS8jNfLLNPH22/h/3JvV/P
fN/Hvvdi8LUDGB3yes3lPv9eqA//gBky0cjNf6QnIg5vzUxkX7dXLUtumWq0
5gFNbliZ+W/MhKq3d5/5blsN5s9W35b8U+M7SWN6IjP/yazf26VvBkDtkddr
bjabHd21I2k0GrPuTz222759W8G/N5Lp6Sbz/SJz6W/i0j6fbh4Jvh4Mx/k3
jiUPf2194f3oF68aS26faibPnqYnIgqzx/bnZ76TjK+5prDGYvv7y7t/yP4G
RJDXAaB+0teNnz1Ln3rUZrN7el4A/W2AHvI6AAAAUF3kdQAAAKC6yOsAAABA
dZHXAQAAgOoirwMAAADVRV4HAAAAqou8DgAAAFQXeR0AAACoLvI6AAAAUF3k
dQAAAKC6yOsAAABAdZHXAQAAgOoirwMAAADVRV4HAAAAqou8DgAAAFTbuXPn
WkKvAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAvz/9mPUKk=
    "], {{0, 730}, {748, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{748, 730},
  PlotRange->{{0, 748}, {0, 730}}]], "Output",ExpressionUUID->"813a8c17-30d0-\
4c89-847b-607ab2398b90"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "62a0346c-8ecc-4645-bc6e-e27c9387fd4f"]
}], "Problem",ExpressionUUID->"06e05c45-34f5-4fd9-9cb4-d670a28098be"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "fb04b851-6dd7-479d-9bbf-1a8ce970905e"]
}], "Problem",ExpressionUUID->"3cf5ef95-cba9-438b-b991-654c6b9eedb2"],

Cell[TextData[{
 StyleBox["7.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "36a3f78d-e0d1-4cc6-ad7a-7a1b10a7195a"]
}], "Problem",ExpressionUUID->"80fb1d63-b915-4034-a7c7-c7a527db8c7d"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "8", ")"}], TraditionalForm]],ExpressionUUID->
  "c79dd596-dde9-417a-8698-a2c86fa247b7"]
}], "Problem",ExpressionUUID->"fa08f6a9-ffd2-4154-b5c5-35648c942bac"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 "\tIf the Trapezoid Rule is used on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "9"}], "]"}], TraditionalForm]],ExpressionUUID->
  "c658a537-79f6-49b6-af55-b15bf8d29ee3"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "5"}], TraditionalForm]],ExpressionUUID->
  "f720845f-a7a7-474a-81b7-4092657aaaab"],
 " subintervals, at what ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6d03c51d-e6cb-4115-b6c9-138c2368aa7c"],
 "-coordinates is the integrand evaluated?"
}], "Problem",ExpressionUUID->"8d0950a2-a09d-44d7-91e5-f1b5b80f7341"],

Cell[TextData[{
 StyleBox["10.",
  FontWeight->"Bold"],
 "\tSuppose two Trapezoidal Rule approximations of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[InvisibleSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"9e13ef2b-faa4-4d1b-9da6-c2a0969850d7"],
 " are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", "2", ")"}], "=", "6"}], TraditionalForm]],
  ExpressionUUID->"ca71e91d-5fbc-4d7d-8159-ef92fcf3f6a5"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", "4", ")"}], "=", "5.1"}], TraditionalForm]],
  ExpressionUUID->"71fb1bc7-90b1-4709-8e39-b57b2edb57ce"],
 ". Find the Simpson\[CloseCurlyQuote]s Rule approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "960dcd26-9d84-4e2f-9d00-a19590305a17"],
 "."
}], "Problem",ExpressionUUID->"51fb2c7b-3114-4d44-b39c-03320b78f7b8"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "5eac8900-28cd-4fbd-9729-cf5d8142c806"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "51081343-4226-4154-882a-1e6a7f14e53c"],
 StyleBox["11\[Dash]14. ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Compute the absolute and relative errors in using ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "a023370e-d42b-4eb8-b7c8-5dafffe78b4b"],
 " to approximate ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a0b6901d-9db2-442a-a22c-cdbc334f58b3"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"bbff7f42-7de9-4e6e-877b-\
edce61141ba6"],

Cell[TextData[{
 StyleBox["11.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "0661fe20-57e8-4e72-bf2a-c483b6687abb"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "3.14"}], TraditionalForm]],ExpressionUUID->
  "bf102d86-fed6-497b-9c6e-04cf60562fa5"]
}], "Problem",ExpressionUUID->"23aa02ee-74b8-4a6e-ad14-acbc3d6a0c39"],

Cell[TextData[{
 StyleBox["12.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SqrtBox["2"]}], TraditionalForm]],ExpressionUUID->
  "84d92670-156a-44ef-8be1-b8e5c46dd77f"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "1.414"}], TraditionalForm]],ExpressionUUID->
  "f22c518c-6968-4378-aa1c-dbb77c565641"]
}], "Problem",ExpressionUUID->"257e880d-f8ae-4b37-8f94-df67afe13b90"],

Cell[TextData[{
 StyleBox["13.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "e"}], TraditionalForm]],ExpressionUUID->
  "c63bc518-7797-41f7-8dd3-1d96de8c0681"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "2.72"}], TraditionalForm]],ExpressionUUID->
  "826d57eb-eda2-476a-8980-b6fbe4f6e1aa"]
}], "Problem",ExpressionUUID->"d317bbe1-0c10-41d2-af29-2f02efb0b7b8"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "e"}], TraditionalForm]],ExpressionUUID->
  "c7810f53-36f9-4156-8bd2-07fa4340c116"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "2.718"}], TraditionalForm]],ExpressionUUID->
  "8da34ea1-0278-4382-bee9-ba8fc1d53ea9"]
}], "Problem",ExpressionUUID->"c475fc0e-f883-4db2-8537-bad86a69ff2c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Practice Exercises  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Practice \
Exercises",ExpressionUUID->"01a6f215-0325-4135-81ee-dd65d7b77ac5"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "9448156f-47fa-4584-bd7e-5043a9b63d36"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "3941565a-4893-42a5-9b78-6088246120d8"],
 StyleBox["15\[Dash]18. Midpoint Rule approximations",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Find the indicated Midpoint Rule approximations to the following \
integrals."
}], "TExerciseDirectionsCell",ExpressionUUID->"af2e069d-212d-423f-a3cd-\
51e4c097ef97"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "2"}], 
     RowBox[{" ", "10"}]], 
    RowBox[{"2", 
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"49d02aec-4a52-42fc-8176-707504cd7689"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "df278032-3b50-47b7-931a-4c988a9cf901"],
 ", 2, and 4 subintervals"
}], "Problem",ExpressionUUID->"cfaf671d-2af7-4be9-97b6-f176b991de0a"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "9"}]], 
    RowBox[{
     SuperscriptBox["x", "3"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"c33161be-fa8c-421d-8dc8-037a5ef69769"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "67144f1c-a437-446d-8f20-e7d059bf875a"],
 ", 2, and 4 subintervals"
}], "Problem",ExpressionUUID->"1819060a-8786-4ff7-949b-690f5248f59d"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
    "sin", " ", "\[Pi]", " ", "x", " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"5d84c747-20ad-4e39-b119-5c954c80e91b"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "aa1b6079-29ec-4756-bf42-e4469d11afd8"],
 " subintervals"
}], "Problem",ExpressionUUID->"e6170d64-fa1d-4f47-aef5-76f2e41ef756"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"6d28fa54-1857-47bc-9179-296460f524d1"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "25bebe60-c13e-4a3b-ae78-05b078abf41e"],
 " subintervals"
}], "Problem",ExpressionUUID->"e4bcb994-001b-4435-aca9-9fe8cbd0d079"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "0f019a2d-9dab-4baf-972d-728fed3e1116"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "d8156b8b-f763-4efd-8ad7-e22619a55380"],
 StyleBox["19\[Dash]22. Trapezoid Rule approximations",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Find the indicated Trapezoid Rule approximations to the following \
integrals."
}], "TExerciseDirectionsCell",ExpressionUUID->"42c1e475-41de-4cff-af14-\
8c7241ef88d1"],

Cell[TextData[{
 StyleBox["19.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "2"}], 
     RowBox[{" ", "10"}]], 
    RowBox[{"2", 
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"575c43ac-ff13-43b0-abd7-90f6c9047395"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "c0ef53bb-429e-459c-9b07-0544901ef391"],
 ", 4, and 8 subintervals"
}], "Problem",ExpressionUUID->"8ed57d41-1787-4231-a091-0d8c03951759"],

Cell[TextData[{
 StyleBox["20.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "9"}]], 
    RowBox[{
     SuperscriptBox["x", "3"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"bdebaf7c-9ae5-42a6-8737-9ed63aeb9427"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "7b77532b-3c19-43b4-92b2-5c561e63b4c4"],
 ", 4, and 8 subintervals"
}], "Problem",ExpressionUUID->"45eda873-f80a-44f2-ab06-19a4bcb83511"],

Cell[TextData[{
 StyleBox["21.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
    "sin", " ", "\[Pi]", " ", "x", " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"631094be-3280-4634-ae25-857c319a9b6f"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "b17d78ed-5abe-419a-b567-403b8bf26ae8"],
 " subintervals"
}], "Problem",ExpressionUUID->"b0db3427-f222-419d-a19d-6ce49dd91ec8"],

Cell[TextData[{
 StyleBox["22.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"505ce6ec-51a9-4afd-9f3e-3ea9f95d140d"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "9543ca71-da4b-4c14-88f0-b568c5a67be5"],
 " subintervals"
}], "Problem",ExpressionUUID->"e6c5da4c-83d6-46c8-a39e-72b23f20e6d6"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "1dd412ec-291e-4bc3-aa64-637d70c71928"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "72b98a10-4854-4ed9-93ad-7fee8f03f92e"],
 StyleBox["23\[Dash]26. Simpson\[CloseCurlyQuote]s Rule approximations",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Find the indicated Simpson\[CloseCurlyQuote]s Rule approximations to the \
following integrals."
}], "TExerciseDirectionsCell",ExpressionUUID->"fd8db544-2bd8-49db-aa63-\
60955f55492c"],

Cell[TextData[{
 StyleBox["23.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "\[Pi]"}]], 
    RowBox[{
     SqrtBox[
      RowBox[{"sin", " ", "x"}]], " ", "d", "\[InvisibleSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"e362d79f-6682-4083-a681-1543995e2deb"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "9efaeecd-d475-4c32-822d-c802aa707c78"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "0974dff5-4665-4c40-a6cd-94f4a34cbd73"],
 " subintervals"
}], "Problem",ExpressionUUID->"9000333e-f2f1-4b25-a24e-cb8596ecd453"],

Cell[TextData[{
 StyleBox["24.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "4"}], 
     RowBox[{" ", "8"}]], 
    RowBox[{
     SqrtBox["x"], " ", "d", "\[InvisibleSpace]", "x"}]}], TraditionalForm]],
  ExpressionUUID->"b08b8234-afa7-4ae8-b4fd-2aa4aff9e34f"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "c9af89db-d808-4e63-9113-f83c5ac65cd1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "23fe48f9-1155-4e65-b5c9-a2c055329d42"],
 " subintervals"
}], "Problem",ExpressionUUID->"5c29e09b-65b8-471e-8069-7e742636b368"],

Cell[TextData[{
 StyleBox["25.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", 
      RowBox[{"-", "2"}]}], 
     RowBox[{" ", "3"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}]], " ", "d", "\[InvisibleSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"73503e08-0d95-4d7b-9c4c-17dbe84d44a5"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "500d9a3d-ae5e-49e8-9c1c-909d6b6eb3e3"],
 " subintervals"
}], "Problem",ExpressionUUID->"31177172-0603-4a83-bf5c-ba3875b3a0a8"],

Cell[TextData[{
 StyleBox["26.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "2", 
     RowBox[{" ", "4"}]], 
    RowBox[{"cos", " ", 
     SqrtBox["x"], " ", "d", "\[InvisibleSpace]", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6d07be37-8c99-4702-b4e3-600bf4a94151"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "da9d949f-460d-4965-a1a0-3f6f94ec45f7"],
 " subintervals"
}], "Problem",ExpressionUUID->"9ade0423-2052-4a07-af1b-55bd34f86c45"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "9be7d569-6ffd-4250-8ca3-30c77a03a5ca"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "840f2b72-2a97-4bb2-bae7-ab182a78cede"],
 StyleBox["27.",
  FontWeight->"Bold"],
 StyleBox["\tMidpoint Rule, Trapezoid Rule, and relative error",
  FontWeight->"Bold"],
 "  Find the Midpoint and Trapezoid Rule approximations to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
    "sin", " ", "\[Pi]", " ", "x", " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"0a183c02-a6b2-4584-ba0e-5dc4bc568d29"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "25"}], TraditionalForm]],ExpressionUUID->
  "d6ed57e4-a9d7-447a-b647-a02cdfbb146b"],
 " subintervals. Compute the relative error of each approximation."
}], "TProblem",ExpressionUUID->"5090ec78-facc-4858-8f6f-fb995d4619b4"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "8512af5d-bae8-46a4-abd6-055bf0d30071"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "741d7c10-429a-4d49-839e-b29fcc8d4401"],
 StyleBox["28.",
  FontWeight->"Bold"],
 StyleBox["\tMidpoint Rule, Trapezoid Rule, and relative error",
  FontWeight->"Bold"],
 "  Find the Midpoint and Trapezoid Rule approximations to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"fc39c63c-8082-4779-a520-e2ef7226cda6"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "50"}], TraditionalForm]],ExpressionUUID->
  "3ca9509b-5bdc-454f-8069-b3bac1c76983"],
 " subintervals. Compute the relative error of each approximation."
}], "TProblem",ExpressionUUID->"edd20700-2f72-41b0-b46c-b82428a68ccf"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "7f647ff2-e1c4-4f1a-976a-d19252d1d88b"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "6af40e66-9199-4c00-902c-d5682f497489"],
 StyleBox["29\[Dash]34. Comparing the Midpoint and Trapezoid Rules",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Apply the Midpoint and Trapezoid Rules to the following integrals. Make a \
table similar to Table 8.5 showing the approximations and errors for ",
 Cell[BoxData[
  FormBox[Cell[TextData[{
    "n ",
    StyleBox["= 4, 8, 16",
     FontSlant->"Plain"]
   }],ExpressionUUID->"a13067a3-97f9-4bcd-ae04-5ce403b0936c"], 
   TraditionalForm]],ExpressionUUID->"7f760e02-2b24-46b4-983a-c38c9717e963"],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox["32",
    FontSlant->"Plain"], TraditionalForm]],ExpressionUUID->
  "7f11fdcf-9027-47de-8a32-dd6dd8c31e05"],
 ". The exact values of the integrals are given for computing the error."
}], "TExerciseDirectionsCell",ExpressionUUID->"a6bc43d9-a374-4452-8850-\
517847d2ef59"],

Cell[TextData[{
 StyleBox["29.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "1"}], 
      RowBox[{" ", "5"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"2", "x"}]}], ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
    "=", "100"}], TraditionalForm]],ExpressionUUID->
  "9207fc30-7c2b-47d7-adb7-a24416269830"]
}], "Problem",ExpressionUUID->"5883ecb7-9af5-4f69-8513-e7bbcbc73c8d"],

Cell[TextData[{
 StyleBox["30.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", 
       RowBox[{"-", "2"}]}], 
      RowBox[{" ", "6"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["x", "3"], "16"], "-", "x"}], ")"}], " ", "d", 
      "\[VeryThinSpace]", "x"}]}], "=", "4"}], TraditionalForm]],
  ExpressionUUID->"faea963b-9492-4bcf-80cc-74d6d73ba73d"]
}], "Problem",ExpressionUUID->"22a20106-a877-4fa5-b0b8-dfac578aa147"],

Cell[TextData[{
 StyleBox["31.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", 
       RowBox[{"\[Pi]", "/", "4"}]}]], 
     RowBox[{"3", "sin", " ", "2", "x", " ", "d", "\[VeryThinSpace]", "x"}]}],
     "=", 
    FractionBox["3", "2"]}], TraditionalForm]],ExpressionUUID->
  "bebcca28-7d42-4846-a6c2-102cc000bf8a"]
}], "Problem",ExpressionUUID->"31fb2dff-1f63-49b2-a872-8330a9a95f4e"],

Cell[TextData[{
 StyleBox["32.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "1"}], 
      RowBox[{" ", "e"}]], 
     RowBox[{"ln", " ", "x", " ", "d", "\[VeryThinSpace]", "x"}]}], "=", 
    "1"}], TraditionalForm]],ExpressionUUID->
  "861ef996-d093-445d-8be0-bb665e4c0992"]
}], "Problem",ExpressionUUID->"a976b5d1-6554-4ce7-882b-7f584f4975b4"],

Cell[TextData[{
 StyleBox["33.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{
     "sin", " ", "x", " ", "cos", " ", "3", "x", " ", "d", "\[VeryThinSpace]",
       "x"}]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "c2dfb376-a7a6-4725-aa24-0c0e1aea7d81"]
}], "Problem",ExpressionUUID->"2039ea23-fd98-4335-a829-f4dbdbfa753e"],

Cell[TextData[{
 StyleBox["34.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "8"}]], 
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "2"}], "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    FractionBox[
     RowBox[{"1", "-", 
      SuperscriptBox["e", 
       RowBox[{"-", "16"}]]}], "2"]}], TraditionalForm]],ExpressionUUID->
  "c5c57d14-651b-40fe-8013-9566e7301ece"]
}], "Problem",ExpressionUUID->"6dae22df-cc97-4ea2-8852-c60f431f7466"],

Cell[TextData[{
 StyleBox["35\[Dash]36. River flow rates",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  The following figure shows the discharge rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "b041d1c9-f462-48ee-be4f-55ae9b29bbb5"],
 " of the Snoqualmie River near Carnation, Washington, starting on a February \
day when the air temperature was rising. The variable ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "d82cccf2-bbf5-4fe0-90ab-6019b41b3c78"],
 " is the number of hours after midnight, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "6b28b8e5-73ef-47fb-aea7-5400a88c410a"],
 " is given in millions of cubic feet per hour, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", 
      StyleBox["0",
       FontSlant->"Plain"]}], 
     RowBox[{" ", 
      StyleBox["24",
       FontSlant->"Plain"]}]], 
    RowBox[{
     RowBox[{"r", "(", "t", ")"}], " ", "d", "\[InvisibleSpace]", "t"}]}], 
   TraditionalForm]],ExpressionUUID->"8090f5cb-2854-4e18-921f-6e005d5ac26d"],
 " equals the total amount of water that flows by the town of Carnation over \
a 24-hour period. Estimate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", 
      StyleBox["0",
       FontSlant->"Plain"]}], 
     RowBox[{" ", 
      StyleBox["24",
       FontSlant->"Plain"]}]], 
    RowBox[{
     RowBox[{"r", "(", "t", ")"}], " ", "d", "\[InvisibleSpace]", "t"}]}], 
   TraditionalForm]],ExpressionUUID->"8bd36157-b40b-4675-8222-e7a1142b84ef"],
 " using the Trapezoidal Rule and Simpson\[CloseCurlyQuote]s Rule with the \
following values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "83d4b809-690c-48d7-94f9-44fc49895ec7"],
 ". "
}], "ExerciseDirectionsCell",ExpressionUUID->"986ba82b-1e06-4d6f-9ec8-\
7291e99ad2a0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zY3ObR4+7j97J6z0QCs5i9wD88pZlB4o29LOGlRyzvK2LVurna9uTua7gAnH
t16Wer8hxx/P/KHB41WOVe7uPa3m6+878Ovqv7Wjrz1Z89/mLLwlv2OmNjHf
1SXKyfW7QPtm3hMN940dz10rrxNyLmLidb/O95PXicznyF1kpQdayWmx7/rO
Ka/f5593bss9V7pxs3vmMt8FjKgcd2ycMz/1/qNn0y+TH8tZZzOxz1a+30NL
vtCdOUEbmO/qYqUHWskJDyr79XDeGr0GVP6s7cdz3hNttC7ViSdvOPU9b9zn
/+fQJis90ErOIvXAbuX01QNlDSn3mCwtWWc5baej7wI2TP7o6pZmu43OLXvv
3otrvj5pBjD93v6ac52LdCzDfFcXN6fvbckTfRd5+e3OK2teAzp6f7LSk8N1
mJte/xt7L3bZS8e9/yzaxfW7eljsu93MKb9HO4aG2uq5snaVnDfSbk76LqCU
czzRc/MvOnusj56r7bBN1rSK1uGccfVrn/j/eXzOfFcbKz3QSk50WWW/7p7H
PHf7ofYfy+m6Tc8VmvH+fZfXdO09fy7Az6RFVnqglZwW+243emDYc1u9d67c
g0juRVTv2tw0mO8C+n02euvJfcaCRR2vCSLrNrfUX511PtP0425hvqtLlJPr
d4GW1ZyzU3md2Pibv7T3WLHrWMRNr6fY77zzaO37qJ2+L+uBlR5oJafFvptn
zqjnOsdeaYRrUHV6/MJ8F1DOuda242OI+DXAafrzpwdb/ztdwHxXFys9sIw5
pz7+IN2/scq+Sr6u3ffvrfvww7fqr4U/83M9dvxE/b8bW6Nqbu+mttaNOjay
Pbpfb8vrNsTWhCjjjNdKD7SS02LfzaMHyu+LXJ/bTs+VfpzVcYuVHmglJzCL
O1+tdM3/vub2YOPgD4Kn32jj/rixWW2q46LKcUz8/f4v/3jC+8+F+a4ubk7f
25KnQvfdyr916VwH9j8RDK6/Ofinv19cM7Nr+O8+NheUaz6zWt9O1hGo9rDK
/q8rKtv/tR1v5vZzlvcP5L6SL+19uPpz/s4l/2f0c7vgF7+r+Zm++L3lNfve
ix56ddbjuetFpT3/2PXHsX3B+ou+mHyt3aahYNPme6r2vZvQuT+ffe5QEV4n
WsX1u3pY7LtZ52xnHSr5evl7eebU3APpuzApdh1VPX9702Dw8of/kerx4tfi
9qx8PNXfix/H9FzwoPd78jLf1aXQPdBIziN3nNlwXyMdNvHffey9tEzPaX11
Q0vHW1lotTOmEpuBzuKcOyMd353ZunPTmvvM1XnMa3+efn8Y78rNNOqw0XU3
aX5fCshKD7SS02LfzWq+K+/5tNpz5T5EeV6PZKUHWskJ1Hjn0dT7mv97YHfj
WW3sXhUi7Zom8eOYpvf27QLmu7pEObl+15/KPqJ6LrJ8/Ld/nXVuq0i8ljO2
Dl6WfWf6jceCS5curd67ohvke7XSGVvxwa+eD15882jw8cQLwQN9teu9ROfb
xNaeiu97a84TrnxtzfNU6cyN7h00y6cHq/N8+X186YF/mPX9/vkH+6J/l6Lh
e6uxa3hb3hbPrPRAKzkt9t1Oc8rvg9wLt5WeK1/fjddtKz3QSk7A9fb6s1va
78ix0M7ffFr/8WLXeLU0w4jNborQd5nv6lLoHmg0Z3QesbvPaDCzffeRgdqv
7Xsk2/leeC/ZvD52Wfwec9WfbWVbwnve9lx2a7BxeW/DfW+99yLbvm421lfl
2t2WrgOuc4/4i/ce9f57nJaVHmglp8W+2+58V3qVvM9XpHlunJUeaCUnUGNm
nRK51uvZxx4Mvn/DslkzlHqdt+56UnX6bup7C9Xpu77XrGK+q4ub0/e25KlM
fVfEr2Votn6Rex5uLucEKxK/D7rsj8M/67ninrqz3oV3/6zhY8xZeEtba1XV
e6y017tE6pxDVLbfAa7f1cNi3201p9wDV85pKXLPDUU9sPK9NfdA+i4wo3JM
IefEfX/1BYn7o7rnEWbYd1v6u3XIv2G5D1sn5F5u4bbI/lruX96utevWVvf7
Y2NjVUX4PDS8ezjie5vyzCmvYfGcRdnGLD+vlzPv79vResnxc1RT/Nt/4aqe
jvcR6sW6obyH+OiLO6s/6/gMV9a3kudw1vrM9fplu2sr1HmslmezGW6PvIcZ
/g53ax/k7m/l32kR9hd5ZY3nLMK25fG5m7MI25PXcxrlrHSkNH9HenGrPVfO
qZP7CsV/l7w8n5WcRfn5Z/25HB+HGem7wEkyS0laV3PxntixShvHrZGM+67s
M1vZz+atev1JeI1aOH8rwucVsiaq9HHh/nkhti/DnBvu3FCbswjblfXnlY+z
cnbh+8rraNv7mXodptE6VFNHTp6PW5D7lhVW7P3Hnq9fEay5ZF5r+9Ys+278
/dB2rr2ttz1X3NPW9lTfG+rm/m5G+G9T9rve9xc5Zg1zymux9+3J8fNZOQu0
bVl+HuYc3D7Y8OukR61csaKl4yO5r1B/f//Jx4nz9HzKfY58/8zz3g/JR/ou
4KgcY7x0+4WzZ7x9j9R+XZ01Tum7sb5bQPKzqtuPlEnsgcr4yNlR36347c4r
a/69NLquU96Dk/fVirCGe6HV2adW99utnEOcZd+NbU9b50XXWSu63XsBz+q7
XVLTdwuwv8g7Z03fVWhWD1Sqac5Kp7pu9fU158U1I18rf2dWty1AzmrfLcg2
5UGOE+QjfReIqRxnPHvtV2Ydk9asKRVfx9Nj35VzNuR1thPuflv2yXKOc7gv
DD9P81HIvnNiYqJ6Dl3RhK9VoqjbmGnOykcTObv4fHZ0PrOos078xt/8pe7X
ht04y3OZ5Xxeed0Pz/XKm6z5kvYeb+2KXxdd3We3ui5Chn131j3n2ryX1Kzr
vdtcP0t+Z+V3t9v7AvcYWut+SHKFGUdGR/Tn3HPyeuzwz3xvV9ai94acnK5W
76Erx1ZyXCSP6ztbo5wan8uanPRdoL7Yuiaz1lDO+PrdxPuSdAnrM+tSzTlz
rOl7W/Lkvofre1tSq7Pu7qzrJcTMPibz+65quf9uqNJTH1ryhZPfa8Gi9r9n
Vn23zlx22UvH28p2fOtlmfRdH6ys42Qlp7uOk5Wc7npV0gdbvUZX5gDyeL4z
1SPrF4THCJp7oLteVVb3Uwa0ib+3vu6Q048yXp/Z9/2IWJ9ZF7cHWsnpe1ta
cfC7X63tVTfum/U17993eUddKZG2vlvnXsVt9cKs+m6de/i2e+11+DtQpNeK
tKz0QCs5ra7PLP9f5rOt7O9k3c6OzwPKWbUHGuu7mnMCHYkdF9b02Tozmrnb
D6V73Dp91/d79sx3dXFz+t6WPJW178bv8zrr+s6Z80vavV6zocq+S47junUu
s3x8c7LFtZpacOLJG2b363bOH67bd9uYrcdeNzqZz8evqynTddxWeqCVnOb6
bqULSs+V9aXS9ly5567c79J3hjSs9EDmu0AKTi+d1UnrHBul7bvxY91m9+Ds
Bua7ulRzcj5zYck6VO4MMH6taXhuSeazXW0q++H4rFy0vBbyzGNlMd99e/3Z
2cy2s1w/yxMLPZC+q4vklPWNWrlGV+6hW7aficW+qzkn0JFGfbfi9XXfqD0W
6Xsk1bHIrOOhVtYQzQnzXV04n7ngpo6cuuZ0RnQN/8z5sLnMdrWpc55N2v1w
PbPWmWq1X1Y6avX+UUnnBbWiXt+tvFaUpe9a6YFWclrou3JNayv3F5LZr6xf
5Xu722GlBzLfBVJw+m7dY8927jlR5ximCDMc5ru6uDl9b0ueStt3P5/9vtfX
drxZ/fNwXpnlmsxq1Vn7r5P9afzc6JbPvYldu9vR9baVLh9f9yrX66AzFvXA
mfVffW9P7jnpu6Um95Vo5f5CshZVmY8hLPZdzTmBTrjHo3WvB4vPFtKsSxJb
56oI1+4K5ru6MN8tvni3qnaZmf5WtvNWfcl8Paf4vaIq+/RWzo2OX6tS8zxW
9v277tqc/t5MnayJWABWeqCVnFr7rnQgOR85bc+V+a+GYyQrPZD5LtCEe6zR
oMfGj7cu3lvnviKu+FomddZl9YH5ri5uTt/bkqcy9914t+r5+hXBmktOzvOS
7scLR73zfTvdn9Y5Pzp1x6xzLXG0pkPlvz39nZ6W1mqWa7wXx2bFRXhvtBUW
eiB9t5ykB123+vrUPVc6saa+ZLHvas4JhD47OhY8+9iDwf1DjwePvvabprOT
9+69ON05ZLH34OX9/EbnNFePedqcHeSJ+a4upe6BVnLWmd8lnkuCVD+/LK4N
iV/Dm3rd/cr2xLvyvW+cqP63cK2Hpu+HOmbNikt07a6w0gOt5NTUd4d3D6de
d1nOcS7rNbqNWOmBzHdhyvTkrOug5L3yH/6v39f9+vf3/HPq/irixyWJxzSx
2e6Xfzzh/2czg/muLm5O39uSp1L33TrzySKs1V4Ws9a5z+retPG5e9pzy+Pn
Qp9+cp3ow3dd3tbsOT4rLtO5zILrd3XR0Hfl2EbuGZR2ptu3vK+6hpXv7c6D
xb6rOSdQVafvhhbe/bPo3pAyA/7RP57aF/71zU+lfj+95rzmBYuCdYdqu5Sc
m1YzBy7Iecwh5ru6lLoHGsrpnkcirv253n97WZu1Pn5W69yH5x632KN/u/PK
xONmuQdvS2ttx86rTrUWYsFY6YFWcpa9727afE/qnivHQ9u2bC1lzrSs9EDm
u7AmvhZqI3IdXdLst5HD99euY/83N2yu/hv7/g3LZnXsop2XxnxXFzen723J
U9n7rrtmVRHuS1Yada6zXbwn/bnCTcXWfU5zHnJ83ux23ZZn9m18/yKy0APp
u8U2NjaWej0qOXdZem713vUVZcrZKot9V3NOIDI9Gfz6pz8M/unvF9ff1y1Y
FPw/N26qXtvbyfeRGfHu279ds85I+PhX3rg12PduMc+NYb6rS9l7oJWckz+6
Ottzca2QtaEeuT8Y3D5YvY+IrMuQ9Xng7vw41TnNlQ7+QF9vzT7/n3+wr633
Nt1zmcs42xVWeqCVnGXru/K83DYwkHrOIWtXTX38wcmc0neVzwOt9EDmu7BM
9oPybyAk+7c8vo/sO+Xxy3D9B/NdXaKclddt39uSp1L33Uo/urv3tFJem2lC
bIZ80+sp9xeVLt7Ra8o7j9a8X5r6+xYM1+/qUqa+K/3NfQ+/kfi6y/RdXazk
BJAO811dSt0DjeSMrrG4Q+8xVek5a1D19D2S//eLrWGWem3oArLSA63kLEPf
leeiv78/9Ux3w50bZh0HRDkrnZe+W37MdwG4mO/q4ub0vS15Km3fnVmrveV1
jNB14TnnmV8jXIe77qH066Kt89AqCz2QvlsMsk1pZ7qyRvPExERyTua7aljJ
CSAd5ru6lLYHWsg5c74q1+yWh3tP3tzOL3bWqNLwPoiVHmglZ1H7bisz3TT3
0mW+qwvzXQAu5ru6RDm5frdYPnru5H3JFiwKNv7mL/63B+lMTwbPXvuVaB2q
+P3mOuZcs6uh6wqu39WliH1X1l5OO9OVe+lK92klp+Z+ZLHvas4JIB3mu7qU
rgdqyumu01vpRjftHT/552HXPZ377JaSrAkdrptceV7veu23mTzu9BuPBZeE
XXdNinWgS8JKD7SSs0h9V37ma9etTT3TbeV9X/d8Zt8582SlBzLfBeBivquL
m9P3tuSpkH135trcGn/3X6L53WVPTvjfRrTt3UdO3ePkst2vdfRYv3/m1DH7
iif/3Xu2rFnogfTd7hofP5z6frorV6xINdNNyqm5H1nsu5pzAkiH+a4uheyB
VnLW67szmOvqMP3e/mD1OX/V2ZpS05PB09/pqd5ft6j3Ze+ElR5oJWcR+u62
LVur89pmPfes3t62r+UpQs5usNIDme8CcDHf1SXKyfW73ffpwei85ZDWTmOd
5n1IFj8brt/Vw2cPlM4iayrnNdMtSs5u/0yt9V3NOQGkw3xXl0L2QEs5p44E
B/Y/EQzvHg5efDPfe9gARWSlB1rJ6asHyveTeW2a63Rlf5tlTs3zQCs9kPku
ABfzXV3cnL63JU+F7bsATPRA+m5+P9e09xmS2W8nM12fOX2x2Hc15wSQDvNd
Xaz0QCs5gbKx0gOt5OxmD0y7JpXMdHcMDeWWU/M80EoPZL4LwMV8V5coJ9fv
AvCA63d16Vbf3bVrZ6qZ7oVLlgQTExOlzembxb6rOSeAdJjv6mKlB1rJCZSN
lR5oJWfePVB+jrLWVJque9vAQFdyap4HWumBzHcBuJjv6uLm9L0teaLvAsVl
oQfSdzs3NjZW8557o/sM5d1ZmO/qYiUngHSY7+pipQdayQmUjZUeaCVnXj1Q
rr9Ne58h2YZu5tQ8D7TSA5nvAnAx39Ulysn1uwA84PpdXbLuu2nPX85jTapu
5iwqi31Xc04A6TDf1cVKD7SSEygbKz3QSs4se6CsM5Vm/WU5Lnn/0Ji3nJrn
gVZ6IPNdAC7mu7q4OX1vS56s9N3w+ZSPvreFnJ2R/Y6FnMJCD6Tvtvg7sWdP
dWbbrOuuumaVl9do5ru6WMkJIB3mu7pY6YGmclaOE03kVP58WulH5NQlix4o
6yqnOX9Z7klUhJya54FWeiDzXQAu5ru6RDm5flcFcupioR9x/a4unfRd6RyX
Ll3atOvKOc7dPn85y5xlYrHvas4JIB3mu7pY6w3k1MFMTpnVK5/XW+mBVnK2
2wPT3mtI1q4qwmsy811dmO8CcDHf1cXN6Xtb8mSmH5FTjWo/mum6I6Mj3ren
G8+n5pz03WTDu4dTXas7uH3Qe75OcpaRxb6rOSeAdJjv6mKhN5BTH1M5me+q
YCVnqz0wzbW68j67zH99Z0vKqXkeaKUHMt8F4GK+q0uUk+t3VSCnHuaua7WS
k74bfV2aa3Xla6SL+M7Vbs6ys9h3NecEkA7zXV0s9AZy6mMhp9uPrOQcGR3x
vj3k7EyaHijHDmnuqyuzX9950uTUPA+00gOZ7wJwMd/Vxc3pe1vyZKE3kFMf
C3NP9/nUnJO+e5J0iWbX6vq+11AWObWw2Hc15wSQDvNdXUz1BnKqYSon1++q
YCVnox4oHbbptbq9vYW7VrdZTs3zQCs9kPkuABfzXV2inFy/qwI59TB3XauV
nEb7bpp1qS5csqSQ1+q2klMbi31Xc04A6TDf1cVCbyCnPqZyMt9VwUrOeA+U
3H3L+5p23etWX+9929vNqXkeaKUHMt8F4GK+q4ub0/e25MlUPyKnClbmnu7z
qTmnxb4rv7sysy3TfXXbycl8t/ys5ASQDvNdXSz0BnLqYyEn6zPrYiVn2AOl
w8q1uM3WpTqwv5y/28x3dWG+C8DFfFeXKCfX76pATl0szHetzLEt9d0Nd25o
ugazHEuMjx/2vr2d5GS+q4eVnADSYb6ri6neQE41TOXk+l0VrORMswZzmdal
SsJ8VxfmuwBczHd1cXP63pY8mepH5FTBytzTfT4157TQd+Uc5mZdd+WKFSpe
U5nv6mIlJ4B0mO/qYqE3kFMfUzmZ76qgPefadWubdl25J5Hv7cwK811dmO8C
cDHf1SXKyfW7KpBTDyvzXXM5FfbdVdesUrkGcyPMd3WxkhNAOsx3dbHQG8ip
j4WcrM+si8acae+tW9Y1mBthvqsL810ALua7urg5fW9Lniz0BnLqY2Hu6T6f
mnNq67vS9y5durTp/YbGxsa8b2te+Znv6mElJ4B0mO/qYqo3kFMNUzm5flcF
TTmlG5x/3rlNu66s1ex7W/PCfFcX5rsAXMx3dYlycv2uCuTUw9x1rVZylrzv
Si9w3/eue2/d3t5gx9CQ6rkn811drOQEkA7zXV0s9AZy6mMqJ/NdFTTknJiY
aNp15d66w7uHq7+3mnsg811dmO8CcDHf1cXN6Xtb8mSqH5FTBStzT/f51Jyz
7H13fPxwdW7bqOvK2lXV3jDzHo2Vvqs5p8W+qzkngHSY7+pioTeQUx8LOVmf
WZcy55Q1p+R63EZd9/qrLj+V01jf1TwPtNIDme8CcLnzXdn3SeeV/YTQ8rl8
HBk91XfdPy/KNmb1eXjsRU4dn7v9qAjbk8fn8tF9PouyXXk+n5K1CNvTrefT
9zblmTPsgWXZD8nz0qzryv13w78n5zxb+L11c5bp+Wz187L+3rb6uft8au71
ANJx57uyHoV7fK3Jps33BGvXra3yvS152nDnBnIqYiVnmFHyhrMkjWpyFmB7
8s4p+13Nz2f473Pblq3etyXt9jbrunIOc/U5c563suXs9Pkc3D7ofVu6kVPz
MV+YUz7SdwG4891o36fw+CTsu9qPM630Iys5w4xWclr596k9Z03fLcD25J2z
DD1Qfuca9VyxcsWKuq//ZcqZxfOpve+GOavHfAqP90L0XQAhd74r+z3ZL2gg
1ye5/1/uGxiq99/LzM0i62i6ObWKP5+auM+n1pz1/n3KsZe2nHEan8/wuaz3
eyv7I9/bl0fWsuWUf1vNuu5tAwOzsoZ5w5yajhHc59NSTrmWNdzfhl1Qg3rH
dNXnkr4L4HPWZ9Ymymnl/rtWcu7Vu76RuZzK12e2sg51WXJKv2l2DrN0n4Y5
Z85v1rxe1bHjJ+zknPm91dwD5TrecHatOSeAdFifWRdTvYGcaljI6fYjEzn3
lm/dYm0503RdmYE1egwr9+lhfWZdovcvlOcEkA7zXV2inMw9VSCnLmWYB3aq
DD3QQk45xm/WdeU87GaPY7Hvas5ppe8y3wXgMjXfVT5XEaZ6AznVMJVT+X6o
6D3QQs40c92074la6YFuTs39KOq7Fs5nNvB8AkiH+a4ubk7f25InU/2InCqU
5XrPzHIWsAdayCnr9mTVdYXFvqs5p5UeaCUngHRMzXcN9F0LvYGc+pjKyXxX
hSLmzLrrCis90EpOKz3QSk4A6TDf1SXKyfW7KpBTD+a7uhQt5/j44eCs3t5M
u66w0gPNrVfF+cwADDE131U+VxEWegM59TGVU/l+qGg90ELOiYmJpl03zdpU
9Vjsu5pzWumBVnICSIf5ri5uTt/bkidT/YicKjDf1aUoOeV1233fup17DjVi
pQdayWmlB1rJCSAdU/NdA33XQm8gpz4Wcrr9yErOkdER79ujOacc059/3rkN
u+6OoaGOvoeVHmjufGblPdBKTgDpMN/VJcrJ9bsqkFMX5rt6+M4p/ezCJUsa
dt1tW7Zm8n2s9V3NOa30QCs5AaRjar6r/Lo5Yao3kFMNUzmV74d890ALOeV7
X7p0acOuu+HODZl8Lys9kPmuLlZyAkiH+a4ubk7f25InU/2InCpw/a4uPnP2
Le9r2HVvGxjI7HtZ7Luac1rpgVZyAkjH1HzXQN+10BvIqY+pnMx3VfCVc9U1
qxp23f7+/ky/n5UeyHxXFys5AaTDfFeXKCfX76pATj2Y7+riI+fadWsbdt2V
K1Zk/j0t9l3NOa30QCs5AaRjar6rfK4iLPQGcupjISfrM+vS7ZyD2wcbdl25
njeP72ulBzLf1cVKTgDpMN/Vxc3pe1vyZKE3kFMf5rt6dDOn/M406rqyTnNe
r2sW+67mnFZ6oJWcANIxNd810HdN9QZyqmEqp/LzTOi72ZJj9UZdV+6/m+dr
mpUeyHxXFys5AaTDfFeXKCfX76pATj24fleXbuQcHz8cnHnmmYld96ze3upx
fZ45LfZdzTmt9EArOQGkY2q+q3yuIiz0BnLqYyqn8v0QfTcbcrzuvh8dJz14
YmIi95xWeiDzXV2s5ASQDvNdXdycvrclT6b6ETlVYL6rS5455bHlmtxGXbdb
x/AW+67mnFZ6oJWcANIxNd810Hct9AZy6mMhJ+sz65Jnzr7lfQ2v2T2wv3u/
P1Z6IPNdXazkBJAO811dopxcv6sCOXVhvqtHXjn7+/sbdt0dQ0NdzWmx72rO
aaUHWskJIB1T813l180JU72BnGqYyql8P0Tfbd+2LVsbdt3bBga6ntNKD2S+
q4uVnADSYb6ri5vT97bkyVQ/IqcKXL+rS9Y55TEadd2VK1Z4yWmx72rOaaUH
WskJIB1T810DfddCbyCnPqZyMt9VIcucze47JGtX+cpppQcy39XFSk4A6TDf
1SXKyfW7KpBTD+a7umSVU3qW+75znPy3Y8dPeMtpse9qzmmlB1rJCSAdU/Nd
5XMVYaE3kFMfCzlZn1mXLHLKY1y6dGnD+w75fl220gOZ7+piJSeAdJjv6uLm
9L0tebLQG8ipD/NdPbLI2Wwt5iL0Lot9V3NOKz3QSk4A6Zia7xrou6Z6AznV
MJVT+Xkm9N105L5CRbrvUBIrPZD5ri5WcgJIh/muLlFOrt9VgZx6cP2uLp3k
lN7YqOvK3Nd3vpDFvqs5p5UeaCUngHRMzXeVz1WEhd5ATn1M5VS+H6LvNjYx
MdFwLWa5ntd3NpeVHsh8VxcrOQGkw3xXFzen723Jk6l+RE4VmO/q0k7ONGsx
y9f4zhbfZmt9V3NOKz3QSk4A6Zia7xrouxZ6Azn1sZCT9Zl1aSdn3/K+hmsx
y+zXd644Kz2Q+a4uVnICSIf5ri5RTq7fVYGcujDf1aPVnGvXrW14zW5Ru6TF
vqs5p5UeaCUngHRMzXeVXzcnTPUGcqphKqfy/RB9dzb574267q67NnvPk8RK
D2S+q4uVnADSYb6ri5vT97bkyVQ/IqcKXL+rS9qc8rraaH2q61Zf7z1LIxb7
ruacVnqglZwA0jE13zXQdy30BnLqYyon810V0uSUrzn/vHMbrsVc9NcjKz2Q
+a4uVnICSIf5ri5RTq7fVYGcejDf1SVNzlXXrErsumf19pbiNddi39Wc00oP
tJITQDqm5rvK5yrCQm8gpz4WcrI+sy7Ncg5uH2x4zW5ZjsGt9EDmu7pYyQkg
Hea7urg5fW9Lniz0BnLqw3xXj0Y55fi6UdeVLux7+9Oy2Hc157TSA63kBJCO
qfmugb5rqjeQUw1TOZWfZ2K978pxtpyrnNR1V65Y4X3bW2GlBzLf1cVKTgDp
MN/VJcrJ9bsqkFMPrt/VpV5O+TNZgyqp68raVdKrfG97Kyz2Xc05rfRAKzkB
pGNqvqt8riIs9AZy6mMqp/L9kOW+e9vAQGLXlXsSTUxMeN/uVlnpgcx3dbGS
E2jXH8f2BcO7h4OHnz3c+t+fngw++NXz0f5SjmtefPNocGzaf64kzHd1cXP6
3pY8mepH5FSB+a4ubk7pgfKx0TW7ZT3nxmLf1ZzTSg+0khNoyzuPRq9Nc3s3
pe+plZ77ykM3B4vnJ7zWLVgU/MMDzxSy95qa7xrouxZ6Azn1sZCT9Zl1cXPK
e+Qyv03qumvXrfW+ve2y0gOZ7+piJSfQsqkjwd29p0WvTz0XPJiun8b+3hlf
ujy478Cvq//Wjr72ZM1/m7PwluDlqQJkdTDf1SXKWdJZQloWegM59WG+q4c7
r5frcpO6rlzP63tbO2Gx72rOaaUHWsmJfJRtnYVWvL3+oprXqFR9d3oyGD5n
XuM+W+nDDy35wqk+PG9NoTqvqfmu8uvmhKneQE41TOVUvh+y1nf7lvcldl1Z
p1mOu31vayes9EDmu7pYyYlsHb7r8ppzc296Xdl8bOzeWa9Tafrue/deXPN3
1h2q/3OZfm9/zbnOPTfu8595BvNdXdycvrclT6b6ETlV4PpdXSSnnKfc6Jpd
Db3JYt/VnNNKD7SSExlqswuWxqcHg41z5ree8aPnajts3yMNv8/B73615vGv
fq0Ys3JT810DfddCbyCnPqZyMt9VQV4vG12zu2nzPd63MQtWeiDzXV2s5ESG
6vXdJt2uNKYng2ev/crJTFfcE6y/6Iup+278/Oem/TX2cyzKz5D5ri5RTq7f
VYGcejDf1aXRfXbLfs2uy2Lf1ZzTSg+0khMZqtN3L9571P92ZeDEkzdEa0zt
+fPnwdPf6XH67pbkvjt1pHYmvGBRMHy8yfeLz5HT/J0uMDXfVT5XERZ6Azn1
sZCT9Zn12HDnBtXX7Lqs9EDmu7pYyYkMOffoqfbATb/s/DEr3e+O3ksTr3ft
io+eCy6ZOR952UvHq7Pep741N918N/YegNy76K1m36/y+O66VeLLP57w/vwy
39XFzel7W/JkoTeQUx/mu+UnXajRNbvaOqHFvqs5p5UeaCUnsnXkjlPXqGSy
VlWl70rX9HYNq7OucrR21Ky+mzzfjV+L27Py8VTft601oHNmar5roO+a6g3k
VMNUTuXnmWjuu8eOn6jOb5O6bpnvs5vESg9kvquLlZzIWKULDi2fG/XAprPM
ZmZmxr767vv3nVxvuubeQGnnu7Gvq853tx9K9X0/G7215u/JedTP/MHvc8t8
V5coJ9fvqkBOPbh+t/wa3XvowiVLvG9fHiz2Xc05rfRAKzmRg0rPe2Xj/1vd
r8t9Zve9e6K9x5k6Euz7dq+/vuucn10zq0473/30YHDtvNr1nFOf4x07D7oI
fdfUfFf5XEVY6A3k1MdUTuX7Ia19d8fQUGLXlXWatb5+WumBzHd1sZIT2ZF7
x666ZlVw28BA8C+3r6nZx5+97Kqgv7+/+t+afVzzL7cGAzf8t9bWNM6as87U
rI6adr5bp++mzlGn7/pes4r5ri5uTt/bkidT/YicKjDfLa+JiYmG1+zK+lW+
tzEvFvuu5pxWeqCVnMhQbL0qWVe40X6/Fd3uu+F1t3XXl/LQd7P4GcixRSfc
vjs+fri6z+/k8bz/vib8jEZGT813i7qdmeas0JpTuP3ISk7f25IXc+sWW5nv
Kun1kkfOVU46jpFznA/s1/t8VnvgzO+s1h4oz7GV+a5cgx4+n5pzyvwm3A/R
d5FKnetVy9h3o2tnK339/qPTTXMm9t1K/188v80cGffdbVu25vK8tEuOCdzj
1sKo7O82bb6nupaIcP9c1ccKmTPMylmEbcv4Y5hTPnr//crpd1Y+hs9l9fl0
nmffP/+sP4bPpdrnc0b4XMr+yPe2ZM75/azJWZDfsXY/NrpmV9aukvPXap7P
gmx3lq8r4fMpxxzef89yFOYc3D5o4vmUc/R9/8wz5+QMX0/ou0grvE9tafuu
M5NNvAdQ2r776uz77tF3nb7rHpMXSN2+q1DYGSzktPJ8WsgZZrTSd63krOm7
JdToPrviutXXm+iB4X7ISs6avqtQTd8t8b/PNDnlI30XqdU5h1fWOTr/vHOr
58M21dsb/OdvfrP69V3vu5Ue+/R3ek522L5Hku//k7bvOvft9d13ZZ8s62TE
HzP+Z83+v/r5boW8ToddcGT05DWu4UdNwpyyn9ecU46ja3Lu2aMyZ/g7q70f
WctpoTdEOcv6b7Oy3Y1eK2VdkzCn9n7k5izlc5mC5Apzqpx71nk+LeSU55W+
i9QqXfCFq052xr+++an27hlbeQz5+NnRseChJV/oWt+d/NHV1e8la0Pt+XPj
7fNx/W4m9zPugJX1maN94B4j17XuMXA/InlfWntO571339vSjZwjoyPetyX3
nHt0XNeaRMt6VStXrEjsupcuXXoy58zvrdbrWqPn08DvbXSdcoXm61rddZzU
55x5Pum7aEV4/WsW/Sx8rNz7rnOtbZrv5WN9Zt/3I2J9Zl2inNp7oPMeru9t
ISc509C2jlPTnCXuu7t27UzsujLzlWNpDTnTsLBeVZRz5vnUnDPqu8p7IOsz
o22Vnifd8YJf/K7zx/rouerrxrKXjue3vbF57df6B6rX2gi5R1L88/i9kmRd
K/drrrxxa/Dyh/9Rc0+j0Nzth9JtU52+23Dm3AVW5rsjo9ynRxNy6hLN67Xn
NDCvL3sPlNfBRucxh2sxlz1nO8+n5h5oZX1mKz3QSk7k48MP32rvXOa4Smfc
ddfmfO89m/G60lE3rfO4aftutEZ0+Jjz1gQvT/l9Tpnv6hLlZL6rAjn1YL5b
DnKuctJxgLz/rSVnWlbmnlZyWumBVnKi4Lo03x0+Z1526zEtWBT189fXfaPm
vzVcB8vx9vqza//eyse9PxcW57ua+66F3kBOfUzlVD7HLnMPbHTPA1lv033t
KHPOVljpgcx3dbGSE8X2/n2Xd+X6XVkbS67DSeMn990frD7nr0510a9fEdw/
9Hj03+Xzt8LHjp2XPGfhLaf+W5I6c+Fc+35KzHd1cXP63pY8mepH5FSB+W6x
jY8fbvie99jYmIqcrbLYdzXn5PpdIJ2pjz8IJiZerP5bkR4o65mnIV/78Jb/
Eaz6v071q67dfzeNOuszJ35t/BpeZ/abKLbOVRGu3RWm5rvK5yrCQm8gpz4W
crr9yErOkdER79uTltxPL6nrytxXS85WWemBzHd1sZITOah0vB/9Y/J1Le0o
et9tdI5yOKMOXbz3aOPHf7X2vvU9N+7zn/lz5rvaRDm5flcFcurCfLeY5D6d
Sccp0oO15GyHxb6rOaeVHmglJzL20XOz7sFjve/G57Xy9Y3OaX76Oz018+D7
j077z/y5sfmugb5rqjeQUw1TOZWfZ1K2HijnKScdo8g6zRMTEypytstKD2S+
q4uVnMhQxuscq+m7n89ebzlxxhub7X75xxP+885gvquLm9P3tuTJVD8ipwpc
v1s8sq2yDlXSMcrg9kEVOTthse9qzmmlB1rJiQy982guXVdD3xU15zUvWBSs
O1Tbpabf2187By7IecwhU/Nd5XMVYaE3kFMfUzmV74fK1APXrlubeHwi9yXS
krMTVnog811drOREhmJrEYu/uWFz8OKbR6v7B/ka2e+HM7Oaj5UO6f5/Wevq
1z/9YdT/itZ33fsXze3dlPpew4fvXzHr5yP/xr5/w7KaP19498+yuX9xhpjv
6hLl5PpdFcipB/PdYpFj4EbnMTd7PSxLzk5Z7Luac1rpgVZyIkOxvnvZkxMd
P2Z4HnCh+m7FwUfuj9aT3vrYgdYyHR0Ldt/+7WDx/Nhr54JFwZU3bg32vXvC
e756TM13DfRdC72BnPpYyMn6zMUh2+i+9sXJMYCGnFmw0gOZ7+piJScy5PTd
ngu2ZDOf/Oi56uMV4f6zeZA5tvxbO3a8mB3XxXxXFzen723Jk4XeQE59mO8W
Q39/f2LX7VvepyZnFiz2Xc05rfRAKzmRoTz67vRk8P6hseDNyWKsUWyZqfmu
8uvmhKneQE41TOVUvh8qeg9sdh6zHCdryJkVKz2Q+a4uVnIiQ1NHouttM+u7
KAzmu7pEObl+VwVy6sH1u/41O495ePewipxZsth3Nee00gOt5ES23l5/UXQt
aib3ja106Dt6Ly3MPWgtMzXfNdB3LfQGcupjKifzXW9uGxhI7LrXX3W5mpxZ
stIDme/qYiUnMlbpp3f3nlZ9TThj3prgrQ4fb/qNxwq5XpVFzHd1cXP63pY8
mepH5FSB+a5fWZ3HXPScWbPYdzXntNIDreREDj49GHXenpWPt39e8/Rk8NLt
F9J3C8LUfFf5XEVY6A3k1MdCTtZn9rtN5593bmLfbef6jyLmzIOVHsh8Vxcr
OdGYrB/87GMPBrt27axeryIfG30e/v/dt37z1NpVV9zT9O/FPx9cf3Ow7Gvz
o8eg7/rHfFeXKCfX76pATl2Y7/qxdt3ajtdjLkPOPFjsu5pzWumBVnKiiU8P
BpfE7xPrAX3XP1PzXQN911RvIKcapnIqP8+kaD1wbGws0/OYi5ozL1Z6IPNd
XazkRBPTk8ELV/XQd8F8Vxk3p+9tyZOpfkROFbh+149G5zHLuWdacubFYt/V
nNNKD7SSE82dePIG+i5szXeVz1WEhd5ATn1M5VS+HypSD9xw54bMz2MuYs48
WemBzHd1sZITzU2/t9/7Oc30Xf+Y7+oS5eT6XRXIqQfz3e4aHz/c8DzmTl/v
ipIzbxb7ruacVnqglZxIYXoyGD5nXnXf/9c3PxW8OTld/bOwC8jH+OduT6h+
Hvv6pL8nXyf/X9bJOvrak8H6i75I3y0IU/NdA33XQm8gpz4WcrI+c3dduGRJ
Yt/dMTSkJmferPRA5ru6WMmJdN679+Lg9AWLguHjXf7er26g7xYE811d3Jy+
tyVPFnoDOfVhvtsd27ZsTey6ly5dqiZnN1jsu5pzWumBVnIipbF7/fTOj54L
Fs8/PVj20nH/PwPjTM13lV83J0z1BnKqYSqn8v2Q7x4or2NyvnJS383qdc53
zm6x0gOZ7+piJSeae/eRgeCff7AvePHNo16+v+xbfP8MwHxXmygn1++qQE49
uH63O2R+m9R1B7cPqsnZLRb7ruacVnqglZxowrl2V/R8/Yrg9qGngpc//A//
24auMjXfNdB3LfQGcupjKifz3dwM7x5O7LpyPa+WnN1kpQcy39XFSk40Uem7
T31rbt3XhJ6Fi+m+hjDf1cXN6Xtb8mSqH5FTBea7+ZLj27N6exP7rqzXrCFn
t1nsu5pzWumBVnKiidh8N4nMfX2e84z8mZrvKp+rCAu9gZz6WMjJ+sz5WnXN
qsRjmbXr1qrJ2W1WeiDzXV2s5EQKlc7765/+MLjj6r9Nda9c6b6rNg0x91WG
+a4uUU6u31WBnLow382HfJ+kY5fzzzs3l30+fVcXKzmt9EArOdGiSvcdf34v
3dcgU/NdA33XVG8gpxqmcio/z6TbPVC+n/s6FpfXrI6+qwvzXV2s5EQHWp37
Llxc7b6c81xOzHd1cXP63pY8mepH5FSB63fzcdvAQOLxyXWrr1eT0xeLfVdz
Tis90EpOZGPq4w+q3ff7qy9I1X1PX7AouPbOn9B9S8TUfFf5XEVY6A3k1MdU
TuX7oW72wLGxscTjEVm7So5hNOT0yUoPZL6ri5WcyMHMOc/fv2FZ6u7L3Lf4
mO/qEuXk+l0VyKkH893syT2Gko5B8t4H0nd1sZLTSg+0khP5kvdM2+2+x6b9
bz9OMTXfNdB3LfQGcupjISfrM2dr25aticccfcv71OT0zUoPZL6ri5Wc6CLm
vqXGfFcXN6fvbcmThd5ATn2Y72ZDXqvOPPPMuscY8ufdeC2j7+piJaeVHmgl
Jzxpsfv29D3CvNczU/Nd5dfNCVO9gZxqmMqpfD/UjR4o89uk44odQ0NqchaB
lR7IfFcXKzlRACm6b88FD9J3PWO+q0uUk+t3VSCnHly/m93vStIxhVzPqyVn
UVjsu5pzWumBVnKiWOR1oV73pe/6Z2q+a6DvWugN5NTHVE7mux09tvsebdz4
+GEVOYvESg9kvquLlZwosOnJ4OhrT1a77xmrd9N3PWO+q4ub0/e25MlUPyKn
Csx3O9ff35/YdeU+vFpyFonFvqs5p5UeaCUngHRMzXeVz1WEhd5ATn0s5GR9
5s40uteuvI51+31M+q4uzHd1sZITrfvs6FhwYP8Twa5dO4PB7YPB/UOPB0+/
wf2DtGO+q0uUk+t3VSCnLsx329foXrs+fp70XV2s5LTSA63kxIzpyeD9Q2PV
90WT7v8z/d7+YP1FX0x8HTnjS5cH23767/6zIBem5rsG+q6p3kBONUzlVH6e
SR49UN6DTzpGuf6qy9XkLCIrPZD5ri5WcuLz4N1HBure+/amveOnvm7s3nT3
zJW1pW7+hfdMyB7zXV3cnL63JU+m+hE5VeD63fYU4V673chZVBb7ruacVnqg
lZzW/XbnlY2766ZfBp9PHQmunTe/7n8/e9lVwcbBHwSD628OVp/zV6f+3o37
vGdDtkzNd5XPVYSF3kBOfUzlVL4fyroHNrrXrsx9teQsKis9kPmuLlZyWibn
Jy+en25mO+vc5dVDwcsf/sesx/zo1QeCS2Ye8+rXPvGeEdlhvqtLlJPrd1Ug
px7Md1snf78I99rNO2eRWey7mnNa6YFWcloWn+32XHZrdd0p2TdPffxB8NID
/1B/5ttsdvvpweo8mHvm6mJqvmug71roDeTUx0JO1mdu/XGKcq/dPHMWnZUe
yHxXFys5LTu+9bJTHbbvkbrdVOa17gz4jHlrgpenmj/2iSdvqH79Ta/r7QvW
MN/Vxc3pe1vyZKE3kFMf5rvprV23tjD32s0zZ9FZ7Luac1rpgVZymjU9Gez7
dm+0NtX9R6eTv/bVDbXX86Z5/JkZ79zth/xnRSZMzXeVXzcnTPUGcqphKqfy
/VAWPVBmt0ld96ze3kK8Z0nf1YX5ri5WcloWznflPkLP/KHx1x787lerX3vx
3vr3Kprlo+eq1/HSd/VgvqtLlJPrd1Ugpx5cv5vepUuXJvbdovyO0Hd1sZLT
Sg+0ktOy8PrdNH03vB9R2vOTPxu9lXWalTE13zXQdy30BnLqYyon892Gdu3a
mdh1Za1m3/myylkWVnog811drOQ07Z1Ho9eGa3/epL9MTwaP9pwWLHvpePPH
nToS3N172sm+e8EW1qxSgvmuLm5O39uSJ1P9iJwqMN9tTo5R5Xzlot1rN+uc
ZWKx72rOaaUHWslpXXie8pyFt6RahyqNt9effep6X9ZoVsPUfFf5XEVY6A3k
1MdCTtZnbu661dcnznY3bb7He7ascpaJlR7IfFcXKznNi81i38rg8TbOmd/6
+lYoPOa7ukQ5uX5XBXLqwnw3mRyTJnXd8887t3D7bfquLlZyWumBVnLi82pH
fey7S6JreX/4v37f/mN9erC6TlX42pPq/GeUgqn5roG+a6o3kFMNUzmVn2fS
bg+UTpvUd4s4b6Pv6sJ8VxcrOXHKxxMvBA/09XZ2DrJzn6OelY9zLrMizHd1
cXP63pY8mepH5FSB63eTbduyNbHrrrpmlfdMWeUsI4t9V3NOKz3QSk4U0we/
ej7Y9+4J79uBU9z57vDu4er7mrJvkI8aPhfy2iVrfu4YGqoqyrZl/XmYc3D7
YDWn/H/f25TH5/IxfC4lq/vnRdnGLD6X589CTvkY5hS+tyWv39kwZ/jvswjb
lVdWyShkf9Ts66X/y1pUSWtUyX/3nSn+eSh8Pt2cRdi+vPZDaZ7PMn4uGd3n
U46FfG9THp/Hn0+Nx3zucyoZ6btohcz9Op79TR0Jrp03P9260egad74b7hvc
c+60fC5rnaxdt7Yq+u8F2bYsP99w54banAXYpkw/n/n/s3KGX1OEbcwwa5ix
mtP9nS3C9mXwPIYfE3MWZXszyhpmlN9f79uV4+dhTtnvzvqdjf1sLlyyJHG2
K+tXFep3Pvb/w5wyn07MWPbPG+VU9nmYUzpvUbYp95waf2ed/ZB8pO8ilfDa
3QWLguHjnT3W9BuPRa9j6w7pPae0TNz5brSPV2hW31VKjqPDLuh7WzIVey2r
2+u1cI4/anqg7+3K+nl0/qxuDyy7OllV5qyjpu82+NnI1yR1XXlt8p2j0XPp
5ox6oFKzeqBS1nLWzDgUou+iJZW+K3NZWfPqmT90/nhvr7/o5Bpa89Zkdq8k
tM+d746NjVWveRByLYt8PHb8ROn/vxgZPXVdq/vnRdrOrHPKORnhn8ezhp+X
9f/Xez6Lsm1Z/X/5XPKFWYuwTVn8//jvrHxeL6c24fMZZk16zuM/ozL+fzdn
0tcI9/3WemtUTX38QfXr5aP7GL73s/L/Zf8a/s6Gz2ej3/Uy/v/48ynniNb7
vS7Ctnb6nLrPZ5hT27/NMGf4fMq/sfjzWTZpctJ3kUrGfffzsXuj17O52w/5
z2cc6zPr4vYG39uSd86Q723JNaczV/K9LeTMIKeB31t3HacD+5Nzyow7qeve
NjDgPUczcnzt9nrf29ON51PzOk7u86k5p/u+m+YeaCUnMuT03T1/7vCxpieD
l26/kPv4FgjrM+tiJaeF3kBOXaysz+w+n0k55bUmqeue1dtbin2XlfWZTfXd
mffdZO7pe3vy4s7rNffAas6Z51NzTrSh0kXddc3Cz8f2bo+u3/2fT70cre/W
ykd5nGcfezBYf9EXa17XOrpHEjJhar47s+/zvS15stAbyKmPmZyyD1Led9P0
wEuXLk3su7JmrO8MWeXUwMrc00pOU33XOW/b9/agQGbmuEmvQXlgvusf811d
3Jy+tyVPZvoROdVw+5GVnCOjI7Of60rfTzomkB7se/uzyqmFlR5oJWfUA/fs
MdN3NedEm6Yng8P3r+ha312856j/zMaZmu8a6LsWjqfJqY+1nCOjI963JS+N
eqD8N/c91rgyvQbRd3Vxc2qeB1rpgcx3kYbcN6h6DnOes90LtgRvFSCrdcx3
dYly7tnjfVvyZK0fkbP8rFy/26gHyjpUSccEcu8Q39ueVU5NLPZdzTkt9l3N
OZGBj57L5/zmBYuCZRsfo+sWhKn5LtfvqkFOXczkNLAOdVIPHB8/nHhcIK9D
ZXsfkr6rC/NdXZjvosb0ZPV+AbIPe3NyevZ/j3Xee984EXz44Vs1976SjpTm
8/BeoN4zowbzXV3cnL63JU9m+hE51bAy342ez1jORmtUNbpvUVHRd3WxktNi
39WcEylMHQk2zjnVZc+YtyZ4earO173zaLB4/unZ3X8XhWJqvmug71roDeTU
x1RO5eeZ1OuBu3btTOy6fcv7vG9zVjk1stIDme/qwnwXobfXnz3rdeem1+v3
gM9Gbw3m9m7iHGSFmO/q4ub0vS15MtWPyKmCufnuDOkRZ555Zt2uK39e1tcd
+q4uVnJa7Luac6KJ2Gy3Wd+FXqbmu8rnKsJCbyCnPhZyWr0f0XWrr0+c7W7b
stX79maV0/f25MVKD2S+qwvzXVTVudfuwm0HEr/27t7TgjkLb+F8ZoWY7+oS
5WR9ZhXIqYu1+a702aSue/5553rfzk7Qd3WxktNi39WcE024fXfBouCu137b
9Gvl+t09f87o+08dSV4jC11lar5roO+a6g3kVMNUTuXnmbg90H19iSt7p6Dv
6sJ8Vxfmu6hyOuzw8fRfm9l8t/KYsgbW1a994v9nYRzzXV3cnL63JU+m+hE5
VbB2/W6j85hXrljhfRszez7puypYyWmx72rOiSZmOmzPBQ+m/tqs++4l9N1C
MDXfVT5XERZ6Azn1MZVT+X5IeqCsx9xojSoN9yak7+rCfFcX5ruomlmvKvEe
RK48+u6rG6qve/Rd/5jv6hLl5PpdFciph5X5ruRsdK/dHUND3rcx0+eTvquC
lZwW+67mnGju/fsur7729Fx2a/D0G0eTvzbD63fl9eGPY/uia4fpu/6Zmu8a
6LsWegM59bGQ08r6zCOjI4ld98IlS7xvXx7Pp2T2vT15sdIDme/qwnwXkakj
s9Zolllfdd63YFFVz8LF1etsk167OkXf9Y/5ri5uTt/bkicLvYGc+liY7zZa
o2psbMz79mWFvquLlZwW+67mnEhp5rxiX+i7/pma7yq/bk6Y6g3kVMNUTsX7
oU2b70l8ve/v7/e+fVmi7+rCfFcX5ruIOzayPdcZLn232Jjv6hLl5PpdFcip
h/brd+X1o9EaVVMff+B9G3N5Pum7KljJabHvas6JFk1PBm88fEuw7Gvzu9Jz
6bvFYWq+a6DvWugN5NTHVE6l892+5X2Jr/XDu4e9b1/W6Lu6MN/VhfkumpH3
YMdf+1nw0t6Hg8Htg8HO710dzX971jwYbNuyNdhw54bqeUutkDUZv3/DsppZ
Mn3XP+a7urg5fW9Lnkz1I3KqoHm+K7mSuq6s1ex7+3J9Pum7KljJabHvas6J
DDnrMze9d1Ea05PBwe9+lb5bEKbmu0rnKi4LvYGc+ljIqXV9Zsl1Vm9vYt8d
Hz/sfRvzfj5HRke8b09erPRA5ru6MN9Fy/K4/+5Hz1XnvPRd/5jv6hLl5Ppd
Fcipi8b57m0DA4ldd+WKFd63Ly/0XV2s5LTYdzXnRIYqffcSOQd5waJg+Hh2
jyl9d9lLx/3nM87UfNdA3zXVG8iphqmcis4zkdltUteVNao0v+9G39WF+a4u
zHfRsqkjwU/uuz/Y9tNfZvq4v/7pD4Odv/nUfz7jmO/q4ub0vS15MtWPyKmC
xut35drcpL4rc18tORs+n/RdFazktNh3NecEkI6p+a6iuUoSC72BnPqYyqlk
P7Rr187ErnvhkiXqeyB9Vxfmu7ow3wXgYr6rS5RT8XmEwlQ/IqcKmua7ciyZ
tEaVnMcs92PQkDPV80nfVcFKTot9V3NOAOmYmu8a6LsWegM59bGQU9P6zNet
vj5xtiv3LAxn2COjI963tRvPp+acVnog811dmO8CcDHf1cXN6Xtb8qSlN5DT
YM6Szz3lGDmp655/3rnB1McfnOy7Jc/ZDH1XFys5LfZdzTkBpGNqvqvkurlG
TPUGcqphKmfJ90PSaZP6rhxXajpvuxH6ri7Md3VhvgvAxXxXlygn1++qQE49
NPTADXduSOy6q65ZVZtTeQ+0ktNi39Wc02Lf1ZwTQDqm5rsG+q6F3kBOfUzl
LOl8V14fZC2qpDWqjh0/Uf06Kz3QSk4rPZD5ri7MdwG4mO/q4ub0vS15MtWP
yKlC2ee7je61K/cm0pKz5eeTvquClZwW+67mnADSMTXfLelcpRUWegM59bGQ
s8zrM8v2JnVd6cFJOUdGR7xvezeeT805rfRA5ru6MN9FjenJ4MD+k/uwNyen
/W8Puo75ri5RTq7fVYGcupRx7in7y6R77Yr3D43N+noLPdBKTot9V3NOi31X
c06kMHUk2DhnfvSadca8NcHLUwXYLnSVqfmugb5rqjeQUw1TOUt2nkl/f39i
1127bu2sr7fSA63ktNIDme/qwnwXobfXnz3rteum1/X2ANTHfFcXN6fvbcmT
qX5EThXKeF3r2NhYYteV90rr7Uut9EArOS32Xc05LfZdzTnRRGy2S9+1y9R8
t2RzlXZY6A3k1MdUzhLthy5csiSx7yZ1Ais90EpOKz2Q+a4uzHdR9enB4Np5
tX134bYDiV97d+9pwZyFtwTP/KEA245MMd/VJcrJ9bsqkFOPss13B7cPJnbd
lStWNM+pvAdayWmx72rOabHvas6JJty+u2BRcNdrv236tWd86fJgz58z+v5T
R1gjqyBMzXcN9F0LvYGc+ljIWab1mZvda1eOJdPkHBkd8Z6lG8+n5pxWeiDz
XV2Y76LK6bDDx9N/bWbz3cpjLp5/enD1a5/4/1kYx3xXFzen723JU1l6AznJ
OStnCea7fcv7Eme7O4aGGv5dKz3QSk6LfVdzTot9V3NONDHTYXsueDD112bd
dy+h7xaCqfluia6ba5ep3kBONUzlLPh+SLYtqevK9bzN/r6VHmglp5UeyHxX
F+a7qJpZryrVPYjy6Luvbqi+dtJ3/WO+q0uUk+t3VSCnHmW4fleO+Rvda3d8
/HD6nMp7oJWcFvuu5pwW+67mnGju/fsur75+9Vx2a/D0G0eTvzbD63fl9eGP
Y/uia4fpu/6Zmu8a6LsWegM59TGVs8Dz3Ub32r1tYCDVY1jpgVZyWumBzHd1
Yb6LyNSRWWs0y6yvOu9bsKiqZ+Hi6nW2Sa9/nfLddz87OhYc2P9EMLx7uOpH
Tz8fvPhmg+6fxvRk8MGvno/+jcmxjTzmsekCPOd1MN/Vxc3pe1vyZKofkVOF
os935di31XvtNsypvAdayWmx72rOabHvas6JlGbOK/bFV9+VnvtAX/I5WzLL
brhmdT2VnvvKQzcnvz+wYFHwDw88U7jea2q+W+C5SlYs9AZy6mMhZ5HXZ5Zt
O/+8cxNfE1s5/rfSA63ktNIDme/qwnwXccdGtuc6wy1a3/39M2tTb1/Ppl+m
e9ypI9V7FLt9+b4Dv67+ezv62pM1/03uY9z0mukuYr6rS5ST63dVIKcuRZ3v
brgz+b3vRvfarcdKD7SS02Lf1ZzTYt/VnBMtmp4M3nj4lmDZ1+an7oJl7Luf
jd5a8/2XrPhesHHwB8Hg+pur60XX28abXm/SjSo/u+Fz5jXus5U+/NCSL5zq
w2nWCesSU/NdA33XVG8gpxqmchbsPJOJiYnE12i51+6x4ydaejwrPdBKTis9
kPmuLsx30czUxx8E46/9LHhp78PB4PbBYOf3ro7mvz1rHgy2bdlafS940+Z7
WiL37Pv+DctqZsld7bsfPRd1Wsnx8of/UfvfK7318P0rZs94L3iw4TnI7917
cc3XrztUv0tNv7e/JnvPjfu8P9eC+a4ubk7f25InU/2InCoU9frdS5cuTey7
sq5F2zmV90ArOS32Xc05LfZdzTmRIWd95kxmkpVeefC7X+163317/dknX8Pv
aPw+T7hu9am+uyV4K+nrKx26psP2PdLwscPcPs/njjM13y3YXCUPFnoDOfUx
lbNA+6Fdu3Ymdl3pwe08ppUeaCWnlR7IfFcX5rtoWR73353piV3rezMZpI82
XS+qsm0161YvWBQMH6//tW+vv6i1/jp2b22XbtKPu4H5ri5RTq7fVYGcehRt
vivHg3K+clLflfOcO8qpvAdayWmx72rOabHvas6JDFW6YvU84Aa9r53HlL67
7KXj3ckgPbOy/anuHzw9GTz1rbnRa/7c3k3157tTR4KNc9L1Yjd3y38nZ6bm
uwb6roXeQE59LOQs2vrMsg5VUteV65ayyDkyOuI9ZzeeT805rfRA5ru6MN9F
yyq97if33R9s+2nKtYpT+vVPfxjs/M2n/vPVyet20sTrd2Oz2sRe7Kp0aXfd
KvHlH094zct8Vxc3p+9tyVORegM5ydlSzgLMd2U7krqu3Jeok8e20gOt5LTY
dzXntNh3NecE2uasa9Vofeb4tbg9Kx9P9fjxc6CbrYeVN1Pz3QJdN5cXU72B
nGqYyul5PyTH9Wf1Jt9/vtNjQys90EpOKz2Q+a4uzHeRtfcPjQXPPvZgdQ1m
Wbc5XLv5R08/P3sN5BJ4fd03TnXRm39R/+ti5zxX57vbD6V6/Pg9kTK9LroN
zHd1iXJy/a4K5NSjKNfvXrf6+sSue9vAQHY5lfdAKzkt9l3NOS32Xc05kbNP
DwY/2bS6Zm3iJD1fvyLY9tN/97/NKfz+mbXRdl/00KvJc9eZ9a9qcm5Keb53
7Dxo333X1HzXQN+10BvIqY+pnB7nu3Icn/RaLTPfLPaNVnqglZxWeiDzXV2Y
76JTbidsxZyFtxTzel1R5967u9//MPnr6/Td1GtN1+m77a5ZJfuqcKbeLnd9
Tlm/pL+/v22yxsn4+OFCqh5jzgj/TNYf9b1dWZI80fG0k1MjMzljv7fafmdn
5aw8r5JRa065n22Ys9vP59jYWM35PHE7hoYy2yb3+fT9M89TPKfW31sLz6f8
+whzjoyOeN8ecmaUU3mvRz5OPHlDW13XteLJYs16f/dv/xqsPuev6m7rwm0H
6v+9DPtuS383Rvplp89Hli5csqRmTlMkco792nVrq3xvS57C9zEs5JSM8tH3
tuQp/J2tPp8zr90a1eQswPbknVP2R93+3n3L+xL33XKv3Sx/v3zm7PbzKfsg
eS3W/u8zylmA7ckzpxjcPuh9W7qRU97j8r0teeeUj/RdtKROT2tX1+5D1MAb
D99Ssy5Vkp4b980+r/mdR4P4udz03XL0Xe39KOyB2ntDTa83cJyp/fkMf2et
/Pvsds5GrxVyjs+uXTsz/XcU5tTed8Oc2ntgmFN7D7SSs6bvKn79DPez9F2k
VmeeGVmwKLjyxq3V9ank/AG5BlRUz+t5fm+w98F/mTU/7eQc3qy8suWm4P+7
447gX25fE/zT3y9urZ+/uqH9zpph35V/w+5cpB3x85llLRMh5ye3+jE8nzk8
p6soH0Wj85m1fKyX0/2asn/unqsk+cJzQ33/3PN8PqPzX+s8n5o+Wnk+G/37
zOt7Cnedhrhdd22u+dqsc/r+uef10T0vVI6pfW9P3jnl3+fI6EghtimPj5Iz
3Ae5Od2v0fB5vfOZi/Dzz+P55HxmtOq3O6+c9Rr5NzdsDp5+42jqx/h44oXg
gb5T90CQuanvXC5Ze2LiqfV1Z749F2ypnfHG7lnkq+9mwdx6VZX9n+b1qtyc
vrclT2FGEzktPJ/OjMH3tmjLKTOOpK4r5zhn/f2q6zg5x9O+f+Z5Kcp623mL
1nGq5NS8XtWx4yeif5smclaeT83rOEXrVVVy0neRyvRkMHzOvOj1UdadaqXn
xkXdecEi7zPeuipdtt4se+Nv/nLqazK+fjfpHr/dYOp+RDPHmpr7rpl+5Jyz
5HtbyEnO1Dln9kEjoyNd+X4y62h0HrMcE2b9Pa30QCvrM0fvXyjvgVbWoba4
PrPmnMiQc62qdN03J6c7e7xKf3722q9UH+/ive335jxNv7c/aHh9bsbrM3M/
ovyNjNq4H5Gb0/e25MlMPyKnGj56oKypkHge866danJ6fT7puyq4c2zmnuVn
JScyFPazBYuC+4922HVjj5n6nrUeHPzuV5P77NSRYOOc2r47d/uh1n6eTt/d
82d/Oem7ujDf1YWcunTzfOZGa1TJesx5fV9TPdBATitzTys5rcw9reREhsJu
muX1tu88WshreGvE1qSq6bvTk8FT35rbVt/9bPTW2r47b03w8pS/nKbOZzbQ
d92cvrclT2b6ETnV6ObcU9ZraXQec577eis90EpOKz3QSk4rPdBKTmRopu+m
nl+28Jiz1oEqktiaVPHzlV9f943aNa36HkmV5e31Z9f+vZWPe83JfFcXC72B
nPqYyjkz483z+zQ8j/muzbl+bys90EpOKz3QzWnifGblPdBKTmQoh7779vqL
Cn8+c/wa3XWHYh0pdl6yXNv8VrPHrDMX9n0vYua7ukQ5OZ9ZBXLq0a35bqPz
mKUHdy2n8h5oJafFvqs5p5UeaCUnMpT1+czO+leF7rtOn5Vzjmd12fg1vGnW
m451aN/X7grmu7pY6A3k1MdCTrcf5ZWz2XrMcp5zN3OOjI54/7mTszNWeiDz
XV2s5ESGnI7W6X1ip994rOYcYd+zzUbev+/yptfmul+Tar3p2DXBRbh+mfmu
Lm5O39uSJwv9iJz65D3fbXQe8+D2wa5ktNIDreS02Hc157TSA63kRLae/k5P
NMO8940TLf/9jydeCH70j0u9rtM09fEH1fe25V7bTb/e6fhzezcln6ccm9f2
XPBgw3Oao59j1utdd4D5ri6megM51TCVM6frd32txxxnpQdayWmlBzLf1cVK
TmQsdq3qV1ZsCp5+o8Esc3oy+OzoWPDsYw8Gq8/5q7qvv109l3lmPeioa68e
Su7aU0eCh5Z8IfU5yvH1lhNnvLHZ7pd/POH/ef2c+a42UU6u31WBnHrkef1u
s/WYu3Ee86ycynuglZwW+67mnFZ6oJWcyF78frRhH+xb3hes+Zdbg/7+/uD6
qy4PLvvGWYmvuy2t7ZSlWF8Prdr5cvDm5KkZ60evPhCdby3X1u78zaepHr/m
vObKzyS+ttX0e/tr58AFOI85xHxXFwu9gZz6mMqZw3zX53rMcVZ6oJWcVnog
811drOREDj49WLs+U7sqfTBtj8xMbL4b53Y+ce2dP6npwWkcvn9FzWP8zQ2b
q//Ovn/DstrvdffPCnUPJua7urg5fW9Lnkz1I3KqkNd8d8OdGxJf27p5HvOs
nMp7oJWcFvuu5pxWeqCVnMjJ1JFgaPnc5p02gcxMfV2z+sexfcEdV/9tYgdf
suJ7wdbHDnTUReUc7t23fztaf9p9/Ctv3Brse7f1a5/zxnxXFwu9gZz6WMiZ
x/rMjdZj9rVPt9IDreS00gOZ7+piJSfyNfHU+pp1ltNYtvGx7p7DnEBeo2Tt
Kvm3IGtXyT4uj+/jfg/fmRthvqtLlJPrd1Ugpy5Zz3eLsB5znJUeaCWnxb6r
OaeVHmglJ7pgejI4+Mj9wT/9/eLE19uzl10VrN3x85bPDUb3MN/VxVRvIKca
pnJmdP1u0c5jDlnpgVZyWumBzHd1sZIT3SX7ffndCslMU3On0IT5ri5uTt/b
kidT/YicKmR5/e7Y2FjhzmOelVN5D7SS02Lf1ZzTSg+0khNAOsx3dbHQG8ip
j6mcHc53Zf91/nnnFu48Znf7LPRAKzmt9EDmu7pYyQkgHea7ukQ5uX5XBXLq
kdV8d+26tYU8j3lWTuU90EpOi31Xc04rPdBKTgDpMN/VxUJvIKc+FnJmsT6z
HLcldd0zzzyzEPtwKz3QSk4rPZD5ri5WcgJIh/muLm5O39uSJwv9iJz6dDLf
lf1W/F7xrl27dnrPF26nhR5oJafFvqs5p5UeaCUngHSY7+piqjeQUw1TOdu8
fve2gYHErtu3vM97tpCVHmglp5UeyHxXFys5AaTDfFeXKCfX76pATj06uX5X
ekaj85jl2M53vlk5lfdAKzkt9l3NOa30QCs5AaTDfFcXC72BnPqYytnifFeO
wxudxzy8e9h7LpeVHmglp5UeyHxXFys5AaTDfFcXN6fvbcmTqX5EThXane+u
umZVYtdduWKF91yJOZX3QCs5LfZdzTmt9EArOQGkw3xXFwu9gZz6WMjZzvrM
I6MjDc9jPnb8hPdcjXLK9vveHnJ2xkoPZL6ri5WcANJhvqtLlJPrd1Ugpy6t
zHfleO2s3t7EvntgfzF/VlZ6oJWcFvuu5pxWeqCVnADSYb6ri6neQE41TOVM
ef2unKuc1HXlHGffWZJY6YFWclrpgcx3dbGSE0A6zHd1cXP63pY8mepH5FSh
let35WuSuq7MfOXY3HeepjmV90ArOS32Xc05rfRAKzkBpMN8VxcLvYGc+pjK
2WS+K8dpcm1uUt8t+rG4lR5oJaeVHsh8VxcrOQGkw3xXlygn1++qQE490s53
+5b3JXbd/v5+7zlS51TeA63ktNh3Nee00gOt5IR/nx0dC3Z+7+rqa7dch/Tf
19wePPzs4eDYtP9twynMd3Wx0BvIqY+FnGnWZ94xNJTYdWVfXYZ9l5UeaCWn
lR7IfFcXKzmRH9nHy35BJL32/v6ZtYmv2XMW3hIMH/efAycx39XFzel7W/Jk
oR+RU59G813Z/zY6j7ksx2xWeqCVnBb7ruacVnqglZzI0KcHg2vnza//Grxg
UbDnz7Vf/9norYmv1+7fu//otP9sYL6rjKneQE41TOVMuH730qVLE18zbxsY
8L7taVnpgVZyWumBzHd1sZIT2Xp93TdqXnvP+NLlwdodPw9efPNo7dd+9Fxw
yfwmXXdGzwUPcm5zATDf1SXKyfW7KpBTj0bX727bsjXxtfL88871vu1t5VTe
A63ktNh3Nee00gOt5ES2nr32K9Fc9n8+9XL9njo9GTz1rbn1rzu6+2fV3z25
pnf3rd+M/nzdIb29oyyY7+pioTeQUx9TOWPz3YmJiYbvDY+NjXnf7lZY6YFW
clrpgcx3dbGSExn66LmT5zNXum6jfpp0HvNFD70662sP33X5yRnvpl/6z2cc
811d3Jy+tyVPpvoROVVImu9euGRJYtfdtPke79vddk7lPdBKTot9V3NOKz3Q
Sk5kaOze6uvu3O2Hkr9m6kiwcc7sa3x7btxX/+tnrgmm7/rHfFcXC72BnPpY
yFlvfeYNd25I7LrSg31vc6c5R0ZHvG8POTtjpQcy39XFSk5kaKbv3vR6ckd4
796L665JlbgO88y5z3N7N3ENr2fMd3WJcnL9rgrk1MWd78p5ykldV9ZpHh8/
7H1722GlB1rJabHvas5ppQdayYkMzfTdq1/7pO5/n35vf7C4zhpVX9vxZvJj
Th0J7u49Lei5+Rf+8xnHfFcXU72BnGqYyjlz/a6sQ5XUd3fdtdn7trbLSg+0
ktNKD2S+q4uVnMjQTN9dvOfo7P+WsEbVGfPWBC9PNXjMTw9W13FueI40uoL5
ri5uTt/bkidT/YicKrj9qG95X2LXlfsS+d7WrHKOjI543x5ydsZi39Wc00oP
tJITGXrn0egeRPHzk+uex1xx2ZMTDR/z7fUXVb/u4r11OjS6ivmuLhZ6Azn1
sZSz0TW7ch5z2ffDVnqglZxWeiDzXV2s5ESG3BnugkXBP/9gX/D8gd3BxuW9
9e+ru/Lxho/3+2fWNr++F13DfFeXKCfX76pATj1kvzO8e7jaaRPPY9610/t2
ZpHTQg+0ktNi39Wc00oPtJITGZs5p7mZRucxy713H/vuklRfi+5hvquLhd5A
Tn2s5JRzlZNeP+UcZ9/blwUrPdBKTis9kPmuLlZyInvRXDap69Y533nq4w+C
l/Y+HNxx9d+2fo0vuoL5ri5uTt/bkicr/Yicesg5F43OY5bjM9/bmAUrPdBK
Tot9V3NOKz3QSk7kQ9ZiXr/8/Fn3Hbr2zp/Uva/QkTuSz9sSy1467j2Tdcx3
dbHQG8ipj/accux1Vm/9a4DEgf16clvpgVZyWumBzHd1sZIT+ZL9vJD9Q9Ov
n56Mvt79u5o7R5kw39Ulysn1uyqQU4dG6zGvumaV9+3LkpUeaCWnxb6rOaeV
HmglJ4B0mO/qor03kFMnzTlljaqkrivvN2rbH1npgVZyWumBzHd1sZITBTc9
GYy/9rPgzclp/9tiHPNdXdycvrclT5r7ETn9b09WZJ/aaD1mjcfVVnqglZwW
+67mnFZ6oJWcKLiPnqu+1l/9WorzoZEr5ru6aO0N5CRnGTVaj/m2gQHv25cH
Kz3QSk4rPZD5ri5WcqLYPhu9lb5bEMx3dYlycv2uCuQsr21btiafx9zbq3Y/
ZKUHWslpse9qzmmlB1rJiXx9+OFbwdjYWHWfIL9HrXzcffu3o9d8+q5/zHd1
0dgbyEnOshkfP9zw3gSD2we9b2NerPRAKzmt9EDmu7pYyYkcTE8Gr2y5Kbhk
fvJreKvou/4x39XFzel7W/KkrR+RU09O2b9cuGRJ4uveyhUrVORslN9CD7SS
02Lf1ZzTSg+0khMZmzoS3N17WmY9l75bHMx3ddHUG8hJzjJau25t4mue7G/l
WoOR0RHv25kXKz3QSk4rPZD5ri5WciJD05PBC1f1ZN516bvFwHxXlygn1++q
QM5ykeOqpNc7WadZzmPWkLMRKz3QSk6LfVdzTis90EpOZGf6vf3B4gzPYabv
FgvzXV209AZykrNsZL/i7k/jdt212UQ/stIDreS00gOZ7+piJScyNHbvrNft
r6zYFOz71b9Vf59k7Sr5KKQvuR/dz48dPxF8PPFC8JNNq6P+TN/1j/muLm5O
39uSJw39iJy6cl63+vrEriv3JbLSj8ipi8W+qzmnlR5oJScyFOu7lz050flj
vrqBvlsQ7jxC1twO36eQfb+Wz+W9lpHRkei4RHq9/FlRti+rz0WYU4TZfW9X
1p+HxyVhVje/723L+nM3p8bnMvwdDa9plZxF2KZWPx/ePdzwPGZZr7ma0+lH
Gn9vw49uTq2/t/I64r6u+N6evD6XnG4PLMI2Zf15+Hy6813f25TXv03tOes9
n/RdpOL03Z4LtgTHpjN4zE8PVme89F3/3PnujqGhmjmLJhvu3FBdR0b43pau
5qz0CN/bxPPZvjBjNafS51Jyhc+nfPS+PS3atWtntdMm9d3bBgaCA/tP5gwz
VnNqfT73nvq9lXsQm8lZgO3J3Mz7UGFO9/pzjcJ/nxZyCs3HfGFO+UjfRSrv
POr03Qez6bvTk9X3XzJ5LHTEne9q3sfL8YiFfhQeS1vIaeH5rOm7BdieXMz0
wLL23Ub3HpLzmKt9b6bzlTlnK8KcmzbfQ98ts9jvrdqcsedT87GQCF8/LeSU
j/RdpFLppsPnzKu+ds9ZeEvwVkaPq/kayjJx57tyTp6c3+KS/YSGz2UGI/t2
eT/T/XPf25X155JPSFaNz6Ob030+419XlO3s9POknEXYtiw/L2tOmd02Oo95
ZHSkeg5oPKfsj3xvezd+b92cZXlOW80pND+f8vsb5pRjBG372HrPZ3gs5Ht7
8vo8/PdZ7/kswvZlmZO+i1ZMv/FYtmsqf3owuGT+6cGyl457z2adqfWZZ96r
1vxeS/TeppX7EZFTBfc9ed/bkpbsLxudxyzHW+7Xu+sblSlnq6ys41TNOfOa
onl9I7kuMjxHQfPzGa4joP35dHPG91GayDmk4X6IvotWvHfvxdXX8DO+dHkw
fLzDx5vpu1y/6x/rM+vi5vS9LXmy0BvIWWyNzmOWuW+jnCOjI963Py9R31Xe
j6z0+mrfncmpuQdayRn1wP+/vfeNuaI69/4TQnjVkKZpCekL35k0TcPT2IQY
Lf78cyx6nvjrqfZ3ErRH4nNqRXuKlWIFK49aTjk0gCICKqD2poJ6AJ+qFPy3
e2uLoBba546KtHKrGDQqUpAeD/bubdZvX8O9N7Nnz8yevffMXrOv6/PiExT2
n/WdNTN7fee7rrWq16dmH4jfhW7Yff1X6+tWdTyvefSI27nwAtZnLgmm8l0D
fpc8UBfoLCdSF5bkdc895+zYewz5ri6s6LTiA8M6yT37n7BOzf0J+SFzma+e
NcvNnz/f3XrNhJO/65OnBc+326W29y5+txyQ7+oirNN3W4rEgm9AZzmRfduS
vK4gew+10lkZrHjXURRWfKAVnRb9rmad5LsACUT23w37o27B7/rHVL5rqX63
D3wDOtHZbzrl3hG+Z0aR9Wtb6mSerwqs6LTiA8l3dUG+C20zst8tGz8pN4+L
3y0X5Lu6qOtkPrMK0FkufjjnutS9h9Ley3xmXVjRadHvatZp0e9q1gn58vLi
8/C7SjGV7xrwuxbG0+jURz/olLYl/ZbJOs1Z7p8W/JEVH2hFpxUfSL6rC/Jd
6IiXGtfmOGPGVUE9bxbkeXjtvxfM/Vfqd0sG+a4uwjp9t6VI+sEfoVOPThk7
nTZlSqLflX0sW30G+a4urOi06Hc167TodzXrhJw5vttdO3FSsBfRhreOd/dZ
o0fq6zzjd/1DvqsLC+NpdOqj7DplrnKS15X1HNvVWRmseNdUFFZ8oBWdVnwg
+a4uyHehU3ZcNc5NmLLcHRrN4fPefDgYJ8zYedi7LuuQ7+qirpP6XRWg0z9r
161N9LqS+Y4cfU+Fzryw4gOt6LTodzXrtOh3NeuEAhi6y/2/U37sXhjJ4bNG
9rvVP5rjNh8ugS7jkO/qwsJ4Gp36KKtO2VsobQ2KdnMDC/7Iig+0otOKDyTf
1QX5LgCEId/VRVin77YUSVn9ETr16JT7xLnnnJ3odX+6YIEKnUUcNws+0IpO
i35Xs06LflezTugd77wy5J7ZdF+w7+DS25YGLF9xp3voiefcC+//zXv7IB3y
XV1YGE+jUx9l1Cl+NsnrXjB9elc6K4MV7/qKwooPtKLTig8k39UF+S7kwScH
h9yvl89pWGs5iXGnX+FWP/1n722GeMh3dVHXSf2uCtDpBxnXp+09NDw8rEJn
EVjxgVZ0WvS7mnVa9LuadUJx/OXJRR3ttTt+6i1uyzvve28/NEK+qwsL42l0
6qNMOlvtPbR+YKBznY8+qt4fWfGBVnRa8YHku7og34VuOPb43I68bphZj5P1
lgnyXV2EdfpuS5GUyR+hU5fOmZfPTPz9kn/TorMorPhAKzot+l3NOi36Xc06
oQCG7ura69ZgH6LyQL6rCwvjaXTqoyw6JbtN23tIxlB56KwMVrwf86Kw4gOt
6LTiA8l3dUG+Cx1xfLe7duKk+HHA5GnuxhvvCNanGhoaCjyTIPVN+/b8xj2w
8t/dnDM/3/CeU75wGXsRlQTyXV3UdVK/qwJ09g75zUp7Trvrqe7bVgadRWPF
B1rRadHvatZp0e9q1gn58u6GK5t++78+d4V74tWDmT/j6PAOd98V3zi5jtUN
273rAvJdbVgYT6NTH751yj1B1lxO8rrz58/PRyf1u2qwotOKDyTf1QX5LrTN
6BF3//TPNKw7tf3AsY4/7527L6vnwmS8/iHf1UVYp++2FIlvf4ROXTrT9h6S
PXjzumf41tkLrPhAKzot+l3NOi36Xc06IUfefLi+75B43Tz21N19/VeDz7to
W/Z8GIqBfFcXFsbT6NSHT52VwUrq3kOyx3zeOuU7fR/zorDiA63otOIDyXd1
Qb4LbVNbp2ryNLfhreO5fua45X/wr8845Lu6qOukflcF6CyWVnsPrV23VoXO
XmLFB1rRadHvatZp0e9q1gk5UvOmedbbvvkwNbwlgXxXFxbG0+jUhy+d377k
ksL2HorVSf2uGqzotOIDyXd1Qb4LbTPmdyeseyX3zxx3/kp3aLQEGg1DvquL
sE7fbSkSfKAufOhcvXJVoXsPlUVnr7HiA63otOh3Neu06Hc164QcKcDvvrHk
QuYzlwTyXV1YGE+jUx+91il756XtPVQZrBSqs6jPLwNWfKAVnVZ8IPmuLsh3
oW3yns8cWv8Kv+sf8l1d1HVSv6sCdOaPXP/h53xRZK1mDTp9YcUHWtFp0e9q
1mnR72rWCTlyfLe7duKkYBxwzZ6Puvqs0Vc3uYsnnRxXzNh52L8+45Dv6sLC
eBqd+uilzh/OuS7R68oevIXqpH5XDVZ0WvGB5Lu6IN+Fthk94rZ+c0J9jea7
Xm1/792jwzvcQz9qXBfklInz3AsjJdBnHPJdXYR1+m5LkeADddErnZu3bE7d
e2h4eFiFTp9Y8YFWdFr0u5p1WvS7mnVCztT2JBrjK7OWuydeTd8795ODQ+6Z
Tfe5OWd+PnZskev6V9Ax5Lu6sDCeRqc+eqFTvKx42iS/u3Hjhp7prAxWvB/z
orDiA63otOIDyXd1Qb4LnbL7+q82jxEmT3PTZ93o5s+f7362cJ677qrL3KXn
nZY4nqgxfuotZLslgXxXF3Wd1O+qAJ35INe8zFVO+k26etYsFTrLgBUfaEWn
Rb+rWadFv6tZJxTAyH63bPykll62JVWPvPlwCfRAAPmuLiyMp9Gpj6J1yhpU
Sb9Jcg/s1T2B+l09WNFpxQeS7+qCfBe6oup5By6f0LHXPeULl7kNbx33rwPq
kO/qIqzTd1uKBB+oiyJ1VgYrqb9LsjeRBp1lwYoPtKLTot/VrNOi39WsEwpk
9Igb3rqkYZ3lLPzjgi3uT77bDk2Q7+rCwnganfooSqfc006bMiXxd2nturVe
dFYGK96PeVFY8YFWdFrxgeS7uiDfhdyo+t7dD65xSy5Krtc9Y8ZVbtWmXe61
I6P+2wuxkO/qoq6T+l0VoLM7vn3JJYm/TzMvn6lGZ5mw4gOt6LTodzXrtOh3
NeuEHlP1vnJuiV+SPwXNnkIT5Lu6sDCeRqc+itC5aPGiRK8rma/8TvVcJ/W7
arCi04oPJN/VBfkuAIQh39VFWKfvthQJPlAXeeuUcXlafY2vcbuF/rTiA63o
tOh3Neu06Hc164TyI/cW320A8l1tWBhPo1MfeeqUcU5aza7kvr51VgYr3o95
UVjxgVZ0WvGB5Lu6IN+FUnB8tztr0hfdNXvwvL4h39VFXSf1uypAZ/uk1ezK
HrxadJYVKz7Qik6LflezTot+V7NOKDlDdwVjD/yuf8h3dWFhPI1OfeSlc+lt
S1Nrdn3f46jf1YMVnVZ8IPmuLsh3wTujR9zLi8/D75YE8l1dhHX6bkuR4AN1
kYdOGbul1ezuesr/MbTQn1Z8oBWdFv2uZp0W/a5mnZCBqu/ctXZlUMu0cGBr
4t64o28/5VavXBWwfMWdHf0pyD6HP1s4r2HfXvyuf8h3dWFhPI1OfXSrs1XN
7k8XLPCuMayzMljx3paisOIDrei04gPJd3VBvgsBVa+79ZsTGsYDE6Ysj/e8
Y3OPiwC/6x/yXV3UdVK/qwJ0ZiOtZlf+rSzXvIX+tOIDrei06Hc167TodzXr
hBYc3+2unTipcVwweZpbc3C0+bUj+92y8ZPwu0oh39WFhfE0OvXRjc60fXZP
PfXUUt3XqN/VgxWdVnwg+a4uyHchoOp3w/OKa9z0crwPeGPJhfhdpZDv6iKs
03dbigQfqItOdVYGK6Wv2bXWn1Z8oBWdFv2uZp0W/a5mndCCkf3u4XGfaxgX
nDJxnnthJOH1bz7ctbcdN7U5I/btd99//09u357fBGOizVs2u4eeeM4NDw93
97mjR9w7rwwFn1kZrAQ8/9pBd2i0BP0eA/muLiyMp9Gpj050yv2qH2p243RW
Bive21IUVnygFZ1WfCD5ri7Id6HO8d1uw43XuB/Ouc5decMq9+RfU15b9XB3
TDnhj0+ZM+BeOzLakWeQ9xzc87hbcuFnvfrd0Vc3uTlnfj7Zm59+hbt9z7vt
fW71GL14/83BvsKxnzt5mvv+vU+WzveS7+qirpP6XRWgMx65hvulZtdaf1rx
gVZ0WvS7mnVa9LuadUL+vLvhytQ5z20xlhf78Lt718zKnknfsD2bPx3ZX38e
EDwT+MJlbvXTfw6uN/H34X8bP/WW9GcLPYZ8VxcWxtPo1Ee7OiW7TavZlXuv
b02xOqnfVYMVnVZ8IPmuLsh3oVNkXyIZS8zYebj7zxurH87ls9qgtu9vW/Ow
q5439XNHj7jNZ05s8LNN88Krfvj+6Z/JNne8x5Dv6iKs03dbigQfqIt2dIpn
TLtnVwYr3vVY7k8rPtCKTot+V7NOi35Xs04ogLH9ejcfzuGzJA+9/HK37K2/
9679Ly1tmFu8aP1v3fCBN9yhw8eCettfL5+TOH5Ky7TfvuuihtcufiXhtW8+
3DDXuaWP7hHku7qwMJ5Gpz6y6pT1FSS/TbpXy1rNvrVk0VkZrHhvS1FY8YFW
dFrxgeS7uiDfhVJwfHfg/XqW74Yy2HHnrwzqj2Nf9+GzDXOP69505oOJr2/w
sEmvGyOaL/ter0sg39VFXSf1uypA50nkuj33nLNTa3Z966A/7fhAKzot+l3N
Oi36Xc06oeSMzWfumd8bqxeWutpH/7vFa6seNro3cdL842i229K/D92VzUf3
EPJdXVgYT6NTH1l0Xj0ree0FWae5rDW7DTqp31WDFZ1WfCD5ri7Id8E7o0fc
zoUX9DTffOfuy4Lvu2jbwUyvr63NFV5/qmke98h+t2x8yBdPntZ6rnfV57f9
noIh39VFWKfvthQJPlAXrXSuXbc2tWa3X8ZtFvrTig+0otOi39Ws06Lf1awT
WjBWPyvPy3vF7B/Mdgvm/mvD/N+e+N2xucyS0f4p63s+fDbIn8N+t2lN5UhW
O2HK8kyfv/WbExre96VfDXs9F8h3dWFhPI1OfaTplLFKmtcVL+y7/e3qrAxW
vLelKKz4QCs6rfhA8l1dkO9CwPHdTXN2fdCrfHd46xJ307Z9HR+fuHnQu6//
auPc5KsfyfTZbyy5sGlOs889ecl3dVHXSf2uCqzrlDGLzFVO+g2RZ6m+205/
NmLFB1rRadHvatZp0e9q1gmt2XHVODN+t21i/G5D/e7okaacdsK6VzJ99l+e
XNQ0V9rnfrzku7qwMJ5Gpz7idMp1KmtQJf1+yL2r365l6nf1YEWnFR9IvqsL
8l2ocezxufjdJCJ+t2nvoJh8PKvfjc6D9u13yXd1Edbpuy1FYtkHaiRO5/z5
8xN/O2RPItmbyHe76c9mrPhAKzot+l3NOi36Xc06oTWjbz/VUKMqayfJs/Qi
ufS80/rC734yeGt6O2P8bmYtMX7X55pV5Lu6sDCeRqc+ojo3b9mc+qy0X+fr
W/BHVnygFZ1WfCD5ri7Id6HO6BF3//TPBGOHC+9/qWff+8nBIbfkws+W1+9W
j8sT3zs511v2622qr83R7/o+DuS7uqjr7FM/kBWrPlArYZ1DQ0NBfpvkdX+6
YIH39tKfyVjxgVZ0WvS7mnVa9LuadUI23lhyRrY9afNmzPOV0u+O7dVbY/Er
zd5IsvHwOtO+/G6rPTp6zQXTpzeM58rE6pWr3KLFi9zS25Z6b0uRiD5BtPpu
Czrz0WnpvBUvm7Y+1bnnnF2vge1Hajo192dlsBKcs8LyFXd6b0/R/Sk65ffF
d1t60Z8y5vDdnl705/qBAe9t6UV/atZZ60/5E78Ln7601M8esMd3B35xxs7D
/o9BmGi2u/wPycetU8+ao9+V31jfHrdf/K4l31D7LfPdFnR2T01joLOPfV5W
neH5JlEk8924cYP3tuahU/t9CL+ri1p/WtGp3dfjd8EcI/vd6h/NcRveOt7z
7/313Wsa1zwuAyEfm7qfbmR/Xvxu+f2ujLss+CN06qLmjSzolPtH2v0lGIP2
uefH7+qi1pfadVrw9ZVBOzl2g9/t83tqK53yJ34XvDF6xO3bt9frvrNNVD34
svEnanJbriGVc/3uTS93V09aq0ft5M9wniJ9In/XDd77MYHK4Mm61jK3Mxed
Y79fJnRaqVNWrjNtLWZBcl3fbcylP8fO2cpgxXtbiiKoa7Wic+za1KyzXtda
1am5rjXQOXbeatZ56PCx+u+KZp3U70IpKOF85t3Xf/XE2GrytNZ5d87rM5dl
/91+3N8jK5VBGz4w/GzTd1t6olO5D7SgU8YiaV63n9enaurPsfG05uvTyjpO
VnRaWcfJis6w39W8bjF+F0pB1S/KfOCyrFf17oYr61532Vt/z9T+WhZcn//c
xf67PV8vLAT7EemirlOxPxJqGjX7hrpOxc8vZEyStj6V7GPnu42596fyPNCK
Tit+N6xTsw+0sh9R2O9q9oH4XfDO6BG3c+EFXdWt5smxx+fWx1a373k3s4at
35zQMC5LXNsqQnRv31MmzvNax2zK7+KP1IDO/kfG0Wk1u+KDZcziu5156tXc
n3E6K4MV7+1BZ3dYyT2t6Az87tg8E80+EL8LASP73R2XX+6unjWrZ8z+wWy3
YO6/Nuzj49vvhr1nuzW0Ly8+r9HvznwwUz2y7AHV8L6rH/F6DNh/Vxdhnb7b
UiQWfIN2nfK7kDaPWfbh9d3GovqzMljx3paisFLXasXvWsx3NesMfODYs3/N
PhC/CwEx9ac+8Op3Q/OKr/1tBz4vMi95/NRbktdzrhGTC5//uw+8ngum8l0D
flezP0Kn//bkRau15bXOxze1jpMhH6hZpxUfaGU+sxUfGNapuT+hNTuuGteV
V+1nvzv66qZ6GzKvmTX2jKCeA4fWcw7Iso9x5DmD77WqBPJdXdR1KvULNbT6
QAs6RUva74LsIeG7jUXAfGZdWNRpxe9q1mnR72rWCa0J162a8rtvPlyfU33p
48PZ3jOWy0b96Tt3X9ag56JtB9M/J7S/rzDuhu3ezwNT+S71u2pAZ38ie56d
euqpib8JUs/ru4296M/KYMV7W4rCog/UrNOKDyTf1QX5LtQYffupYI3kcD4p
a2EWyaXnnebV74Y1j7v5d8H9Ta6JJOT37OjwDrfkws+eeE90TapIXjvu/PtS
5zQ/8b1xDcd7zcFR7+cB+a4uwjp9t6VItPlACzpbrcUs96LNWzZ7b2dRUNeq
C4s6rfhdzTot+l3NOiEDo0fc/dM/E4wzLrz/pd5974fP1v1jT/1u9Xu7rVmO
26sout5yYsYbqff90q+G/Z8DnxrLdw34XU3+CJ16dLZai1ky3/UDA32vs2V/
js0x0azTog/UrNOKDyTf1QX5LoSRtYK97P865v165ndzWJ9Lstuk9Zcb5jVP
nuYWv9LopyRXbsiBSzCPuQb5ri7qOqnfVYEWna3WYl5621L19Qbku7qwqNOK
39Ws06Lf1awTMiL1pFV/1nO/W/WfUkObea2oboiuK9UhrdZRfnfDlQ2v//rc
FcHcvHvmzmj4+6l3/CbTvkW9wlS+q3w8LWjxR+jUo1PWn0q7t27cuMFE7lnv
T+X3IYs+ULNOKz6QfFcX5LvQQNULrv7RHLfhreM9/95f373GvTDSg+8aPeJ2
P7gmmCtXY+26tfU/w/+d9OeagUda7zVU5ZODQ27Lwu827DFcy3yvvGGV237g
mP8+j0C+q4uwTt9tKRINPtCCTvGyaV73pwsWnNBpaZ8eKzqV+0CLOq34Xc06
LfpdzToBfDNy9L3g/in4bksapvJdA3633/0ROvXolDFjmtedefnMRp2Gck8r
OiuDFe/tQWd3WPGB5Lu6IN+FslB2H2gF8l1d1HVSv6uCftXZat+hc885u+E6
7FedHfUn+a4KLOq04nc167TodzXrhJIzVr/rZf9daMBUvqs8PxJM+QZ0lpJD
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
FcGCb0Bn+8hvv3jZNK8rXljWFexnnWWG9Zl1YUWnFR9IvqsL8l3oBhkLvXj/
ze7iuBrfS2/NtcYXegP5ri7COn23pUgs+Ia8dA4PDzc814pD5jj7vC5M9Sf5
rgos6rTidzXrtOh3NeuEghk94l5/+pduzpmfb97L6AuXuf/YmkONL/QEU/mu
Ab9ryjegsyVDQ0PutCnxNSll8brm+lP5PBOLPlCzTis+kHxXF+S7kDdHh3c0
7KkbZsayTe61I6Pe2wjJkO/qoq6T+l0VdKNTxjKnnnpqqteVdZp9a7TSn9Tv
6sKiTit+V7NOi35Xs07oPWn7GUmN7/OvUeNbRkzlu8pzFcGCb0BnazZv2Zzq
c4XZP5jtXZ/J/lR+H7LoAzXrtOIDyXd1Qb4LhTM21/naic37GZ1y8TxqfEsG
+a4uwjp9t6VITPmjNnWuXrmqpdddtHiRd23W+pN8VxcWdVrxu5p1WvS7mnWC
R0b2J65pVV/b6vQrqPEtCabyXQN+14JvQGcy8+fPb+l1xQ/71mWxP1mfWRdW
dFrxgeS7uiDfhaJI27MoifN/94H3dluHfFcXdZ3U76ogq045p6UWt9U9d+PG
Dd41me9P8l0VWNRpxe9q1mnR72rWCb1D1qu674pvtOVzJd9d/fQfyHdLgKl8
V3ndnGDKN6AzQK5b2Ts37Z4r61bteqq8x8pUfyq/D1n0gZp1WvGB5Lu6IN+F
vPjg9//p5l08sS2fK/W7D+95y3vb4STku7oI6/TdliIx5Y9SdAb7DYWu4Thk
PyJ5nW8t1vuT+l1dWNRpxe9q1mnR72rWCQUxesQNbVsXu+9uGrI+8xOvsj5z
GTGV7xrwuxZ8AzrH/q3qm1rtNyTXdz9c16b6k3xXBVZ0WvGB5Lu6IN+FThg5
+l6wBlXcXkNpyP67L7z/N+/th2TId3VR10n9rgqSdC69bWnL+6/McZYxnG8N
9OcJyHd1YVGnFb+rWadFv6tZJ+TEyP6216D64uRp7vv3PuleOzLqv/3QElP5
rvJcRbDgGyzrzLou1dWzZvXVcx0L/cn6zLqwotOKDyTf1QX5LmRB1qB66EeX
tL0GFXsM9R/ku7oI6/TdliKx4BuiOoeHh92555zd8l4s2a/vdtOfKTrJd1Vg
UacVv6tZp0W/q1kndMbBPY+7JRelr30S53Pv3vW697ZDZ5jKdw34XVO+wZDO
RYsXtazVFfp1Hrup/lQ+z8SiD9Ss04oPJN/VBfkuNDF6xL3+9C/bXoPqK7OW
d7wG1ejbT7mLJ33R3fSyXt/RL4TzXRmHyf1PI7Lv6PqBgeBP320pWmdNq++2
9EKn9v6Ufswyf1m8cD/3ee3atNCfNa2yZrbv9hSFpetT2Lxls/e2FK1T+tKC
TkHzWMhKf4rHFY3afT1koOpzX33glsB3tuNzr7xhlet6Daqhu4LPumZPf6yl
oplwvrt23dqGnEUTy1fcGWRkgu+2FInMZRUs6NTenzIWCV+faWswB7/rY7lh
PyL9aOG8rZ2zotV3W3qhU+67/XxeZtW5euUq721BZ346NY+FwjoDb1+C9hSp
U/7E7xrn+O7sXjfnNajeufsy/G5JCOe7mu99lvwuOvsfOV9l39xW9+ZvX3LJ
ST/Rx77CpA8sQXvQ2R21+xA+UAfWdNaybN/tKYra7wl+1zhVv3vtxEkJecGk
em3u6qf/kOsaVB++dG99XyP8rn/C+ZHcE6TmQSO1+19lsBLUKftuT9E6Bd9t
QWdnZNlrqLYule+25oFcj5r707JOud/6bk8vdEpdq+/2oLM7ZD1AdOph3769
dZ34XeOk+N3A6867z23/4++Dc6ZWZyR/tou8f9+e37ht9/2sqUYYv+sf1mfW
RV1nn65blJW6b1Ck89DhY5lrdbWtGxP2gb7b0gudlcGK97YUhcV1nKzo1Hbf
SdKpeX0j+Z2xoFM8L34XAlr43V6A3/WPqfWZx+btaPa7Gn1gqk4l/kjGHVnn
L2u8TrX1Zxzm9t9l3yUVWPS7mnVa8YFWdEIG8LvwKfmuNsI6fbelSDT5hqzz
l3+6YIHac1dTf2bRWRmseG8LOrsDv6sLK/luWKdmH4jfhTphvzt5mvvJL7af
nH8cQ3h+ctp/h/8UpFZA/v+ZTfe5H//zWfjdkmEq3zU0nibfLT9yvUlem9Xr
+m4v/ZmTTnJPFaBTF1Z8vRUfGMzbHpvTp1knZGDM754ycZ57YaR33zv66ibW
qyoR5Lu6COv03ZYi6Xd/JPsHSR1uK58rz6OCtUJ5ftH3mJvPrNwfWdFpxQda
0WnF7wY68bsgjPndcTf/ruff/caSM/C7JcFUvmupflfxeLqfdcpvcJY1qYT5
8+cHe/D2o04r/dmpzspgxXtbisKKD7Si04oPtDKf2ZTfNaATMjC2/+5Zjx7s
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
GnfrcWX/IfHLct2USWcZQKcuqN/VgxWdVnwg+a4urOgEaIdPDg65e+acH4y9
J0xZ3pk3rfrcF++/2Z01KWFcP3ma+/69T5bO95Lv6qKuM+e6VtkbV+Ypd1uL
G67Jlb12Ox1XmPFH6FSFKZ3U76rAot/VrNOKD7SiEyAL4nM3Xd9YZzju/Pva
96Qj+90dUz5X/4xTvnCZW/30n4Pr7eCexxv+bfzUW9yTf/WvvYapfNfKODMH
neEMV/LXMnjcInSWHXTqwoI/suIDrei04gPJd3VhRSdAGnE+t2O/O3rEbT5z
YoOffWEk8pqqH75/+mdO+uGJ85pf4wnyXV2EdbbzPvmtl/fKvGKpoc3D39bm
KovHzXucZM0foVMHFnRa8YFWdFr0u5p1WvGBVnQCJPHuhitP+NrTrwjmZ845
8/Nd+d2377qo4f2LX0nwUm8+3DDXedwN270fC8FUvkv9bh05BvIbsGjxolzW
Uo6uOSWfK3Ogfevsd9CpC+p39WBFpxUfSL6rCys6AZJ474/PBetH1f/upaWd
+90Pn230sDMfTH39y4vPa/iua/Z85P14kO/qoq4zUr8rmmWsIj5UanDzWGcq
jHzm6pWr3PDwcE90mvFH6FSFKZ3U76rAot/VrNOKD7SiEyAzQ3d17Hej2e6M
nYfb+64W/rgXmMp3rYwzq0jtrfxZy2/z9rfyebN/MDtxf9xe6bTSn+jUgQV/
ZMUHWtFpxQeS7+rCik6AzHTqd0f2u2XjJ5187+RpbvPhFu85vrv99xQM+a4O
pO/E40rOmsc+uHGIb5YagDL8dljzR+jUgQWdVnygFZ0W/a5mnVZ8oBWdAJlp
8rsrs/ndyPtkH6M/Zfi+rd+c0PC+L/1q2Kt+U/mukvrdWu2tzB+eefnM3NZP
jiKf+8M513nLcNOw4BvQqQ/qd/VgRacVH0i+qwsrOgEy02G+u/v6rza+7+pH
Mn3fG0subJrT7HNPXvLd8rNv3163ceOGYJ3jvNeWis5RFv+8fmDAvfNKcWtN
5YEZf4ROVZjSSf2uCiz6Xc06rfhAKzoBMtNJvjt6pCmnnbDulUzf95cnFzW8
T/bq9bkfr6l8tw/GmbLek8xLln2BilhXKupv5TvWrlsbeGrf2tvBlG9Apxos
+CMrPtCKTis+kHxXF1Z0AmSmk3z3+G537cRJDe/L6nej3+fb75Lv+kM8Zq+8
bTi/lXnQ/X7/t+aP0KkDCzqt+EArOi36Xc06rfhAKzoBMtNJvhvjdzPvLRTj
d32uWWUq3/VUvyvfJ3vRhuckF+1tBam/FX8r+W2Re+H6wIJvQKc+qN/VgxWd
Vnwg+a4urOgEyExO+W6nfret9xYA+W6+yDGU71q+4k539axZ7txzzi7c19aQ
7xJ/K55aanDLkmMXgRl/hE5VmNJJ/a4KLPpdzTqt+EArOgEy00G+O/r2U+6s
SR161pL5XVP5bo7jTLmXyjNg8ZXiL3sxHzlubrLsDyTaRo6+F7SrNs4UfB/z
IjHlG9CpBgv+yIoPtKLTig8k39WFFZ0Amekk331paeeetWR+l3w3Hblnyr1S
5iLX6myL2v8nDZkDLb5a6n1lTauWOvG7KkCnLizotOIDrei06Hc167TiA63o
BMhMJ/W7Hz7rLi5Bvis1mbL2UDeEM0nZa3XR4kWBrwv/mfXvpE5UvFgZqeee
1T/j/r3maUWHzEMWf+nD19bmJUsbJLvd9dRjwbpWmXWOaZQ/fR/zopDnMnXf
oFhn/bwdw3db0Nkdch3Xr88qch77blNh/Tk2x8REf47p1NqfYZ2VwYr39qCz
Cw68YUNnFRkf165N/C7Ap6Wo373p5c7qLMWv+vBjaRlkeNxaGqr3PKmnFS8r
nl5yUvGTktXKfO5ezkMOI98r3y/tkHZJf0p+Wx9DhQn59bQ/xSPXnkd4P+4F
UtMpf/puS5HU+lJ7f9Y0WuhP0WhBpyD3Xd9t6YVOuXf7bkvPdIae2WijplOe
3ftuSy90Sj2W77YUrVP+xO8CfFqK9Zk73Y8IvxtD9bdYfqvkPjf7B7MDLyl5
qS9PG/a24fWkgt/TAsYNNV+v3R9Z8/WBTgPjTCs+0IpO7X63dn1q97s1ndp9
oBWdDX5X8e9K7T6L3wX4tON8d9n4/PbfffS/O2u7XMMyl7gbwj5QvJh4REHy
z+h/t/o7uX/KHBKZL1MkwTyV6j1MfpNEg+/5x1FqmW3N10otkLQ5jryPjfx2
SUYs9KIvfFCbpxTVqVFvTaPo1agv2p9hndr0RnWG/9532/LWGZ6nok1fq/7U
RkN/Vn93NfcnOvXAfGaACJ3ku6NH3NZvTmh83/I/ZPq+TwZvbfS7E+e5F0b8
6S/r+sy1daLkvizP6GpZbVk8rSBrfckzAvHc0k65x/reAyj8bNN3H/ZEp4V1
ucZ+s323pVCdoYzBd1sK16m8P62s4xToDNVB+m5P4Tq36V7HKVivakyn5vWZ
Dx0+ZkIn61UBROgk363y8uLzGt8388FM73tjyRmN77v6Ea/6fa3PLL+hsqZA
OKcV71iGucdJea20Uda0knun/DZ6P3djqAzmu+9SWTHn69HZ95jyR2PPaUzo
VO7rwz5Qvd8d60/NPjDwuwZ8IH4XIEIn+W7M+8ZPvcX9qdV7YnLh83/3gVf9
ReW7MhaQvLMyWKnX09bmHZfNz9ao1ddKW2vzZH3nte1iwTegUx9mdBrIsa34
QIs6rfhdzTqt+MCwTs3PLwAy02G+++nI/sYa3snT3ObDLd4TWeeqm7Wq8qLT
fFfuJbX6iHA+W6Y62jjEa4fXQ5b9fiRn7jdfm0RlkP13NYFOPZB76sKKTis+
0IrOug+s3oes+F3NOgEy02m+W+Wduy9reO9F2w6mv+elpY3fdcN27/rj8l25
79ey2dqetLX6WZ/797TjacV31/awlaw2vNePFm8bhwXfgE59mNJJ/a4KrOi0
4gOtzGe24gPJdwEidJrvCpG8Vt6bNqf5ie+Na8iD1xwc9a4/nO/2g5etIRly
zdPW5h/LvVvucXE6Jcet1c5p9ruVQep3NYFOPZDv6sKKTot+V7NOi35Xs06A
rETXS24n3417f2LGG/HVX/rVsHftQjjfLRu1daJqc49re1t04lcrg/hATaBT
F6Z0ku+qwIpOKz6QfFcX5LsAIUb2u/unf6bJZ930cnt+qmFe8+RpbvErje8f
ffupxhy4BPOYa4TzXd8Zrcydlt9TqafNW2dl8KTfNZHvUr+rAnTqgXxXF1Z0
WvS7mnVa9LuadQIkId5Tajp/fs23Ur3YuNOvcPN+dqtbtP63mT733Q1XNrz/
63NXBHNs75k7ozGzvOM3beXHRVNkvhv2s7Ke1fqBgWBc8M4rvV/3WL63lqto
9rsWfAM69WFBZ9gfWdFZGax4bw86u8OKDyTf1QX5Lljnk4NDbuPtK4I1hcV/
xf1Z+2+ZQ7v66T+39dlbFn7XnTUp4v0mT3NX3rDKbT9wzLv+KN3ku7X5xrKW
lTxDkGMmv4ey1lXZPGVl0Fi+q3g8LVjwDejUB/muHqzotOh3Neu06Hc16wTw
zcjR94L7p+C7LWkk5bvRbDZcP5u0JlSZqQziAzWBTl2Y0kn9rgqs6LTiA8l3
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
+nhEeOH9v/lvM/QPOfrdbvfhJd9VyJsPN6yDxu9w+ZHf8od+dEnqc9WvzFrO
XKKSIf12z5zzu7rWZGw158zPJ/b7uNOvcHfvet27Vgvk0Z9p/XzP3BlN/Tt9
1o1u4cBW7tM5HudCrqeqz33x/pvdWZMS7tGTp7nv3/sk/dgv/ZmE5fFTVXv4
/KZ2F7omck759Lvku8oI7Q+ex3pmUDzvPPqThut5xrJNwXNruR5ff/qXTXU1
lz4+7L3N1ol7PtHJtbZ3zazM88jG3bCda7nk/RnH6NtPNV3DtTE6/ZkvhV1P
kd9VmVcn/ffBoUPu4J7HG/5t/NRb8Ahl78+M/Wxt/PT2XRc1HtOM6+gCJPLS
0s49K/kupJD3+t1QLA3rz02e5u56NSa/HT3i9t5+WUO/sj+Ap/6q+qJN10+P
H2+1ea29vPi8zGO58JjO9zHQRJ792UR17Nw0Z6N6jd+0bZ933Rop7Hqq3n83
nzkx3c9G9nAhFytxf6ZgevwUs47uRduop4Eu+fDZpjW/yXeha2LODVP3636j
OkZaNv5kXUNqbhsZc9GvvefdDVfWs7lFixc1zbFrp0+izzl+8vALwf1X8iKp
7fz18jmJYzqedZSvP5uo/saHr21yv2Ip8nqKZl6LX4l/veT44Xl7PJsqZ38m
Yn38FK2zrB73NQdZNwS6JOf63W7GP+S7SqieU9Hxlbn7dZ8R/k2X+XGP/nd7
r2d9m94ia9Q0rI8SmaeT+VoLPbsYd/7KZA9U9UzhuXXh7/F9LDSQW3/G9FvT
/gszH3R/KoFmlRR5PVXf0+Bhq/2Y1pbd1381tyzCLD7uj4yfmryFPJ/jngVd
k/P6zOy/a5zq78Mz137lxP35ijsbasVM3a/7jPDcqSx+N3zt43dLQORenPla
G1sPJVMfxngn5kqWrD/DROZsMG7sAQVeT9H5rS3HadFzqIU/ht72ZyyMnwKa
5nLf/DvvbQIFxPwmTlj3Srb3xvjdluPkFMh3+5/a/mm1c+GJ740L3a9Xmrlf
9xvv3B2qyZ08zS176+/p74n43W6ue8iBJn+U7Vqr9XvW2qjavFv6vpz9GSaa
7zEnsHgKu56i47RqX7bc+zGaE2Z5D/SmPxNg/PRpU72UMGPnYf/tgv4npi48
q99tqGvI4Vk/+W6fE6oFD+5PkXPL0vPJfqPpeWqLLKAhDybj808neeDYuEL6
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
FneXFHg9Rc+LxIw3ku1+6VfD/o9Lv+Lr/sj4CUAt5LvK4H7dX0TGSOJ573r1
WNPrhrcuaXhd5rldUAwj+9390z/TNMbKNCc1mgV2ANd1ifozRH1v0JDnja5d
9ZcnF3Et50kPrqeGec2TpzU9n5AssiEHZh5zqfszEcZPAGoh31VGZP195smV
n9FXNzX9vp9y8Ty3bO0v3AMr/71hvUhh1uN/9t5mi8iYdtHiRe7n13wrfax1
+hVu3s9udYvW/7b5c6Jr4HTI+b/7wPvx6Hdy6c8Yon5W/NHs5QNu85bNbsnl
5zb8G2txd0kPr6e9a2Y1vOfrc1e4x7Y95u6ZO6Ph76fe8Rt+c/ugP2Nh/ASg
FvJdfex+cI1bPzAQsGrTLu/tgQxUf2eHtq1zs//htNjf7y9/4zvuJ7/Y7l47
whxmXwT7Wty+wq1dtza4tsJ/1v67xuqVq9zqp2Pqx6r9HL4+o58T/vsk2BOj
RP2ZRHXcvmXhd+tr7USv5YUDW7mW86DH15OcM7H9Onmau/KGVW77gea5OVDe
/oyD8ROATsh3AUpG9Te/tv7GocPH3McfU9sH0JdUr+WRo+/Vr2euZT3U+lXu
0b7bAgAA6ZDvAgAAAAAAgEbIdwEAAAAAAEAj5LsAAAAAAACgEfJdAAAAAAAA
0Aj5LgAAAAAAAGiEfBcAAAAAAAA0Qr4LAAAAAAAAGiHfBQAAAAAAAI2Q7wIA
AAAAAIBGyHcBAAAAAABAI+S7AAAAAAAAoBHyXQAAAAAAANAI+S4AAAAAAABo
hHwXAAAAAAAANEK+CwAAAAAAABrZvGWzWz8wEPDRRx95bw8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAGkb2u11rV7rrrrrMTZ06NeDL3/iG+87/mucGnh9yh0ZL0EaI5VBl
nbv0vNOCPvvHBVvcn4r8vtEjbt9z29yyy6e4r61/zY7uNo/RwT2Pu3vmznDj
Zj7ItQMAAAAgDN3lvvjFL9a9Rhbk9df+9kDzZ1XHW098b5z74uRpbX3eKV+4
zD351xIcC+gd1XNl573fD86lNE6ZOI9zo4y8+XBTX427YXuu3zFy9D03tG2d
+/k132r8nuV/UK27HT45OOR2P7jG/fifz2ps0/n34XcBAAAAhA+fdT9bOM/N
OfPzLb1H4D+q3vTf5i10q5/+c/NnVT2MZHUL5v6rO2tS688SzpjxYzd7+UB5
MhIonup5cv/0z9TPgQvvfykYm4++/ZS7duKkZj/h099ALJ8M3trcT3l5rOO7
Y8+DMpwPhepuh+o1tPWbE5KPEX4XAAAAoAnxG3dM+Vz8GGryNPcfT8Z43CSq
47G9a2Ylj8euuNO98P7fvGuG3vPuhiuTs7G4/Iyxe/l4aWlMP63Mp59G9rvH
Hn3UPbPpPrfkotNK5XcL1d0mrz/9y+A43TPnfK4ZAAAAgKzEjOc6HmMmZRBV
77z5cAm0Qu+pepll409md9fs+ajpNe/cfVnD+fKlXw37bzc08uGzTRlsIXW1
1fMl+j1e/W6vdLdDZL4EfhcAAAAghYS5hHG+JAtR78JYzDbHHp+b6byS7Gr5
ijvdA8/sbTpX5JyasO4V71rMU71XSAa7fmDAPfHqwWK+I+aZmff57b3Q3e0x
KvAey/UHAAAAfQ1+F4oiZlze9nn14bPu4kkl8DzQG8rod8tGL/0u1x8AAAD0
Oz3xu37q3cAzMedWu+dVsP43nscO+N3OjlFBfpfrDwAAAPqenP3u4VWXku/C
Cbr0uw3rXDHetgF+t7NjVMA9lusPAAAAVMB8ZiiKsbmQnZxX0bpfxttGwO92
doxynkPD9QcAAABqKLnf/eijj9zHH3/sRo6+5w4dPub/eGVE2hz9O9EgejId
i+qY9oNDh+r6fWiQ7xakHR0d+6G7ms6Fm15ureWdR3/S9L6u1supHsuudOTd
tzl8X1ibaJLv7vWx6Oq8HGuHtKHhc7r0u4nHIay7yz7q9nqsnyudHv+s+W5I
czu6c7/+AAAAAHxSwvnMB/c87u6ZO8OdFckGa0yfdaP75f/9S8vPeXHlTe7f
5i10ixYvCvjpggXBnz9bOM/95BfbM79euPHGO9yTf23R9ur4UtYZnnfxxGAP
pkf/++QxvnfmlAYNU1fviv0Mef+Sy89tPoanXxG0ed+e37jVP5rj7nq1AO9f
bf/QtnXu59d8K/a4B214+IXEvpT9nMPHLO5zTvnCZW7pbUsbju/s5QPuT2Pf
v/f25uclte/+3z//eUPfpO4PXT3mv14+x116XvN+rsK3blrb3n7QOfRtO4gn
kr6Y/Q8n2j9j5+GGtuxau7L+b+FjdNO2fbGf919D2xP74/Y972Zu1ycHh9y2
+37mZnxtkpswZXnb3lGu7bh21M4teU27fvfo8A63+fZ5QZsa+qbKB7//z6bj
JPzPlc+01fZudcvxT7qnyf1s4Pkh99qR0cznYmq+O7LfbVn43djz/h8XbDlx
rSV8bm7XHwAAAEBZKFG+K2PCOWd+vuG9Z8y4KhhbxfmW8VNvcdsPJPi+6tht
94Nr3LLLp8SP36Lz/6qvF787+wezE3127DGpvq/mz6M+Qsbdo69uSvy8hqyz
OkYN76kp48uFA1vdY9sec/fMOT+3/kniUGVdw9xjab/4UNmDJfB4EW1rDsaM
zWPy3EyMeZQ3lpzR1vvG3fy7+HMwJp9KYtbjKWP2vPo2I++//ye3c9sD7sf/
fFZifw9vXZL4nbHHJcaPx3Hp48OJ7ap57+i12dZzrA+fdUsu/Gzjcbx4nlsw
919P+NTaZ05tvhfF+d33/vhc4HGj8+VrfSPXUyvdcg94YSS5zbnojmmH+Nu4
Pq7927K1vwiuuxqrNkWenyTku/JvH750b8vzQ45R3H7oeV1/AAAAAKWiLOsz
v7S04T1xXlb8cFxbUz1Llb88uSimTSlj1up48rm5F7Q8JjsXNr+mPqacOM89
t2tLbHvjPm/HVeNOtu2G7U1tk3FsHv0TR7RW73/cvLXp+w88uKBpzBznFcSH
VAYr7rnnnnM77/1+k+bL7nky+LcowfdVvYH8966nHmsas4+bd5/bsXNHQO09
z7/WvBdq+Pwbd+mtJ/bzPXys7l3i+iPOT+XZt5lo8azg2t8ecM9c+5WGv/vy
N76R6G2WvfX3IG8P+8FxU89y377kksTvaHqGIR71ovh8vOU1FCLaDjl3ote2
nN9JxzPaP/t/fmpq32z/4+9T+6bhs29onueRl245n++Y8rmGe1rYZ8rzkqhf
j6MpT47zuzMfDJ6FZNEc+5mf5nP9AQAAAJSOBL/bST4lxM9nTve7Mu6Lvj5x
zl21vcvGN7f3a+tfS25XdXy4+cyJke9oMWaN+O84DyMeUDLQuPw1zNfnrmjK
CBs+L+R1ZEycpP2TwVs791NJx77qRc6KeJHwfNDwMYyOsVvW9HVYvyv1kbV9
UDJ/V5UjD12T7mNSzveG+cJ59m0bvPPKUJDxbv5e83z2cP+sfvoPJ+tUZV7C
sn9J93RX3Nkwd1u8f9x7or5Srsvv/K95bvmKO2PnSWTyfZHjLed3YqZa9ZlZ
nkfI3GLxWk3zQSZPa3zf6VcE84TlWInmvWtmNR+f6nuiWWcuuqvsvv6rDd/T
1pyI6uvl2cS555ztTpmzJdXvRjNx6e8nXj1Yf22s7pRrsdPrDwAAAKCUJIz/
L92yxx04cMDt27c3M8MH3mjyRC3Hh5HvT5pr10DMur+J40mhk/073ny4KeNI
9DBRPx0ad4fniYYz0rCnf3nxeSf1T5yX7PU/PZkD5+V3o9muHP+kOuXos4yW
uX3MWD5TuztZs6jaX+FjmDZPNT7vT9DSZd92RIIHEh8T+7nVNkb9Sf09SXNO
Y96T9qylo2dG1feE5y2kXqM1Yp4zpfX923ddFKv7wvtfin193PyTVC/Xie6Y
PpT8Nem1cW2KPn9pdX3UkHkAce8J7y3UUjdrZAMAAIAmEvxunqSND6M1Y1lr
wsJZXv29Vz8S//pO/G6be8fGjbtjM8axNVPD/x8eT6d6DmHMD+Tld99YcmGT
343Nd4XoGL7VMeyh3w17t5ZZVNw5n+LFOu7bHK/JuDnuYcLZf9ZrqZ1nHZ1c
Q9E2JWbuYUb2N2tP6fuoBkGe1SV+fsyzstRzq8O9btu6r8W1Ke31cX63ev6m
zp2IO6eSPDh+FwAAADTRE7+bkJ216SlbtjvJs3SyX2WbbWvKaGLmScYSlx+l
jS3H2nX+7z7Ipf+jniTV80T8a6ssuld+t2FOdpYMMeaYCxdti69H7Lhvc7wm
W84D7+RYR9/T4thFfX+rGvjoMc5UI9Gu14qek2nnbyfXW7u6O/mOaA7e6v7U
yf2sHd+O3wUAAABNJPhdWVfoxRdfbJtN10+P8bvx46q2vFYMDfVxY8Rmez3I
d6OeqB0tceuiyppRSfuTyJ5EmfcuaUX12Lz6wC3ugunTg7WwU/d5ivEWiVlw
zOuL8rtNczWrvu2fLj4r0BSH/Fvsc5mE7+imb/O6Jlsdt+iaUB353TbP8dRr
KDS/vPZsJG2Oead934nfbdfLtaU76TtaZNttfUcn9zP8LgAAAFjF43pV0dyk
XR8RO4fz6keav8tDvtuOlrg5mTXfVtuT1CeyPpDsZRutZ26psRd+N6WWsV2S
9lXtB7/b0XsK9LvRZxCZ1zTW6ndb3G+aj1e7+S5+FwAAACCWnPcjiq11jBtX
xYyp2vYRcXVvGb8r73w36vPb0pIwv7be1tOvSM9di6Daptef/mXT3qNl97vi
E2TdtA8OHQrWW4si6x/Ln3H/Ln+Xe9/mdE2Wwe82r1fWhl/qY7+bWXfoO6LX
c7tzIWKf23VzfPG7AAAAYBVf++/m4Xfj1mDJ7HfLk+8GVL173D5LDZ85ZyC/
ecxJVI+V7OMZfo7wrZvWntgvtV1v0Qu/O7K/4bgV4UXJd+OPQzt+qWWtdyd9
H6OhFPnup/E1Cmc9mrxfbdRTJ9WSJ2roqH43eU1y/C4AAACoIWe/Gz+fOXu+
m5qBZGh7X+a7Nare7f7pn0n1vMKsx/9cyLkQ9bn/uGBLo78uo9+N9lMBa0mR
756gG78reyn1a77bid+N7mtd8/yxNcyRNrWsdWa9KgAAAIDslCjfbft7q/7w
jimf69DvlizfDbV175pZLT1vav7TwTmw5MLPNnjG2/e82/y6kvrd6Jz21L1L
czinrfrdzPsvq5/P3OLeMUbsPs8xeyhH6/db9ltu85nJdwEAAMAAPfG72Txo
216lRPlut2tvRRk5+p57bu4FqZ630zXFOtZZRr8bmc8cvDbjHs5Zybtvc+2T
bt7T4/nMZtZnDhHneaWN/7H1hWCd9Yd+dEnDv136+HBnx4j6XQAAAIB4ejKf
OT5HiPXGVz/SVduz70eUb77bpHvytMye6J1XhhLrco8O72jMXtvRkIGmfT/T
jn8Z/W4edeBjn7P9u1Niayy76duO6Bu/m5wPxq2/1ov9d1v2TS5+t83rLrI3
Uxxfn7vCvfD+3zKfq9TvAgAAAGTEV74rxIy3JQfK7CVi1mde9tbfm1/XQR7S
7n6mHc95rbbt4XGfc+NmPph+XB/9SeyxyrQGUBIx4/DUfu8Tv5v43COF2n4w
X1v/Wn592yl943eTr6GXF5/XfB/I4pli+jO1L0ue74Zr8sfNu889/9rB4PmW
7FW+Y+cOt2/f3vafWZHvAgAAAGTHV/2uEFN/K2Sd0xyte5P9U2P9Xyfjwy69
QDt+V9qWZb5n0z693a7NFKMxNYN7aWnT93v3u5/Gzyloa+2zMV1JfYDfjT8O
aZnikYeuie2Tlsctru9v2J5ZQ2/8bsZ8N3R/m7p6V37nB/kuAAAAQHZ85ruf
xni4rPlJdUwWnYub6JM7qCfce3uzjjQv2K3f7cTTJPr7jMT5xLQsLbrHSrt7
inbld9POiZicXxg/9ZaWfRCur/zSr4bz7dtOKanfbWsf2oT7Sqp3FeLqsdO+
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
hf8fMxI8Sg==
    "], {{0, 916}, {956, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{956, 916},
  PlotRange->{{0, 956}, {0, 916}}]], "Output",ExpressionUUID->"3e914b10-b8e9-\
4b7a-b430-9178c968ebbf"],

Cell[TextData[{
 StyleBox["35.",
  FontWeight->"Bold"],
 "\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "f39a75ee-cf37-4fb2-be01-bd3d0344a584"]
}], "Problem",ExpressionUUID->"95aaff05-70af-461b-9d3b-8481842e950e"],

Cell[TextData[{
 StyleBox["36.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "0516b0ab-3a48-4c08-8923-ae621db52265"]
}], "Problem",ExpressionUUID->"b2321da8-0773-480b-b45f-12eec6e13fba"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "92dc16d6-e35f-4f66-ad0d-3b18891b2fab"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "116ab9a6-a02b-44b4-a443-22c97f2ccceb"],
 StyleBox["37\[Dash]40. Temperature data",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Hourly temperature data for Boulder, Colorado; San Francisco, California; \
Nantucket, Massachusetts; and Duluth, Minnesota, over a 12-hr period on the \
same day of January are shown in the figure. Assume these data are taken from \
a continuous temperature function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "c4f298dd-a30d-48da-96ca-300573ef320e"],
 ". The average temperature (in \[Degree]F) over the 12-hr period is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["T", 
     AdjustmentBox["_",
      BoxBaselineShift->-0.12698412698412698`,
      BoxMargins->{{0., 0.}, {0.12698412698412698`, -0.12698412698412698`}}]],
     "=", 
    RowBox[{
     FractionBox["1", "12"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{" ", "0"}], 
       RowBox[{" ", "12"}]], 
      RowBox[{
       RowBox[{"T", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", 
       "t"}]}]}]}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"19448708-adbf-43fc-99e2-efcbbb51e168"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"dde66556-f025-476a-a85e-\
e127fda85166"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X2wXPV5J/iUFFyb1DJseVSUylvlqmVxZsuZIon8pmQ1yS5Ohew4s7zE
GxvhymB27LG0MbZ5MQ6UE4e4yIA2BssmQjHx2JEdDGVAjmxfjDexcQwIsMLk
AjYyfokzyI6VeBFVCGuRqLP31+hcne4+3X267+nndJ/7+ePDvdzb3ff0c1u3
u3/f8zy//+Gid5z31jU/8RM/cel/s/Sf8958xf96ySVv/t3f/O+W/uf/uPjS
Lf/x4rf8h//t4sve8h/fcsnGi9YufXH3ST/xEy990U/8xE8uff78889nAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB99j6wt/FjAAAAAAAATjj2g4ey
zy4sTN3Xf/hMrcf9xLe/k2277rrG6wcAAAAAAJzw0KUvz17ykpdM3Zotd9Z6
3Lfeemt23rnnNV4/AAAAAADgBc8ePpTd9ppTBmYFaV3/oovenG3dujW7/ORT
Sy/zC6974fvJu7e+Mdu8bn35bS08Weuxp5/3My97WeM1BAAAAAAAjjuwkG08
7fQT+cD6Tdm2u7+RHfyng32XPXbftv48Yenytxw82nfZo1//QvaO1/7LkZdb
iV8988zObT/yyCPN1xEAAAAAAMie/dRFJ+YgXfiRbP9zxwZetmwe05qzbs4O
Hh1wnSOLyz0SQy83yXEfPrR8DJ/ceXPjdQQAAAAAAE5kCSdteN/QzCFlCNev
7Z+ztGbXt4be/pM3nvPC5bY/UOtx33PPPcvHkOYtNV1HAAAAAABY9fJ+hPWb
sp1PjpiBdGChdM+GKx47PPR6B3Zs7lxuy76naz32HR/avnwMad5S47UEAAAA
AIDVbvGmzrr92qu/OvKyxXlMuZeuuyDbe3h4XpH6HdLlFg7VN2Mp2bz5/K5j
KduPAgAAAAAACHRgIXvPhddXygS+8B/+2/4ZS1vuHHm9lFekvR3qPvafednL
uo7lr+75SvP1BAAAAAAARivsD130it3faeR4nvj2d/qOZdt11zVfJwAAAAAA
YLTj85i6VNkTYkpuvfXWvuNJc5carxMAAAAAADBS2qOhd53/RWd8MDt4tN49
G6q67D3v7TueNHep6ToBAAAAAADDPXv4UHbba07pW+evshf1tPzqmWf2918s
SfOXmq4XAAAAAAAwxIGFbPO69X1r/Fv2Pd3I8aQcpCxzSNL8pcbrBQAAAAAA
DPTjL17Tt77/0nUXZHsPN7O3w94H9g7MHbZu3dp4vQAAAAAAgMEeuvTlfev7
a7bc2djeDjs+tH1g7pDmLzVdLwAAAAAAYIAji9n1a0/tW99/xe7m9lG46KI3
D8wdkjSHqfG6AQAAAAAA/Q4s9K/tr9+UXfvdI40d08+87GVDc4fPLiw0XzcA
AAAAAKDPs5+6qH9vh5OvyvY/18yMpZQpDMscktQP0XTdAAAAAACAfl95y5q+
df21V3+1sePZvPn8kblDcvCfDjZeOwAAAAAAoODIYnb5yf17O7z13r9v5Hj+
4R++VylzSNLe043XDwAAAAAAOGHxpv4ZS+suyG45eLSR49l23XWVc4eNGzc2
Xz8AAAAAAGDZkzee07eev+asm7ODR5vZ22HDhg2Vc4fknnvuabyGAAAAAADA
89mzhw9lt73mlP69HT79cCPHU2U/aftLAwAAAADAjDqwkG1et75vLf/a7x5p
5Hiq7idtf2kAAAAAAJg9P/7iNf17O5x8Vbb3cPzeDik7mCRzsL80AAAAAADM
hocufXn/3g5b7mzkWMbZT9r+0gAAAAAAMGOOLGbXrz21bw3/vIUnGzmecfeT
7rX3gb3N1xQAAAAAAFarxZv61+/Xb8puORg/Y2mS/aR7bd26tfmaAgAAAADA
KvX5c0/q39th3QWN7O1w0UVvHjxD6bTTSz+3vzQAAAAAADTvqW9/Odvxmz8/
cO3+7Dsezw4ePRZ2PMP2k/7Q716V3Xrrrcv/v3nz+Z3eiEH5wyd33tx4fQEA
AAAAoPWOLGbXnvnq8WYXrd/Use3RZ6Z6bDs+tL1/j4lzz8ue+PZ3Ot//zOc+
s/z11BeRvvbs4UOl+1DbXxoAAAAAAGL83a3bsps+cUv257t2dPoC0sdc/v/p
Y7pM+pikTGDh0HR7H4r7SafPU39D8ftluUMuZROpB8L+0gAAAAAAwD333LOc
F1z1h7+XHT34z32XGZY75NLspTy/sL80AAAAAACsTilHSDOVHnnkkYGXSZnC
qNwhyWcv/czLXtb5vOn7BgAAAAAAxEr9DqMuU6XfoSjNXkp7VTd93wAAAAAA
gNlTtd8BAAAAAABgFLkDAAAAAABQl3HnLAEAAAAAAAyi3wEAAAAAAKiLfgcA
AAAAAKAu+h0AAAAAAIC66HcAAAAAAADqot8BAAAAAACoi34HAAAAAACgLvod
AAAAAACAuuh3AAAAAAAA6qLfAQAAAAAAqIt+BwAAAAAAoC76HQAAAAAAgLro
dwAAAAAAAOqi3wEAAAAAAKiLfgcAAAAAAKAu+h0AAAAAAIC66HcAAAAAAADq
ot8BAAAAAACoi34HAAAAAACgLvodAAAAAACAuuh3AAAAAAAA6qLfAQAAAAAA
qIt+BwAAAAAAoC76HQAAAAAAgLrodwAAAAAAAOqi3wEAAAAAAKiLfgcAAAAA
AKAu+h0AAAAAAIC66HcAAAAAAADqot8BAAAAAACoi34HAAAAAACgLvodAAAA
AACAuuh3AAAAAAAA6qLfAQAAAAAAqIt+BwAAAAAAoC76HQAAAAAAgLrodwAA
AAAAAOqi3wEAAAAAAKiLfgcAAAAAAKAu+h0AAAAAAIC66HcAAAAAAADqot8B
AAAAAACoi34HAAAAAACgLvodAAAAAACAuuh3AAAAAAAA6qLfAQAAAAAAqIt+
BwAAAAAAoC76HQAAAAAAgLrodwAAAAAAAOqi3wEAAAAAAKiLfgcAAAAAAKAu
+h0AAAAAAIC66HcAAAAAAADqot8BAAAAAACoi34HAAAAAACgLvodAAAAAACA
uuh3AAAAAAAA6qLfAQAAAAAAqIt+BwAAAAAAoC76HQAAAAAAgLrodwAAAAAA
AOqi3wEAAAAAAKiLfgcAAAAAAKAu+h0AAAAAAIC66HcAAAAAAADqot8BAAAA
AACoi34HAAAAAACgLvodAAAAAACAuuh3AAAAAACA+fDUt7/c6Se45557Oh/v
euR7jR9TL/0OAAAAAACwAkcWs8tPPjXbuHFjx4YNGyp/nj6+9OSrsoVDxwbe
/rOHD2X373hXtvG005fX87us35S946NfyA4eHXwbkfQ7AAAAAADA5J791EXl
eUBFL113weDc4chiduMZL+667La7v5Ed/KeD2T9+bU/X907a8L5s7+GjjddD
vwMAAAAAAEwm9SIU1/4nsebCj5T2KqTbvu01pwzPFY4sZtt//cRlUu9E09mD
fgcAAAAAAJjQ4k1dGcLLz/q17Nw3XZJt3bp1oHdvfWPXdV616/HS237yxnO6
Lrft0WfKj+HAQtcMpjVX7mm0JvodAAAAAABgMg9d+vLlXoQ79j9V7XrH94PI
92bY+WRJf0JvlrDlzqG3uXjlL3dlFFv2Pd1YTfQ7AAAAAADA+I794KFs87r1
nT0Xxplt9OxnLz+RJ5x1c+mMpd5eh7fe+/fDb7en72JUTjFN+h0AAAAAAGB8
x+7bNnz+0QBfecua4TOWjixm16899USOsH5TdsvBEblGsYei6nWmRL8DAAAA
AABM5uA/HRzvOj0zlq797pH+y/T0LrzojA+W9kT0+vy5J3Vd7xW7v9NITfQ7
AAAAAABAjLxHIs8T9j/Xnyfke0YUZyZVyR0ee/+m7usNmOE0bfodAAAAAAAg
RjFTWLP9gdLL9PYtrNn1rUq3/eMvXtN1vbTvxMKh+NxBvwMAAAAAAATo2YOh
dMZS7z4NQ/KJPj3zmZrKHfQ7AAAAAADA9BX7EU7a8L7SGUspd9i8bn1XfrBl
39PVfkZJ7tDE3tL6HQAAAAAAYPqqzFgq63eYNHcY67o10u8AAAAAAABTVmXG
0pJji7dnG087vdHc4VfPPDPbsGFD9jMve9nEH4vHkP5/JXZ8aHv2V/d8pdNH
cc899/joo48++uijjz766KOPPvroo48+tuZjWvNofN0KgLl07L5tJ+YfnXxV
+Yylnss1lTuk7KD3dpq07brrOj0UAAAAwHSldfBk7wN7Ox+bPp62y2v9D//w
vezZw4caX78CYL5UmrGUHFiobX+HtuUO6TwAAAAAoH75++60Bl5cE2/6uNom
r3Ne42K9U/bQ9PoVAHOkZ8bSFY8drnzZleYOQ3/WAAf/6WBHer4r+3zU/39y
583LP/+8c8/rfG8l0m2m48pz//SRE1J9iq8Jmz6etjt68J+7crCmj2c1UO/4
euc1b/pYVoPi+86mj2U1KL7Hb/pYVoMH796z/BhPr1eaPp62y9cGU83VO6be
+eM7P0eZ6UnrsvnjW71j6t27Dt70MbVNsaaPPPKI3AGAiVSdsdRxZLG2foeX
rrsgWzg05GdNSXqutK90nPQ6JX/Pk97/NH08bZfqna+Bq3eMYu7Q9LGsBuod
q3juW9PHshoUzzNs+lhWgzSruphjNn08bVc8J1m9py9fl81ztaaPp+3y3EG9
Y1gHj693/vrkiW9/p/HjAWB+FGcsrb36q8Mvf2Qxu35td7/D0LlMRTOSO6Tn
S7lDHLlDfL2tE8ayDh6r2Pvd9LGsBsXz75s+ltVA7hCreD64dfDYeluXnT65
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
bU/2x+98Q7bxtNNLeyh+besfZrvue2Lobey74T9ll73nvdlVf/h72bbrrlv+
+Md/eFn2jo9+oe/y9+94V+fyxcvmHy9+74dH3o+V7iud3+e+38ErL8h+946H
O7+jr7xlzUS/n6MHv5l97gMXZ+e9/rWl9Tz79/8s+/oPnxnr8fL439ySveO1
/zJ7yfpNy/fz2A8eynb85s933fYv7ryv8cd33eQO8fXW7wAAo+l3iGUdXL3b
Tu4QS+4QX2+5Qxz9Ds3UW+4QV2/9DsOtJHdIj+Ebz3hx//Uv/MhY57wf/foX
sss2nNp1G7/wujd31v8vee0r+m7/p173vuyO/U+VHs/jn705u/S3/k3pOvua
s27uO66UO2zdunVg1rFl39NDj33Sfoe0Vr/910/pu8/pWF7/yhO1WPO//I8T
/X7+4bb+PGiQt93+X4beVspGdv7B/9657M+87GXd9/PAwsDatW3WljlL8fXW
7wAAo+l3iGUdXL3bTu4QS+4QX2+5Q2y99TvEkTvE11u/w2Ar7XfYf8PZpevN
2x6tfg597/4QZZnCU9/+cnb5yaf2/ZyL7/7uwNv98RevqZQ7FGtx97vOiskd
Dixkm9et77pO733+p6/+addlxvn9FHswUj1Tj0jK3VL/Q8plym637Dbvu+ac
0p+fH/PeB/YOPMYqtZs3+h3i663fAQBG0+8QK71vyF8TmrMUU2+5Qyy5Qyy5
Q3y95Q5x9Ds0U2+5Q1y99TsMNjB32PWtoddL57/3nqufe9Wuxyv//GOLt/fl
AvufG7Bmf2Qxu35tf/Yw6Oel+3bba07pu/1hfRhle2SPWjsfe87S0v0oZign
bXhftvfw0fLLHlgozVuG5Q7FPoc1V+4pv58/eKj0ds/fd6jvtq76v2/IPvw7
5XOacj/3zj9Y7ocYdnvzTu4QX2/9DgAwmn6HWMX9HayDT5/cIZ7cIZbcIb7e
cofYeut3iCN3iK+3fofBBuUOaXb/J3fenO340PYuH7j8d/rOb89n7PzkWb89
cu+FLj3r72m9/paDA9bfcz19Avmx7nyy/3ql+zGPyh0Wb++bGVRnv0PfXg0D
jr3rmEqykIG5Q2GP75eefNXgPOP58ftBujKcpePOPy/OaCpmHqnPYmCGNKfM
WYqvt34HABhNv0Ms6+Dq3XZyh1hyh/h6yx3i6Hdopt5yh7h663cYrjR3GNM5
H3947J/72Ps3da95Dzg3v9ezn7qof718y5196+WT5A69WUjduUPvWv/aq786
+j6XHNOg3KGYafzs7vvHvt1hOUjv/Rz2O2vr3zb9DvH11u8AAKPpd4hlHVy9
207uEEvuEF9vuUNsvfU7xJE7xNdbv8NgA/sdlmzefH72q2eemf3GhlcNzRzy
/oA1r7wg23b3N6r97AnW94ddd9B6+SzlDmVzn6ruu9x3P8pyh+L+zkv1uPa7
R0b+7nuPJzlv4clK9zP9jJH9KS0jd4ivt34HABhNv0Ms6+Dq3XZyh1hyh/h6
yx3i6Hdopt5yh7h663cYbJx9pdNlv//Ew9mDd+/JrnnTrwzMIdJ8nVHr0b3n
/Vfai7ngoUtf3n/MPXtSzFy/w4GF7suNmIM09H6U/H5695lIucB5557XyY56
nff613aU/f4G9VKMvY9FC5mzFF9v/Q4AMJp+h1jF/R3sKz19cod4codYcof4
essdYuut3yGO3CG+3vodBhsnd+iV9ibe8Zs/X7p2PWqvhnFmE5Up3Ztgy50j
79s0coeq6/G986FGHsuw+1Hy+6ljXlbyojM+WHpccgf9Dk3UW78DAIym3yGW
dXD1bju5Qyy5Q3y95Q5x9Ds0U2+5Q1y99TsMN2nukHTWxLf86/Lz5ntygK7r
9PzMsdewS/aXLlvHn5V+h9Ls4MKPVModSu9Hz++n9/ZTz8nXf/hMZ602SY/9
4sdhBv07kTvIHZqot34HABhNv0Ms6+Dq3XZyh1hyh/h6yx1i663fIY7cIb7e
+h0GW0m/w7Iji9n1a0/tu42kbI+BWnKHsr2WezKFWZuzVHaf9z9XU79Dz+9g
GpnASntU2sCcpfh663cAgNH0O8RKr8/z9/TmLMXUW+4QS+4QS+4QX2+5Qxz9
Ds3UW+4QV2/9DoPVkjs8X7Ln8HFrr/5qtZ+5ftPYucOofodZmrM00bEMu25J
7tBVjyns+azfQb9DE/XW7wAAo+l3iFXc38E6+PTJHeLJHWLJHeLrLXeIrbd+
hzhyh/h663cYrK7c4fnFm8pnLQ1YWy/7maPW97scWcxuPOPFM5E7TDxnqWLu
UFavstxh3OMel34HuUMT9dbvAACj6XeIZR1cvdtO7hBL7hBfb7lDHP0OzdRb
7hBXb/0Ow9WROzz72csr5w7pcf+Vt6zpu+z5+8b491Ch36Hsvo1c6z+wsOLc
YVDvRt+cpZOvyvYeHt2TMMmcpUG9Jiuh38GcpSbqrd8BAEbT7xDLOrh6t53c
IZbcIb7ecofYeut3iCN3iK+3fofB6up3OHbftrH6HcrmMg3ah7pU2f4OI/Za
bnrO0m2vOaXvPpftf1Hld1T2+ynbP6JKrtH3s7b86+zsOx4f+TtbzbmDfoe4
eut3AIDR9DvEsg6u3m0nd4gld4ivt9whjn6HZuotd4irt36HwaaeO1z4kfJ1
/pK5TGOtYx9Y6Ot36F3Dnyh3KLnduvaVfuz9m/ruc9WehL77setb1X6PPZcb
+Xj41EWd671qV3/uoN9B7tBEvfU7AMBo+h1iFfd3sK/09Mkd4skdYskd4ust
d4itt36HOHKH+HrrdxisrtyhbG5S8ordA9YKS/ZnGGfWUu9cpxed8cHSeU5j
5w4leUgd/Q6d4zm+pj9uT0Lp/bhyz8jjGDcbyLOjQfOf9DuYs9REvfU7AMBo
+h1iWQdX77aTO8SSO8TXW+4QR79DM/WWO8TVW7/DcCvNHQbt7TBqXbrselX3
Wu7NOc5beLLSfRu1p8L+G87uO6YrHjs89Fgqr8eXzHDKM4RxZz+V1qmkVyM5
acP7RuYD//TVPx2ZFfXlGgP2sWgz/Q7x9dbvAACj6XeIZR1cvdtO7hBL7hBf
b7lDbL31O8SRO8TXW7/DYCudz/ODv9pZmjkMywKWDeh5eOO9Twy93rHF27uP
dci+EFVnG6U67L/57aX3Y1QGM878obLjSX7u9/6y8u3n+UnZz3jo0pcP/H28
46NfyPY/132dYz94KPvkxWd2ZRS9l8npd5A7NFFv/Q4AMJp+h1jpvUP+mtCc
pZh6yx1iyR1iyR3i6y13iKPfoZl6yx3i6q3fYYgh58gP6gs4evCb2b27P5Zd
tqH/3P3cL+68b/Kfv35TdsvBAT0JPef+j+pfGLjvxG9fnX3qb/42+/4TD2ef
u/ny5WP4ybN+O9t42ul9lz/79/8s2/vA3tI1+b61/jGOv/eY7tj/1PJln/r2
l7Nd73rDwBqnn7N169bstRd/4kTvw4DfZ9EvvO7N2Xnnntd/P5dub+eTg2tZ
dj+HXb6NzFmKr7d+BwAYTb9DrOL+DtbBp0/uEE/uEEvuEF9vuUNsvfU7xJE7
xNdbv0O5tK69/ddPGbpG/Uub39RZ277sPe/tvId5/SsHZw35WvTv3vHwWMeR
zrnvW4s/fjvFWUKpz6E3cxh1vn36nd/2muH3sZi1LP6/B0r7P3K9ez38+IvX
lF4u9VQMnJ10YGFg9jCJ37ju8931XKpTWXYy6ve27dFnBtbx724dvG/4qP0p
2kS/Q3y99TsAwGj6HWJZB1fvtpM7xJI7xNdb7hBHv0Mz9ZY7xNVbv0NByb7J
dUjn0G+7+xuV9mYok/4t3HfNOaW3nbKP3rwj9R8MmgfUK+UaZfOcetfP89vr
zR3Oe/v27K5Hvrd839K6/iWvfUWluqT3fRff/d3+4zqyODLz6WQr6y7o/Oze
/Sx+7p1/0OnXGFiDAwuVbr/zMy75aPntLB3jjt/8+Uq3kX5HaY7TpL//eSF3
iK+3fgcAGE2/Qyzr4OrddnKHWHKH+HrLHWLrrd8hjtwhvt76HU7ozPPfeXPH
n+/akd30iVs6H5MdOz+x/L1e6fvF69x6662duqZ1wTrznDTD6XMfuDj7jQ2v
Kl3bvvbjf519/YeDz8sfJP3ui/OU8nP8z33TJdmOvX/fdbnbzvnp5XX90nX0
I4udWqQ6JL31yT92avqh7V2zk3qP6R+/tie75k2/MvC+5j8/9WykGVA37P7S
WPf/8c/enF36W/+m7/ZfftavZZdcd0cn0xhWs/s/9Kel9633cZGkx0/bex/M
WYqvt34HABhNv0Ms6+Dq3XZyh1hyh/h6yx3i6Hdopt5yh7h663eYT9P695Fu
dxb/7U3zmPL7PIv3e57od4ivt34HABhNv0Os4v4O9pWePrlDPLlDLLlDfL3l
DrH11u8QR+4QX2/9DkAd5A7x9dbvAACj6XeIZR1cvdtO7hBL7hBfb7lDHP0O
zdRb7hBXb/0OQB3MWYqvt34HABhNv0Ms6+Dq3XZyh1hyh/h6yx1i663fIY7c
Ib7e+h2AOuh3iK+3fgcAGE2/Q6z0vjJ/TWjOUky95Q6x5A6x5A7x9ZY7xNHv
0Ey95Q5x9dbvANRB7hBfb/0OADCafodYxf0drINPn9whntwhltwhvt5yh9h6
63eII3eIr7d+B6AO5izF11u/AwCMpt8hlnVw9W47uUMsuUN8veUOcfQ7NFNv
uUNcvfU7AHXQ7xBfb/0OADCafodY1sHVu+3kDrHkDvH1ljvE1lu/Qxy5Q3y9
9TsAdZA7xNdbvwMAjKbfIZZ1cPVuO7lDLLlDfL3lDnH0OzRTb7lDXL31OwB1
MGcpvt76HQBgNP0OsYr7O9hXevrkDvHkDrHkDvH1ljvE1lu/Qxy5Q3y99TtM
397DR7Mt+57O1u49uGzDIz/Kdj55tPFja6P9zx3LrnjscFe9E/WeLv0O8fXW
7wAAo+l3iGUdXL3bTu4QS+4QX2+5Qxz9Ds3UW+4QV2/9DtOzcOhYtuYz33vB
rm+VW/reWY8+lR08eqzx4513A+td/P+lz1Pmo971kzvE11u/AwCMpt8hlnVw
9W47uUMsuUN8veUOsfXW7xBH7hBfb/0O05HOrx+YNQzIH1JfRNPHPa+66j0s
5ylc5paD6l0nc5bi663fAQBG0+8QK72vzN/Tm7MUU2+5Qyy5Qyy5Q3y95Q5x
9Ds0U2+5Q1y99TvUb+AaeP75kHVxa+ErrPegPocBzF6qj36H+HrrdwCA0fQ7
xCru72AdfPrkDvHkDrHkDvH1ljvE1lu/Qxy5Q3y99TvUa+w+h5I1cn0PU6r3
gBwizWdq+n60gdwhvt76HQBgNP0OsayDq3fbyR1iyR3i6y13iKPfoZl6yx3i
6q3foT7p3PmBa93j9D18xhpiFZ39HMrqOWI/jbLfQ9P3pQ3MWYqvt34HABhN
v0Ms6+Dq3XZyh1hyh/h6yx1i663fIY7cIb7e+h3qM3Q/43HOxV/63PyfCeo9
qrZDcp4rHjvc+P2Zd/od4uut3wEARtPvEMs6uHq3ndwhltwhvt5yhzj6HZqp
t9whrt76HeqR9mUoXdsuO7++4lr5/ueOdWYupY906+otGVTjsnrrMZkauUN8
vfU7AMBo+h1iFfd3sK/09Mkd4skdYskd4ustd4itt36HOHKH+Hrrd6hH6T4D
VXKGYevk4+QUjK+nvgeP2udhJcxZiq+3fgcAGE2/Qyzr4OrddnKHWHKH+HrL
HeLod2im3nKHuHrrdxgtnV+f9hK49rtHsvP3HepkDLnO2vWofGCcngdZw3iZ
QZXaVtnvYelj6llp+rE2z/Q7xNdbvwMAjKbfIZZ1cPVuO7lDLLlDfL3lDrH1
1u8QR+4wfemc7i37nj6xZl5Yf93wyI86c32aPsbIWqT7m9ab03z/sx59qnqe
MG4vwySXnXRGE4PrNqSmKVdq+jE5z+QO8fXW7wAAo+l3iJXex+evCc1Ziqm3
3CGW3CGW3CG+3nKHOPodmqm33KF+aY095QpV1q/Tuvu85w/p/qYehbQPQJ6z
VMoUJpl7VGHf4kq3M84a+rDz/VfL12qur9xhZcxZiq+3fgcAGE2/Q6zi/g7W
wadP7hBP7hBL7hBfb7lDbL31O8SRO0xHmhNUeb5P4XKzug6b9yik46u1R2GS
6457nTrzDiarzZB9qNMcLfs8TEa/Q3y99TsAwGj6HWJZB1fvtpM7xJI7xNdb
7hBHv0Mz9ZY71Cet0Y88H3+INH8o6liLPQrp56b+jLF6FMZZ51/JOvZK5y+N
83MYbFRNh2U5Ix4/bej5iSZ3iK+3fgcAGE2/Qyzr4OrddnKHWHKH+HrLHWLr
rd8hjtyhfhOto/es19ax325aw833Zh6rR2Ga6/9V+wrGXb+e5Lo9l0m1afqx
M8s6PTwrzXWq/D6XpBys6fs7D8xZiq+3fgcAGE2/Qyzr4OrddnKHWHKH+HrL
HeLod2im3nKHevTt5zBpX8BnBq9p5XszV+5R6D2GlfYojLrsqHX/qufNH5ff
tzSPJ93nlKWkNfBUi859Hud4hxx7ut2mHz+zbrneK8mCxnicpbzMDKbB9DvE
11u/AwCMpt8hVnF/B/tKT5/cIZ7cIZbcIb7ecofYeut3iCN3qE9aH13RzKCe
r5fuy1zXmu44x7PSnKHs9gp5QlpbTvlJ6vFIeco468ydmVaT5iOFy+h1qKbS
viXj/B4GPXZK/i3IhfrJHeLrrd8BAEbT7xDLOrh6t53cIZbcIb7ecoc4+h2a
qbfcYeXS2vmKc4CqvRIryTQq5h5jZxA9eULeo5DmPBV7FOq2Zd/TK665c+qr
S7/PsTOnnsfIxPnc0tdmde/1JpizFF9v/Q4AMJp+h1jWwdW77eQOseQO8fWW
O8TWW79DHLnDyqX19LSuPtGa/7jrtuPkBuPkFlX2SShkCmm2U8pZ0tyjcXsU
pqEz32rcWhy/T9PKQ9os9ahM9Fhd+v987+jU39I3t2nUY7bw/fQ7b/px1zT9
DvH11u8AAKPpd4iV3sfnrwnNWYqpt9whltwhltwhvt5yhzj6HWL9xV33Zjfs
/lKHenfL91FI66Mj92Ze6Rr/uLezklk3JWu80T0K09A5D3+MuqT7utrXrVci
ZU7j9NGkepc9ntLXlv9NTfAYX80zmOQO8fXW7wAAo+l3iFXc38E6+PTJHeLJ
HWLJHeLrLXeIrbd+h+lK64Wl63zH1/rSeexNH+O0pfXmtFaZ781cupfCJOdz
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
K5d6EurqcchvZ6LZpHTJcwe5Wgy5Q3y95zF3KJpoBlMhr43cH17uEEu/AwBl
0mv63pwgrfencxJ+8Fc7s3dvfWO28bTTu77/6n9/VbbrvifKb7Okd2LN9gcq
HcuxB3fORO6g3yH+MZi/JjRnKabecodYcodYcof4essd4uh3WLmudbNh80PG
mcH0GWssdSjmDvO6LjtP5A7x9W7Lumx6jz50Vt2w/aiPz2BK+e80j9GcpVj6
HQAodWChL1eoas2FH+l7vXDsBw9lm9et77pc2kOv0rH07AuR5x/RNdHvEKu4
v4N18OmTO8STO8SSO8TXW+4QW2/9DpNJszu71slW0NvQ+3kT58m0kVwtltwh
vt5tmyOW/q5ueORHo/PZAd+f5gwm/Q6x9DsAUObJG88ZmCuc9/btneeO9B7g
cx+4uDSfSPtAdGUPJf0Ok+YOY123RvodYlkHV++2kzvEkjvE11vuEMe67GS6
5ipVmVFedY5I8NyQttPvEEvuEF/vNj++r/3ukRf+dk4yw27pOufvO1Tr3o5y
h1j6HQAoc2DH5v4+ht++Ovv6D5/pu2zqZbjxjBf3X37LnScus3h7Xz4RnTvk
z3e33nrrRB8ve897l3/+r555ZrZj5yeyHR/anv35rh2dz8f9mJ6D02sdyqXX
JfnvLM1Zavp4VoPiOnjTx7IaqHesYu7Q9LGsBurdTL3z9/Vp7arpY5o1vTV5
471PjJ4FUnGWUu//X/7gkwN/LuNLrwOL61ZqGlPvxPuV6SvmPPNe72H/Nu/Y
/9Tgv60V8t/UA5Fuo656539Pmq5Z27VpjhgA9Xno0pePt6fCkcXsttec0pcP
5HvpHbtv2+TZQU25w4YNGyaaGzUt2667bvk1PSfkr7vz14PFtVmmV/NindV8
urUuqznTrXmx7k0fz2qg5rNRe07UpPjxL+66N1v76YcrnWv7s7vvz27Y/aUT
lx/RE5Euly7v8V/f787rwvh6q3FsvfPPix/nzaDHTfExVbyPQ/8Gj8h703Vf
/5kvj32M6W9zul66ftEkt0V1xVxNvwMAuc+fe1J378JZN4/ubyzJB5b3jj6w
UNv+Dm3KHXpfi9H/unTYa1fqrXex5sWP1F/rsroTU3f1jqu3msfXvFh7de93
+V9+sfIcpXTZ4nXz/KFsvSx9Lb+8utev97GtzjG1bvpYVouyms9r/Qcd96DH
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
c5UG1VvuEFdv/Q5x5A7x9fb4jjPL/Q5l0jrVyBlMgzKI4zl/eo5ust76HYDW
O7KYXX7yqf15w/pN2cXv/XD2qb/525mdh8fs0O8Qq7i/g32lp0/uEE/uEEvu
EF9vuUNsvZvqd0hzqSvNhFj6vMm1jzrJHeLrrd8hjtwhvt75c+Y8rIPPu3no
dyiT5hJ2egor5PuDZjA1ca6tfgdgVSjJHd52+3+RNTAW/Q6xrIOrd9vJHWLJ
HeLrLXeI01S/Q9c5mEPWPuZ9rtKgessd4urtfPA4cof4epuzFGfe+h3KLM9g
GpH1D8on0vWj1sL0OwCrQk/u8IrdQ/7eLd40dB5TmTUXfkSGsQrod4hlHVy9
207uEEvuEF9vuUNsvSP7HZbnKo0613Lpa6kfoun61E3uEF9v/Q5x5A7x9Zar
xZnXfocyaQ/p0vy/Sj/E8RlMqY9i2vXW7wC0XiF3eOnJVw3v8V68Kdt42unj
5Q5b7pQ7rAL6HWKl95X5ex5zlmLqLXeIJXeIJXeIr7fcIU5kv0Pan2HgXKWe
Hoe2zFUaVG+5Q1y9rcvGkTvE19u6bJw29Dv0SmtRXTOYxpzFlJ6vp3WOgH4H
YFUo5A5rr/5qpescPfjN7O9u3TY4a7hyT/b1Hz7T/H0jjH6HWMX9HayDT5/c
IZ7cIZbcIb7ecofYekf0O4w8r/L4mkZa/2i6JtMkd4ivt36HOHKH+HrL1eK0
MXco6jo3oMr+Dz2zmc7fd6jWc2r1OwCrQiF3WLP9gfGue2Ah27xufVfmcM7H
H27+PhFOv0Ms6+Dq3XZyh1hyh/h6yx3iTLvfIc1hGDlLusVzlQbVW+4QV2/r
snHkDvH19viO06Y5S8Ok5+3OuQJVZiL2fq/GGUz6HYBVoZA7nH3H42Nf/7H3
b1peb05zmqY9A4/ZpN8hlnVw9W47uUMsuUN8veUOsfWeVr9D59zJARlD75yG
1TJ3VO4QX2/9DnHkDvH1ljvEaXu/Q6/0vHzWo09Ntgf1Cs4nSD83771Y++mH
XzDFeU4AjSrkDlv2PT329Y89uHN5vbnqnCbaR79DLOvg6t12codYcof4essd
4kyj3yGtGfTNVRqwNpHWNJquQRP1ljvE1du6bBy5Q3y9zaGJs9pyh6K05l/a
u1jh3IL0/+m5ftT5BWlfp/y1Q8oahu0BtVrOVQBWgRXmDmmv6eV9Hcad00Rr
6HeIVdzfwb7S0yd3iCd3iCV3iK+33CG23nX2OyzPVRq2l8PxdYhbDq6+cxfl
DvH11u8QR+4QX+/8OVO9p2+1zFkapm8G0zizmI5nBguH+jODKx47XO21wyp/
DQG0kNyBGuh3iGUdXL3bTu4QS+4QX2+5Q5w6+x261g2GrEms5nMV5Q7x9dbv
EEfuEF9vj+84q7nfoVd6Dk/rY0P7Hwa9Djj+tTRLKd1Wpf7IAZlEet3RdC0A
VkTuQA30O8SyDq7ebSd3iCV3iK+33CG23ivtdyidqzTg/MTz963utXa5Q3y9
9TvEkTvE1zt/zlzt6+AR5A7lUt9B6T7UI14PVNorYtTX9D0A807uQA30O8RK
7yvz14TmLMXUW+4QS+4QS+4QX2+5Q5yV9juMM1epbLbCaiN3iK+388HjyB3i
623OUhxzloZb3p9hUJZQ8bVC5eyicJ2m7zvAxGYpd1g6lmvPfHW27dFnmq8L
Y9HvEKu4v4N18OmTO8STO8SSO8TXW+4QW+9J+x1S70KV2Qqrea5SL7lDfL31
O8SRO8TXW64WR79DNen5vtJ+DVXmMVXMLtK+1U3fb4CJzFDucOzBnZMfB43S
7xDLOrh6t53cIZbcIb7ecoc4k/Q7VJ6rtMTr1vJ6yx3i6m1dNo7cIb7e+ePb
Ovj0yR3Gl/ocq75eqNzzMGD2UtP3FWAis5Q73LdN7jCn9DvEsg6u3m0nd4gl
d4ivt9whtt7j9DukNYRKM5iX/j/NYGr6/s0auUN8vfU7xJE7xNdbrhbHnKXJ
pRlMGx750Xi9DWPu9eA1BzCXZih3+Py5J8kd5pR+h1jWwdW77eQOseQO8fWW
O8QZp98hzTGo8v7fXKXR9ZY7xNXbumwcuUN8vT2+4+h3qEfXDKZx84chrz3S
7TZ93wDGVsgd1l791fGvX8wdlv4WTnIMx37wUHbHH7x++XbkDvNHv0Os4v4O
9pWePrlDPLlDLLlDfL3lDtOVMoH0ejLlA2s//fDye/f0/2nPhnReYu/lu+Yk
eN8/MblDfL31O8SRO8TXW+4QR+5Qn7FmLw3LKApfs8cDMJcKuUMnO3j1r2S/
euaZlfzS5jctX69j/abK1002bz4/e/0rT+2+DbnDXNLvEMs6uHq3ndwhltwh
vt5yh+lYzg8qzDHIexZuOXi02jmH5ipVIneIr7d12Thyh/h6298hjjlL9el7
LVJh7+hR5z7IHYC51JM7zAK5w/zR7xDLOrh6t53cIZbcIb7ecof6pUyg8169
hvf2vV9L6wdN3795IXeIr7d+hzhyh/h658+Z6j19+h3q09nroWq/Q8XXLNd+
90jj9wtgbHIHaqDfIVZ6X5m/JjRnKabecodYcodYcof4essd6tXJHKq8j6+Y
MxS/533+eOQO8fXW7xBH7hBfb4/vOHKH+ux88ujA3slJ93nQcwnMJbkDNdDv
EKu4v4N18OmTO8STO8SSO8TXW+5QnzQraew8oco5h+YqTUTuEF9v/Q5x5A7x
9c6fM62DT585S/UZ+Npkkr6H469Jmr5PABORO1AD/Q6xrIOrd9vJHWLJHeLr
LXeoz/LejVXPGawwb9lcpcnJHeLr7XzwOHKH+HqbsxRHv0O9VrTHQ48rHjvc
+P0BmIjcgRrod4hlHVy9207uEEvuEF9vuUM99j835vmEFS6bZiM0fb/mmdwh
vt76HeLIHeLrLVeLI3eoV+Weh2F5hF4HYN715A5vu/7j2RPf/k7neT1Jzzf5
573y7w27zLDrJd9/4uHscx+4ONt42ulyhzmm3yGWdXD1bju5Qyy5Q3y95Q71
6Nu3seq5hAN6IPQ5rJzcIb7e1mXjyB3i650/vq2DT585S/W75eCAfR7GOF/C
zEdgrhVyh0b3zTuwkG1et17uMKf0O8Qq7u9gX+npkzvEkzvEkjvE1zuv+f/3
je9kz+/5SsfRh/dlRw/+c+PHN0/GmllQ8ZzDpu/TvJM7xNdbv0McuUN8veVq
cfQ7TEeakTRWf0Ph85RbNH38ACtyPHdYc9bNnT6wJo9l8cpfljvMKf0OsayD
q3fbyR1iyR1i3XvTX2Y/POed2fNrfrncyb+VPb/jdmuII0y0n3SFnKLp+zXv
9t51T3bXn/xn6+BB9DvEkjvE19vjO47cYXo6fQ9V96HS5wC0yZHFTp/B2qu/
2vixPPupi+QOc0q/Qyzr4OrddnKHWHKHOMf+6GOD84ay/GGPnrbcwqFj2fn7
DvXv0zgsY9j+QLbmyj0npP8fkUk0fR7OPOr06rz5D194zPY+hv/tZR7HU6Tf
IZbcIb7ecoc45ixN31mPPjXy/Ah7SAOtcrzfIb2Pa/xYFm/KXrJ+k/385pB+
h1jpfWX+nsecpZh6yx1iyR1iyR2mr7MemNZfq2YOBZ2sYgbuQ6R0jl96372c
MQzqUxjw+XsuvD775r94Q2k9/+FFr+98f1AGIXeorjMnrOLj+tgv/Af5wxTo
d4gld4ivt/0d4uh3iJNe57zx3ieytZ9+uOPyB5/U3wAAA+h3iFXc38E6+PTJ
HeLJHWLJHQJMmDks23F78/dhStI6fzrnpDRjGGev6CWvvfgTnVyhSk3T5d72
tg/23X7T9ZgbKUPo7W+Qo4XT7xBL7hBf7/z1oHpPn9whvt753+8nvv2dxo8H
YJrSPob37v5Ytu2667LL3vPe7Ko//L3sht1fyr7+w2caPzZmn36HWNbB1bvt
5A6x5A5TljKDlWQOx6VZNo3flxVKGUOacZzmDHTNS+r9OMH+0DecffVEdb3l
zHcv30Y6pqZrNBdS5rCCx7LsoT76HWLJHeLr7fEdx5ylZuot5wHaLK2n3Xvl
5uU14zL/6qqPZ/uf03POYPodYlkHV++2kzvEkjtMTzqvY5JzwkulnokZuE/j
SHsydM1LGpUpjLsP9PGvpblJK6ltyizMVK6mM1upjse0mUu10O8QS+4QX+/8
9aB12emzDh5fb3PEgDY79oOHOns7DMscci9dd0Hn/LSmj5nZpN8hlnVw9W47
uUMsucP0jLWP9Jz3PKRzVK797pH+eUlVehnGmKXUd70r99RS27N//88ar+E8
6OwfXcfjOWUXM3B/5p1+h1hyh/h6m7MUR+4QX2+5A9BWaR3tttec0pUtvOOj
X+g8n6fvpfPz7t/xrmzzuvUnsoeTr7LXDaX0O8Qq7u9gX+npkzvEkzvEkjtM
T2cv3Rpzh+cv2974fUryPRk2PPKjwb0Mo/KDcWYrHb9c+llJ+tl5L25tNbYO
PlKn16HOx7OehxXT7xBL7hBfb7laHHOW4uttfwegrQ7s2FyplyH1RNx4xouX
L7tm+wONHzuzR79DLOvg6t12codYcocpGrXOPez/B10nZQ/B7v/Qn2aXXHdH
53Xg2LOSxpiX1OuVH9iT7dj5ieyb7/5P5ce20v26e6Xba6C+86L2HG0OZ4fN
Gv0OseQO8fV2Pngc/Q7x9fb4BlrpyGJ2/drj85XWb+r0xA+9/IGFE30PS5c3
b4le+h1iWQdX77aTO8SSO0wu9Yd2Zh+l87Z33N6Zq9SZQ5PWU+va1yHYN//F
Gzr7HZz39u3Z2qu/Olm+MM7cpNTHsPRz0n5i6efu+5/+z2o5TRWTZDvEmoF/
x/NMv0MsuUN8veVqceQO8fWWOwCttHjT8hpxep9X5TrF/ogt+55u/j4wU/Q7
xErvK/PXhOYsxdRb7hBL7hAnzU1J55InX7/+Iy/MUZmB42pa+nefatHJFHbc
/oLLtncyhc453y1Zv/6HF70+u+XMd2dve9sHO/skrLiXocplUs/E0s9Ke0Ev
vOr/6hxD03WgQUv/tjr7r8/Av/t5pN8hltwhvt4e33HMWYqvt9wBaKVC7lA5
Qyhc5/x9zqWhm36HWMX9HayDT5/cIZ7cYbo6a3xpbsqgtfOlr3fO22/pWmC6
X518ZVCPQksyhTJpnT+t93cyhqozk4b1LlTIHNI5LinXSPnG1DOGFv/uWi/9
7pb+DXb2Yl/6t9nWvz910+8QS+4QX2+5Qxz9DvH1ljsArVTIEK547HCl6zz7
2cuXr/OK3d9p/j4wU/Q7xLIOrt5tJ3eYns6a3jjrgOk8/xk47qqWexT2fOWF
+zpLPQrj/PwajjXNK0pzi1578Scmn5dU5es9vQzp5w2dlzQrmn48tMWoWVYr
mXW1dNlOJph6ItK/6xn4GzNr9DvEkjvE19u6bBy5Q3y97SsNtNGx+7YtrxGf
t/BktesVsoq33vv3jd8HZot+h1jWwdW77eQOUzLpHrypN6LhYx/WozATmUKJ
n/u9v+yc4x/xs9KeDOlnDd2TYVhvwjj7MeSX2f5A9tJLPro8L6nperM6dP69
p79JS38LzIXT7xBN7hBf7/z1oHpPnzlL8fWWqwGtdGAh23ja6Z014hed8cHs
4NFjI6/z+XNPWl5XHrkPNauOfodY1sHVu+3kDvXrrNGvZK0v9Q5M69h69mae
qR6FCaVz/vMZQwMvN8554Pn3ju818en//MXsnI8/XH1W0iT5Qs/313764ezf
feT/6fzs5T0vjmdAg/6/93u1q/vxkff4UG7S7HKaVvl8Jv0OseQO8fX2+I6j
3yG+3vodgDZKa2i3veaU5XXiV+16fPjlCzOWTtrwvmz/c6NzClYX/Q6xivs7
2Fd6+uQO8eQONUvrhXWs7+0Z7+9N3qOQ782czz2a5R6FSdY8O/dl6T51spKl
+3jtx/+6a72+rl6Ane/+s/HmH42793PxskvW7j3Ymce59/DR5h/DA3QeU1Xy
mkH/32sGentmWWdNv0odm3Z8PlOnL2rp70+b+wD0O8SSO8TXO389aB18+uQO
8fXW7wC0VmFuUvIb132+tO9h/81v77pc5X2oWVX0O8SyDq7ebSd3qE9nHaqm
NcLO+vrx2x3Uo7C8N3PT6441rV2m+9y5X0v3Lz+fOp/vMui86r6egu0PrHg/
5ZRd1NLLULYv9PGM4fx9h7KFQ/N1bsnyOnhNzO2pIGUzNf376vy7Sn9X8v/v
/X6Nv9vlf8tLf6/a9HvW7xBL7hBfb3OW4pizFF9v/Q5Am+2/4eyuTOEl6zdl
7/joFzp/+77wyT/ONq9b3/X9zqyAGThuZo9+h1jWwdW77eQONaqr12FKa4GN
KOlR6NRpRJ5QReoPKFvvHzpvaYS0d0OdvQwpY9jwyI+yWw4erTRrc9Z17ZW+
gsdnZ016Bu7PrOv8+1jp34HUj1DYJ3o5x0z7R6ffQ9DfmTbsFaHfIZbcIb7e
crU4+h3i663fAWi73n6GQf77a8r7ISDR7xArva/MXxOasxRTb7lDLLlDjWZx
Hvs0TdijUJe0pj9wzX+CvodOn0PVPRxK+h3S8SRpb662zslMv9Plc+bHfKx0
rYOvsn0BVqKzRr+S/oSU81X4vaZ/t51/w1F9VHO4V4R+h1hyh/h6W5eNI3eI
r7d+B2A1OPaDh7IP/85rS/OGV//7q7I79j/V+DEy2/Q7xCru72AdfPrkDvHk
DjVqOgeocz3w+Jpgb49COk96VtYHS+cY9eQD77nw+pFrqCmfyPemrpwzFPZk
mLd5SStVug4+xmNrXs91b1KnP6FqzYuXG3OfmL7fc7r+8X1iov725POZij0a
s0K/Qyy5Q3y95WpxzFmKr7dcDVhN0mvV7z/xcCdrTX/39DdQlX6HWNbB1bvt
5A71GDn7fsrz1MdZ18vnHjXRo1CnyvOOlvyrqz6e3XD21dktZ76709eQPqZM
Is1kKs0XenKGlDGc9ehTnYzBa7YJ+x5kDiuueeX9Hpb+fU+j1p3bPD6faaK+
lwksz2dqcK+IvB/kexddmf3wnHd2zGo20gZl9c73LW/62NpM7hBLv0N8vfU7
AMBo+h1iWQdX77aTO9Sj7j13J8kTij0K+TrdrPUo1CWt/Y+1x/MY8j0Zdj7Z
jj0Zpio9xkZlainrSvlW08faEmntvW8eUp4npj3nA9dm870iOmvCgXtF5Lnp
tOczdXKOUb0e6T6voK+E7np3Hkej6l1hdhjjkzvEkjvE11u/AwCMpt8hlnVw
9W47ucPKdda9Vrqn9LD1urIehePn2s5bj0IdUhawZd/TtWQMvXlF0/dtbh2f
x5Mep7mIdeHVbu9d9yz/DZ+VuT9N7xVRW85atbfkuM5eNx7rE+vas75ivfVP
1cv+DrHMWYqvt34HABhNv0Os4v4O9pWePrlDPLnD5JbPzRy0rrbS9ba0ZjcD
93NW7D189MRe0mWZQ4X9HoZe9zPe969Uep7M11H0ikxfep6ctdyhTHGviMj5
TBPvFTHpfhZmiU1kZI/DkHqbvVSfPHewn0YM/Q7x9ZarAW2X9pS+65H5+hv3
j1/b03mf3/RxTGr/DWdna866ufJ736e+/eXO81G+b9ws/r70O8SyDq7ebSd3
mEBaP4vYZ9UsiY407yjPBSrlBxN+Lc1Wavq+zrv8b8msr4O3xbzkDmU668XH
94qIms9U7MMZlA9MvAZeXAvX91DdmH0l6j095izFkjvE11u/A9Bm6b3Aba85
pbNWfO13jzR+PJUs3tQ53hed8cGZOmct5TeXn3xqtnHjxmzDhg2dj72fv/ys
X8te/epTO8f/it3Dn1fS7+b+He/KNp52+vJ6fpf1m7J3fPQLM1MD/Q6xrIOr
d9vJHarp7KOb5kBEzS9f5Wsp6Tk37eNcOUeYYKZS7//vf242nufnWf63JP1d
afpYVoN5zh16FfeKCJvPlByfz9TJk5MabrOTXcxATWddJ3uq6XfY9H1pg2K/
g3Xw6TNnKb7e+h2Atjv24M7OWvFL112Q3XJwtnsI0tr+5nXrO8f71nv/vvHj
KTqwY3N5PlAi1Xpov8aRxezGM17cdfltd3+jc45H6vUofu+kDe+bid4P/Q6x
0vv4/D29OUsx9ZY7xJI7DFdpn8uKOcLQ/++xWvfhXZ6lVGWv6GGXqTpzqbCX
dNP3vQ2KucO8r4PPgzblDmXyvSI658RHZhE1MG9ptFpnbtnbe8XMWYql3yG+
3vodgNXgsfdvemF9++SrZmINu9SRxU4/QTrONVfuaf54BhxbFWu2PzDwtoo9
KANzhaWft/3XT1xmFn5v+h1iFfd3sA4+fXKHeHKHAdK+qJOuiaxwbazzc5u+
/8FSL2ilPoZJ+h9GXWfp81npaZx3+ZxK/Q5x9W5z7lCms56fZtAF7hUxiZRX
d3o4lqTfjY/dH+vqLSnWu+nH5rwzZymW3CG+3vodgFWhcH79LPY95DOMZmWN
vdezn7porF6HYfV98sZzui6/7dFnyi97YKFrBlPTWYx+h+DHnHVw9W45ucMJ
K52l1Fn3yOeGT5o9rKL5SmmtP+2psJwBjLkvdOpRSHs/pNcqlfojBtyW+Ur1
0e8QazXmDmWa2CuCGTQDj8V5VswdrMtOnzlL8fXW7wCsGgcWlmcYpb0Drrn/
vzZ/TM+/MAcqP660Zr9waMbehx9ZzK5f+0Imsvbqr674d9CVJWy5c+jlF6/8
5a6MYsu+pxurg36HWNbB1bvt5A4vrFlNPEvp5N/qZBW9WUHKHsY+F/ffXrYq
Mof0+qIzS2nCvRnSdXuzgvT/Y/U9HN+nWuZQL/s7xJI7lMvnM4XvFUG9xpxP
aLbVyuh3iKXfIb7ecjVgNcn3elg+N/+Sj2Zf/+GA8+2n7chidscfvL5rH+V0
/mDTNer14y9es3x8K+0T6e11GLmHxfE9tqvmFNOk3yFGOn+2d0/TtZ9+uLPe
NTd7w88huUO8VZ077Lh94jkdnevt+crInKBS/0T6fpob0nQ9puyKxw6X9yUM
6lXo+Txdf9Q8pPP3HRrd+7D0tSbPH2izfB1c7hBbb7nDaJ016eN7RXT+fssi
2if1C6ZzCFLvS+qBmYHH3TyRO8SSO8TXW78DsNosr6MXbLruY2H5w/efeDjb
9a439M0mumP/U43XpldxL4YV9zoU+iYq5xi9+0rUkH1MSr/DdC3vaTpqb9Lj
a2BNH2/byB3irbbcoZMTpD1KJ1lzOr6mMdE5lcfXu354zjs7a14dqU+i5Wsj
qZ+ga5/oQTOVhuz3PMnzbTp/Il035cXF25rF8yraJP/7LXeIIXdYmUrzmUad
cy+/GOs5NLqWnYwpPefnMxBn4HE3q+QOscxZiq+3fgdgNerte8j9wuvenN2w
+0udDKKuvQ7TWsv+++/KPnnlJSfmPBX81OtK9lWeFcV+g/Wbssve897s/btu
z+56ZIK9IHt6F150xgcr3cbnzz2p63qv2N3Ma1f9DtPT2dd0jFkf9iOtn9wh
3qrJHdK6f5q3MeFaSdkspUnktW57vVNWMNYspZ4ehbTvQx0zkPK/J22v96wo
9jtYB4+rt9yhBpM+P9S1xt72/6/bCvZQSr/rTi9ihZ7F1cT+DrH0O8TXW78D
sFoV93Ie5Jc2v6mz1n7TJ27J/uKuezuvC9LfzvQclUvnJaSPqY8hfT/9Td39
J3+UvXvrG7v2Mijzc7/3lzO9dvqVt6wZevznvX175czkoUtf3jczqcp9f+z9
m7qvd9bNjdRMv8N0pJkbVTKG0u/JHmojd4jX5tyhsw63gllKnXWolFfUeExt
Ph88/R3sm6VUYX5S8W9p3X1k9huI1ebH9yySO9QonRM/jbXw/Gur5WP+ee//
D7rsLDjey5j3IK7Wf0t57pDod5g+uUN8veVqwGqWXt/cv+NdQ9fWp2L9puzy
B59s/P4P1dOfMMxvXPf5kedH9vYtpPWOKsfROxerqb239TvUL52XO3Ie+IhZ
4UnT96MN5A7x2pg7dGYpTLqGtJJZSmPUu03rssvz6SrOTiqbpTSt51O5Qyz9
Ds3UW+6wcp2ZS3WuZafnoBm4X7Oq8xzbdN4wRDpfId8rYrXMZzJnKZY5S/H1
1u8AsOTAQnbtma8OyRz+1VUfr2WGwbT19hmMkvKAgbOge/dpSLnD9geqHUtP
/tFU7qDfoX6V18pGnMNrv4eVkzvEa1XusMJZSp0531OeudCmuT/5Hgpj9YoV
vnbWo09NvVdM7hBLv0MsuUO9Ju6NK7Fa1qpXZNTz9YztpVHcK6KN85mK/Q7W
wadPv0N8vfU7AJzwj1/bM7X84ezf/7OwvavrkN5H5fOj7t39sewDl//OyLlR
A7OHI4t9e1uk+TqVjqUkd2hib2n9DvXqzFcasnf0uHs9NH1/5p3cId685w6d
9/47bp98PWIKs5SGmffcIeUE5+87NHhWUoW/l2kvnch6yx3i6Hdopt5yh3os
9zysdH1br0MldfU8pL6EzmuBpefyzr4N6Xk9IqPo2Sti3v8NmrMUS+4QX2/9
DgD9nvr2l7PPfeDi0n2gx/GTZ/12du3H/3qu8oZRUjbz4d957cD7XLr/Qkm/
w6S5w1jXrZF+h3oNzBzG2P+0+L10/m/T92meyR3izWvusNJZSum6TZyPOq/1
7pulNOpvZc/fyXTdqvsw1UnuEF9v/Q5x5A7166whr/Sc+Bm4H/Oiq97jZgXH
95EY1HvQeY5P5xUsPd/X2csy6pjy+UydHGsGalzV/8/e+QfbUZZ5vioZqNUa
hiqlqNRMFX+wOLvFWoxG0IyV0S0yZazB2YRIDRKoGWDVIlkJEBJ/JOXIr4oj
EYhh8BKJKEYWQpnAmEACDDuCBAKRiV5+mAv+QCcBie7iVAFmSKze83TOe/J2
n+4+/ePt5+3u8/njU+fce8/p0/3tvn3e9/m+z/NQZ0kX6izp602+AwBAOjKX
sNf7X/43fxHMnDkzMd4+a9as4MzzlgYrv7wm7EHdJa8hCenLfdMpb0vU4j33
RGNKhyY3DeVKtM13IN/BHeJLFYqd5axT7vu42gy+gz6ti4PLesaS8YPwfZIb
4XH/25bvIF5q2b4N8j7Jjai7ltIovfEd9CDfwY/e+A5uCePG8fh21s92zLmD
9Xdqp0o/poJ6h16EeALSR1rJixjUZ2p4rwjbdyAuWz/kO+jrTb4DAACUReZa
j62aP5zzsOjuyOsOPba6vHfgyHdYuPCc4C9PP7004iuZz//Td7wj/LkK39ow
Ec5bBRlvjsvzhx5+JFi940eFchlS/2at/53+nd2NOca2Prfjsr73ZRyet0Hv
Jx/YEvziwhWVaik9d8Mth7e7/eHIYxP0borO5vmd3//X8F42qqdNYo2l/n3w
ok0/jBxfHK1jsft4N0XfLj+38x1878s4PE/S2/c+tf25+bnod47Elu3vFc5F
sefPf/ofCsfy8+id9HPkb71tyPhAPj/0B/o5FLl8popehHgf8tkyxmnCOZD7
yY6bvxuuc2zC/ozDczNGacr+dPm5ucbx1QAAoAr3LXpndu/nfduc9Xco6zuk
5an4YvW11w7mrOPGWf/0vXJreEfkRvg+rrZix0+SfoZ6dW+i3jIff2X+paXX
Qcp7ZQ5t1rz7PNakz26a5su/++BhvyGv1xDP9+q9d809/zI4tiZqDvVrje56
emc9h3Ka2tewfH+M+g6S+PHjN36Na9+B5gO9M+L8ord4BHGtR40h7e+kNMxr
ZT/kM8R7UqvP1D82+Uy5niT2r3EO5LPSPDajte/rpGvYayHMtWc8CKhPc6O3
/IzvAAAApYn5CkO+g+P+Dp959vXC+9hE3yFt7N7FR4mJ/bd7Hh8dWyvT96FP
0tiSx3KP6Kj32IR9MI/husey6wt777NjEmn4vKabdp2LB5vLb0hB7qlZWvu+
nnhsxnXOY/1aN2F/uvIYx6yJlxit8NSafxj42knv873/bXy0NZR4uK236G/r
HSdN/yLnOGubxosY5Ys4pb9+Qj43zdsqq7P4GkXWdRj/oQnXSVcebd9BnnPv
qPeRfAcAAHDFs9fMjsbVn7H6WxyYdJbvMORp5ERqC5ZFvi8nblw72IcFZy4I
84PTcgmzHs1z+d6VOlXSP6yrj9LjZObT/7eSl5BVWynpdXJdNeHY2/YomDGi
XNtN2KeuPkpNZKO30dz8zsc+Ve4T/VfLwh6O5jryeSxZj/YcSPbR137IfTHs
E533Xhh7jbx3YueLkf9d+zN862we7ThNk6+LrjzKfdvcU5KuCx7dPcq1LDUj
zT1FxnNN2K+uPgp2nDCudxP2sSuP5j5txwmlHnvWa/Nu0/456XnSeY/8fPDQ
4HnYb+qL3zzcD0TJi7B7RciYp8x1HPa7LrG/cpx8h7p7NNe3kHZ981if3r5j
VgAA0F7iPRwivsKByeCG6dF8h2lrn8i3bUe+Q1Xku9Lsg/SK8K13U5Fzk+g1
FPUXivoTMW9CYnNTb/rrqdo2ZFxoYlYyv/e9P+OAGYMLXvahN28f6uFZwG8I
5/wt6uNpr7/y8fl37D94xG8Yg3ua7Tv43pdxwL6+5X7ue3+6jlkji956ept7
Shh3bsA+dRnbd2iD3uFYpO9FyFoIFS+iv+4i/EwZT40YD4VrPCrsVzhea4DW
XcD0OTY+pu/96Tp2X2n0BgCASlj+QNwbkDnZfWceFfUdNvwk13bf2Lo86jsc
szLY+fpB9eOzfYcLL7zAv94NQs51GE8runY3T+/UMq+NrQ2WeJ9vjZqO/I+a
MSG+gw523r3qZ09sKl83Webzvff71q5NektdwJH3qoz7Xpm6gk0A38GP3t58
zDED30Ffb3N9o3f92H132+A7JGG8iDBHQcYuCjkR4iuE/kA/J8LeHxf9KkKP
owHath3q/uiC7wAAAM7I8B2EeB2maeffkmu7Q+9bdLeX45PvSnyHIwzW7ub1
CcrkP1T0HOIeR1iD6WB71gtrgu+gj2YcfFBLqcxau/48OtxGA3Qri2a+g+Ql
JN4fk+rEJdzL5L0+8vpc643voIfdt9H3vowD+A76epPvoEcXfIckwnGMeAK9
MU3oAyjkRcjnuOyR3aY806ZCvoMfvfEdAACgKoeeXDeIyx99yleG60HE6iUl
viaBeJ7Egm17vRzfuOc7SLz+Sz8/kFwnJK+nYMfcDK48iVHbsv4ux+AjZ6bJ
4Dvoo+I7yFq/suv8WlhLKQsN36FwLaXYPUpq1HXFG/Vd12rcsH0e4uD1g++g
rzf5Dnp01XeII+ObMC+h70Wo9a2ugqwhaYB2bUbi4HZ/Ht/703Vs34H+DgAA
UAU7LyGxd0O8x8OM2aPr3/Tes/yY4zPzKLQYx3wHiX9JjY9KeQ0JNcrX7T1y
3odidGnrgFOe56rvlPL3+L6MM/gO+tTlO4QxGamFVHb+LD6F+BUN0MgldcXB
5T4puVR5PM+0e5h4ur71qUNv1t+jd1fBd9DXG19Nj3HxHZIYqs/UNC9C9qcB
OrUZfAd9vcl3AACAytj+QIafsG9iYaHchXiv6ulXPertGMcl30FyUM556rfZ
a3aLxPn7XkOaXyQxu0juQ4G1wXasbigXo0idp97f5j7zamfWGZcB30Ef177D
oJZS2Xls771tr6WUhWvfQXKmIr5nkXvYiPtiFyAOjt5dBt9BX+829TluO+Ps
OyQRjo36XoTLmkll6fJYTQN8B329yXcAAIAhDkwG27/6jWBi3beD7U//YmQ8
du9N87NzHazt2vkL0+auz6y19MgnpkXyI3yuTe9yvoPEzyTu7qwHQ79eSJFa
Rrlrk/Q9irR43SAWWHL/x7UGE76DLjJnfO6GW4LnP/0P4WOlWkYVaymF9QU6
UkspjedeeS0465++F7L8uw/mqvGXhnwPZXqcWflbY+RxEgdH7y6D76CvN/kO
euA7jMbuFRGOpUr2zyr0cx+pgYn3UB7jO7D+Xk9v8h0AACDOXe87NpJnIPWN
Nk+9mvjaX961PLePIMRzGNJyHux+EcJ77vE7vupavoPE7QdrdQv0RsjKJ5B4
WpV4XqQXa8JnFqlHInE9ydsYyqXI6a10tfZJGvgO9RPG9jPyEcLeg725ZO5t
VaylFNY0boAudZHa2znmj+bxAOQ1md5sjj7R41bTjTi4P72Jy9YPvoO+3uQ7
6IHvUBxTnynsi6XVK0I+ozeeC8eOvc/u+hoSV5DvoK83+Q4AAGAj86d4L2fD
qddvGcSVD+5/Pth85VmDv/3Z33839xrOSL2lGbOD1c+8Fn3Nvm3BwuNmHPEz
VmzxrksX8h0GPU/zxOFz1A6RbUld8zrW7sr6ZFmXLKze8aNK2xpan1zQT+lS
r9c08B3qJZwTFplHpvRXkPVt4Xy27Px02dqxmJdGPIIcdeGkj03SdoZqKWX5
DQl/G9f8KQHfAb27DL6Dvt74anrgO7hBxlvqdZl6Y71wnCi5GB1fX1IW8h30
9SbfAQAA4tg9okcx7dT0XIgsptZfHNnOaUtuDL+PNlx2duT3f77usUbEfNua
7zCIueetBTLCg5BtSYyu7nNSRxx8ZAxxhAZdrseO71CfrmVrIEVyH2QNXdG5
a3+tXfg+yY1ogB4apNZZy5GTYLYhuU5Fe8TYz+vyY9sEcXD07jL4Dvp6k++g
B76DOwqtO6mJcBwo+ba9sSD1mch38KE3+Q4AAJDEnq3rg8v/5i+S/YYZs4MF
F68NNjz2QqXPMDkTs048aWj7Sz7/j6X8jLpoS76DxLoGPZbzxMmSXpPQF1q7
5lCdcXDRSLyTzLjiiByIrtVgwneoibJ9Fwzy/pK5+uF6t5S8ia5SpbeL8R5G
3hPT7hE9JKfMtwZNgTg4encZfAd9vcl30APfwSEyDktZF+IVGV+KFzGG9ZnI
d9DXm3wHAADIQsb3MuY0j3WNTWS7g89p4DrRJuc7mDj6yJhb3nX+fa/BZwxN
rgMz56kzDj6oPVU0VtnXqWj/7KaC71ADkmOgPY/szWXD2sJjNocUJMegUI5C
mXtlwvbl/lGlr01XIQ7uT2/isvWD76CvN/kOeuA7OKasz6DpT1i9IqQ+U5fH
keQ76OtNvgMAAMBompbvIHGuQd/kKnE0a61uk+oIacfBR/agHZEn4tunaZve
XSecrynOF8Mc+jHLbbAR77XUvTDpeZ68p35PiCZ65E0B30EXOy7re1/GAXwH
fb3x1fTAd3BMkXUoWWPHfp+ucMynMMaUz+lirwjyHfT1Jt8BAMAhByaDG6Yf
H/YqaEr8FtzQhHwHWVcv6+uNT5C7VlLGWt2mrtf3GQeP5I4U7YvR0ngkvoNb
VOr59nsHdmkuWJaIB+sq5yGBtvuLmuA7+NObuGz94Dvo602+gx74Du5J7dFV
xD+I9eoKx3/iCYg3oLTWZdArYssjre0VQb6Dvt7kOwAAjEbmFFOPbw9uX7E0
WHDWnDD2LLHFpNfdNf+tg/j0nCXfpv5CR/CV7yD+VeI6/LJre3tIjK7p16Wp
s+QzDj7QvmSdljbVX8F3cEvhHtAF/YZxraWURq5e0iM82Kz/ZfFn2/K/3BTw
HdC7y+A76OuNr6YHvoN7KufBSqw/x2eIFxGufanQH6zomNTUZ2pLrwh8B329
yXcAAEgn9BvWXzzc97iH1JJOe5+8x+6RvPqZ17wfC1RDM99h0HPAzmnIk8OQ
EjuTbYlP1qa4WZPi4JK7EMkzSdI/I27ZhjXSTdK7E9Qxt5M55BjXUsqiVG5S
Do9W+se3LXepKRAH18XEwdFbV298Bz29yXfQA9+hHiQmX2pdSg7PIeszw7Gj
bEPRi7DrMzXNi6DOkr7e5DsAACRzaHJTsPC4GUN+Qx7fQfjdg6sir1/ywM+9
HxOUQ9a9z772m4Nz+e4zLgjW7T3oLB4l25Ht5eovUKAeSJtjZjLPMWOUhx5u
TqxVNM3jNaTVipdckyaeE3yH6oT55rLWS+ZaWevCivxs/74Bx9hEwt4OZb2G
DD/X93G1HXwHfb3xHfTAd9DXm3wHPfAdakY8gBzx/7p6d4XjVanZZHpF1O1D
TLPqM/U+11d9pvDe0fdgXpl/aYjpo+39mugqlt6/uHBF+By9AQAOI55Dmt+Q
13cQ3ti6vPB7oDlEaoav2DI4j9Pe+8HB78vW0pFYmcSwc9UHyaoJYsW3ZVsu
/RCfND0OLj0xhnyiAj2p5b1N6qvRdL2bhlk/ppbLju+QSOL/YZ77aA5Pwvex
tR18B13sfAfisnp64zvo6U2+gx74DvUTjiMl9h8fQ5pcAeX8Vh+9IsJj7/eK
qDMnIty2fM6ocXasfwbUq7fMofj+BIBxJezR8L5jnfgOwtSaeYP3nHDcufSb
bgESy4rHqP7Tp64enMc/mPu3ievYR21X/AC5bkb2DCiwTrcNNXzK0JY4uJzT
uc+8Wi5PpV/LRbwi38fRFr194WU+Fl8n1gAdmsBQz5tR9eeK/k+S7+AEfAd9
vcl30APfQV9v8h30wHdAb/X1NSb277pXhHgJBfehrf2yG4H4ZUWuFfHZyH8A
gDEknqNQ1Xc49PKuSL2m6Vc96v0YIR2J4SfWyjn/lqjvkOIBxLcnuRCDuHSR
WFhGHwH5nK77V22Mgw9qZSVdPznOt1wnvnJV2qh3XfjIPx9F6Hc0QBtfRHre
FPUaRvWQTnhf0r0cioHvoAv5Dn70xnfQ05t8Bz2aGAfvMqJ3G65vU090MD5W
7hVR1A8I/Yuyn0s/tcKgNwBAfu4786ghj0Hq+a+551+CPd+/o1TNpMkVH4j0
mW7C+mYYZijPwcaqszTkO1jvkdixbGfQhzinl5D5mn5Mukl1eeqmqf0d8l5H
qbVfRp1zTzWYxtV3GOq31wCPwcyzxn087qTnTck8pDz5a5ANvoO+3uQ76IHv
oK83+Q564Dvo622+M9vW59jOB1bvFdEbG6d6EUXzHBLG4eQ9FEDmKRXPK3kP
ADA2HJgMlh9z/CC+fNTMK4LNU68m/r2I77BvYmHEx/jkjhf9HysMkRX/t+ss
2f0dUmNcFeqKG69BYl9lekd0gS7EwU1drSo1X6QHCHq7O0aTM+6rXlLZuU+d
dW+bQu6eN0XvpzlzHOy/daFHjm/wHXQh38GP3vgOenq3YT14V8B30NfbfGe2
XW8Zr0r8WHWsHa/PJPFrV/5GAzRtOuEcxdV5bMDxAADUjuUrJPZicOQ7TFv7
hP9jhQgS70qtufGd3cP5DlXW4KbEuiTe9plnXyfm9fvuxcEHdWLyelWxOKvk
z9R5XXRNb0F9DZb0SDNrsEyvQDOOjo+rs36O0+E+d+Kryj3PZc+bke8Z8Xv5
X/OtSxfAd9DXm3wHPfAd9PUm30EPfAd9vbvsq9n1mdR6Rbiiw2NwZ4zqIY3e
AABRJm8+4g1s+Mnw3135DovuJrbcMEbFq4b6SmfFsEbFyGK9GsTz4HqIIvNK
M+dpW52lLCTOWqV2TF29PdruOwzVnNWYi1g1Z5Nyg8N9qjq3kvlZA/R1/T8g
uVyZXkPB/g2yLanLlDuvIeP33IvdgO+gC/kOfvTGd9DTu8tx2aaB76Cvd1vr
LJWlib3UkjA5D+Y+b/KP+dn62fHcyve1CQBQOwcmBz2gZQ1m0t/L+A73LXpn
1HeYu57YRoOQc5HVrzQx36HoutyY10CPjxHnxOrv0MY4eJ5rTu4xhWpzxX6X
eI8qSZt8B9OTIcyn1lo31fcYBjncOeseVcr17lB9pdSeN2VyGzJ63ognl+ce
nPb7ca1rVwf4Dvp6k++gB76Dvt7kO+iB76Cv97j7aqY+k8lTDsf2Vcf3VfON
wdkcqsjP9NUAgK5z6OVd7n2HfduCWSeehO/QYKQGzsjYV17fISVuLF6DfI7v
Y20LbYqDV0VipSPrzKTFTvvXVtV4aZP19lUndmTPupwUznvof37bPYfBdd33
CQrlH6R4bXl63ogXUTSfyMX/EETBd9CFfAc/euM76Ok97nFZTfAd9PXm+h7G
yzoj8M+W7tQ5AABI5MBkcNMpbwtjy/M270n8e1HfIZ7rIEy/6lH/xwoDBr0d
MmK9Q32lR/gM8ijre+uoiTMONDkOXhcS9xxaE14gflrG25L5zQOXTQQ7z1ge
PPVf/+eAH/zPVcGOm7+rroHJu1bryTDtA5GeDHWtsQnnTvIZo+ZM8vcWj7cH
fUyKXMMZf6/S8ybyv5ThaxTJXYT84Dvo602+gx74Dvp6k++gB76Dvt7jVmep
LEN1VfEimkfVc0KPBwAYA569ZnZ6D4aCvsPUmnlDngN9pZtHxHdIqyt+/i2F
8h0kXub7uNrMOPoONuE1aa8TT/G20q5XuT9lxWplXiNew6ix4S+PPit4/Mav
1XKMZh2Tz54M2jkF8WMWXpl/afhzUo+INiDXau6eJTl8AJc9b2Qbg/0z9+bv
7KbWnQL4DrqQ7+BHb3wHPb1ZD64HvoO+3uY7E72LY+oz5VrfU1esHNyB7wAA
Y8ChyU3pvaXz+g691z1w2dxEz0FY/cxr3o8TjpBYZylOVp2lhHgwvkM17P4O
XeorXZRIrZoCdWOMZyHvjdfA37n94dBPKDIGlByIKnOhMC7joSeDfFbRngxa
mDmm4HtfimB6kxS6LrNep9TzxtxP2qZ3W8F30NebfAc98B309SbfQQ98B329
8dUcId6D77g5VKPFed8AAEXYdfnJgxjzR669L3julb5PMMJ3kLjWnq3rBz0i
EnMd6O3QOMK+0mnryTcU7Cvdh9od1Rj3fIc4co1KH93UfJwRsV4T1w1rJ5Uc
Bz7/R2fnng8N9YZTGKcO6iU56MmgeX23IQ4u15/c03L1IRnVy8HyGjR73rRJ
7y6A76AL+Q5+9MZ30NObuKwe+A76epvrmzpLFZGYtYt5RVrvYx6THx3S9Dkc
AIAzDkwGN0w/PuIX/NmlVwb3rl8++PljO14IXnphdzD1+PbguquXBUvnvCfV
ayDXoflkxtPS+juk1QrpQY/SauA7pBOpG5O3T694D9JXpuJYUPIe4vtjejJo
1kuSzzH1kto6Pm16voPcw1K9rpJ5DT573uA76OuN76CrN/kOeuA76CKx2Bd+
+rMQ3/syDth6c33Xj3g76O2GMLe5qJcwYr7h+5iaTKbeJed3vo8JAECVfdsG
uQ2umH/bbv/HBYnIWvDU2FmR/g79dby+j6ftyLjbzOnHuc5SFlI/aWStG+tv
oWfgYEwofajDvII66iUlba9fLyn0NjqUe2uu7ybFweWaGvRjtvuLZPRjyPQe
es/Fu4jX+vIBvoO+3vgOepDv4EdvfAcAgGYRrktyNS/p0LyjNuK1rUb5O1lz
R3o7AMA4cmAymPjou/AcxoTM+O2oOkvWe5sQY2s7dn8H8h1GaHXwUHDOU79N
70Hd47+svM3ZGLxob4jCiMfQr5fUtJ4MLmmK71C4h8iI18m2pCZT03K+8B30
9cZ30NWbfAc98B0AAJpJmAftYF0Ua+/zEc7V0BsAoDK/fvRrwSVz3l7Kb5AY
9eapV70fA4xG4mSJ9WkS+juEv0uIuUm/Vd/H0QWos1QOqZefVDNs22n/q1y+
Qco40lXuxKAnQ4vrJZXFp+8wuE4yvKpMryH2PtmW3Pua3LsI30Ffb3wHPch3
8KM3vgMAQAMp2uchYf4zbvMSVb0T9A97A/o+DgCABvDqT78X3L5iaXDWqdn1
l96/8Lxg6bWbg8n/t8/7PkMxZO3vUA2RtP4OsddQX8kd+A7ViNdgcp2TID6G
9JkuPKbs92RgbKnvOwz6glTt19D/nWxLttlkr8EG30Ffb3wHXb3Jd9AD3wEA
oNkc+uI3iYFrIjWSSupNPSsAGFdkHiG1XtL+Ljll8nfpvWVg7tENJGY7tA44
q85S7+8Sf/O9310C38ENEhP+3Obdzn0HyXeI5ARd9Wj4PzJnybeDz55/Q7Bm
3lVhH4gdN3+38/WSymJihHXFweXcSw5CUv5LVu7CqN410gvHt3ZlwHfQ1xvf
QQ/yHfzoje8AANBgJJ5doAaQ5GGT56CnN3klADCuHJrcFCw8bsYgxnzUzCvC
NfC+9wv0kZid6a1q5zsMfId+HK4t633bhN3fgb7SxQjX6EhOgeQW9MZzI2si
lajJGfcdcsWz+8j/jCA9KcSvk/tr03oB1EVqzkFfl6rfNabXx0ivIWevBrNf
UpfJt3ZVwXfQ1xvfQVdv8h30wHcAAGgH4donqemaUUs2rPtKT2NnhLkmWfNL
+Rt6A8C4cmAyWH7McA2lsE6J730Db0j+w1/f8s+ROlpdiMM1GfId8hGuEZG1
Jb3xdDhmThjbFa6HVMZ3yBG/zv06y5uY+fT/DWP18v8m/4dt9fhk/1OPPfZ7
Oe4iPozoMveZV494O6NyGbJe0/9ZdO+a347voK83voMe5Dv40RvfAQCgPYRr
s3pzpl9cuCJkHPvLaSLaigeB3gAAFvu2RXIdBr7D2if87xt4ReaX5npYuPAc
7/vTdfAdhgnX62x55PAakr9aljtP4ZdHn+Xcd7jj9E9XW0+ft4dxxvuNNyEs
eurfG5s7EXoCebSKkeVtxvt35PITRng9sp+yXd961QW+g77e+A66epPvoMe4
+Q5yjNLjbuPGjcG3NkwEE+u+HR7/9qd/kbgeYM/W9YdrPDZg3wHK8rsHVwUL
zpoTzJo1K5j3ha83bnwJ5Xj66acHYxSpk+17f7qO6G2+L9EbAOBwjaWkPtFS
t8L3voFfbN/hwgsv8L4/XUfmuGaMMo51luT4ZU2OeAymXlIVn2DgPYzaTkYO
ss1FF32leHy7jL+QM2aeJ3dC4up27oTGeZS8gVx5HynHYHsP8nzgNRTJH0l7
3kP8mnGZR+M76OuN76AH+Q5+9O6873BgMnh84rJg1oknJc6PDAsuXhtseOyF
w+/pr+E6+pSvjM33S5x9EwuDP54xO4xXCzNnznT+XM7JJ3e86P1YO0vvOh5a
h7hii//9gsoQB/en9ws/JdcBAEDG1/F8h2mL7nZa24Pvt3Yi35X4DnrY/R3G
Id8hzDnt92RIq5dUhW2n/S+n20uNeWfFucv4Cnk+p4qnkVDXSWLx0jtZcieq
3PtlG5leQ87jS+wHUUaz/rakb01b61VVAd9BX298B129yXfQYyx8h5QccEHi
31k+hHDCced2rl5fXn71gy3BdZeePdKvqQr5+PXxxtblw3rPXT+W46euYeLg
AnEZHb3NGAW9AQAOs+vykyM9pZ2u1TkwGY5ByZ9oH/gOunS5zpKpl5TVk8E1
8jmu6i3tPGP54Fhk/iX3SFmLL/FsySkwMfyhXIS8nkQZn6FkHD736zJyJ9K+
I1x5BUN/L6JPf59lX8d9rozvoK83voMe5Dv40buzvkNCvzvxEVY/8OPI8R56
eVdw7/VL8B1SEK1+eddw/NogtXtszzCOuc5uX7E0uGTO2/EdFDn02Gp8h45C
voMfvfEdAAAsrLH2CcesdFuPo59PIetpvR8nFII6S7p0xXcI5+clejJUQj6j
91nhZ/Y+O/Q5evvywGUT+WorjaBMjqzE5iX+IDkAcv+zezNk1koqEn+vkmtR
NOafFvvvx/kr968o+zrLaxCtfV//TQLfQV9vfAddvcl30KPLvoMczyOfmBaJ
t45ah3XwufuHfApB1iP4Pp4mENfT+DJF55ji86z98LH4DgqI1vFr+rQNe7zv
F1QH30Ffb/IdAAASsHKLpZajq7UNJmcT36F94Dvo0lbfQXoymHpJKh6DIH7G
srWhxxDWa8rYvzBXoayX0XvccfN3a9NO7rMyB5ccAlmfn5k7UTaPIU9fBFe5
FWV6MFT4TNFp3NeWZoHvoK83voMe5Dv40buLvkNSr7tc/sGByeCmU94WeR/z
ncOE/R4crZ2XePhgjorvUC+9a3r7V78R3L5ufdhD3fv+gBNYf6+vN74DAEAK
vbHGxEffFY7r3nLGFZXjOfa6Ccbh7YM6S7rY/R2a2lfa9GTQrpcUehq9zx3l
MSQhuQ9lvYc6PYci2LkTUrMuM3fCVa2jLM+j7OeVyXWwP7OH9KPQ6pHddvAd
9PXGd9DVm3wHPbrsO+y9aX4kPi79oXPHx3tzpxumH1kjvmDbXu/H0wRc+g7C
s9fMxncAKAn5Dvp64zsAABxBvIEbP7cyWH3ttcHEjWuDdVf+j8gY8b1/tzJY
+eU14d/zIttZdd4HWf/Tcsh30EXyBp674Zbg+U//QxjvNrWCvO1PvyfDoF6S
Rh5Dv15S6G1sceu9FKm59PwfnR3s3N6enBPBzp3I7DuR10+okpeQx5cokLch
x+K079CYgO+grze+gx7kO/jRu4u+w31nHlUtPj55M3WAYrj2HUzvAfQFKA6+
g77e+A4AAEewc1frBN+hfZDvUD+yfj+rPlGYUyAxeI39kTi/fJbnngx1Ijkl
4j+k9Zt+6r/+z8bkONSFyZ2Quk527sTInhMavSVi26GXYTXwHfT1xnfQ1Zt8
Bz3GyXf44xmzQw+/yDbu//gfEhe3iOeQVO5R3K//s+GxF7wfG0DboM6Svt74
DgAAUUzuKr4D2JDvUDPSn6BIrSHpo+Dos029JPE8NOslhcdcsl6Sa6RX9MS6
bwfrPv314DvfeLBzcZQqmNwJqeskuRNS26hwT+yqr/knxulVwXfQ1xvfQQ/y
Hfzo3TXfQY5lyHco4R8M1uNXia13CNf5DgBQHvId9PXGdwAAiLFvWy1eA75D
uyHfoR5kXX/pWH+J3Icwxi+5DIo9GSSXwfRkcOmXuMT08Rba1Me7SUjuhOmJ
XSSPIU99JfE4fB9f28F30Ncb30FXb/Id9Oiq7yDsuvzkxLlLoV4NBybD/PFp
599SKrYumkpOpqHK8aS9Xz5j8Dk1x/9d+A4yXpb4XZE6i0nXpmyn6DG7PB/a
58TeZtX/1TLvd/n5dW7T3q7ZtqvtNg18B3298R0AAKLId+1d89+K7wAR8B3q
oXLsP6PvwVBPBg/1knzrmxd8B7fkzoPIWaNJejr4Pqa2g++grze+gx7kO/jR
u4u+Q1JNIMOfr3ss93ZknUfe2LFouGfr+uDTiz+W+LnTTj03+Nzm3bm399IL
u4N71y8Pzjr1+LBOlNRTNH/79aNfC5bOec/QZ/z1Lf9cm//gwncwOSRSE3Kk
lt+/I1j74WMjxy61hCc++q5c59P1+dA+J6/+9HvB9cs/Fcw68aTEfb/k1vuD
5155Lde2Du5/frDfRXqsyzmI93e0P3/q8e3hPq5+Jt9+uDwmm1/9YEtw3aVn
J25X+NDiqztXz4s6S/p64zsAAAzzxp0XDr5vTzju3GDptZvD++WTD2wZzKXz
8tDDjwT3335dcMmct+M7tBjqLNVAgdpKmbkE/V4IYS5Bv16SpscQHodST4a6
sH0H4rLVkXpMI2soFehTTR/p6uA76OuN76CrN/kOenTZdzg0uSk1BhnGOM+/
Jaw96OrzJOZs99aTeddFN9wWfGvDxOHYufXZ8rekXhNyDsK49vVLhvr0yXvC
GPeByaG4e5y3nHGF02MzuOjvYLaRNoeU+PGGy85OPPascyrjFdfnw9c5EW8l
vo8nz/1Q6J8kHf/823Ynbke8BvFd7Ll77nPWOyZ7/aJ4Atds2BTeKyS+X3Qt
oqtjGjrG5+4Pls08PvLe9y88L1j22c8nekByHmyvqM2Q76CvN74DAEAC+7aF
3+WDcZGDbcr465FPTMN3aCnkO7glrHfkMv6vUC8p7CvRr5cU9sBusc8Qh3wH
92T2ni7Qp5oaS27Ad9DXG99BD/Id/OjdRd9BSKu1ZCPr3at+zhtbl0e2+Wd/
/92huO4v74q+RuZm8Th0Vm++E45ZGWx8aXdww/TjRx5TGCdescW5npXzHQ5M
DvY/Pod8bFV6fopoJce+/Jj0Y7e35+p8+DgncW9F/DFZ/2/2X/5Pk7SK9C7p
zf+/dPp70/cjxzkzc31h+lWPDr1efJ28voOTY0rabj93xvYUNk9F82rFl0i6
bi7a9EPVe1Ed4Dvo643vAAAwTFhr6X3HOu/5ZcZz+A7tg3wHx+TNdYh7Ckoe
Q7wnQ5c8hiSM7yDXOb6DG2QNoIt+0vSddAO+g77e+A66epPvoEfXfQeJc990
yttGx4NPPXcoXpmb/hovO36dttYr3utavh/tv8uacIltyZr/yBruGdHY9x/M
/duwZoypiz+1/uLEWH3aGv6yVPEdZO39fYvemRqn/tHG1cHKL68J/vFTczLP
1WlLbgzWXfk/hn4/qNvk8Hyon5Pevts5FX+y6r5crzNIX65wnyc3BWeetzTM
T0jKwxh5ziZvHrz2qJlXpOaq2nH/1JiAo2PK2kdzTKk5tZbfZfOee35W/z2o
RqizpK83vgMAQApfP2Oo/mRl+j2rR9XmhOZBvoNjtPyDAvWSTE+GrnsMSeA7
1IP0ZciV95DiPXQlp70J4Dvo643voAf5Dn707qzvIByYHKrvkuo/lKi9ZNe0
HRXnjsfts+K/af0p0noFJHoCCXH0KiR9hrBw+fJg5dV/H9a2iT9ed/WyxHo3
aXHqof6EVnzfXqNu5yvIOncTc67rfNR9TuS4bY9s2qK7M89F3DNJ09SsQSxy
nHaOh+R0ZNXIzKqBUNcxyf+0ncOQy2NL8jV619a6ve7rkWlBvoO+3vgOAADp
yNoL12tNpdYl61fbB/kO7nBaY6mExxD2su73ZAj3pQGa+AbfoT5k7lc436H3
OzwHt+A76OuN76CrN/kOeoyF7yAcmAweuGxuLu9BYpHLn9ybe9vxWHRmbduE
Ndppc6l4rSBh3uY9qfsh6/LjcdVRdWqKktWruyhZOfOJfSRSahTFr9u6zkfd
5ySy3zni4XF/RUhaDyj6DOV1ZF13MZ8iK98hPMZ+zkPS+azrmOK1r/LWFEva
/igvpMngO+jrje8AAKBAb9wu46cF2/KPx6FZkO/gjrD/86h6SjXVS/J97E1F
5ksmZoXv4B6Zu4f+QlpNpVg/B/pIuwffQV9vfAc9yHfwo3fnfYc+UpM+3oM2
jY9ce1+u9VXxGvNF4tyZa8njr03pP2AYyhOowXdIzHeYMTucT9gsOHPBEc6a
k9g3uJDv0PuMvDWjajsfdZ6T2Pp9ybsZeayx2kFZ+xLXc5TvMORTZF1H/djA
kD9Q1zHFtjvqWhr13jbnPFBnSV9vfAcAAAX639dtXhsw7pDv4IawH7P4ADV6
DONcL6ks5DvoIHM08RUGPoP1KL8vWqcC8oPvoK83voOu3uQ76DFuvoMgxym9
BJJi4UlrofN4D1LL/y9PPz14/7zPBBM7X0x9XaWYeNZrf18iXlyCtP4Oed4r
/RHseldZseL454w6dpXzUeM5ie9H3jrGMj/Y+cTOkCL1oUbldUyu+MDQeZbe
3GmezNTj28M+0RrH9LsHV1W6NpJ6zbuuR6YF+Q76euM7AADUj/mul/UgxJXa
CfkO5QnzDKSuUZ09Hf5qmffjbDP4DvqYuCxxcD298R109cZ30IN8Bz96j5Pv
IMixSp/jzVeeNdp7yOpXmxOpt3Pv9UuGvI6u+A656+5a69mL5DsUjS3Xcj5q
PCemR0Lh9fs5Keo7JNWTMrkBn9u8O9dn1nVMVa+NuG9RxF9sGvgO+nrjOwAA
RDk0uSmYWPftYOLGteHjtzZMVHq+6rwP1jomAh3IdyiI5BtIXkNZryH+vlE/
i6/h+5hbDL6DPmbOQxxcB3wHfb3xHXT1Jt9Bj3H1HWwOPbluuN9sPC5ZMn7/
8kPrgkvmvD11uy59B6Fu3yGx70IR38HaRp35DrWcj5rOSZI3sfqZ1yofa5ae
I32HhF7Ukfefem6weerVzPfXcUxJ2y18bST0ly56DTcF6izp643vAAAQJd5z
yTXUWmon5DtkE867q3oNFaB3Q/Xzh++gC76DLvgO+nrjO+hBvoMfvcfZdwg5
MBmpAZS0zjtvfwFTx8mObc77wtcPx2kLxK2L1gBqRb6DdVxZdXdc+g6uzkdt
5yTW00D4zLOv13re8pwzyQkZ6oUQ92mW3jpUX6nOY3LiOyT0eGi770C+g57e
+A4AAFGS1qS4xHXOK+hAvsMwYf+ELY8crnGk7DMM5T40QI82g++gD76DLvgO
+nrjO+jqTb6DHvgOUZLq2heJ4e/Zuj4S35597Tejcdkice4u1ln6/eF4tlxv
WbWrXNVZcno+6jon/b7M9mtc1xQo4zuYfYv3xU5iyQM/Vzumqr6DXH9dy3fA
d9DTG98BACBK0tjQNXl7REFzIN/hMKHXMLEpOPTuj7vzDKq+X7yPBmjTZvAd
9MF30AXfQV9vfAc9yHfwo3eXfAeJK0qd2Kw6MFmkeQ+Zscl4vsSM2cGqx/9t
+HUVfAfZZhfqLOWhcr5DHeejpnOSFAdfsG1vrXoWOWdyX5A+3aNiAvM276n9
mJJ8nMKeRu/auOmUt3XKdyAOrqc3vgMAQJS68x3a/D09zoxzvsN//PhnwaEv
ftOZ1yDbke2FfkHV+kpS16kBGrUdfAd98B10wXfQ1xvfQVdv8h306KLvYOq3
l56jJNSIyZzzJNRtWf5kSoyVOku5qJTvUNP5qO2cJMXBHdcyruI7GKQP+wOX
zc2MCwxqKdV0TGm+Q6F1kAm5GG2NZ5DvoK83vgMAQBR7jHHakhvDe+TGjRsL
IffW+2+/Llg288j4bWLni8H+X+8P77eJNR2h0YxbvoN4DdKr2Vleg9Rimth0
OF/C/qwK3kO4bw3QqgvgO+iD76ALvoO+3vgOepDv4EfvTvkOVty5bE35Iuv6
H/nEtPzx1SLr5TtaZ6nM5xTxHWo7HzWek6FYeoF+IvZ1/9DDjySei/j1POqc
vfTC7tQ5/sHn7k/thWJvt65jSrwGi3gaSf0dNvzE6fWrBb6Dvt74DgAAUcz3
cuoajwKE46ZF7wy395Yzrgh2vl5w3ACNYRzyHcLezMvWuusLLV6D9JqOew1x
xHso+JnkObgF30EffAdd8B309cZ30NWbfAc9uug7yHGYmvRlY+K7Lj85X3w9
Hrf+4+yaL4XWyxetAfT77tRZKp3vUOf5qPGcxL0SYfpVjxbSTLaRtj9F8x2+
M+1tI2P5v7xr+dA+n3DMykHfjtqOKeEcy2tyxyb6+VD2+7/08wNOr18tqLOk
rze+AwBAFBmznXDUGndjQSvv+OhTvpLZDwyaS2fzHcQXkBi+C6+ht41wW3m8
hhjh68XzSOr5YP0c5jjQz8E5+A764Dvogu+grze+gx7kO/jRu0u+g2DWSgll
6sqnranO4ztk5VjU6Tt0Od8hTx+F2s9HjefkjTsvTMwf+OSOF3PpNbVmXub5
LuI7mH0WD2FULH/Ie7ByGmo7poQaTkLeWktvbI3uc5tjGuQ76OuN7wAAEOXN
te9z6zv0+N2Dq2oby4IOXcl3COP7xmtwkdMgnoD4BY68ANO3WvYv7AMhPoPk
TfQ+I8zHaICGXQTfQR98B13wHfT1xnfQ1Zt8Bz266jtE4qwl6rvYvkVWvDQp
Dj/9O7tTt/vsNbNzx62d9BJwXD8m6XgL93zOQdl8hzrPR63nJKH2j2HJAz/P
PGYTn89a81/Gd5DXjezXHNvvo2ZecSSGX+Mxxb2DIv5XPA/DdQ9vTfAd9PXG
dwAAiPKrH2wJ/vf2HW7XoNi9mMrUaQTvtDnfwcTyw/i9Q6+hTh9AeqGYGIrU
KPWtYdfBd9AH30EXfAd9vfEd9CDfwY/eXfMd4nFJiV+u25tzzpKwZj5tTXQ8
Dp0Vi06sS5MRKz705LrqMW7HuQhJdZbq8B3K9neo83zUfU7S8gPC95x/S7D9
6V9EtvvrR78W6b+Ytt5fXjvU82LEdWH2OU/fBPv44tut65jSch4+tuOF7Otj
clN0Hxz379aGOkv6euM7AADUT1gz9X1Hekm1tQ/TONO2fIewL7RDryHMPfji
Nw9vV2H/7Tg4voOu3vgOOuA76ILvoK83voOu3uQ76NFV3yHJOxAu2vTDzPdJ
XDJe+13WWa1+JrnHbtrnSDx69Y4fhXGqe9cvH96mxanXbwlfJz0p7FzypBh/
pndirw2rw3dIifXmWhdfkKH+Gr1zkMs3qvF81H5OMvS1mXXiSUO/y+qbEJ+7
j/JL4l7JvM170o9v37bI/rznnp+pHJP57KT/1dQ1kbH8izx1pJoO+Q76euM7
AAAoYPV4yDUmgMbRhnwH8QTEGwhrEznyGsS70PIabIiDo3fXwXfQBd9BX298
Bz3Id/Cjd9d8h0Mv70qNLU879dxg9QM/DvNRzetfemF3sPnKsxJfv/zJ9Dos
STHdNKQGzZMPbMmMeZv1XIn+h/x9xZbktfK9/Xhs1XBMXBhV0yYPr/70e8Ha
D6cfp8SxJ3bmq9s/iqQ8hPDYz79lZJy4rvOhdk5yxunzfL7BrpEcOWdLb03M
4UnK0fjrW/556DPkf8y+JlJzB2o4Jnsfhmo5zZgdfG7z7sj75dzFPQfXOTo+
wHfQ1xvfAQCgfuL5pXX0EoN6aWq+g9Q6Eq/BSV9oQfIjpL9Cwb7QriEOjt5d
B99BF3wHfb3xHXT1Jt9Bj676Dvba5reccUVw3aVnJ66pzkLet3nq1dGftW9b
ah37obhtbP1WPNYqNXKz4uAmrrp48eJBDkZabDv+nsx16ykk9UsYhXgQhevw
9nSZ+Oi7cm3//QvPCy659f70+afD8yGvSfMb6jon8n/4wGVzc2mRlr8jXoPs
z1mnZusgnDz3Q0P7EfcdzP5edMNtwcaNG8P/pyI+gYtjytr2jhXJ16lcK3EN
PnLtfa3tIx2HOkv6euM7AADUTMI4Dt+hfTQq30F6OEsvZxdeg2xDvAbpNe3Z
a7CR9XTEwfXAd9AH30EXfAd9vfEd9CDfwY/eXfMdzLp3WddsYozyO4nrX7/8
U+kexIzZwYKL10bqzufiwGQY+7S3++4zLgiu2bApeO6VWI2m3nzqkjlvPzKX
eu8Hw/XZ8jdZv/2tDRMDbl+3PvIoTKz7dvizWfu/Z+v6xNfKo/08l4cSQ/RK
2q55lH0xz2/+9h2D3xX9rDB2fM83h47V1sFGPiMz98HR+TDnxN4nrXNy8Ln7
gw2XDftlsn8S/x86jth7J25cOzgv8fMV13TDYy9Ez0VPO/F2JLY69fj24J6v
fjG4/G/+Ymg/5n3h64X+V6oc0yjkPN17/ZLgIzNPS/QfvnTb/6m0/SZCvoO+
3vgOAABRZP34zid2VkbmJPI9nrgWpOX9mMYR7/kO4gtccLUzryHcVsO8BhsT
BxeIg+vpje+gB76DLvgO+nrjO+jqTb6DHl31HYSD+5+P1FIa/vtvwtiRIeu1
xT738Hh0lJ7y965p3kS6cD7MvjV1/5p2TGabXdIrCXwHfb3xHQAAojx7zezC
ubFFGeofBY1HO98hHPNJXoOjvtChXyE5Elva0aNZjt/EUIiD6+iN76ALvoMu
+A76euM76EG+gx+9u+g7AAB0Geos6euN7wAAEKVMTc4iSO7yqP5e0Dw08h3C
tUUTm5x7DZLD41u/ohjfgXwHPb3xHXTBd9AF30Ffb3wHXb3Jd9AD3wEAoJ2Q
76CvN74DAECUun2HL/38gPdjhAJIj+ULrg52HD1rcA6lT5p4A9LPuWqdInm/
bOfQuz/uxGuQ7cj2/uPH7c6psX2Hhx5uR45Gm8F30AffQRd8B3298R30IN/B
j974DgAA7QLfQV9vfAcAgCh1+Q7TTj23VG8y8ITUI7J6Kdw7fWbUd7Dj/cvW
Fpp3iifg2msQf6TtXoMNcXD07jr4DrrgO+jrje+gqzf5DnrgOwAAtBPqLOnr
je8AABDF9h3EK1j22c8PWHn134eP1y//VObv7J+v2bAp2P4099g2EfZcjsX2
bd9h+THHJ8b+s+L+Ya0j6a/gqC90WItJcjEa2he6KsTB0bvr4Dvogu+grze+
gx7kO/jRG98BAKBdkO+grze+AwBAFOM7XLTph973BfRJ8hwS8x2S/IPe7yI+
wJZHDm/PkdcQbku22VGvwcbuK02dJR298R10wXfQBd9BX298B129yXfQA98B
AKCd4Dvo643vAAAQZe9N84MTjloT7D94yPu+gDLS0zkl7j8q32HIH8BrqARx
cPTuOvgOuuA76OuN76AH+Q5+9MZ3AABoF9RZ0tcb3wEAIMqz18wOpl/1qNNt
dn1O8qsfbAk2btwY3Pn9fy2lzas//d6gf/CTD2wJ61Jp+z5hXD/DA8iV7+AC
2a7UY9oy3mv89/96P3FwRfAd9MF30AXfQV9vfAddvcl30APfAQCgnZDvoK83
vgMAQBTn84fJm8NY9Z+suq+bORT7tg3i8Uef8pXcxyg6T62/OJh14knJvbhn
zA4uufV+Pc0k1p/Td8jMdyjpNUif6bAHhO/z2RCIg6N318F30AXfQV9vfAc9
yHfwoze+AwBAu8B30Ncb3wEAIMqhJ9cFCxee466/w4HJME4d9qlescX78blE
5lo3nfK2I324567P5xP0NLHfd8Jx5wYTO18M17hPPb498rejZl4R7Hz9YP3H
MyJ/YSjfweQmlPQapA+1eA1ZvajHGeLg6N118B10wXfQ1xvfQVdv8h30wHfQ
ReYHBt/7Mg6gty5yD0FvPaizpK83vgMAQBTp7xDG0Nc+4WybhyY3Ddb1n7Zh
j/djdMXUmnmRHIU8voOMre6a/9ZsX+HAZOQ1JxyzslbvIYz9j/AJbN9h6Vs/
VM5v+KtlYQ8JvIbREAdH766D76ALvoO+3vgOepDv4EdvfAc9vc39BL3rZ+cT
Owf3E2LhOnoTl9WDfAd9vbm+AQCi7JtY6Nx3EB75xLRB/aB1exXW79eM5IXE
ayPl8R2Mr2NY/cxrya/dty1Sg6nWXBHppVDAdxjkO+Tp1dD3GsatL3RV7P4O
0vfD9/50HXwHffAddMF30Ncb30FXb/Id9MB30Nfb3FOIg9eP8R3QW09vcw9H
7/rBd9DXG98BACBKXb6DHW93vW11rNpRhXyHuJew6O7M10+u+EBk+4ue+vd6
jifJd4jVUNpx9KxC/R2kjhJeQ3mIg6N318F30AXfQV9vfAc9yHfwoze+g57e
5p6C3vWD76CvN3FZPaizpK831zcAQJSB77DhJ862eejlXZE4vcTbfR9nFXZd
fnJ4HP/pU1cHaz98bG7fIZ7r8MkdL2Z/Vr8nd+26lcl3GNHb4eAFV3s/T22G
ODh6dx18B13wHfT1xnfQ1Zt8Bz3wHfzpTRy8fvAd9PUmn0cP8h309cZ3AIBx
ROYIcg9M4r4zjxrU9Ul7TRHuXb88ssa/UP/lBvLG1uWDXtDbfntooNfI4zow
Gdww3cqRmDE7uGP/iHpT8byKPO8pQdH+DpE6Syn+g/SM9n2u2oz8j5oxIXWW
dPTGd9AF30EXfAd9vfEd9CDfwY/e+A56ehOX1QPfQV9v4rJ64Dvo6831DQDj
yJtr3zdUI0iTWnsV1Mm+bWHMXY5hwba94e9y+w6x3IWjT/lKrh7U9vaF99xT
U0/mEfkLtu8Q1lka8fowh8L3+Woxdn8H4uD1g++gD76DLvgO+nrjO+jqTb6D
HvgO+nrTV1oPfAd9venvoAd1lvT1xncAgHHl149+bRBDV/cdHNZw0kLG+XfN
f2u4/9OvenTwu7y+g6nNlLe3g2FqzTydXJFla9N7QxftKy3vacA5azPEwdG7
6+A76ILvoK83voMe5Dv40RvfQU9vfAc98B309cZ30IN8B3298R0AYJwJ4+aL
3qnqOZj6RL6PvSimN8MJx6wMdr5+8Ih+OX0H41kU9V5MXae69Qt7QJschoRc
hkL9HSY2eT9fbYc4OHp3HXwHXfAd9PXGd9DVm3wHPfAd9PWmzpIe+A76euM7
6IHvoK83vgMAwJFe0rUzY3aw+pnXvB9vUQ5Nbhocw2eefT3yt1y+Q7xPg7x2
7RP5PvvJdWq+TdiTIW+dpZS8iEPv/rj389UFiIOjd9fBd9AF30Ffb3wHPch3
8KM3voOe3uaegt71g++grzdxWT2os6SvN9c3AMBhptZfHI2Ln3pucOGFFwSL
Fy8u9SgsXHhO+PPKL68J7vz+v7azl7TVDzruFeTNdzj08q6hmlaLnvr3fJ8f
6wshvkMdvaUNBy+4On9f6XjOQ+/nMG/C9znrAHZ/B/pK1w++gz74DrrgO+jr
je+gqzf5DnrgO/jTmzh4/eA76OtNPo8e5Dvo643vAABwBLuXQN71+F1ncsUH
Qj2kD/TUm1FPIXedpYR8h7K+Q6H3WsiYziDzl/jzyOMZy4MdR8+KEHovM2YP
fIf435//o7OD7V/9xmDcOAr53pWxJQwj15XoY8aE4jv43qeuI3rbcVnf+9N1
jN72PBPqxfZ5fO/LOGD7Dr73ZRyw8x0YX9SPfX2jd/3Y+Q7orav3Cz/9mff9
6Tq2z4PeOnpzfetBfgkAwDCm/zG+w++DQ4+tHtSHWrc3OccgV77D5KZg1okn
efUdZs6cObQdn6y+9trBGNOOh40rcQ3M+MR+jk71ag6chy7D/aQZ2vvely6R
9b0Jevqjua7m3MPr1zhJb9/71XWSxijoXg92n3rj+aC1e4ymtsb4DgAAfQ5M
hj2QT9uwx/++eMSujfSee36W+JrcdZaMf4HvkOk7JMXau/7cHpukvS4+fmnK
vrfxeZKOSa/Peg+P7h5HXfs8d3OtJ9GEfezyc/t36F3PNR3XOe97eXT3mHXt
gzu4h+vcX+K/T/odz93fz7POhe/9bPvzpMck3wG967uubb3xHQAA6sPUKpp/
227v+5IH8RPu//gfHvYSzr8lsy9FrjpL+7Y56+9Q1neQfhsLzlxQmr88/fTB
5//pO94R/lyFb22YSKz9JI/j+Dxe72rn9ocjY5e01/K8uubmd/ExedJ1CdVJ
ur59Xwvj8DxJb9/71KXnSXob8rye59V0H3X/5j7uhqTvS7mfx7Xmudvndhw2
7Zzw3N09JU3vJuxfl56n6d2Efevqc/Oz0Tx+r/G9f116bn42euM7AADUzL5t
gzpDbcijeOPOCwc9nLf9Nt1z8NXf4TPPvq6uiXxfms+XfuG+z1HXkWvLXifh
e3+6jukrbWJWvven69h6C773ZxwwMUL01oHrWxeJfZtrnD7HOnqb6xu968eO
zaJ3/Uic0NxPDu7/jff96TrEZXWhr7S+3lzfAAD1E4/Pr37mNe/7lIbdiyGP
NxD3HRK3adVsquo7jPJC6sL2HSR3wvd56jrGdyAOrqc3cUJd0FsXO+/b976M
A/b6Td/7Mg7YNQ1878s48NDDj+DzKCLjQKO39Cn1vT9dx/Yd0FtHb3MPR+/6
wXfQ1xvfAQCgfiSWb8fdm9yz2vYR/uzSK4Nln/18sHjx4sTH6y49O5qLMGN2
sHD58vBvwkUXfSXY+frBMN/hhunRfIfcGuA7jCUmDk6+g67e+Dx6sP4evbsM
cXB9vfF59DC+g4DvUD92vgNx2frBd9DXG99BD3wHfb3xHQAA0pF1+vfffl0Y
X5ea/LNmzQqRHsV5nyf1FE6tR+SZeF5GVYxHINuVXt0RDTb8JN8+bV0e3eYx
Kw97GcrayHclvoPutYjvgN5dhji4LnY9dt/7Mg4QB9fFxGXRW09v8h109TbX
N3rXD76Dvt7mO5O4bP3gO+jrje8AAJDMjhULncXf2+I7CHe971h3xzpj9iA3
4dlrZkc1OP+WXPsz9L5Fd3vRBd9BF7vOkqwr9L0/XQffQR98B13wHfT1Jg6O
3l1FxiXEwfUg30EXfAd9vbm+9fUmDq4DvgMAQDK7Lj+5Ns/BZ+w8F/u2Bbev
Wx9s3Lgx5FsbJgbP48jfls08Uj9p2qnnBjd/+47B3+X51Jt9fyVWL+momVcc
+VsG8fyLj+14wYsu+A66yLibOLge+A764Dvogu+grzdxcPTuKqy/R+8ug++g
rzd1lvQwcXDyHXT1xncAALCIxcfr4Es/P+D/OB2Rp690SLzHw4zZwR37R9RL
6r1n+TFH3uOrt4OA76ALcXB9vU2tavTWAd9BF3wHfb2Jg/vRm7hs/VBnSV9v
4rJ64Dvo601cVg/qLOnrzfUNABDlkU9Mc5PT8N//81DNoSWf/0cvvQnqJO47
ZNWP2jcRrV21YNvezG0femx15PXTr3rU23HSV1oXfAf07jr4DrrgO+jrje+A
3l3F+A74PHp646vpge+grzd1lvTAd9DXG98BAMAitr7+I9feFzz3ymuR1xzc
//zhHggJ6/XNWNg8Sl9q00+50bWVShLvQz2yb0VMX3l9Vq2liAfU03vdXn+e
je07LFx4jnftuw5xcPTuOvgOuuA76OtNHNyP3sRl64d8B329yXfQA99BX2+u
bz3wHfT1xncAALCw4uKf3PFi6uveuPPC8DWnbdhTaJvTNvzE/zE6ppDv8Pvh
HIa0nIdDT66LvC6X1jVCnSVd7P4O9JWuH3wHffAddMF30Ncb3wG9uwq+g77e
+Gp64Dvo602/AT2M70AcXE9vfAcAAIt924KFx80Ijj7lK5nxc8ljkNedcMzK
XL2RB/WF8vQ0aBGF8x3ievQ1Wf1MNKfEnIfBdlds8X6s1FnSv7aIg6N3l8F3
0AXfQV9v4uB+9CYuWz/4Dvp6sx5cD3wHfb2ps6QH+Q76euM7AABY7DscW562
9omRr911+cnha895avR8w/gU4bbPvyVXbL4NyFwrrDnVj8eP8mtsptZfHM1n
WHJj+H204bKzI7//83WPNUIv8h30ry3i4OjdZfAddMF30Ncb30EPOy7re1/G
AXwHfb3x1fTAd9DXG19ND/Id9PXGdwAAsOjXRMrjO/x+8uYwBn3UzCtG5zz0
tnvTKW8bxK2/9PMD/o/VEXu2rg8m1n07+NaGieB/b99RyCMQP+b2FUuDWSee
lNiDe/PUq96Pz0C+gy4yrzRzHuos6eiN76ALvoMu+A76ehMH96M3cdn6wXfQ
15u4rB74Dvp6E5fVg3wHfb25vgEALA5MFqqfZNb6/8mq+zJfJ3MS23foYp+H
qhzc/5twbNvU8S35DrrY/R2Ig9cPvoM++A664Dvo643vgN5dBd9BX298NT3w
HfT1xlfTg3wHfb3xHQAALKy8hDx9jO0eyfM2p7/+dw+uiqznz9sHAZoD+Q66
EAdH766D76ALvoO+3sTB9TBxcPTW1RvfQU9v4rJ64Dvo6831rQf5Dvp64zsA
AETZe9P8SM8BqR/06cUfCxYvXhx8bvPuyGvjeQxJvQh+tHF1tIYQvkMrId9B
F+Lg6N118B10wXfQ1xvfQVdvfAc98B309SbfQQ98B3298R30wHfQ1xvfAQAg
xr5tQz6BzYJteyOvt3MeTG+CBWfNCf70He8Y7luA79BayHfQhTg4encdfAdd
8B3Qu8vY+Q7EZfX0xnfQ05u4rB74Dvp6E5fVgzpL+npzfQMADLPr8pNTfYdp
K7ZEXivzjbvmvzXTqxjaRp6+1dAoyHfQxe7vQF/p+sF30AffQRfi4PVz7/7n
gqOfuCmYtnVJMO3WOUfo/Sy/l7/73scuMUrvjS/t9r6PXQXfQV9v8h30wHfQ
19uMB9G7fsh30Ncb3wEAIIEDk8EN049P9AymX/Xo8Ov3bUvNbUjiSz8/4P8Y
oRDkO+hCHBy9uw6+gy74DvUx+f/2BdMe+kI09p1G73Xyet/73GaK6o3f4x58
B329yXfQA99BX2+ubz3wHfT1xncAAEjm4P7ng7UfPnbIM1j9zGuJrx+qt0Su
Q6cg30EX4uDo3XXwHXTBd6iHm//t8Xzx7xjyPt/73kbK6n31Tx7yvu9dAt9B
X2/yHfTAd9DX24wHicvWD3WW9PXGdwAAyOZXP9gSbNy4MfjONx4MNk+9mvna
g8/dn+hVGObfRs57WyHfQReZV5o5D3WWdPTGd9AF30EXfAf3SCy7TAwc76Ec
Ujepit6XTt3r/Ri6Ar6Dvt6sB9cD30Ffb+os6UG+g77e+A4AAO559affC7Z/
9RvB7evWh0jc9LlXkvMkoB2Q76CL3d+BOHj94Dvog++gC76DW8JaPxVi4AZq
LunqTc0lN+A76OtNvoMe+A76euOr6YHvoK83vgMAQDIyruW7HwzkO+hCHBy9
uw6+gy74Dm7J3V8gR/8B38fSBpzpvXWJ92PpAvgO+noTl9UD30Ffb+KyelBn
SV9vrm8AgCiHJjcFC4+bMYgxHzXzimDbbw953y/wC/kOuhAHR++ug++gC76D
O6rW+2ENfjFEH5d6U9+qOvgO+nqT76AHvoO+3vhqepDvoK83vgMAgMWByWD5
MccP94Le8BP/+wZeId9BF+Lg6N118B10wXdwx9FP3OQ0Di5r8N/7w9sggTMm
7wz1cao3OSaVwXfQ15u4rB74Dvp6c33rge+grze+AwCAxb5tkVyHge+w9gn/
+wZeId9BF7u/A32l6wffQR98B13wHaoh/QVk3X3VXtLQDOQ8St4K/TXKge+g
rzf5DnrgO+jrje+gB3WW9PXGdwAAOILUWIp7DsI5TzHGHXfId9CFODh6dxmJ
9V36T+sG+N6friPzeFvv/QepnTjQpqeF+AkSg7506t5wjX2YzyD9BFyvs4dm
I+dbznsPuQ7kepCaTHJ98D8T/Z+5ZsOmwf0E76Z+yHfQBd9BX2/isnqQ76Cv
N9c3AIDFgcmhfIdpi+52Ot/ifttOyHfQhTg4encN+R4J47lpsdze7xc+u8n7
fnYF0Vtip+Ost52jIMca8RPwFKAsfW9Crie5ruT6kuus6/F3Odas+4ncb/Bn
6oF8B13wHfT1Nvmv6F0/+A76euM7AABE2XX5yZGe0lNvOpxDHJgMZp14EvkT
LYR8B11kXmnGhNRZ0tEb36E+whrteWN6W5fQ97UiYXywQBy1bXpLbFNivLLf
5ChAI+nnTsh1aedOyHXbtti87HeR/6uu+5k+IN9BF3wHfb25vvWgzpK+3vgO
AAAxrN7SJxyzMtj5+kGn25Z8ikVP/bv/44RCkO+gi93fgTh4/eA71EcYCy4R
tyN2VY6yPY8lNup73wWJy0rNI4l1kqMAncaq69TU3IlCnrENvbudQr6DLvgO
+nqbfAfisvVDvoO+3vgOAAAJWP2lp63Y4mxt1htbl4fbxHdoH+Q76EIcHL27
QFnPwSBrhH0fQ5so6zkY6vR64jkKEs8kR+FI/Fm0gGSq3kdaT0LuhOmJXWfu
hHxOpf3Ge3AG+Q664Dvo602dJT3wHfT1xncAAEjhwGQw8dF3hXHmt5xxRbDt
t9XmNode3jXIo8B3aB/kO+hCHBy9207RWj9pyNpf38fSBirHCPtIPLPoZ5s+
Cp3PUbDWp7vcbhnNxwm5tpyeR3MOO3ptmtwJ0xO7TO6EK83xjt1AvoMu+A76
euOr6UGdJX298R0AAI4g3sCNn1sZrL722mDixrXBuiv/R6TH9Hv/bmWw8str
wr/nRbaz6rwPRraD79A+yHfQhTg4ercZWYPrMkbo+3jagMv4pX0eTd2jTuco
GH+kH7OV4xxV78aZ98D1ne/6dqW3dX3bpPYg7+K1bl3nabkTLr21tvWzaCLk
O+iC76CvN3FZPch30Neb6xsA4AjiO5j6SnWC79A+yHfQxe7vQF/p+sF3cEvp
muApkPOQjatch0hs0nd8tIY4q93fV66pKvFQV+vBubbzIXFx33pPvTkm/cwd
Hwu9eqpDvoMu+A76euOr6YHvoK83vgMAQJRnr5mN7wBDkO+gC3Fw9G4zzmNw
1np0HhMefccpfcVGE3IUNOreG+TzqhyDxK99/6+2CdGrit5aNX9MjtBQ7kTX
6o4V+F/1fe20HfIddMF30Neb61sP6izp643vAAAQY982fAcYgnwHXYiDo3eb
8R7ngnZj+QkuatXXSVnvQd7ne9/bSFnvoWl9BiS2ZnqimNyJTtZ16hPviV01
32jcIN9BF3wHfb3xHfQg30Ffb3wHAIAoMp69a/5b8R1ggMR5Ftxy5eD8nTz3
Q9SGqBn5PzRjQuos6eiN71ANiSFJDC1c29uAOBc0FKv3rcQhtXMU6iCsuZS3
Hn7vdXx/ViOsuZRX761LWqu33V9F/k+G+qt0xZ+I5S4Zn9HcF3yfB9/XgOhw
8pbVA43Eu3nulde871tXSdJ73K/DuqG/gy74Dvp6c30DAAzzxp0XDmLMJxx3
brD02s3h/fLJB7aEj0WQmOn9t18XXDLn7fgOLSOsGW7mtUvfOzh/0/77fx7M
F2WO2NZYUZOx+zsQB68ffIfiyNxc4kNdXZ8LBWlRjkKd/xOJ/w+9n0UT+bvv
fewSA78nQW/5/TjUsZLvLjt3Qv7vOps7kdATW465zZ5lGrm8tZ4e43CNa+k9
cs0EeteG8R3IL9GBOkv6euM7AAAksG9bMOvEk0LPYdtv3YzlZW70yCem4Tu0
gHC+E5+rpvgOBmpGuIU4OHo3CbknSIwnnJd3KY4F+UjozWzWIkuvXd/XZxOR
e8nGjRtDqItSP3L/Fq2pQ5PMyNwJ3/cYl/eqhNyJNvmfcm4KHXPvWInVlidc
P1HwGmvLtdQWqLOkC/kO+nrjOwAADBPWWnrfscG0ueudriF6Y+tyfIeGE64f
TBpnj/AdBIlH+d7/rkAcHL19IfPpQb2kvLVMoFsQV6mMuZ/Io+99GQckt9bo
je9QHvERO+VDZNzj4rkTTaj3Vvo7l3t2KUrXhURvp9j5DsRl6wffQV9vfAcA
gBS+fkbwxzNmO8t3COn3rD7nKeaETSQxz8GQw3cQmta7sa0QB0dvDUzt6HB9
ZYM9BokNiBdian6b5+P4c9LvXZ87uR58X5ttB99BF9t38L0vbafw+u+u0vcm
BFlXY+dO1OFNVO6N1NtfPLf8hPXIKl4jXavv5QvqLOlCnSV9vfEdAADSke9+
12Oql17YzTitoWSuccvpOwisAaqO3d+BvtL1My6+g8RL2tiTge+M0efVpd7c
w6tjYihyT/G9L+OA7fMQe62G3G9d3k8kvjsuPbHlOKWOVdGe2GFvGBf709sP
39dPG3D2nYneTqDOki7kO+jrje8AAOCQA5PBDdOPD05bcqPbPAmonXDNbNbY
uoDvwDi8OuMSB28KXdRbYh4S/1DtydCPv4TehqPPZO19PlzlPMj14vtYugC+
gy5y3ybfwR0u1oLnGQ+Kx2F6Yku+rHxuZ/tOWLkTpie2yZ1weaz4xqNxmSMo
59D38bQd23cgLls/+A76enN9AwCMRmJyU49vD25fsTRYcNacMPb8mWdfT3zd
XfPfOohPz1nybXpOtoSRc54ivgPznsp0MQ7eZNqut8QtJIYRxoo06yX1Yyjy
2fE1amHdNgexGt/atoWwLrsDvcktcQO+g77e5Du4w1Us3MVYcGRP7C75Ew7A
O87GdX4ga62qQ76DLtRZ0tcb3wEAIJ3Qb1h/cTDrxJMGMWdDVm9oec/gtTNm
B6ufec37sUA6uXLqC/oO9HmohvzvmRgKdZZ09G6L72DWhw7qJWnFM7YuCeMZ
EvfJG0samUc1AnzrYlSNp+AXuwPfQReT74De7qjqHYtPoL2/du6EfF91MncC
Gofv/9W2g++gC/kO+nrjOwAAJHNoclOw8LgZQ35DHt9B+N2DqyKvX/LAz70f
EySTq65sQd8hJFbz1uSVy9yQNbXZ2P0dmh4H7wJN9h0kjmJiKJr1kuTz5HOr
1hAoFQvvfT6eQwW9i14nvdfjObgF30Ffb3wH94R5VCW+d5paeyaeOxGp66Tp
40O3sOpoyfVk9yDnu3U0+A664Dvo643vAAAwjHgOaX5DXt9BeGPr8sLvAX1k
7jVyTF3Gd8g7Vrf8Cbvm7TiO1WVOLBpE6gf0kLmx9trBccDoHYnpe9Rbrnm5
/gdxEMX5sniDcsx11CgRncNjyrE/Ml/3fV20nSJ60z+jHvAddLHzHaiz5J4w
vy7H/UTuO11YV2LnTsixR7wJciegLNZ8x/T5MD3Iu/B/UxT5Hwvrg9r10nr6
iC6sPakP6izp643vAAAQJezR8L5jnfgOwtSaeYP3nHDcufSbbiBefYe84/RY
7oTsc5fG6rnjhD0dZB7se3/bThG95Vqrax/kGvbRk0GO3eQeaeounxfx1foa
m/pNvq+LrjHkY8b07sK9s6ngO+jrTb5D/ch9I+7TmzjhuN1PZL4kcVP5Hu90
T2zQpT/nMXXCupg7EdbgzPE/IsfflWNuEuQ76OuN7wAAECWeo1DVdzj08q5I
vabpVz3q/RghSm11lnyM1fvr0WT+Z4/VmzwfLlUDnz529V7vCXpXvYZMT4a8
69Bd/U+YPKKmzd1MjFDG4r73ZRwwehOX1QHfQRfyHdC7qZjcCfFsyJ0AJ7R4
PVaZdTast3ILvoO+3vgOAABR7jvzqCGP4d1nXBCsuedfgj3fv6NUzaTJFR+I
9Jlet/eg9+OEI9TRV7qxxMbqMge0x+ra2ufKNck4libPLZpIpT7HPb3zxlfM
un4fPRnkmm5qbW0bM+fBd9DBzHnQW09vfAddvfHV9MB3cAd9JaA2Yuux7Fq2
2vMHuU9UudZl333/r3YF6izp643vAABgcWAyWH7M8YP48lEzrwg2T72a+Pci
vsO+iYURH+OTO170f6wQYWRstCu+Q8Gxul2D1fVYvVS/3TjkPeRGvIA69Jbr
Qb0nQ39f5NqUz25jHz58B13wHfT1xnfQgzi4H73lGkfvapTKwRwxNjDjVHnk
+ZHncq0617vtjMidcHWduxgf0+fODeQ76OuN7wAAYGH5Com9GBz5DtPWPuH/
WCHCyHX3RXyH3thSxqoyPpTtyhg2UvO2K3nl1joiO3cibw1WVzqQf5wPV3qb
eZlqjQSrJn/T6iWVBd8BvbsMvoO+3uQ76IHv4BaXY4k25Dv6xqXeZk2S6UE+
6NnVtTpaFdZjVco1ju2D72unC+A76OuN7wAAYDF585HY8oafDP/dle+w6G7q
wzSQzPFxAd8hb1zU1Lw1Y3XTQ20cxupOa/wzDh+JszmP0vViejJ0OX5AHFwX
8h309cZ30IN8Bz964zu4wdkYhRzYXDjLecipt8x5x2Y9VqyWbd4e0nmRbfq+
ftoOdZb09cZ3AACwODA56AH9mWdfT/x7Gd/hvkXvjPoOc9fjOzSQzDo0OX0H
GUu73Kf4WF3i9p30JhyMwyVGDck09lrpz8/k/6bp/c9dg++gC76Dvt74Drp6
k++gB76DeyqvR6Hnl67et+ZfZ5UH+T+SmpmmB7lZozToE9bUcayHcbPva6ft
kO+grze+AwDAEQ69vMu977BvWzDrxJPwHVpC6hqgHL6DjI197XdS7kQn85yh
3fR7MsicctzvgfgOuuA76OuN76AH+Q5+9MZ3cEuVGvhdqcHYCr178wpf+ahm
PZbMd8SbGMqd8D3OVaDLucAa4Dvo643vAABgcWAyuOmUt4Wx5Xmb9yT+vajv
EM91EKZf9aj/Y4VUEteHj/Ad2pD3KuuI7LE6uRNQKx3syeASfAdd8B309cZ3
0NWbfAc98B3qo/A6/N5YgzFGecJ+DB3Ue+rNQ8nrsbqWOxHriS3zO9MTe9zX
96RBnSV9vfEdAACiPHvN7PQeDAV9h6k184Y8B/pKtwcZpw7GdSm+g4zzZGzr
e19dYnInJF7c6bE6uKM/7zH1rnxfw20A30EXfAd9vfEd9CDfwY/e+A71ENY9
HbUWvzfukHGq733tAnn1lph2l653mefLmFXi9J1ej9Wfv5m6VabvhBx7Gzwk
V+dafJmh67w/f+FeUh/4DgAAwxya3JTeWzqv79B73QOXzU30HITVz7zm/Tgh
PzIuW3DLlYPzd/LcD4XjtXFeR2JqsNq5E9R1Gi/knI/7/0EV8B10wXfQ1xvf
QVdv8h30wHfQQcYXEg+0175IzHRcYqU+9A77IMf0Hvf1JPZ6rHHpiS3HKcfb
hdyJ3Dk9eJm1gO8AAJDMrstPHsSYP3LtfcFzr/R9ghG+w8H9vwn2bF0/6BGR
mOtAb4dWIt+X5hxeeOEF3venDcR7YkfG6r7H11CN3jn0fX21HXwHXfAd9PXG
d9CDfAc/euM76LBz+8PBd77xYKi3rHvxvT9dB72LY3InhmrZ+h6vu6bvTZh+
bXbuRNPiG2EeTwlfyGe/xi6C7wAAkMKByeCG6cdH/II/u/TK4N71ywc/f2zH
C8FLL+wOph7fHlx39bJg6Zz3pHoN5Dq0H/muxHdwR21jYUjGsdYy1/B9DbUd
fAdd8B309cZ30NWbfAc98B309Tb3FPSun51P7Bzoje9QDfEgvHsFPryJjNwJ
Dd3luq00/2F9lTPwHQAAMti3bZDb4Ir5t+32f1xQCvId3OJ6DRA59+jdNvAd
dMF30Ncb30EP8h386E0cXE9vcz8hDl4/+A7ukBwA7z5AU4nlTohH4yp3wsWa
K/FLfF8/XQDfAQBgBAcmg4mPvgvPAch3cEyY++po3Eo+7Gik97mzeQJrgJyA
76ALvoO+3vgOunqT76AHvoMfvfHVdDC+Az6PG1yu/TG9NjJr2Xa474TUdZLj
zeqJHfaEcfT5rLOqDr4DAEA+fv3o14JL5ry9lN/wB3P/Ntg89ar3Y4BqkO/g
HlfjcMaE6N1G8B10wXfQ1xvfQQ/isn70xnfQ05s4uB7iO5jrG72r4yrnocw6
K9MTW/IIJGYv2wjnA13yJow/0fcmXG6XtW3VwXcAACjGqz/9XnD7iqXBWadm
1196/8LzgqXXbiY+1yHId3BPOA6vOOaVcbTv42gTVXt6Sw6072PoCvgOuuA7
6OuN76CrN/kOeuA76OttrnH0rh98B/fIfKVqXL2uvs127kSkJ7bJnfDtKXjG
97XTdvAdAADKc3D/b8KxmNw/DYyFuwv5DvVQxXsgBq6rt6yT8r3/XQLfQRd8
B3298R30IN/Bj974Dnp6k++gB75DPZSu/9MbtzdhLWNS7oTpz9Blf0J8GNMT
uy7vp8vgOwAAAOSDfIf6kDl7obzY3thWxn++97vNFNWbvBL34Dvogu+grze+
g67e5Dvoge+grzf5DnrgO9SHxO2LxOhlvN6ma16uF4nPy7yh07kT/TpVpm6V
+DCDntj8z0S48/v/Glz6T+tC5N7ie38AAJqOfO+/9MLu0Ld98oEtgzHwQw8/
Et5Hn3vlNe/7CPVAvkP9hL2ms+oA9cZ3Mq5r0/i7yYjemf4DetcKvoMu+A76
euM76EG+gx+98R309CbfQQ98h/qRmHxmHL43HzI9pLuIyZ2QHJDO5k7EemJL
72853nHInZBjzJrTix5dvr4BAMrwqx9sCTZcdnauPtLTTj03+NJt/yeYerO7
3yXjCPkOushYZOGmr4TI+gjmPfUi41/01gXfQRd8B3298R109SbfQQ98B329
yXfQA99BD7mel3/3wcEYnHzuqDamrlPncyf6noscoxzrIHeiZd7EyDWECf5D
244RAMA10kd67YePzeU3JPGRa+/Df+gI5DvoImNNE7eSfCLf+9N1ZMyH3rrg
O+iC76CvN76DHuQ7+NEb30FPb/Id9MB30Neb+vflsXMnisS8W8WI3Anf50AI
a4iVPLamHAMAgDa/vGt5ab8hwozZwarH/8378UA1yHfQxfYdZL7pe3+6jtHb
1I3zvT/jAL6DLvgO+nrjO+jqTb6DHvgO+nqT76AHvoMuUr8Zvd0Q1vfx7RH4
9if63oTJnRBN6s6dCPMcKu47eQ8AMG4cemy1G8/B4s/XPeb9uKA85DvoIvNK
MwYnDq6jN76DLvgOuuA76OuN76AH+Q5+9MZ30NObfAc98B309SbfwR1OazCZ
Gkhdq+tk+RPSX6Nq7oQTfXr74/vaAQDQ4tDLu4KFx83I5SW8f+F5weLFi4Nl
n/18yOV/8xfBrBNPSn39vM17vB8flIN8B11s34F8Bx29zZwHvXXAd9AF30Ff
b3wHXb3Jd9AD30Ffb/Id9MB30NcbX80dYc9uRzH6pDi81NA2fSciPbFNPN+3
r+DSn8iROyEauPpM0dT39QMAoMHem+Zn1ky66Ibbgu1Pp69FkPHwf/z4Z8H9
t18XnHXq8UPvX7f3oPdjhOKQ76CL8R2Ig+vpje+gC76DLvgO+nrjO+hBvoMf
vfEd9PQmLqsHvoO+3lzfbnER/5dYe9nPl7i8eBamJ7b0Y+hsT2zH2/N97QAA
1M6ByeCG6ccneg6X3Hp/4bpzMhd5+aF1kfyJaYvu9n+cUBjyHXSRcTdxcD3w
HfTBd9AF30Ffb3wHXb3Jd9AD30Ffb/Id9MB30NfbfGdSZ8kNkpNQKf6tVPPH
5E5InaNO504UgD4PANB5DkwO11iaMTtY/cxrlbYrtZuWH3M8OQ8thnwHXYiD
6+tNfoku+A664Dvo643voAf5Dn70xnfQ05v14HrgO+jrbb4z0dsdYa/jMrH7
h77QqNi37It4E1LjSHInJA+jk7kTfai1BACdZ/Lmof4MC7btdb7t0zbQ56Ft
kO+gC74DencdfAdd8B309cZ30NWbfAc98B309SbfQQ98B3298dXqQWL2YYw+
Z8xb4vq+97nscYrP0oXcCdl333oCANTKvm2RfIejZl7hzO+WcfIjn5h2uNbS
ii3+jxUKQb6DLnZf6YcefsT7/nQdfAd98B10wXfQ1xvfQQ/yHfzoje+gpzdx
WT3wHfT1Ntc3dZbqQWLyYRw+Kf7+0BfCWHeTchzqQv6fTU/spuZOSC8M3zoB
ANRKrM6Sa3/A9KyeNnf9WHy3dQnyHXShv4Mu+A764Dvogu+grze+g67e5Dvo
ge+grzf5DnrgO+jrTZ0lPZ5++ulg48aN+DwpmNwJqeskuRNDPbFr9ifamnMC
AJAXGcve9b5jj/gOa59wuv1dl59cyHeQvhDbn/4FHkUDIN9BF+Lg6N118B10
wXfQ1xvfQQ/yHfzoje+gh+iM1rp6+96HcYE6S7qI72C+L/EdyiPxKcmXcO07
SD6G72MDAKidr59xxHdwnJcwyHdYdHeu1z97zeywD/W23+I7+IZ8B12Ig6N3
18F30AXfQV9vfAddvcl30APfAQBcYec7EAevH+M7oHd1wt7djn0H38cEAKCC
VWvphOPOdRfz7213+THHF8qj2Dex0O0+QGnId9CFODh6dx18B13wHfT1xnfQ
g3wHP3rjOwBAVaizpAu+g1vC+kuOPAep5+T7eAAAtPjdg6sGMebpVz3qZJvi
IZhtrn7mtVzvkbpMTfIdDu5/PnjygS2DmojyfS11oKpsU+Zrr/70e4P+wbL9
JtaWIt9BF7u/A32l6wffQR98B13wHfT1xnfQ1Zt8Bz3wHQDAFdRZ0gXfwS1S
F8mV79C0+A8AQN28sXX5IM48/7bdlbZl+xinbdiT6z2HJjeFeRdN8B2kz8TE
R981OIY4so+rHv+3Yvr25mlT6y8OZp14UvJ2Z8wOLrn1/sZ8/5DvoAtxcPTu
OvgOuuA76OuN76AH+Q5+9MZ3AICq2L4DcfD6wXdwT9h3mn7SAAC5kPX8Ezeu
DfnWholIHPy9f7cymFj37cHfc9F7/T9+ak5kO/9l5W2Zr5fPXXXeByMxfZ++
g+2ZjCJ3H+4Dk8FNp7wtcowTO18M13hMPb498rejZl4R7Hz9oPdrg3wHXYiD
o3fXwXfQBd9BX298B129yXfQA98BAFxBvoMu+A71UKXeEvWVAGCs2Lctff29
J3z6DnHP4UOLrw69keuuXjbogRHnM8++nrlNmZ/dNf+t2b7CgcnIa044ZqV3
74F8B13kOjFjQuos6eiN76ALvoMu+A76euM76EG+gx+98R0AoCr4DroY34H8
EveUyXs4Y/JO7/sNAKDNfWce5d1raILvILWVjLcw7fxbEuP+UidpKOdh7vrM
2kh7b5ofeX1qr4uYBzRtxRav1wX5DrrY/R2Ig9cPvoM++A664Dvo643voKs3
+Q564DsAgCvwHXTBd6iXm//t8WDa1iWjPYeHvhD2hvC9vwAAPrD7OjQBX77D
s9fMDj//T1bdl/k6u1/2SN8h7iUsujvTo5hc8YHIthc99e/ergvyHXQhDo7e
XQffQRd8B3298R30IN/Bj974DtAFXnphd3DPV78YrjcblbcO7qG/gy7UWdJh
40u7D+c/iAdhfIje43t/eBt+AwDAgclg+THHe/cbvPoOfQ0kz2FUX2c7LyJk
xuzgjv3JNZHiuQ6f3PFi9n5M3hz1NBbd7e26IN9BF+Lg6N118B10wXfQ1xvf
QVdv8h30aJrvYNYAzZw5M5g1a1aI/VzW/Iwcc2dsN2mb8ecy/v/Szw941wJG
I/0Md9zzzeC6S88emnf6XOM1rhjfQSDfoX7Id0BvAIAmsOvyk4/Euk89N7jo
htsG90th48aNhZ7nea/98+Yrz/LrO0i8P8M/sJH5ll2b6uhTvhJMvZmwvwcm
gxumH5/Ln7DfE/GAcu5THZDvoAtxcPTuOvgOuuA76OuN76AH+Q5+9G6K73Bo
clOw+tprg7NOzVg31RtDr9tbbAz960e/Fm73kjlvz1wj9e4zLghWfnmNtzE6
5GdUPWF8B32os6QL+Q5+9MZ3AACIcuix1V5rHIXs2xbmEXjdhzzE/ITUHIlY
7oL4E6NyKeKehvCee37m5TjJd9DF7u9AX+n6wXfQB99BF3wHfb3xHXT1Jt9B
j6b5DgbZl6k189JzqI9ZmdivLQ+/e3BVpFaqmSdN7CyeRwH++NUPtgT/e/uO
4PGJy4bOJ76DH+x8B+Ky9YPvoK83dcQAABLox9JH9UiuE5k73P/xP2y87xCv
s5RWF9TOIcnT28EQnz/5OifkO+hCHBy9uw6+gy74Dvp64zvoQb6DH72b5jsY
sryHPDVU04j3wDvnqeYdOxQ4n3deiO/QAKizpAvr7/X1xncAAEhm6sppudbk
18mba98X5kU32Xcw/aeF6Vc9mvq6u+a/NTrv2fCTXNuPz3F8+TDkO+hCHBy9
uw6+gy74Dvp64zvo6k2+gx5N9x1G9aqbtvaJUtu11xpJ7kST5ycukP4Weecr
beTQk+ta7zt04RxRZ0kX8h309cZ3AABoLjKXeeGnfuoK5UFyrs049a9v+ed0
jyZh/pN3zhMfE/vyHch30EWufTMmpM6Sjt74DrrgO+iC76CvN76DHuQ7+NG7
rb6DsGDb3lLbXfvhYyvnTbSCfr3bsh5NK4jVwG2d79CRc2T7DsRl6wffQV9v
rm8AAEV643UZH7VqTJfC1PqLI+PUzVOvpr42Xoup0Lg2NiYW38FH3zryHXSx
+zsQB68ffAd98B10wXfQ1xvfQVdv8h306ILvUKbPtGD6rvmsRavBI5+YVik3
pBW03Hfoyjki30EX6izp643vAACgh8TfpYdXm8Z0cfZ8/45g2czkucyfr3ss
eQ6SMP8p6zuUHRMvXrw49AsWLjyn8KPwl6efPvj8P33HO4IFZy6oxMaNG8Nx
JqRjx2V978s4YMbg6K2DHQf3vS/jAHqjd5exfR7f+zIO2Ne3eBCut1859miN
u6f97VVDa3/K9pkWj2UcfAep3VO0LmwrabHvUOc50r6f2D5mHfcTGIb5pb7e
+A4AADqY/l1tGdPZ/Gjj6tR5S6R+0ootQ+89NLkp9Ft8+g4zZ84cue+arL72
2sEY046vjzNZOqCRjt7279C8fu1trwd09EZ3v7r73qeug+Y6+qb97AqnvsOG
nwSHHludPm5fdHch/6DrvkO8r1zb19Jn0lLfoc5zZNd51bp/Jo1NuHfXd+8W
b8f8zvYgoB7wHQAA8iPjEJkHyP1SkL4LeZDXvvTC7uDe65e0akwX5/GJy8JY
+cqr/z64/G/+IjOmfs5T0ZzzpPkOvsO1iePL+O/G4bk9JowT18b3vrb9eZKO
WT/73t8uPR/1yHM9vdFe757O9e7vfo7m9eqc9B5XOPUd+jFZe334kPeQM27r
Kt/BzKkMVednab8ffE7O/fzlXcuHtWlBvoM5TnPMud/ryXeInJuC57/uc2TX
Ha3rHpr2Xcm9u/57tzy3fQf7OY9uHw22xvgOAADD/OoHW4Lrl38qOOvUETVS
C9JG3yGOjMv2bF2fmAMxNBfp9/3y6TuY77yy3Pi5lYPPl5pLUidJ+NaGifDx
9nXrM382j+a51Do0PpY99xpX4jqIZ2fGKDu3P4xWCvrb856scwPVdLb1Npqj
c/262/Og+LnwvX9dxJ5/mvUavvepy8T1lt+heb16G2S84lrvyj0jEnwHYdfl
J1eam5T1Hcyc4dOLP5bse5x6bvC5zbtzb0/Wc93z1S8enp/NmB1s++2R9/36
0a8FS+e8Z+gz/vqWf87c/tSaeYn79gdz/zZccyXImqHrrl4WrH7gx+F7nlrz
D8Gyz35+8Df7NZfcev/QZ8gaLnm9/VrzuOTz/xg5jlG8+tPvBRsuO3son9zo
KZ8/9Wb29vKuC0s7Tvt4Zf+zanYd3P98uAZvwVlzEnWe94WvB8+98lrm/o46
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
8K+TSy6+pPu6M86QKPo9qit6By16B33ezDsAwAl2lnTbY5+5xz2Tu/Ptn5lH
ut8lvUPzMO+gxTo4eceO3kGL3kGfN72DNm/mHXTq2ju88cqPkrV/0Xt92vbk
GXUvGn8/pIH7LNm5EDnWydPXte//8f0D16jTfZHseVqv97P15V7XYtex66bu
nsKs3PFa72vPsd9ur9s+7G2e/t2hnucvpzqfKx45/NLQM/mD1t373VdsfqLX
nIHpddZD2q1smnmj6/27nlfnMffce+K5twbeD4t+j+qK3kGLfZb0eTPvAACe
jtdm9NtXsrDjr7mhd2ge5h20WAcn79jRO2jRO+jzpnfQYd4hTN516R16nePb
zzDn+3by97jJXNfN8Xr3/+uu/+/YGnefMwTc11n+UPKrn2zJ/Fy2Xm2Pz9M1
6359Q+fHXLRpf9/b2K8z6LsH1OvPZHYD/rp+59e55Iq1bs+kQX1Ortv1/v5n
P+y4ckmuj7dZhL9c88ix2zX9YLJixYpc34POPO1+0K8L67pvXvXtvp1HWd+j
OuJ8By3mHfR5M+8AAB7/7K65x073Hy75Mcvxx9Wf2hv+OQqGw7yDln++A+dK
V4/eQY/eQYveQZ83vYM2b+YddOrWO9i68OTUvcl9U+uS762f7Cn9u5u/+0+l
nDN98jm3ZX+euec9O1cva3vNu61n2961L/y6/TXtna+/n3fupcnfb9rX+pr9
bo//35ZBut68f+ux//bft9efvV6nb9/TpyavTD5+7hlta+p2LkGeM6b9/ZTS
j73401e1zdC7+YilpyR/8sWvun2YhvmeWFbrr/xE1yzBvA9/LPn8Ld8duObe
mUuvHNM/b938z638/ffz72v+n2b9rgN9v+6X/ut/6eoIPrDkz5Or1mxqO6Mi
j1G+R3WT9g6GeYfq0Tvo86ZXA4ATOmdkb35tNvg1oR6Yd9BiHZy8Y0fvoEXv
oM+b3kGHeYcwedeldwgh79qu5ZMa5v1D374yVH1b/M/flMyGvT+MA/ZZ0mKf
JX3ezDsAQDv/XDDmEpBi3kGLdXDyjh29gxa9gz5vegdt3sw76NA7ACiLP+/A
Onj1mHfQ5828AwC0a9u7dPlD5X7+2enkqlP+PJk62Jw9J3EM8w5a9u8wfUzI
PkuavOkdtOgdtOgd9HnTO+gw7xAmb3oHAKNinyUtegd93sw7AEA32ye1kpmH
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
15K7147nXYPdNRH8mpvM1tpjzzudUbBOIZ1RcJ2CcEaBeQcAGML0nSe6gfUv
d/99Wb3D8oeSw0c4X7pJmHfQssdQ6XMe9lnS5E3voEXvoEXvoM+b3kGHeYcw
edM76PJmnyUdeodquH3rC6zD2voxP2eK5V1ozf3uC2uTd+eMgr/vUdP6hLzs
tobOHQAqNTvdOgP6muff7vn3RXqHR5b/x/beYck6eoeGYd5Byz/fgXXw6tE7
6NE7aNE76POmd9DmzbyDDr2DPm/OldahdyifvR59pPVY2wenBrejKdyeSTXO
u2tGId33qKEzCmXiZzyA2NnP/tJ7h0PbkkVnnU3v0HDMO2ixDk7esaN30KJ3
0OdN76DDvEOYvOkddHnTO+jQO5TL7rNlrCPbunTo29IUZeTtzj4o+P1uzSj0
OJs59Lp+GSxfU/bchcuoBvcfAKjU7HRyxznvdWvLF23a3/Pvh+0dOmcdzPzr
nwx/WzEU5h20WAcn79jRO2jRO+jzpnfQ5s28gw69gz5v9lnSoXcolzszoKR1
WTc3UYPbVGfuXOKK8u45o3D8bOZYZhTc7bC9puZul90+t7+T3V7rUuy8jI7f
ee48Bu7fADCU529c3P8MhiF7h5lbL+rqHDhXupmYd9BiHZy8Y0fvoEXvoM+b
3kGHeYcwedM76PJOf6aQd/XoHcrj7q8lrgkz85CtzPX/dA0+dBdQGusT7LyQ
tFOYftDNZdh6v9ubqmjuJWRUdL4EAJrIfv72PVs6b+8w9347rlzSs3MwE8+9
Ffx2YjjMO2j55ztwrnT16B306B206B30edM7aPNm3kGH3iFc3qyDV4/eoTzu
jNyS147duvHxtWP+bP8zqo5gCK0Zhbkc8swolH4/n/saI/U9nF8CYAw986UP
tNaY/3LNI8kLvz7eE2T0DvYzd//Wda0zInrOOnC2QyMx76DFOjh5x47eQYve
QZ83vYMO8w5h8qZ30OXNPks69A7lcfMJNViXRoNVNaNQsqLdg922Ot0OAJCZ
nU5umX9GW1/wJ1/8avLwulWt//7kzgPJLw/sS2ae2p58/Yark6su+GDfroFZ
h+Zj3kGLdXDyjh29gxa9gz5vegdt3sw76NA76PPmXGkdeofRuTXhFx6NZs9/
lM+fUbBOIZ1RONYpVD+jUAW75rxdm91+9g0DMPYObWvNNpRl6Xf3hb9dKIR5
By173JI+52GfJU3e9A5a9A5a9A76vOkddJh3CJM3vYMub3oHHXqH4dh90taK
bd3Y1pDpGuD2Deo4m9ndR47vexT6Pls1u412u3v+W5jLxf5uHHIAgJR7rDD3
c6/n3kez08nkX/0pnQOYdxDzz3dgHbx69A569A5a9A76vOkdtHkz76BD76DP
m32WdOgdBrO1Y9cxbF1FxzBmBs8ovMTvgx6effbZZOfme5Kdd/4gOfDKq8Gv
BwAqMTud3Hz+h5M/O//8ZNGiRcmHP9x7hmHe2qf7fo7fPPmt5AsXvK9Q3/Ce
JZ9JNs28ET4HjIR5By3Wwck7dvQOWvQO+rzpHXSYdwiTN72DLu/0Zwp5V4/e
4QRbS7Z15XE+s3jcuV6hofse1YH1DunjE3oHANGanR54zrOzYHFy0ab9mZ/r
jVd+lNy3+qrk4+cO3n/pPy/7dHLVmk3J9O8Ohb/9KAXzDlqsg5N37OgdtOgd
9HnTO2jzZt5Bh94hXN7jvg6uMK69g60tu71wdk2417OHXu/uxV5v715bb9d5
/HX2vf4ct7db/2/ue1d23qHvl01nvUP6mJDeAUC0Zqd7ntMw79xLk1s3/3Py
wq+LnfPs9maaeyz2i1/8vIXnHvFi3kGLdXDyjh29gxa9gz5vegcd5h3C5E3v
oMubfZZ0xqF3sH+3rf2SGnQmg1tXr0F+tVbiXArnHo8unXegdwAQtR69w0em
dvU+zwHog3kHLf98B86Vrh69gx69gxa9gz5vegdt3sw76NA76PPmXGmdGHsH
t1/S8TMZZPslHT9X2H1NXnuv+16/8GhpeXP28ej8fZbsdbqhrwcAKtHRO8xb
vSX8NaFxmHfQYh2cvGNH76BF76DPm95Bh3mHMHnTO+jypnfQaXrvYB2DrT27
16qLOgZbo26dM/z6M13XVMa+TbaPUOhsm4K86yPdZ4neAUDUOnqHqYNHwl8T
God5By3Wwck7dvQOWvQO+rzpHbR5M++gQ++gz5t9lnSa1DvYvz//TAbFfkmu
Y5j7WtZrWMeQ5zXx7n1G6EDY76cA8q4FegcAY8HrHU5aeF0y8y77K2F4zDto
2fOI9DkP+yxp8qZ30KJ30KJ30OdN76DDvEOYvOkddHmnP1PIu3p17h1aZzJs
XaU7k+HuC906tDvP+fBLha/duocir8PndffivOfuX6GvPSb0DgDGgtc7zFuy
Luy5DnPX8v3vPEb30UDMO2j55zuwDl49egc9egctegd93vQO2ryZd9ChdwiX
d93WwWOSnoFwaHKZW2s/eMfS1np7iPu5u57pB6VnMrT2S5r7uqN0DINYxnk6
E1sz/8OLnMM7ct5z38tcHdXcfezIvr3Brzc29A4AxoLXO8y//smw1zJ9p7uO
5XvfDJ8LhsK8gxbr4OQdO3oHLXoHfd70DjrMO4TJm95Blzf7LFXHnUeQY13f
zRlUdH93+xAd2uZ6jjL25s/dMcx9Lbtdtt6s/Ldst9f1OcfnNlLpbAV9A3nH
gt4BwFjw5x3WPh32WugdGot5By3Wwck7dvQOWvQO+rzpHbR5M++gQ++gz5tz
pavhZgmGXKsfdQ7Avoet/ZJEZzKk8wMn9kvKPpNBZff2Y/dv2xOBddnqpevg
lveBV+gbVHnTOwCIWo16B3u8Q+/QTMw7aLEOTt6xo3fQonfQ503voMO8Q5i8
6R10edM7VGCEvYvcjETOr5Pu36TcLyl9Hfux/ZLq0zH0YudppL8zWZetXroO
Tt7avOkdAETN7x3WvxzsOuzxWXod9A7Nw7yDln++A+dKV4/eQY/eQYveQZ83
vYM2b+YddOgd9Hmzz1K5hp1zyDv3kJ7JYGv+8jMZ9kwN1YfURdo72M8U7t/a
vFkHrx69A4Cx4PcOq7e4eTpjPwOr/NPYz9ZfHtiXPPyNla01a3qHZmLeQYt1
cPKOHb2DFr2DPm96Bx3mHcLkTe+gyzv9mULeo7N9hsqaKbDPdXTXhGy/pNaZ
DHNfM9R512Vj3kHL1mrSn9/krcmb3gFA9LzeoS7oHZqHeQct1sHJO3b0Dlr0
Dvq86R20eTPvoEPvEC5vXg9eAtVeR2O2X1JR9A5aae/AOrgub3oHANGjd0AJ
mHfQsufx6XNM9lnS5E3voEXvoEXvoM+b3kGHeYcwedM76PJmn6VyuH2IQncJ
AzoGt19SxB1DL37vwP27evQO+rzpHQBEj94BJWDeQcs/34F18OrRO+jRO2jR
O+jzpnfQ5s28gw69gz5vzpUuhzt3IXS/4O+XtGcqObJv71h/XznfQYt9lvR5
0zsAiB69A0rAvIMW6+DkHTt6By16B33e9A46zDuEyZveQZc3vUM5bK0/RM9g
X9c6DzuTYZxmGfLgnGMtegd93ty/AUSP3gElYN5Bi3Vw8o4dvYMWvYM+b3oH
bd7MO+jQO+jzZh+aYo4cfsnNFNj+RYpzn7vPZHgpeAZ1x7yDFr2DPm96BwDR
83qHeR/+WLJs2adabP247Ld9K1ascH/SOzQf8w5arIOTd+zoHbToHfR50zvo
MO8QJm96B13e6c8U8u7PdQzTDx7bS0l4dnS6X9IfXnyV708B9A5a9A76vOkd
AETP7x3WPh3sGnZcuYTeocGYd9Dyz3fgXOnq0Tvo0Tto0Tvo86Z30ObNvIMO
vUO4vFmXPcbud7Zn0dFdE65jkM0y9MC+SaOhd9DiXGl93vQOAKJXh97h+HXc
Mv8MeoeGYt5Bi3Vw8o4dvYMWvYM+b3oHHeYdwuRN76DLe5z3WbL72NHXnzm2
X9IDlwftGHqqQUZNxvkOWsw76PPm/g0genXpHeY8f+NieoeGYt5Bi3Vw8o4d
vYMWvYM+b3oHbd7MO+jQO+jzHqdzpdP9kuxMBuV+SYX2WLJrrEFmTZb2DuPa
q6kx76DPm94BQPT83mH9y0GvxV6jQu/QTMw7aNnzyvQ5PfssafKmd9Cid9Ci
d9DnTe+gw7xDmLzpHXR5x9o7WMdg+yWpz2Qob48lzo0eFfssaTHvoM+b3gFA
9Pze4bK7ksNHjga7FnvtypmnX5pMHTwSPpcC7LGlPTbas2OL+93x/e88lkz/
7tBIn9OeP7zxyo9a68v2ubc/+/Og36demHfQ8s93YB28evQOevQOWvQO+rzp
HbR5M++gQ++gzzuG14PbOQhuv6RdE7L9kuxrpOc+W79h1+DOY2DWoTb8eQfW
ZavHvIM+b3oHANHze4cl62q3nt0E1pd84YL3tdbdO80799JkcvfPhvqc9jxt
Zt0VyaKzzu79eRcsTr7w7Udr8/1i3kGLdXDyjh29gxa9gz5vegcd5h3C5E3v
oMs7/ZnSpLxbZzJsXaU7k+HuC93shD13GzSLYH8/6tdp0veizthnSYt5B33e
9A4Aouf1DjZrsPvtZs4ahGLdQL++oat/WL0lX08w9z2545z3tj7Ovi/WW9hj
rZmntrf93UkLr6vF94x5By3Wwck7dvQOWvQO+rzpHbR5M++gQ+8QLu+6rsum
ZzJI90uytf+tq1y38YcXXx36mu3jin5dNzNRg9xjwD5LWvQO+rzpHQBEz+sd
zJLn3gh/TQ0xc+tFuTuH1Pzrnxz4Oe352calpwzuFea+Z/77nHnqtcG7B+Yd
tFgHJ+/Y0Tto0Tvo86Z30GHeIUze9A4atgfrzs33OHVY77bvue1ZZPsl2Rp8
iP2Syrrf2eca5vrtGkLnHxu/d2Bdtnrss6TPm/s3gOh19A722vptv6/H3j11
Zo+lO/c8st8V9jqMXx7Ylzz8jZV9u4drnn+77+c9eMfStvedeO6t3u97aFvb
Hkw2SxEyD+YdtPzzHThXunr0Dnr0Dlr0Dvq86R20eTPvoEPvUD23tm7nB/R5
vb3bv0iQvX2N1n5JojMZ0vV9m51Iz2So+nba1xp02+x6juzbG/x+ESPmHbSY
d9DnTe8AIHodvUO6jj6x48XanB1QN24m4bzTXFZ/dGH/fY7scbi/J1KrI1iy
rvfn7uwSlj808HswvfqjbZ93+d43g2XCvIMW6+DkHTt6By16B33e9A46zDuE
yZveoXzuTIKc+xTZOrk7p6Dkr5+eyaDcLynPmQwKtl/T/q3rkr23fs2x3iP0
fSJ29A5a9A76vOkdAESvV+/gueSKtckDP/6X5IVf93nd/Tg6tC33bIh1D535
9tsXqXPW4XM7M86inr6zvc9Y/lCwTJh30GIdnLxjR++gRe+gz5veQZs38w46
9A7VcGvcRWYDrCMo8vUCnMng9ks6fiaDPYcKnXkvnHMcJm96Bw32WdLnTe8A
IHqHtiXLTl8w8rkE4+TQ5DKXyUWb9g/1/gP3spqdTm6Z7/UTCxYn9x/OOLOh
szPK8zEVYd5By57Hp8/p2WdJkze9gxa9gxa9gz5vegcd5h3C5E3vUB63Bj/K
vkQZ3YN/JoNqv6T0TAa3X9K+vY25r9g6eHr/rsN5GrHjfAct5h30eXP/BjAO
7Oed/U635wnpz70NGzYk902tSyZvX5tMrFnDmQ/H2WPiRy4+yc0szLybLxN7
ruB3Oz17h47ZhZPPuS1zn6v0WvyP++DmV4PkwryDln++A+vg1aN30KN30KJ3
0OdN76DNm3kHHXqHcrm17RLW+dM9l9rOZNi6SnYmQ/t+Sc1dr/d7B15/r8mb
+RIdegd93vQOAIBOP90w4c6/yP0xOc7ufuZLH+jaMynP+Rozt17UdXZEiHM5
mHfQYh2cvGNH76BF76DPm95Bh3mHMHnTO5Sj7/nRBdf+VR2D2y+pBmcylC3t
Hdj3R5c3+yzpsM+SPm96BwDAyHr0Dp3nO2xcekp7f7D+5Vyf2x7TZ+7hJMC8
gxbr4OQdO3oHLXoHfd70Dtq8mXfQoXcoj1uzV/QEJeyXlJ7J0ORZhjyYd9Dn
nf7OZF22esw76POmdwAAjGx2um2fpa6zMnqc7T1v7dO5Prc9xq9D78C8gxbr
4OQdO3oHLXoHfd70DjrMO4TJm95hdPY4P3Sv0Nkx2CyDnQNh50HE3jH0wr4/
5B0zegd93vQOAIBRdc4kLN/7Ztvfd57/0Ot9+uo4F8J6hyJnS9vvuQOvvFqY
nQWSXsMlF1/ifoeOwh5X2nNVnGD7Z6Vv2/crfYxi50qHvrbYpedppEJfT+ws
b793CH0948DvHUJfyzjwe4fQ1zIO/Ps3jy+qY48nLd/d20+cF0fe+dkavpsX
sPOdpx90ZyHIzl7IsV/SH158tXWdobMKye/V7PF46OuJnT9fYs85Q19P7Px9
lshbkze9AwBgVE98dt7g8xd6zDsU7R2G+ljPwoULuz5PSHaWub9OMM5vD/p/
g96Ht8vLPn38XZfrivnt0F9/nN5O79e+OlxXrG93Zkze/JyJ5W3fzs33JDPr
rnBnodmf9t/+/T30tYZ623IwaS7m0OQy1ysE7xa8WYaDdyzt+r71+j1Rh0xD
vO3/Nz/Dq3170P8LfW0xvp2yXi39//7bdbnOGN7ulbe9Te8AACjCXh/Utp7+
3Fs932fRWWfTO3T0Dv7zm3F9u9/f93rswtvVvB3664/L28P8vzpcb4xvh/76
4/526K8f89uDMq/LNTbt7U62hj5oTdvWszs7iCa/7Uv7hLRTsCzs9tapU+j3
PUk7on79UNa/p7p8P9T393HMIOTvw84/ebuazO2/e/UOoa8tprc778/0DgCA
UfmzDl3nOhxne6QW7g5K6h1sbyTrHhYtWjQ0+7jO3iL9f0VN3r7W7R9kv4tT
6e/mlP/3nX8Xw/unbL+Czvez/5c+Xun82Lrdjqa/v/19Z97p/0vfHvT563ib
6vb+nfy87U/779DXGNv7D8q7Sbejae+f8p972sd0/hyp47U36f19nffvNO9+
P8fTt/3Pn/f/jcv7+H6xcdVQa922Jl+H25Dnffbs2NLqFOx22hq9nZ9sew/V
uU/Isn/rutZjy/TfgP9Y0/87//dv+n7pf/v/hvr9/zr9XBjl50jnx6Q/U/o9
Fgx97U18/6y808eDnXnX+WdIU96nV+bu/v307szvWd3vV3V7/86PTc8voXcA
ABTh9wknn3NbMvNun/OeD20r7XyHor3DqOx3Zfr1ly37VPDsY5fuf58+Bg99
PbGz/TfJW593+rwn9PWMA39dNvS1jAPu31r+OqH9fAl9PbGwff8LrX3ffWHQ
84jtPnDk8EvJkX173cyxnd1sZynE0CnkUoP7TpPZemH684RzjquXnu9gyLt6
nDegzzu9f5M3AGAos9PJLfPPyHfWc8nnO1zz/Nvy2+v3Dpdf/tfh84+cPWf2
X7sZ+npi5+fNOqEG67Jh8qZ30Ejv2+St4a8T0juUw9bpR1n7tjX+Kr4X9jk7
z2a2fiTtFIKv+QfmcqjB/afJ/Ncnsw6uy9uwLlu9dB2cvHV50/MAAIp45ksf
OLYOv2BxMnVwQOcwx54flTXvYB3Htt/3mauokP2+pHfQoXcg79jRO2jRq4XJ
m96BvJvI1vTLWAO3ueChvu7h37rHzG0zCjZzEdGMgrsdc7fH+gG7fXY7y/z8
7ntXg/tQk6Wvv2feQZc3PY8Or7/X503vAAAYlu3/mnYON782m/0x3mxEat7a
p/N9PXqHsWSPu9M1WXsdZ+jriZ3fO5C3Br2DFr1DmLxZB9dI5x0M8w4lKHFu
wL4frX2Pjs8oWB8R5YzC8T7BbpvrFOZuq93mP7z46sB9p0rrHizL0PedCLAO
HiZvXn+vwbyDPm96BwDAMOy5RLr+PvHcW/k+Zu751salp7T3DutfHvrrud7h
1GuT3W8Pnq+oAvssaaXr4PQO2rzpHXToHbToHfR5s8+SNm96nnKUNesQE39G
wR6XW0+QdgrWJ4x6loX7+BL6FzvPIvT9JwbMO+jzpufRYd5Bnze9AwAgL3vt
Urr2vmrPwaE+9vkbF7f3DpfdVezjlj8U5LYz76Dln3PMOrgmb3oHLXoHLdbB
9XnT8+gw71CeUc91aBxb77dOIZ1R2DPl1u8d4dnY9rVG2UvKepDQ951Y0Dvo
82ZdVod5B33e3L8BAHnY85CinYPTsV/SSQuvS2bezd4v6ZGLT2r7uE/uPBDk
9jPvoMU6OHnHjt5Bi3Vwfd70PNq8mXcoSST7HlU9o1CFot0DZzqUi95Bn3f6
O5O8q0fvoM+b3gEAkMnrDC7ZlrNzmJ1OVp16RnLN82+3/rvtjIcFi5P7D2fs
l3T8c4Q+28Ew76DFOjh5x47eQYveQZ83vYMO8w6jsbMXbE3eneFcg86g0IyC
nR3x+jO17BOGZbcpT/9gnUoMt7du6B30ebMuq8M+S/q8uX8DAAax52GLzjrb
rbd/bufPcn1Mep6D9QT+WQyHJpe1zS5kdRh27p7//vOvfzJYDsw7aPn7LP3w
8SeCX0/s6B306B206B3IO2bMO+SXnu9sa9vuXOfQHULuGYWXxmqN3W6r3X7L
wnJJWT72/MDOqg59jbGid9DnzfkOOsw76POmdwAA9HVoW7Ls9AWtNX97LDSI
rV2+8cqPkrV/cdqxsxjWPt3++TrmF+YtWTdwr6UnPjuvbT5i6qD+POkU8w5a
rIOTd+zoHbRYB9fnzbyDDvMOvVkWNgNg69Tp+nXwTqHPjALft/52b388+f53
HnM/U8apewnlwCuvurVww/2SvGND76DPm94BANCLPQ9KO4eibn5ttvvzdsww
9Jt58M+TMB9avz9oHsw7aFmPxTq4Dr2DHr2DFr2DPm96B23ezDsce+zqXiO/
dVXQjqGrb6hBNk1mvQO9GoAysM+SPm96BwBAl465hCLmXXZXcvhI71mGtv2W
FixOJp57q/19vDkL97lWbwmeCfMOWqyDk3fs6B206B30edM76IzjvEN6JoPN
DtT5LGh3ZkQN8moyu3+zDw2AMjDvoM+b3gEA0Kbz/OeCss5umFl3Rfs8w8rb
3e+j9Vd+ou3/f2RqV9/+Qol5By3Wwck7dvQOWvQO+rzpHbR5xzzvYL+j3J5E
uyZcx1CXWYY8rB8JnV/T+b3DuPRqAKpB76DPm94BAOCzx/M7N9+T3De1ruV7
6ydbb9957/0D37Y/J6fuHXhuQ8rm4e9bfVXr3Gp/BmLll7+ZbJp5I3geKeYd
9PdD1sHJO2b0Dlr0Dvq86R10Ypp3aJ3J4J0pLJlLmPtaNjuRnjnNrEN90DsA
KAv7LOnzpncAANSBnROXnk8d+lp6Yd5Byz/f4YePPxH8emJH76BH76BF76DP
m95Bm3dT5x3S/ZLcGr1qv6Tj5zvb1+03j2A9xChfw/oSzkAuR9o7mLo+TwDQ
DMw76POmdwAAIBvzDlqsg5N37OgdtOgd9HnTO+g0Zd7B1vhb8wSijsHW/13H
sGcqObJvb+58XGdQ8BqPdQ7sr1QWv3eo8/0bQP3RO+jzpncAACAb8w5arIOT
d+zoHbToHfR50zto867bvIOt27v9knZNyPZLch3D3NdyHcMLj5Yyb+DmMIac
pWDOoVzMOwAoC/ss6fOmdwAAIBvzDlq2Dp6uEbLPkiZvegctegctegd93vQO
1XLr+t4ZCClb93br7uLX27fOZNi6Snfu89xttdmJQfsllZL1vr2Zsw92m+32
h75fxIh5BwBlYd5Bnze9AwAA2Zh30PLPd2AdvHr0Dnr0Dlr0Dvq86R2qYT+v
8557bB1AFa+9T89kCLJf0tzXtY4jRPbu6255Ijk0uazFnUW9by8zDhVK9xFj
3gF5zDy1Pdn01Y8nZ556bbLt90eDX08R9nP+Vz/Zknz9i59I5l12V3L4SDNv
Rx3RO+jzpncAACAb8w5arIOTd+zoHbToHfR50zuUz9a9h50lcGcNvPBo4a9p
vx/s49P9kmQdQ7pf0hBnMqjs3v548v3vPMbr70XYZyk/68LsucqiRYuchQsX
5n77z84/P1m27FPJslWrksmpe5P/uX1ncuCVV4Pfpiy/PLAv2bn5nuSmT3+s
9VzNnHn6pY3qHazP7XU75i1ZR+9QIvZZ0udN7wAAQDbmHbRYByfv2NE7aNE7
6POmdyiX20dohLX8PDMC9rugtV+S6EwGN5cx97Xc3EBJZzJUjX1/wuRd93PT
68D+7V57w1eSL1zwvra161H9+YobkvW7DtRr/Xv6zoHX3KTe4ZGLT+p7O+gd
ysW8gz5vegcAALIx76DFOjh5x47eQYveQZ83vUN57Gd0GR1A55q+2y/p+JkM
qv2SVGcyVMnf94d1cE3ezDsMz/6NrTr1jN5r2edemty4/kF3hpqx+/Pmf/gf
yYoVK5JFZ53dfz1/weJk1Q8eq8U6uP3b27Nji7t/2L5KTe4d9m9dl2zYsCH5
5t9eQO9QMXoHfd70DgAAZGPeQcs/34FzpatH76BH76BF76DPm96hPK4XKGnN
3/ZLkp/JcHy/pNA5loXeQZ838w7F2L+/Xv3B8r1vDvw4+/f68DdW9u0gbE1/
6uCR4LfP98yXPtDY3qH1/Zq7f2887zR6hwqxz5I+b3oHAACyMe+gxTo4eceO
3kGL3kGfN71DOdyMgmIOoYSOwfUa1jE0ZL+kotLegXVwXd7pzxPmHYbUYy8i
W4+//3C+zsBmknbdtLTv/MPS7+4LfxuPS8+2qGPvYNc2//v5surcc4neoVzM
O+jzpncAACAb8w5arIOTd+zoHbToHfR50zuUw80n1KBXGLxfUrwdQy/MO+jz
Zt6hoD69w7Dr8b958lv9zx9Y+3T42znn4B1La9k72Jk5y05fkCsnu3/TO1SL
3kGfN70DAADZmHfQssfd6WNC9lnS5E3voEXvoEXvoM+b3qEkqnMXMjoGt19S
g89kKBO9gz5v5h0KKql3MDbL1G/fpc/t/Fnw21rXeYcnPjsvdz9D71A99lnS
503vAABANuYdtPzzHVgHrx69gx69gxa9gz5veofR2Rp/GedJD7tf0jsPXO7W
GO11uuM2y5AHvYM+b+YdCiqxdzA249TvvIfdb4c976GO8w5+F0LvUA/MO+jz
pncAACAb8w5arIOTd+zoHbToHfR50zsMx34O2zq/rffbur+ib2idybBrIvoz
GcpE76DPm3mHgkruHUzn+c112W+pbvMOnWd6z1v/cq6Po3eoFr2DPm96BwAA
sjHvoMU6OHnHjt5Bi95Bnze9w2A2y+A6hq2r5HspsV/SaOgd9Hkz71CMdYpl
9w7/fmibO69glPOqq1CneYdfbFzV3cvk6B2GmXewDq6FXiI39lnS503vAABA
NuYdtFgHJ+/Y0Tto0Tvo86Z3OMF1DNMPuj1KQp/X4GYcapBJk9E76PNm3qGg
HvMO71+weOT1+OnVH+0583DRpv2t99l769eSq//uy8m1N3wlmVizpu3Pm7/7
T11r5U9NXunev/N97c+VX/5m5jXn6R0U1zRz60U9s3nPks8k1/6/t7Z/nh0v
tn1sZu8wO508/I2VvbP/73cnM+/SP2Rh3kGfN70DAADZmHfQ8s934Fzp6tE7
6NE7aNE76PMe197Bfp7ankX2OmPVfknDsGsKnVHT0Tvo82beoaAK9lnq93nd
Gvnyh1pr5D/dMJF86b/+l97v1+M1/LbGv2LFir5nVy/f++bAa8rTO1R9Tfbz
vtf79TP/+ifbPn5Q7zDoXO+6zJw0Ab2DPm96BwAAsjHvoMU6OHnHjt5Bi95B
n/c49A5tZzJsXVW7jqHfHkuhc2s6egd93sw7FFRV7zA7ndwy/4zuz33qtV3n
S/c6i3rQmQX2b2rHlUsq6R2qviabbbP7654dW7o6gnmX3eX+bvfTu5Pd2x93
tj/bvQ7b1TvMfdz+retydxknn3Mb+y4NwD5L+rzpHQAAyMa8gxbr4OQdO3oH
LXoHfd4x9g7pfknKMxmsyyirz2CPpXLQO+jzZt6hmErOdzjuic/Oy/W57Xu2
8bzTcq/x97vurN5hmHOlFdfU1R/kOHe7c95h3v/5v3V1EGlXYe87s+6Knt3D
za/NBr/v1RXzDvq86R0AAMjGvIOWPZZOHxOyz5Imb3oHLXoHLXoHfd5N7x2O
HP6t6xhsrUnZMdg+SDY/cWTf3tYaqzsDuoTPb/s/hc41BvQO+ryZdyioqnmH
f+9e509NPPdW2/sNc1Zyy6FtXfMCw847DDrHoupr6vn5C/QOvs8/+K+9P2bu
d0bX7EaOM6zHFb2DPm96BwAAsjHvoOWf78A6ePXoHfToHbToHfR5N6l3cB2D
7ZckPpPBvpbt92F9gF3DoGt0+yONsr+S9Sc1yDoG9A76vJl3KKiic6VN1zp/
n7X4Qmv8s9PJqlPPyLXG3+96suYdqrymUnuHue/Xqj0Hh7ou/5wNtGOfJX3e
9A4AAGRj3kGLdXDyjh29gxa9gz7vOvcOQc5kuPtC1zFYf5DVMfS97rlrLvK1
7euGzjwm9A76vJl3KCjAvEOo3mGYfZZMU3oHu66sjxv6towx5h30edM7AACQ
jXkHLdbByTt29A5a9A46tqb/0w0Tbt9p+9P+O+T1pGcyuLV35X5JW1e5nqDs
22/7L+W9HXYd7K1UPnoHfd7MOxRT5fkO/eYdrnn+7a73Hbd5h563eYTeYdB1
FbotY4zeQZ83vQMAANmYd9BiHZy8Y0fvoEXvUC17/b47aznjNffunIIKr8N+
ltk6e7pfkqxjsDMZ5r6mfW3Vuqg737rPbXTXY/sy1eC+ESN6B33ezDsUJJ53
6HeudJGzFGrXOwxxTWXPO9A7lId9lvR50zsAAJCNeQct/3wHzpWuHr2DHr2D
Fr1Dddy5AcOcM2B7BZXwde3nVmu/JNGZDO5rlLBfUtl23vmDZOfme9yfrnup
yXXFit5BnzfzDgVV2Ds8f+Pi6nqHivdZquv5DobeoVrMO+jzpncAACAb8w5a
rIOTd+zoHbToHapRdKbAfdyQX8vtl3T8TAbVfkn2ddx+SdMPBt8vapC6n6cR
G3oHfd7MOxRUUe9g9/uN553W/blPvTbZ/faRrvet2z5LJpZ9lgrdljFG76DP
m94BAIBszDtosQ5O3rGjd9Cidyhf1r5Kmd2DfXyfzx3sTAbbn+j4mQxNWk+m
d9Cid9DnzbxDMZWd73BoW7Ls9AVdn3ve6i09379uvUNd5x3YZ6l67LOkz5ve
AQCAbMw7aNlj6PQ5PfssafKmd9Cid9CidyiXOzughLV+d0ZBx5kMyv2SrGOw
r930fYn83oF12erRO+jzZt6hoB7zDu9fsHj0eYe5n9Vdn/f9vc+UZp8leoc6
Yd5Bnze9AwAA2Zh30PLPd2AdvHr0Dnr0Dlr0DuWxnxeKbqDs/ZJOnMlQ7dnW
ITDvoEXvoM+bXq2gKvZZmp1Obpl/RtfnPfmc23qudddxnyXFNdE71BO9gz5v
egcAALIx76DFOjh5x47eQYveoTxlzTpUul9SA85kKBO9gxa9gz5v5h2KqWKf
Jfv52mvW4YObX+37MXXrHaq+JuW50kU/Zlyxz5I+b3oHAACyMe+gxTo4eceO
3kGL3qE8Rc+SrqxjsDMZdk24jqHp+yUVRe+gRe+gz5t5h4LKnnfod67DZXf1
Xecu9Hr8Hl8n+LzDENfEPkv1xbyDPm96BwAAsjHvoMU6OHnHjt5Bi95hOPYz
wa3j27kLNjdgZy9sXRW8c7Cvb/slxXAmQ5k430GL3kGfN/MOBZXZO/R4vb/7
fKdem+x++0jfjyuyLt5rTiN07zDsNdE71BO9gz5vegcAALIx76Dln+/AudLV
o3fQo3fQsLVzOzvYzptMubOEI9zjPy+77S4X6xPmsrB1fOsU7AyEWp3bMHc9
6X5J4/z9ysNflw19LeOA3kGfN71aMWXts/SbJ7/Vc87BOoc8n6tzXTyrq5i5
9aKur9XrzGrfMOdKV31NRbsAeofqsc+SPm96BwAAsjHvoMU6OHnHjt6hWrZW
nbmGfveF7nXzoa+1LPbv2Nbne84ozN3W4D1Cnv2S9kyNzZkMZWLeQYveQZ83
8w4F9Zh3MDe/Npvr4+13yqavfrzn55h3bv7+otea/fzrn+x6P/v3NLPuit5f
L2NeYNjeocpr6tUF9Oo19t76tWRix4sDP47zHcrFvIM+b3oHAACyMe+gxTo4
eceO3qEabg1wyDV2W++u+9qh7SnUiBmFgp1D6HybjvMdtOgd9HnTqxXz/I2L
e66XX7Rpf8/3t3x/eWBfsnPzPclNn/5Yz481F6y8N5l5N/+6tv3O6rlu/5nr
k+3P/jyZeWp78uh9X2/NVMz78MeSRWed3fX+f7nmkWT307t7fu1nvvSB9vdf
sDi5/3D/+YWqr+mJz87r/tyrt7j3s9/n9608v/X//Pw3nnfacPMps9PJHee8
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
ivGv5/vfeaz18TxGL/b4r/P/vXDLXbny5s/y/qzDNfAnf3Kfj+/POlzDOP3J
fVuXc6+3+TPM/Zq3q3ubP6v/M10H998OfU0x/8m8AwBgaEX2WTq0rbTzHYr2
Dhs2bEjum1qXfG/9pJO+3fP/rb4q2bj0lDZfuOB9ra//8XPPcP9v8q/+tPX3
960833UJqcnb1w58234H2+/e1Buv/CjIfkm2f46dA/Grn2xJDrzyaut67O30
v/3/7+v8+86Pz/P/Ov/O/2+bgbDHKbu3P97zevpdF3oblJeftxn0fQl9O5ou
vS+nj8n9vFFd5v7zoNDXE7s07xQ/N6rN2v7079/+70tUl3eaOXlXz8/b9u0I
fT2x888vIW9N3ty/dfx1cPKulv1uTPNOH58EX8sCANRfDc53uOb5tyu7fTab
0WuN/pHl/7Gtd+i5lm9nK+c4X9Dex85Ttq9l6/6KWYa0Yzi6Z8p97SOHfxv+
vjSAXV/6mPCHjz8R/HpiZ/fJNG97/hP6esaB3zuEvpZx4K/Lhr6WceCvE4a+
lnFg/Xx6/+acY/KOjf/6ZPLW5J3evzlXunr+mV+2Vhv6emJnXQN5a/Nm3gEA
MJSCvUNZ8w5nnn5psu33GV+vIFuP77du/+jf/HHrGq5e2Kd3uOnY+budn/fo
68+49X6bZVDtl2QdiM0x2NkaRw6/FP5+MyR7XunPw4a+ntj5vYOtp4S+nnFA
76BF76DPm95Bnzf3bw1/XZZ1cG3erINXz18HJ29N3v78a+jriR29gz5vegcA
wDCKnO9gvcMt89vnHeatfTrf1xT1Dva8cVAn4M872J5Lg9b8bb1fvl/S3Nez
juEPL8Yxv8jr78PkzbqVDr2DFr2DPm96B33erINr0Dvo805/npB39fx1cHoH
Xd52/ybv6tE76POmdwAADKXAvIM9R3jk4pPaP279y7m+nq2nt/UOp16b7H77
SOm3q9/+Sr3mHfrus6TqGNL9kvbtjfb5lz/vwD5LmrzT55jkrUHvoEXvQN4x
ozfWonfQ503voMO8gz5v5h106B30edM7AACGUmSfpTnP37i4/eMuuyvX1+v6
uOUPVXK7svY/8nuHqy74oKxjSPdLasKZDGWy5znMO+j48yX0Dhr0Dlqsg+vz
Zt5Bnzfr4Br0Dvq8ef29Dr2DPm/mHXTS3oF1cF3e9A4AgKEU7B06P+7kc25L
Zt7N/rjOOYlLth0s/Ta59fyMDiDXudKjsnOpj++X1MQzGcrEPkvkHTt6By16
B/KOGfMOWvQO+rzp1XToHfR50zvoMO+gzzu9fx94JY79oAEA1Sp0voPpPONh
weLk/sMZ+yXNfcyqU098TFVnOww6T7rVO3j9x6BzpYc+k+H4fkmhv691wzo4
eceO3kGLdXB93sw76LAuq8+b3iFM3qzLVo/eQZ83+yzpMO+gz5t5BwDAUIrO
O8w5NLlsqNmFzo5j/vVPVnKbbL6gynmH1pkMc7fHOg6eo2bjfIcwedM76NA7
aNE76POmd9Dnzf1bg95Bnzf7LOnQO+jz5v6tw7yDPm/mHQAAQxmhd+icX7CP
HbTX0hOfndc2HzF1sPzzpE2eeQf/fIc88w7WNRzbL2l8zmQoE+c7aDHvoEfv
oEXvoM+b3kGfN+vgGvQO+rw5V1qH3kGfN/ss6TDvoM+beQcAwDAK77PU5+P7
zTzY/kP++31wc3X9uDtLYYjeIc+8g50FHfp71WSsg5N37OgdtOgd9HnTO+j4
6+Chr2Uc0Dvo86Z30KF30OfNuqwO8w76vJl3AADkNjudbDzvtLY+wKzaM9xZ
z237LS1YnEw891b7+xzaliw7fcGJbmP1lupv2xD7LOWZd3AzFKG/Xw3GOjh5
x47eQYveQZ83vYM2b9bBdegd9HmzD40OvYM+b+7fOvQO+rzp1QAAAx3alkys
WZN8/Yuf6OobfO9Z8pnk2hu+ktz83X/KNf8ws+6Kto//0Mrb3e+j9Ve2f52P
TO0aap6iKDvjOe+50rnOdwj9fWs41sHJO3b0Dlr0Dvq86R30eXP/1qB30OfN
PmI69A76vNlnSYd9lvR5M+8AABjk6OvPJPdNrUsmp+5Nvrd+svVnyv4uNXn7
2mRix4u5P7ftb7Tpqx9PFp11dnuPsWBxsvLL30w2zbwhu53uHIac8w5XXfDB
ge9re0SF/r41nX++A+dKV4/eQY/eQYveQZ83vYMO67L6vOkdwuTNumz16B30
eac/v1kHrx7zDvq8mXcAANSBrfvbY1t7/qaYb+jFnckw4ryDnSfNc9DRsQ5O
3rGjd9Cid9DnTe+gz5v7twa9gz5v9qHRoXfQ5839W4feQZ838w4AAHjuvnCk
8x3cGdWhb0MEWAcn79jRO2jRO+jzpnfQ5806uAa9gz5vzpXWoXfQ580+Szrs
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
fd70DmHyZh28evQO+ryZd9Bh3kGfN70aAADZmHfQYh2cvGNH76BF76DPm95B
nzf3bw16B33e7LOkQ++gz5veQYfeQZ838w4AAGRj3kHLP9+Bc6WrR++gR++g
Re+gz5veQZ836+Aa9A76vDlXWofeQZ83vYMO+yzp82beAQCAbMw7aLEOTt6x
o3fQonfQ503voOOvg4e+lnFA76DPm95Bh95BnzfrsjrMO+jzZt4BAIBszDto
sQ5O3rGjd9Cid9DnTe+gzZt1cB16B33e7LOkQ++gz5v7tw69gz5vejUAALIx
76Blz+PTx4Tss6TJm95Bi95Bi95Bnze9gz5v7t8a9A76vNlHTIfeQZ83+yzp
sM+SPm/mHQAAyMa8g5Z/vgPr4NWjd9Cjd9Cid9DnTe+gw7qsPm96hzB5sy5b
PXoHfd7pz2/WwavHvIM+b+YdAADIxryDFuvg5B07egctegd93vQO+ry5f2vQ
O+jzZh8aHXoHfd7cv3XoHfR5M+8AAEA25h20WAcn79jRO2jRO+jzpnfQ5806
uAa9gz5vzpXWoXfQ580+Szrss6TPm3kHAACyMe+gxTo4eceO3kGL3kGfN72D
jr8OHvpaxgG9gz5vegcdegd93qzL6jDvoM+beQcAALIx76Dln+/AudLVo3fQ
o3fQonfQ503voM2bdXAdegd93uxDo0PvoM+beQcdegd93vRqAABkm7x9bat3
+LPzzw9+PbGz10NccvElzooVK4JfT+zscWCaN71a9ex5pWW9bNmnnNDXMw7S
+zd5a1jOaeasy1bPfm6n92/Wrapnj0vS+zfrKLq87f5ta1ihryd2V//dl1v3
b1sTD309sbv2hq+08ua1P9WbWLOmlTevRdHmvWHDhuDXAwBAXdljwrR3WLhw
YfDriZ09z0nzXrRoUfDriZ31PNy/dWxdMM37f/8P/yH49cTO1r3TvE3o6xkH
ft70DtWznyNp3qyDV89+T6Z5sw5ePXscmObNumz17PVVad6sy1bP1mPTvFmX
rZ71l2nek1P3Br+e2FlvnOZtHUTo6wEAoK5u//trWZcVonfQsnUT7t869A56
9A7h8qZ3qB69gxa9gxa9g5bfO7BXXvXoHbTaeofb1wa/ntjROwAAkA/zDlr0
Dlr+vAPr4NWjd9Bi3kHPXwend9DmTe9QPXoHLXoHLeYdtOgdtOgdtGwfSHoH
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
09Fpp303uune35TKXf3pmUfi8a82d999t3XsrXl/1+8ktjz2H6U/z//+3bPR
xm8dH02ceu3AMe996aHoirNPeOuzTfv7+RdEG3e+mvta5nc2fe+fZ76Xg2fN
mflO/nXLtrfG+e6einZsubv1Mc9m7PHWG66Ivr3kjGjh8XPjz3DEEW/lPf9+
0cnR5df9otS442yM7jxn3tC59Nlrf+6MRfI5zXdjyyEbZgx43u/mefX3v4q/
868t/kJ07OzD489pXtP8eeY3riqMWVfnRhnOveWn37+t8+TPv741Pl//4eij
o08vvjR/z2rLNarWPteOesKhm571+34t2vvgmrfjWXGdqKbs2fVK3F7WnXNC
bl2gVl3Ecf9KnPXDrSPNpQAAAAAAAEBNgdcdTL7//slzSo1njc2aE+eaXLnj
vLHdif0uuW/4d3dPRYveOyv394rWpDH5t6duWxvnW23jfJ+/eYnzM924a4/1
swzl46d/dtGiE2f2Ti7zOk0wOfHJz3106D3jOojlM1248RH365X4rovOgfhz
FuQkq3zXMzF8cmt01tz3lHotk7ff8Xq577vpc6NK+3LtJb1w8wtDP7vr5V3R
88//R/ynUetcSeXCy3yON24b/uymDlD1c7s+a/aa1PX7tWlgvajp73jNC+20
/1rHU+a6W+CJy+Y4X2/+xqe8flYAAAAAAICxFnLd4cXNQ+OFTS7XzCsw+dg4
V3vvjdH5s4fHFL//oGW5Y8Hz6hl5x2jG8z+6fqU1r29bKyQ5xuUnH2V/r32/
88ZNX8rNYWfXeMnWTyYOO2ng85p/z+aqa43ZLiGbpzXvM7njDzPfheu7NuOv
rXWa3VNxTM2cDTMe3rDWUaYl/552wDEXx/l+cw5OHHFU7u+n38PMW8hbBz87
L+Ad806Jlv2vVTPzHlx1AVeut61zo5LpNmb7bkwMzXdozvfb1y6Jjj/MPmfE
nHemhlRlHo2rzuFqd7Y9xU37LlvTKXrvbLvt+v1aMx3bbP2uTm6/SXnrLlW+
PjnmkzTSLgAAAAAAADCaUOsOlpyZa/yqyWtPLf2U9f2WPPhC7vtY948tcYy2
MdG2fOK/Tbw7N2dscu9mnHvez9hyaDtXzR/Iibryddmx5Y2v1585f/LGhdu+
s7K5QVsuuEpe0XY+VjnH0zUH8xltNS0z58O2j4RrLH9b50YVzprG9DFfcen5
he+d/k5WPl68nk3e/ApXPJrK3TvnH2Req+v3a4sttnXmbTQqc71I1mBLVFmD
ynY9aapdAAAAAAAAYESuusOIe+6OVHewjGMts2bGHad/2PqeeflQ29r2ZY7R
tlaMfb7D09Ezv382Xt/ctg5R2mkbfhv/vO1zDNQLMt/Pfv+Ws2bRm4P5uUZz
cdPHkexZWyqnOv3zVx8ymGvP7mHg4rXukG4jBWvVmNqDbY2ozs6NCuI5MwsO
HHq9ofkP05/ZzAUxfxbVHxZcl38uxu20Qt2h6dy97bXS4+y7fr/WJG3NErMu
13nKa0tm/5fssRWtVZc+L5Ia3/9xxqXWdkHdAQAAAAAAwCNX3eHUa6O77r4n
um3z5srM3sw3nHl07brDPV+eqJfzs+S14zzf/qvcexlbPn+puoMlv1x0nNZ1
7ZMcXGYtfbNGUpLrNfsn5x1zYU0m9b00XXfIfgdF69Fk87Blc7C2ukEndYdM
beXwdcX1L1fNLW/f3MbOjQpcNZKZ7+eUS4b2Sjf5XrMntHVexz6FY9Zt+zbn
zNlpsg6QvbbYzsGu368NeedT3TWjGpGK/ZKf/myobmmUqqOlX+fBF6zfM3UH
AAAAAAAAf/LW225DUa7Xli/L5l1zOeoozlxozbqDbU5GYW7SsZZ+1TXXs+un
lPn9JBfeaC7Olj8uyKlm5y2EXncYWMul5L68e6c2VD/3Gzo3KsnZv9vMryj6
/e3Lh+eglI2pqXmYfTHO//o3osuv+4WzLtj0/APr3g0tzncoer+2JOvHmdqR
bR90b3sup64Zpg5n2xfarC9W9vOZGoo5d2wxo+4AAAAAAADgkSNP76vukB23
WnU98ux+yzOv45rz0GXdwbYPqmPt/zy2HHrRPhZJLvzEh//a3Llj+TxF66Rk
jz3kusPQ3t3T8a37vRSeHw2dG1W4ao5l8r7J92MbZx6/xojrtKXfo8k6gO08
aLPuUPR+rUjtjWPmDlj3ediXr2/tGFxS19u4/U4f69D5U3Dep+fpmPPMFTPq
DgAAAAAAAB651lk65ZJ4zaRbbr+lkmStpVrrLFnGX9fJ91Va58Zz3WH/2RdX
z/85Ynbmnc85f8fk5rZ8718azzW+fN/3Z2J2wDEXW/dbTrON/85bfygvpm3X
HbLzFiYOOyken7948eKBP7P/72uLv2CNT+76Nk2dGw2cR1/Z9ofyr2HZ/z3J
rTe1lg91h2qSOsPM+eaIUaM1yBrnXNx+p897W504r241U0eZNWfme6TuAAAA
AAAAEBhX3WHEvUdt+eWi17WNv66T73Otc2Ndm99z3aFWPtOxJk/Z3H8bTL42
79/37Holeuq2tdH5s4fnAZTJD/qoO7jO4dryxnE3dW5U4Wj7VfO1yZo3beR9
m64D2Nb1aXN/hzLv1yTzfSV7uaTPb1uMWj+/Cs655PwYWMss+Y5c8zFS+62k
5+VQdwAAAAAAAAiLc62VEesOrjkHea9ry/PWyo059pe2vrdi3eFNd6438ZGL
fupnHZWMPU9uja44+4TcYw217rBz1fyBnzc1nfXr1w/58bpJ538nfzd//uuW
bZXWWfJRd6iTE3ddQ5rK+zZVB4jXzVpwYO5nbrLOUeb92ozpwDwiR42p1B7O
LR3fzPnhWJfMNh8jvf/PTN2CdZYAAAAAAADC09J8B691hzcduUrbuvWidYf0
uF+nWXOiCzc+4uW8ys5tMGsULfnpz6I7Tv+wTN0hew4la8m38p0FVHeovKeE
Y3/qUa8hhmsPibp1gKKaQtfv17SkHmn2WUnXHV373kycem23cx5sdYc37fNC
zLFlfz+JTfrzUXcAAAAAAAAIUEB1B2tuuO18X5d1hxc3N5pbNvur2uZ1DH2e
w06KJndUWLN/BC/dtWYgB/2OeacMvLetthRi3cF2Du13yX3tfXcNnxulNLTO
0p5dT9tz2g3UHVznTO5eGTms14VM7r3r92vyHErvtzx0TlvWMzLK7K/Sxjk3
cJ7ZzsVZc6I1L6S+89T6ctnPR90BAAAAAAAgMIHXHczaNnXWC7KuZ376T/zW
HVoY0x7nxy1zCGys+1s05M+/vnVgfoMZN2+rddStH4RQd2i1DhDIfIc6+Vpn
na+huoN1/f8aaxWVPc6u368p6f2WrXNWHOsZtVpPyznn0ueZ67tKH1tSD8rO
yWG+AwAAAAAAQHhC2t/B9jt110K35pktY4DV6w6Jl+/7vnWtm6xPrNne+Dm0
ffng+PC8seEqdQcjm8tsdV1+H3UHx/pIddb8bzW/7hgLX2c9KNvaZEP7CHT9
fg0Y2E/atp7cPtk9S2p/tgZimW2/rv2l42tJej/ppbcOfXbqDgAAAAAAAIEJ
fL7D0FobJdnmO1jH9fak7mCY/NvOtV8trD00mY+bWvqpodx8Xg5Tpe7QeS7T
U93Btj7Sws0vVD7vWq07OMbpV45Fap2e3Jx71+/XgPR+y/FcoytXRytXrBhg
/t/qzwzHu9FYFcmpO7i+93mPvxr97WfLc+NA3QEAAAAAACAwAdUdXMey379V
2xs53kN1wYFDr/OVbZY9DkTrDrte3uX8tz27Xok2fut4Z92hqXx2OheYKFrL
SaXuYFj3F84ZS15o+lz7vw9eXHoNnNbrDm+61yOr+jq2vG+T4/ptx1l13TDb
+er6jrt+v1HZztUqTK2izv4VddpAXvu17i99yiXRuXMPjf++/+zhdfeY7wAA
AAAAABCggOoOZp9k27ovVXN1tjyUc40cW93Bth5TVmoP187rDvuOuWjc9J4n
t1rHDzeyXtD0Z8nuaV0018F1XnRRd7DtFVx0jjc5/yaJvfO791R3sK2zVnUP
ZVfet856TVWO07pfSw7bGkOuWkLX7zfSd5O6bv5fy66L7r777uiuu+8Zctvm
zfGft6+17y996KZnWz3XYgV1B9f9KO8YqTsAAAAAAACEJ6T9HQzruN2Ka5PY
6hfOMdyWPFepfVZt9YqO6w5lxpOb7yL7nk3VHbLfcZnXteViu6g7zOy5W+Fc
dLaNivnn9Pwb53t6qju49iC4/LndI72GbVz6qMc5dB5XqI/EMciuKZV3Xen6
/UaQtI2y7dp6bDXqTbUU1R2m2eaqFX0+6g4AAAAAAABhse3l6bPu4Jx/UWYO
Qs5ncuZR69QPHO/Rdd2h7Ho42fVeGqk71Nx715ZTrFt3qDKePr3+felzyrHe
vLHgunJrf5kcb7JmT+737qvu8Ga9uSCFbahEe/3TM4/EY/Of/MtrtY+z9Dlg
2WuhqP10/X61pGo+peql+9jWgDKq7O2xZ9fTcfx2PLCj/Hlaou7gvCc5vr9R
5zvU+hwAAAAAAADIZcutVc3z2zjrDiVe1zbnoUquPJuDys3HOeoceflF2xwC
o3CM94hjqLPHXPo7yXzG1uoORfnq6d+xraNVJj9oW2+/0rowttx4iTywq33E
v7/01tx4m/MkvY9v7rnf1LlRg3V9swpj87PfUeH5Nf1Zs/sbm++yMOdrq82U
zOUP7RtQZr2srt+vTuxS9bRK+2k4amqm1lVmnkr2+l5mjbVYibqD69hWPu6u
T9WtO9T+HAAAAAAAAMhlW/cmyT+NMvbTtj9o6bydZe+Esr+bHStbVAtw7Slh
8k8bd746+Nqv/zV6/mb7WNyEde/qnM9VqwaQyt2VWi8+k3M3Od6Rzx3LOkuJ
JQ8Ojpk244nvnzyn1He255GHrbl2W16xyph823wHWy44ie9M3clxLqZf47Tv
XBdteew/4r2+jZ33b4nWnXPCwM8dcExBTaqpc6Mm6/ydMutJWXLEReek69pQ
po5kG6dfOAfBMveg7D4LXb9fVTM12hprOLmu/UX5+r1TG2rfM9Jrl+V9j9lj
y7uOu9aNKorTKJ8DAAAAAAAAOXLWkTHyxpfmcc0HSPJjZdYqMXnibO6uKH+X
zS2XHbtqG0uf+MjZ34om11wfXXH2CQPHc/wtv7Lmwo2PHfPF6NwVG4fyZK79
Airvv5upI5x553PlP19T464d+wIMfG9Xro7O+/wn3Tn71DFdtm5DdNUZc+P/
nvf4q0PvZR2bXaV+8uJm63ubc2TltkfjWsHk5z761v87aNlAvt+17ktZZeoH
jZ0bI7DVA/7b8jucP5/et6JsTFw54vh3S9aRsjnpvHkh1mOsuN5R1+9X55yu
kyt35d2LarWuNZrKnOdTSz9VKt7ZY8utSVnqPGXOp1E+BwAAAAAAAIaZ8edb
b7jCmqvJOvzMK+Ox3CafVuZ1b1+7pNTrzv/mD+LXzX29J7da881m7Hg8vnxf
ns0c2861X62fO3LkrVw+sWZ7/HuuukPy/un8/lO3rXWOm7fNrchlWTPo2BV3
DOUKzfeyffngGjhV1m8v4srbWc2aEy2//4/O9ZnSPzdQK9o9Fd1x+oedP//Z
a39eKt+al+/Ovr9tL5CieS4uJodbdB6+dNea5s6NEWXPlzh/e+q1Q3swZNeQ
in+uxFpJrrX4y+SJ09L56+R7zn5P5hiHagDTn6XOftddv18R815XH/Lut8+T
TK2s7Gu4zru8466Tr3fNFTttw2+t50z6PMmrH5t7RPY8TLtw4yPOc5K6AwAA
AAAAQDNcY6rLcq0f3tbrJrYtXeT83SOPPHLo/9ly8IUcew9kc9LpuQXZ/KkZ
43/Tvb95O89VMJ/E9voLj1tYPM/Elbs3x/eNq+J5Bt9ecsZgLSVz7E1xrdUy
kMc794cz8cjLdc7k2Ke/t8sXLoyOnX14pe/OnAt5350ZQ51bX5p+jaLfrxLP
s3641Z2Hb+vcaICrxvKOeadEi5Ysib62+AtD/1Z2n23DtWdGpf0JHMd5xD8u
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
30ETcdNFHlQTcdPEfAdN1B00ETdN1Is0UXeAC3UHTcRNE3UHTeSvNRE3TcRN
E+PmdRE3TcRNE3HTRL1IE3UHTcx30ETdAS7krzWRv9ZE3DQx30ET+WtNjJvX
Rdw0kQfVRNw0kb/WRP5aE+PmNRE3TdQd4ML+DpqoF2mi7qCJ/LUm4qaJuGli
voMm4qaLuGkibpqoO2gif62J+Q6aqDvAhfy1JvLXmoibJuY7aCJ/rYn5DpqI
my7yoJqImybmO2ii7qCJuGmiXqSJugNcqDtoIm6aqDtoIn+tibhpIm66yINq
Im6aiJsm4qaJepEm8teamO+giboDXMhfayJ/rYm4aWK+gyby15oYN6+JuOki
D6qJuGkif62JcfOaiJsm6kWaqDvAhf0dNFEv0kTdQRP5a03ETRNx08Q+AZqI
my7ipom4aSJ/rYm4aWK+gybqDnAhf62J/LUm4qaJ+Q6ayF9rYty8LuKmiTyo
JuKmifkOmshfa2LcvCbipom6A1yoO2gibpqoO2gif62JuGkibpoYN6+LuGki
bpqImybqRZrIX2tivoMm6g5wIX+tify1JuKmifkOmshfa2K+gybipos8qCbi
pon8tSbmO2gibpqoF2mi7gAX9nfQRL1IE3UHTeSvNRE3TcRNF3lQPcxT0UXc
NBE3TeSvNZG/1sR8B03UHeBC/loT+WtNxE0T8x00kb/WxLh5TcRNF3lQTcRN
E/MdNFF30ETcNFEv0kTdAS7UHTQRN03UHTSRv9ZE3DQRN02Mm9dF3DQRN03E
TRP1Ik3krzUx30ETdQe49D1/ba5Tpm/Qt+vVuOWv+9K/63PcknbWx/bW9/kO
fY3dOOav03HctWev9+Opg3HzuojbW9TaHnlQTX2O28x9bN89zffxtBW3Pn22
dF/S97G0QXncfNPHq/TMQNz8vX5TcVM4z9r6XtWe0ak7wKWP+zs8de+N0fKT
jxro18VmzYlO2/BbuedBm77XiwxzfX10/cro+MPeF3/OC5543fsxjaqPdQcT
o/Nnv8/a3uZ/8wfRxp2vej/GUfUtf23alvM6mYrdjtf3eD9W4lbePV+eGIjj
+w9aJhnDXsVt91R0w5q10eSa66Mfr5uM1q9fH11z/Y3x/yv6b2PVpl/6/wwl
jet8B9OP3rbpR9G3l5wRLTx+bvzZ33nId2X6mspx2/vSQ9Hklatn2o1pQ+m2
ZtpQ8v+TdpX3s+a1Nv9VI26Gatxs/vzrW+M2lPT5bT69+NJo3fZnZNpW3+OW
9CWvOPsEa7w+dswXo8vWbYie/Mtr3o+1CWr566afo1XzK2r567bzHyr5FbX5
Dk1/r6r5FeoOcOlV/vrFzUPt8x3zTonOmvueoVyM0nOFTR/z14k9u56Obv/2
mUPX2dMf/k/vx0bc3rZ3akO06L2znM+HaR+56KfB9kfL6NN8h5fv+37puBnH
rrhDNna9yl8XeOOmLw3F7v3vPUnyXten+Q5v3LakdFuzmZi3Vqb99SluRUyO
dN05J0RHfuCDznue72OsQjUP+uLkopHal+15/sZdOrVa1bilmdyKrU9ictZf
W/wFZ5xW3vk778feRNwU8tc2ex9cMxQ30+dYdulF1tqRcl8yoVJ3aPw5Wjy/
MrZx6/j124xbyHWHpr9X9fwKdQe49KXuYNro0PP60ltn2uLOVfOH+6yP646/
6Evc0l79/a+iq86Y67y2hnpfrKIvdYfnb66eS9t/9sWSY6+NXuSvd09Fd5z+
4Vq5mInTf+L/+Mc1bmVMXWONm2rdoU9xe+i8D9Vqc4kTHw73Gdkmfey+j6Vp
yVg26/OgGe/5neviZ6HQngH7HLdR25f6vU41boZpT3cct7/1vpUex2nmtKz+
zLus8drvkvu8f45xi5thewY44Ji3+/gmtlNLP5X7M4rSnyXE/HUbz9F9yK+E
nr9uO/+hml8Jfb5DG99rH/Ir1B3g0ov89Yubh8dcZNeX2D0VfWe/zPgLsXFN
aX3JX8dzdG9ba59HJnJfHLe42cZVV3mmV8zJyM93mL7+XX3Iu0fKxyi2vz7l
r/Niu+Qg+/VTte7Qm3Hztn5HBWrx603cLF66a3hsb+Kz1/5c8r6Wlv48vo+l
tAbua1nU+bpjqxmZa571uSwn1gs3v+D9s4wStxDz13n2bl9pjcPQmiKOvolZ
g27nf2leL0McN9/qc3RP8itjF7cOXr/ruIVSd2jze+1LfoW6Q7OS9UQvv+4X
wcS4LvX9HUz7v/njw+NgbGNgXrh6wXAfV3T9a/V6UTInzbVGgdJ9sQr5uoNj
XHUVinFUz19v/ae/e7tvcsol8frI5hqy8/4t0cZvHV+6T+P7c4xb3IrE978F
Bzpjppa37lvcbOMEqz5H+P4MVSjvE+C0eyqa/NxHne0r1PV1xyJu07GpsmZg
EcXrpWTc3nSvPzex+gHn7/ztZ8vtcRN8jlONmy0Pndd2XPORVOephJS/bvs5
uk/5lZDy123HrU/5lZDmO7T+vfYov0LdoVkzezfOmiPXR81Sz1+71na1jX8x
a1FW7eeGSjp/nXlWNGu4njv3UJnr6bjGzdUHrUppvfKE8nyH9PgJs++b7Wf2
PLnVOWa+L3FTzl+7DM1vzz73CebRjL6Mmx9l7JKrHxO6PsQtYepGrmfMiVOv
lR2zmxc3w/exlNbAc/pATMXqfKpxy+tL5vXzzZg/1xpna14II79ZJ26+89dV
zOQ/SvYP8+6Blz+32/vnqSqYukMHz9F9yq+MTdx6ll8Jpl7U8vfat/wKdYfm
pK/DocR3FNJ1B9f6EtN9UFt/xvkMGdh8wL7HzVxfzX6Mqzb9MnryL6/N/L+i
tedDvS9WoVx3GBhrNt1mLtz4yMD1z6xzWGb/AMVcqGr+Ov2cPn/jU/k/X5DD
UbzfqcatVGwdax2ot7W+xK1oLkofYyc7bt4ir32Za2Gfag6GYtxGrev1oY+p
GLe8eWAT6/7d/bs5awqqxU4xbmaug7MO6+of5vQr1et8PvPXrT9H9yy/Ekr+
uu249S2/Esp8h7a/177lV6g7NHTeZeaF5vaPRCjnr51zbl3tLqfPevi6gpxc
YJTz1y5FebRQ74vjELd0Dm3iMPd9zfyca4xMaPfFKlTnOyR5mTJz2ovGW1B3
CIdz3GcP2prRi/kOqfFRX9n2h2jPrlfiz2XOyeyf5t+y/19pDGyv4mbk5MpM
mwpl7YgmpT+j72MpK7uGy6cXXxpNrrk++vG6yeiGNWtjtr+bdXKzzwIhrQnS
97i5xkYn/QxXTc+1D7Xi80H62FWu9Xl1vjp1B+deHgELZty8Q1PP0X3Lr4xL
3Hy9fhdx873OUlvfax/zK9QdRme7Bq98/DXvxzUq5f0dXPM969wX1fa5Uq4X
ORWMtw71vliFat0hiU3Z5wTXs6FqLJXz1+YaX7ZeYFujtfC5MmDKcXNJ91FN
ezS5NFcNIpQ+6DjGLekzqsagrvT55/tYasnpJyreu8qQnKeS2md4/9kXV6sZ
WGI8sfRW/5+pBrm4GQV9fefcTNd+HuLrLPk+lrLy+vXO/mHB9VRtLcHQ89dN
PUf3Lb8Sev669fyHaH4llPkOrX6vPcyvUHeoz9xXti8Pe7+cUajmr/PGe7ru
i0VjRJXWmpTNX+cRvS+OQ9ySPuihm54dy1iqzneoKrfuEMg6rXXjppq/zkrv
6RA/s+e1NdE9qPowbv6Jy+a81W4E15IY57i58i1xLE+9Vq72Wlb6c/o+ljJm
+vOOdT/y2PY0vuCJ171/pnGIWxy7EmsEWsf1OeoOinOQ0scfZP46I2+uSXxt
rFl3UNtfehzqDn3Mr4xD3Ly+fgdx62vdoY/5FeoO9fz517c675dq90oX2bpD
Tr/VdV8s7DcJrZulGrdcAtfSUanWHfbsejo+9tI5l+lnje/s53jWEByb1sf8
dVbeOkuqY7b7Frf0fc/ks+P2WLCOAXHzIHX9M2Oxb7n9luime38T95Pb6oOH
QHLcfPr4LfnoNNXcdBlqcUuuhXXqetnnADOOzPd43HGJW+zFzaXWCTzzzucG
fs+1zo/amHnJuOX16Q+uX3dQm0ebPva+5q/7mF8Zh/y119dvyTjMd+hjfoW6
QzWm3rD6M/n7iptrr1kj1Fh55++8H3NdqvnrvHG5te+LQuMSVfPXuUTvi2Mf
NwdXW1PMhY7FfAdX+wukHzNq3CTz12mp5/eBNtTDuoP8uPkXN+fey4yPHfPF
6LTvXBdteaxfdQjZuBXkx5Rz01XiZvg+llKm29jixYujjTtfrfx72f1PlceR
ycXNKGhraZ9Ys/2tfIzjd8y/e/88I8YtyPy1JWZ5taK6dQe1uSrjMG6+j/mV
cYib19fvIG59rTvUEXp+hbpDeUV7a9qYteuU6vVpqvs75M2Fz2t3teaJBki1
XpRL9L5YxbjUHfL6oIprVfQqf22TWitb+Zmwz3FLt6f0tbDO2LTQqcctb/9N
q1lzogs3PuL9uEf+3MLzHYpituC6R+LPZ+7hpv+VULuX9S1uVdn2ZfS9Bsgo
VONW5Rr5jnmnDNWK4rF/O/7g/XOMTdym+4h5uZE66/4nv6e0t/Q45K/7mF8Z
+/y1aH5lHOY7VKWQX6HuUE3Rnh3Jc2LSD/Jdxx2FYv66qDZUtx6vlKPpZf5a
9L449nGzyZkHqDgnvs/zHV66a83QM33asSvuCKIfM2rcFPPXiXSOZmhsLvs7
BMUce95ze54DjrlYMl7qcUvv1W5rQzN9ZMd18oh/XFZ93H1g0p/H97G0xlJf
N+ugKc9jkY2bY6xDEfOc9q9btsn2SWxxCzJ/bVHr+blE3UHpntf3ukNf8yt9
j5v31+8gbtQd9hHIr1B3qCfZFzBrYumt3o+tKYp1h6L5nqr3xd7HrUDRXnOh
3herGJe6w96pDfY2dtAyyfHzfclfJ8y18Kl7byxcTzBhcjPEzY90W7Ku9dLD
dZak41ZhDRFXzJTGf2alP4vvYynNsvZOHR+56Key+VDJuFVluVZOrH7A/3GN
a9xK7vMwYNYc+57TYhTjVlRPtz6j9azukD72EPPXIz9H9zS/Enr+uu38h2p+
JfT5Dj6+V4X8CnWHGnLqSV/Zpju3M0syf130XJ8zxjPk+2IVvcxfi9bjxz5u
FjtXze9VDPs236HqWoKh9WnqxE0uf21k+iHW9UB6WHdQHTdvFD2H9LWtKcfN
tvZO1rkrNka3bd4crTvnhNyfM+tJKI6fT38G38fSFttYMuU1lnoRtxc316rT
fvban/s/9obiFmL+2qZobSzr3sE9qzv0ftx8T/MrvY+b79fvIG4h1h18fK8K
+RXqDjU49gX0fe1smuT+DjX7MUX1eHM/VXkGkawXFRG9L1YxFnUHR/tUnicm
n7/OeHT9yuisue+p/KyvFkP1uKXzZNZn+jfZ3yE0D533ocrtykZxr1vVfQLy
9tE0Dt307MDPF9WW1GKnGrdKLP0S32uON6EPcduz6+mZdc6OOKJ8DcL0R1Tj
Jxm3gmdv616XBXNa1Npg7/PXPc2vjH3+WjS/Evp8h86/V5H8CnWH6lx1fbV7
ZBHJ/HXOXJRR74trXtAYY9jL/LXofXHs45ZhG1OovoZy3+Y7JF79/a+iq86Y
W/o531wjldaAUc5fp6+HuXuFsb9DUExN7/yvfyP62uIvRMfOPrx82xJvawnF
uBXt6Wbre+SuOSLUl8zGzfB9LG3428+WDz/POWq5SvoSt/TzWZU1z9RqfLa4
BZm/dsWpYM7D4eueGvj5ohqtWk5lHOoOfcyv9D5uvl+/g7hRd9DJr1B3qCbv
+pm9p6pTrTvUWX/QCHkeYO/jVkB1/cEqel93sMwTU2pXLtL56xL2vvRQNPm5
j5Z6zlfK1cjGLfXsV7jefw/XWZKNm8OeXa9EO+/fEm3b9KNo+clHlWpnam3N
UBw3X5gvcfQ9+jbnQS1uVQ3ViQRrQ32Nm6nVVt7nIeXEhwPMI/Y4bnec/uHc
eBx+5pXRXXffE9/viubVhjZOt0rcQsxf+9rfIT4vAs6vhJ6/Zn8Hu9DnO3T6
vQrlV6g7VJRz3b3gidf9H1+DFPPXJkeW20d1jPEMfd+jKnqZvxatx4993Pax
tS+zTrlKm8rT1/kOWbYxoVlK+TTV/HV6TEvhda+HdQfl+Q5lmHVFyuTa1MaC
Ksatdt2hoB+qFrv0sfs+lsZZ1npRi08v4+bY22HBdY9Ez9+8pLAvku5nhjbe
s0rcQsxfF3GtMV6V2nNd38fN9zW/0ve4eX/9DuIWYt2hq+9VLb9C3aEaV/1K
da+/POzvEM59sQrFelEh0ftiFb2uO2TmX5u5f325Xqrmr+soqj0o5Wsk45Ya
02L6HFP/34vx9T7LXEviP/PyM9PPiMvv/2P8s231/YjbaLYvd+8toNTWEunj
930sZdWpO9RdjyJEivNUKn0+y9ow8zf2Y+66atxc+c30NW/v1IbS8yDU4qka
t7Sy63RO/M//Ln+NTPQ+f93T/MrY569F8yuhz3forO4gll+h7lCNbf2s+N4p
Nh+wDMX89Sj3t7zfM/1dlTEzvcxfi94Xxz5ultiFfk+salzmOyRenFyUe51U
yYUq5q/3PrimVJ6lMqG9HhTHzY/CVTvy/aw+DnEr05+0rXMWep6lqvSx+z6W
puN788ffNXQtVNw7pS9xi2Oybx/prJWPvzbws6Y+kVffm+mXnP4TmX5JNm5B
5q8rMOsImjGMOx7YEeeCTF7B9L2K+jKKOZW+1x36ml/pe9y8v34HcRvbuoNg
foW6QwU5Y5gWbn7B//E1TLHuYLhqQ3n3xaL7qdm70/fn6nvc8qiuP1hFH+sO
2XFrZfuXpj2qPCcq5q9HMn0fvPqQdzufH4hbiwr6sXUp5UEl4zYiW61PKWaG
4rh5a146bdac6PLndlt/l7qDAMv11OSovR/XGMfN1dd39S3K1B6U+iWqcavq
ofM+lBsz13U1ZOnjDzF/3cRzdB/zK6Hnr9nfwS70+Q6tx000v0LdoQLLvh3J
s0cf9iDLUs1f2+ZNp2Nlfd7LyaUZ+/3bI94/V1l9zF+r1uPHOm6ZNmX6lmXu
iUm/ViWm4zbfwXDNeVAaoyaZv6buIDlufmSW/olaLs1QjFtensV1n2K+gwZb
bPs0hkwxbq58dO7eUdPP5kd+4IPu9ia2DnL62EPMX4/MsqeKaj8ybRzGzfcx
vzIOcfP6+h3ELcS6Q6vfq3B+hbpDea7rrZnXorIGTxWS+zsYOX1Q5/Nezn7h
RnZ+b8hU60W5RO+LVfSt7nDPlyfevieWnOee1O+V8jKS+esRucZxHLrpWe/H
1uu4UXfQjFsD3rhtcL0ltbqD4nwHI29dOVffo091B9W4FbKsVe5aN0uVYtxc
7WZi9QO5v5c3fl6pvanGrYq8fafVakRpY5G/7mF+Zazz1128fktCn+/Q5veq
nF+h7lBO3nNE7jgMYbL56+l7nGtufN590bVfkukHKdWV+pa/joneF8c1bunn
io9c9NNy+bHpNrj1n/5OLqc2jvMdrGvzis37U8xfF83brY39HYKXbXNFebjQ
yMatZt8jr16hlltLH7vvY2mK7VrapzWWFOM2ynN23r1R7RkufexB5q9HUTA3
xXcOehRjUXfoYX5lLOLm8/U7iNs41R3U8yvUHUrKqdemz52da78anbbht/6P
twGydYc33XNT6twX1Z7vlePmorr+YBV9qTukx+Wa9nbTvb+J7wFmX7khW+6O
brn9luiKS88fuL4q1XIV89cJM6ftrrvviT35lwrPe7Z1sU+9VqZWJBu36fvU
pu/9c7RyxYrY5JWrc/+86oy5udfNM79x1czPq+RBJeO2z1O3rY2+veSM6Pyv
fyO6bN2Gkdqc+vrXvo+ltJx93YwLnnjd+nt5dQe1dUQk41YgPV4wceLDAeac
xixudec75D0j+M6zjEPcyijaL+fwdU95P8am4hZi/rqp5+i+5VdCz1+zv4Nd
6PMd2vhe+5Bfoe5QPdbZ6+zM8/q+50Lfc1iaIp2/LlknmuFab1JsDK/Rl/z1
ANF6/LjFranx2EprLKvOd5ha+qnhZ4BTLimVf7bNd1Abp6acvy4t57qp2k9R
HTfvWgfEjFcqM94vPcbJ9z6M4xQ3I6+G4MqV2fLaCbX8dvrYfR9LIyz9fdXr
Yd/i5rpOjlJ38J1nGSVuIeav68rbK+cTa7Z7P75Rjc24+Z7lV8Ymbr5ev4O4
hVh3aPp77Ut+hbpDOS9cvcDeF9o3jsKsm5XUc5XWuM4ju7/DPq4+zhe2PTP0
s672rDjvWrpe5FB0vXWNOVQiX3doau356b6o0lheyfx1QT66qIaQzQ0oPjNK
xq2i3LUnRPNsknErWN/YxCL3+Tv93D59fVRcg155n4BkXVxrH9EydyEe17vg
QHusA1hXYlzi5vxMlnFkin39IopxK3rWdv5uTp9GqT+pGrci25fb42osuM7v
vsJNCT1/3eRzdJ/yK6Hnr9vOf6jmV9TnO1T6XnuUX6HuUI5r7JJ55nj197+a
qTmU3d9DgXz+2jE/3jb2xdbXVc3LyOevLVzzjWbaYQBzNcc6bq7xLDUMzCET
oDjfoWivVGPJg44xEZn+j9r6Sra4yeSvq2K+Qxhy1hlI++y1Px/KSe+d2jBw
bXW2SwFycUtx5UPfech3h2KWt079V7b9wftnqRs3w/exjMpVEwp1TOfYxS2n
L5mXL3HlQdXWNMvGLcT8dSVmPwBXDXa6DzK5Q+966BJ63aHR5+ge5VfGKm4e
Xr+LuIVYd2jse+1ZfoW6Q4lzp2BNwpl4HrQsmOtoE+TrDoYl75Ld088VX8Xn
w97ELa1EzkZtn0Yb1bpDeq5XE9TW4lXMX5edr5ndq+ilu9YM7Aloag5KY3fV
41ZZD+sOinHLGy9vY/bd+PG6yWj5yUcN/v87n/P+WepSHzdvjt81/mgoH+qY
3xLq83sR5bhlmTpeH/uPfYqbK19j+obW/oYjL7P/7Isl+yeqccsy/UXXfc/U
2JX6+VXjFlz+uo3n6J7kV4LOX7ed/xDOrwQ936Gh77WP+RXqDuW41pycEcg6
dU3qS/7almNLP//Z+rjzN+rub6Wav56Jx3Q/xTDrfN2+dknpfI3Jo63a9Mt4
r07z+76vrWMRt5LjeCvdF8VyM4rzHarkQU27MvvgnjX3PQP/P1uTUKOYv66s
h3UHyfkOb+avbV14TTyseO2z0KnGLfsZbLWHA465eOD50fa8YMZdq/VJEunP
4ftYRmUbe6u2/v84xC29n022rW3c+erMz2XngyVMzUHx/paNW3D56wJ7dr0S
PXXb2uj82fbngvnf/EGQOcwmhDRuvqvn6D7kV8Ypbn3Kr4RUL2rle+1pfoW6
QzlF6yQrrrdbRH1/h4H4TfdNs+33HfNOic77/CcH4zlrTrT8/j96P95RKNeL
TD40PZ56FGrPkop1h6b2OUpT23NTNn89dU2tuZvmuVFxDGFv4lZBbvucvtcp
5mWU45a3xrWN6aOs2/5MEM94TUh/Nt/HUpd5Nrx/8hzrc8DklauH5qgYZmyv
7+Me5fP2IW4xx3N8qOtXj0o9bua5LTveIfGheZ+Ojj/MnpM5dsUd0tdMxbiZ
a6IrHkf847I4t9aHfmOeUPLXXT9Hq+dXQslftx23vuVXQpnv0Nb32tf8CnWH
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
E3HTRP5aE/MdNFF3gAv5a03krzURN03Md9BE/loT8x00ETdd5K81ETdNxE0T
dQdNxE0T9SJN1B3g8qdnHqHuIIj9HTRRd9BE/loTcdNE3HSRT9NE3DQRN03s
K62J/LUm4qaJ+Q6aqDvAhfkOmshfayJumpjvoIn8tSbGzWsibrrIX2sibprS
cSMPqoP8tSbGzWsibpqoO8CFuoMm4qaJuoMm8teaiJsm4qaJuoMm9nfQRdw0
kb/WRL1IE/lrTcx30ETdAS7krzWRv9ZE3DQx30ET+WtN5K81kb/WRdw0ETdN
xE0T9SJNxE0T9SJN1B3gwv4OmqgXaaLuoIn8tSbipom4aaJepIs8qCbipom4
aSJ/rYn8tSbmO2ii7gAX8teayF9rIm6amO+gify1JvLXmpjvoIu4aSJumshf
ayJumoibJupFmqg7wIW6gybipom6gyby15qImybipom6gybipou4aUrHjTyo
DuKmify1JuY7aKLuABfy15rIX2sibpqY76CJ/LUm5jtoIm66yF9rIm6aiJsm
xs1rIm6aqBdpou4AF/Z30ES9SBN1B03krzURN03ETRN1B13kQTURN03kQTUR
N03krzUx30ETdQe4kL/W1Mf8dVvXppD0MW7jgPkOo/HVtslfa+pj/noc7m99
XK9nHOJm9C1u44K4aSJumqg7aOpb3MalX9K3elGXcfN5jlB3gIty3eHR9Suj
lStWxDbufNX78RC3+p64bE508Kw50ea/7q38u2bOzrZNP4omr1wdTa65Pv5z
/fr10ZbHwrsvK9cdumxvpl+YxHXZpRdF533+kzPf236X3Nf5Z1fOX/u+To7S
tolbM3Ez7Wnn/Vvi66K5Piava66X/7plW7Tzv7qPTV/jZlO3DezZ9XT04J23
DsXNxOzJv7zm/XNl9a3u0Na1y/c1uU9xa7uvYNrgpu/9c7T8/j96/6w2xE3v
Ommk82m+j8Vn3MzrJPFKrNr0y2Djlm5vSvnrcY9bn/LXo/Ynb1izduAZ4KZ7
fxPt2hPWM0CiT/MdunwW9vncnY0bdQekqeav925fOXD/P/3h/yz3ey89FC05
6H3xOdqE4w97X3T4uqc6//zB5q93T0WXH31E9KF5ny71/S08bmF05Ac+WKvv
Y57dF7131sB5MGT6unvhxkeCuacGG7cCddtbVU/de2N0xdknWGN53MnnRpet
2+AlT6M636HRuHXYttuIm1L+uqm4mfvdxm8dn3+N3OfwM68MIgdqBDvfoaM2
8Odf3xqdNfc9hTGbOOWSYGJG3Mrp6l5alVr+uu2+gsnR3P7tM99ua6sf8P6Z
idsg1etkNm4K+esm42b6JVedMbcwbgccc3FwcVMbN0/cAo5bh/3JdJ1J4RnA
Frdg6g5d9icD6rtWQd0BLor7O5h7XzbfXPbZ7Y2bvlQqB1OFj+eRUOtFb9y2
ZCDvUOV7vPy53eXeZ/o6vPoz7xr43fe/96R4rMWOB3bE4zCyzyL7z77YW903
TbHuMEp7K8tVQzLPi+u2P+O9bqSYv246bp20beLWWNzunzxnKA7zv/mDeAyo
uU6aMbznz37f0M989tqfe/8OQo1b223APA9vX76gch8khJglxz+OcSuri3tp
Xelj8n0sedruK5h6g+3aSd0hnLipXyeNIPOgLcfNeP7mJZXjtuC6R7x/D8St
P3ELJX/dRX/yjtM/PBj/w97OlWy94Qpr3fYTa7Z7/24SIc536LI/GUrfdZS4
UXdAWqj56zz3fHliqH2VeXYz1+CrD3l35XtnkQueeL3z7yDE/PUo3+/EvLXl
+kG7p6Lv7DeYK5tYeqv1d3eu/erAz5naxI279nj9jkKMW5G67a0MMw7Dlvs0
daKQ1slSnO/QZNw6adstxy2kPGjbcXvovA8NxuDUa6Mdr9uvfbbnSd85thDz
1223AfP6Ny84sHY/ZOL0n3ivz4a4Xk9I164276WjCi1uWW33FVz1hlCuicTt
LX24To5j3Iydq+bXjtvCzS94/06M0OsOxE0jbq33S3ZPRTd/fHB8pitX8tJd
a2bGyId2nQytXtRlfzKkvmtV1B3golZ3cM1XKPXsNnVN7Xuny/sPWubM54xb
3LLrB1RRtm6Ufd4w+bS8a+vU0k8NxcvnWuZqdYeR2lue6T7RnefMs772aRt+
6/1zZ6nlr5uOW9ttm7g1F7fsa5jnh8L4Tm0Yek8f9fSQ49Z2G7DlpM06gaY/
fezsw0u9z8S6f/d7/gZYdwjl2tXavbSncZvRcl9hz65XcusNM22LukMQcevD
dXIc4/bi5KLBGJxyyVvryk/f6w2z9kJ6XbMsM24shDnr6WMKIX9N3MoJLX/d
dX+y6DnAdjymTuH7ewptvkOX/clQ+q6jxo26A9JCzF87vbh5qCZbpY0NjQE9
4qho0ZIl8R5LZn+dwj//16p4b4j0a/haPy20/HU8n++4/Qe+m/i6M2uO08T/
/O9vxWHe2lK1gGz/x7zGmhcKaj7TfbFszMrk4cYlbrlGbG95McnOWQmpf2oj
Nd+h4bh10ba7iFso+etW4zbdttJz66vM8Yr3IUtfJz2OlwltvkPbbSCbkzbr
7GbHJpr8qBmXlr2fZe+JPuf0jVvcSmvrXtqg9DH5PpYZbfcVUmORPr340ngN
Otd+ONQd/MetL9dJI7Tx123GzVz/0q+Vt4a8WYsuu47uTBsMoF5E3IjbqFrv
T962pNZ5kH0GMA7d9GwwcfNdd+iyPxlM37Um6g77TF+bt3zvX+L923+8bjJa
v359dM31N8Z7u5f5b/N7hvl/d919T/TkX17z/5lGJLO/w3Ts8uYbFT67Td8/
Z/Ix0+1zcscfah1HNvft65kxuHpR6vmtjXyVbV3ksjWfF64eXgfWV9xk6g6j
trecONqeB80cYB/zhsqSyV+3EbeW2zZxay5uQ2PTKsTLzHlI50Z91gGDi1ub
bSBTGz/zzudyf75obXOfY9RCqzsEce1q6V7atPQx+T4Wo4u+gjlf77777oHz
Ip5X+/Hh/Bl1B89x69F1Mhs333nQVuP25ttjr0u/lmW8WChtMKT8NXGrFzff
+es2+yWj5Epsv+trTY9EUPMduuxPhtB3bShu41x3sNXyRjZrTrTwq6uDWou8
iuDy1w4z6wtOf9//79f/n8rPbjPjZMqMkXfJjCkweRlf1+PQ8tfpOX1trM9h
qx2sfLxk3S9dc/J8HQ8tbi6jtjcrwXkOCZX5Dm3Ere223VXcgsiDthy37PiY
Ss972WfGUe6VIwotf91mG0iP4Z2/8anq50z2eurxOTG09XpCuHa1ci9tQUhx
891XsK3lE0LubJzj1qfr5DjFbWauV8U5JrZ16ULIvwVVdyBuknFrs18ytC5E
xT5Gdl0Qw+ech5DqRV32J0Pou46CusNbzLXG7B321G1rnfPBhkxfcy9bt2Fm
7/ds/jJ7rV9+/x+9f84qFOoOex9cM3OMcd3Wsk9D7nU1dW8e6Rkv876+1lgK
LW7ptcFb6V9YxlBU2afBNX7t8ud2d/5dKdQdRm5vDtmcqM84VKWQv24jbq23
beLWWNxs83IrxcxynfWVEw0pbm22gfS9qWivIlu8QqvjhlR3COHa1da9tM9x
M3z3FWzjXKg7+Itb366TRkh50DbbW1L3+cq2amsM2MZeh9AHTR8PcdOJWyj5
6676k3Wvc9k1mgwz38XXuj2hzHfosj8ZQt+1ybiNc90hLX5GP/3D1mv2jFlz
hq7fZX4v1P6pTUj5a6tULmRmfEqNuoN5jVHrBNn5Mj6fF0PKX6fr423UZa37
HVXco8E25slHOw0pblZNtDcL2xiMOAYBrPtZRvDzHVqKW9ttu8u4+c5fdxG3
7HNolTGd2efFKntDNC2k+Q6ttoHUXLw6uQLrXsXMU2k/bmW0dE1uS/qYfB5H
CH0F2zGE+lw3FnHr2XVybOL25lvXYfO8Vjl3ZhkH4XOsXyKUehFx04xbq/0S
S/+icn3VsReVr+e/UOpFXfYnvfddG0DdwcHSRku114L1Wo2Fm1/w//lKCH1/
h3T7m1lXx8ezm2WNJZ9jZYKpF2XWMHrHvFPi/bfN3ihm7bEm6rS2eX9V+1a2
2oWPGn7odYc22lu6dp/2zkO+K1PHDz1/3cp1soO2Tdyai5tzXfKS18rsNZL9
Hd5svQ387WfL34pRxTr6TMwsYwuNEx/281wdTN0hgGtXMH3XktLH5OsYQukr
UHcIK259u04a6XxaX+M2Ekv+OoRxSiHkr4nbaHHzlr9uuV9iy3OYc6JSnsOR
3/QVwyDmO3TZnwyg79p03Kg7pNStO7zpGD+R/l3Pa0eWFUz+2vYdp+Z7DfT5
fTy7Zd7T955koeSvXWunph3xj8uiddufqXe9dOxTNcp6MWldr/ETStxs2mhv
rlyooVTHD3m+Q1vXydbbdsdxC63u0EbcrHtYlRzXmV3T3OcYtVDy1223geQc
qH0fmr4/DuXTApnvYPQ1bmXjGkTftSTfcQupr0DdIay49e06mY2bj/x1SO3N
KnOt9LmfYprvugNx04yb0Xa/xLo+YMV1emzrtcavc+q13uPmq+7QZX/Sd9+1
KdQdHEaoO1j7MSHeAwoEW3dI1fyGrpsent2y+Ryf42SCiZujJpDXnlbe+btq
79HEvMGcY+16v6Rg6w4ttbdknFoofZi6gs1ft3Wd7KJtE7fO2lvRmknpdehj
nnMyQcRNoQ1YxqaN/f4OvuMWWN9VJW4h9RWoO2jGzSmw66ThOw8aetyy89yr
7CXepvQxETeduHnPX3fQL7Hdtw44pvq6Dra6g6+x1N7nO3TZn/Tdd20pbtQd
UkasOxSdH75z02UEkb/OiOv5Cw5867hs+Y+un90CW2PJCCF/XTTnx8XcB8t+
f7Y9juqsO+6s4Xf8LBlC3GzfTRvtzfWdG9l16MzPmj6F+X7Mnz7XcbQJcb5D
m9fJLtp213ELpe7Q6v0tp19irpsbd746/DuZeb2G72fFEOY7SLQBy/gX83zo
aw/AcY9bcH3XCtLH5OO8CamvQN1BM25OgV0niVuBzHUyhP0BEj7rRcRNM25x
PDrol9juW5X3lXacY77yXr7rRV32JyWeOUqi7uDQct0h1H5qWoj7O6Svnbbx
6LY17Fp9dsuusVRnr6WG+a4X5c31LOvMO58rfB/bvMG6dXdr3aHiHMRRhVh3
aK29OfanSubd7tn1dHT72iXR8YfZr6MTh50UXbjxEe9tzQgxf91W3Lpq28St
nfvb0NyFjOX3//Htn7fUHD6xZrv378h33GTaQGB7OPquO/iOW3B91wrSx9T5
+wfWV6DuoBk3p8Cuk8StfKwWXPeI1zhlec1fE7dG4tZ1/tprvqRGvaCp12mC
z/kOXfYnffdd24wbdYeUlusOrLM0Wkyc8wY7HjNm1lhK37NC2DM8hPy16eOY
82fHAzuibZt+FN2w9Fxnf6fudbKpWoFzvsO41x1abG/O2v2sOdEVl55f+hyJ
5xIm+3J6Etx8h5avk1207a7jFkTdoaP7W9G4mfnf/EG09YYrBp5hTTub3PEH
/9/Rm/7z14ZCG7Dlsbves8gVN2Os4hZg37UKn3ELra9A3UEzbi6hXScNr+Pm
Q43bi5sH8ipdP58RN+LWli76Ja7zo+q1LqS6g+/5Dl32JxWeOcqi7mBn64uU
bmeWcYJZoTxP5Amq7pBazyj3u+/y2c2yxlLVNX56H7cMc+0018xz5x5afJ3M
WUe86VpBCHMHg6o7tNjeBtabSBkaqzMd/2NnHx7/WXSu+Bw/E1T+2uN1sqm2
Tdzaj1uZ/ckSx664I6jnxKDilhFSG8iupez7eT+EuoOXuIXYdxWJW4h9BeoO
mnFzCe06mY1bl3nQEONmjun+yXOsrx3CuCPiph833/lrl0b7JY6x1FXvXU2s
19QU7/s7dBG3gN6rjbhRd0gZYb5DUc1i/9nV93LxIaT8dXrv5txnsS6f3bJr
LAWyd1NQ+esce57cGk1+7qO5bcU8A7jaSpN1h3u+POH9XhpS3Npsb3tfeii3
LjtxyiXRlscG70WmD/vnX98arf6Me65h1/uAJ0Ka7xDKdXLUtt113Hznr33E
zfb8MHQNPGiZ9xxMVgjzHcrw2QZs11jfY3jHNW6hXJNHkT6mLt83xL4CdQfN
uJU9Tt/XSeL2lj27XokeXb+ycAynEcq6Pb7GzRM3zbhV+l5H7Jfsndpg7+Pv
v6pSHzSkukOo9aIm4xbqe42CuoPDCHWH7PiJrCUP+l+Lp4xQ9ndI13EK193s
8Nkt/TzZRp+4rpDqRWW8dNca67qUCdvaVU3Pdwhh7mAodYfW25tlH7/EaRt+
W3h825cPx8pn3yeU/HWI18k6bZu4dRe3v/1seW584nZ10LIg5vGFFreyfLSB
7P3M93rlhkrdocm4hXhNriN9TJ2+d4B9BeoOmnGzCfE6aXjLgwYQNzN+94Yz
j87tk9hMrPt34kbcRo5bqPnrRN1+Sd6+4yc+XP5czea92rgulxXqfIcm4xb6
e40aN+oOKQV1BzNfxdbOnr95ifN3QptbViSE/HW6jl9qz+Cunt0yayy5zgcf
Qslfl2Xuh6ZO69oTxbZXd9N1hxBq+CHErYv25poPZuJc9nyxzU/x1YcNYb5D
qNfJOm3bR9x85UF9x83EZ+A+ltPfGdhz2iO1/HXnbSCzzmep86rjuBm+j6ft
uPlu203yFbcQ+wrUHTTjNiTQ6+TYx2362frKC5dFK1esiPcl+NriL5Rex9z3
GiLe5jsQN8m41TFKv8R1npRdI9z0aWzv62sNF6V6UZfPASE/dxvUHeyK1kpK
8swmvuZ723n/lmjdOScM/MwRR7wdc7NXo++5LVX5rjtk74WlajZdPbul3sdc
+0JYEzSUuNXm2I/d9TxA3aFZnbU3R033K9sq7Fvr2EPHxKzrZ0ff+eugr5OJ
im2buHUQt8x+f2WEsC+Z77jV1lEbyM63DWWsi1rdYZS4eW/bfYlbgH0F6g6a
ccsK9TpppPNpxO0tZjz91huuyF9PqGSevS3pY+k0f03cRqKUv55Rs19y88ft
62oV5Ttevu/7zhj6yn8pzXcYJW4S71UzbtQdUormO5Q0sfTW6Mm/hNOfqcJ3
/vqN296eO1K6X9/Rs1t2X07f85bSfOevR2HW/RhqR5a9cJqe7xDC3EHfceus
vTmurVXbqWs9u65zNb7nO4R8nUwr27Z9xM1L3cFj3PY+uGbouc9cU826vEV9
mvkbn/ISr5nvTWy+Q1rrbSBzfhy+zm+sxjVuKtfkstLH1Ol7B9hXoO6gGbe8
4wvpOpmNWwj562DiZuyesu6hnFyTfa4J6W3cPHHTjNuIavUnHfWlxFk/3Brn
LM33YNZaNzWjonkrvtbKkqwX1Y2bwHuVRd3BoaG6Q9wmDzspbsuhjIcvy+f+
DmYPnGR9skr7oHTx7GZZYymk9a9914tG4aon2GLYVN0hHgNg6Q+NU92h0/Zm
+Z0637VrTprPukPX+bSgr5MZVdo2cWsvbtl+6MSp1w5cM81c6ry9Bo0Lnnjd
S8x8x21UrbaBTL8klLXK0599HOKmdE0uK31Mnb53gH0F6g6acZsR+HXSCCl/
HUzcUvLWqvd5zSRu+nFTyl/X7U+aPv7Vh7w7t48/ZNaceO2skJ4HJOc7jBC3
0N+rTtyoO6SU2N8hyTXv2fWKdZ0l2++svPN3/j9bSd7y16Yuvm8uWNl15/Li
1vg1MfMeIa2xZPgeNz8qW98ne410rUdZt+7Q5NwJubh13d4cfeTKtTvHXmpd
5wC8zXcI/TppUaZt+4hbp3lQj3HL1hxcz6bmmuga+xb/3v6rvK0bqZy/Ntpq
A+l4mXm2IfVJsnEzfB9PK3ETvCaX4S1uAfYVqDtoxi0R+nWSuJXjWmveZ1sM
re5A3AKPWxPfZ83+pPmc90+e4+zjp5l14s26PLax8z7WNrbFTanuMErcQn+v
Mqg7lI9Tmef1MnXEUPs6Wb7qDm/c9KW3v+eDlkW33H5LtH79+lJ/3nDm0UPf
95wVPxr62Zvu/U3t48uusRTaHF3l+Q4xyzxA2zXyhasXDLfLmuvWWesOmXHA
bfNVd+i8vTU0J9isG2pbq9Jn3aHLPGjo10mrkm2buDUft/Q+t4mi9QF3rv2q
sx9z6KZnxypujWmhDaTPKd97xjmPUbzuUCZuktfkkOMWYF+BuoNm3AyF6yRx
K8/2DOizLaaPw3fdgbiVp5y/HrU/ac7Tp+69Md4TfPHixdH5X/9GbHLN9XFf
I/k+nOMzl97q7bOrzndoIm7BvlfFuFF3SCkx38E5h61g/TTf19iyfOWvbf36
pr3zkO/W63Na1ljyuU6ajfp8B9teOLZrZHoN5USduaXO+2nHbdRX3Dpvbw31
kUOJm6/5DkFfJ11Ktu2u49Zl/tpX3LJ72JSt0bqOt/FzoyT1+Q5Nt4H0GLSu
a+XEbTBuktfkEtLv3+l3HmBfgbqDZtxUrpNGSOPmfcctlyXXEkr+mrgRt050
9Uw1HbNk/ci0lY/7279Wul7U5bNwQM/dBnUHh4K6Q1F+s8zzh8/2Woav/R26
eHarvYZO4GssGX2Y75C9v1mvkbY2WmevjWwtaZ8TH+62/9HnusNAO7HcA406
a0qEVnfoW/668etb2bZN3JqNm+UaV6WdZOf41b7WCsetMQ22gfT+4CaX5mvt
qzLk6w4l4iZ5TS4h/f6dfueOdT989hWoO+jFTek6mY1bp3nQwOJW5niz60uM
Zf6auDUWN7n8dUfPVNlxS8m11Gf+S32+Q2fPwgE9d2fjRt0hZcS6Q6k5D6f/
xP/nzOErf227vjWt7pixbP5lYt2/e49TVu/mO7jyW478deXrqa2O7yGn5itu
Xbe3eB9vy1zeojVfssZ9vkPI10mnsm2747h1mQf1EjfLc2mlduKozfrou8rn
r5tqA6k+qol36Lk0+XWWSsRN8ppcgre4pfbLCKWvQN1BLG5i10niVk32fULJ
X3dddyBugnFrKPatP1M58pmXP7fb62eXrhd1+Swc0HO3Qd3Bru7+DglXbm3g
NWquRd8VX3UHs8bgtk1vr2tbxc0LDhz6ns0audmf+9ct26ofm8AaSz7j1pTs
OuR5e5ja9j6tut+Gba8kH2MKfdUdumpv6e/TFrc6dVhbH7nreSq+8tfBXidz
VGnbxK3BuFmeGyo/k6bWxk74qDuoz3doog3sndowUys3ubSQ+5Ez54943aFM
3BSvyaHHLbS+AnUHnbgpXicNn3nQEOJWli1P7nMcb/o4iJtO3JTz160/U1nm
phj7XXKf98+uPN+hy2fhkJ67s3Gj7pAyyv4Ob7rrxml11qLvkmT+2hK3OnMN
y7y2r/Wti8jPd8iuZZWzb5GtPlh1vzjbGiI+9gqXjFvN9maLW9U6rOsa21h7
L8nXfAcfcWv6fX3uSSaZv67b3qY2jJ4rs7w38x1Gj2HlNpCqIdUdu2LOh3NX
bOz02WPs41bx9X3cy1zSx9T1e4fWV6DuIBI30evk2MetikxO1HdOxWe9iLhp
xm1kLfdLbHM4TbxCqOEq14s6fRYO6LnboO5QLk62dldUd/i3ieEaYZXX8M3X
/g5Nx62p3MjQGkuBPmtI1otSsve53Ll8lrWWqvS1rPOSPM1B60vdoVR7c6zb
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
f2N9LfriLTYHm5W3vG598n2zNr15zx3wdoK+5w7hsxrq6+Ecw38H48rEczM8
j0LfmNc9xJpGKXcI70YXs/Q636MDDn556d++a83Vg/01d/7N+TLjn956c3Ss
OijlDnO7locPZl981XiPQ5jHe+pxyOOxfj1Xb4uO8r2iwc3Nh8qNXw5e8fbR
52eNd+G66m3Qi1B4d2wwPlu+Ismys46tpxt6TZ76zZReh8K4N6yze88P/7+x
c3jyzq2DdUSTY9bF45b1jbfZvb3y3O7Sz8HQx7353a+PerNayzV/nfCm7S2A
Nw1vgV55GyI+fwt42t8Bb/W8ea5fNzEPKK67VTZrHewzXjjm6bt+6sab5/r1
rN7GetQX79PV69YN9jdef/VflfpvcW5g2beu0u+At7S3PuQOw3n1p9Z8ID2v
XuR/vedPs0u+smckYxi6L37nhbHnwvWbsx07dmRf37aQbd+yNfvyTTfP5f8O
x2nrPRqZ+vXhgxN7kOqsV3jgnvtG6mGp9Sk8jn9k6tcNe3NzLLzV+rnhORqr
d5502pVmuXwZZPodGvI21utQJTt4bvfI+MvyvVBv9ev8vLvxPOb4nmTDn792
7zOTHU/ZA6JMf8u88Fa/nqu3V068Uxieg6XulYJrL2MVb/VrvJUHb3jz7m2I
+vyt6M28fo230kjkDg3MA2Lr1JeuY0ael5bvXvfG2+Lca8nZ8hXZwoGf1TqP
Yi+gZe1EIi/C2xh9yh1C5hTbnzRkDGvWrBlkEbFM6tXnXJh98o//MPmdF8tv
58kFj7bzXFTZ32FpHdbFe/LPPvMntb5Hy3D3eSdJjH9U8qK2vLV9rLqo5A5z
uZYT+hw8rFcwCXf16zl7Kz4HK703UZxzLJ7Llmdt5hvevOV71ptefyqfFZ27
s/x7uKk1zi3niX3yNszpqvQUFX0vjVUMe4sG5+Qsd8BbefCGN9feSqAyfwt4
qoPirTz5c7T2lqKJeUCxhlll/hCuS/H97YBlz4NC/XpWb0vfUbPMuQrzdOu8
SKHfAW+TvXU5dwh72ox9d0X2wQzPxOfv3TJxnYHid15YkzB85p984OZkz22M
sz68ftC/EHpgLv/M5wbZRqoXp87zfVYU6tf5dc8G9a/cuxlNX6/Yd63H8Y9C
/bpNb20eC2/1rmVsbhG45pnD5r/zNBT6HZryFnv/LHyPlq6vRN51srr3PNWv
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
oW/1a9fHwluS4ruBwxp02T3oirmF1XO1V/0Or8Sz+CrvLRW9Vc4t5uDNon79
i+/ekW3fsjVb2HJT5fU8D17x9lr3THF8OtzPL8yRy/Liv/1Ltvndrze756z7
Hdr2Fn7f8Fmts95rvh/MeqyCN01vgfzzGm948+htGirzN7zpepPLi+Y8F/71
NzdEa2Arv/aY/e+OtzGK6+harB9Q11ufcwc1b33JHarWRiZ9TgIT9wknd7Bj
Tvd1ai15D+th4c3xsSrQt9whEOu/LZURR9ZYmvhMniPW9evWvT23e2z9wZAd
lBrnRNZpansfcA/eou+ALc7TP7tz+nysOK5Zu/eZcsdN7Os3C3X2zsJbeW9P
bf3EyL8568Prs51PvTj13xXHK8suutEk2yueE960vQXwpuEt0BdvVf14nr8F
rPZ3wFtz3vpcvw48uHBp9LO04cF/t/+9J3jrc/1aaa2eAP0O+t66njvU2ech
ui7dlBx/2jpLE/d3cAT16xyF/lHLuss0+li/dnssvE0l9v78/9hwd/Lvx+Yi
lvdh3/odwvWP9r5PyYui3gzXv7asX8fWGFu6JhdeFR2nhOu3f8Pov1v38LOl
nd268uTJ45IaWKzPa1m/btNbquYSeN+N30rfa4cPLvWjDM7rohtdvPtkWb/G
22zgDW9evZVCaP5W9NZm/Rpvs0HucKyPPf88HPLa91zpYg9pvCUQW6un6K23
uYOgtz7lDsMxYdn3UAZz9beNPz+nvldbYl/pJvoP5w37Oxwjv65EjI/f9n0X
7zYNIS9ydKwK9DV3CBTnLcNn9RO/fGn07xbm+IO/N+c1m6fRu36H44z01A9d
nPHBbOHAz8b+7pEn9mSXn/amMb+W9RlLb6n+8zyXfGXP4Fkengs/2LFpZP4d
5nBl310I45j7P7ps6vGq8ppTv9S79bHa9hYbf+bHkeFY4RkZrkkYr931hbUj
f+e9G+92MzaxzB3wNht4w5tXb9NQm78FrOqgeJuN/Pn1rX595NCPs51/c370
uVmmX8YS6tfja/W85aTr3OTnKeh30PfWh9whULbeEc0tSqxF/cgn3zr1u3vS
+7xeUKxfx3pN6qzjsffSc7LVqy8YW09kEsvOeke26vyzzdcuVKxfN+XN27Hw
VuH3vzXSW7bIq8+5MFu9bl32qTUfGPvfrO+1gGK/Q1Pe/vM7/zi23tXwWXj5
Zz6XrVmzJjv/jPH/3UN9xjQvqrnmUVijcdO+H1Q61m82v63yccrQ9n7SQ0z3
CWjRWyD1TJzGmWuvH89sjcGbprdA/hzxhjdv3oooz9/wputN7b35WecBIXvd
t+ur2YYPvWPczfGc1nsNtI/eYqit1VP0ppA74O0Yfcwdlr4n9/5rtPYRctvt
a985/v2WWMM6PKeGz99Lzn5D+e/LC6/Krtv17UF9v9Y+ZnNGMXcI46awJ9bX
ty0s7Y1Vp7fvyTuP/dvA8Gflf27xz0PC3y+zHize5uPN3bEqoJg7NH0tw7N0
z/ZrJz5Hwzv1H//i19zM8yX7HRr0FpyF5+Un//gPJ37f/a/3/Gn2+W234S13
3cL7gmXGDO9ac3W2bf/TtY4T9okcfo99+aabo99f+e+58Of8/z/1Z6tnZl+8
DQnZXnReXyCsRR/Gk17ur9h1w5u2twDeNLwF+uQtj/L8LWC1vwPemvOmUL+u
Ow8ovmO9NDcLGdAnNmf3/HA+tcQ2vCnUr+dRwyiuMWixhmpV5Pod8Dbmrcu5
w7L/8z+T353/e/WHsvV/d122aePGZO0k5LapXKCp9wk9vHOdR7J+DZr1a8Bb
gSOHXhjkueH7Y4jHsYViv8O8GGbweWfhc+3dm3VelP+sH3jowICla+fsfQRr
rOvXVt7CscLPzd9bw2eiwmfEun6Nt/rgDW8q3rpA3ptl/Rpv1ZDLHepy+GC2
7dL3Z2s/9/eD7DV8LpQ/D73x1jHk8iIY0OXcYbhH0nDvyvAd+vDeO7Jr//L9
pXKAsL5HeKZO6xMbvE94/eZoRh8I/9sg2zr+39T7ht72mpbc3wHIi0Qhd9DE
U/0a8NZ18KaJp9wBqoE3TfCmCXVQTbzkRVAN6teayPU7wJi3ruUOYb2ksPZR
rJ4fvhPC5/SpB+/JDtxzX7Zjx47szt27s3vvu39wvp57Z9uC+rUm1K81wZsm
9DtoQv1aE0/9DoC3PkD9WhO8aYI3TciLNMGbJuRFmnQ5d4DZIHfQBG+akDto
Qv1aE7xpgjdNyB00oU9FF7xpYrm/AzTjjfq1DtSvNaHfQRNyB0hB/VoT6tea
4E0T+h00oX6tCfVrTahf64I3TfCmCev1aELuoAneNCEv0oTcAVKwv4Mm5EWa
kDtoQv1aE7xpgjdNyB10wZsmeNOEOqgm5EWaUL/WhH4HTcgdIAX1a02oX2uC
N03od9CE+rUm9DtogjddqF9rgjdN8KYJeZEmeNOEvEgTcgdIQe6gCd40IXfQ
hPq1JnjTBG+akDtoQp+KLnjThP0dNKF+rQn1a03od9CE3AFSUL/WhPq1JnjT
hH4HTahfa0L9WhPq17rgTRO8acJ6PZqQO2iCN03IizQhd4AU7O+gCXmRJuQO
mlC/1gRvmuBNE3IHXfCmCd40oQ6qCXmRJtSvNaHfQRNyB0hB/VoT6tea4E0T
+h00oX6tCf0OmuBNF+rXmuBNE7xpQl6kCd40IS/ShNwBUpA7aII3TcgdNKF+
rQneNMGbJuQOmtCnogveNGF/B02oX2tC/VoT+h00IXeAFNSvNaF+rQneNKHf
QRPq15pQv9aE+rUueNMEb5qwXo8m5A6a4E0T8iJNyB0gBfs7aEJepAm5gybU
rzXBmyZ404TcQRe8aYI3TaiDakJepAn1a03od9CE3AFSUL/WhPq1JnjThH4H
Tahfa0K/gyZ404X6tSZ40wRvmpAXaYI3TciLNCF3gBTkDprgTRNyB02oX2uC
N03wpgm5gyb0qeiCN03Y30ET6teaUL/WhH4HTcgdIAX1a02oX2uCN03od9CE
+rUm1K81oX6tC940wZsmrNejCbmDJnjThLxIE3IHSMH+DpqQF2lC7qAJ9WtN
8KYJ3jQhd9AFb5rgTRPqoJqQF2lC/VoT+h00IXeAFNSvNaF+rQneNKHfQRPq
15rQ76AJ3nShfq0J3jTBmybkRZrgTRPyIk3IHSAFuYMmeNOE3EET6tea4E0T
vGlC7qAJfSq64E0T9nfQhPq1JtSvNaHfQRNyB0hB/VoT6tea4E0T+h00oX6t
CfVrTahf64I3TfCmCev1aELuoAneNCEv0oTcAVKwv4Mm5EWakDtoQv1aE7xp
gjdNyB10wZsmeNOEOqgm5EWaUL/WhH4HTcgdIAX1a02oX2uCN03od9CE+rUm
9DtogjddqF9rgjdN8KYJeZEmeNOEvEgTcgdIQe6gCd40IXfQhPq1JnjTBG+a
kDtoQp+KLnjThP0dNKF+rQn1a03od9CE3AFSUL/WhPq1JnjThH4HTahfa0L9
WhPq17rgTRO8acJ6PZqQO2iCN03IizQhd4AU7O+gCXmRJuQOmlC/1gRvmuBN
E3IHXfCmCd40oQ6qCXmRJtSvNaHfQRNyB0hB/VoT6tea4E0T+h00oX6tCf0O
muBNF+rXmuBNE7xpQl6kCd40IS/SpI3cIV+/JnfQgdxBE7xpQu6gCfVrTciL
NOF+04TcQRP6VHTBmybUQTWhDqoJ3jSh30GTNrzl+x1Aj1XnrTI/B8BbX8Cb
JnjTBG+a4E0TvGmCN03wpgneNMGbJnjTBG/atLHOEujBfa1J6C2yPgeoDveb
JnjTBG+a4E0TvGmCN03wpgneNMGbJnjTBG/akDtAjFXnn21+DlDDG89jSfCm
Cd40wZsmeNMEb5rgTRO8aYI3TfCmCd40wZs2beQOrDevA940YZ8ATfCmSd4b
65brwD4BmuBNE/YJ0ARvuuBNk7w39nfQgX05NGF/B03wpkkb+0rn69fsK60D
+xNrQv1aE7xpwv7Emhw59AL1a0Gog2qCN13wpgneNKF+rQneNKF+rQneNCF3
gBTkDprgTRNyB014/1oTvGmSr1/jTQe86UL9WhO8aYI3TcgdNKF+rUm+fo03
HcgdIAX1a02oX2uCN03od9CE3EET6tea0O+gC940wZsmrLOkCbmDJnjThLxI
E3IHSPEfTz9G7iBIvn6NNx3IHTShfq0J3jTBmybkRZqQF+mCN02og2qCN02o
X2tCv4Mm5A6Qgn4HTahfa4I3Teh30IT6tSbUrzWhfq0L3jTBmyZ404TcQRO8
aUJepAm5A6Qgd9AEb5qQO2hC/VoTvGmCN03Ii3ShDqoJ3jShDqoJ62Npwv2m
Cf0OmpA7QArq15pQv9YEb5rQ76AJ9WtNqF9rQr+DLnjTBG+a4E0T6tea8N68
JnjThNwBUrC/gybs76AJuYMm1K81wZsmeNOE3EETvOmCN03y9TTrc4F63sgd
dKB+rQn9DpqQO0AK+h00oX6tCd40od9BE+rXmtDvoAnedKF+rQneNGG9Hk3I
HTTBmybkRZqQO0AKcgdN8KYJuYMm1K81wZsmeNOE3EEX6tea4E0TvGlCXqQJ
9WtN6HfQhNwBUlC/1oT6tSZ404R+B02oX2tC/VoT1uvRBW+a4E0T3r/WBG+a
4E0T8iJNyB0gBfs7aEJepAm5gybUrzXBmyZ404TcQRO86YI3TXhvXhPq15rg
TRP6HTQhd4AU1K81oX6tCd40od9BE+rXmtDvoAnedKF+rQneNMGbJtSvNeG9
eU3wpgm5A6Qgd9AEb5qQO2hC/VoTvGmCN03IHXShDqoJ3jShfq0JfSqaUL/W
hH4HTcgdIAX169mY1/1U5rjUr/XAmyb0O2hC/VoT6teasF6PLnjTBG/1sZq/
4U3XG3mRJnjThLxIE3IHSOF5f4cjh36c7dv11WzTxo0jXLfr29kTv3zJ/Pwe
//yK7M3LV2S7/+to68f2nBd58vaDHZuWjr/zqRfNr43n3AFvaTzXrz15C+P5
8J0Szmf91X+VffKP/3Dpur3qqu/gDW946zCecwe84a2J6+TpORnAWz0s5294
0/XmtX7tyZu3+VvRm6f6dZvePH1GyuK136Ftbw/vvSPbsWNHtnD95qVjfeOe
fRLeyB0gj8f69dHnH8n+/i/OHhmXxXjte65s5jvt8MHsmneelb31nHcNPrvT
WHXequz3f/t3TOcaHuvXrXubdj77N40c9+JH/9v8GuFN05vHfgdP3p584Obs
2r98f/T4533osuzz224zmX94rF/jbToe+x3m6S387HWve1Op8UcZzj/jTdmZ
257EG95K460OynMSb6UQnL8FvNWv8Ya3Rs7H4fyt7968fUbqevOQO7R5LX/x
3TuyS85+w9RjLbvwKnfeyB0ghbfc4ee3rpt6jxVZ+bXHZjrmy3eeOGb+GVeG
a545jDcjb5MI3w2r37jc3fjHW+6At3J4q1978Rbeayr6Go6Dtu1/Ojt0xOad
NLzhTcnby7d8pPLPn8ayzQ+1fp285Q54K0/+HLrurSzen5N405y/Fb1Z10Hx
hrcm8Dp/C3iqX7fpzdtnpCqe+h3aupbhubJ/w8rKx3rfjd8y9xXzRu4AeTzV
r5+67tzK99mQVbufrXXMcH/fcOoptY657JytZvMOT/VrC2/TuP+jy8aO5WH8
gzdNb576HTx4C+9hXH7am8Z+/kmnXZnd80O7tXcnebOug+KtPJ7q1/P2NssY
ZBKffvxXpt4CeNPwFuiLtzKoPCf77k11/oY3XW9e3pv38Jws4nX+1ldvHj8j
s3izzB3aupbhs3nrypNrH2vZxf/s4n0IcgdI4WV/h+cWVo/eOxdeld3ywPcG
z5lAOM+7vrA2ea+95Y0frLXeY7EnsAqW36de8iIrb5NIvYPoYfzjJXfAWzW8
1K/NvR0+mO299Jzoz/74bd8394Q3vMl5O/jl2mOQ5HFftz478KsjrV8vL7kD
3vBWC7HnZKDP3lTnbwEPdVC84a0pPM/fit6s6tdtevP4GamDh36HNq9lLLsL
+9mEuvp7Tzuz1DNy2bafuPJG7gB5XNSvn9s9cn9OWqcs9PFtfvfrG7nXwpjh
7vNOGvkZg3tl+Yoky/7P/zx2rHO2Zk/9xu6Z7KJ+beRt2jkN1wD1OP7Bm6Y3
F/0O1t4OH8y++Krxd0C9jE+neTOrX+OtMi76HVry9sgn3zr69896R7Z63brB
vrVh77ip//276wZ7DOR/htX613jT9BbIn0eXvSURfE722Zvy/A1vut7Mcwfr
52TinDzP33rnzeNnpAFvJrlDi9eymN2dufb6sf7KI4deyJ6/d8vY2HGExWfm
zYfaf38lT99zh/BZ2L5la/b1bQvZwpabBv8N+4KH/9+Xb7p58H+H/4b/e+HA
zyr97Cfv3Dr4mcOfk/r54f9v/X0Zw0PuMMz3Qg9zqXe9FucHsXuu8rq4uffV
rHs38dbAOS3+/Em9ux7GPx5yB7xVx0P92tLbcP/U4s8qfS54wxvexlmc0yyt
h7w4V6g6/hxSfB/L6pnpIXfAWz3y59FZbwlUn5O99iY8f8NbN7xZ1K+Zv9XD
un7dpjd3n5EZsO53aO1aFv7d2r3PTPz70/aAWHbFHW689TJ3qNjTV3bPouD9
/y0rv0ahdf4Uw7x+PczJK+ZzsZ6+qmOYfD+T1Zq6dTGvXxt6S7G0/t7iOf3Z
Z/7E5fgHb5rezPsdLL2Jvgda9GZSB8VbLczr1y15W/r7i8fZ8mzN8WHBc/Br
VSs1X68Hb7Xpg7cyHpSek332pjx/C5i+f403vPVo/tYrbw4/I015az13aPFa
5v/NuTufLH2s1L4TVmt2Dul77hCeMT/YsSnZBxbzVXa8GXpewh5kO//m/PjP
Why7Xrfr29kTv3zJ/DrEsN7fYXjPfGxftffFwvtJS++b1XhGHj14m6tna1Ws
8yIrb8mf+/CWpZ83WKsgsvayh/GPde6At3pY168tvRV74oeUzefxhje8Rbzl
6p0zPeMKz0zLtXqscwe84a1Pz8lAH72pz9+K3tqug+KtPpb1a+ZvzXhru37d
pjdvn5FZsex3aOtaDvaSftux9ZmWXXRjJ96b6HvusMRzuyeviTXj/Ra+U/Of
NQ9rEU7Dun4d1sittf96pJepyrwtvzav4jsX1vVrK2/TfuZSxut0/IM3TW/W
/Q5W3orrgCx9tzlY97OqN4v6Nd7qYd3v0Iq343931ufo459f4eZ5iTdNb4H8
uXTSWwT152RfvanP3/Cm680yd2D+hrdp3lx9Rhr21nbu0Nq1zK3bWed9h+ie
7rP04jYAuUPc7zTq3HP5ucSq3c/a/75TsM4dahO5r0vPFQqfgVefc+Fgj7+w
J0fYw8U638VbNfJj2U0/Ot5X5HT8Y5074K0e1vVrC2/5d9PyvObUL0k8I/GG
NyVvdY9XXKvH8h0n69wBb/WxrINaeOvCc7KP3rowfwuY73OLt1rkf/deeEug
NH8LWO/v4MWbi2NVwHp/hzau5a+/ueHY37n4n2sdL9ZfEbjgUbvnE7nDKC/f
uS463oxRZZ2tAbnnrkKeL1u/Lny/VVkbN7UeWp6zPrw+27b/abdjIdn69Qze
YuTv5ZF9e5yOf/Cm6c2636Ftb/m+zyIK32sxb1J10J57k61fN/ycrHo8673k
rNfrwVt9+uStK8/JvnkLdGH+hjddb5J5Uc/nb3hzdqya3mRyh4rXcng/1V7b
8fDB8dyBfgdX5NekK0OlcWju8+bleTsJ6/0d6pLP2gOl86HEXvMpwvNi095/
Nf99i6jmRbW9xci9PzO2LprT8Y9q7tB3b6r167rehu9fFAlrT1r/TnjDm1ca
fU6WoLhWj+X7TQHV3AFv/fLWledkoE/eujJ/w5uuN8X6dd/nb0VvKvXrNscl
bY+ByqLY79D6tVx8vt5w6iljz1D2d3BE5Nk47Tuw9F7mYrmDZP16hv34ouug
leC177nSvA8+j2T9usF9FAfvq608+djPiuW6Tsc/eNP0JtnvUNNbcJTaa7O4
dmD4u+HahM91+K+3caFk/Rpvmv0Obe8T7HCtHrxpegvkr4H1uczTW5eek33y
NvDRkflbQK5+jbfeeRvzKDp/67s3V8eawZvH718X1zLS7xD2XLHcX5jcYfLn
ogwnnXZlOYfkDvOl8N7Eyq89VvrfTuqtLsvavc/YX4OeeYuR3w/w9F0/Hfvf
j+7f5HL8I5c74G2AXP16Fm/P7c5+/7d/Z8zDsFf0yKEfZ3dtXZedf0b8/bVl
Z3ww++zOx1z0yuMNb+691aW4Vk+d/e8aRi53wNsS+XOyPpe5euvQc7JP3ro0
fyt6c18HxVvvvMVQnb8FpOrXbY5LLMZAFZDqd7C6lg73BCd3KJAb939+220j
7x5NotT8gNxhfizOF/L31liPXwnCnCL8zgceOpDt2/XVbPsVlyXnF57HQFL1
6wa8jZC7x5J98U7fu8CbpjepfocZvSXfTVu+Irv26stLPycHvfLD/eYceHNf
B8Xbid9FqX7d9HOyJGGtnvxcuviutrW3gPX54K08ffHWpedkn7wFujJ/w5uu
N5n35pm/4c3TsRrw5jp3MLyWsbyv9l4RDUHuUKCYDeTWq5vGq/7flPxKLHdQ
2N8hfEc8uHDpXMf+YVwUxkOXnX369M+B8X4tAYW8aC7ecmsUTFyfwOn4RyF3
wNs4CvXrJryN9FHnGHs/dPEZ+N7Tzhz8d9rz0vL9GbzhzbO32kTW6im9Fuic
r0n+OlifD97wVvwZXXpOBvrgbRpq87eA9zoo3vC2hPj8rejNY/26zXGJ6Rio
It77HTxcy+J+Eh7yI3KHAoVsIHxuUvuMxZj4HBXLHTzXr48ceiH7wY5NpTKh
Jsf+R57Yky380e9NPF64ry3XTvNcv56nt/x+jGXvQ0/3I940vXnud2jS29Hn
H5n4c5ZdeFV2zw9HxxDh+/MX370j2/zudC99rCe7bW/e6td4S+O538FqXDJC
ca0eJ/vh4k3TWyB/XtbnMi9vXXtO9sVbpeMKzN/wpuvNa+7A/A1vno41D2+e
cgcv1zI2prHudQiQOxRIZANPXXfu1M/PgOUr0u8okTvMTHgHYvvad5ZzkR+T
bPtJo+fx/L1bouvADrHsj++jt3wv2dS165yOfzzmDnibjsf69Vy8RfanGvLx
274/9Zz2b1gZ/bdWe6fiDW+uvdUkXwcIWNY983jMHfBWjvx5WZ/L3Lx17DnZ
G2818Dx/w1s3vHmoXzN/K4e3+nWb95uXe7sO3vodvF3LZ28YHZNY7+sQ80bu
8MrEbOD+jy4r9RkKe4WHPciq/GyPeKxfh7nB9Z9dn23auHGw3uqn1nyg9FqQ
TfZhhjFFeAejuF/L0nPEcD9Aj/XreXrLZ7rJey+P0/EP3jS9uex3mIO32DqR
w2ddmXMKz8zUd6jFGNZj/Rpv5c6nD97qnsfInmTLV5jVPCd5C1ifD97K0wdv
XXtO9sVbHTzP3wLu3r/GG94KdGX+1jdvpseaozcPuYOra1nYI6DUPdoS5A4F
JmUDi5+pG049pdRnKPRIj33/ieUOCvs7DAk5457t107uky45f6hEZK9463vc
ZV40J2/FuV6p9fKcjn9c5g54m4rL+vU8vEWuf+Bj+35W/hwS+yWFd0Lbfl7i
DW+uvdUh5zpcGw9ruQ5xmTvgDW8RB114TgZ64W0WHM7fit5c1EHxVgp39es5
eevS/K3ozUX9ek7evB6rLt76HTxdy+K+Dl735SB3eGV6NlDYl3wSYz0tYrmD
Uv16icXxSGxvuAGT1sCagej+H4b7XCnVr2f19vKd6048tzc/VO5YTsc/eNP0
5rLfYR7eEnWZqg6K4yErl0r1a7ydwGW/wzy81aC4Hqj1uhN40/cWyJ+b9bnM
zVvHnpO98TYj3uZveNP1ppI7zOqtS/O3Pnlzf6wZvHnOHVq/loV77cxtT9r/
7jnIHdK+Us/Eow9viX9uIozMH8gdWiF8b9x93kmtjf1Tx7Ny3BdvRw/etrTW
Z6U9xZyOfyRzB7xp1q9reItd/zprV6fWsyB3wBveZiCyVo/lnDD2++NNz1sg
/ztbn8vcvHXsOdkbb3M6nuXYUq4OircB+fPoqreuzd8CcvXrGt5UjlUFlX6H
Vq9lYTzpZU+HlDdyh1dKZwM/v3Vd9HMTY6m/hdyhNcLag7G+lNLZfNXjReYa
Vo5V69eVvIXc+G2vX5obVpqnR8Y/n378V+a/O940vUn2O1T1lrj+lR0e/wzE
+k3n9Wwu402pDtp3b6r168reqlLw7GmtnqK3gPX54K08vfDWsedkb7w1cTxH
8ze86XpTzIsqeevg/K0X3sSOVcebSu4w72uZ77dcdsUd7saSAXKHAhWygYNX
vH3scxNj6Z0ZsdxBaX+HGMW93Of6jIys60q/w/y8vXzLR07cX69bn91+1+3Z
jh07Sv13+9p3jv38FRu/OvZ3b3nge63+3sq5Q5+9Kdevy3ob0NA6FGGty+Hc
xXL8ije8ufZWkeJaPd56q5VzB7z1wFvHnpOBXnhrAkfzN7zpelOtX5f11sX5
W9GbUv26rDfFY5VBsd9hntcyf3+G/SI8Zg5Fb+QOr1TKBib1y4x9ni66MXvy
gZtdfDeWRb1+HRuTzO0ZGdnnin6H+Xl7bmF1qftuFl5z6pdafW7jTdObcr9D
WW8DGqrLpL43qV/jrex59MJbFSJr9Viuc4237ngL5H9n63OZm7eOPSd7460J
HM3fAsr1a7x111sX52998CZ5rIre1HKHpq9lfr+bUG/2mjkEyB0KVO1JKM4b
SkLu0AKLbm449ZTWnsfDNQ+tHffBWxvjn7bXO5DPHXrqTb5+XfY5mVg/ok6v
tIe6DN7w5tpbFQTW6pHPHXrqLZA/R+tzmZu3jj0ne+OtCRzN34re5OqgeOus
ty7O3wLS9es277c2j1UC5X6HJq9lfs/hkDmU3nPFgTdyh1dqrYWU32enLOQO
7VAc/7f23oXh3oDy9esS3h7//Iq5j3/od8BbGeT7HUp4G5Bb2zXPqt3PVjqW
l/dB5evXPfUmX78u660CxbV6lm37ifnvOMlbwPp88FaeXnjr2HOyN96awNH8
DW+63qTfmy/hrYvztz54Uz1WFW9yuUNT1zJXsw73jvfMIUDukHZYJRvI97iU
QSF3UN/fITb+n9d1D/vE5N+VestJ15nd/+p5URlvYQ3dfbtOrA1ZhVtXnjx2
P4Z1Jot/7xv37Gv191bPHfrqTb1+XeU5md+zammsdPE/Vz5mrC5zwaPtjvfx
hjfv3kohslaPeu6At+5769JzMtAXb7Piaf4WUK6D4q273ro4fyt6U6tft3m/
tXmsMij3OzRxLfPvvIfM4cCv/I0fp3kjd3hlpr2fq/SgKeQO6vXrYh/T0v7e
c/7cDOYqV9xh9nur16/n7i2yjm+dXnq84S0g3+9QwdvR/ZvGHIT95aqMd1Lv
g7btUr1+3Vdv8v0OTT8nC89Fi/cF8dZdbwHl+nVfn5N98jYzjuZveNP1ppw7
9HX+hjenx6roTS13mPla5vaHqDpGGRJyi8s27mw9qyV3KDBD7hCeV7H3Zcgd
jCis11rnvaWyFPsPr3nmMN68eouMfzzcj13IHfrorQv169LeEvsZVXreRX7G
Sadd2frYB294c++tBGNr9Rj2vU+iC7lDH70F1OugfXxO9srbjHiav+GtG94U
69d9nL8F1OvXbd1vrR6rBMr9DrNcy9DnNVxfLuQVtfocjo9TQmZB7mDMDLnD
0GVsjVCvz9tJqNevi/0ncxuTFPalD88Py/fW1OvXc/fmdPyDN01v6v0OVb09
e8PKMQ+VamYRjxbrmqvXr/vqTb1+3ehzMlLjtK69lPGmWE/rq7dAn7x15TnZ
N2+1cTZ/Cyi/f403vEVxOn/Dm89jVfWmljvUvpa5PW1CZlB3P5u7L/7dwc84
fddPW//dyR0KzJo7vDKaRaXw8rydhIf9HcJ3QPhcVh5PFPabmjZv+MV378i2
b9maLWy5Kbvlge9VOt7BK95+wq3xvlYBD3lRW95q4XT84yF3wFt1PNSv2/RW
XFO36nOvWNex6tXFG94UvE10evC2ESee95XzkDvgDW9T3XTkORnoi7cuzd+K
3izqoHirh3X92sv3WxSn87eiN4v6dZveXH9GKmLd79D6tSy8r7LpRy8NzqEK
L/7bv2Sb3/1607EJuUOB3LNxprXnIs9Yj8/bSVjXr5/a+omRa3bWh9eXukfC
vbXnz3/rxD190Y0TnwuxNV3DOOazOx+beqxiZrlq97Pm3qzr1215q43T8Q/e
NL1Z9ztYeHv5znVjLkq9b1YYbwXO3PakuTeL+jXe6mHd7+DpOam0Vg/eNL0F
8ufaB29deE72xVvX5m940/VmmTt4+n6L4nT+1idv7j8jM3hrO3do/VoW9oNo
Aqv9cMgdCuSejbOOF2NjV2/P20lY5g7h3kytV/XejXen79PFe3OY5Q3v6Wnv
kcX6qvP/PrZ2Wji//RtG/92GB//d3FmfvNXG6fjHMnfAW30s69eW3opr6wb+
x4a7J5/rypNdjHvwhjc1b7GfqbRWj2XugLfZyJ9rX7ypPyf74q1r87eAVR0U
b7ORP6+uequN0/lbwKp+3aY3ic9IRaz6Hdq+lrGxRRNY7etO7jBKPoNvYsxY
fK/J2/N2Etb167vPOyl9zyxfkV3ylT3ZE798afC8CWtC3fWFtSN/59y//qdS
OeKvv7lh6v0ZjhWuR7hHfrBj0+i6khdeZdZHHcO6ft2Wt9o4Hf/gTdObZb+D
tbfiHHA4lgrHy/+9sHZFfrw1/H61fGfGun6Nt/rXrq/eRtwU1uqx2B+urrcA
3jS8BfrqTfk52RdvXZu/4U3Xm2Ve5OX7LYnT+VtfvEl8Rmbw1nbu0Ka3fH9E
U4S1Pa1ckjvkCHtCFzKldQ/P1r+X+nx6ed5Ownp/h5/fmu4XmcSZa68fmxdM
816nfymsjbZp77+aeypivT5Wa95qEuvvveBR+72krNdZwls9rNfrsfaWOv6r
z7kwW71uXfapNR8Y+99Wfm16Lz3e8Ia3NGpr9VjvE4A3vDV5fO/PyUAvvHVs
/oY3XW+W6/VYPyen4XX+VvTW9no9bXrz/hmpiuX+Dm1dy99sflut40zDYj/p
mLc+5g7huyHU1/dsv3Z8L7Hc52Sw59Hi57pWPhTpq1bIHazr14Gw79SGD71j
6j0U1la7bte3az8bw+cgvE9xydlvmHqsd625Otu2/2lXuW8e6/p1m95qsXg/
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
/cbuHac+eXvkk28d/RmLDlavWzfYW3D91X9V6r/FZ6eHfTkCXfY2+H07NH+w
9tb2WOG5hdVj/27Ls1P+3fF9WEY+O8aZkXkdtEVvXRlPBvLn03VvZfE+ngyY
16/xVgvrfgcrb8rzgKK3PuYO4d5a2HJT9vVtC9mXb7o5275l62AP8vB/5///
4f8X/rfw5+LfDdx73/2Dz5uHvU2awlX9uqzPyFp0pedrkfGnh3dfquKpfh2e
jwfuuW/kfaNUX1oT6/G2dSy84W2Ip36HuV/LwjNy7d5npp7PpHUvQ4+pB2/W
dVA398Ci30m9ux7mG732lqu7WvdK17lW+ethfS5z8/bc7hNj0MX53sKBn9U6
x2IN1fLe64W3V7o3fzD11vJYYRZ3Y3lFn++3Nr11aDwZMM2LPF5LgfEk3rrh
rfXaq6U34XlAoO+5Q+wdlZlZnGus+sTm7JYHvif3ecijmDvMMn4Mz4Xie2oB
63eWuuit2Atdd57o7Viz4Cl38HAtVbx5qoPO+1rm3+84d+eTpf/dU9edG/2u
tKzL9MlbZU+LY5g/+8yfuJxvuHpvvmVv+fVfrNb6b8JbwPp85uVt6RlZ5l3r
FIU16ntdv27JW6Br8wdLb22PFZ69Ybyms+lHL5U7bj4rdFDP6Yu3Lo0nA5b1
a4/XUmE8WfTWdv0ab/Wx7Hew9KY8Dyh662PuEPYmC+d319Z1yZ6iMRbvxdAz
vXD95uwL6/4iO+usyf0zn935mGT+oFC/zhPrPaq6T1hsf/iTTrvSvC+pCgr1
69j8bl71tDaPhTfNY82Cp36HeV7L/Hul09ZMHiOy12Od5/O8vHmtX7d5D+TX
pB+8J5p7p8bTfEMhd5iHt9Cbu/SzBN9x6oW33HNupnulcO9Zr/uSPxdrR3Px
9ko35w9W3lofKyR6Tcpe95j7wDXPHDbxZlW/btNb18aTffFWFpXxJN664a3N
3MHSm/o8IND33GHE5/OPTF6D683pTOrIE3uyze8eH7fk/93Op140/x2rILe/
Q+T5WPkZ/NzuaP6klCkq5EXUr8chd9D01pv6de6dwDrz8VhNZqZ3gvHWHLm6
zdIYx+l8oxf16wj5d6mVxiO98nb8Ppp1L4ZiH/YFj7a/VnjMW8Da0Vy8BTo4
fzDz1vJYIbqvd8X1RmL9Elbjzfw5tPrefJveOjae7I23MgiNJwNm/Q54mwmz
fgdDb+rzgKK3vucOgVQPzNI4ZEq+NO3fv+/Gb5n/jmVRqF/niY09X3Pql6q9
a7T43I2991Jnv3krqF/bHQtvmseahb70O/z6mxtqzeeHxNZfthzDkjucIDqW
dTrf6KW3wjogrz7nwmz931032FtssK+YwDtPvalfz0pxjaU3ftB8j7E+eOvi
/MHKW9tjhdj6VlWv+fCc81j1qvTBW9fGkwGr9+a9XUul8STeuuGtzdzBzFsH
5gEBcodRYuPXkbFMib6WaXtGzPouVFuo5Q7R91Uq9iGF75zoWrEX3Wj++3XJ
G/XrccgdNL31pQ7681uPvaNRe+2ByFoI9DvM39s08u/ejPxsp/ONXrw3X2Da
+yyBsz68Ptu2/2m3cw9yh5IU11gy3is10AdvXZw/WHlrdawQ+7s1vqvy61fk
sVhryaoO2qa3ro0n++JtGmrjyaK3NuvXeJsNq34HK29dmAcUvZE7NJM7pN55
yVNlHxIrFOrX09y99j3V31cZrtuWx3q/qipQv7Y7Ft40jzULfel3mJnF78Ub
Tj1l9LnK/g623nLvz4Sxzch3pdP5Ru9yh0RdLUW4pzbt/Vfza9B7bzUJ7y3l
6yCWaywNyV8P63OZl7cuzh+8e0tSZayQWB/r5kMVr3fiOWuxL3gvvCkdqySW
+0q7uJaC40m8dcNb2/tKt+6tI/OAALnDKI3kDoHIvTqCcS5fBrX9HWLuKu8L
l3hfyXo8UwWFvIj69TjkDpreqF+XZHHcVOwttcxz++5tZC/N2HjE6Xyjb/Xr
l2/5SOm5Rp5QM/U0Zumbt1pE1liydtiXPpUuzh+8e0tSYawQWyu77vWO9qoY
jDnz9TRzF3PyJnWskuTPRa1+Peu1VB1PBpTr1332Zra/g4G3rswDit7IHZrL
HUbu5dTPctA/PQmF+nWeWJ90nfFnE/MPS6hf2x0Lb5rHmgX6HUoSeV/D0mff
c4f8z46+0+l0vtE3b9PGkdNYu/cZ8+sR6Ev9eiYiayx56Jfvg7cuzh+8e0tS
YawQ9Vaj/pxcI6viWltNe1OrX7c2xnM2ngwovzc/67VUHU/irRve1HKHqt66
Mg8IkDuM0li/wyuJPcvzOO95UMsdUnlg1TXYPM0buuqN+vU45A6a3vpWB61L
bN/OTT96CW8W3nJzieT7D07nG317b/7IoR8Pek8PPHQg27frq9n2Ky7Lzj+j
fL914GP7fmZ+TcgdplPcG27V7mfNr0mgD966OH/w7i1FlbFCk1mBl9xBtQ7a
5hjP23iy196Ex5NFb0r16757U+13qOOtK/OAojdyh2Zzh7Bm2u//9u9M/nnb
fmL+O6dQqF+PkFjbyqLf2hLq13bHwpvmsWaBfodyPPLJt5rP51Pe+lC/XiK3
lsvE7zWn842+5Q4pwjwkzD8uO/v06XMOB++44G0KkTWWKq9RPyfy18P6XObm
rYPzB+/eUpQdKzTZo+Bpjayue1M7VllUc4eZrqX4eBJv3fCmlDs0+exSmwcE
yB1GabTfocxaSw6+K1Oo7e+QmjeEntsqe8N5mjfUQSEvon49DrmDprfe1q8r
cPT5R8bWs6z6HinemvGWf6d64vzB6XyD+vU4R57Yky380e+5HmvibQpO11jq
TZ9KB+cP3r3FqDpWaLJH4f6PLnPhrg/eVI5V15tK/XrWa6k+ngwo1q/xptnv
MM9nl8I8oOiN3KHhfodXxvumx3CSP8VQqF/nSb2vErjg0fJjgJgzpdyB+rXd
sfCmeaxZoN9hOsU1mF911XfMr0kfc4d8f++yK+6Y/Pedzjf66K0sz9+7ZWKP
reW6Pb2pX9ckjDvz9Y/oWstG9MFbF+cP3r3FqDJWaHpPBi+ZkeL7122O8TyO
J/vorQvjSbx1w5tK7tDGs8vzPCBA7jBK07lDbM8rr/dwEbXcIRBbN204dizT
sx6yyOJ+L4GTTruy8j5leEtD/XoccgdNb9RBp/Dc7pH3O+rs+Yi32b3l37Mp
5cDpfIP35icT3nmKjWEG52D4Dj25wwQKayyF95G8rLEU6Iu3rs0fvHsbo8ZY
oYu5Q/74EnXQNsd4TseTAbn69QzXsivjyaI3ifo13gbI9Tu0+OzyOg8oeiN3
sMkdPv34r8x/7xgK9esik9a2Cvf4pLnDf37nH8f6n2Ydx1pA/druWHjTPNYs
0O8wmeJall6+7/qWO+TXkCjlwOl8g9xhOqn6p2WNBm8TKK6x5Gy8mT8363OZ
p7euzR+8eytSdazQ1X6HrntTOVZV1HKHWa5lV8aTeOuGN4Xcoe1nl8d5QIDc
YZSmc4eXb/nIxJ83+JlO95aW299hSCFTLHLJV/YMnlGB8Dvu2X7t1H3hvTqK
oZAXUb8eh9xB01vf6teVKIxZz9z2pPm16KO3/Dik9L93Ot+gfl2OX39zw/hY
xnBdT7yleeq6c0eOee5OP8/J3vWpdGj+4N3bCDXHCk3mDl7WyJKqg7Y5xnM8
ngzkz63L3ro0ngxI1a/xtoRUv4PRs8vbPKDojdyh+dzh6MNbJv48i/loWRTq
18nr/vwj2Q2nnjL12hfvxU+t+UD0f/P0TsU0qF/bHQtvmseaBfodEhTWDvGy
Bm/MW6froM/tXlrrM4xfSu+R6nS+0RtvM5J6F9jKYe/q12UpPCfLrunTJn3z
1pX5g3dvS9QcKzTd73DrypPHfhb9Ds17c3+smsjkRbNcy46NJ/HWDW+ucwfD
Z5e3eUCA3GGUpnOH2D1rPR8ti3LuEAj324MLl5aaM5z71/806DuKZYNh3Oll
/ciueKN+PQ65g6Y36qBx8j2lYe8yT+uG9Mbb4nh3uG5I5XpmZOziIX/nvfny
xNarJ3dw5s35GkuBPnrrwvzBu7chdccKwVF+3ZBZ7qGmM4xZyNfTrN3Mw5v3
YzXhzXP9uva17OB4sujNc/0ab6Oo9DtYP7s8zQOK3sgd5rDO0p3rpo5ZP7bv
Z+a/dwyF+nUZjhx6IXvyzq3ZtVdfnq1Zsya7/DOfG7Cw5abslge+t/S8So47
F58T1r9DFahf2x0Lb5rHmgX6HcYZ6ec13sOqjLeu1q/z/z6s6Xn7XbdnO3bs
KPXf7WvfOXbsFRu/OvZ3w3dom9eE3KECkTVjPOQOeDtBcY2l03f91Pw6FPFe
v56nN+X5g3dvg+s241ghtodinfWrk/4uurH18Uv++F7r122O8RTGkwGF3GGW
a9nF8STeuuHNa+7g4tnlaB4QIHcYxWJfaS89S0Vk93eoS64PLc+mH71kf24V
UMiLqF+PQ+6g6a0P9esq5N/5tJiz4+0EZcYfs/KaU7/UqmPq1xU4fHBsXzly
B0feCv331uvuTvMWsD4fF95iOJw/ePfWxFgh9m5f3bWRormDwXPbex20zTGe
yngykP/cdNFbF8eTAe/1a7zF8d7v4ObZ5WgeUPRG7jA9d6h6b037eQEvPUtF
FOrXTRLbU8zzuxUpqF/bHQtvmseaBfodTpDfz6jSGqLG3rpaBy0z/piVtteh
6IO3pgjr1BdroeseftbkmlC/jiCwxlIAb9PxOH/w7K2xsUJsLePlK6rvkVLM
AI9zwaPt14974c3ZsZrAc17UxLXs4ngSb93w5i138PTs8jQPCJA7jNJ0v8O0
n2exZ1VZ+pQ7HD14m7t3lbrsjfr1OOQOmt6ogx4nN/+3Hmfh7RixWljT0O/Q
vLfGKL7nVKceNwdvAWtHHrwV11g6c9uT5tcgBt4m43X+4NZbk2OFyLucgarv
c0YdGj0ve+HN07Eawm39uqFr2cXxZNGbq/o13ibitt/B27PL0Tyg6I3cofnc
Ibbn1cjPu+hG8985hUL9uhEW78kbTj1lzE2be843CfVru2PhTfNYs0C/w+ic
/aTTrjTbR7Out87Wrxe/2+75h/87WH+1KreuPHns2GFd1+LfG6xxTu7QrLeG
CO855dd1fctJ15nNgfBWILLG0jXPHDa/BjHy18P6XMy9RTx6nT949DaPsUJ+
384hVTO82N6bVv1HHuvXbY7xFMeTvfDWwfEk3rrhzUvu4PHZ5WkeECB3GKXR
3CHxHkYeix7OsvRlf4dYFhz6UDw8L+qgkBdRvx6H3EHTWy/q15PI7VlVZz/H
QBirXbZxZ6tjod57m0Zk/QoPa0JSv67v0LIWirfJbsL7gubvxU3x5ql+beat
gOf5gztvcxorRDODimtcFXuPAlb9R/lzcFEHbXOMJzqe7L23aTgdTwbc1a/x
Vgp3/Q6evE1waP1OBLnDKI3mDrF1J/Nj05qfy7ZQqF/PSmxPMk/P1TpQv7Y7
Ft40jzULfe53CO9RDLP12rWW4+/9hu9Dcod2vJUiMn6x3IsMb9Up1kQt36en
fj1Ksc7p8bttCN7ieJ8/ePI217FC5B2/KuOJ8Gy69W2vH/VouBZFb7wZHmse
eHpv3t21dDqexFs3vFnnDu685fA0DwiQO4zSZO4wbU01r2u5Dul67hB7RyZw
7k7fXrrgjfr1OOQOmt56WwfNzfXr7lMUxvh3X/y7g59x+q6f4q0Nb2VxOt/g
vfmS5N69GhzfeI9bcocckT1sreeCk8DbOArzBzfeWhgrPHvDyjEXpfOfxWdl
cW+H8Ly0ul5u6qBtjvHEx5O99VYWp+PJojfT+jXeKuGm38GjtyHO5gFFb+QO
DeYOU9ZYslo3sgoK9eu6/PqbG6JeVn7tMfNzmxWF+vXd553U2jyxzWPhTfNY
s6DQ79D4tSzUzYb7Z4axU1le/Ld/yTa/+/UzjdWa8ua1fm16DzidbyjkDk15
+8V378i2b9maLWy5qfL6uQevePuJ4xvvI9c3b9MIvfT5Y4R1gD2usTTETf3a
2NsQlfmDC29tjRUic+6yNZaxdwQXn5dbnrV7XvbKW9vHmiMucgev19LpeBJv
3fBmlju04K1L84AAucMoTeUOsbUih1h9J1alq/s7PLhw6biXxftxw4P/bn5u
TeA9LxrkurF54rafSB9rVrznDniL471+3fi1TOyjOQvLrrgDb/P2VhWn8w3v
9eumvEXfp14cp3x25/TaZnEcu3bvMy6uSx+8lUFpjSXvfSptPyeV5g/m3loe
K8TyoKk9D5FeB+u1CPL1tM5768h4MpA/B5P6tedr6XQ8GTCvX+OtFub9Di14
69o8oOiN3GF67lBm3a1U/+3w8zLMw7zjvX5dlbD+2jBTzPPa9/jYc74pvNev
i31fcx0rtnksvGkea0bc9zs0eC0H6yCvPLnRcVbAYj1s77mD+T3gdL7RF2+x
dUOWftaFV0XHLOH+3L9h9N+te/hZ+2vyiv/6dWv3m9gaSwG8ac4fLL1ZjRWK
md6kfRRj5+hhHYr8+bRdv27TW5fGkwHL9+bdX0un40m8dcNb27lDW966Ng8I
kDuMMsnxwPOUfoejD29J/3uhzCHQldzhyKEfZzv/5vyojzKZoRqeveX7yWJ8
/LbvNzbmb/NYTeA5d8BbGs910CavZRjL3P/RZY2Ps15z6pdMfPbFW22czjc8
vzffpLfUWi55LvnKnsH3ffju+MGOTSP111AP9dRX6zl3aPN+K66x9JaTrnO9
xlKgz96U5w9W3qzHCiNrS7z52DpmxWdhyJHGMoeLbnQxtrSqg7bpzfozgreW
r6XT8WTRW5v1a7zNhlW/Q5veujYPKHrre+4QxiGx92ZGSKz7GP7ttkvfn/x3
sXGPdzzXr6cR1ojat+ur2YYPvSPqMNyn3ud6dfFWv9576TnZ6tUXjPUyT2LZ
We/IVp1/duX1cts8Ft7wFvDW7zCva/mbzW9rfJwVsNj/r+jNQ/3a2z0Q69u8
4FHDvRKP4y13mJu3mj3cYR3PTft+YH5deuttCkprLA3Jn6/1ubThrSvzBytv
HsYKP7913di/P+vD67NNGzdmn1rzgbH/7X03fstF5tAXbx4+I01jlTsoXEuv
40m8dcNbm7lDq946Ng8I9D13CM+YMMbcs/3a6ZlDjnetuXowfvnCur/Izj9j
wv7RZ3zQ/TsxKRT3dyi+S7bkIcw7PrE5u+eH8/mMe8JbXvTkncf2wwl8fdvC
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
AAAAAKDb/P8ox4Qs
    "], {{0, 1456}, {1566, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->396.,
  ImageSizeRaw->{1566, 1456},
  PlotRange->{{0, 1566}, {0, 1456}}]], "Output",ExpressionUUID->"177345dd-\
18a0-4e92-8bc9-98da74882749"],

Cell[TextData[{
 StyleBox["37.",
  FontWeight->"Bold"],
 "\tFind an accurate approximation to the average temperature over the 12-",
 Cell[BoxData[
  FormBox["hr", TraditionalForm]],ExpressionUUID->
  "647a5f10-8f30-419a-88e8-7c7578d37bf9"],
 " period for Boulder. State your method."
}], "Problem",ExpressionUUID->"272c1228-df35-4b29-aca4-dcd66e453a7a"],

Cell[TextData[{
 StyleBox["38.",
  FontWeight->"Bold"],
 "\tFind an accurate approximation to the average temperature over the 12-",
 Cell[BoxData[
  FormBox["hr", TraditionalForm]],ExpressionUUID->
  "0b3cdbef-adae-4653-9d48-007c7dc7e6c0"],
 " period for San Francisco. State your method."
}], "Problem",ExpressionUUID->"dc4d80ab-adca-45d8-98b4-8d129c50b5a9"],

Cell[TextData[{
 StyleBox["39.",
  FontWeight->"Bold"],
 "\tFind an accurate approximation to the average temperature over the 12-",
 Cell[BoxData[
  FormBox["hr", TraditionalForm]],ExpressionUUID->
  "305ada2b-3bc6-4b0f-a9d3-bb6c8d2322af"],
 " period for Nantucket. State your method."
}], "Problem",ExpressionUUID->"033b7294-7883-4468-b7aa-6322b4e08d36"],

Cell[TextData[{
 StyleBox["40.",
  FontWeight->"Bold"],
 "\tFind an accurate approximation to the average temperature over the 12-",
 Cell[BoxData[
  FormBox["hr", TraditionalForm]],ExpressionUUID->
  "761b0b7b-c91d-4c54-a37d-e6f51e7be054"],
 " period for Duluth. State your method."
}], "Problem",ExpressionUUID->"70537611-ff9c-4cd0-9344-3a2bd89d7616"],

Cell[TextData[{
 StyleBox["41\[Dash]44. Nonuniform grids",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Use the indicated methods to solve the following problems with nonuniform \
grids."
}], "ExerciseDirectionsCell",ExpressionUUID->"1e3f6e57-5372-4f4f-a318-\
9a367bf27a90"],

Cell[TextData[{
 StyleBox["41.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "A curling iron is plugged into an outlet at time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "e3015212-6b0b-49d4-9355-596615958b58"],
 ". Its temperature ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "37a8ecb0-1d51-4a85-aea6-7a987330c144"],
 " in degrees Fahrenheit, assumed to be a continuous function that is \
strictly increasing and concave down on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "120"}], 
   TraditionalForm]],ExpressionUUID->"5f84f244-117c-4b8f-9032-e08b50d11abd"],
 ", is given at various times (in seconds) in the table. ",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         StyleBox[
          RowBox[{"t", " ", 
           RowBox[{"(", "seconds", ")"}]}],
          FontWeight->"Bold"], "0", "20", "45", "60", "90", "110", "120"},
        {
         StyleBox[
          RowBox[{
           RowBox[{"T", "(", "t", ")"}], " ", 
           RowBox[{"(", "\[VeryThinSpace]", "\[Degree]F", 
            StyleBox[")",
             FontSlant->Plain]}]}],
          FontWeight->"Bold"], "70", "130", "200", "239", "311", "355", 
         "375"}
       },
       GridBoxAlignment->{"Columns" -> {{"Left", {"Center"}}}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "9eb44f62-831d-4998-80d5-e966ed52d925"]
}], "Problem",ExpressionUUID->"34fd3655-851d-470d-bbef-4b0293af166c"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tApproximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "120"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "120"}]], 
     RowBox[{
      RowBox[{"T", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"fda271fc-1ab4-4b65-9fd1-de2d5c9c87e8"],
 " in three ways: using a left Riemann sum, a right Riemann sum, and the \
Trapezoid Rule. Interpret the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "120"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "120"}]], 
     RowBox[{
      RowBox[{"T", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"61dcc66d-cfd1-41fd-9902-4605e0109aa4"],
 " in the context of this problem."
}], "SubProblem",ExpressionUUID->"f4091800-a648-4f02-95dd-660d40e27b3c"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tWhich of the estimates in part (a) overestimate the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "120"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "120"}]], 
     RowBox[{
      RowBox[{"T", "(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"93a02d79-c260-44ed-b8a0-cc8f3ff052cd"],
 "? Which underestimate it? Justify your answers with a simple sketch of the \
sums you computed."
}], "SubProblem",ExpressionUUID->"4565ff7d-61b1-4d17-8bc6-8ade4d4dd9bf"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tEvaluate and interpret ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "120"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "120"}]], 
     RowBox[{
      RowBox[{"T", "'"}], 
      RowBox[{"(", "t", ")"}], " ", "d", "\[VeryThinSpace]", "t"}]}]}], 
   TraditionalForm]],ExpressionUUID->"f87f6772-90b2-4dd9-a442-4b695367ad0b"],
 " in the context of this problem."
}], "SubProblem",ExpressionUUID->"904edba2-2303-478b-bbc7-bd729b6d85ea"],

Cell[TextData[{
 StyleBox["42.",
  FontWeight->"Bold"],
 StyleBox["\tApproximating integrals  ",
  FontWeight->"Bold"],
 "The function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "bc85714b-3875-4133-a9cd-433b082fb9e5"],
 " is twice differentiable on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"c2074166-b2c7-4b5e-85c0-8ea265c2040e"],
 ". Values of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "95e1306c-4d35-47d3-a980-9083705a0042"],
 " at various points on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "20"}], "]"}], TraditionalForm]],ExpressionUUID->
  "6e704251-d2d1-484a-a852-4a0ad35c2edd"],
 " are given in the table. ",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         StyleBox["x",
          FontWeight->"Bold"], "0", "4", "7", "12", "14", "18", "20"},
        {
         StyleBox[
          RowBox[{"f", "(", "x", ")"}],
          FontWeight->"Bold"], "3", "0", 
         RowBox[{"-", "2"}], 
         RowBox[{"-", "1"}], "2", "4", "7"}
       },
       GridBoxAlignment->{"Columns" -> {{"Left", {"Center"}}}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "60efe8a9-4fcf-431f-92a7-0c90cb911655"]
}], "Problem",ExpressionUUID->"e1288696-1e8f-4e23-8ef1-479cd89ac940"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tApproximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "20"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"d3b3b2f9-a626-4ec8-b08e-230d067f07a3"],
 " in three ways: using a left Riemann sum, a right Riemann sum, and the \
Trapezoid Rule."
}], "SubProblem",ExpressionUUID->"141fb72e-6993-4641-9343-f428da709024"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tA scatterplot of the data in the table is provided in the figure. Use the \
scatterplot to illustrate each of the approximations in part (a) by sketching \
appropriate rectangles for the Riemann sums and by sketching trapezoids for \
the Trapezoid Rule approximation."
}], "SubProblem",ExpressionUUID->"e319dc47-4689-48ca-ac13-b91dc2efacd7"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tEvaluate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "4"}], 
     RowBox[{" ", "12"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"f", "'"}], 
        RowBox[{"(", "x", ")"}]}], "+", "2"}], ")"}], " ", "d", 
     "\[VeryThinSpace]", "x"}]}], TraditionalForm]],ExpressionUUID->
  "ef7fa369-ebdf-4f41-a5ee-2def8f528105"],
 "."
}], "SubProblem",ExpressionUUID->"3c4cb8c3-be28-4ec1-91dc-493867db3203"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAA8eRzAAAAiCefAwAAQDz5HAAAAOLJ5wAAABBPPgcAAIB48jkAAADEk88B
AAAgnnwOAAAA8eRzAAAAiCefAwAAQDz5HAAAAOLJ5wAAABBPPgcAAIB48jkA
AADEk88BAAAgnnwOAAAA8eRzAAAAiCefAwAAQDz5HAAAAOLJ5wAAABBPPgcA
AIB48jkAAADEk88BAAAgnnwOAAAA8eRzAAAAiCefAwAAQDz5HAAAAOLJ5wAA
ABBPPgcAAIB48jkAAADEk88BAAAgnnwOAAAA8eTzYjs1NpZGR4+XnDg5Ft4e
5iefs8nzF90W5m/y3Dl/xaPvLDZ9Z7HpO4tL3wnNJ58X27Zt26bO35bNd4S3
h/n53GWXTZ2//v7+8PZQv8HBQX1ngZX3nZs2bQpvD/Oj7yyuo8femjp3K1eu
DG8P87Nj+46zfefGjeHtgXYknxebMWaxlY8xD/e/FN4e6leez40xi0ffWWyX
X365fF5Q8nmxyefQfPJ5sW3dulX9vMDUgIpLPi82+bzY5PPienNoSN9ZYBV9
p3wOTSGfF5sxZrFV1M8nPovR7aF+8nmx6TuLTT4vLvm82NTPofnk82JTPy82
9fPiks+LTT4vNvm8uOTzYlM/h+aTz4vNGLPY1M+LSz4vNn1nscnnxSWfF5v6
OTSffF5s6ufFpn5eXMaYxSafF5t8Xlz6zmJTP4fmk8+LrdXGmLmm+PDOnaXr
Bvl6Qb7O+uzP9tsjcwbq58Wlfl5srdZ3Mj/yeXHJ58XW7vXzPC675dZb9SuE
ks+LrVXq57sffaz072eyLdU+ccEFad26daV9VaLfs1aifl5cxpjFJp8Xm3xe
XPrOYmv3+nmuKU0eXx6j9fb2qjGx5OTzYoseY+a8XT5OmkvO6fnaa/T71irU
z4tL/bzYovtOFkc+Ly75vNjavX6erf3K1TVrTPoalop8XmyR9fPcT33yoovq
zublcj8X/d61AvXz4jLGLDb5vNjk8+LSdxZbu9fPs1x7ypm81vh1sqY+Ono8
vJ20L/m82KLGmMPDw6Xv1YVk80m57dHvXzT18+JSPy82+bzY5PPiks+LrRPq
51n5d8Rs923qf2gG+bzYournq6+5ZlHZ3LjqNPXz4jLGLDb5vNjk8+LSdxZb
J9TPJ822rlK5/Lh83UJNnUaRz4stYoz5Ql9fQ7J5dlVPT/h7GEn9vLjUz4tN
Pi82+by45PNi65T6eTbf8W6uqX99zRp9EosmnxdbRP28UbVzuVT9vMiMMYtN
Pi82+by49J3F1kn18yzPYV/I2DZn9TxezuP0vCa82jrzIZ8XW8QYc6Y1MxYq
913R72MU9fPiUj8vNvm82OTz4pLPi62T6udZXm+pUePenLNy3n94587SmO/U
WOvv25bH6Cy9W269teJaT3R7mJ88P3zy/OXxSrNfb6HXEefqr6Lfxyjl69/n
9zbPgYhuE/XRdxZbed+Z/zu6PcxPdd8Z3R7qlzOdvrO4lnrc2QquKzvmRsr/
/vP7mcd+T+7dW7oWEJ3HqzXjuAEAAGChGj13dCa5ZpXvYc97uLXC3KDo9x0A
AADKlc/ZaaZ8z0fO5/k+glbI57m2z9Irn6+crw1Ft4f5qZ5n1OzXa9b89uj3
MUqt+e0UQ/X89uj2MD9L3XfSWOV9Zx7LRreH+lX3nXn9h+g2Ub/yvjOvoRPd
nqXQ6HWRy+X3M9/zkee3Hz32VngepzWUr3FkfbjiyffFTJ6/pVjjKK9l0ei+
KR9D9PsYpWJ9uP6XwttD/crX1rTGUfFU9J0dsMZRu7H3RXGVrw+Xr7NEt4f5
6bT12xu5Plyr1cZpXdZvL7byfjJf41uK12z4/modnEuNMYvL+u3FZv32YrN+
e3FZv73YOm399sXMG52sjR94+ictufYbrUv9vNjKa0BLlc+f37evofN6ot/D
SPJ5cRljFpt8XmzyeXHpO4utk+rnuW+Z77h27VeuLo2Ti7B3Gq1L/bzYosaY
VzVor4lXDj4X/h5Gsv95cZnfXmzyebHJ58UlnxdbJ9XPy8dos8n/jvN3iho5
jaJ+XmwR9fMsf78udi3LpWxvq1I/Ly5jzGKTz4tNPi8ufWexdUr9PO9vplZO
FPXzYoscY+b7xhe6ZsbN168Of+9agfp5cRljFpt8XmzyeXHpO4utE+rns60J
l7PSzrvVymku9fNii6qfT8rfs/nfzXyyeSev115N/by4rA9XbPJ5scnnxSWf
F1sn1M+r14TLWT2vu97p92SydNTPi60Vxph5Xs+uB3vnnO+ea+b5ezn6PWsl
6ufFJZ8XWyv0nSycfF5c8nmxtXv9/IW+vopclI93dPR4eLvoLOrnxRZdP682
dKi/lNVzn33LrbemB7bclnY/+lj608i77s+pQf28uIwxi00+Lzb5vLj0ncXW
7vXzvP5xrp/rV4ikfl5sxpjFpn5eXOrnxabvLDb5vLjk82Jr9/q5WhKtQP28
2Fqtfs78qJ8XlzFmscnnxSafF5e+s9javX4OrUD9vNiMMYtN/by41M+LTd9Z
bPJ5ccnnxdbu9XNoBernxaZ+Xmzq58VljFls8nmxyefFpe8sNvVzaD7182Iz
xiw29fPiUj8vNn1nscnnxSWfF5v6OTSf+nmxqZ8Xm/p5cRljFpt8XmzyeXHp
O4tN/RyaT/282Iwxi039vLjUz4tN31ls8nlxyefFpn5ORxofSe/+6/705N69
6YW+vtKfLx8+mt5r0uupnxfb6OjxNDw8XHLipD0hiqb8/EW3hfmbPHf5PEa3
hfnJe+joO4urvO+0H1LxTJ47333FU/7Z891H25vI5S//YGPqXnHeVF6ucG53
uu77T6VjDX5d9XMAAAA4Y3wg3Xvx8qmcfP7Hv5S2HxwoXZsa6t9T8bNzLrk9
vfh+415b/RwAAAA+LNXNH+1eVpG/D56qfsxAeujK/+Fsfl928/THLJD6OQAA
AHyYjnzviop57HcOznAf1dGnK+a+d93yVENeX/0cAACAjjfSV5m5V++cdR24
f9vQXZHl1748uug2qJ8DAADQ6apr52ue/+3szzl0X8Xj58rz9VA/BwAAoKON
D6S7PrKiYn32R4bneM6p/vTNj83zOXNQPwcAAKCjVdXCz7n47rn3ThsfSY9f
+dGK5/3l7oFFtUP9HAAAYAEm8lnec+vosbfmnNf8p5F3S497570T8e1mmlc2
XFg5V/36x+uaqz645crK5/U8uKg57urnAAAA9fn9scPpmd4taX3PX1fWWy+5
PR2u9ZzxgbTrulUVj736id+EHwfl52h6Hbzrvlfreu4Hz26seF7eK/2Z0YW3
Rf0cAABgDtX3J9cwbf3u47+svD95MvutemDR64jRQNX3kc8jn1fPi19sPlc/
BwAAmMNEPt9597b0xEu/Ks1R/+DVf049K6py920vVDx+pjy/2DnQNNjxX6Zr
l6+Y/VrLTGrk88WsEad+DgAAMH/V+3HlNcVKc9zHR9L+L3edzuLrd5Xy/MBD
303X9fSk//R3N6UfHzkZ3nbK1KifLzSfL3YfdPXzYjr1/kA68PRP0u5HHzvt
iX3p5cNHw9vF4r3z76+Wzu0DW25LN1+/OnUvW7uoOTI0Xv78vXLwufTk3r0+
fy3q1G9fTrue/W+L+h35/sJ8nqf6Wue5UOevXnlsrY7VWucur6E1dKi/1MdO
9rO5Xvn6yHj48bWbpejnlvLzHKI6m53bnfZMjNve2n711H7Yc64BTrwjj6Tu
FQvM2A3O5+rnxZL7uAdWXzzjPS95PsVdP38zvJ3Mz7v/uj/94MbV085nvr66
pfcZ/XqLyPPYblp1yYyfv65Lvpbuf+334e3sZLmP/K/rV9W/L0qt8/zav0yc
5+WznuftBxe3dwrNO38lI32lOsjKlStndOHnP58+9anTtZLuPcfCj73oGnHu
8u/40T/851nv7f3U6q3pySFrXy/WUvRzDfs8t7oaddebtt9Tmve+2PuQWTrj
v7hr4Rlb/bxjvbdvy6zfWQtaz4BQJwYOpHu+8OeV5+7za0vfiSdOjoW3j7Ne
v/erFdfGb37s56U9UvK1le0bKvfV+KvvH1CLW2K1xvULWXun4jzP1c/e8lT7
jjcLev4mTdat6pHHzz8dU5eNPnfv7Lmp4nf8zdZdpTrum0ND6df7fpTuuOIv
Kn5u7euFa3Y/1+jPc8urse53IzIaS2ykb9paAurnzKZ63f5cV922bVtpDnT1
v6VJG/r1CS1rfCD9S1Wmy5nvW0+/Ed82pqkY60+cp1r3jFV/RvOYJrrdnaC8
PjNtXDnP8eCh715R8/fMNXaNfg+KrJHnb8pE/1prreQZz+GdB8PfhyJq5Lk7
+fzmij52pnlI1XsMf+sN9+/OVzP7uaZ8ngui+h700jHXuXc2LaLB95+ve/WP
C26L+nkBlF3P6Vq/Pb34ftXPx0fSwA/XTO8X3E/Xmt4+MH3/hlXfTgfeVi9v
SVV97hf3/27Gx1aPHT/9sOstzfTuzmtPf34u+VraunVr+vtLqj9X9Y8HK+a1
TeSDjQ/tS2/87t00PDxcWhNi7z03zDh23XzoD+HvRRE18vyVe3/XzOeq2mLX
2O1UDT13Vetbz1oXnxjvPNq9rGMyX6M1s59r1ue5KGrNjXb9qGAavH67/c/b
2+vf+czpc7TludkfVzVfqeuz95p72WrO3BNZcZ5Wb3OeWtXEuPHei8/en3f+
spvTwVOzPL6qb8/98x73nTVNvreg71dl10uqvh/rHg+WjfnztbIZz/HbByr+
PbgW2iLnr+Jcns16FXsc0bLnrnzuUT33GpTX2t3bOw9N7uea8nkukon3rWI+
67ndrv0VTY298Baz//lixn/q5y3uzFyLvPbjnP3aRParuO6jb2gtNT7351xy
++k9OGhN1eOLOub49X3jwsrnPHQ4/jg6xULHg0ceqf/79Pgvp11jm/O6Dc09
f2Wmsp7vv8Kcu/J5wXV9BsteSz6fh6Xu5zotn1fN7chmm29HC6qxjkC9+bz6
Hsfzl9+wqHGB+nmLy/1bveOMqn9Xsl9rqc5t+bz+49H4djGzf9vQPe9+unpu
rc/hElrgeHByfYEr9hyp63Um53GaJ9Ea529KeX1Q7bww5656fY87B+e416sq
n/vsze99XrJ+rtPyeY29uaxtUTzTxn311Ec/LJvrPPm86x9fVDvUz9tIVX3W
nMvWUX1draT31+HtYhY1rqPWNa45U6Mo5/7kJbKQ8eCZTJevddd9HaVqjVc1
vMDzN9PzJ3Ledes3p60P/ri0b7bvwtY9d9Xras01Hq6ot5u7Up+Ifq6T8nnV
vXDlx+z+xYKpGsPVVWOpMV5c7NwJ9fM2UtWXWr+9RdRYDzKPKdRUW1yN/rau
dUJqnG+fxSWywPHgwEPfnd/eCVXnWA0v9vyVTHxe93+5a/p10DJXbrjXOpwt
eO4q1m4/Y8a1Nas+e/ZPqN+S93MdlM9rrd3u2m1BVd+LWs8c5iaMCdTP20f5
nAxz+1pH9RyxWccetI7q9RzOq/M+pBr53FyJJbJU48Hq7+JF3mdGA85fjXkr
M7l8027XR1vp3NXoa0vXUx56bdpjy+8Ty587+9Y30WL7uU7J52eOM2eyve8N
Tqujmz9XPBX33NRRC69eu78RGUz9vD2Uz5/+/PYX27MPLKIa64XkPnzXsffS
b555IN2+tmfa/UqfWr0xbT84EN/2TldjvtpC83nd63+yOEs1Hqxap18NL/78
Dd1zad35fLIftn5ca5y7rNZ17JItz53+PRPfpS+W1SDy+fvxEXtXNdVi+7lO
yOdltdbJ+XXVaw1Nq8dM/Ft+c2io/d6LdlI9T2eO/bAq5m41aG0p9fOCm/ic
9z9QuR5Vzn7h7eK0o09Py9/1yvuuqckFqrWO5/WPz/2dWqOOZ42YJbJE48Hq
9STq3h+Vpp2/P428WxrzDh3qTz//px+mezasnbPvldFb49xNemXDhbXP1cR4
t/xc+m5cGovu59o9n0+MESazePk1+NHHb6way1WupzB5LWrdq3+MPwZmVH3f
zap9R2s/turf+V/ubkx9Tf28uI699KP095dMnxOWqaG3huo5MuXyvZC7n9iX
nt+3L+2+Z0PNsWS+T/3F9+OPoyPVuJ+1rnuKTvUvbF48i7dE48HyfxdzXVcn
8PxNfIbznszbN1w583VQ5691zl1Z3pnJjGNkGm7R/Vw75fOJf5ujo8cr2j/4
wOnxXV6LueK9qVrHPY8bpu7DOPOe1HWtn3DVe0tMu1fh6NNNm0unfl48eY2P
njpqsvnfic9/rFr5PF/7r7lG0fFfpvtXLZv++EXu0cDCVV8HL52PufYzrzW/
Xf18aSzFeLBqfsSce0HREufv1G9frtm/Zt17jsUfe9E16txN5KCX7l4987jm
C7e7Zr0UGtHPtUs+n8hgU2PuiYx282M/n5q3mu/Jn7b+W/X6YhP+6vsHSjW1
nNutGVcsAz9cU3Eu/+P6O9PuRx9LP7ixsp/61D17G/rvW/28eF7+wca0ccuW
tGnjxrS+569nzeiLXd+fxamerzdnvzzRr9caQ9onPcjE+Zi21tsc+/O+t2/L
tPNX736zLFKzx4MT2eGZ68pqSq67FO78vbhpei293v1tWaJzN9I3e/1hog++
/7Xfxx9zu2pUP9cm+XymtdlnGwvMeK/GefZzKaJ8ffex71w3fZ7rxL+Bazds
T08OnWj4a6qfF1++7y6vNVarpm7uXqBa9y/Xsyd91XeaHBDr/V031Pxe/t5z
v6l43ImBA+m/rl9V8/vY+q1LpMnjwfI1Ws+5+G5rgBfs/JXUmENt/f3WOXej
Bx+YPZvrV5uuYf1cm+TzmmOACWue/21d72E5c3WKL9/nMKmZr6N+3kbePjC9
1nee+ZdhauXzeu5Dnnhe74VV64a7zhLq9Xu/WvO7tuvz/0da+5WrZ12HquLe
M5qrmePBsjmL1hUr4PkrV7UutfmmrXHu3tlz0/RrJhPfh4e+O//6JQvUyH6u
TfJ57i/u/OL/VNFf3PXzN+d8XsVcnYl/q/Pae56Op37eZmqsF25t4SALzecT
BrdUzsGsq+5OU+W6Tq09esu/s7//xKFp82fNnV1CTRwPTtVcJ8ZZ9nUq3vmr
Vt3HqsXGnrvybF5rf6Lc/9a6Dprru65dN05D+7l2yedn5Lmq862Znhoba3qd
lfakft5+/q1sj1D5PNaLVeei67YX6npe9b4m6jstYnwkDfXvSbse7E3btm1L
vb296YeP7UkvHz56Zo/e6evCuPd8CTVpPDi1Pox6XSHPXy3V8099Twaeu5G+
ivvzZryOfeSRmvfxmTPcGA3v59osn8NSUj9vP8YdraN6/fa656lXfa/J58Uw
7brKspvd17qUmjAeLF/D35pUxTt/9bxWXfsm0rRzV7H+Vo3aeYUaGd38ssVr
Sj8nn8OCqZ+3oapr0fJ5nGn5vN5xRI3vNXP4Wtz4QLr34sp1A9TOl1gd48E8
3/CFvr60Y/uO0h4YWZ4L8ezP9pd+Vv7Yk89vnvpd1txtjfPXjNeSzwPPXdV9
YPXMVy//XM7rujdzvp8N7efkc1gw9fM2NJHPy++TdV9doOo6+PIb6lsrrPp7
zfij5VXfz2p97wCzjAdPnBxLWzbfkT5xwQXT5sdOyj/LeX14eLjid60/MPM6
vSzN+Wvma7mHOfDcVeXzuq5hV10LdX2lMeet4f2cfA4Lpn7ehsrrAstulhEi
1aip1jOfoXqedL33rROjup6TuU85wAzjwVwvny2X18rpk//9xf2/q++1T/WX
9s9Y9+of49+HolrC8fzr3/nM2dexf2XcuavO56u+Pfe1kqrnyOcLdOSR5vZz
8jksmPp5+6mYU9376/D2dLppc9xveWrO55SPHbNvvWG96JY1McapXlf40w/b
RyVEjfFgXsOv3lxe7T+uv7O+1z2TF+yl1/jz15Tx/JmMUXqdc7vtlRd87p65
ruvsc+s5H9WZ3vyy+Sv73rr6id/U95z59nPyOSyY+nnry3s65PP0znsn5n58
2dz2cy65Xe28FVTdbzDn+jdVa4Cbe9m6Pnj1n6dl87/6/oHwdnWsaePBby84
m096eOfO0nz3WvK+OScGDqR7vvDn6rDNOH/1rtdx/JelPRUeemh3euKlX835
nPL1yOrd85ImnbsPp1/DnvP65sR3ZO+FZ+elmV82T0efnlqjKNcLcj82Ux+3
qH5uEf8moNOpn7e4svlHpXlc67fPvB70xHfW/auWTWVAe/S2jvK1USev9///
7d1fbJXlHQfwhMRlN3MJicTsgluMIboQ4iVLmHMXJjNpFqMubhkmzLmMMLKR
ZTqyxuEk0AxWXdJGI42CfxJwqEXIrEitERRccDGzDgVcUYRoqW6RYpNnPAda
eg79c9pzyu/0nM/FJ4H+OX3e87bnfb/n+77PM957J589vaLoa80fUJv+/eTq
ov2UuU851lj3GVxO7mmo7v4rqxcd6k/bl1xZfJy86vZx56Aevc623jV43w0b
fT3Dhf03UYdedDyd7P1uip3oKe4LZvB1zjx+MH368xpX8v7jsBVbXkvv9l+8
vuj4/sdHXnPzsU02rz19T6265L3k0oz+ade6oq8p+7ozLpvRPcLIvrzl/tRz
QjYLNfr9yQC6oZnZf5POJz1GPh92w6bOkTxw9rPD6fnfXZzD8drmTlkhet+N
Urou7Hjvsby/wzFy2k4fKHofZEZf56rwOwGNTH9e40r681KLFy8u+v/yh18s
yu3UltL8nd/7/8WfOwrX0Lbcs7Toc7rY2vH58d60f/eWtP62bxefqyy6K/3l
lSNyWZS+XYU52e+/pykslw9b2tUX/3zMNmXuvzk3/SStWbcurW3bO+bfWul8
HRM+1rm/2cf/0R+/7bNdlfbdaPl+odL8OL9pdWrZ/ETqaFuXfrWo+HPLd/TG
Pw+zRcl9czPyOjcDvxPQqPTntW/gtc5LstvofPf9n61Obdv26wJmidzjPPun
5Zfct5xde9OytGbTNu+x1Ioxurk5N9xaeE/l+X8eix9fozt9IG3d2FpYyzzP
A5fl+5DzGmnVzt8rV64c+Rmjf17+d/sj2831UeH+y/tt+DkdS16j/uEXDo39
OOf+To/sfjStavrOuMfJW1e1+JutxX03xr78V9fjafXSRWPuy8IxckuXY+RU
nXteX3/qsQn300TKep2bqd8JaED689nj7OBgYa644fk6sugxUYFzx8ui+VfO
uD66Fr3fuSO99PKe9GZvX3lzNBKukjnbx5PPJ6O3i8nl42Tp/Fb5Y9HjYhpG
HSMzx0igUejPAagnLS0tVc/nuZOP3i4AoP7pzwGoJ/I5ADBb6c8BqCd5vkXX
twMAs5H+HIB60ntwf9Xz+avd3eHbBQDUP/05APWmdO3JSlyzYIE5xgCAy0J/
DkC9ydejVyuf5zV9o7cHAGgM+nMA6k3uu6vRoefu3FqWAMDloj8HoB5V4z70
vV1d4dsBADQO/TkA9WpnZ+e0s/nTmzvCxw8ANBb9OQD1LPfo1y9cOKVr2s3X
DgBE0J8DUO/y/ehbN7ZOmNNzLs9zwX3VfzJ8vABAY9KfA9Aock7PfXrO6jmL
P7ruD6m9rb3wseixAQDozwEAACCe/hwAAADi6c8BAAAgnv4cAAAA4unPAQAA
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
AAAAAAAAAAAAAAAAAMDs8n+xpXYZ
    "], {{0, 852}, {1000, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{1000, 852},
  PlotRange->{{0, 1000}, {0, 852}}]], "Output",ExpressionUUID->"93d6b3cf-7dcf-\
46b2-8f4a-6c39051ff080"],

Cell[TextData[{
 StyleBox["43.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "A hot-air balloon is launched from an elevation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5400", " ", "ft"}], TraditionalForm]],ExpressionUUID->
  "42be018a-7658-4d14-a35f-ca5cddffa95c"],
 " above sea level. As it rises, the vertical velocity is computed using a \
device (called a ",
 StyleBox["variometer",
  FontSlant->"Italic"],
 ") that measures the change in atmospheric pressure. The vertical velocities \
at selected times are shown in the table (with units of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"ft", "/", "min"}], TraditionalForm]],ExpressionUUID->
  "5336b3f1-ffb9-4998-b56c-593f925c94ae"],
 ").\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         StyleBox[
          RowBox[{"t", " ", 
           RowBox[{"(", "min", ")"}]}],
          FontWeight->"Bold"], "0", "1", "1.5", "3", "3.5", "4", "5"},
        {
         StyleBox[
          RowBox[{"Velocity", " ", 
           RowBox[{"(", 
            RowBox[{"ft", "/", "min"}], 
            StyleBox[")",
             FontSlant->Plain]}]}],
          FontWeight->"Bold"], "0", "100", "120", "150", "110", "90", "80"}
       },
       GridBoxAlignment->{"Columns" -> {{"Left", {"Center"}}}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "2e91992b-a61b-4fc7-a405-cdc0bb1790b6"]
}], "Problem",ExpressionUUID->"78f62568-016c-4352-89e9-b07bb47d576c"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse the Trapezoid Rule to estimate the elevation of the balloon after \
five minutes. Remember that the balloon starts at an elevation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5400", " ", "ft"}], TraditionalForm]],ExpressionUUID->
  "945360f9-e088-48e1-8162-7b4f3271c340"],
 "."
}], "SubProblem",ExpressionUUID->"6853ffa5-de54-492e-9ddb-d39de48e80b1"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tUse a right Riemann sum to estimate the elevation of the balloon after \
five minutes."
}], "SubProblem",ExpressionUUID->"7416eba7-255b-40f6-b62b-f125394d24c5"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\t",
 "A polynomial that fits the data reasonably well is ",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"g", "(", "t", ")"}], "=", 
          RowBox[{
           RowBox[{"3.49", 
            SuperscriptBox["t", "3"]}], "-", 
           RowBox[{"43.21", 
            SuperscriptBox["t", "2"]}], "+", 
           RowBox[{"142.43", "t"}], "-", 
           RowBox[{"1.75", "."}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "93c4d137-1ead-4ef2-8541-e687c34e7412"],
 "\n\t",
 "Estimate the elevation of the balloon after five minutes using this \
polynomial."
}], "SubProblem",ExpressionUUID->"8f6450c4-4a77-4cd9-99ef-7f6887ebcd07"],

Cell[TextData[{
 StyleBox["44.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "A piece of wood paneling must be cut in the shape shown in the figure. The \
coordinates of several points on its curved surface are also shown (with \
units of inches). "
}], "Problem",ExpressionUUID->"0971577d-50dc-42ca-bdc1-c9f31e5c9fbe"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tEstimate the surface area of the paneling using the Trapezoid Rule."
}], "SubProblem",ExpressionUUID->"934a528f-51de-4ef4-9038-5db011659380"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tEstimate the surface area of the paneling using a left Riemann sum."
}], "SubProblem",ExpressionUUID->"7639595e-5572-40cd-b736-561c7edf8b17"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tCould two identical pieces be cut from a 9-in by 9-in piece of wood? \
Answer carefully."
}], "SubProblem",ExpressionUUID->"0700fbd8-874c-4d86-800a-5efc08baeb37"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
b9+1865pLs8tJEd/7pw52jk2rE0MYJj849arnGPzch291cd/k6z95OcBYDTJ
GlSucby8Z/fuPb37/RTxnEqsHKdqTfOq93Qhpqwbm7uOgShvp1zLoNh3bR/7
79tndY+XbX+HHMtx345va68D3C8CGCpTE9lVZ808fZ2beVG2+eeG17/1Srbu
jNOvf+fsdGPtBfl5ABg9EpPr7tVljqzUspb/FxLDy9j6hw7sqxUfaOuBG9Zq
qxMfhYitinFRqDgpRjtTrgNQp2a/7n0xnou41pUvvyfUMak6VlW/t9mH4u99
+1Ke2enWwSBHD2DYvPFY/3qdMh/+H960e+0dP30zadvJzwPA6JE4XRfPyzj8
EPFTHpe8dHhDdtuOJ7WxhW288dSDN/eeQcvcXllXK2Ss5xqru8ZIxRjs6cPf
zXY8cE9283VLs6uXXpKdN/PkfcOitdn4P51+/bPPbpruszr708R4gb7aepo+
rPMcZKAG4alt2cbLppx/G8ZTuD6L0T1biDFOZfPeh8nRAxgZr++8oT+m/9S6
gZi+PG/+Tx8/kbzd5OcBYLTItV53j37zXbcFi0ck7nr49it723337FV98aqr
lw5+s28c3DdPpI3BXPtD4nOJ3cv9fcZHL8ku/9KqbPX+v+7rt7w2z4ylt2Tb
Tpyw/mzbuNkUQ8YYg+ATa5bbEbt2nEsuvg3PAer0iWpfdefE/AXzldcKqaU5
OTmZ/HoGACGV43W55/jyfd/qrdf59S/+577frfzBz5O3V5CfB4DRIffxupr2
krPXzYt3deT1PdlNF56KSRetdYpJVdtaeeZMq3jeNdcZapy6bjsHn743++I5
vzvQ15d841vZX770I+32JNZa95n3TO/vTUdf9l6jLFT+N/Z7u6DYl/l3RVcP
oHgsbcZ/hJz7HpIpRy85odTXNAAI7Te/+nH2yMZlvfFzA88yP/G5bNW9O7Vj
8VMgPw8Ao2NsbEx7by71r3zimjLJpS869TdwxrINA3l503tV64w/fuMHB56V
b/ylW0xS3G7suebyOUde3p39+eV/MNDHH7rxvuzBinEKeUws23n0y3Omc6Gf
PZhujnwTYhyXpvPopnjcNlYvPh9IfUxyutqZ5OgBDLc3ete4XFvrhpCfB4DR
IPGSLpaXMbUh7vtf3PfV0/POFq2tjF2rHHrkusH2lvLzdeuLhX6frs1feUqf
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
N1jLrnwv77oOnMt6Xm0bH2Cz3zHiu/LxbfJ4q45XF+LsNvZxqjEZxbUT2mD/
q0e1dUK5PwUAPfLzABBfqLXmXWIE03xak1hrmNuO608dV7SBzTMLlzELMY6h
6Vip2lYey+ES/9dtf506CcV12XzGibg8A4hZRz7UuRTyuJQtv2aFdt2P1Ndw
AGgr8vMAEJdprfnFly32jkt87suLv0+5FlYorvsQY7577DbbtiXl+323HeJz
TfGy7faLtQtCfx/yNsR6ThZbsZ3WdSZPHhOfPt329GPaa6XUEk19LQeANiI/
DwDxmNaal59XrTXfd4+sGGvuGw/FGrceO0Yp54dD9IepzaHHV4fod1V7Q8Sg
XX2uU+eZgOn4ppjXYfuZqrECbVm/z4WqLbqxTPLsM/X1HADaiPw8AMSjW1dZ
fOWeO5PfT4e4/w4leL3vBuY61923to2fTqmcy+3SPpjOtZTPSeqs7RCa7blu
Gs8kbUx9TQeAtiE/DwBx1F1rvnh/3eYacCHZxj7R1kereAagizFDx0JNrQce
o+2+XI+p6lilfAbQpecPlX0baE0Jn++p1AbVjWmSe9bU13UAaBvy8wAQXtVa
8w8d2Bf0/jv0WthV667bfG55/qzL2PhQMabrHN7inPhy+1zWEcznD4fcB9tj
l3NZc0D1e9OzDdOc6lTzxIt9FPszbb8fMbXlOUzdc121HyvGrqcuHgBYIj8P
AOHJevI2a8239h498hhhVXzdVGzU5Txqk21XPeNx3UbVeeSy5kH+2lCxo8/8
c2OtBY9nLsMoxDVsz5FnqIsHAJbIzwNAWIcmJrT3oufOmeOU5w15T92WZwVt
jyW62maX7Zhy/qafN5mPjjanwmPNRtv2huqjYs475DldbF/V3JLy51aNtwlt
0cKF1MUDAAvk5wEgLJkb77LWvG9eMGbs6nOv3uTad6HXnWt6W1Z5aYt6frb9
0NZ1CV3b1MZ98JUfkxi5e9O2fePwOn3v833ddP9G6uIBgAXy8wAQjqk2s9S6
Tx1DhLrX1okRm9jO444Ro1ivt13aTv6+JvKYtnGW7bEJ0d4mP8tVk59ZPg90
x8p3HH/Ve6u21fQ8AJc1J0x18eTeNfW1HgDagvw8AIQh99W6WF7uS/e/erTx
2CVkTCKKeb8Q+eNUtdN826vjEiO6jnP3bVfqvjRRxZHlefK2/dzm/YzBJ69f
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
bpbHdthsswu16ULXe/Dt5ya/R6rj4rKu/fR2Ej+7rBqjI+uQ6K7pqf/eAEAs
5OcBjKLxfePa+75z58ypPc4+Jl0cECpnp8vDtpFujkHdvozSVkMsFHO+dWi+
51mofXOpdVCXbawbKs71HeOh2+9y+03bVtXUaMs4C+v+O9lm3XVd5lal/rsD
ADGQnwcwaqamprS1kIWsfeR7P+kbT6QaPxsznm17XKqMByLmbk3zjFOPn459
Lqji1PJzmCZiR9NnuM4FV20vxD709UukfHgbvpc21wef/V982WLldV1+nvpv
DwDEQH4ewKiRsfS6WF7G4Ke+z1WJnUeOFTcY4ydNjfXQsUbIdbhCfEaouDX2
fP0Qc0tc26dbnyDm8TUdD93na+u9BT5387Y1NY4k9DOVqnbbzLEvjheyad99
O76tvb5LzZTUf38AIDTy8wBGidQ51t3rSW28mPWXY9wPu7YtxnjkOmvfmdaT
U927+8z5LSs+N2iirn+dZyWm/XSpLeiyVnlb+TzriTlGpM6zit55UfP5VYx5
B65tca3XYNq+S38UX1Nug8yVOvvsDyiv8Zvu35j8bxAAhEZ+HsCokHH2Mjde
F89v3vuw1X1pVS3zvnXPI6zzHvoevgkx2lbeZtP7bzqWMcaO951XipinC3Pv
Gz0+hu9orHPFZ7yEcU57hGMZYhyF63Fo4nOKlq74gvIav2jhwuR/hwAgNPLz
AEZF8XpXtmTpFb37wEOv/ayx+/qu1Zqavj9PkOdt07OKEGMEnPrbYqyxz9j7
cv09l2cBqZ+lNGEgn+543lf1Sfl45X3vM8+hDc9wmv5emMizWd21XtqX+m8R
AIREfh7AKDh++HnjOPv9rx6tdf9YFU/p6mzl70m1dpVujLtqDfgU+c4uakNs
5Ut3XsRme/606Txroi22ufvYMX3V9993H2JuS1fzlHtdAMOG/DyAUXD+xy/Q
xvMyp9Llft3nPj5VjJe31RTDD7MQYwl8jnfKPm7b8Y21vlyX1vhLebyqxlK4
/ncT50WIba0Yu155vb9w3tzkf48AICTy8wCGnVzbdLG8rGHUlnvSnE2cEiuG
CbG9ci6vTc8STMer2O4UsaFrbbEmPifV/vkoHjfVeJiQz+faqsnvl+77XLc/
Qx0PWXdUd92Xz0j9dwkAQiE/D2CYyX2b7p5OaiA/ceyFVt1nm2Je11rwoe7P
m9LlOdku8WOvrztaa96m3XX3rYl52L7PbGqtqxDpmKu+syGfR5W3Vfd7qWtb
iDUhy6/R1T9du3p18r9NABAK+XkAw0zqGevi+du3bIhyf902VTF66py5zf2/
6lmG7t8513Wr67TP9T2xa4bFWJdQd1xijmXQ7YfPOWu7DprzmvOWa1i0oU5c
08cptZVrblBe+2Vufeq/TQAQCvl5AMPKNM5e4ny535O1im3vT33ya65jfNse
W6va20QuNdS2XGLPqn2yjWHq9lGoWMn2/LUdJ6E6Lm2LWev0nepZheu5aNsf
Nu10uf6kqkFn8/1q8hq358gz2r8BhyYmkv+NAoAQyM8DGEZyHy3j6XX3cnKf
F/qevAmme+E25Mhcx8xWrcEWs60uNbt96ntb5YM1MZrPXO+q2gB1zplUteaa
GF9R9/yRf7vm9H0+K/X+dkX5nJb6d6q/AWNjY8n/TgFACOTnAQwj0zj7m++6
zen+0Hac7bAr7m/oZwch4h6bNjVdS9z3NSE/L7VQYzhCPlNIHR/bXDu6cGy7
oJi3Kq9TmvrvFACEQH4ewLB5YPt2bSw/f8H87NBrP7O6f9bFfqljgbpc4oQ6
6067ftYw9bFw6bNirnfY5bGs6txqWwwbqj2hz+fy84CqdlbN8fd9Nun6uab+
0a2DIdtQnSv5z6u2LTVPdX8PxveNJ/97BQB1kZ8HMEyqxtk/dGBf8Ht+Vf4x
1v2x7ett86Gx1gZvQp32VcYhp2LrtvdBk2I/Y1E9z7B5JhJijrzrvoWO84ux
rE1b6hyL8nt1/x1i/FFbnsvJc1zG3AMYVuTnAQyTJUuv0Mbyq25dE+Te3DWP
GqqOnk8M0UQ82pb1pn233baYPVYMlGJ+SKi+baKGWtvOg94xS7yGZBOa6Hdd
bVR59pv6bxYA1EV+HsCw2LVrpzaWl5pIulr2rnzur4vrqhXjtTbGEG1m6q9Q
87Sbjp9MYyxct1Ues6zrj/LPbN5jozcuuoHnBr7fmxTfN5/PDFEH0PZY2p5n
+X6E+I7FPg7l7e9/9Shj7gEMLfLzAIbB5ORkr75Rk+Psh02IOMy0Jnndufhd
UzdmKcfY5f/P+7SJfSgetxixWMhzItUzsiY+t0vfn7Y9q9TVSF1+zYrkf78A
oA7y8wCGweeXLdPG8jJHsol7zuK2Us4bdd0n15ysLl5XxRptz+OV22/1ukC1
xELrSpyHeM9EfMZ0mM6bUHUFQo2dqeP2LRu0Y+6npqaS/w0DAF/k5wF0nYyX
1MXy586ZE2ycvQ3nufUN5ttMuXOfe3Tfe/7Q7XNtr47tOvS6n9l8blti/1Dn
XZ39qeov2+NYt/ak6nwrfrau1mW5JnuI46I7JnXWYqwz3j+0UNstPzu1OZ/l
uOn+TuzevSf53zEA8EV+HkCXyTj7c2bP1t6nbXv6sSj3pTHya76xgW08kzp/
q+qzYttTt69JqucCqesChqLLxTaZoy3Wjbed069rl8952VQeWjUHI9T2bM8j
07mla1PI/jHtd7ltiy9brPw7IeO7Uv8tAwBf5OcBdJmMpdfF8jIv0vY+L7/H
rLtOmeta2qr72mLtvOl/F+KRYjt9Y+C2xc62sYjPHHzf8fHWr/OsW6c7/rGP
U9vmNdfRlvXQVMfXJtaOdSxMNRZb990vXdtU7Q9Ve8NU554x9wC6ivw8gK4y
jbOXnH2Isc0vHd6Q3T0+bnXffeTl3dmOB+7pXVdvvuu2tz20I9tzxD9vVvf+
tU7erhiPPPXgzb39+co9d/ZqReve8+yzm7Lbdjzp9Dm6mMwlVmtqHHv5PLAd
59tE21Jock50W+sWxNR0HfjQ54Lt9av4DNO1jS7XSJl7pfubIeujpP6bBgA+
yM8D6CLJpZjG2W/e+7DTfaHqd7u+fnFvW++evcr4Ponj//zyP9C2RZzx0Uuy
rx04GPUeXTeft/jfPs8HXjr4zdP7MvOi7Jsn1H0mn3HfeWf1Xjdj6S3ZthMn
ouynbt/btN0m88Z1zyef99vsn+t264yJd2l3rLnhVdqWFx9VS5ZewZh7AEOF
/DyALjKNs1+64gvZodd+5n2/J/H5TReeiksXrTXGpYceuc4Yx5fNWPdU8vvZ
KuVaYCvPnKmM51Xk9es+857p1+bPMGxVxTx1Yk9V/tA2PlTFgKq2Fj8r1DFo
8r0hzx3f45SyDflxDV3nLle1vbbOhSie122oVV/nXLhzxxbG3AMYKuTnAXTN
oYkJbbwsa9DXqWcv4+sXzTwVey/bkI3/k/7+8Hsblwx8/n845w+zC+fNNcb0
c8ZfSn6fa7rfzck9++M3frC//Sdj9I2/rN7ud6798PQ98mcPHqv8rFCc59bX
rJdgqxj7uHxWivhO8uSmmv3WdecT5cFD9qGpPlydmvMp9qVN2w79WS7bk/Nb
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
fh4AxKxZs4LF86JcE091D1q8V5XfD8SUi9b2xsEX54Tr7ht1P3/kzhuy62+5
OVsxdn3v3rA4rlwl/0zT/bfP/XRxrXLT64rrwV/94nHt60KOt9f1ve29umrM
fKq4wpfreeUjdfxZtS9VsXX5uFa9PtU4hjqfqxqTY1uzoOo1KesfqM491fiA
lM+GVMftK/fcqbxOy9+r1H8zATTorVeydWe8fc8jNXv7f9/eeJ78PICmyH1U
yFheuNbFU8aUHnXZbD7n6cPfzf7vL3xU2/bPHkwTh0idPtv8uGs8XxV76Z6l
hLhft4mvQr3GJVZq27j54j7UycGmyPPHmI8e83gVt+XT303UFag6l0P0R+w1
Csr1Lop9bfNd3f/qUe11+tDERPK/nQCacXjVBafGLa7P/uHN8u/jxPMyD/XC
eXOz8z9+gff/F3Nl8u+622O9TgA6u3btDB7PSw1il3tT0UQ8L2QtJPn/Rzdf
o87Rl9aGc73P9rnHL85hn/GpdZX7feTl3cbx9rb369IGub++77yz+vogxFyH
qn1ucnuxYvf/n733jbnzqO5FJTfiilaKKkr9oR/6pXAr8K1bWcQgQmgPEAJJ
lEvrBkPjop4UWTgnKVHyBl1scPOnKQkQEiQSxwm4xIkhzR8SO5wkdkgFsWtD
lIQkRykFLjSIc6tT+XzAre6p0KXa12snz5vZs+fPWjNrzZpn7/XhJ/t9373n
mVlrnpn1f7njYuLIU3qj+7ce8hYk6dbDGnx65/jjQjvWYm4tjm/dX29pTEAv
dQrOPeec4DltMfcGw3Lg3795zaqcc9tPQ5+RyZ+HM5VbNq6F6fMGgyGG3bff
yn7mbN5yAU12ZPbPY/UQv9997LkUvWb4LLbOOHzm61e8fvW+2v7D/DM4+9UB
5uoMVMTvc0FDl+SsDT/A9VGW6FVSPcR7qXcwxn3Sei7uvuklnyWm73PPD2K9
QnfMhvXr1e9Og8EgjBNHV2Wd//3+H0U+J+OfN33eYDCMCRx96nyE+tblgNHn
OeVl0H3d+nMDoNb93hdfbCYXu3X9Ic4e4gcAEGsKMjP83/831tvP/5z/rFgO
r5u3j9HnqbnWnOhJfytBL/oYJ23ncrEdW0GsBmZvPm5O/mjaSnI0Hpu/Hmqx
xO4Zi7k3GBYZP5sc3LrmJdlo6x0JHV0ufx7uxBpArOowL6g7XTuePk8MBkOv
AJmIW5+/7MrLyTJoq3h7H8e+9tFi33SJ/uN/x6/rzwbCOnx9PtS/z0WvulgL
+PqpJi0wemMrP2rN2Jy6rx8fwzUeds5aNe84aQdw40pa9i8M0RtyR0NnHMjH
2venwWCQwc8eXFmVR77+Lz9PfLbfenhW395gMLQCxO9w65IlPehL9PnS/tou
QrnoLWPN53zjCvr8Vy554yztvXp4Ay1b+xvHFhM+xD9wj5vbyyEfOKfO5doE
auu0Y77n11pv7Rvm5KG73pK8HSkac669lD/YNW6/5srgGXfaxo3q96fBYODH
L360f7Uf0aVP/Wv289Z/3mAwGP5jmu/OpUdCDU8/1jvbK+ukDHnT2Wl9XirO
GvR5N3aduxZcdt4rb2SjfUqfT9UFk6xdQOFbKEa7lv6xuG/fThCaZ0v/O4VO
ixQfkeNB9Hud1GtzIeWXL6VRDpK5K6GxS5+Xirm3GFSDYdEw62/fsLJzWv8y
hh0f3TIn+0CP4uHvF110w+TY/9JZi+nzBoOhJThj7uH8KpHZ/LhzSs8012dI
9S/5ueih+vKScu8TT+yeXLdnFwnX796+arsesPb6O6a1DYfPXLvvERT9wPYy
p89fuAtNeyxtBv2rxL+b+2zp2NjPlfA/pXOX9ufjjknP0ZMDXDquhA0jFUvP
uRdy66qtlZibk+T51Yov4IsP3TcmIxsMi4ZZfb4WEK//yL/9QmUtFm9vMBha
A2rY1Z6bUHM4VIctJKv58qtfa/43f3Ul6ifH+E1D8nFITvRrxed6v4dk2WE+
NXoQpjb98Blq//kUQjUBKTRYBLSI529R+1wC7nuWivEo1euw88/xCGPL66Hm
QYs9wYHeagBATZbQnQO59dp3p8Fg4MTPJvedfmq1POrKR6bPGwyGZQGcNTVn
5ute91vTuMhSee3ZI5+eO4OhZru0jOnWl8f2iwO00AFjOj6nPj831kmc9ch3
m8npvek0NTnOva3FBcbWVJv/L7F+iu6toadr8xzDL6mzqmVdjbsPH4rePcB3
7fvTYDDw4ec/OTztvYTF9je9dvU8eNX6rZPb/+aByX333Tv9G/z/H3+usw6L
tzcYDC1RG28Psd97H3uwWi694ZRZvXLjwWfFZWE31nzNX96f/DzYHD503lum
cQive+cHJ//5bx+LfjaWp+3KwaXg1Och3+DNXu87zFjaegyHr7WFD1Kzll+o
Xnmv/BSjf4d59qtzC+wNKh8we7g3X3sp4NwN3T+QZ6R9hxoMBi38bK4env6c
XoL55w0GQyscP348KidhcM77/3Dy8AtPkmWzkNw6l0NPiPsGPzv0+tyy7cOT
7fsezdbSAxnX7VWXqwH37NO7guvP2QCGZ3HqdSU1+WN6gt+vD3LnqfUMW0Cr
xv7YoVFvP/ZZzn2EzTuv9dkPtfZrei34NgXsnErpFXpXSmpFcPDL51OIZyFe
hp4NNa5CZ/Cm8zep36MGg0EL/farM/+8wWBohXPPOScZQ+/XXRv88SBDQTxT
LF++RBb0dWaoTZfLxweAv/pcf54nddyLHvxG9DuuHgv1Um795/QzUn3lPnCk
jb6byp8PzR/Dg69f8fqqWHu3hoCv77TuNdeD3cEH1n/K0dO+x/XXzJmzRjqW
B73k1ksg9i5SYhi4a+9RPg/3TewMBru09l1qMBg0MO+f70WfN/+8wWBoAfBn
p3zv+587OtWnIR4f4ukB8DsxefOkXLln86ujeqrrd3L1pKA+P5ztW66e3HTw
4HQdMP5jT98/+asPv/WVv597VVSXd2VNP3agNI6AA7Xx9sO6YJzLTn1lHI5e
fSGdviVtqDpCa1BqmXP07At9v9bf3Ctyeil2X+Q+pxm/zpU/MEa7BZzhYGMO
ncGg62vfpwaDQQPmnzcYDMuLXP27W/Z9WUVm8+viveGBvPwaqtGewykb/mTq
vx/8/7k4gJm6eQUx9ynEYlxjeoXfY680f76E1j2Aqk9RfcA9zb+V7qidY63l
Hy/lf8wOMozn9ruoXZPfR2NMPOZ+v2J9WOD32neqwWDQQL/6vPnnDQaDJPbv
P5DUdVdWVlhlMKpP6YGPv9JrGNuHHmTdL9548eSsDWuj6zrlrWdPzvnk5ya3
fKssxgD0349sOXvaCxnqBgw6NcY/z6mnwFrv2P2ZySe+8NkpPn7LF9H94l24
sfZQE7bGN4/RFVzZ3t8TQ56y/7nWmMv3jczLzaum8k7y8z3QLMRfifVh9gnn
XmqtD3PwnnvO2jkJYGcOne3gtz9x4oT63WowGFpjtr/dq9b3o8+bf95gMEjh
+09/JxqzCIC8eEzOOkV2Tsl/sZ7wbhw4JT8dcsxBl4DeeQOgXh91TdH6cU4P
uRv++Fem8/vd2x8hjZH7GxdSz4BaBW5thBiNpefZU9yv1FrdcUv1Kw46Uda3
6hN29PKQ/aLn3IYekNPJ/b3h5kFQ9kptHD42PiL1d8z3a/Pr4RyP3V0HDx1U
v18NBkN7/Lf9X5r2pYNeF7vv/476fAaYf95gMEgAZKNULXvwO5fq8txwY8Gh
Lp72fGLzA9vIx57/gdhzJPSluT59jfP/e6ULG30DuhWHrzUVH9DKLuLGfmM+
m/vcGH3eFGDWVzOnEr7P7KNYjTyCPaG1TQ5szrG4Mu071mAwGAaYf95gMHAD
ZC7Q12O6/Lp166a+7BL5KqZb1fqMjtz5Sq7kb+99oqnMmIIbPwC6sOuz54Kk
vnr45k0zthJMrH5JfjPnGnruI+6jVr/p2VahQRO3bl+shh+1PwCnDkqpK8ix
j3vZH1rzuG5PuHco3GHa96zBYDAMMP+8wWDgBPTyeccZpydz5qF2fQs5Dts3
esBDn3z36hw3P0Lvc88hn/r+rJvOfsm3zVEPvrWc7db1W3PG1UXz98fH7Ida
PaZE/0rlwmughS+6tIY7l27GNU5qv5D0Z8TnQrUceuMrFtTzVRK5HgpYuvt7
CvKnYvcY9GLRvm8NBoMBYP55g8HABagRlOoxD4CcoxbyXUk+OcT/f+WSN67G
tn/kqe+jx+QG1JXf/qbXrurymD533HOtGQNyBIac+VJdvhbc+nTIL0upxcbZ
s60Xv6lhHqX7zv8epv9EKXwdnLOPA3Wf+2NRbRwYm4JPWwqPzjzrzOBdBvKz
9p1rMBgMAPPPGwwGLsRyDQdsv+bKYhmxFeZ0+kefqhqvVCYf6sG/4Ypb1P3y
IVk5ZUeA+ner9fh3Xp+NsU/RpUb/jdX7CtVda9mrrWWdN8rYNfPgzFGQsEXl
5ofR77j2SEmvgukaCr7TUw3IVnPlfpddv5cLiEPTvnMNBoMBYP55g8HAgZwu
v23l0qi8VOJjpuawUvHAbRevzj1WUz6FWp0E9I97v82bx1/r78N859jXPrpK
t/fecfCl372c8y+R+98CKX1fWl+SyOVvYTej+mix66TOvXUNvxI69crD3jDw
0l97iIaUvZfbG1DrJXavwVy0716DwWAw/7zBYKgBxNjndPkt2z6sLguWyMPf
PnbH5KINvx6seS8ZC8sp/2LiUDn903s2v3qy5m2XTD79Is8aesjN1VhHTXyw
BFJ7PDS30vW2rgkvSZtW50IuF7yWplSbkjY9SGuL0Mafa6xXC+SPad/BBoPB
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
x14o/WxrYN+xmR5kHec25Po0UD4fG6PGXoWJOeDeLyU1FynrabkWLUBdm9i9
DvTVlm8MBsNiwvzzhmUHxMBDjNxpGzfO3L3gT4daddTesaW58UNcPdUfn5LD
uPWelnoUphfZoqKn/HUJXvas59XyCbO2YH90hL6T8lFy8KUXaM1Lq35eag6l
tJCoSyhGE6HzgGsfUd+3WCyeydgGg0EK5p83LCtA74Y+Mlg9O2Vbr4mph75z
UK/+4Ree1JOnBPyzveoKPc+9RM9z/XjDZ7F+QWwus7s/3LFTuf9j5r/WHinV
J2M8cPdFrk5DaM9Q1hj6rIR+rNHLMUv/gM6MWXtp7YxSHZ3LB46l+6LYI6l0
u+zKy4N3/abzN6nLPQaDYTFh/nnDMiKW45YCxM2DL98dZ+g3VxJTP/SPL+k7
x13zW1tekoC2f587ZsKvW0/hay99pHJj5PJmuWheW+NOmj7cPEuuzaErNv+4
x7WFYkD82haL1N/CByamJ/V3znqfLfZFSW4Apf9Kzbuw97EHo/e+tuxjMBgW
E+afNywbYJ+XxMIPAJ0ees+U1KkHQF2cT3zhs5PDP/2emizUgzzW0/N6oF0M
tfphSh5dFP8ZJ62leg200o9a1T6g0qnlO0aJj8asYZj7s0/vmly775Fu1imF
5/9h7+Tctb8x2Xjw2Rl+SzwL25PxmR/sn+y76wtTmRWw48ZrJzvu3rfavxVD
9yee2D3Zfs/j4uuAux3s9TH5QVsGMhgMiwfzzxuWCRBjX6PL1wD0/9seuqdK
Tnj2yKez8uQAkH/A7nDH7s9Mrt+9fSr/fHbfnrk6ey38VSW1lF35bZj/dXt2
rcpvHPOhfCdGzy89+xyah8A/KXlSgl/D/zHfkdZjWtseQrECHDRdZB/xWOmS
27swr3uu+9PpOf7L67fP/f0bN5031d9+Z8PvTgE2WwrWb1g7xZoLd6FoRZ3/
M//9wGT7m167Ojd4lvv84fdQQ2a1jsza90xu/edXxtCy/cG5+3+9//9I3q1r
3nXh5K8PH0nSA+h2y5tf89Lnt1w92fvii0V7wR0vRROIrQ/NFeL5tOUgg8Gw
eDD/vGGZUJLfXgOQ8aDvLEfv+Ps+9d7pmK9a//nJwf8Z/9yRx26efOwdr0HL
P6i+RH5PbQb5OyY3gfx2wx//Ckl+kwSVnin577b3nroqT341wUMtjKF2Fmod
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
TRXuog3r11fLF1ft3KkuXxkMhvHA/POGseHY0aOTlZWVolg2LkAcAEaOS8l1
qVhPDnkyBdAf5+Q6Bv98C8z0hc/IXRidjEPHDNIzYB9J9Xzikie5dKTW9epL
eFXCu9R3MLq5Rv+H0hxqd4xafkrEGoTGDO1fv546dw0Iv0e7pG1zLtYeWYMt
ZWty6RiqL4LBmz9375xdNGWTKAXn++P3Oa2JqXjok++eoUdpPwCI2+OQMcCm
D7TSlrcMBsM4YP55wxgA9xrYnmrr2nHYAOCeLek134s8GZP5Nj/CuyYJcMpv
vdHTjc8Y5Emt2nXR2vMM9fV7hTSto7aciP0lVP8uNxYXQjwd6BOqv8cJjN3A
1+3d+YZ0/9znhx7tAyDfhlLbjkIPiVh7d+/CWXTdJR+cbN5yAdlPDD1GMLFe
oXW2tnNBnNYQE0WJcYjNc+izskqLt10SpUVsDLCHcMYKgt9CW/YyGAzjgPnn
Db1iqE0P/VxqdXiIyYf6NHDn7rjx2qrxIE+fU46JyZNTGSMgU6Zi0dGykJcv
mOqXHqvnW1Mju4Rmvvw2zNdfu6RcGRob6BCiJzW+Yk6eJNbk46LzsKbWz9RC
bR9tzvVi3iWM3aEFD2Lz4Kid748n+XmIrZnJlUHaCUt917FY+9qcodC64Xcw
7mNP3z/54o0XTz74e3m/PXfPNol9d891fzo377Ov/2LVeemf4SU1FGL95ksB
c9CWwwwGwzhg/nlDT+CqTQ/3IMTE3/bQPXN3Lsg3sNdLxgyNF5PxpOXJGszU
X/sNeqx9S78x+C+/dut8ncNa+S3HNwov5+i583HyeFh5MjZOLve5JpdZS0fv
wf9fMoex2TQw0OaDFHx/eSzXhasWOybWXnL/gG7/qYvelbzrcj3buBFbr/t7
OJ8eefCmZC4B2EdK85SANzecMjs2pe8KYNvKpaz6PMBi7g0GAwbmnzf0AK7a
9FAX9rP79qB8HXcfPoT2/cO43PXvBmDlyRoZaUYuOqmfzMgtJ58XilWkyJSp
ft8YX11oriC/PfrVHSzy21ycOGMdLiw9czTjkCdr9olEfnQJnX1e+bQO5U9j
92pJ/rVUjfpg3/qX55V6n2ro7OtHtbzCgNtfzw0/z8WtXcLd180/66l9NDjx
xBO7o2drSXwRJ/z9f9+n3ouXA06ev6H6fpgz4rb3nhq0cw/fzZ0dICdw6/P7
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
87LYffutSV39HWecHvw9+PO3rVw6jdM//NPvqcsI7v3kykjD/dOTXZv7no7V
/tKYaw+yJld97B7WIs2vHuG+s6F3WWI9qfMh9LceehiWwn0vcjndlHVy1ORu
1fPdf25L+kvSMrdGVvox1+iQQMq+1Ox9y/CAu38sdrxQD1HqXGJy4/ef/o66
bGswGPqC+eflAGduSpcHXR90dbiPoJ7pfffdO7XJ+vXrKXd/6V1VK+fFZI4x
6DclKKG1hM8+50/lyD12x/Jp0LLnVWwvhWjg9yf2ZeNWOmTNein89+ff8r2j
PgvzHnDULOOekx+74+9/7Jpq58m5f6j0KV2Dlr944EvN81vnd0vveam+tC35
WnKXSazL98dzj2859AaDAQvzz8sAcuZP27gxqstvvXgb+z0X+1tKHuGWVXqs
t5NCC1lNSjdJ0Se2Lim5movvVJ6X+EpSAPsal53CHadlDKzkc0ril8eCnvzH
XPMtvRdmPhfQn2LjtojXkq4Rj6VhrA+H+73UOczVJ0OKrjV7hooezpVe6vK5
uOzKy4PyI+Rwasu4BoOhL5h/Xgagr6di7Etj6EN3Wk4W0PY7uvMosa1L59JJ
xY1n/XWN5YfUfObqsHvyJhetW663J/g07FF2lEbPen7NGYB9P7D1FDnppFbX
PxAThKFT7BzS3h8cSPGVotNL2Tw1aRCqWyNxX5S8D9L3VuouuO2he4Iy5Lp1
69RlXIPB0BfMP88PiJuP6fJQy+TAM7q2eI1e9LX3Wiu6aNOACyW8pdYsiiEZ
N9CBHwo71x4Qy3XXmLtmfe3cmkv7AsbAeUZi+CTto62pyyU5b/c5EjkwJfUK
anzmUu9kix6zPc8px4teZRoMcjE0MVkS6Kot6xoMhn5g/nlewNkMOnvsDAYa
S9ybi6CLctVu5pbtJXvJxXJye4nB5MRY92hq/5TuB1+G4+C5T19/brXvAXVu
kn0oavhXQgdqn+9lQu25rb0//HW0RO0+amEDp8Sw9WAfra1L39vcYjWT77rz
TnV512Aw9APzz/PizLPOjOrym7dcwHr293B3ls5Heu6xutLaNvzSmmc90LT1
unt+DkXHz82pVUwx176X7BdNpR0Hv7Xem57f11q07CVQsx9L9GHtODKOdftw
bTKLaEv21wnoMeYh9LxY7ubKyoq6vGswGPqB+edlaOkDauNJ952bqbXagcwx
NnD64aVkAEpee4+97nLzCsUruJ8tqXdQ40Pn6g2giRi9cn5ribgEKcTq/Mc+
KzEH6frZSR4TcjFqaoT3Ag2bLOWZUvStsl34PUAS52iqX4o27zHrlBo79V5J
3be37PtyVKbUlnkNBkM/MP88D6BPfKo3HfShq70vuO+iVB23kP0fm6Pm6mOp
Gr+c6ymlWw29Q36MFv2IU3/nWH+udjUH7WoxZl2kp3X1GsfCiV7WIvG+cOUN
U203NWtpYescA+9aPNPlq/tuuz+X0lpjrZS9WPpOcNTI5cTDLzwZlSuPHz+u
LvsaDIY+YP75ekBvug3r10fPXKCx9D0ndQ/Hnt+67k+o/m0P6EFP6A3asSHU
fTLMF+u31JT3QnPM2Vk0bR+a74d0j+pc3UfOmuUcPvWcz16CB1z3BGX9qXcj
tubSPKjQnMaWJ1cCSu8T6vk6JtTcBZR7MiZf7t9/QF3+NRgMfcD88/VI9aY7
95xzsme11P3ec30f34fPOQctfbKkLhQn72vlpJq5hGiusf9ay4uxNYb2gER9
em3bluR7HHqGRh3rHvQvbT5r0ajmLEfb8zqnbQkka1zEIFHLlbV3Ywc5iKXn
F9ReCsmXV+3cqS7/GgyGPmD++TqketNBj1CIlaq9v559etfk2n2P0O+vl+/U
R7+6Y/KJR59jvT9L7+vcPfbMD/ZPaXrH7s9Mrt+9fbLjxmsnn923Z/KlZ3Hz
18bz/7B3cu7a35hsPPjsLA+PfLqIhwN692mE/BS5ev1Y2a9UpkvRTDI3nns8
bTlUKz56WWNfXH6PjQY92D6idCXa+ii50jlg/bilz9Q+I3yUnoEaPTgxeWyY
e0ryXQXZPCRjQv1lbRnYYDD0AfPPlyPXmw7qmNTUwIP7475PvXc61i+v3x4c
y8+Pc++eRx68afKh16ydznHNX96vcg9hceSxmycfe8drkjUI1rzrwslfHz4S
pVVpvn8Kz/z3A5Ptb3rtNN4NsH7D2tX/D/idDb87BdSngXn+5mv/dHLrP8/O
7ZY3v7S2NVuunux98cXgs5rVZh/qGiTkkxZzKekNPbeWgBxLrROYA2fMcM1z
enhPOenc2kZVy8eUXB97l3Jr7C1/yJ8X157zaxWmYi0GPtU8m7K3ereVYoCh
Vc+2Fsoac/uSe53Ue8p9n7G1OXNruvvwoahcBPme2rKwwWDQh/nny7Hp/E3R
MxZi8GvuG9AjB/12zftuiOqAIYAe/8HfWzurC9/waPL+8e+snIzJ5ecADDYL
LNZef8fk4P9sI4cdvjnO46jd4Yq9QRrv2fzqlz6z9j2Tjz3/g6r9gfmuLyMU
6csZH3vNviiBdv5lVU4Csv66JjRkfm5+ZvsDev5vaoyw+1mOuYf2Q6ntx/c3
ptbmjyHxbvVUc00CJT537fc/Vkd2jD1FKXEJEvn73L1IU+PFfEdQi1lbFjYY
DPow/3wZYvFPQx8Ravybe45DfD3EbE91wwt3TXXX2PdcuQ183L4ej9HntQBz
vvm/vIGsLw90KXmm7xMa+BTyFYFN5bJTw/SMAe7cjzz1/ejzv3LJG1/53KNP
icoUtXJLShYpkUmx8xmzH4kyd+34iOEZLfPRY+dicU0pgblr61uc4NRdKP0M
JaHRZyNm15TsSZfa21q1YSV83y3On5J593APuXOI+Y9MbjcY5PDv//K9qc3s
W//1gWku8MFDByfHfvJP6vMKwfzzdMAZm4qzx/amC+GpQ598RWc996rJVxO6
/ADQ4yGuPqn/JuLtY/es9P359StePzPHU9569uRj135+ct2eXVM704fOe0ty
TW94QFaePHLnhXQ7w/tuSNpfADM6fUL3D9ES4w+QpMnYwFWvnAoJuR/bqynk
f+ZeXyli/fFqeSG5tpiuMaY4bak4Ai60qr1P7ddS8uya3mscPGhpZ8GsAZuj
zs1ryvzHcG9uv+bKoMwBer62TGwwLBp+8aP9yRzgV63fOrn58I/U5+nC/PN0
QA2SGI8vvXpH8T0INdOGcfwc7Nh3hzjuNTuvn9zyraNTXRJsAm9em9fnNeV7
iEFYnd/a90wuevAb0c9dtOHXg7RO0agWbs47PGfH3fum9RBcQJ0+/2dM3T4Y
+6azT0XF3o8FmrGaNTJgbfx8zEempev14FuWqHM9NsR0qhrf8jL0QcvSlan/
nzak+7e7cXs1Z4JWDEYNfRb13AE/USwmUFsmNhgWCU9/fiveh3dStzrewZwB
5p8vp5cP0PMhDiN314YAsd2uj/0DR8rlEX+s6Z7LxNuXyj+ltZhXffOePhus
+ZeIy/fryHOty42T+KU9f89+N7s8glqHmDgMKbg+3B7jHjXHxUBCfqTmXUrI
ryG/GlW+782HXdMvGjt+C35LgLtfpUGXJ5qo3Q+x/vbYWgQlvWNT718tHzhy
REA2ismeMJ62bGwwLAL+2w1/TI/L3fm4+rwB5p/H4/tPfyfKT7CR3vvtJ8ru
vpN3zm3vPXXOlx6yDWDun6A+T4y3z93PsRrEmPvTzUvHxszDuKFcdtdOwSX7
uPwA37yUru3G8w819FrmTY8BnDyt0bv9/d9C92rlZ6L0qNSKua6Zs6a/roRm
mPyIVuui9lyIrZXrPaa+dy1y0GNrS43LlWciiRoff8s4ISr/cu8V1z4I5kJV
9maNxYbedeed6vKxwTB2/Ps3r5mJG4Ye03AOHj9+fJpH/7XPXh7VAa999t/U
52/+eRygJ8jb/uDtcV6epGPpPeDWUOeIIS/xz2PvZ0x989xnBt/3mjOuzuaa
DwDbxjdu3RyMdeG+c928h9/eW2ajwcC3UeRiDUrQg3wo3b98+H/oM7Eehslx
M74lSV946fdb14in8tT3tUnvy9I8fawfrYf3alhXSQx6rf+0dK9S/JScNE6N
5eeH1LxLw77TjrVIrd3v6dDTXCUgsb5W8Sg+77atXBqUP6GfkraMbDCMGz+b
3Hf6qau6yT/+PPy5n//k8LSH9Zwu8kd/ox53b/55HK7auTOqy597zjnkc3nA
8/+wd0b3TundWPkG659vLVMPeODjL/VpP+uR75LGo9opSu/c1b5yv/FSjb73
/8X2ycdv+eLkpoMHg/kAJXwf8I2bzpuxB376RXkZoeUewMDlU62/TMIvRBkT
+1ks3Vv2VpJ8zkzMPpK/Y4vhpvC0tF899XNU/zqWH7nnt+bd2PbKomCu56Ey
H2rPOH9f95aLD3V6QjIo9FTSlpENhlHjB3et+lQf+bdfpD974uhcvPBv/urK
5Nj/0l2D+efzgF4FqTj7h194svh8Pvip/zQzFqbeee7ekvDPc96z4Gd/4/uv
J8exg+3jXL/OH/O6oP6eX0vQx8Y/+/jkrw8fEXmea3fJ9YfS8hFIw9UxWvXE
Blqm4nL970n13uNca6uYV6mc9GH+GBpq6xGavKnt8e7qLJg4LG39hrsmJvVZ
WmNq9OkbC01zKN2zXOcx1/6Ecy4ml0BMsLasbDCMFf/jjg9N36Oz7/8R6fNu
bHXWDiAM88/nAbbP2BkKvdVyee6x893Xu7nqotXmz7fqCRuD6wN3/w/6PDXe
nrqGIXYAgzXvunDaU6Dqfnbq6Ps++tDcW/KkR3lxbHpbD/wJybKh97tHfmPR
Q11/Kn+09eJaxHSd0rxr7poA0vs5FocSmz/27Ir1uu8BErIBhk+aeS+5XC5O
emB4vmH9+qA8An2xtWVlg2GceCnWHnzssTj7OZw4OuNf7EGfN/98Gqk4e+j7
WXNH+f3NS2vW+c8q8c9j+ytpIrSuzY+8EhuRqkuEkYtC42Pw5s/dG4zDx/YL
d2M0AFBPHyPDcepjlO/Geppje53X1NPnjmfHoEV+6VzcaoD/FD94bP2tc2Vr
+wH2MhdNGnHkupfohe5eSb13tXQtqXExpn2Qoh0m/kgqFqhmDJc/sfOcum+5
+eKOV3PuUW0rfl+Qkrs89azNWy4IyiEgq2rLywbDWPGje6+ffOLR5/Df8WPu
175HXZ83/3wcqTj7devWVcXZw1n9mdNfMzNmLp+cO3++N+TW58eml9aej8lX
QLfrLvng9L48awNNr1/zvhvQtf18HPvaR2fHQtYJLKlN2KPPR3LPLMp8elsn
J9w9mbPX+J/L6QwldIu9I8Oz3L/1+C4tUgxLj3EXWGDqqFPjFyifzb1TEv0k
UnxcpH2piR03XhuUQaCOk7bMbDAsDTx93vLn+0Yqzn737bdWnclzueBeH/aa
ezSnz7fy45Z+N/a5mdpxv/FSz0fJexPkj8eevn+y+8adkw/+Xl6/H3rOUeHb
KaCOQmgvlCAmy7XUQ0J9zKv4UjBvztxT6ndj68/V3JaaT4qupfqThL2hdSxB
ykfWYw3wEpprrqN2j6T0QQ47pcSZUDIfCR6VnFmp+ff4PtTQJNaPlwuxmi0l
37v78KGg/AFyg7bMbDAsDU7q8zO1zDvoQW/++TBK4+xzd8Hwt6FnWyhvuhbU
ePsx+EBArrjhlNnYltq+fhh+uQDd/q8+/NakTh/rOZfz1fi1Mt/wQPqu1+QZ
ll7YHofUcaW+32rMsWKgRW0OLVccbA1a1wgh9/cLyPpjOKdbAduPsBeE6qZz
jV27j0PvQm8xJ7n5rs5bIF5HCjU8A909JH9ATKm27GwwLANmetWfxKVP/av6
nMw/Pw/JevYD/JzpV63fSoodT9mTsfH2Unc2No+acrf6Mem/tu+Y2j38xBO7
o3n2JTkAQAe3R17O/hLcD4X9hFOf9fsUc/CxR3DX0Nfq6cwZBzF2nrZca6iG
BHffRcpYvev9HPs0RuPYmKU8js2VO+aoFLU01N4LqHki/Ni1ex77/Ry9W52b
EFsfixvVlp8NhmXAwa1rXpHXf//z1b3nT5w4MdXBawC+ZtfvXDueNo058I4z
Ti+Ks6fUkpnT3869ai5nuvRuSPnnJeUPqbvM980PueolfQU453TT2acG98gH
juTp4Pfj9sei7gcJfVRb3ovJcRjZC7OG0pp8WJ60QIlPza/v1Kv+R6EtNa9e
C1r0xtYHr/1cji8DDaT2ARUldf5Cv1c/KzvSzTH8wpxBwzjYmhpjoR9Hvthl
V14elD3+/MIL1eVng2Hh8XKv+gGf+b9/Xj0m9JvM5fS2BtgY1GldAbBJxNaW
i7PH3GvD3XPbez39DVkDDQNsvH2pDtjaNwH96lfXEslL0Opp69c0BEB9esye
cOk3tx9+//Ns+6E3YHjFpfOUyHo19gxUr/QO/HpSkDobauofSNinqOcNpXZC
zXN70euo62t5fvdir/TX3bInW682vNaQtuXGZEDqHvBx20P3BGVU6GWnLUMb
DIuOGd/8Z77NMiacRdr6+yLp83CWxtbFFWe/eh4X6vMYvxpXfXtNn9dwr/l1
A93+dBz3bclnXTx75NNze8Wvi4eRwWd60J/EL6/fno3bL60vKO3n1/ZZY9eR
658d+n2pDuDHZEf3ArZHdeBzWjYCrnNBat+MwXYSoiEmZyn0Xc315vaCxNwo
Yy66LU1y/NQ9Innmc9lderLjVK/l5HsWk1VhH2jL0gbDouL/++7Nq+/aq9Z/
Ht+vPgPQnaGeHdRug38x/3f/Bbh5OPB/yKf3P4v9P0Cb1jWI5SQBrtuzi/V+
ourzlLuaWg+Ps/Y3653lxaG//e7DReNg8/lL8ZVL3lgda/HQJ989u+cY6yPW
IiT/tt4jNTpjL/I7OU4gsWZKL3pucNR2a42SPdDyXHT5SZmrpp+1d90Y9h2W
PjW8bdkfvpTnWu+gzwOOejpUvzilt7s07zgR67903333qsvSBsNC4hc/Ws39
hVpZX/+X+jh7Trh13Bcl/70EkBcf0+VBzz/80++RzvmUvI3R52vuD6o+z4WY
zBCLJ3Dz40LfdWsGluryJaDS3u9VEMp9z8HvxddSn9eWVXzej6W2N6e/J/R+
5H7GgqP3M/b7ub3UIx8XEWw9DBX87QZ9vnOPBeCsDzlmlNA19B3IlQ/JqyDT
a8vTBsMi4jsrb1yVz2/7qf58fFh9+5fyFmL9P+D3B54pu4dSd5BkvjQm3l46
J692/CN3XtjUFlFz7/ox9yX+eV+fB9sfRZ/X1slzc+pZz6PQLjTPFjqNRM8/
/7ODL03S7+qOnerZvShxsT3sixRf/Xr8Kb5z8YXjrOo1pkyc3wS7HCXmY8z0
K517iia15yianxXvVKzW05lnnakuUxsMi4b/cceHVnVCjvp3ErD+8/8RtXMC
tl9zJfvdAr7+kH+e636DnHMN/7x7R9V8zu1Nh5l3qu5g7vkUPTLGW99+krLN
hMaA/TAXs/++G2ZiQsYsb0khF/dBxRj0x0X3h8Z0Tu15YfiisX9K9kPpPJvY
rRJ9WFudgSFexnS0YK1757Ox2JhSPa7mXQg9i5Omqdo+i3ZuxfYDVqYoya1x
Ab19wM8Uk1u1ZWqDYZHwswdXVt+ta5/9N/X5xLDs/vmDhw5Gz0ToWydyFxDz
56l3Llc9PA24seu1c26lB/j2k5Le8dj90CIPEuP7Cvn1OPq/hWjTqkaf+5wS
OZcy17HZZ1xfn2rONqKmQM7/z0WH2N7RppEI3ZF93n1QedCqLoRWvFAsl3um
f6mTcz7Ms2dbY097vdRO0sM+LbnnYnGlx44eVZetDYZFwP/7rRtW36tLn/pX
9fmksMz+eagnCP09Yvr83YcPsZ3/Ptzc8NKca3ce7p1aqs9zxFNS7iT/s27c
Orf9AVtfvGQ8P97ez/XH7JU5ff7CXdH9MNAtxy9MXro0UnupJzmQyvMcQnzR
1OE1es1r9MOo+a7vS6XSLLTX/TqcoTEx9jNO/lH1BsozNXqhYOc8NhsaFqF1
per6UMfH9IrXWqcLiTyh1uumyl6xGs5QD0pbvjYYxg63lv1lf/9T9fnksMz+
+ZWVlaguv23lUtE7yM0Pn+ZL/+pKtj8ZFtR6eCmfAcZ3wAHQid/8cl866PcW
qz8Y/O7TuybveffWyd4XXxS/b0Nw8wOgTsb2H9L2RqiPPcXHn/KNh34O+dVb
x0Ni5JaW/Zi1UbPWHnp9h/xVkj5O6p6di4Fm9K0tWixxyTpb+Y+zNkzn99z7
3D87tfkxRuTyE0I/x/ZA7lk172XN2VXzXep9fNmVlwflV8gh1ZavDYZR4wd3
rb5Pf/L1F3HfOXF0ctmpayc7v//vKnNeVv98qtc8+Owp+iTmDvLP7Lm+5Sf1
wI89/4PkvZe639yfe423j60J9PGhxzz4pSnjDL3boX4c2ENqauOU2OB9XZxq
i4jx651/97w6vzRQ25culgPA+RyAdj2u1PNa6Rux50jo8an1LptuJVnDXKK2
mMsnd89QztzcZyTtkrX1MscECT80JdcJ+3wsn3s7G2K0oOxbd4xb9n05KsNq
y9gGw1jxix/tX/UvonX5//jZ5Ov/5/821UUe+bdfqMx7Wf3zUAM0ps/DGdni
3gQ7jvvcjQefLRrLvwty+jxWPnniid2TD533lund8Lp3fnCy9Y4D7HRwc89B
F6bkHMA6b/jjX8n6s8F//pEtZ0/Oef8fTteQ0rcHPQ9LIzffH3LZXJsMhQbD
2THYdnK17XuTZ0rlaGk9WCqvf1GA1YFq+MTV604LmvPCPluiL4Fmv3QfmJoF
1DnVno3+83PjSe4jbNwAZxw+Jv5dar1YnkgiR7MW58bjP34+KsfC/LTlbINh
bPj5Tw6/4l88qVdAXvbx48ejgL/Dd1Z1kc98W23uy+ifv+vOO6Nn4OYtFxSd
z7GY9dRZPJdDz1SDnqP/PPjMQ/QBnZvrLoJ5ujaNNTuvn1x69Y5pDNkA6C/g
/gzYceO1ky9c82er71wqxt3Pa4jFKoBe7urUG1Z2Tr707HO0+SNoHNJtZuL1
kTEKVHDJOVx5sZxyZc9YzSf2/E45PxSnjz0Y42o2DjLNqJ9pZQdI9f2T5K9W
r3MpnW0R3wXtmh3a68/NY7jPuGOaWMfK3LmnbdwYlNX27z+gLmsbDKPCiaNz
uhMVmr3sls0/D/aUdevWBfkA/tWHX3iy2T3j68x+jzLseR4a99y1s2uj9kQ/
fPOm6H79wJF8DlwOU9/6KXXvTU7/HWLx/c//8vrtc7Tw+8UNOPv6L65+xpWN
wKc+o8tX5DN8/YrXzzzzrEe+O/N3DZkspguk6nj5KK0R7z/H/Zvlrgrz3amP
wQ3XJ8qxpzG90kN/k3ifaseU8K9LrXes719uX7fspSHBF0lI1PHAIlXnpaQu
fej3XDFKpXHzlLn6iPVbvmrnTnV522AYDU7q8rU6yZo/+pvJccU1LJt/PlUD
D2wbEvdc6nt7Nr/6lTkg4qxzvbaf+cH+yU1nnzq3NrBVbH4Eb6vwYwdy/m0K
QJf367/VwNd/B8T0+RCdH/h42MY9Xe/bLpn89eEjUxvAkz98fPK1W1+5P6l0
9fnn+/hftX4rW13EUmD2dAuZvrRHVul6XRtGbf20McnqSR4k7HTaNQRSWERf
a8/gql2pXUNdAlI2yNi7WVLLoJZvkjzmtrHU1GLtERCvGJJboPa9trxtMIwC
v/gRi3/xvMf/H9V1LJN/Hnpyxvjwtj94e9FZWltP16+L94YH6PHMEK+9ZduH
Jx/8Pdx+hDxysOmCjhob080Ln9NvX44rT9aoivj54Dt+b7Ya5PoC+L7v6fwD
/vzUemN4wxW3JGvqp+KcOfnfEyg5Ka2eywHJuWNiW7T7f0nTllPfodajbAkO
PmrHqfQSR02lGfazJb7oXH1KzHNj8SupuBbquVSSFyhBYwqtudFjjYmaZx94
5ptB+QR8Ddoyt8EwDvxs8p19X5rmYkOvx9S/sb/d/jcPTP7x57rrWCb//DvO
OD2qm+197EG189r1Dcdi7lP49rE7pnnmn/jCZ+cAtlv33wEfu/bz2f5uoGtC
HTmwdYANYLVGRMQ/j7W5P/LgTcG5lmD7PY8nnwVz+qsPv3WVvmvP2xldN8Q2
7PjoltnadB5OeevZkw/cuLu6N94gU7j2BsgDANvEsZ/8UxM5oHSPS8rznPGK
Y0Ts/XF/n+thnqKLdK9qqfXX7IUan2+sJjvXWqn6PUdMuPvM2NpC6+yph0PJ
52titWvtMGPNUUitx3Kf8KCcQdiz3EVMXoHva8vdBoOhDZbFPw/2k9iZt/Xi
bejzlQrMd/2Y6yE/XVNf8XVKuIuGOP7f3vuE+v1IBdhIoBYs9rMgv4Hd2wX2
+1hAnQPXdhCqS7BIOmtr2U8qVmCQ7f1+1Dk9ayy8rOETZ956Kqeck5YhXS21
P7D91Up179DaMHm/WDtdrg6jxJ4q0VFK6BTiQe04WJ6ngOmhWQKusSgxBC32
i/TewNJWan0leyG1pli/JpB7tWVvg8HQBsvgn0/VwIPf19bAo+SBxc5vtzYe
+Ohb3FcUDHHhEMMVqiWfu/d6jxemxkRgfOi5ntlunYPS3gYuXYfnlfj9WqEn
+Q8rS2nq4bV8pM49J8NSZFBuumnmVMRo4srli5TzXQvO86eEvmOwneVq4WC+
Q1l3UX1SIh+5erjF7jD/+zX7rPRs5LDLcN+DsbpQ4KvSlr8NBkMbLIN/PlUD
D9ZMva847Lahu8TtrabhA0/1PRriB2pr4RlewjduOm/GfoPtPeD6hrXX0AoS
snltnWQO+DyU9AdJzbt2zpT4/1qMQccbO7j6mGvUacOglzjzVuc/d20LUd4I
2bBj5xuHbs913t+y78tB+RZyTLXlb4PB0AaL7p+H+z+my8NZFzsfufoPUb/3
0CffvTo/St10sTvS8SMP+d21Y7aUyXrJ+XR/79beg9r5IZpyx6Tm/Fuhv3P4
HWPrSI0tzTNtncCney9jSsW19+i7bjmnnvZb7dxCPkqpWPIxILWHWuUVxPik
/c5R51ATC8C13lqbgIQ9FvNuQYxpTM49ceKEuhxuMBjksej+eejZQa2Bp30H
Dr3QIbb9I48+lfy8pKwIPdYv2vDrq7r8rf+c/w5lPhxzl1y/RF06N2d+zRlX
s/amK5GlsTIQxk7Rs97SCph4UC46+WOHeBnK8R/2yWpvvo76N5Xqg36cAEUu
17Yv+nOl1GTAwI8pC9GYqxd2ijcU3mrFqcRqY2jOSQLUmqica4/ta+wek7AZ
Sdg+OHxCOR64z4jllEJfJ2053GAwyGOR/fP33XdvVJeHfm2cZ3esn0wJIJd7
qHnv6/QYuahUp/a/N9Reh75sLXui19KwV70SdPnVHgFX7EXF2HPn55b0YgrO
q4P8/FCdbj/vUjK3mbLPMPXMMOP2QHcK/PXFeEHRmUL6ITd/pWugpuixSHpj
SHdr6TdueRf04BPXXD/G5juAe4+XjqdxnkrxZNP5m6I5pdqyuMFgkMei+uch
xmjD+vXB8w105FANPA09MPXMB267eHXOb/7cvTN3F9WnVhSz98PHJ1969rnm
91Ju/qXPTfkkansj5b5/7GsfXeXle+84KEKvXvQAaq6JVqxuqv53jb83tsZS
Orrz6Elf0LabtdozEuvkyjPvjc+tzqDaM4OrDk4LmmoBq59TeVBT0x373szF
pDTS20v4yrUXoGdxSN7dvOUCdXncYDDIY1H987CWmG8ezr2a89b/GSsTlJzb
0FseYt7XXLhL7d4pkXnGXveZs98N/Ltn86unufIp+8gYUcJfzPsjGf+riV5s
Lr0BS5fW9Kuty9bCVoWJU6kZU5KnJbn3EjUYW4AzF41qT+4FGN5Jvi9uzkns
DpGQWbjWk+LzbQ/dE+3hpC2PGwwGeSyifx7OYvDBh8620zZuFMmLJp3tSFnJ
nWeon9rYdIMWNvJe87mBl9ga9k14USETt9SlJftJ9LzuEvqMqRZZaY0v7XmX
rmNs/NHY6+47zpHLMiZEe8sw3ZkwDleten+MMdpWqHMrnSd1b9bcdcDjmA8L
5qEtlxsMBlkson8eem7GzjXo69HqXhmrf7qWFmOzM5TQRaJ+UM+yTQ209j9X
XsaAsehjnPR2a+Zhfam+DtKyHkYsVzd3Dkvp2z2chWM7V3J8SNGUy7ZVQ7Mx
3PtR3zTBfkDd2z28CxL8ptj0pjQWtL+Cvyok9+7ff0BdLjcYDLJYNP/895/+
TlSXh3oh2veG5B3fIgYvN2aPOk8JXXqWgQdfi/uz9pxa7geOXHYu2TIWPyBZ
u9DtQVg7Vu5vMYR0e2l5nWN8Tb9vav6YczXUH45j/a7ftmcdtITWOTpJ100p
ge9Hl+YJdy0BCZqE5sd9pkkgdUaHeo2gxkzYS7ds+3BQ9r1q50512dxgMMhi
0fzzqf50dx8+VHQe+31OfdsqtZ5xz/dPy/sx5MfA9ktfdEjnDYTGdH8310ML
oUNj/Q49xYdT5kLJ8aacD1r+PEo9aoMOBl707NsMzTf2c+73sXVq70nJ52PP
TOxnpc6TMdQdWERQ7NexulEgF2vL5gaDQRaL5J+HmKKYLg8x+K3uiRb3T493
nCs/sPardfzRvs7Zo84vyZvU2ClfMdX/4vqIpOIqMZ/rcZ+X+Mexa+Nab2u6
9apvUmpx99Dbq5fxYuP2+D5S0NKWOHNXubXWK+fQiy2UizarNOogzox7f3Of
izl5B3xWsZ5O2vK5wWCQxSL5599xxunRs+zxHz/f3dnc6k6JrSVkwy/Vj3uR
80plgtpca2o9aWk5WUPe065RXtOzoUe7kCYtS6Gx70reHSl+93IO9kx7TUi/
Lxh6xOZQsidz36nhD3Y+Pe0BTVsHZ1xEDU1jtaBhTG0Z3WAwyGFR/PO7b7+V
pT/dWOV6rM0fU+uL837WiOkdKw/HCI5aBDW1g0P7PeQL8//OtX6qfpCz+YzJ
7xZaeyrHO1X3weVl7dmAtatR925uX9U8RwqhXGx/7qn5tfZj13631qan2ZMe
M8dW9G59DtXe2dLvWI97w8fQA+nMs84MysF33XmnupxuMBjksAj++RMnTkx7
bIbOsA3r1wd7vWnLMDX3VSiG1L9nMH1WQ58vmU/PdKP660O9m0t98Dm+SUJS
7pCMi8Tu15RdqnbtXD28Q6iRW7XiUXvyv2HmI2nPayHPt/Qx9nhmS2DsPSvG
jthZ6vbP8PkSe4/dmhLa9qbcmSwRv59b87aVS4Oy8MrKirqsbjAY5LAI/nl3
DT7Aby9xjlPPdannjgma+XE5+3ovtchaP8eP68DQISaDjQWSOpl2r0et2g3L
Dvf9oeZHhz6fqmHfOx9icQw18+a+O3r2s1LRIp4Oy59aPzYnX/y5pOZYur+0
4gpS37tuz66gLAx+e21Z3WAwyGHs/nk4T2P5QpBP3+JsrclBr5VTWsklXLlh
vcTC9y4Tx+jtxzPX0lMrnrNkDOy70puszuVHSvE6VS88tV+49xMXXJuRxpxK
9PGaZ3HOmZteqfFitguONfVQHw0zL4l5ivR8C8yz1L/cK29qEdrrsXPAtVlJ
8peaP3TgmW9G/Vva8rrBYJDD2P3zEEMUO7tue+ge0bMfc45L9afm6j1NvUdi
z61eT6SGPZWuLVHi2+bmbQ1/tcamjllDV875p/r+lvLOwMSbiprhpd8tzWNq
oQtheiSWfC+2dir9cjTP2chbnP+uP7eE91y8Is05QhOO+fZw50qD+y6v4XHN
HGI+rmNHj6rL7AaDQQZj9s/DGRnT5Tedv4ntXI2NEbvXcnWdevINl9YTwtix
OfPbQvns2uhZrqnJ+esJ2jmSod/7e9+Pk25BlzHxkKNm4kDnVJwBZcxYzb4U
n4t5xbB/a8886vcl37kS+zZlPiVxChx3ivvM4f3kipnI3dNSeigXOHpz1tSu
0V4rFbX3HvSbj+WfasvtBoNBBmP2z0NP+Zg+D304ue8HToTuX8p8uPWG0N2B
lQ1K5xKrT146j8HHT5FterENpOjZ4xylIalP9EDPWl9Xr3L7MqDU9z1W9PC+
1IBSz78EY+hz4IN6T2IRszPUjtPqvMvxUoqH3HEPl115eVAuBplZW243GAwy
GKt/PuWb//MLLyy636JnLSHu3LA4SNWpKvnu9PeZ3EttmU+qHq9ErfjeURKf
E/PraeXolsjVXP54qfXG5GYpPTzUL7FUP2lV66AVLWp5SX2m3dv84NqHpWdC
b7U/esC+u74QrSmlLbsbDAYZjNU/D/H0MX0e6oFQz79a+yjnXVLqu6PWMm+N
Up1EO16Vs9aV6xdp6ceL+WM0axWk9kPqWZJ5nNr2FElU1RdvdGak6vq15lVL
P650vntr2o11Tn6M19ghbUPN0UnqjuvdNiwha+XuPff9efiFJ6PyMfR31pbf
DQYDP8bon4eaHrGzCuKJcmddyTna6p6K3Q0h/yZ1TZg5S9raS8bWrL9TG0ep
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
Kt7L5SHXmSAVKxEC5vyAmNmYzH78+HF1HcVgMODA7Z9fWVkJngtQc0PiLC61
hZacmRrxABK0yI3LJTtw11ruzb/BLaMsqn5GpaUvO40xbrtl37SSeBrMmBq5
9lLI9QOIrU8ypl06vr5n9Oq3p/RW6MWWiP08R+0GDF24+1MMcoQ03SURqvfX
AhgbBOjz4IsPye3gn9PWUQwGAw6c/vkTJ05Ee1/suPHabO48i2wrKPtL11fG
zkGjFvkMjTuT8f14+NJ59WQr8IHdS7F9kXov/LG16cDx/B7e1Rx6eX9C80rF
lWrSLMW3HuZTS3Pp+m+LiNidSP39MiK353qzpda8H72tBcsbrn2aOg9i/ah2
336ruo5iMBhw4PTP33XnndG4ndBZWipvSMgppTWYS+8Irryp2N9ayHLael+P
qJEZJOjZs8waqtcdet96XoMUsO9vb+9gKEfG11Vr8wzGCOyapfiJ6VsRqueS
6h3I5YMtHSO0JmrdOsz+GpseyF0rT/LZHIjFA5B7v3txAJJ0S+15jM0itOYa
2l925eXRmlfaOorBYMCB0z9/7jnnBM+ETedvanq+t7S9Y5/TIiaO806R+B43
auMSS2hN+Q42X1KS5xI+4Fg8RO7/te9kr/7sluDK60/9vvX7TdXLSmLgsXun
l7ONgtL3KlaPM0WXnA5PiQPSQO2dZ359ef7EaFyayzLTc4OJfxyxNJz3We1Y
t+z7cjRPVltHMRgMOHD551M95+GskL4HJO/YMcp4JWipZ+Z4yWl7bjln7Xlg
gIntrfUPx36fGrekTxtmnxTVysj0Xugt58SQhqQPUiuPWnLvUe88iZjg3s/8
UsTqysT4WdMHhnJOueOm7jMsXyixEFznNic4a89ToCFvHnjmm9Ee09o6isFg
wIHLPx/rYblu3bpo3jy2riuHTZVT9ta+Z3oFRc6g0JDCtxb+S21Q3omQbLBI
9ilMTbMYcvs15ZOT6o9dck71tj97Rege4owDSEGiT1fP9k4JPzZWN+W457Xp
GXt+iKYx3btl/VitnIQaPpXIltz7AvNsqf4H/rix2lfwOW09xWAw5MHln4/V
x4R695xnW4lfrMW9FrK5147JfXdIyygcdW215SjsHLhr+PpI5bZy0gs7/x74
wgmu/u1YelF8uhbPS+clNae7VVzF/9/e2cfsWZUJPukYN64JMcg0mf2Df2Rm
gyTdDXHABGVm1XGQdllnYQZQJIZJGkSIEyhmLUNHIIwgVGEiHwVlLKWCtnwU
UGi1E7HYiqGIGHRR62BEs6T7RzuTWWKm5t5e78v9vuc5zznnPp/3ue/n+f3x
y9u+7/Pc9/k+13Wu61xXrr70jcdvao9cdRnKOWBXvfRylp7brvvbfenUoXl2
ffRv33LbxvhQxktov47B56rEfiy+9SYZfseOR6vrKQDQTQ77vCvn/AN7dgWv
KyF7dSz62Wyp8+Uasnmof14feZNc+bNLt1Etv2i1zi5bQG3f7drySw7ZZGyy
o28bRJ1fKvM9dlz1ZbceGkOuW2oue/1Zfcz7IbdnyfINvd6he26p+owt1mBo
G/vWL7cvkPFuWkdZJPadSYYXm19tPQUAuslhnw/NOd+1dvnILa7P1I7v5Fzf
O87xU8/zbf54teseS66+q9UGXXY0va59+kimvqfUPeKhy8I18B0bXfcCSsjP
PnbI1D7NuUaa2iUXIe3b9pXeNqZn6OtIifIP3X9L/15uP4zS56pjWNf6KuOY
ZZJa+N4PU/+vxqTt6m/JKW2S4//6oouq6ykA0E2qfd6Vc17OCvpa67Lkrve4
S1Xblmpa13PtwbHnujHk9rMIGQ85+rBv2ayGLKjHakqRwVLLHxony+UbUcom
NER5XR/jtpjmufNuhj7P5VOUs11z3E9xzYWQvHQh60+feexCv5PlrKaynTZH
vrNc5IilX3stqv1+3zL0de9pDHkR7v3mI0Y5/o9POaW6ngIA3aTa5+Vujc3X
/hsvfj95/R3CvmCihs0/dj8I1Vt9znVb+SvHHhXax7rsF1uGkPuBtX3SfdrE
ZO+rLSdPlbPH8zCvmM6ecvyY1qYh4DsnQ3Km1aBr/gwtP1vNs4+a86Hvd/fp
R+Xjv9Fn/UNi84f0VWdOES0/fMzeltWvPaI8se/vY13c/YsXrLK82O1q6yoA
4CbVPn/uBR8umnP++f13NOu/tttbNv/m/gebzZtuam64546ln3KH3xZjv8XH
V3TKd1UpU9c67Rs7Xcq/6e47g8uvt9n1W59YKmPq/QUfSsRvHhPzWm9fbOdD
qXJKDtugq7xDxsdvongc0IH7uAztPMu3TYd2rjHrePnua/ncapc5Ft+4Lrkx
zUVVVvH5/q5vf3VBJrpx0/oF//C//cLNzV2PfW1BFx3a2ZraxvJTZDiR77be
94Up+W6hfh1+kfL9kPaKQfJRmeR5iZFVW1cBADcp9vmDBw9az/NEJ+1aT133
6eT3X7vhIwvPeuOqW93r/NHPPnn/Vc2aleaytHk0z7v1/mbn/w3b70qhrt3y
74fvujS5/FJuedZNpx278PkVF1zb3Pvyy0FlGTuhvvftd/r0texbtrDd051q
h0J5jcdIat26YmWUKHPOO+p9tXNqW5Tym1D7aSjxV2Lr6PPZkvM55O5EzjFY
IreYb474Eu9Xy5HcJ5lze8a8v5Xv/uOq9c46vvDje5sbLjvfKhu1nPLRTzVf
ev6HWdvAlssg9B0x8p3ez/Ks2089duHzItvJGUbs+LHNsTWrVxvLd9+WLdV1
FQBwk2KfF53dtjaF2JN1nvvpjuaT73l93VpzjVMnfe6VR5v17zhu4v0nXnl7
c/tTe5tHn/t284XrPjrxtzeuWtvc+Zs8e1KOmEyyrurlP3ndBq/y2+Qv+d3G
c968+J2VZzSffOGn0XVyyQ592ihC7QihZbOdKcWWt1SsuInyecpYXfVoyxbS
ZiXOP3Le13f1ayilxrnvPdncY8dXd/MZwyHtW8tWXkP/SWnTvsaBPh767BO9
PX3912aNmPEw5DPUrrkmfw+R775157kT8s+K913UXPXA1gWbttz31uUj4Q9u
fjxrn6Q8wySf+sp3tr5XZbuLn33JWe7Q8WWLbS2/r62rAICbFPv8n/35n1nj
Ycaumc8//dmlc8wVF91htEereUL1tfLcJ6bv7H/nO5smzkaPP+4jzWdfzrd2
x+4FpvKf9/T0913ld/GVy96+dL5y8ZPPWj/XR6wlnzuANRmijNQV09tHdsrd
j0NtqyGQqhelxm8KJfe8jylbH3qk6a7vRC73TGtR6nNq+e2EtmGfZbS1ben9
o9QZWon+0vsmZd1v74SXKq/4i3fJdy07P/PfJmSjD2zeabQTqecDLW/duq9z
rJbqD7VfYuW7LpuTKtuZnhmL+P/b7s/W1lUAwE2sfV72O5vvkNxn0tcJn/3x
2V1XL5/Drrmmub/DN75d01p+757vWj+776FPTJ7zvvtaL9/7kvRRfvUd6llu
LLnkKNde2OWfWTIv2hB8a2vYpErK6bnuuJe45xkci9HhPzDUO7VDsnEOtY1s
ZdPXAx9/8Zp1SInfZ6tLyFliyvwIWYNMz+qqm2oH0L8/pDkS1N8eenfus49Q
m0X77xD5Tuw6E/LO3z3ofI/YwS88duXyd1ae4WXzSK27yw+1pHwn752w12SQ
7QTxezDJ9HKvvrauAgBuYu3z6vcmfIlWrYpaR9T12+d8Ul//jn/LOuf+0N4r
n1gzNz6Zfb333Q/6KP++X/7zwvduOfOYqT2ulvyi7u9Z/GAr2fmH5F+QMy+3
Dz65bGv1Q6l+6ZSZHbrI0HWFYn7cjjzqtfXeHO3hG5ejtE3bqlv3uEbVvhsz
pPE0pL1hKG3jI9+p5y33nPumYN386S0XeevPnX2YOHdf2XaFUb6z6f/y+1D5
bkImPNpG638WXk7T+YTNTifjqLa+AgB2Yu3zkpPSNOflnk3omqKfrXb5D6lx
QdS1u+vOvq5Du/aJrvU86Ixa1zks5Rf9O7b8XfnW2/aV2DM+MfJMhOZWDr2P
HfKdvvQC334ee2y4mvEAc+QEb8dEqTsGQydHeX1ziOTKF256n74O6DHF2/+7
Ple6DXyfU+JsTd+XutadIehyfZetVMz2oefjix1vpXMcxsh36udXfHCjly9i
qE2/VB+ZbC8+Zwsh8qmpbUW2kzOD1P58z7tPM8r2O3ftrK6vAICdGPu85K6w
neG1uTd8kbXvrg8cE7QG6+u2+Bv5xHyb8snyWGdz2D11uaLP8reoZ9crrry3
c0/KwazdteyKeW3yL3X5I+j342u0zZD6rRRd90H77oOSeoGrLkM4oyjpPzJk
3XUIdcudW2EI46mlzzXLlatH/u06G506n9L2h5I+VrXuccXIdyIT+fqet+jy
UYr/Zcp80+U7IVa+86mDr2zniy0HdUw+awDojxj7vC0Gppzrhe4he247O8jP
Xmzwj1/5hxPvbc8lO/eWo3vpku+58t2QvB8+MVa6bAM+5Tf5Gkz4zivf9dnr
5LuXH7O8V5z+wB7vunbFHu6y15WQs10yT+i9zb7lHNcYCpHlYsrdR7733DHq
U+ock6uwRjmXyqPMoxAbdI7cal3f7bz/7Ch7H+TQ6XKNhZz+LqXXpz7Wv9h3
1BhHJeoWnB9uYGeqsTFMQuU7Qb1nH2Lv0L/nowuH5FL0JVo+1c4+fOU7XbY7
Zefzne9y1fXyT0/eFWhZe+nHqusrAGAnxj4vsTFM8339dZ/uXHdUOUfyioae
p8oZprp2LXzvoju811o9ZqrvXpGL3OX3PfsVvnXLWUG+XLNIyfzfvvjqDCny
RY48WF3PKKEH9HW2EiKTjjGXVg691De+WG26Ytblvt+Ruobodti2nfvy16kd
/yK2P2yfi9X1+4yZn/PMsMa6HPMOiTvvI9/pzzLZt8Wu33UfUb8/377PlkO+
xDmuUb5bu9n7+yb51CfWnUm2i5UBbt/6ZaN8L/msausrAGAn1D4vd2hMc134
xovTueJ01DVUXbt89WrjWq/sE8F30P9TWNyU1D2gq/xd+JTfmgtw/x3NqUpe
FNX3LUYGqK0Xu/akMT6/BH330RByoA2p/KZcaanPG6qtMke5asyxFNtx7Tav
0S6l94ocZ5H631x2fpc/V801v895bmuflPrr8p1vDHaTTiyYchGr40vPDZcr
5nsIfch3xvc6ZLtQHn3u20b5Xvqwtr4CAHZC7fPic2M7uwtZM/S7QjafJH0/
mTiHfJ0/f+IH/uuttu6Z7OMl5Imi5fc8/526b1DRRu9joxmD/jyVm31gsY2H
onNM2CMTddtY28oQxpNJtx+Kfl6qfULXyFllKHbTFt/55/NM9TO+Zah1Huxz
B6fWGClSH21P6uOevq98Z2Mivr2HTq/69afqsykky3dPfzZKPp2KsWyQ7UL2
XTV+gYq8u7bOAgBmQuzzhw8fts5z+W7IujflG+Wx/sq+pOf0FN77T/73340x
R3rKRS/raO3yP3b1+6N9E0II8an0lZ9SdeUQuTSXHbRvfSWknfs8e8gpO9bW
f0NyHvTRhkPQifvWgWrVOVR3GhJ62fs86wt91xB16prxQHKOqz7a1le+s/oS
GuzcNp1+Knf7mmuKyXO2mCbt713yXZfvqBAj37VzyyXbhZ7f2GLc79jxaHWd
BQDMhNjnZS7b1tiQuCKmfG1yhtm13pm+Z8u7adv/TOulxGnpw04dUv6Q9d5W
flM/TO19PZ1lZG9LS//2lYM9hth7vbnsKUNpl5Ry2GTR0jansRPTPj66i+kz
82iP9/FTLhlb3nSnfwixQmIZ0jw2jfG+15qU9a3k+afsw/o4s8l3oc822bpb
Trzy9oWYwQ/fdemkPHPlvUF+AKb6mH7vG/PQV76zPS9FPp2KB+iQ7brG0V9f
dJGx3YlxDzBcQuzztjwWZ//l2V5rZbuGSRy8NSsn17zYfB6hPuMpz0i1zcS8
W39nSvllDdf99VPjAdaIDd+nfba2/lEi9pEeC93WprpveNfP1LLF3jOv3Uch
9atRD5+7LF1rV227cy0/l67cHSXGQWj9xzL+c7RbH/ECc/pl+e5Xufqwq318
xl5qWWLlOxMPf+oUq06vy0CXPPKtqmOgtnyq++qLbOeyFbnmkMS2NrWz6Pm1
dRYAMONrnxdfe9taesM9/vHZBf0c0Xe9sq11kgPFlN+t1Jobu+cNofymWDMn
Pvw9Y536sHna4hP1YVcK2bP7jIVcixQ5rs/87bF95qprTp0ox7NmcXz1Vfep
udqxhoXqiEPLcTiWPjLtL7HvN/XX0NuvtWWXGAP6c3PF3owZ5zHyna3eCzZ4
D53e9vyuc0ubjBNzbuSS71Kf4SPf6XnrhP9873emxoVP29/12NeM7Sx++LV1
FgAw42ufv2/LFuP8ljNAX120Rc/JocZKcfnc59DF9Rx5MT5RNrr26iznt1oO
GP0ZPmXWc5z6xo6ppaeo7Rqb683lnx9bly77dglyxGocki9rSVL7RL8baft7
+64cOniuGHm+ZdHjFHbmmO/ZPybEtmmL0d0lq+e4xzK0s6y+mfc2mJfzN9c6
184jl3ynErKX6X71Om84+UPV8++G2Gus/vYd8p1zDBry14fE1lexxbgXauss
AGDG1z4vPvWmuS0++CHrhHHN8Yxf4lovfWKNCLKu6u9fqIcjF0rp9V5dq318
+k3lP+9pv9xCxvb/4MbgMxkVXzt+CT0g1cZT4l195ZFu+7N2fDhTm9rqnXom
VCN29rycf7jImcfK9nz9LMN2HzzUlj60fhy6HdnW3n2v76nt1OVTFWp/dpVn
SGtwTBvnWi9T5DsXRtnJwMVPPut8Tkw/+cYhzXGf0tR+XfKpWr6cbU+Me4Bx
4WOfP3jwoHX9vH3rlzvXqM713hG3Q31WrvvnU7lNX3+G797u4w9uOsMuXf6u
PmjLbNLnc8XE0+VnVzvlvDPo+ntuO3qM7FNK3us7R/GQy+dT5tQ8eaXr5NPG
qh3aFIe0RpunzOVa+m2sfh+UE27AdluXvpuzT7raoM/+13NmLpXx9bld6h5O
iToOdWyFyHc+bSX3wtesNMufRhuTQfe1nRHmJIf/pclnPkS+y6nPSw5qU/tu
376tut4CANP42Oc33X2ncV6fdNJJUXbd2PU+h30+1/35Lpm5/bvPecS9L7/c
255hisEamhvWF5Ofq61M6mdj4qi56mv6vekdqfECYnIPmWxgJWSOMdgEU/ok
Vw65PmOCl9ILQ84dStisc9tFUyjlg5PzebYxbvp9Lh2uaMxz8kz0QkwfutYc
193qEH+YVH1eRc/HI7q6yJwP3WmOv94SE08/lSzyaaK/fapsp46PtZd+zNi2
ojPU1lsAYBof+/ya1auN81piXYaueSnrfYguG5IPJEaf1/dBn/1uKOcRep7S
kDa03VHVP9P2dcz4CNlzchHyzL5lVdW2kFPfLxE739VmoeUudQahl8OnbDX0
E7X+NeMzxPSDyycmV11K9clQcyuEtKVpne4qa2i/1Pa9scXXU9fJrjLmHEOx
YyEkbqfpdzbfgqiyROwt6nt95Tufsuo57CW2myonfW/fZrsPfoBMlCMmjTAE
+dRXtvOpz1Wfv94q99fWWwBgmi77vOyHtjNQiYHZtTeY9stYfd54t+j19Sol
Przk97TFIM0Z491W/hz557tiqKrln8rrmnCekUMPziVT5YyfXBtXm/jEqB16
Pvah+or6tH+v7dTT2c3Y61eSHD4btjyPOdou+Z55pnPXrvvlPueRtnVrqOPX
2DaOtc3XDyMVtb1ytZ1v+XLY58XHfuIZF91hfMb3f7a7uem0Y43yqeSiL93X
XWcZOfLViXzn68OZU7azxbj/41NOqa63AMA0XfZ5+Z1pTouvfcwekHJ/XvjK
ZW+fKkuXb1WXz7u8PyUenK2sJnzK77rDZyt/yH6pr/myX9SODVuyzYdA3+Us
pSeVqEfpc5fSbe/yL7fdcYdhYPNByv3MGs8YG2Orc6y/Q8z9sL7OpnOcKcTq
86pvv+43bov3237+ljOnY8gJFz/7Uq/jzCbfueTLnPKdjz4fci/QZsurrbcA
wDRd9nlbTAy5WxO7Rqac3+q5UISQ2PTP77+jOVWLrWLL15Z73Rdfsan1tmD5
ffccn5gpY5O1QvHVf2exHXLayvton7a8MfHOU+XiGj4gQ/EVqFE3n/Hk+swY
4/SlYiu3ba6kjK8xtVFMWVPs5jnuR43Bf0Uv75R89ye3BtkbdNt8ewfcdSdR
3muy0791675e619bPp2S7QLbXscW4/6l/c9U110AYBKXfV7WC9v53L3ffCTf
eh9wv0pf6xe+H5BjU4+vIpz4cFnfX7UuJcov98p81vqQ9h8StXMb59J3bXHK
SsjEKTL60PJO5SaHL07qOPC931sDk1+4KW9F6RiONoY2nvrK45FCTn/uIdSn
zzLpcfBLz1lbDP4abRfTrrqtPFS+0GWcrny6rZ7/wo/vTbZ1LLR7wn5fSj71
ia+UQ7bT+5sY9wDjwWWft/nan7xqVdL+oZ9hhuTUMOVrk7tVvjL61Pmpdn/d
N0ZYrPxqK39s24Xev5d2mlrztfZznQXE7AtDkf9CY/sKsbJb6TrneL6e89vU
v6GxmnzeOfH8inphzf6r9a7Yu7pdn/eJ6ZBqax9yHwzxXCa2L4fUvvq6ENrO
oe8NnR+++v0s+9jodMl3XX0y9X1PfVhkmCn7dIdsaNrfluIqRuTlqCnf2WQ7
13e6YoMQ4x5gPLjs8+9592nGubxu3Trvtdn0dz1u6fFvWeeM96E/4+FPnTL1
fT0nh/6dViYw5V7v2143Vf7jPtKZU8Ra/oCzjHZP0v3SQs6Pu8jp3xqUz8uh
D5a23ZSy2eTMhTwkfVm39Zo+M6X3B9hMap8f+eR+SMU27my/d8boGnhswhB8
52LKGOljrrt+X/qsVB8PNfOJmObLmGKD9IXvXf6ce5VtfwqV73Sm9HlLLDyv
73rGxPPNK6n+37ZudsmnpvwEIfKpy96SW7ZT7X0qxLgHGB42+7zL1/6BPbuS
1ogpn6SVZzSffOGn8d8/is/3xR9LjzVyys7no+thlDU8ZGNT+U1xW3RMsVJO
f2CP8zv62m96xnv/6YXgug9F9jHpMynPG+N9W5fdQP99qE5vyo9VI25+CR1K
5mr73Fq5nny+12dewT4Z4/mUz/uGnFfCh9h4/kPPqTEL1Fx/fedcqnz37K6r
J3XShHhwqj5bcp3sulMZK9+FyKc+sl1oG8i9WpMOQIx7gOFhs8/bzuW6fO19
1gvZDza+IX7dMvoVeZxDms6NbXZxWZMvP2vVQn1PeO/5zdrNj1rrov+uS/cQ
PcK3/Gp7+pbf1QdTd8wC85nk0qv0uN8hdI2xPmT8sepQoYS2ZS1br8+cy9Ie
jlj2Qq64BbXacQzj2kefsfln1S57qbYecjyGrr5M8cUZGyl31X3GyxDGQax8
19bP5zzA1ha6fd4WG8lXvnPhauOpGAIW+U5dx0LkU1MbpMp2xr782W6rXa+2
7gIAk9js8zZf+8s/fUWWNT/0jpS+dulrflcOdtlj9HtNtj1GYoya6p4zn6n+
jq6ccaZ7WTG+BVOxZjx82cYg44fQpZN1fd41xmrXLaSvQnPcuzDJNiXsSCH1
U8sUIt/65Ar3fV7s3FH9Y/tss1Ry6mK6PTDneLW9o3ablvA7yHm3oKYNPvWd
sWWftf3Pp01S+9lHvrM9X36//h3HTX7/49s736nLSDaZ0CXf5Zp3JeVTGzGy
nY4+1iUOHzHuAcaByT5f0tfetqa2MVNC9k79PNOkb7fPm/LDcujmppxyLXoe
1BQZY89tZ0eXKfZs4fEr/3DiOZIb1bWejxGfPlFjCPdpyzDZT0Luww7pHnxq
XwxxrOXQVcYQCzH1nSG2wlibYcg8DkE9K+k6p4m5S54a+63Pfk2x5+prkPVe
ryPmWGw7dsUbCPX/ynEOZXunqax9xHlo+yckNkPqO1um5LuAOEUyJnWfe6Hr
bqF+hiC56kxx4V3ynY9fvC8+8qmtTDHyXSnZjhj3AOPAZJ+/ZsMG4/yVOzOu
ee+6d2eKAXLPuW9afv7KM5znlzYeu/r9E2VceePmiTNJec9Dd2rrase5pSmH
6NJ3A3KBqnu7bS3Vy/9H16SX34Z+ft3mdfX5blIOXQ9ZSZVlbXbRoeuwJWXx
3HECctCV6yG2v0reZZ9lX95cbVcaUx8MtV9q+i0PYY77lG/o63IonWeqStwN
sLRRBvlOt3cIJ155+5Ts89xPdzS3ffxEb33YV76znWGGjHf9XTnkUxMpsl0X
xLgHGAcm+7zo7ab5q/ra286cQ9YJ3ScpNg+8vh7K3nHO0XrduGl9c/5/nfRh
OvVz26zPaetkOhteWmszxoL3Lb/q7yTlj43Hr7e3KW99KjZ7T5f8EyIfxeRv
D9EXdPt3SmzgFLkvh26WW7/L5c8f+myXT4Lte7lzsoG731J1nCHrSDE6a5cv
junzOd5re7epz7p+l4u++tbVXrb61Rx3pdrcZy0rfQ6TQ757+pu3TcV4E953
yRUL8ujFF5w58XuRlVwynlBSvtP7U2S1UPnUJd/ZzhhKynZXff56Y1sR4x5g
WOj2+X1791rXukefM6//KfuhmtsjNnec+FTJGe0XrvvoZDwQZY1fffXnmi89
/8OgfUT2CjnbWP1Xf9GsWem2z6fiKr/QVX4fuUD1x+o6v1X1X1f/lrCrlfB3
9hmj39z/4EJ8HKHLF8XX5yCkf0ri41uZkgerpC7ch/3PJ4de6PN0f5OUfrK+
x2Mcxt6RlbPes//y7IV1UOIcl+6DrP3ZQ841vR1dYyHne0LGZ2ze9tztZit3
rvsLpXVy2RtkLgi5YgjlJDauiGmshDyn6/7XhHwXmIdeLdcTj9zSXHjWO62y
qcS0O+/W+5vdv/DL1WOV7zz1+ZA5WEI+1VFluzeuWttpm299THxik9z12NfM
bX603KLTy3Nq6zEAMG2ft/naS3y8EvuL7iek3k+32Rhcz5bzAFmr5Oxhxw/3
Nt948fsT62roOtmeL2w8583B557R9xJ/tnuh/EJb/pCym9pN7rOpe4keByCk
z1RS5ajaeq6KxIZQx3yNukTnPBuAv3Ko/TwG59lShDxao51Scjv49kNXjAWf
PhHdpZ0LN2+9J6rvXZ8fsj1ep5bvRpDuHnjGOM+o49+nTVSdZs3q1VPfVZ8X
E5MgNs5EznUkNGeEzzNc8p0PutzTynaqfBTrr6gSK9+FvmdBPk2U73RyyXY2
+4OU0XaOIshna+sxADBtn7f52q+/7tPZ9o2p9UjxFVpxwbXF3mPbI3zLJ+eR
PnlUY+XUlDW9a51W8+OVuDPgVY4B6JwuUvX5mH7JGTe9dMz1HITkMQ55pqt+
MXKoT7sNfTyn6qAh+ryv7TWmTD6+4bnGdOhzYsdWjjjxQ4iLmJuQ9SHH/NPb
3/ZuVZ+X+GB9tvnQ15kuJuS7D260fq5Yzoij7eeaZ6HynTp2TGO0zztufcl2
thj36PMAw0G1z69bty7Y175zLfU8b1ZjgZa41x27dqrny7l87fuWw9TYqRJr
JfU82/esN5fOVrK91GeLT3GIPt+3fTHEP7HPcrWM4f55znHp6v+QvgodRzb5
Ptd4bMuu3k29feuX++ujTPrLmOz/If3SBzFzRI8zUloPzd2/rvMVdW9Q7fM5
+sz2Tpe9vo/7EzH5BWz0Kd+F2EV0+a7ru7Z2zzUWQ206Itu1uraclYTG0fPd
s20x7tHnAYaDap+Xfco0X9/1p6cnr1M+678a6/3cJ76f7bmx35e99JYzj/G6
b16qTVKfocZ+WfGuy7zrELM/2exxpthyQ8Rkn3fdKfe5m5qSEyg1FlbOe+Cu
XOwpxPh42vqhL0q8ry9dLaTsIfb5pDJ5xuqo2T8qXffla4+BXH4RJdbqUuM8
d+41vb1y2Odz+GSMmS75rsY67pLvhnQXUEfKNiHbvfvaaPm0HY+ucSn35NHn
AYaNap+3+dTE+tqH7ltiN/7KZW9fKkvOXKCh554v/PjeZv07jlta631zrQxp
DxA/svZeVcp6nxs1BotvDuNs73bYjHZ9+6u9+tv7UFP2yy17lu7b3L7LoeXt
0n9CbPY225waYy9G3wqJSabq85vuvrNo3+WitL6Uy745FEzndVXKYViXY+Pn
laCmv72tv2qPnVC65Ls+9zq5cx4j39XANObVO/N9yHaqnoA+DzBMVPu8j699
6f10as1/8tki7+16XhsvVPKdpqyVtfKFyXq/FLPVkc9Ujwvkm1M4l9wcksNY
zfs7UW4tH3ArG4b6KYb629vKmLO/a1AzFnbp9ss5ZifKXVC+rqXDnHvBh6fs
87Z5H9JvNepjWjtqtavve0uWz+XjPdV2mg45ZB+rUmzfvq2qPq/3i8lXSvdz
6dqja4x/m3zXN7nkuxptOyHbbbgx2MfehmsPs8W4R58HGA62ePYtXXHtY+7J
+ax1D9916VIZ/svdT/S+3ksM0m3f677n1cc9wRDED2HfQ59YarsPbN4Z/awU
3Uf97lj8C/uOh9cnXTbf3PpoyDNTYvuNlT7P+WLfpdrnu+7Pm/or17qoPic0
BviQbeTRuSwMNvWh51C3rQelym66E5FyTyLEPp/b9782XT4BMfUKke9K3Kn0
le+Ghkm2s/metvWOyROlIzY9m44gOa5r6zE5eWn/MwuxwQ8ePFi9LABdyDwW
/xnR1bts8yXj2nfxvX2bm0tO/n1nTNRca35NUmI165+V8+97zn3Twl35z75c
v24qQ9Tr1fbT9fnYMeWSJWPtXK4c4q5x49vmOeIl6HVOOSeYV1vgkOZI7P35
UN3epmf12fc2358szx6Aj3Tf+6P+Pt88HjF3UkLKFTumVN+tHPZ5155fLM57
YJuFnvuGljtEvvNpt9LtF/O+mLLYviNtX1K2U+eoqQw2HUH8LCT2ltzJqq3b
5ELyfEm9JG7ArJ1XwGxw+PDhhRj2rtwTLl/7XOuS79/bc0cfX/Gc5Yp9Rqm7
iCnldcWy7yMeXyolbHw2atnnTXY2V3ltdq4c5eirzn3gMwddslOKXSPEbjq0
s8i2zUz+9in46lJqnPShtJvvOtSWySd+ZMzZTZ/nPTnbN+faUiNGgi3//NDm
rgvfNus792OpPL1DJsWG0zeiA9hiZeucvGrVwt2U2rpOKjt37Zyol+j32Oxh
KIiM5Mo54fK37/P+fM51sq/YRV35ZkrEBU8pVx9tkoNS9jlbX+SMh1eyr4dk
wy1VVtv3Qs93uvwXUqk9R3Kiz7eueHhDumfUV5uMAT2eSF+UngumOsWuL6Fl
tenz1j7wPNMvmc9VPVvK1W6p3y3VP0N/d8oz+z5fUZF7ViH2vxaxG9bWeVKx
xfSX34u+X7t8MJ/ImZKcL4XOSfVsyld2KynjlcxN1ze2e/chPg0lfM1s3x/C
Pc3S5IiHV2uMhcpYOf0Ah4Rt/QmRm8d0XuJqA5M+obePa73u8rcf2lpQojyu
cRO7JprGl2k/KBljsO+5PPY55XN/vubZfWrf9OWb1YdPYCkf/D7PL/uWdbt8
UmIYu04va7LrLKO12cvnapcV5gdVLotFnuFaD3LlKx8qYyqriZi9yHeP1+WX
UF8y7zuTuryrxeP3kaFc7+ryt0+Rt8dG6Xhtue9RDEW3tPrve9pMY/ww1fvn
OfUI3d8+l8yv971PHV2fUctVe50eyjj0pZZu1DlGCuXKtI3hrn5zxbd3lbOr
DkOLP1+Cvu+zx3ze9ZyxzekcSLzAGLu8zn1btlTXf1IQfd2nntjsoQ/0eyAp
yHnd1Lz39SsLvH9Yck0PKfcQ9tRcZdBlh5x1iznjj3m/LR+3q0y++7Fun9fL
F5r/Lkc755Alcp2nlMB2N10dT33JWmOLS516JtLVdiHx7V3lMpUzV7/56H2m
+Pjq2uBqx9p21tR2Cl2X+xjrJe4O5yq3ra1yx8MrVT/beKk9jq3trcy9PmIC
lsZX5ihV11zPsvmahyL36SVuV209KAWfuOFqfSUHODZ7KEHMnXkbKftYqFzS
ZY/JtT/Nal7dHOu6rY37uCdZIyb0UPLVdcm7Q9A7h+6b4NMWMWOrZr1z33dR
1z1TW4TEt5+ltdMH5lq/bRviwxWbp8AlU9TW5zvrnXmf7GOPqX3GMIQ77bHv
8n1/V9xm03ckXlYO23yL2Lhr60EpSHz7mHrL/il1l++P/UwD6iNzOdecbPnG
i9/vXI9L37XO8dwSvnxD3Q/mjVgfvL70+ZDyueS0vmQ4F/pcLKnXlVhTUteB
2DOn0NzhXbkKY/qqC9/49l3jJqXPcqyTQzxrKB3fuu/9ZZbPHKQtQ/LP9102
+dlXXMCxE+XLGTm2+4yr533e5WELk1zWOXUGmS+1daFU1l76seR2EDu/xBSQ
uzvSX7XrVBLZcyEvEpM4tz4vviSi0/sg53xyD2fHD/dO/F//qf7N9H352f5f
f4fpeabn275vKrP6XNc79HLo3zf937fspjbpqqutzfWf+vNt7zb91MvfvsfU
Dqb32P5mKrttPJnqo39H/7vaD6bny9/1+C/qs23tHdqHprabeMdR2aH9/e5f
vGAdp+3fTPW3lcG3XKHzqf2bT5vY2i90TbH1v6ktfMaZ3s+mMaf+NI17n7qa
+lV/h61vVPQ11TZHbPPOp51X/9VfLM2FGzetn3qH2gamvret+2pf+Y7JrvLr
66ReLhc+49O29netbXp5QsqhjznfOdU1rlL2GP37oftT15w0lV8fZ6a6mr6r
z1VXWV3jVJDzrHYuvOtPTze2sWutivnZNZ9NY9zW7l1zx9WuE884uj/F1E3v
T73MvmM29qdNpjCNZ/X/slZ39YttD3Ot6aY+tbWbDdM7TeuP77rT/l9d93Mh
+mttfSiFl/Y/k9VnQTjppJMWzszFhi/3omfFhh/rzwAAAAAAAAAwVuSsUGz4
EkdwrDZ89HkAAAAAAACYZ8QfQOISin5cW0cPQc4hJC6g5POTn5CH3P4h7RjL
WUbxOXH9P/T7ucuT+hz9Z8p7ctd1SO01hDKvOnnlxFgvXbeQ55s+2/X9WmNs
VsZ2H22kPqtrzei7bur+kWPdd62Btrr6toGrPWv3tf4cWWd869D1t5g1xPWd
0PaObaMcZQipV2qf6ntDSnvlLltK2/u8L2dflezXUu8LaS+f9Xzoe10J3XTo
dfahhD6lIvfr5Z7+mG3zUA41Z2ounvr6w9XrBbU4NIAylEPuSKljvXZ55o9D
ln9Djb5Qcxbt2PHoAMqUVp/6ZRhDmcCE6kMqcavpO5hVcuWqm5Slxj1fcscW
l7MBWUckHtks3Z2Hckgch9zzknEHswr6PMAys6XPA8Qzrc/XLxNACcQ+nFNn
mIX5ouZujbW9j/1ePNQndRyqiHxXuz4ApdDPYGuXB6Am6PMAi6j6/JrVq6uX
B6AUYrPL6VsuOmztOqUQ4+cs/vlieyf3POREtzmmwLkSzDLY5wGWQZ8HWAT7
PMwTmz6/IYvOIDHRatclBdHFQ2IKSP65xTvJ475fAMNF/DxS5+U1GzZUrwdA
SbDPAyyDPg+wCPZ5mCdEjxUf8VS9YWyx2XVE7/Gxxcv5h9xvrl1emA9kD4qd
kxdfcGb18gOUBvs8wDLo8wCLoM/DvCH66akr43X5TXffWb0OKXTFwJP9kfjg
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
AAAowf8HLsfnZw==
    "], {{0, 860}, {1012, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->288,
  ImageSizeRaw->{1012, 860},
  PlotRange->{{0, 1012}, {0, 860}}]], "Output",ExpressionUUID->"a83ad01e-52e1-\
4880-b746-c3cd1195a61f"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "4f2c8f36-d1f7-43cc-a4db-f70d4477e80f"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "d98b2bd9-d4ba-416e-837a-9f7e0498ca86"],
 StyleBox["45\[Dash]48. Trapezoid Rule and Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Consider the following integrals and the given values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e92bc6dd-5ee8-4ff6-b6b0-94db038ceec4"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"f2bd4a7d-c50f-499d-bcff-\
a46b8376f635"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the Trapezoid Rule approximations to the integral using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "39ee7c7f-c6ec-4844-827b-25598563c8c0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "n"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"759a6591-846d-4a24-b4b7-adbd237d8833"],
 " subintervals."
}], "SubExerciseDirectionsCell",ExpressionUUID->"c188f399-41f8-4be3-a233-\
41596f78187d"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the Simpson\[CloseCurlyQuote]s Rule approximation to the integral \
using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "n"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"834b4bc0-d2ed-45d5-a625-796aad3a800b"],
 " subintervals. It is easiest to obtain Simpson\[CloseCurlyQuote]s Rule \
approximations from the Trapezoid Rule approximations, as in Example 8."
}], "SubExerciseDirectionsCell",ExpressionUUID->"d4d02dc6-2903-4b4e-987d-\
7eddc8e43aee"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tCompute the absolute errors in the Trapezoid Rule and Simpson\
\[CloseCurlyQuote]s Rule with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "n"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"e23317cb-f3da-48d2-8978-1f4e8b96d6b1"],
 " subintervals."
}], "SubExerciseDirectionsCell",ExpressionUUID->"fca5e6b1-75e4-4355-9f52-\
2040ceac77de"],

Cell[TextData[{
 StyleBox["45.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"2", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"8f9df2f7-5fea-4256-b7ca-8460f2c80c05"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "25"}], TraditionalForm]],ExpressionUUID->
  "2329f59d-cb32-488f-8322-fae645d1d497"]
}], "Problem",ExpressionUUID->"c3574715-ee8c-4dda-b640-6a9b02a262e9"],

Cell[TextData[{
 StyleBox["46.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "2"}]], 
    RowBox[{
     SuperscriptBox["x", "4"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"10de6174-65b6-44e4-b36a-d094592a34be"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "30"}], TraditionalForm]],ExpressionUUID->
  "76d5af26-e5d1-4326-b7a5-60b860f14a29"]
}], "Problem",ExpressionUUID->"b78f7e44-781a-4bd0-9480-dd5c9b281147"],

Cell[TextData[{
 StyleBox["47.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "e"}]], 
    FractionBox[
     RowBox[{"d", "\[VeryThinSpace]", "x"}], "x"]}], TraditionalForm]],
  ExpressionUUID->"c1f39d1d-0206-45fc-855a-d3ff4c3c4e5a"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "50"}], TraditionalForm]],ExpressionUUID->
  "9e78e57e-1fa1-406f-b3ad-bd761f75b541"]
}], "Problem",ExpressionUUID->"c6af5a13-0835-4842-aa43-38c60f8e14c3"],

Cell[TextData[{
 StyleBox["48.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", 
      RowBox[{"\[Pi]", "/", "4"}]}]], 
    FractionBox[
     RowBox[{"d", "\[VeryThinSpace]", "x"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}]], " "}], TraditionalForm]],ExpressionUUID->
  "3f869fd4-d9e3-4bb8-ac9a-36ce8f924ec0"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "64"}], TraditionalForm]],ExpressionUUID->
  "a77975cd-6d63-47f3-8d81-4e0e9028d9d4"]
}], "Problem",ExpressionUUID->"5bca3c3a-4b3a-4d4d-b309-fba8beff2d93"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "8a4fdb17-b358-45d8-9335-cf61f745e811"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "ee4bdc6e-75d8-4b0a-bea2-67d7ffba2d04"],
 StyleBox["49\[Dash]52. Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Apply Simpson\[CloseCurlyQuote]s Rule to the following integrals. It is \
easiest to obtain the Simpson\[CloseCurlyQuote]s Rule approximations from the \
Trapezoid Rule approximations, as in Example 8. Make a table similar to Table \
8.8 showing the approximations and errors for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", 
    StyleBox["=",
     FontSlant->"Plain"], 
    StyleBox["4",
     FontSlant->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "cb9348aa-4a69-44ba-b88e-a71badf01ba5"],
 ", ",
 StyleBox["8",
  FontSlant->"Plain"],
 ", ",
 StyleBox["16",
  FontSlant->"Plain"],
 ", and ",
 StyleBox["32",
  FontSlant->"Plain"],
 ". The exact values of the integrals are given for computing the error."
}], "TExerciseDirectionsCell",ExpressionUUID->"fd543ef3-0214-4e3d-8bbd-\
6c47b033db54"],

Cell[TextData[{
 StyleBox["49.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "4"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         SuperscriptBox["x", "5"]}], "-", 
        RowBox[{"8", 
         SuperscriptBox["x", "3"]}]}], ")"}], " ", "d", "\[VeryThinSpace]", 
      "x"}]}], "=", "1536"}], TraditionalForm]],ExpressionUUID->
  "a819da72-cc1d-402e-ac58-592b8a712c6c"]
}], "Problem",ExpressionUUID->"417fbb7a-ed91-4108-a9f1-52c9c3474db4"],

Cell[TextData[{
 StyleBox["50.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "1"}], 
      RowBox[{" ", "e"}]], 
     RowBox[{"ln", " ", "x", " ", "d", "\[VeryThinSpace]", "x"}]}], "=", 
    "1"}], TraditionalForm]],ExpressionUUID->
  "c140b05e-9ae7-462b-9d4e-a32e444b4ffa"]
}], "Problem",ExpressionUUID->"b5defb73-5c9e-4b7c-8d92-4359c3b7584d"],

Cell[TextData[{
 StyleBox["51.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{"-", "t"}]], "sin", " ", "t", " ", "d", "\[VeryThinSpace]", 
      "t"}]}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["e", 
        RowBox[{"-", "\[Pi]"}]], "+", "1"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"b13125b9-0dac-4faf-b4a3-49705548ed50"]
}], "Problem",ExpressionUUID->"10ea62a2-a54d-4624-b225-b7454feff64a"],

Cell[TextData[{
 StyleBox["52.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "6"}]], 
     RowBox[{"3", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "3"}], "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    RowBox[{
     RowBox[{"1", "-", 
      SuperscriptBox["e", 
       RowBox[{"-", "18"}]]}], "\[TildeTilde]", "1.000000"}]}], 
   TraditionalForm]],ExpressionUUID->"32ec5f64-4846-4645-9764-558391d7153d"]
}], "Problem",ExpressionUUID->"881e381a-8906-4dc9-8da7-f4862cbae045"],

Cell[TextData[{
 StyleBox["53.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Explain why or why not",
  FontWeight->"Bold"],
 "  Determine whether the following statements are true and give an \
explanation or counterexample."
}], "Problem",ExpressionUUID->"fd864a34-cab0-4205-9d88-e51c4d09f64a"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tSuppose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"3d308d93-74c3-4bb9-a4cb-784ab4a87ac2"],
 " is approximated with Simpson\[CloseCurlyQuote]s Rule using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "18"}], TraditionalForm]],ExpressionUUID->
  "ace3913f-e2e9-4313-bd7b-cc1e4cb374a8"],
 " subintervals, where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
    "\[LessEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "c2d932a2-9541-4266-813d-e6c30ba50b40"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "26ba5ed4-ab86-48ce-83af-0f1b5a30da8a"],
 ". The absolute error ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "S"], TraditionalForm]],ExpressionUUID->
  "7400d024-9d8e-41d3-9e48-1b3e7fcaf647"],
 " in approximating the integral satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "S"], "\[LessEqual]", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "\[VeryThinSpace]", "x"}], ")"}], "5"], 
     "10"]}], TraditionalForm]],ExpressionUUID->
  "daeff9ab-e4a1-45b0-a5a4-1a1f23e080e8"],
 "."
}], "SubProblem",ExpressionUUID->"f4bb82c1-d9de-44e4-97de-a2262cb4e5e6"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tIf the number of subintervals used in the Midpoint Rule is increased by a \
factor of 3, the error is expected to decrease by a factor of 8."
}], "SubProblem",ExpressionUUID->"85894a72-901e-41df-a90d-be5fe63e8e51"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tIf the number of subintervals used in the Trapezoid Rule is increased by \
a factor of 4, the error is expected to decrease by a factor of 16."
}], "SubProblem",ExpressionUUID->"b3d816b7-6b1c-486c-8795-fe73ee5ddaf0"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "8edfb79b-f5dd-47a5-9da3-6d89c4ba6550"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "f87a1709-7056-4a26-bf20-aaa5095faaec"],
 StyleBox["54\[Dash]57. Comparing the Midpoint and Trapezoid Rules",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Compare the errors in the Midpoint and Trapezoid Rules with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", 
    StyleBox["4",
     FontSlant->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "d0be6828-5843-48c6-82c5-3e675f7edf67"],
 ", ",
 StyleBox["8",
  FontSlant->"Plain"],
 ", ",
 StyleBox["16",
  FontSlant->"Plain"],
 ", and ",
 StyleBox["32",
  FontSlant->"Plain"],
 " subintervals when they are applied to the following integrals (with their \
exact values given)."
}], "TExerciseDirectionsCell",ExpressionUUID->"45325bd3-7065-40d3-a5f6-\
5ac45b42caf3"],

Cell[TextData[{
 StyleBox["54.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", 
       RowBox[{"\[Pi]", "/", "2"}]}]], 
     RowBox[{
      SuperscriptBox["sin", "6"], "x", " ", "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    FractionBox[
     RowBox[{"5", "\[Pi]"}], "32"]}], TraditionalForm]],ExpressionUUID->
  "82414cdb-d207-4f4b-8ccc-652581231a8f"],
 "\t"
}], "Problem",ExpressionUUID->"1f389469-e999-4f53-ba2b-e91794ccfdd5"],

Cell[TextData[{
 StyleBox["55.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", 
       RowBox[{"\[Pi]", "/", "2"}]}]], 
     RowBox[{
      SuperscriptBox["cos", "9"], "x", " ", "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    FractionBox["128", "315"]}], TraditionalForm]],ExpressionUUID->
  "25ab9bfd-071c-4d6b-b9c1-25584230fdc5"],
 "\t"
}], "Problem",ExpressionUUID->"4b7ae7b3-e75e-4701-9230-4819e4d0086f"],

Cell[TextData[{
 StyleBox["56.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "1"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", 
         SuperscriptBox["x", "7"]}], "-", 
        RowBox[{"7", 
         SuperscriptBox["x", "8"]}]}], ")"}], " ", "d", "\[VeryThinSpace]", 
      "x"}]}], "=", 
    FractionBox["2", "9"]}], TraditionalForm]],ExpressionUUID->
  "8c5c1bc7-4410-4d95-8b3a-4c0a381c8012"],
 "\t"
}], "Problem",ExpressionUUID->"48476549-ae77-4902-a0ea-3d3ada2ba8c4"],

Cell[TextData[{
 StyleBox["57.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{"ln", " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"3", "cos", " ", "x"}]}], ")"}], " ", "d", "\[VeryThinSpace]",
       "x"}]}], "=", 
    RowBox[{"\[Pi]", " ", "ln", 
     FractionBox["9", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "92d9c192-4129-495b-9541-7583a80360f7"],
 "\t"
}], "Problem",ExpressionUUID->"2e62e072-d3fe-4cf9-9871-38492eff7569"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "77f4f415-e88a-4695-b2ea-395328d67dc8"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "2d4977e7-3059-4b6d-81fd-768e4b2b0306"],
 StyleBox["58\[Dash]61. Using Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Approximate the following integrals using Simpson\[CloseCurlyQuote]s \
Rule. Experiment with values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "9a485695-1818-4af4-9e92-72da0ce0da46"],
 " to ensure that the error is less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"729e687f-cadf-4685-aa81-23a09329a1d0"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"c7ee7980-3238-48d0-a690-\
f420f6f2897f"],

Cell[TextData[{
 StyleBox["58.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", 
       RowBox[{"2", "\[Pi]"}]}]], 
     FractionBox[
      RowBox[{"d", "\[VeryThinSpace]", "x"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"3", "sin", " ", "x"}]}], ")"}], "2"]]}], "=", 
    FractionBox[
     RowBox[{"5", "\[Pi]"}], "32"]}], TraditionalForm]],ExpressionUUID->
  "73af2636-3dc8-47b3-b63a-121e37e020d1"]
}], "Problem",ExpressionUUID->"a4e9b673-5abf-4a70-bbcb-3f95822e0712"],

Cell[TextData[{
 StyleBox["59.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{
      FractionBox[
       RowBox[{"4", "cos", " ", "x"}], 
       RowBox[{"5", "-", 
        RowBox[{"4", "cos", " ", "x"}]}]], "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "3"]}], TraditionalForm]],ExpressionUUID->
  "13354ea9-e870-44c0-8be5-5b2b550162aa"]
}], "Problem",ExpressionUUID->"2eb1ac76-a68a-490c-940a-6f08607d3083"],

Cell[TextData[{
 StyleBox["60.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{"ln", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"cos", " ", "x"}]}], ")"}], "d", "\[VeryThinSpace]", "x"}]}], 
    "=", 
    RowBox[{"\[Pi]", " ", "ln", " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"2", "+", 
        SqrtBox["3"]}], "2"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "f08198a5-f10e-48b6-a448-a4de2faa6011"]
}], "Problem",ExpressionUUID->"a055391b-8088-4be4-a258-1f5c817959b4"],

Cell[TextData[{
 StyleBox["61.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "\[Pi]"}]], 
     RowBox[{
     "sin", " ", "6", "x", " ", "cos", " ", "3", "x", " ", "d", 
      "\[VeryThinSpace]", "x"}]}], "=", 
    FractionBox["4", "9"]}], TraditionalForm]],ExpressionUUID->
  "d367bdd8-f023-4cef-9789-a1dabff60903"]
}], "Problem",ExpressionUUID->"56c3af7d-44fc-4f0a-80fc-87421f76a3a8"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "7501394f-2cb7-435b-8710-1871d13d45fb"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "d1a3d30c-8ceb-4c17-81d1-caca53869727"],
 StyleBox["62.",
  FontWeight->"Bold"],
 StyleBox["\tPeriod of a pendulum",
  FontWeight->"Bold"],
 "  A standard pendulum of length ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]],ExpressionUUID->
  "dd8eb96e-7c52-4214-be5f-d92473cfbafa"],
 " swinging under only the influence of gravity (no resistance) has a period \
of \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"T", "=", 
           RowBox[{
            FractionBox["4", "\[Omega]"], 
            FormBox[
             RowBox[{
              SubsuperscriptBox["\[Integral]", 
               RowBox[{" ", "0"}], 
               RowBox[{" ", 
                RowBox[{"\[Pi]", "/", "2"}]}]], " ", 
              FractionBox[
               RowBox[{"d", "\[VeryThinSpace]", "\[CurlyPhi]"}], 
               SqrtBox[
                RowBox[{"1", "-", 
                 RowBox[{
                  SuperscriptBox["k", "2"], 
                  SuperscriptBox["sin", "2"], "\[CurlyPhi]"}]}]]]}],
             TraditionalForm]}]}], ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "007824c6-e1bd-4fe1-bd72-d18fe7301417"],
 "\n\t\t where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "=", 
    FormBox[
     FractionBox["g", "L"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "50fe582d-2252-4b03-9847-b4e79f8b438f"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["k", "2"], "=", 
    RowBox[{
     SuperscriptBox["sin", "2"], 
     FractionBox[
      SubscriptBox["\[Theta]", "0"], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"0a1b0942-00b6-4267-a5db-fdc6a6e25198"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "\[TildeTilde]", 
    RowBox[{"9.8", " ", 
     RowBox[{
      StyleBox["m",
       FontSlant->"Plain"], "/", 
      SuperscriptBox[
       StyleBox["s",
        FontSlant->"Plain"], "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "2a1a90af-a379-4edb-86f6-6039e4edb291"],
 " is the acceleration due to gravity, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", 
    RowBox[{"\[VeryThinSpace]", "0"}]], TraditionalForm]],ExpressionUUID->
  "4bc48cac-9206-499b-a010-5bf7a1c62f0a"],
 " is the initial angle from which the pendulum is released (in radians). Use \
numerical integration to approximate the period of a pendulum with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", 
    RowBox[{"1", " ", 
     StyleBox["m",
      FontSlant->"Plain"]}]}], TraditionalForm]],ExpressionUUID->
  "39603206-3e5a-4051-9469-84a678bfad07"],
 " that is released from an angle of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", 
     RowBox[{"\[VeryThinSpace]", "0"}]], "=", 
    RowBox[{
     FormBox[
      FractionBox["\[Pi]", "4"],
      TraditionalForm], " ", "rad"}]}], TraditionalForm]],ExpressionUUID->
  "4046216b-b086-482f-8060-ed72e3cf3c2e"],
 "."
}], "TProblem",ExpressionUUID->"302ec471-eddd-4b06-a238-9cfbb8b4c10e"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "eed74eae-e879-41d8-bbed-e0e87925f627"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "583f6b81-8d40-4963-bcc3-ceaa21352af6"],
 StyleBox["63.",
  FontWeight->"Bold"],
 StyleBox["\tNormal distribution of heights",
  FontWeight->"Bold"],
 "  The heights of U.S. men are normally distributed with a mean of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"69", " ", "in"}], TraditionalForm]],ExpressionUUID->
  "055842c7-2420-4431-9a25-d91d20e48771"],
 " and a standard deviation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", " ", "in"}], TraditionalForm]],ExpressionUUID->
  "c1cc31ae-2e79-4a75-a799-defd3f4c0517"],
 ". This means that the fraction of men with a height between ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "f9dcd998-feeb-4861-b70e-616a7b5e3b51"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "044b0fd5-a935-4f60-ade3-9f01c69ee4d6"],
 " (with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "<", "b"}], TraditionalForm]],ExpressionUUID->
  "93ec02f1-43a5-4a2c-b627-63bbd420050b"],
 ") inches is given by the integral \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          FractionBox["1", 
           RowBox[{"3", 
            SqrtBox[
             RowBox[{"2", "\[Pi]"}]]}]], 
          RowBox[{
           FormBox[
            RowBox[{
             SubsuperscriptBox["\[Integral]", 
              RowBox[{" ", "a"}], 
              RowBox[{" ", "b"}]], 
             RowBox[{
              SuperscriptBox["e", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "69"}], ")"}], "/", "3"}], ")"}], 
                  "2"]}], "/", "2"}]], " ", "d", "\[VeryThinSpace]", "x"}]}],
            TraditionalForm], "."}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "e92c4697-93a3-4539-99f6-046dac4dc7fe"],
 "\n\t\t What percentage of American men are between 66 and 72 inches tall? \
Use the method of your choice and experiment with the number of subintervals \
until you obtain successive approximations that differ by less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]],ExpressionUUID->
  "d936d646-4e1f-4f58-a37a-3d0accbeba6a"],
 "."
}], "TProblem",ExpressionUUID->"9e30ac7d-eec0-4cf0-9337-559b9b585b5e"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "e61ad995-898f-42a7-b97a-c4383282b725"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "3651d91b-bf64-47d7-b41e-4ede77776194"],
 StyleBox["64.",
  FontWeight->"Bold"],
 StyleBox["\tNormal distribution of movie lengths",
  FontWeight->"Bold"],
 "  A study revealed that the lengths of U.S. movies are normally distributed \
with a mean of ",
 Cell[BoxData[
  FormBox["110", TraditionalForm]],ExpressionUUID->
  "98af36a5-240d-4892-8e50-4a701c4294a2"],
 " minutes and a standard deviation of ",
 Cell[BoxData[
  FormBox["22", TraditionalForm]],ExpressionUUID->
  "edf9f937-10d1-4807-908a-258ebc807dba"],
 " minutes. This means that the fraction of movies with lengths between ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "d786c2e3-5780-4012-9fb5-7334ae92c92a"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "979cc538-b058-4b6f-917a-10b1fc8bf98b"],
 " minutes (with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "<", "b"}], TraditionalForm]],ExpressionUUID->
  "8e107d94-645d-4072-a5f3-d83cb6a917d4"],
 ") is given by the integral \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          FractionBox["1", 
           RowBox[{"22", 
            SqrtBox[
             RowBox[{"2", "\[Pi]"}]]}]], 
          RowBox[{
           FormBox[
            RowBox[{
             SubsuperscriptBox["\[Integral]", 
              RowBox[{" ", "a"}], 
              RowBox[{" ", "b"}]], 
             RowBox[{
              SuperscriptBox["e", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "110"}], ")"}], "/", "22"}], ")"}], 
                  "2"]}], "/", "2"}]], " ", "d", "\[VeryThinSpace]", "x"}]}],
            TraditionalForm], "."}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "3e8784dc-c6d1-46c2-9776-2f061d2c6eeb"],
 "\n\t\tWhat percentage of U.S. movies are between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "hr"}], TraditionalForm]],ExpressionUUID->
  "c67498e6-f6af-454c-a6e4-182f04814aed"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.5", " ", "hr"}], TraditionalForm]],ExpressionUUID->
  "2976085b-b461-47de-94b9-5a8eb96ce542"],
 " long (60\[Dash]90 min)?"
}], "TProblem",ExpressionUUID->"784407a4-46f5-4395-a506-142ced82d0f3"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "a3693825-050c-4dc5-9cb1-fd6c97f1eb10"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "66e83648-63e8-4e0e-ad2e-f003cdc4b18e"],
 StyleBox["65.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["U.S. oil produced and imported",
  FontWeight->"Bold"],
 "  The figure shows the rate at which U.S. oil was produced and imported \
between 1920 and 2005 in units of millions of barrels per day. The total \
amount of oil produced or imported is given by the area of the region under \
the corresponding curve. Be careful with units because both days and years \
are used in this data set."
}], "TProblem",ExpressionUUID->"d8956213-415f-4add-b8f4-c60d5d93093d"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse numerical integration to estimate the amount of U.S. oil produced \
between 1940 and 2000. Use the method of your choice and experiment with \
values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "59340f95-d02e-4075-bbf8-c973386e81ff"],
 "."
}], "SubProblem",ExpressionUUID->"60e84444-921c-4606-9996-4d314be3b696"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse numerical integration to estimate the amount of oil imported between \
1940 and 2000. Use the method of your choice and experiment with values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "2d4a4ef2-5f21-42d5-96de-e3916a7278a8"],
 "."
}], "SubProblem",ExpressionUUID->"80d54069-10d2-4d77-bd9c-1acea1c38132"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3WGQFeWd9/0UxtSzqY3Z2oqG8oVVzyvzIuWWlBLNlpRPUreQqkQ3PDGJ
7obd29xCcO/ECHoLbKyC240OEr31CYsYlSxoCrI6KxoFRFkZS1jGaNQMhJms
VRJFJpOgmBIoGaH6Of9meujT57r6dPfp7qv7398XHxlh5pyrT58+c12/8z//
6/++5vrZc6d85CMfWfh/tf4z+7/f/P8sWPDfF/+/f9H6nyu/t3D+vO9d+z++
9L0br5137YKLrjmt9Zf/46Mf+cgPTv/IR1p/fOTEiRMeAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjs3bvX+RgAAAAAAAAAAL05cvSo
t2jxEufjAAAAAAAAAAD05uWXX/a+eOmlzscBAAAAAAAAAOjNvasf8M4++2zv
yJH3nI8FAAAAAAAAAJDd3Llz/bx328CA87EAAAAAAAAAALKb/rmL/Lx3xR0r
nI8FAAAAAAAAAJDNm2++6We94ltfv9L5eAAAAAAAAAAA2TyxadNk3vuZc891
Ph4AAAAAAAAAQDa33bp0Mu8VUu/rekwAAAAAAAAAgPRmzZzZlvf29/c7HxMA
AAAAAAAAID3p4RDOe29YcL3zMQEAAAAAAAAA0nn55Zfbsl7xxUsvdT4uAAAA
AAAAAEA6965+oCPvFUeOHnU+NgAAAAAAAABAcnPnzjXmvS/seMH52AAAAAAA
AAAAyU3/3EXGvPfH99zjfGwAAAAAAAAAgGQOHjxozHrF3/3DPOfjAwAAAAAA
AAAk88SmTda89zPnnut8fAB0G9293du6fq330Lp1fi/xDU9u8Z56ecT74/HO
79371Bpv+Yb/dD7mpMYP7PeGdz7r9ff3Tx6f/CnHKPtkjowf7/k+Dg8+6H1t
5jT/cxpfXbY+1W0eOfKe//j/dNlc75wzFnlbj7l/zNB+foae3+DdffX53gXr
9jgfT1X08pyHTlwrAAAAQLvbbl1qzXvFm2++6XyMQJMdePBq/1qUbGPOtJMZ
Rzfy/dfveD3+tod+Mnm7XW9v6iXe6v0f5Hdc48PerpULvBln2V97xKzv3Opt
eG305M+8tdG76lNTvY+dd3el851jo0Pe43fd6H1p+qdjjy0wZcYc77afbfH2
vHss/f21HpOO25v/WOzPjI4MeYOP/9S7cc6stp8758yrvS2HentcD2/rS/yc
Mpk9+1pv0YrV3sPbf5Xt8VBA3iOQ3Gr5dbPbz+vDXa7npsjwnIdOhV0rE78b
5fde0teu4HfZzcPvO39cAAAAAPGtr18Zm0VIXZrrMQJNJrVsixYv8b417axE
+eFp58/1v/9ftndZ844NeP92T5930+V/EXt751+zzFtxxwrv4X055b2t+5Xc
1nRftl7ieeeShWgdl9SWGc/JhZd6Nyy43j8vkrPacu6v3PFUqiz78ObFndnX
ZQ8Ya6MnM4yYx7XX+l55rsp7iEmfq93Ic28y79dufNi76RP2x23K0u3ux1gB
qZ7z0Knoa6V1+/KZE/n9uHD6md1fq6Ze4n3n9vv9z25sfv0d948PAAAAGk9q
d7vNYyUPdj1OACdJnmbLSiWvy5qNHXjm/o7bldu7d+jdfI/h6GDHOl3uZ9Uz
r7TlNVIju/GH3y4sl8z9vBgyKD93uGaZdf3/9kubjfmwHF/SbP344I8SZ1/y
eeedW7d62wYGvF8su7zwx3Xk8RXWXFs+gy/jeGHHC/57itJPIq4eesqspfm9
31BVExmTMD0vqO89Kc1zHkqVfK28+q83WV+bLrjzOZ57AAAAqJxuvRwC9HQA
quPQhn80Xqdf3rS/p9t9+6F5bbfXt+9I7mN/fu6Utvs4fdoyb9ehcev3H937
jLGO6/ahw87Pg+1xC3TtpzHhjfX/nP3nDbXSSXtXvrjgsx15b951079ZfHGq
XFl6CT/8vS9afxdV6bwXylC/SH3vhB6e81CojGuldR8/Pu8vO1/LzljkDX5Y
gccAAAAAiJD92JLkvZILux4rgAmWz+XPf+VPvd3uWxsn6zFlHZt7j1zDuBNl
yoa1ds/HmhNj9p6h13HQ9zbqqq0JMvzW47PjvjX+Z4lln7uk9xn0hS4y731r
ZWe/oCT3I3XsptrgyvbyyJnUYm/6m9MblffK8zFxXWbG5zz0Ketaid4HdeV6
pHrtAQAAqIEnNm1KlPUKyYVdjxfABFPem8d+akcHJ+vmiljHRrO/VPuujQ97
d330VA1XohzUxXk4O/t+PdH8NTivRdRZm85HEVmq6bP3SftG2OrYpyzZ6P7c
l6Ajw9KcR0zU7GrPtFGMMq4V8l6leO0BAAAKddunLUryYddjBnDCmDPmktWF
MtUi1rEda/K09xE6bufZl2W/oF7WjFKn9ugVHy8tUzDlvXn3RbblvYmeq63H
+JHPf7KRNb5Nq+8N+rw4v65RO2VcK6b7IO/VgdceAACgTZJ92qLYtw2ohp4y
tC6CNW0Zea/UrqYd8+T4HGdfr99+kbEWd/3YsdzPbVH1zGXU9/b63oSpH4So
Sj+PohgzLKV5RLiu3fV1jfop41oh79WJ1x4AAKBR0n3aoti3DaiAgup7w2va
vNex1trVlGusIA91us4O9b1oO5b5j/V+25Z9gVL1vkiojP69vb43YevpoD3v
FU3Iew9vXqz+GFE8+jkgLV57AACAVtM/Z6hNS4B924AKsOS9eXwWv8j63hcX
fLb32tWJrHXKtfc5W2fbMsgvb8qnBrfXmlbJ1rPcTxXre7PuTXjk6FHj4/Lh
2Dupnzfyc3J78rMHDx7M/fkU3G54zHXr5+A/Ri3R44jzxvp/7szPMmYuSZ/z
ZZ7juDHJfQgXr2HBeQrU6RhdXSt51vd2e676x5fi+Rw+n3mfx/Bt53Uei3o9
TfOan+drT3C+kr7uAQAAFCnNPm1RkhO7Hj/QdEX1cyiyvlfYckxxwbo9yW9r
7xtOa6pM6/48ejlMsmSccRnGsdEh7+k1S71vTTvLrwVO8vjUob43TfYtz9+h
5zd4N13+F229QuSxWTvnvPbn253Pxd7v2y9t9lbf9LfejLPMz9dZ37nV2/Da
aObHRW5/+XWzO8/xjDnekvXb/ewg6CtpyyMG7/mRt2jxEv992Kh/urOz1jzu
+xetWJ363I/u3u79dNlc42Mkx3Hz/Y95e941XxO/XG4+r6edP9e75UftY1v+
rDmHyfKcL/ocj44MeY/fdaP3pemf7uhXc+CZ+71lX5jWcT9fueOpQl/P5LrY
+9Qa78Y5s8yvKxPPuaRjKPsY87hW8tBL3jt+YL83+PhPvRu+fIH/c9987VS+
KufnVw8vn/y38PEtemq38faO7n3G+JjIa+u9Q+8mOh65fuQ8yvun4etH/n7j
D79tfK7M/sEqb9eh8UznsIjX0yyv+Xm89sjz3HQ9yW3I696Okf/wfvLdBb3v
oQsAAJBS2n3aoti3DXCsoPreovPeE29ttK73/Pu8ZlmmtWSpLMeQa78Fy15w
p09b1nYfQYbgr3UzZBB1qO815b3Rnw+yBOP10Lp/23Pu5uH3O+5PcpSF089s
+74Zs7/r56TRPMZ/rGct9Ta//k7yx2NswFs5s30PunNm3+z9r/nX+rnl5O1O
774XYDg/SpJD7Vq5wLthwfXWxyNxjwzDMfzZ5XP8YzDd9lfWvdr288be1zHC
x93rc76Icyy5d5CbGZ+Dres5mj2Z7mPww/xfrw4PPtg2LhmTZPsPrVvX8RjK
vz28z5xPOTnGHK+VXmWp7w2eq6ZcMLjWRh5fEfs7seNYEjzO4srHRmLHZLt+
Dm/rS3RN3jL4X06utUDW1/wfLpuR+bUnePzDfamCfFfWRffe8N+s5xkAAKAM
WfZpi2LfNsCtuu7XJmw9HcJsNU2VkKH2Ni1br+PJGuKxAWMNXZIMIqzy9b1H
B2Nzb1udln8fZyzya6xMfZZta/HoWE3Zg+QXpjHNf3K4+/G8tbE9e2uNMXr7
0XwuyXPM9BjHPQfk+bV54WXZsonI+x3SVyX8Ho3ctum8RDOrF3a84NflRXOZ
Kf/0Y//ftg0M+H/u3Lr15GOU03M+73Mcl13L+d20+znjbRX9GuI/lyL9SaW+
MfoYvf3QvI5rM/q+oZNjLOha6UWavNe272ZA8tIt89t/F8rn52w5Zd++Ix2P
yWkXXhpbvxGtLY3WQLcdR+s6lhrjJOcw0K1/URGvp72+5svjLq8tqV57LI+h
PMei5z56zOS9AACgTCvuWJFoHtet3oB92wCHarhf2yTLfmRRUjfTy+fli2Jb
x+f9+WFbLu6vH1vr/r/7h3nevasf8O6++vzEGUSUq/peya2T1KK/uuyvjY/B
9TtOPtbSg1FqFU11VW05yi0rO2rBOtbikXHKY2it1z466N310c6MIrYnSaRm
WzJr62MwNmDMQGzPMbluH/n8JzvGH/scMJyXrtlEa1xtWcrybeaeldHvO9uc
P4nEn8PP4zlfwDmWz40P/nbUr39tq2NsPcfb7mvGHG/NS7+d7PW5d9W8jtvO
tSdMJJePu7a7nYPSj7HAayWrLPW90vdC5srRXDf6mrvqmVcmn4e290va7vPa
+9pzyNbj1fU9lhMn83G5frq9XsrnbDY8ucXbu3evN7zz2Y4a6zA/hy7pWhO9
vuaH9wpI3QMkdEzRz9q0Pc6hGmnyXgAAUCbbPm2zZs70tq5fO/n/X7z0Uv/z
fp8591zj90tu7PpYgKaqc32vr7U+jVtDRte2VerxYOsnm3c9WdK+tZmyvglV
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
kQTPB2N/a8u+WLZ95ePeKzJmiMHPXXuft/n1d9ruQ95vWTj9zK6PZZKceujO
Pm/5s6/H/lzX53zB51ikqZMNHqes124cW029qeey8fPnKet78zzGMq6VrDLn
vVmyW8N7iUXW98btB2q7fWsOX8K1ZjqGXut74157ws/jJH2zwrdN/14AAFAF
1PcCNWPpKSAu/OG/W/cWCUhWGc5kRJr+s6b7tn7+0lB75K9Hu9QHyro32s9P
1qZx/YVTjSsPrWPrGGPLV+54qvt9ts6haX/vpGtX0/45SX+2o544wz5cqe8j
ad7R6/0kyC/aGPrZxtahR2r2JCvYdWjceo5t9bFSvx3OSkd3b/d+fsPXjN8b
jGnu3LneFxY80pYhHN7WZ779a5Z5T7084o3s2eE9vWbp5DFOmTHHWJsuz1mZ
C3S8dlgynChjvXtMjmzsDbxko3/dHBsd8h7+3hc7biPzc77Ic3zCnDvG9kE3
9CotKu8NHqNVz7zS8VwwkXxVvk/6roffKyv8GEu4VjKx1B4n+qx+63dYmmvC
Z/h92e1nesp7zz75HmpcXXf42o57vzU45iKvNdHra37i156JXDuc4ca+px7J
6rP0rwIAAMgb9b1ADbXWx7Z9of110+ybvZvvf8x7YtMm74UdL3g7t271/u2e
Pu9b0zrXrqn2GrNkzdZ6L1PWMuG08+f6PRcOHjzof++Ro0f99dbGH37b+P1x
fRxSj6vo89Bag86/a6M3+NtRP6eSY/tw7B0/S7Edn+Qa3da6AVvOd86CtbHr
8ZHHV5jve+n2XGqR5Pz9Ytnl9udl63z8y/Z8aq6tx3Ltfeky/tZztCPTaZ2/
RU/tbntMZC/2aDaRJPOJy9fSklw2fPumDNQmyGpM9YqxOVHCzDean8Q+fy37
E7bdxmUPtJ3HrM/5Qs+x5fzK8dt6cJhq+ru+viWQ9rkw9PyG2OfmZN5b1jEW
fK2k1nrOrJ1znv3xab1eb3ht1Houwr3rwz9je423/Yy8ZtryUnm9Nf3+sd2P
KbcPXLf2P7zh0dHJsbz6rze1jyNp7XSBr6d5vOYnfe2RsZrq1GeueaHjeR89
D7ZrAwAAoGzU9wL1ZfuMdhLnXxNT1xPD9Nlb62cdQ/U7kkH3LV5grAXslk2E
67tyGVfO5HPspiw9Cam5TJKBSt51w4LrE93P9M9ddKq+6K2N3g1fviDRWKQu
rmvtten4LT1G4sjz4IJ1e9Ld1/iwd/fV5ye7/dnf9TP3ROvu1u3aMqoLL7+6
4zH/6rL1ifMFyQKkXrLbeCXXked5tP5MrtM1L/3WfhxjA13zWMlD5DPLpvxi
9g9W+bXAcY+T/JypHt0kyfPH1hd1crwT/aszP+eLPsdJssmJOtN7h971f8Z2
39GfSduXJ/pc6Dauyc8fWPaJ9B//1uumfA6k7GMs/FrpxvJ5lCSkD7Y8X+Xx
6PpcvWbe5GtT8DPdfi/+2eVzTr2eJczG5XktOWvc63SS3w3yeYE0vWjjMv/U
11rOr/lJX3uC7zc+H1vPYXk//aF167zVN/1t+8+T9QIAgAqhvheot/ED+70t
a+/yll83O9E687afbena8yFWa/0Vrns6Z/adsTVLUnMW7pEnfye1ZbJOsq5x
W+upr15/j59DFTGuooyODPmfme62hpY1r6wXpf436W1LPdS9qx/wyToz+DMQ
/fu1A/v8n5MMZd1P/k/HzwR/F/1ZW81anLdf2mwcT3Af8md0fPJnkhw/+nza
cd+a2OMO/ynS1PrKY/X4XTd6c6ZNy/3aCfYSNGUUyzf852Q9mVwv8h6A1L4n
vS/5uY7P6reuoVnfuXXyeRB8n+QXmXOxsQHjdXvahZf6OUuq6611ve5aucD7
0vRPt41Z6gyDcWV9zhd9joNrKnz/pmtMvg4ek71PrTEeR/SazHL9RR/XHUva
+3YErzcdx9U6n+HePnIeJ/PBo4Md4y3rGIu8VpKc1/BzLO41JvoYBM9X22tr
+DEI3uOTXP3H99zT8bpseuwn3xeU93gmfiZubNHXc9t+bVI3G70e/Kx4xerU
r9F5X2uFvOYneO2ZvO/WtXTVw895b775pj9vkc9JRX+/y3Xzndvv7+mxAgAA
KAL1vYAukv/K2iQg/RKCngl5kv4E0qcgyXji7l/WVNHxJrndXsdVBjmW4JiC
46vK2NCdPDeLvN0ingtB/5AyHhu5n7zuy9V1UdQ5roKkx1bl16Qir5Wmidb3
RnsqB9dzUY+15msNAACgiqjvBQAAAPSy1fe6HhcAAACKQX0vAAAAoFe3+l4A
AADoQn0vAAAAoBf1vQAAAM1CfS8AAACgF/W9AAAAzUJ9LwAAAKCXqb53ZPy4
83EBAACgGNT3AgAAAHr9ZvHFbXnvOWde7W095n5cAAAAKAb1vQAAAIBSYwPe
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
RT85t/KeNe9X60Teqx/9e3Uj79WPvFc36nv1Y72km3x2irwXQNNQ36sf8xf9
mL/oRt6rH/17dSPv1Y+8Vzfqe/VjvaQf6yUATUN9r37MX/Rj/qIbea9+1Pfq
Rt6rH3mvbtT36sd6STfqewE0EfW9+jF/0S84v/Rz0Im8Vz/qe3Uj79WPvFc3
6nv1Y72kH+slAE1Dfa9+zF/04/1q3ch79QvX95L36kPeqx95r27U9+rHekk/
1ksAmob6Xv2Yv+jH/EU38l79uIZ1I+/Vj7xXN+p79WO9pB9zLQBNQ32vfsxf
9GP+oht5r37079WNvFc/8l7dqO/Vj/WSfv39/fRzANAo1Pfqx/xFP/pR6Ube
qx/9e3Uj79WPvFc36nv1Y72kH/UxAJqG+l79mL/ox/xFN/Je/ajv1Y28Vz/y
Xt2o79WP9ZJu8l466yUATUN9r37MX/Rj/qIbea9+1PfqRt6rH3mvbtT36sd6
ST/WSwCahvpe/Zi/6CfnVnpS0c9BJ/Je/cL1veS9+pD36kfeqxv1vfqxXtKN
+l4ATUR9r37MX/Rj/qIbea9+XMO6kffqR96rG/W9+rFe0o/9TgA0DfW9+jF/
0Y+sSDfyXv3o36sbea9+5L26Ud+rH+sl/VgvAWga6nv1Y/6iH+9X60beqx/9
e3Uj79WPvFc36nv1Y72kH3kvgKahvlc/5i/6MX/RjbxXP+p7dSPv1Y+8Vzfq
e/VjvaSf7HVCfQyAJqG+Vz/mL/qR9+pG3qsf9b26kffqR96rG/W9+rFe0o/1
EoCmob5XP+Yv+jF/0Y28V79wfS95rz7kvfqR9+pGfa9+rJd0k7kV6yUATUN9
r37MX/Sjf69u5L36sQbRjbxXP/Je3ajv1Y/1kn7MtQA0DfW9+jF/0Y/5i27k
vfrRv1c38l79yHt1o75XP9ZLulHfC6CJqO/Vj/mLfsxfdCPv1Y/+vbqR9+pH
3qsb9b36sV7Sj89DAmga6nv1Y/6in5xb2XOW+YtO5L36Ud+rG3mvfuS9ulHf
qx/rJf2ojwHQNNT36sf8RT/mL7qR9+pHfa9u5L36kffqRn2vfqyX9GO9BKBp
qO/Vj/mLfsxfdCPv1S9c30veqw95r37kvbpR36sf6yX95LOQ9HMA0CTU9+rH
/EU/+lHpRt6rH+/Z6Ebeqx95r27U9+rHekk/5loAmob6Xv2Yv+jH/EU38l79
6N+rG3mvfuS9ulHfqx/rJd3ks1OslwA0DfW9+jF/0Y/5i27kvfrRv1c38l79
yHt1o75XP9ZL+rFeAtA01Pfqx/xFP+YvupH36kd9r27kvfqR9+pGfa9+rJd0
o74XQBNR36sf8xf96N+rG3mvftT36kbeqx95r27U9+rHekk/1ksAxLHRIe/h
7b/q+XZGd2+fnBfIn4O/HfX+eNz98YVR36sf8xf9eL9aN/Je/cL1veS9+pD3
6kfeqxv1vfqxXtKP9RLQbH7O+70v+tnnx867O1M2K/OBV//1Jm/GWWdP5qht
pl7iXbf2PyqT+1Lfqx/zF/2Yv+hG3qsf17Bu5L36kffqRn2vfqyX9GOuBTST
5Lw/v+FrbbnslMseSJ/Jjg97Pz7vLydv45wzr/b+Zfvr/hzh7Zc2t/3baefP
9bYec3/s1Pfqx/xFPzm3/f39fD5JKfJe/ejfqxt5r37kvbpR36sf6yX9ZK1E
PwegQcYGJut5o9LmvTIPePSKj0/+/OnTlnmDH0a+b3y47XvOOWNR5/eUjPpe
/Zi/6Mf71bqR9+pH/17dyHv1I+/Vjfpe/ZqyXhoZP+7dPPy+N23oHW/m7ne9
vn1HvF2Hxp2Pqwysl4DmePuheZN1tivuWOEtnH5mT3nvWyuvbPv524cOm793
bKCt18OUJRudPg7U9+rXlPlLkzF/0Y28Vz/qe3Uj79WPvFc36nv1075ekpx3
yq4/eFMefr3dE7879aeQ72n55mvveav3f+BnwVXpQ9kLeS+d9RLQHEf3PuNt
fv2dyf8/Pvij7HlvNMOd/1js9/9m8cVt9zX/lT85exyo79VP+/wF7DerHXmv
ftT36kbeqx95r27U9+qneb0kme1krpuE7XtDeXCQCdepNpi8F2iwoZ9kznuj
tb3X73g93X11yYeLRH2vfprnLziJ+Ytu5L36het7yXv1Ie/Vj7xXN+p79dO6
XvLretNkvUmz34l/c1m3lgb1vUDDZc17x4e9uz56VtsebevHjnX9mZs+cepn
zp56SfefKQj1vfppnb/gFOYvupH36sc1rBt5r37kvbpR36uf1vWSsYdDXp74
nd//1/UxJsXnIYHmytzPIZITf+y8u/330eJ+Rt4j3vQ3p7f93F9tfMPJcVPf
q5/W+QtOISvSjbxXP/r36kbeqx95r27U9+qncb0k/XcLy3onbDkUn3tUCesl
oMEy1ve+uOCzmXozRHtApN0fLi/U9+qncf6CdrxfrRt5r37079WNvFc/8l7d
qO/VT9t6SXKF2F4MoT68veS99O8FUAsZ895ona687iW5v8ObF7f9nPSB2Hqs
/OOmvlc/bfMXdGL+oht5r37U9+pG3qsfea9u1Pfqp229FJvjtv4t+v3y+WTp
L3nz8PuncmDJiwOW23JRr5ZVf38/9TFAQ2Xq53B0sL0Pb4q8N3p/kve6+DwE
9b36aZu/oBN5r27kvfpR36sbea9+5L26Ud+rn6b1ktTcxvXczZLRSh4sWYX0
6/3ma+9NZsKujzUN1ktAg2Wp7z066F31qaltP5d4j8rI/SXa560A1Pfqp2n+
AjM5t/KeNe9X60Teq1+4vpe8Vx/yXv3Ie3Wjvlc/TeuluNpe6enrenwuyNyK
vBdosIx5b7S+N2vem+pnc0R9r36a5i8wY/6iG3mvflzDupH36kfeqxv1vfpp
WS/5/Rhs/RdqVo+bN+ZaQHNl6ufw1kZvxlnZMtvo/WXNe+fOnevX5UpWm+XP
6Z+7qG0M8v+9WHHHCm/bwIA/FxJ87f7rcN2YfO16PHxd3PkVwb9XZXx8Xcw1
7HpMfJ3f1yJ8DQf/XoWx8XUxr9NVGBNfF3cNy/mO/nsVxsnX2c+v/D9zLb1f
i+g17HpMWb5+ePuv7Flv6+9XPfOK8zG6Or/Ra9h19gSgZBnqe3vKbHOq75XM
Nno7Li1avKTttRQAAAAA6iTY2wmosvDzdMqjr9j79rb+zfVYXT42YfS/Axoo
Sz+HsYHc+veS96Ks33HMX/Xi3DYD51mn8HnlHAP1Y7puuZb12Lp+LecVlXXx
k4P2rLfl5794xPkYq8R59gSgVJn6OfTQv9dUGyz9dtKOW/oLSb8h6emY5s+A
zFfCvRzCn3vIYnRkyN/TQPpcCb4u9+vwn8HX4c8oyfl3PUa+zvc8y5/h+cuH
Y+9UZpx8nc/XI3t2TJ5fed2uwpj4Ot/rOXwNjx/Y73xMfJ3v67TMjYLzO7zz
2cqMka/zOc8i3LND5ubB31dlnHyd7doNhHtwy7mOfi9f1+tr05/BeknWxvKa
XZWxdjuGYN5v7ePQInvCV2HMrs6xkLkVeS/QYBn3a8urvvecM6/2thw6Xvpx
h/drk1ph5+cBuQtnRXXefwB24ToT12NB/tivTb9wVuR6LMif/O4NXqfZr02n
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
het7yXv1Cee9wzufPdmrIU3eS51v5ZH36kZ9r35VXi917NNGL4dMWC8BaBrq
e/Wr8vwF+WD+oht5r35cw7qF897f3/lg+qw3IHXBFTgedCLv1Y3+vfpVdb20
fuxYR01v8PWuQ+POx1cnzLUANA31vfpVdf6C/DB/0Y28Vz/69+oWznuPf+bv
jVmu//eyP1u32l/2cKsk8l7dqO/Vr6rrJes+bfRySC3oyUI/BwBNQX2vflWd
vyA/9KPSjbxXP/r36hbkvVvXr+2e4+59o3vmu/PXzo8J7ch7daN/r35VXS+1
9XIIff3N195zPra6oT4GQNNQ36tfVecvyA/zF93Ie/Wjvle3IO8dWbLCnN9K
vhv+mW6Zr/wbdb6VQt6rG/W9+lVxvbR6/wfm2t6WkfHjzsdXJ/JeOuslAE1D
fa9+VZy/IF/MX3Qj79WP+l7dgrz391d835zfzuvr/Dmp4e1W50s/38og79WN
/r36VXG9ZO3lwD5tmbBeAtA01PfqV8X5C/Il51Y+Z0g/B53Ie/UL1/eS9+oT
5L2pe/JK5tttD7dv3OJ9OPaO82NsOvJe3ajv1a+K66W2Xg4h81/5k/Ox1Q31
vQCaiPpe/ao4f0G+mL/oRt6rH9ewbpIV7b77AWtmG5vXShbcLfMVsxaerBNe
tPKkVf0nf1Z6Q1TgMdCOvFc3+vfqV7X10pZDxzv2Zwv+/ONx949XHbHfCYCm
ob5Xv6rNX5A/siLdyHv1o3+vbvK793fXLLHntN1uQ3Lbbr0dkuTBq/qpBS4I
ea9u1PfqV7X10rShd8y9HJ74nfOx1RXrJQBNQ32vflWbvyB/vF+tG3mvfvTv
1U1+9x7/zN+bc9i+tcluJ4/MN9wvmLrfXJH36kb/Xv2qtl7q6N07Ud87c/e7
zsdWV+S9AJqG+l79qjZ/Qf6Yv+hG3qsf9b26jY4M2bPXNLmrfG9eme9E7sv7
C/kg79WN+l79qrZeMtb2tkifB9djq6ugJwv1MQCagvpe/ao2f0H+yHt1I+/V
j/pe5aSXrilvlew2y+1JfW5ema+MQfaFc/0Y1Rx5r27079WvSuulkfHj1rzX
9eNUZ6yXADQN9b36VWn+gmIwf9GNvFe/cH0vea9C37jF3lch621Kra/8fF71
vmS+PSHv1Y36Xv2qtF7q2KuN3r09k7kV6yUATUN9r35Vmr+gGPTv1Y28Vz/W
IMrZMtn1T+dz+5LVSn9fuT2pJZaewJIFyx5tSfNg6nx7Qt6rG/179ct7vfTH
49l/dv3YMXPeu+sPzh+nOmOuBaBpqO/Vj7xXP+YvupH36kf/XsUkQ7VkrB+O
vVPeGJLUAmftLwHyXuWo79Uvz/WS34+hh1rcvn1HyHtzRn0vgCaivlc/8l79
mL/oRt6rH/17FZNaW0O2evzi+aWPxc+Xu/X+XbTS/WNWQ+S9utG/V78810uS
y0o+u3r/B5l+nry3GHweEkDTUN+rH3mvfnJuZR3C/EUn8l79qO/V6/hn/t6c
q0rfBVfjkr4PcZmv9AauwGNXJ+S9ulHfq19e66Wbh9/vOZ+d/8qfyHsLQH0M
gKahvlc/8l79mL/oRt6rH/W9SkluWtVMNS7zpcY3NfJe3ejfq18e66Wgj0M4
o911aDz17czc/W7H7ZD39o71EoCmob5XP/Je/Zi/6Ebeq1+4vpe8VxFbLwep
+XU9NvGNW+jjmxPyXt2o79Uvj/VSXhnt2a8ebL+N4HbJe3sS9GTh85AAmoL6
Xv3Ie/WjH5Vu5L368Z6NTtZeDlWpn42rP9680/34aoS8Vzf69+rX63rpm6+9
Z+7B0DL4YbrbCvr/Rkndr+vHqc6YawFoGup79SPv1Y/5i27kvfrRv1ehnb+u
bi+HsFkLzWOU2l/XY6sR8l7dqO/Vr5f10pZDx9vrcKNaf5/m9mx5r+zj5vpx
qiv57BTrJQBNQ32vfuS9+jF/0Y28Vz/69yo0r68evRJi+vh+OPaO+/HVBHmv
bvTv1S/reumPxy19HCK9GNLU5rbdXuhryZVdP051xnoJQNNQ36sfea9+zF90
I+/Vj/peXfyctE57oUkGbRqr9B92PbaaIO/Vjfpe/bKul2y1uCar93/Q9fb8
/Njy87IfnOvHqa6o7wXQRNT36kfeqx/9e3Uj79WP+l5lLPu0ieGdz7ofX1Rd
apErjLxXN/r36pdlvTRt6J3EWW9Qq9utJ4P8ex49IdCJ9RKApqG+Vz/yXv14
v1o38l79wvW95L01F7MH2u+v+L7/O9n5GFOMmX3bkiHv1Y36Xv3Srpesuayh
D0OHXX+w3q61XjjmZ5AM6yUATUN9r37kvfoxf9GNvFc/rmEdpI/D8c/8vTU7
3X33A9XMe1uOXzzfPG7Zz60C46s68l7d6N+rX5r1kvRl6JbnJqn1PfvVg35P
XunTsOfdY50/F7oP9mrrHXMtAE1Dfa9+5L36ybmVzxny+SSdyHv1o39v/flZ
ry0zbZF/k/Nb1bw3bt82v/7X9fgqjrxXN+p79Uu6Xlo/dixR7a7/fUlqfRNy
/fhoEPRkYb0EoCmo79WPvFc/3q/WjbxXP/r31tzeN2LresWO+9ZUO+8Vtn3b
pL+v67FVHHmvbvTv1S/Jeunm4fe75rLhPdX8OuCsGW8oI565+13nj48GrJcA
NA31vfqR9+rH/EU38l79qO+tsZ2/tuekgb61k+e30nnvopXWY5D6ZefjqzDy
Xt2o79Uvbr0kGe5kr4WYWl3pzRC9XWs9cNKaX/Zpy4W8l856CUDTUN+rH3mv
fuw3qxt5r37U99bUqv74nFcsWun/7q1D3utnurbjkGOtwBirirxXN/r36mdb
L+06NJ4ok5VaXtttt+XFKep65etwvTB6Q94LoGmo79WPvFc/5i+6kffqF67v
Je+tPv8cfeOW7lnvRB+EuuS9Phmz6Vikhtn12CqMvFc36nv1M62X/nj8RPc6
3Na/J91LzbrPm+nvdv2BrDdH1PcCaCLqe/Uj79WP+Ytu5L36cQ3XiOxd1q1/
w0Rdb/Aztcp7pT+F7ZhkTzfX46so8l7d6N+rn2m95Nfkdsl74+p6baTvw7Sh
d9p7RARaf/fwvvS3ie74PCSApqG+Vz/yXv3IinQj79WP/r01kaR/g6H3Qa3y
3pbjF883Hpf/9xUYXxWR9+pGfa9+0fVS19re1r+Z+vWiulgvAWga6nv1I+/V
j/erdSPv1Y/+vdXm97VN0r9B6n437+z4+brlvX4dr+0Ypf7X9fgqiLxXN/r3
6hddL81/5U/2vHfXH/w82PWYkQ55L4Cmob5XP/Je/Zi/6Ebeqx/1vRUm+WaC
/g1+7av0ejDcRu3yXiHHbDpuyb1dj62CyHt1o75Xv+h6KS7rdT1WZBP0ZKE+
BkBTUN+rH3mvfuS9upH36kd9b0X1rU3Wv2FiXzabWua9Mcfu1zu7Hl/FkPfq
Rv9e/cLrpeHRUWsfh/Vjx5yPFdmwXgLQNNT36kfeq5+cW1mH8H61TuS9+oXr
e8l73UvVvyHBHmZ1zHv9x8BW1xzaiw4nkffqRn2vfuH10i2D/2Xt2et6nMhG
5lbkvQCahvpe/ch79WP+oht5r35cwxWy9w3v+Gf+vnv/BvkeS/+GqDrmvT7J
dS05NzW+7ch7daN/r37h9ZL0bKCXgz7MtQA0DfW9+pH36sf8RTfyXv3o31sR
CXv1pq1vrW3eK3m27TFY1e9+fBVC3qsb9b36teW9Qe/ecA/f1teyh5vrcSIb
6nsBNBH1vfqR9+oXnF/6OehE3qsf/XsrIC7bDPdv2Lwz9W3XNu8Vtr4W8li4
HluFkPfqRv9e/dryXkvv3i2HjjsfJ7JjvQSgbh5at85bcceKzBYtXjKZ937m
3HP9/+9FkEegOsJrEJnLuB4P8hfOilyPBfkLr0G4hnXiGnbrwDPPd63rPX7x
fP/7stx++BqW38mujzeNP/7ssdgaX9fjq4pwjb7rsbgg18bv73zQr32XP0dH
hpyPKU/ha3jbwIDz8SB/wXrpvkef7KztneB6jOgN9b0A6kZ6MAR5bRUEmS8A
AEAd/P6K78dmvfLvrsfokq2fsfy967HBrR33rfHfCzE9P353DWsC1M+S9dut
e7W5Hhvy4zrDAYAkvvX1K51nvOS9gHvB5wwBAMlJXhWX9b7x3f/tfIyujSxZ
YX18Bu/5kfPxVUmTfhdLntt1X8OL5zsfJ5DGxU8Omut7H33F+diQD/o5AKiL
rP0cbrt1qf/nDQuuN/ZzkL/P8qe8hrr+rAZOkc/TyefOgt9vwzufdT4m5Hdu
gz/Dcxhtn6FssuBchnuyyNfRc8z/1/f/g6/D1/DInh3Gn0MxTsxaWEi/gvD5
Cz4LLlmg6RquA2u/i9bj53psrkV/DwfXsFZyvLaaXqN5fc7H3Cs5p+GsyPV4
kK9gvfTzXzzi57q2+l7X40S2cyt/hq9h4TrDAYAyhPdrk94QrseDYs5x8LuN
/dr0Yb9Z/WSeGs7zXY8H+QsyBMkDXY+lST4ceyc2o8rrfsL7tcma0/VxZ9K3
1vpYjR/Y7358joXfl5O9vVyPpyhyzdj6e8Ta+WvnY++FnNPw+66ux4P8Besl
Y977xO+8b76m97puAtZLAJoonPd+8dJLnY8HxZxj8l7dmL/oFs575WvX40H+
uIYdWbTSnE39+ddPZsE53U8475Xfyc6POwP/8bDV+MrjWIExuhTOew8ePOh8
PKU/B7r1dZCMuALHkJWcU/Je3brlvX37jjgfI7IL5730cwDQFNT36kfeq1/Q
L5D5i07kvfrJtTtZG9hak7geT2OUlF9qyHt9tny8penPW+15b6Kst/XvsbW/
UiNegWPJgvpe/WLz3pYth447HyN6w3vrAJqG+l79yHv1Y/6iG3mvflzDDsjn
y2251N43cr0vNXmvPC4xvY6dj88hzXlvoh4Osxb63xebC+dcN18m6nv1m8x7
TXu1tex595jzMaI3zLUANA31vfqR9+rH/EU38l79wvW9rsfSGJZaVX8fqpzv
S03eK75xizXLcz42h7TmvYmy3miv6/VP27+3pr0/qO/Vry3vNfjjcfdjRHb0
cwDQRNT36kfeqx95r27kvfqFr2HNez1Viq0GsYA6VVV5b1xd9Oad7sfniMa8
V/KRrlmvLb+dtdD6M3Ws8aW+V79uea/r8aF3Qf871ksAmoL6Xv3Ie/Uj79WN
vFc/6ntLFteXIOdeDkJV3tvi10CXVBtdF9ryXj/rtZznRLW6cddYDWt8qe/V
T16bNzy5hbxXqXB9L3MtAE1Bfa9+5L368fkk3ch79Wur7234vlelkBpeU14p
tYwF3J+2vDf28/oF5OV1oCnv7TnrDcT0/qhbjS/1vfrJa/N9jz5p7N0rf+d6
fOgd6yUATUN9r37kvfrxfrVu5L36het7yXtLYPused/aQu5PXd4rgn4Y0b4Y
0V6uDaEl702U9SY9x3E1vgVda4U9LtT3qievzcs3vWiu7yXvVYH1EoCmob5X
P/Je/Zi/6Ebeqx/XcMlsvXulN20B96cy75W8TlF/1l5pyHsz7c3WjZL9/ajv
1U9em8/t30F9r2LMtQA0DfW9+pH36ifnVvYg4PNJOpH36kf/3hLF7TdW0H1q
zHv9TNf2OBaw513V1T7vlVpc2/sgAclu095u3PUmfUFcH3dC1Pfqd8vgf1l7
907Z9Qfn40PvyHsBNA31vfqR9+rH/EU38l796N9bIltdqvR4KOg+Nea9Pqn1
LLEPcpXVOu+VTLaIrDdg6Z9Sp+cJ9b269e07MlnHa8p75d9djxG9o38vgKah
vlc/8l79yHt1I+/Vj/reEpXcu1eozXvjajcbtm9bbfPezTvjc95es95u91FQ
D5W8Ud+rl9TuWut66eWgRvgaZq4FoCmo79WPvFc/3q/WjbxXP+p7S1Ry716h
Nu9tsfZ7XbTS+djKVMu8V/pudMt689p/z3bd9Zoll4T6Xn12HRo/Wc9rqekN
bDl03PlYkQ/yXgBNQ32vfuS9+jF/0Y28V79wfS95b4Gk5tTB3lGa815rf4ya
7cfVq9rlvZLHd8t686x5j8mWxw/sd/94dEF9ry5nv3rwVM4bk/eu3v+B87Ei
P7LXCfUxAJqE+l79yHv1I+/VjbxXP67hktgypwJ79wrNeW/svm3yOf4KjLEM
tcp7paa2W9ZbxJ57thrfGtSCU9+rg+S33ep5gwyYnr36MNcC0DTU9+pH3qsf
8xfdyHv1o39vSWw5V4G9e4XmvNdn64lck8/q56EOea9k88cvnh+f80omW1RO
b9nfT+6z6p9roL633qQnQ9c+vaFa3w2vjTofM/IlrzGslwA0DfW9+pH36kf/
Xt205b2ybh56foN399Xnexes2+N8PFUg53bjD7/tfWn6p73pn7vI++qy9d7I
OD0Dc2erLyy4DlV93rv+aWt+WPUcL8qvV5bngxxTij3nKp/3to7F2ms5nPUW
uX+arZ9KUfXEOaK+t572vHssWc4bePQV775Hn2S9pBR5L4Cmob5XP/Je/Zi/
FOvwtj7/NVJyuCxmz77WW7Ritffw9l/5a4+0968h75X+jJLxLr9u9uTvHCHr
K9djq4Kn1yxte1z8x2b+Y87HpYnfI9RRJqk97/UzUluWXvEcr42pF/E3bjl5
fF1+ttJ5r2S4tvMzwc+CU+Tbmdlq7Cve75n63nqR90v9nDdJ74aJut6/2vgG
6yXFqO8F0ETU9+pH3qsf85diHR580Lvt1qXet6ad1ZHJZXH+NctSfVaw1nnv
+LB30yfsj9uUpdvdj7ECpLa347G57AHvj8fdj00NSw2qn3MVfN/a816f5bP6
fv8A12NLImb/siTHUNm8N2aftPDxJcm0cyHZs20sco26frwsqO+th8mcN2k9
r2h9v7wXz3pJPz4PCaBpqO/Vj/mLfnJuZc9Z5i/FG3l8hTfjLHN2KZ/B3zYw
4K8F5Xz8dNlc//P51qxz1lLv4X3d936ue967df1an/Rv6HgMqO/1kfeWwJbn
lbBXVCPyXumBYMvxyqgb7UVcn4GEPZ4rmffa+uU67rFs7SFc4Rpf6nurLVPO
G9mTjfWSftTHAGga6nv1Y/6iH/OXcv1m8cUd2dw5Z17tbT1m/v7R3du9h7/3
RWvue/vQ4dj7q3XeG2ao9aW+96TBx3/a8T4CvY3zZe1dWkJNYSPyXmHrGVBC
pt6TJLmoiLmNKuW9fn8S2x56VTgvce8NFLx3YlbU91bX6v0fJO/bMJHzTht6
p+P9VNZL+rFeAtA01Pfqx/xFP+Yv5Xpr5ZXGvFf2f477OekLYaoN7vazWvJe
qY/a9DenNyrvPfDg1YlqmKUufMvau7y+xQu8e1c/4D318ojzsWvif1bdki+V
8Tn2xuS9thrqCtdt+rr0tp0U04u4l7zXfw5KjXFLz8/HJPuydTmWMljH2DoX
pfWWSIH63mqS+txUWe+uP1j3QmW9pJ989o5+DgCahPpe/Zi/6Ec/qnIdH/xR
qvresEMb/tHc22HJRuvPaMl7RUfeq7mfw9iAd9WnpibKtHnPpmC2esKScsjG
5L1xfRHkHLgen0lcP1lDn1vb7aTOe+XxkLpiW9Ys9blS65qmF0aCfdn8f6/C
uYir8ZXHxfX4IqjvrZ71Y8cS1/PG5bwB1kv6MdcC0DTU9+rH/EU/5i/lsuW9
3ep7fePD3iOf/2Sqn9eS9zatvvf5uVMSZ9ryXk1wjv3PYldg/KpIbuawd2lj
8l4R9BGI5o4O+sT29NywseSvifPezTuT1d+Gc2b5/lX98XWvCY7Dv50q9VKO
6zlRpXGeoL63avx+vUnqenf9wdt1aDzRbbJe0k3mVqyXADQN9b36MX/Rj/lL
yYZ+kj3vPWHuByHmv/In4/erznuV1vdKH4c0mTbXcMFsuVJJn2lvVN4r/ZAd
9s5ITXLoNHmvPJcMt5Mo703aJziO3IbU8YYe70T5sWXcTsXUg8fVUrtAfW+1
dM16U+S8AdZL+jHXAtA01Pfqx/xFP+Yv5eqpvveEvaeD9rxXNCHvPbx5cepj
DNf3uh6/So5rCJuU9/r16bbH23HPWKO4fgpdMtdwfh2X98pj4ueXvWa9YUl7
Dosq75cXl4GXsJdi4uc19b2VcfPw+7G9G6TPQ5bbZb2kG/W9AJqI+l79mL/o
R//ekvVY32v6+SR5r+wzEc17ZQ0qmUN0n+lu5Odk7is/W8Re8sHthnsT1Kmf
g//4tESPoZs31v9zZ2/mBHlveA0S3J/cf0/jz/n8xo1H7kOkfR6WwnHvXtGk
vNdnyfD8OlTXYwuz1ZfKc0P+LUGm6ue4q/rb3rMJX3NyDabt35CrKmbsIX5m
bnucK7R3G/W91SC/Y+Jqe1fv/yDzbbNe0o/1EoCmob5XP+Yv+vF+dbl6re9N
089BMrYta+/yvjXtLO/sqZd4a176rf/3x0aHvLVzzmv7+QvufC72ft9+abO3
+qa/9Wac1Xnf/u+A79zqbXhtNPPjIre//LrZnXnnjDnekvXb/fwx6Glry0IH
7/mRt2jxEu+2W5d2+Kc7H+u4z7jvX7RidfIMvmV093bvp8vmGh8fOYab73/M
2/OuvW7ol8vN5/W08+d6t/yofWzLn20/7uD6lXP99Jql/vn+2Hl3p8pPizi/
oyND3uN33eh9afqn/edf+PE88Mz93rIvTOu4n6/c8VS1cl+pbTRlSSX2k21c
3hu3B1q4F4Frlp63k70EbM+dmOx3ZMkKPyv2c0rJWpPW4cr3panZTXJ7VXqs
48jjVPHaZOp7q0H6NMTtydbLbbNe0o/1EoCmob5XP+Yv+jF/KVkB/XujPx9k
d23fF+S9b220ZnryOcfo/R3d+4y3cPqZbd83Y/Z3/Zz0hi9f0JltzlrqbX49
RU3V2IC3cmb7HnTnzL7Z+1/zrz2ZUwe3O/2szvuK1PcOPv5T45j8773sgY4c
cdfKBd4NC663Ph62mulu4/+zy+f44zfd7lfWvdpxG6/ffpHx/m3Cxz1+YL+f
M/uZapfjNcn7/EruLRnvVZ+a2vEc3XrshL/nYPS9BtN9DH5YgWu1xVpbWWLd
Y+Py3rjHXWp/KzC+2DFKDtzte/LKZNc/3VnDKjltawyZ71t6UVRsv7PM50JU
4Fio73XP36Mtpo9Dr7fPekk/1ksAmob6Xv2Yv+gXfNafzyeVo6f63qOD3k2f
6Mw9T5+2zF/L2GpEg7z35794pCOHi8s3o2M1ZX2SF5rGNP/J4e7H89bGtvGc
c8aijts/PPigdcy2fg6mxzgu/5Taq80LL0uf90ay8ynX3te2x4vcrumcdIx7
fNjPAIae39CREU/5px/7/7ZtYMD/U65T/zEaGzDWx6bJe/M+v3G5tZzbTbuf
M95WmnNbJj9Hq0CG1MS8N65mM02PlMLE7CvX9txI2NchtaT15ZL9SkaeZAwT
+bHzxzaLuJrwCuw1R32ve9ba3h77OARYL+knayX6OQBoEup79WP+oh/vV5fM
1H936iUnax+7/Oyry/7amI1dv+Pk5/ul/6v0Ibj3hv8Wm6VNv2Wl8Xva8s3I
OCU/lEzZOLajg95dH+3M8S5Yt8d+POPDbdmfZNbWx2BswJgT2nrbytr6kc9/
smP8sfmn4bzE5r2tMbXl0Mu3mXOo6PdNsK0vu/WsmPTWRu/v/mGed+/qB8x1
uCmPN4/zK31CBn876tf4ttUMt57fbfc1Y45fa+73N26dq72r5hmviaz75uQm
mjkGmVmJvXtFE/Pejqw9nFc67inrX+eW/NTUY9g/Fsln88p6M9Q4B/0h/F4T
4bHL15KH1jXnDavw3m3U97rVVtsb7d/bYx+HAOsl/VgvAWga6nv1Y/6iH/OX
cmWt77XV7k6Z39mXVrLUaN4ZuPKxkcnvC+8P1pb3RbLYRPXHYwOd/QumXmLN
Ndv2Xov5vrjHLa4GtGNvt275p6HPhTXvbT0+Pz7vL+PPwQTJMx+94uOJsuSs
e9LJtRvtyRB7vCWcX1uf6ZlrXjCO68CDVyfO80sjOZgpOyq5J2gT816fJSN1
vm9b1lxRan0lq5bjylrzm1PWLflvVfYyy0tsPX7r8XZZF059r1txtb1p+vTH
Yb2km7x+sF4C0DTU9+rH/EU/9pstWYr+vdKbdeTxFfZ+BjE1maa8TfoNmL5X
1qLh/49+Lj/pZ+sPbfhHYx4dzfcOb16c/vYjGWW3+t7Uea+hV4Yt723LJhNk
1abHxXbbHeNOkHnK9RvOn7sdb9Hn13SOo+81dDDUQbvMe2Ozo5L3sWps3lvF
fdtixpQ6h07Ra8Gvy63L/mkuVXTvNup73ZHfTx01vTnX9grWS/qR9wIJTKzX
Eu2Bgsqjvlc/5i/6MX8pl6lOVZx24aX+6+jcuXN9X5tp780qLvzhv8fmlx15
79RLvH/ZniA/M+SqiX9nm/oLR/JQU68F0z5xJmlqXwvLeyOPT1xtb/hnwv0Q
pJetqXdF1vpe6e0b3QPNerwFn1/b83xyvzbLbRt7cLjs4WvLjUru5SAam/cK
WxbqaN+22H3BNu/MfLsjS1Z4v7/i+209Q/z7kuPs4XabqIp7t1Hf687M3e8W
XtsrWC/pRn0vkNDEWkHWIVXZexnZUd+rH/MX/Zi/lMzUvzeFr15/T8eeWiYd
n4+feonfM7Xbz0XrMhPvJTfhxQWf7awBDddpvrWx/fbPWJRoPmDMQh3U9x7e
1tf2PVdt3Z/ocZExDe981n9Njds3Lmt978Pf+2Ki4y38/Fqe50nuJ8uxF8Wv
p6xIjWCj894q7dvWtzbXnrphkgEG51hqQZ0/7nVWwb3bqO91p4zaXsF6ST8+
DwkkEF5Ptdaet/1si7fnXcf7cSAz6nv1Y/6iH3lvuWz1vVOuWeatuGOFd9ut
SyfJ/9/36JN+/ebw6Gh8Xhlhqu9NkvdGfy5tHmj6HH+4Bvbth9r35uqaw4ak
yQOLynuj+6nl/XmlrP17k+a9RZ9f2/O82/1krW0uhNQAVqiPQJPz3ti+GiXu
29atN2yvvXDJe3MWtz+eg73bqO91o2/fEWttb977gbJe0o/1EpCA6bOAE+vc
Vc+8kmotC/eo79WP+Yt+vF9dMkv/3rw/85Il7zVlbt0+h9/B1Ic1lD2mzmFj
xmbLA4uq7zXd7u1Dh3M7Z0XX95Zxfm3P8yT3U5n6Xlsdp4NeDqLJea/Psj9a
qfu2FZwfkvfmy8/fbb1Acsjn06K+1w3rPm1P/C73+2K9pB95L5CAJe8Nm/2D
Vd7gb0fdjxVdUd+rH/MX/Zi/lMtU35s6c0sgaz8HUx6Yqsed4fd8kAca88Yz
Fln3nOs2ttLreyN9ePPOe43jzrm+t8jzG/c8r1N9r7X/p6P9nhqf98Z9Pr+M
3rYl9AcI8t7+/v6O/TORUVz/jZKvZep7yye/b2xZb9I9A9JgvaSfvD5THwN0
0VonSF3IBXc+5///6MiQ9/hdN3ozzjJ8tnXGHPo9VBz1vfoxf9GPvLdklvre
PPcNEVnyXlv9Z9o80Fb/manuNmZsZdf3mo4tz34Orup78zq/cc/z2vTvjcv2
HO311Pi890RMBi91t0Xft62Xc47PCep7S37elHw9U99bvjJrewXrJf1YLwEJ
tNYJku1+87X2965lDfL2S5u91Tf9rbHm9/xrlvnrVPo9VAv1vfoxf9EvqCni
/epy2Op78857s/bvjWZuqTPN8WHvx+f9pTUPzJr3Gn82pv6zqLw3+j1J92tL
KkvmKddu1vrevM+v7Xmeqb7XRd5bhd4BEeS9J2L3bSs0t4vL/3OsESXvLYjU
f9vOXwnvFQSo7y2X/D6y9e09+9Viri/WS7rJ/qDkvUAyMo+JW3PJ78Sh5zd4
d199fmf221qvfuf2+xPtTY7iUd+rH/MX/Zi/lKzi9b3R/chSZ5op63uln0OS
3sVp8sDC6ntNWadhr7KssvY0SFPfW+T5jXue16afg63nZ4l7g0WR93Y5N0V+
Nl/6NZTQAzac99LPIWdxvZdL2n+R+t5ySV2Z1PGa8t6k/aPSYr2kH+slIH8y
59n71Bpv2RemdaxPTjt/rrd8w3/S78Eh6nv1Y/6iH/OXclW9vrcjJ06baZr6
u07ksqZMT8ge2klu23l9r+F25XFNu8/3+IH93raBgWTjzrGfQ9HnN+55Xot+
DrLvliUXKnt/pzDy3gmS65a5j15cba/0hs3xvqjvLZDUf1vOo9+ro4QxUN9b
LlvWKz0eirpP1ku6Ud8LFO/o3meMfX6F9Ht46uUR+j2UjPpe/Zi/6BecX/o5
lKTC9b3W8Z2xKPl+cob6z/CeZr9ZfHFn3pigjrPw+t6xgUS9eU31sWnrUP3b
aJ2P6Dkvur63jPNru59a1PfaajlL/Ny3CXnvhJjcrpD6a1td6J9/3V/753lf
1PcWzPZeQUl7/lHfWx7rPm0tad+bTYP1kn6sl4BiHBsd8jb+8NvGnLdDa/00
/66N3q5D487H3QTU9+rH/EU/3q8uV9Xre009C0TSz/wf3ry47ec+dt7dbZ+f
PLThH43HnyRvLLS+15CDmvJe0/ht32sS5PC2sWfJPNP07y36/Nqe55nqe0vM
e/36XYd5UBzy3pCYDLa050POtb2C+t5i+efT0g+kjN7c1PeWp+x92gKsl/Rj
vQTkS+p5bfu3JXHhd++mz2/BqO/Vj/mLfsxfyhXNy4IsNnF9ZUKZ63stY0y6
r1q0/rUjRzT0A/Bvf8nG+NseH+7sI2AZU5Y+wR35eMvNw+8nGsdk5vvkcOwx
/HL5lbH5dqa65BMp63uLPr+BPOp7y+znYNsPrIBazrTIe0PieizkmcvHPB+K
6O1B3luCuD3/Cn5Ph/re8th6Oczc/W6h98t6ST/WS0B3Mp//t3v6Yuf8b7+0
2bvhyxckynS/umy9Nzw66s+95OeWXze743u+sOAR6n0LQn2vfsxf9GP+Ui5T
rlip+l6RtQY0kvHZ+sK+fvtFxt/pF9z5nDVzND5uZyyyPm6m7zfVi/r7BKya
ZxyPrb707YfM3+//zLX3tb3XLLd/4Jn7vYXTz0z0OCbJqYfu7POWP3sqC5Vr
d+XMTybPbws+v8JU3xv3nkbWrDsvfo2fKQea11fK/cch7012rvLsxerfVonP
B/Lektj2/JNeLgXeL/W95Vi9/wNrL4ei9mkLsF7Sr7+/n34OQDdjA34PXtk3
M/z3wb5s4fWQ1UTPBts+bbIPyq6VCzp+7vodJe/70QDU9+rH/EU/+lGV68UF
nzXXhibsB9DL/dwy+F/Jb8PQz1Z+/z687wPz90fqdiWntL7XGlMjO2XW0ra8
dHT3du/nN3wtdk4wd+5c/73dcDZ4eFuf+fYn+v2P7NnhPb1m6eQxTpkxx7hH
wFfueMp/HWybc1jy0ijT7XXrUWDsD7xko79Wlf5WQR1v+Hbk+o3On7q+h1Dk
+T1hzttj9+Uz9AUuLe+N6wsr9aQlvj6YkPdGxOyrl8f5iu3lUNDzgby3JEGN
ryn3LbDGl/recnT0cghqfQvcpy3Aekk/6mOABCbm88E6RbLZXz283LoPW3Qd
smT99uRz/9ZaJroey3s93XTU9+rH/EU/5i/lkKzuF8sut/6Ok3zuX7bn877k
yOMrrFmq7b1So9bv0Y5ctvW7eNFTu9t+F0v/pWgW2LVe+a2NnXljDySXDd++
vI/8yOc/mehnT5+2zM9To/WlsfOHhJlvNLft9pgb+31Eb+eyB9pqlWx7HJyz
YG18TVNR59dybuX4bf03gl4XUaW8V2/Zy6mMvp5JkPcaFFmnacuTc+4RHEbe
W4HnTkG9OgT1veWw9XIw9mbKGesl3aSvE+slIIFQfciFl1+daH102vlzvVXP
vJKtxiNaj1LAZ2abjPpe/Zi/6Mf8pVgdfXQTkPdAL1i3J919jQ97d199frLb
n/1d7+b7H0v2e7V1u7YsTn6Pf2tae14ofZaSfm5SMvBHr/h41/HK726p+Y3W
vp5/zTK/R4X1OAzv+3ZkkNfe5/dLMPUTmP2DVX4tsO325Wc2L7ws0WPerbdv
+DbjcmfJ7OXxlfrlGxZc3/H4m0z/3EXelzdZejXkeX6TZPgT9dj3Dp3spWi7
7+jPXPnYSHHXqS3/KWBfrizIew3k3NhqcKVeu5fblp4NJff2IO8tUVwf34L6
OlDfW7z1Y8esvRzK+JwI6yX9WC8BCVj2aTGuaWbMSd5r0MJU31Pq/h/KUd+r
H/MX/eTcSk8q+jkUQ3rL37v6Ae+hdesmyf+v+8n/8b+WP4N/D/+Zdr9R+X23
4741bfchf664Y4WfCwr5OvzvcfuXRUk2+/hdN3pzpk3rzBOvmefd9rMt6WqH
Q6S/7Y1zZhlz6eUb/tNfqwW/z2VusHzTi4nvS34u3LchyA9nfedWb+3Avrbv
k+y5a4ZsMjbg7y8b/azSaRde6vefSr2HwPiw35fqS9M/3Tbm69b+x+S4pOZW
zqEIzq8InlfR51T4WIs6v3Ib0edzdDzB18FjIr28omONfi23seG10WKu0Zj9
v4qq9UuLvLeTf25sOf03bunptq29nAv8vD95b7ms57ig93mo7y1eRy+HQAm9
HATrJd2o7wUSSpD3Sm+9tOtcm+h+If7tx+wvgnSo79WP+Yt+zF9027t37+T5
la/zul1ZvxYx3uB2ZW5dxG0Xcbum+8jzfrrdVvgazut+izq/lWOp5cxz769e
kfdaWPpw9Fzj6yD/J+8tWVzP7gL6NFPfWzxbL4fonkFFYb2kH/udAAnE5L1S
a5NXzhsw7s9d4n7P2lHfqx/zF/3Ie3UrKu9FdcjaI++8tzFsNaLymW/XY5tA
3msWW+Ob8XP51r3aCuzdK8h7HYjrCZJzL1/qe4sl63rjPm0tqT9fkxHrJf1Y
LwEJGPJe6QVX1GuxMe/tsjc2kqO+Vz/mL/rxfrVu5L36sQbJSD6fX/FeDoK8
N0ZcjW+WGk3Lc6LovfvIex2R9wUsz588a/yp7y1W374j5l4OT/yutDGwXtKP
uRaQQCjvlb20s/b6S8qU91611bJnCVKjvlc/5i/6MX/RjbxXv3B9r+ux1Ipt
X66C9mzKirzXzlqPmzWvs+XHBe7VJsh7HZG+DrYa8Rx7+VLfWyzXvXsF6yX9
ZK8T6mOALo4O+numTFmysZz7GxvwFk4/czKTnLmmHr9jZV4wsmfH5O8NeX2R
PcKLzsfTor5XP+Yv+pH36kbeq18R/XsbwZbzrH/a/dhCyHu7iKvxTXsuHfX3
IO91KKbOP699+qjvLZatd+/Nw++XNgbWS/qxXgK6kxxz88LLSn39FfL+fy3W
QGMD3s9v+FrsfnYXfvfu3PscZ0V9r37MX/Rj/qIbea9+1PdmELNfU5V6OQjy
3nixfXxbf594/h/Xz7WX/d8SIO91LO7c5/CaQH1vceJ6946MHy9tHKyXdJPf
I6yXgHLJ705Zu1at5jWrN9b/c0dfYzk++Z0x9PwGb+XMT7b9+5WPjTgfM/W9
+jF/0Y/+vbqR9+pHfW8GUvfpoE9rFuS9CcTldUl6MUj9rq0vRAnPCfLeCiiw
ly/1vcVZvf8D5717Besl/ch7gZK9tfFk1jj1Em/9WL0z3+ODPzqV5baO596h
d43f98vl7f2Ibx867HTc1Pfqx/xFP+YvupH36heu7yXvTcjWu1d6A7geWwR5
b3f+8z6uD6vtM/lSt/uNW+I/z19Cfw/yXvdi68R77OVLfW9xzn71oPPevYL1
km7U9wJuvLjgs37WeM4Zi7zBD92PJ5PxYe+uj56VaD85mS888vlTdb5TLnvA
/xyLq7FT36sf8xf9mL/oRt6rH9dwen69XkG9OvNG3ptQkj6sQvLbRStP1u3G
fX8OdZ1JkfdWxM5fxz8n5N8z3C71vcWx7dX2zdfeK3UcrJf04/OQQPl+s/ji
U9ln67Xd9XiyOLx58eQxnHPm1d7WY/HfH64FTvL9RaK+Vz/mL/oFe0Iyf9GJ
vFc/+vdm4KhPaxbkvSl0q9VNQ2o9S3o+kPdWSFxvkDT9oEOo7y2Osba3Zcuh
8nr3CtZL+vHeOpDe6O7t3tb1a70Vd6zwblhwvbdo8ZJE5Hu/Ne2stt4GU5Zs
dH48Wby18sp0+e3QT9q+v+zfZ2HU9+rH/EU/5i+6kffqR//elGx7tUm+53ps
BuS9yXX9TH4aJdZ6k/dWTEwv30T9oCOo7y2G7Mdmy3vL/vwr6yX9WC8BKYwN
eAunn9mW1/bKdW+DrMJ5r/Tu7dt3JPb7o/W9Vcl7qe/VifmLfsxfdCPv1Y/6
3pRse7WV9Nn9tMh7U+r2mfwkdb0ZP7efFXlvtXR93yDl84P63mLImtm0T1vZ
e7UJ1kv6yWch6ecAJDA24F31qam5Zr1+3rt0u/tjy6At75XjmP9Y4u933beY
+l79mL/oRz8q3ch79aO+N6Ua7dUmyHszsGT6XXPe1nPAxTVE3ltBMf2g/d7P
KW6L+t5iTBt6pxJ7tQnWS/pRHwMkE+yxliepc3143wfOjy2Lw9v6Oo7ngnV7
zN9/dNC76ROn+li4zrip79WP+Yt+zF90I+/VL1zfS96bQLhuL/y1ZISux2ZA
3puR5HVJejvI9/StPVnT6Wis5L0VZXtvSKzqT3w71PcWoyp7tQnWS7rJ3Ir1
EpBAtLZ36iXe3/3DPL8fr7hxzqzJf+tbvGDy7wPSu1f+fsZZp7LR5Zte9Pv3
OD+2vB6TCV9Z92rH926Z/9m2jNvlXm2C+l79mL/ox/xFN/Je/biGU4ip2atq
Vk7em52f4cr+W7MWnuzXIfu5Cfm79U87zXjDyHurKbavQ+vvkz5/qO8tht+7
IdzHYeLr9WPHSh8L6yX9mGsB3YV7z1718HOd/XbHh/361W49DSQjDepcbx5+
3/lx9erAg1eba5eXb5t8jF5d9teVq2emvlc/5i/6MX/RjbxXP/r3pmCr15P9
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
Q8p+JvXy9Zr31/c+HzX0S/rQLwGMHvv8/LtbL4/1RvTe0YO/Vx/qF32oX7RB
7y1BnqaaN6Mtg3iemstPVfKx4gyJInm9dps0HX+LcyrMyzW3neTz1gf0Xn3Q
e7UJwd8bv+e7PkdKXLtiebxovd3QL2ljNR39EjSWmenorm9+M1qzZk303eu/
E38d9vf29Xtj18Y5DoneiN47evD36kP9og/5vdqg9xbHmcHQ75w101ZdObll
Hsd8uDka774Nt8XH1/xjsc4cwL6E6kDv1Qe9Vxvv+b0Jjs8ko8hnh2U05Gm9
Nr/N9772Bf2SPui90FhmpqMbP724pfv5Ar139ODv1Yf6RR/qF23QewuSl9vb
b7atzcFxPWaRuW+9HmMhY4LXsDbovfqg92oTgr83xj53XJ8nlveQc1+bi96W
49CR6bB8qtnXjNAvaYO/F5rOC2sWoffWEPNKX/DFCwcifQzs53M/+9m+v972
w9ui53fuhEAwv2f6s81+9r0mqPbYdh5j3+uC4RxnXsO991Oet3eQ/ea6fnb/
t/887vv7Xtcce+58oE0n4hjrYceT92ldktcrr2FdOl+/vl/Dca5PH591ix59
yZ3bO/d73/s5pGPMa1iLzs9hroeEJnJ823r03hpinlzfxy3NuvUbumoiCI9k
5gQA1BNew+37wnRTl6Zquuwg++3/ffU/OzMdet33xR//1LmuN6/p/rxMr8+1
1uT3PAcAwobXKAyDXp93Wc+7DRM73DkOT7wZPfzkM963K0R4DeviW8MBGDlH
dkarzl5yWrtbsiLWEr9xxeUxVX//9a9fG/3RyuXovQMSqt7r6ln5fjTfFyWE
tfJ9Ncc4hDXx/ehfxyGsM4T9k+ftdd2n6H7P6623T2zJPT6m6brW1eu+Cb1u
F8Kx4Pvyr98Q1sj31R3nvGMfwjr5vtrXse81lP3Mi729Dr131UN/0+jnaxFC
WCffV3t8fWs4ACNnZjravPKsWLNb+dMR5hId2dn6v+i95bF8oYTD+6bir5bv
WPRnez9MZznY3wzLMOrne3tcm2kA4TC961etzzY75r7XA9Vjr+PkOiXLp7I8
UN9rgurY99qLrdewvddm3s513NV+n3G73Hzc8S3xfWLy/k8OcRanayb6xLOn
H3uO9GPb986efN3m0+vqyJSz/5e1H9L/p/N/QdjYZ2/SgyavYY6fFulrhamF
9Zg5dLClIdn14a3X74hqrs7PwTiTPievPn3fm6bfd3t7d7+V+fnSRJJ+yY4z
r2E90hnc6L3QVF6/5cJo2Tmro+0nR/t/ZydvR+/1RHpe2x98+cve1wPDOcbp
HsT3eqB6qF+0YV5bD1zzyhdmoQ31f9jvHfeJ/3fBWW9prajIjHWoF8xr0yed
w23agu/1QLXYMU2Or9d5bSlc5xPj3yfrnvs8cWb2zrFvZtb7doQC/ZI+yfEl
vxeaSqy7LlkRTRw5Odr/fWIyungxeq8P0Hv1oX7RB71XG/ReN7maao9Z5aVw
eanM9+u6z7Zdhe/Da1gb9F590npvfE1AAGuC6kh7A0PRe3M9vvb5M3ebpS+/
7dR6r3qF8xJp6Je0SZ+zodaCxjIzHd337eujh974cOT/92cPPhjtPjbjfx80
jLTea1nAvtcDwznG1C/aUL9og96bg2m6jn63Mm/vqXJe3RbrNhf2BKdfw/h7
9UDv1Qe9VxvTipI8h2D0XsORNWQe39eOnsyd0eZ97YFBv6QP/RIANA30Xn2o
X/RJehCuT9IEvTcHV65uTs5Cv8xeNFbOR3zpDc5sxc7bkuegDXqvPui92gTp
7zVyPL7OGW1PvBnde3DE3q4aQL+kTXpWAv0SwHCwHHQ71+h7HXAa9F59qF/0
4Xy1Nui9DvKuZXV5bgfB5SU2XTfr9i4t2ubLddyW17A26L36oPdqE2J+b4uM
z5rJf3FN7ow272sOEPolfRJ/DLUWQH/Y/GE7X7Lt9YxrKBcyek1X/MMfPkU+
fCCg9+pD/aIPWpE26L0OXP5Zl/46KKbTFsyOyM1/yHjstL/X+36FykHv1Qe9
V5tg8xyMjHOfizbu6PL0Jt+Tn5gN/ZI2aX8vtRZACWamo63f/48tLdf4xPl3
Rr+bzbjtga3RjZ9ePH+7JSuiW6aO+19/w2Femz7UL/pQv2iD3puB+XddempG
XkJluDy7C7Nxeq7PMd+N/F5t0Hv1Qe/VJmh/7xyW15t8zjx1wXV4e/uAfkkf
8hwAyvHy/76xpRWmWXTJA9l6rzEzHd19/mdat1350/A+M5sE/l59qF/0Qe/V
Br03A9csNIeeWhmWC1wkL9j03xLeY/y92qD36oPeq02w+b0Jqc+cLm9vyuPr
7M+BfqkB0C8BFOf1Wy7M1Hp76r3GzHR0x8cXn77Plt94356mgt6rD/WLPpyv
1ga9t53Y/+ry9poOPMz/78oM7tSZ73ms1Bw5/L3aoPfqg96rTdB5DglX3hz9
45lXOL29y6cy8hahBf2SPui9AAWZus+p9RbSe40jO6NVZy9p3Yc5oX5A79WH
+kUf6hdt0Hs7cGmpGTm6VZOrNaczHVz+Y5v5lvG4aX8veq8e6L36oPdqE7y/
99R8bvyf/sn/dOq9pgf7XmPI0C/pQ78EUICZ6eiRL501uN57qt0jXPQ+UC3k
9+pD/aIP9Ys26L3tpHMK2xhVL+uaE5f27rpu48gW5jWsDXqvPui92oSe35vg
0npNB867xgTol5oA10MCFKDDl2v8u00T0eRvD7f+Vli77fAJj7/xgf/taxj4
e/WhftHHjq1dZ0j9ogl6bwpXLq6x69XRrCHHX5zcxqlJO9ZIfq826L36oPdq
Uwd/776ZWafeazkPvXKFmg79kjbpczbUWgBuZidvb+mDy85cFz1zbPb0309M
Rjd+enG06NofF9N7F26fPN5lTx/0vn1NA71XH+oXfahftEHvTeHwzcb66ojW
EGdGfOqKbD3XtGC7Xcm8CfJ7tUHv1Qe9V5s65Pde9cq78Uy2Lr13447CWfJN
hn5JH/olgAIkntwlK7r9uIneW9TfO3f7tFc4/jzyvX0NA71XH+oXfahftEHv
XWDvfrev1pGTMDQsO8I1t808vEVmuqXA36sNeq8+6L3a1MHfu2j3W/lZDr4y
kGoC/ZI+yTkbrocEyGFB7zVvr1030va3sv7ejjwHMnxHD/m9+lC/6EMelTbo
vQu4ZqB96oqhz2nrwqXpJrpu1u/Nm+x4PPy92qD36oPeq03o+b3WP7uyHCb/
xTXuz6u5z6WRf34GCv2SPvhjAHqT5DlkarMl/b0vb/p99F7P4O/Vh/pFH+oX
bdB7T81roC4d1XRgD2tyZvS6GN/ifKy0vxe9Vw/0Xn3Qe7UJ3d9778EPs/Xe
J97s+Vllf0fzpV9Sx2or+iWAAhzY2vL3Tn7U8bcy/t65x7l48dJ2vXfuc8n7
9jUM9F59qF/0oX7RBr331HxeQ8lM3KGTNzuu5Dw5XsPaoPfqg96rTej5va4s
B/u96Vw9z08mWUQBbIsv6Jf0odYCKMDMdHTHx+dnrN00/X7734r6e4/sbJvT
ht7rD/Refahf9KF+0Qa995RzTpv3/EFXjm/JeXLk92qD3qsPeq82oft7u+a0
LfyczNqx86KzF431/rxKZo42EPolbfD3AhTn2MPfmvf4nrM6mjhy8vTfCvh7
j0/+pG1GW5qu+W8wdMjv1Yf6RR/ye7VpvN6bN6fNPLae11co16HHOsnv1Qa9
Vx/0Xm1Czu/dfWzGmd3b1Y8XOUe5dryR+Q70S/rQLwEUJOXxXbpkRbRhYkf0
2tGT8e8Tf2/69jOHDkZTLzwc3bn6c5k6L9m9/sDfqw/1iz6cr9am8Xqv+Y1c
15/6XtupBd9Up+abzhrOye1NwN+rDXqvPui92oTs773qlXedWQ6Z91k73lvz
bWC+A/2SPvRLACWYuq9Ls73gixe2vl93273R98au7crozWTJinafMIwM9F59
qF/0oX7Rpul6r9M/62lOm5N7Hjt9vexcrxx/X9B/jL9XG/Te0WMzRp45Nhsz
iv+H3qtNyPm9ruze5VM5Hl3XedQSc0bVoF/Sh34JoCQHtjqzGcpwy9Rx/9vS
UNB79aF+0ceOrfUhXJ+kSaP13rwsB/ub7/VVRNrfi96rB3rv6Bh76b3uLNMF
r+MwtV/0Xm1C9ve6shx6Pt/tfGT6WpSGe33pl/RJztnQLwGUYGY62r35+r50
3o99bk300Bsf+t+GBkN+rz7UL/pwvlqbRuu9gWc5VAWvYW3Qe0dD7HPM0nqL
eh4HAL1Xm1Dze+36WNdzvdBj7N1fLIO+Abm+9Ev6UGsB9M/Jw1PRsz/dGH1j
+eKe2Q3/7jt3RQ+/ctj7mgF/bxOgftGH+kWbRuu9rtkyoWU5DAj5vdqg9w6f
m6bf76n1tv7uyjUdAPRebUL197qyHEo/x4tk+qYyHhR1X/olbezaKfolgHLY
uc6s39t8tn2vvRh/Htp7p321HnX6MBpvaKD36kP9og/zZrVptN7rutZU7NpS
8nu1Qe8dPj213iH7fNF7tQk1v9el99oMt9KPVzTfIbnGZt1mKd2Xfkkf9F6A
Yuy9Z22bX9fOqfteE/QHeq8+1C/6UL9o01i915XdK5blYODv1Qa9d7jce/DD
Ulpv4XzTEqD3ahOiv/d3s+7s3t3HZvp6zFi/vfSG4l5fw67DETgHS7+kDf5e
gGLMTt7eldGw6JIH4s8c32uD8pDfqw/1iz7UL9o0Vu+deDazt5y9aMz/2ioG
f6826L3DxXlNe4F8h6rWgN6rTYj5vZnnOew5X8Xz2j5/i3p905/Nc/er62cY
/ZI+XA8JUICp+7r13rHH/a8L+gJ/rz7UL/qg92rTWL3XMnobkN1rpP29de2V
wQ1673DJ1HufeDMae+m9aN/MbK7uW1WuA3qvNiH6eyvL7nUQe33L5Pp2zHaL
r9EJYD8VhX5JH/olgAJk6L2XPX3Q/7qgL9B79aF+0Yfz1do0Vu919ZnmO/K9
toqhB9EGvXe4uPTcJK8hV/Od+739fdA1oPdqE2J+r+s5XXnOoum2rtmpvTy/
514dnbrnsVrk/NIv6UOtBVCAA1vbvb0bdwz+mDPT0V3n/ato/I0P/G9fw0Dv
1Yf6RR/qF20aq/e6MgRtpozvtVUM+b3aoPcOF5d3N501ZxqYM9ehDz/ka0dP
xnpykpOK3qtNaP7evOzeKs5fZGIZvX3qvum8h1C1X/olfZJzNvhjAPL59fXn
tTTCSs4hzkxHq85eEl935Xvbmgb5vfpQv+iD3qsNeq++3kt+rzbovcMj9u4W
zOZ1Xv8+x+RHvf+XabvxY3T6Ku3nR1+K/vKXj8y/hj941/t+gWoJLb/XPFKZ
GdUVZlI7Mb+vK2+pKPb5HljWL/2SPvRLAMWwz7wX1ixqzWob+DzigmcYvXf0
4O/Vh/pFHzu2ds6a89WaNFbvdfmIBPVe/L3aoPcOjzJ6r/lx+/X4Zs7G6uTR
l6KHn3wGf68gofl7h53dW4TYp3vPY6XnunVhn/UBfK7TL2lj5xbQewHK8Xe3
Xj6v+V66Mdr2ep/XZsxMR8+MnYfe6wn0Xn2oX/ShftGmsXqvK7/X+kvfa6sY
/L3aoPcOj9hzW1DvNfI8vhNHTrr/R87Mt07Qe/UILb93ZNm9RTG9doCshxDm
vNEv6UO/BNCbE3ufi743dm108+0bo/H117dl+V5wzdpo3foNhbD72+Ok74/e
O3rQe/WhftGH+kWbxuq9rutFBfXetL8XvVcP9N7h0ebZTWtgDr3X6QfuUyPO
eoxReixhNITk7/WS3VuQxPMbz2kb1PM7Yt2Xfkkb/L0ABemY17Z0yYr2nwcA
vXf0kN+rD/WLPsnxJc9Bk1rqvdanjW+Z12z7nc/SIL2XHkQb9N7h4cxoyMkx
zczgdVwP7/QP99B8fetuUC0h5fd6ze4tg813s8/xQfIeRvh5T7+kD/0SQG/s
8+7Rr36yMo0Xvdcv+Hv1oX7RB61Im1rpvXP9XTyDO6tvM/23zGO58hwmnvW/
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
/IP/trH1tej3xpo1a1prOfezn23lLNvv+/ne6lzTIyAc0p4Tq2V8rweqIzme
6frF95qgetKvYfu+7P1PXXqDM7vX97bBPOnXMO/TeqR1hH5ewzCPXRuXOb9q
7qvvtaXP2Sx69KVsrW73W97XCf2Rfg3bsR72/3vq7/c5z2343hd1wFn3fOoK
52es9et8Dmtix3Pfay+i9wIUYUHv7ZVPm+T8LrrkgVwP64HNl9cu8zZNlt67
6JpNmRldJw9PRZtXntV9+15ZxzmYJ7cfb/GwMD05/V4KYZLMnAAdOKbgwpVl
t2/Dbd7XBtBUeM8uz4aJHU4NzPfajL/85SPx11jvzVrn3O+T487xry+jOHY2
Iyfk53ro7LnzAafH981r6FWbDnkOADkc2Br7VM2Xmns9STqrYcPW7Jm0R3ZG
q85eclr3rGGmw6+vP68ru7fXfunM+zX6zfRC74Ve0FMANJPktZ/lb7GvL/74
p5m353v/34MWHNtq9l2sgWX5Zh99Kaj9fdGTk0691/f+hGoY9vt+3jmD5LzC
MNdSx+87f54992qn5ttZ//Q6HqCHbw0JIFQsq6GlVy5ZEa1e91+j7172+ehL
y/5l9Ic/fKpN1z2+bX1bVu3kbw+3/mazzNJab+IFztSFAybOrSi7DQse6bb7
9al12+fSj+59ILr7rru6vhbB9Nl0nkM666Ef7P0zuXbi8L6pOP+In/39bF/T
1xgm1yclf/O9Pn4e/Pja13T9kv59+ivf1/f76V2/avUgdi14+rmQd1+7zaHn
XnD2O8ljpJ9Xnb/j6/C/Zr2G08fX9/sMPw/+Pp2+jtSuGQ5hXaH/nHyffq18
58XXs/XehTyHrPcyV73jun2/f0/XWjdP/mOhdbq2me/D+T7OVcjSXueO5Tcn
92U+Twf5mpDOKkn/T3tu2W353O799Xc/f9xZ/5gWnL6tHXNXv9T5XsL39f0e
vRegGMce/pbT33nVK++evu3MdHT3+Z8p7A0NYd5CGVo5xSW3oU0z96x1p+e1
/cGXv+x9n8JwjnHy2WY1i+/1QPVQv2iTrlHt+1L337bL2ev43i44TbrPtBrB
93qgWuyzN60j+F5PXbE5H5mex91veV9bel7bttffycwYNnyvE4pjs2pcM9PS
x7XqOXzO5/kcdfNFeceV42us29x2W/olfZLjS54DQA8cmQRZPtUkx7cIv7d1
v/9tK0k/eq/x+i0XBqf3WjaE7/0JwznG1C/aUL9oM5Dea7Oos/qcK2/2vl1w
mvQ5mw9OnPC+HqgW9N5qqIPea0wfPuzUCX2vE4ph2Xxd/to85p6DVfVx9lih
Ps9rx979zhkGMRPPtm5Lv6QP/hiAEpyYjG789OIuzfaypw923bZT28zC8oCz
ZpyFzsubfr+vXIbjz4935f5uPzn69Zt2gL9XG+oXfdJ5Y77XAtUzkN5r/pUC
vhbwC3qvNui91RDrvVn6WwA6WNrf+/bbbzt1QvyZ9aBNcy2q+c7dbvKjwf5v
S2fOoN9ZL41nfItb7zV2vRrfjn5JH/RegHLMHDoY7d58fewLNa7b8n+ct335
f9/o1nrPWR099EY9P8MObL68P59uR4avL70Xf68+1C/6UL9oM5Deu3Y8u78x
328A2wbzpPMcfK8Fqge9txrq4u/N03vr6G1pInmabq4OPPe73Lndvf6vy9tL
Fshg5OU6GNt20S+JY+fS6ZcAhsvJw1PRL+74s+h7Y9dG37ji8njW260P/22t
z3VXpfeGkOeAv1cT6hd9yHPQZiC919XjpK5hBP/g79UGvbcazN9Yd70Xj2b4
7Jtxe2yL+nwnjpws/X/zvL0r9xz1vl/qzEdH3snPdZjj//33n9AviUO/BACl
6fTpnrmukE+3M9fYl96bznPA36sJeq8+nK/WZhC9N57LlnP9IoRB27w29F45
0HurwTS0UL2PXXpvlk9zCLO9oHry9N6//OUj0diT04UyHspqvnmPWWdvVDBY
3dND833zmg30S6Lg7wWAvpiZju4+/zNt2u3YS+/1vN/xbev7yv2tGvy9+qD3
6kP9os1A/l5Xb7O3fvNRleE1rA16bzXE/kfHNfS+11ZI78WnWQtMW3WdVzC9
9/mdO+PbObMXUre3DJIi/9POAzj13gD86zKY5puX6zCHnSc/vMdPXw7DhVoL
YDDsWol9r70Y+1RsXsHPHnww5uEnn4kmf3tY9tzkoZ+sbtduN2zteZ/OGXa+
zveT36sPeq8+XJ+kzUB6r6Ofia9tDGDbYB7ye7VB760Gy76tg7/3gw/ejZZP
vYN2V2O6tNeFnzdM7IiPdXK7q155t6fPt5fGHz+vXVrv3O/Nb+x7f0hheVY9
fL7x323Om++1QqUkMzXplwDKcWLvc9Gt133dOY+txZIV0dgdW/VmFZyYjFad
vaRtO3Pnz81MR3d8fHHr9p84/05vWng6zwF/rybovdpwfZI+w9B7fW8TtEN+
rzbovdXgvM4+ML3X/L1OvyZ6by1weXdXPfQ3bXqvkevNTR33rF6vV1awnTfw
vS8k2bart+ab6L73PMbnsgD0SwB9MDMdbfnm+b113gzs81LJ73vs4W915fG6
zsd23rbotT7DgDwHfdB79aF+0aZfvTf28KL31gLye7VB760Oly7me12dem/I
s+WgN6785X/+2Itdeq9hvVwvn6/d3/zASX8Y3ydPJw7gPIY0BfJ827jy5nlv
cJk8LNOVzSe8dnx+fm6C/Wy/Z5bCSKFfAijBkZ3tntY+WHTpRimv7z/9bG2X
5jv5Ufttjj8/3q57bz/odc3kOeiD3qsPeQ7aVK73Wn8TwHbBaehBtEHvrY5Q
51l16r3Oa/TR8GqBM5v30Zcy9V4j1vgLzHEriuVV+94P8uzdH81eNFZc8+2o
peKZuKYDm3Y791gzhw7GfuBSj2k12brN8/f1vT/EoV8CKEhHHsEgLDtzXbT9
ZADbVBGdeq5lO9x0/+NxjvGPvvtv2v72nRf9+xHSeQ7ovZqg9+qDVqQNeq8+
5Pdqg95bHS49zbd/pDO/N+86fd/7EHrj0ns/6/D3JjhnCpZhwQfsex80CtNr
+9F8q2bdZuYrDBH6JYBiHNh8ea6G+2+vuS768aNPxjWt1bjG4X1T0fSuX0V/
ddd49I3l7VrxorHHvW9TpcxMR1u//x+jixd375svfGV19F/+++PRa0dP+l/n
KfIcmgB6rz7UL9r0nd9r1xyi99YC8nu1Qe+tjlhLy9DTfHshO/298VoD9SJD
b1w6bOe8tixirX8QzZfMDy/845NPzft1fWu+VqNZDkQA+0QN+iWAAsxMRzd+
OsPbu2RF/BlYVMc89Nz90Q0XnNO6/9hL7/nftoqx8/tW8yWE2MPh79UHvVcf
6hdt0Hv1wd+rDXpvdbh8lz5nYRiZem+gXmTIZ+LISacW+/CTz/TUew3T9J2Z
EDm+XrRefyT90r4Nt4Wh+67b7H2fqPHYY4+R5wDQi6n7urTeM5Zv6qt2MT30
6a+dET/GJ86/0znfDIYH/l590Hv1IY9Km0r03tRMkriPCWC74DT4e7VB762O
Lg1tQVO9afp9r+sqo/eanuh7P4Ib16w2y+6141tE701oZfqmnwuOXGe7re9t
bzJd/ZLNUrNs3jIz3SrGcoDJd6gO/DEABejQe5eds3qwa6hOTLb8wnzOjR78
vfqg9+pD/aJN33qv9SqO/sH3NkE7aX8veq8e6L3V4fJMrtxz1Ou6MvXeQL3I
kI8rM+SfP/Ziab03IdZ97fnQqfvO/c73uQqYx9UvxZ/Jlq+wbvN8/VRG/7Xb
mmZ8z2Pzj2F1mX21vOBLbyj+GBPPet8/dceOI/0SQG9mJ29v03sve3rwWZJJ
HvDnH3zN+/Y1Dfy9+qD36kP9ok3feq/1B1m9g/UYAWwXnIbXsDbovdXh0lCX
T/n1wOXqvR3aoW9tGtzkzdn7wc+f6VvvhfBJ11pF+qXYd2vabaf+az9bFoNp
u73+r12HtXa8mNfXrs0i13cgqLUACtDh763iHPXxbevn57Yxs3bk4O/VB71X
Hzu2lklFnoMmfeu91m+QCVcLyO/VBr23OkzX7dJQA8g9zdJ7W2slo7U22DwZ
V7ZucnzRezWx9+Yk37VMvxTrvubfNc9uEY03C7tfQd9w7DE2nTiAfVYn8PcC
FOTA1uqyHBIWNORF1/6YmbUjBn+vPui9+lC/aNO33uu6VpDrAoOD/F5t0Hur
w7yxmXpcgHpvrB1mZbWi9waLc8ba3O/Re7Xx3S/Fn/1FMx4M05cD2G91gnkn
AL1Jz1gzrJYZ9DEP/WT1vN57yQPovSMGf68+vusXGD7ovdr0rfe6egR8IcGB
v1cb9N7qaNN701pqgHpvnNkaoDYNblxZDnY9K3qvNsH0S6bjFtV8L72BeW4l
oF8CKEY6w3fR2OMDa7Sv33IheQ6ewN+rTzD1CwwNzldr05fe65jVFhPANkE7
+Hu1Qe+tjqUvv92djxCAhpql99o1kK5sAN/7Ebpx6vNzxyv9Gkbv1SSofmmu
hovzegvOc5s5NPg8pSaA3gtQnGTGmvGHD77c/2Md2RmtOnvJvN67cYf37Woa
+Hv1Cap+gaFA/aJNX3qvZckxq602pP296L16oPdWh+t6e98z0LL03rzZX773
I3ST+dyy8wlz2PWt6L3aBNkvWf5WkVxfuw3XbvUkyWfGHwNNwz7DDu+bit/n
irLvtRejOz6+uKUV/uvrH4me3vM3pR5jetevohsuOKfSbAgoB/5efYKsX6BS
0Hu16UvvvfJm8t5qBK9hbdB7q8Ol9171yrte15Wl98brdei95NeFR2bW8sJz
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
ab3X4UmtKn+gKdj+cp0j2H1sprL/Q36vPvRL+uCPAYCmgb9XH+oXfahf+qen
1mveXs9rRO/VJ+3vRe/VA723GPEcsxrOajOq0nvrsK0h4fJJV70f8ffqQ7+k
jdVW9EsA0DTQe/WhftGH+qVP9u6PZs+92q31Grte9b5O9F59eA1rg95bjOVT
79RWAy2r9zq17Rp4mUPBZvi5vL1V52KQ36sP/ZI+1FoA0DTQe/WhftHHjq1d
Z0ieQwnueSxf5w0gxyEBvVcf8nu1Qe8thsvzetUr73pfWy/K6r02l60rb3YI
OQTKZHp77XdD0Mzx9+pDv6QN/l4AaCLk9+pD/aIP9UsJtu3q7ek11o77X+sC
6L36kN+rDXpvMVr6XYeOd+/BD72vrRdl9d627e1g6cvF7t9knP7oOexvVf8/
8nv1oV/Sh3knANA08PfqQ/2iD3pvD/buj726hXRe48qb/a85BXqvPvh7tUHv
LYZL/zQvrO+19aIvvdeV4Tu3H+qgcQfzXOn4fhj/D3+vPvRL+tAvAUDTQO/V
h/pFH85XO5h4Nn8WWxbrNvtfdwfovfrg79UGvbc3rx096fRr+l5bEfrRey23
wbXNw8igVSHP22uZvsP4n+T36kO/pA96LwA0DfRefahf9KF+6cCyeT91RTmd
124/8az/tWeA3qtP2t+L3qsHem9vzM/alcNao/ll/ei9Rsvj68iirYO3edS4
fODDfK7g79WHfkmfJJMFfwwANAXye/WhftEHvXeBvfuLZzakiD3Alvnge/0O
0Hv14TWsDXpvb2wmW6aOt/st72srQr967zPHZnM9vnXZ/lFh/t1Re3sN8nv1
oV/Sh1oLAJoG/l59qF/0oX45NZ/DUFLnDdnTmwa9Vx/ye7VB7+2NK8u2LrPL
+tV7jbx8gmHrmHVj1Lm9Cfh79aFf0saunaJfAoCmgd6rD/WLPo3O7zVPb8mM
3tgDXAOdNwG9Vx/ye7VB7+2NS+81LdT32oowiN5rxHkWOTkFv5v1v42+Wbnn
qDdNnPxefeiX9EHvBYCmgd6rD/WLPo2tX0yzLZrTa7czD3DAuQ0u0Hv1wd+r
DXpvb1xap+Ud+F5bEQbVe408PdP+5nsbfWJ6t4/c3gT8vfrQL2mDvxdgyBzZ
Gf18w59G/+GP10Zr1qyJ1q3fEP2vHa9zvtoz5PfqQ/2iTyPrl/EtxbN5t+3y
v94BQO/VB3+vNui9+cRankPnrEufUIXea/jUNEOmzf/dsY9G4QEnv1cf+iV9
Gn09JECfWF9in4Exjh7l+Lb1LU2xkzOWb6rNuXtF8PfqQ/2ijx1b60MaU79c
ebNMNm8R0Hv1Sft70Xv1QO/NZ/exmdprnFXpvXGuQ4amWadsi6rJnWk3onl2
+Hv1oV/Sp5H+GICynJiMVp29JFu/XbKiS7s9/vy4U+tN3++hNz70v20NBL1X
H+oXfZpSv5gOViir99Iboo+OvON9vVWB3qtPU17DTQW9Nx/nvLIRaXlVUJXe
azg9vjXaH1Xi3B8jzPsgv1cf+iV9qLUAivGb9Re16bXLzlkd/eDnz0STvz3c
ftsjO93acAeLLnmgNtdsKYHeqw/1iz5NqF9Mv43nrPXSeu95zPtaqwa9Vx/y
e7VB781n+dQ7tdc3q9R7Wx7fDJ+veaF9b+soGXvpPe/eXgN/rz70S/okmSyN
uR4SoE9+ff15LV/urQ//rVOnffprZ2Rqu1/4/l9Hrx09GZ08PBX9ctNXWr+/
Zeq4921rGuT36kP9oo96HlUhrdfyG3a96n2twwC9Vx/ye7VB783Hlc1apxll
Veq98T5xeFrrtE8qeW7k5BmP0idEfq8+9Ev6NMEfAzAwiWd3yYpcfdaV2fuH
D77cddsDmy+f9/jOfX57376Ggb9XH+oXfZTrlzjDoYfWaxkPSvkNnaD36oO/
Vxv03nxcmp75XH2vrSiV671pDbymmcaDctP0+5nbb1/tb6NcC/5efeiXtLF+
QrlfAqiK2cnb5/XBLb9x325mOrrj44u7MxvGHs++/YKGvGjjDu/b1zTQe/Wh
ftFHuX7pmdd76Q3e1zhs0Hv1wd+rDXpvPi69t07ZBVXrvV0zylL7aN9MM+Zc
x9uc9dzwoHmT36sP/ZI+yv0SQGVM3Rdrg3nnVRO/bq9Zbmks++ET599Jhu+I
Qe/Vh/pFH9n6Ze14vtZrf/e9xhGA3qtP2t+L3qsHeq8bq/td+ay+11aGqvVe
w6WD23w739s7bLr0bs/bj79XH/olbfD3AhRkQe+1/PzMvx/YGl28OGMmWw8/
8CNfOgt/rwfI79WH+kUfyfzeiWfRehdA79WHHkQb9F43Tl2vZrkFQ9F7XZkO
NZpjV/m2e3pekN+rD/2SPpL9EkDFJHkOlz19MPPvWTPalp25Lpr8KOdxT0zO
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
m1AlEQSKMEhQIBVararv+be2h56evnq6Z3rm6v7198WnNNqdh2u6d3av6zf/
+V+P7EqveW193fdzLfv/rl7FK5+YCq9blXE2+TXclP9zfrX/H+c7OwLq4OjD
f9pX1htnf8t9P4+BHZ8Mlp21IHw+v7V5f+p1hlXfaz0YBj0HZVq9Zm3X71MA
o2XZaWp/3vOuaq+pjavG97+++BdDG1tWxuz7uAEAhmfZQz9x1vf6HlvVdOW9
0XFrfd332Ep/rmm5dst9jzzhfWwA9Fj+6z0/Aqouti/ZoJZtO+j/+QwgynHn
XXNfZoZL3gtgFFy1u8kc95Wr1440f+1Vdww0Xbw3C6Amq2bV99iq5hMTzzfi
WK0df86Z9/oeG5qJv8PN4Ds/AiptZiq48ePz0zO/BYuCr972/fB1ZH0Grf9N
ZGrHj4N/WjcW3Hjxb3Tc5tyzlwdbj876f159iGqcez2HYdX32v1anzA7vvZv
Ufb+VjQm698bP1/9sPGEjh8/7djb7XFGe9BwefiX48c96kdl85foHLmuW4Wx
c7nzcua5mROfv4Tft164abnq2MYPbm//7tvv3rdt9fqO13I/PyMdP2f29dbj
u3oGt39nJB6v38eu++X4v/a3NFp/TL/0fObr3fe4uVzs9Rz9G/+sYfu1fbz7
76jv8XM5/zmNX8f2Mo7Or82Fs37P1fFyrn9b13d9bn/J3iO1PSbRv/H+vVHv
z7TXcNptu77W+r/1hnPVQrfvN+O+a3G59e/KXe90P0/7f/J5eniu8cezNVN8
ryeZc8Dl9vmL9++139nJc1uFsXK52O/lju8fe5u8F8jptQev7cp5L7jurmDL
y2/lvg/7PbrxyvM/yD9vec778yrs1c3tPepsvtLr+sm81/v4T7FfWxOw/4C+
rvnL5Ten56rjT3ff3rJhR1+HcF+3MsfqGpflwBU4jlXFfm36ut6zqcCYUB72
a4vlvSkZZl1rPuLK3q/tpSMnnHWvVdjvuSyufens677HFmfnNDq/7NemifWS
NvsbFJ1f+jkAGWamgh999sx2RvihT60olPMmtbPjBYtqt39bPL+98P9dG1y/
6ush62mQvHz71y7pqoNevvov29f7s6/+bTB5cvTPwbKDaEzWG8L3MUX5mL/o
S+a9rj3RTu14sfv2WTW+lgWXOVZHrpw6LrSR9+qL1/f6HgvKR957Ksx0Xfml
77GVoey817iOl2tf6DpyvQcwduCY97HFkffqY72kL96rw/dYgMqK1bR+ZOGt
wfTM4O/J/3zVJ8P7+8JT9enja58JiOe9g/LV04L6Xn3MX/R11fe6ctV96ftJ
OutuzT0T5YzTMl3XY1TgGFYZea8+6nu1kfeeCns21KGOs19DyXtrUvvaL6tT
dvX4KGN9Wab4Z8HJezWxXtJHPwcgh2iftgWLynt/ee4+6/Yef7zOeWCt4+k7
76W+VxPzF30d85dkvW48+3XdR1aNr9myY/BxZvTu9X38qo68Vx9rEG3kve7s
8pzd5WSjvg0j7+3KyKNstPWvQk8H+1xnap7den6+x5ZEfa8+1kv66OcA9DY7
+d3y++2+uvn0fa581PvzK+Tw9mDb+MbgwU2bMtlnB+zfGy48u6MPxn2PPNG+
vV328V42/Rz0MX/RFu9HFWZF1qM3JVcNezxk3Ve0x1tabbB9zVUbnJOzxwS9
e3si79XXsV8b9b1yyHvdvQnq1svNZRh5786jM87jZplo3Y+dZf11qV+mvlcf
6yVtXeulCowJqKSovnfjv5V+n7aHmcL71S7J/dqq8Fzp56CP+Yu++PzFmav2
6MUbZkyuPhB58uIsWb0cBsyRm4C8Vx9rEG1Nz3uddZw1+1xflmHkvcbZ02HO
TVPven/ufT83Ry+HK1542/vYkqjv1cd6SR9zLSCHIfReeHX9peXXDFdQFfNe
6nv1MX/RF53f6bV3DNaTwbLXjMy37/3brGdD2Rlyg5D36mO/Nm1Nz3vV+9Ca
YeW9Dx14PzPvtczURz+4QYW9e+M9KmKq+Hyo79XHekkfeS+QQ5T3ltV7oXV/
0f5vSu/zJyX3d6tK3kt9rz7mL/p61vZahpv3/rJqcfvZv81y5mHvBSeOvFdf
x35tx6pX24bBND7vddRxWn9a32Mry7Dy3vD49ajxrWK/215sD5g6PRfqe/Wx
XtJH/14gh+OTwbKzFoT54Mpd7wx2X69ubt+XWbbtoP/nN0RVzHup79XH/EWf
ndvn73vAnataT98i92k5bBn7t1l27KoXbn2dPqX5kPfqo75XW5Pz3smT7t69
1p/W9/jKMsy812Rmvo+/Ut4e2iNSt5pv6nv1sV7SRv9eIL+frph3OiNcsCi4
d0/x9+YPTe8J/vH6L7dzRnPuGavDOaHv5zYs1PfC5zlm/qLNzu0rV68dvLY3
7vKbszPfXhmyZcJZvSHYpy038l59HfW9vA8ip8l5r/ViTa3vrWgdZ7+Gnfea
sQPHnLXSVc1JXVzPY+BaoiGhvlcf6yV95L1ATtGebXMuuO6uYMvLb2Xe5sSh
PcHWjXcGN178Gx23beefwr0cTDLv/ej5d1Ui76W+Vx/zF30TExPuXg4D5KrO
+4z3803ut2Y1vT2yYvr2FkPeqy9e30veq6fJeW/d6jj7NYq819j+bHXqg5Bm
ema2a+zRZfue7/Glob5XH+slfbZeop8DkM/PV32yO7ddsCj4/au/FqxeszYY
W7Mq+ObKa4IvL1mYmu/GfWThrdK1vZF9Tz4Q3Lvh/uDBTZuC2x/+P97HY6jv
1cf8RZtlQ9vGN7rz1WQeW0Sv/dviNcR5rhexTLgCx64uyHv1UXOiral5b3tP
rpRsr279B3oZVd6bekwrnpUm1TGzpr5XH+slfcy1gAJmpoI7Pzy/Z5bb04JF
wfjhE/6fT0NR36uP+Yu+vXfdX24vh7isHrz9KNpLGOS9DUD/Xm1NzXvD/gOO
bNL32Mo2qrzXuHohbD1aj7y3jjXf1PfqY72kjf69QB9mpoJHvvjrfWe95569
PHjogNb7+3VDfa8+5i/6/uuLf5GerVpfhTIeo1cvXrLeoSLv1Uf/Xm1NzXvr
mOv1a6R5r+O41qVmOtnDoQ7jp75XH+slfeS9QH+mH7sjWHbWgkJZ7x/cOl6b
zx0po75XH/MXbZYNOfvslpmvDlLna7ejh0PfyHv1Ud+rrYl5b1bfAav79T2+
slUh763DcbVMt269HAz1vfpYL2mjvhcYjP0dtP6013/h086Md/El14V9a8l5
q4P6Xn3MX7SFtYDD6N2b4uTht07v0VYk5129/vTtKnCs6oq8Vx/1vdqamPd2
9XKI1XNWYb/islUh77W+uL6PQ79jr3rNN/W9+lgv6YvOL/u1AYOz9b39rrS/
j4b1SzVR36uP+Ys4y3RdeeswH3P1+vS6Yst4l94QnLpngpy3JOS9+uL1vcyX
9DQx761rrtevKuS9dajvdfUeXrnrHe9jy0J9rz7WS/qo7wX8sb+jvsfQRNT3
6mP+Is5666ZkvbMXrRzdGCz/bSHfHQ7yXn2sQbQ1Le9tWi8HQ97b2+TJxM9F
LPut+mc/qe/Vx3pJH3MtwJPjk8Hi+edU/r1dRdT36mP+Im5sY3ptr/Vd8D02
lIK8Vx/9e7U1Le+1+XyTejmYkea9jhrZKu93Zq544e1a9u411PfqY72kb2Ji
gn4OgA97vhfmjeS9o0d9rz7mL+Iuvzk9771nwv/YUAryXn3079XWtLy3ab0c
TBXqe6ue99b554L6Xn2sl/RR3wv4sfvW3yHv9YT6Xn3MX7SFfRvS8l7r81CB
8WFw5L36qO/V1qS8d+fRGWcvh6rnkYOoQn3v+OET3o9D5rgdPxdVH7ehvlcf
6yVt9l46eS+azP6O/etDtwff/tYtwbd/uNXdR+nw9uDudeva7t1wf8f/87Db
mLE1q4JlZy1o543kvaNHfa8+5i/ibH+0tLzXeur6HhtKQd6rj/pebU3Ke501
nDX4zP4gyHuzWdZf558L6nv1sV7SR96LprKs96kvfaSd+5mPnn9XeuY713th
GMh7R4/6Xn3MX3SF+6OlZb2mAuNDOch79cXre8l79TQq703LIu1rNfjM/iC8
9nOYO+ZVznvr3MvBUN+rj/WSNup70WjHJzvqbEMLFqXPG2amgjs/PJ+8VwT1
vfqYvwizGt60rNdqfn2PDaUh79XHGkRbU/LesQPHnJ/Znzzpf3zDVIX+vXb8
fR8H55gtk055L6Auaz/qe/WxXtIXnV/2a0PjpOW9LTdNvZt6/VfXX0reK4L6
Xn3MX4RZj960vHfpDf7HhtKQ9+qjf6+2puS9da/hHIT3vPfxV4IrXnjb+3FI
86tZd+/eurwPQH2vPtZL+nhvHY2VUrN77hmr3X+DS+jpMO/C7hph8t7Ro75X
H/MXYfdMpOe91475HxtKQ96rj/692pqQ9249OuvM9Kpcd1oW73lvhXN1+7xo
nXv3Gup79bFe0kfei0abmQp+uPbPgutXfT34s6/+bbi/ruu69h7njz575ulc
eNWPgpeOnOhrfWL389q/bAnWLzmTvNcT6nv1MX8Rtnp9et47ttH/2FAa8l59
1Pdqa0Le29R92iKjzHude5+1WC2t72ORtGTvkVrl02mo79XHeknfxMQE/RyA
nF578NrMng+FvLqZvNcT6nv1MX8RdvnN6Xnv+NP+x4bSkPfqo75Xm3rea/s7
u/LHhXve8j6+URhl3pvVH6GUdVnJXO8FWA7se2x5Ud+rj/WSPup7gQLmMtpS
ekXN9Q+uat8pZdT36mP+omv2vKvS894dL3ofG8pD3qsvXt9L3qtHPe911vZW
tN50GEaZ9zqP+dyeaL6PRddYU/ZpM1an7HtseVHfq4/1kjabW5H3AsVMrvtu
2JNp4PuamQr+7pJLGtHfq2qo79XH/EVYWtbbcvJwM+qpmoK8Vx9rEG3KeW9q
bW+U79Xo8/qDGnXea2umuvRL7sh7Y5ezegdWDfW9+lgv6WOuBXhyfDJYPL+k
WmEUQn2vPuYvovbtT897P3aZ/7GhVOS9+ujfq005782q7bUs2Pf4RmXUeW94
7OfqeaveM9lV31unnw/qe/WxXtJGfS/g0Vw/B/r3jh71vfqYv4i6ZyI17529
aKX/saFU5L366N+rTTXvnTzp7iPbpNpe4yPvtToZ1/GvUg2NQq8P6nv1sV7S
F51f9msDRsfeL/3F7ZeyX5sn1PfqY/4iyrVX29hG/2NDqch79VHfq0017+2q
7a3pZ/XL4CPvDc+Bo1eCXa5KnuoaI/W9qBLWS/qo70VjzUwF6668MlixYkVw
/aqvh/8O+7L9+82V14R9HKK8kbx39Kjv1cf8xYN7Jk7X2c71Vwgvjz9d2v2H
/XmtbwN7tTUCea8+6nu1Kea9ttcWtb0f8JX3hjW+jn4JVTkPCv0cqO/Vx3pJ
H3kvGmtmKrjx4/PbuZ8v5L2jR32vPuYvoxPmsEtvcO6jZrlvKXupWXbseAzf
xwDlI+/VF6/vJe/Vo5b3Wt2oM2OsWY5XFl95r8k6F/3s3Wbnb+vR00oZn8DP
CfW9+lgv6ZuYmKCfAxrrpyvmkfc2EPW9+pi/jFBG1tuxn5rttTaEx6F3ryby
Xn3UnGhTy3tT92ibyxzP2T3arLMqfOa944dPuGutW+clb64a3k9Kdrxwz2Dv
U1PfizpgvaSPuRaa7L0ta8h7G4j6Xn3MX0bEsX9a6Zmv3c5xv9Nr7/B/HFA6
8l599O/VppT3Ltl7JDNb9D0+X3zmvSY1gy9wXm6aejezTniQ3hD070UdsF7S
Zp+dIu9Fox3eHiw7a8EH+euCRWH+95XLLg2VffmSS64JvrxkIXmvZ9T36mP+
Mnzh569d/XQzMt++ejtcO+a8P+Yvmsh79dG/V5tK3muf73fmgS3W09f3GH3x
nfdadtpvXtvrvA7SG8Io9HOgvlcf6yV95L1otJmpYP2SM8Pcb8kDI/w7dnh7
+3HJe0eP+l59zF9GoEhtb7z/wnlXFct8M2p7/+uLf8H8RRR5rz7qe7Up5L29
evZWZW8wX3znvSZzD72Mc5R5XhN1wvZzUHRcCv0cqO/Vx3pJG/W9wKng5ds+
E5x79vJg24nRPu7s5HfJez2hvlcf85fhs9w2NYe9/Obg1NjG7My3SM/djP7A
z9/3QPDs9u3ejwXKR96rj/pebQp576D9AtRVIe9tnydH/4S0zPeKF952570p
X7d+HoXH5Li/frJjX6jv1cd6SV90ftmvDU0V5q4LFoX9+kf62Mcng8XzyXt9
oL5XH/OXIcuouT2148XT1+lV/2s5bq/HybiPqLaX96s1kffqi9f3kvfqqXve
a5/jL2M/MGVVyXtNr2ze2Dnt2bO3pGzfdV91ynup79XHekkf9b1ovJmp4HvX
rQoeOjDi/lutx31w06Zg59EZ/8egYajv1cf8ZchcOaz1841fr0edb2bma7lx
Rh9gq+1l/qKLvFcfaxBtdc57wz4OQ+jpqqZKeW/P3ht5Mt6MzNhy4iLjcd2P
73NWBPW9+lgv6WOuBaBpqO/Vx/xluMJ+DGk5rOW7yeu79lqL9Xbo6ue7ZUf2
XnCr1zN/EUfeq4/+vdrqnPdm1oo2vGdvXJXyXtNz/7Ye9b+Z575AjW/H+wWJ
8fg+RkVQ36uP9ZK+iYkJ+jkAHtjfUFvD1ulzPSqo79XH/GV4wmy2Vy+HJOvp
22svN6sZttv3yoetb/Ap+lGpI+/VR/9ebXXNeydPZtT20rO3Q9XyXhNmrVl5
vUP0ecuOPh6JrHbr0Xw9POy+XPXFvo9PEdT36mO9pI/6GMCTuf69tmeA97E0
DPW9+pi/DJHV3ubp5ZCUse9abvYY1jv4FPMXdeS9+qjv1VbXvLcrK4xlfnnz
vqaoYt5rima+yf4czhrhnLXd9nOi8H4B9b36WC9ps/fSWS8BnhyfDJadtYD9
2jygvlcf85chctXf2td73XbQzNey5rn7Yv6ijbxXH/W92uqY94b9AOjjkFtV
897IhoPv9+zpm9aLeeGet5zXz/O5TGeNcM1+hqjv1cd6SR/rJWD07P3SX9x+
aZg3kveOHvW9+pi/DJGrr+740/lun6e3Q4+s1zB/0Ubeqy9e30veq6eOea99
5s6VDVoW7Ht8VVP1vDcS5r5W72vZq/3bYvuvubLbrNw/z+cyl+w9IvGeAfW9
+lgvaaO+F402MxWsu/LKYMWKFcH1q74e/jvsy/bvN1deE/ZxiPJG8t7Ro75X
H/OXIbH+uo48tmvPtSy2r1uRHg6JrNfQv1cbea8+1iDa6pj3OnsA1CynG5W6
5L0D/yzEa3Rz9GRw/RxZ3bDv51UE9b36WC/pY72ExpqZCm78+Px27ucLee/o
Ud+rj/nLkKxen57JWp+Gove1b38we9HK7Kz32rHUHJn3q/WR9+qjf6+2uuW9
Yc9XR00nfXvTKee944dP5O73m+TqIdHrdlVDfa8+1kv6WC+hyX66Yh55bwNR
36uP+cuQuHo53DPR/31azbDlyEtvCGbPu+p0djy2sWe9MPMXbeS9+ujfq61u
ea8z36vZHlujpJz3Gmfv34yfiY73DRK3r1tPEOp79bFe0sd6CU323pY15L0N
RH2vPuYvQ5DRy8FqdUc9Hju3ExMTfD5JFHmvPup7tdUt73X27qWXg5N63ms9
fl15r30v7TZhr2CR9w2o79XHekmfrZXo54DGOrw9WHbWgg/y1wWLwvzvK5dd
Gir78iWXXBN8eclC8l7PqO/Vx/xlCBy9HMKeDB7Gw/vV2sh79VHfq61uea+r
5+o5u/VyzLKo573hz0VGjW9ava5SD2jqe/WxXtLHegmNNjMVrF9yZpj7LXlg
hH/HDm9vPy557+hR36uP+Uu5wixmGL0cBsD8RRt5r754fS95r55a5r3JbK/1
f+bpbk3Ie+38u/r4Jmt2rc9zvz1/q4j6Xn2sl7Sx3wlwKnj5ts8E5569PNh2
YrSPOzv5XfJeT6jv1cf8pWTjTzt7OfTqszss7DerjbxXH2sQbbXMe1NyOtfn
9tGMvDf82XDV+M5lvtbDwfLcrOtZX1/fz6Mo6nv1sV7Sx1wLTRfmrgsWhfs0
jPSxj08Gi+eT9/pAfa8+5i8lsz3U0vLey2/2NibmL9rIe/XRv1ebSt5bx7rM
UWlK3ttRt5vR38H5tRr2cjDU9+pjvaSN+l7gVNjT4XvXrQoeOvD+yB/3wU2b
gp1HZ/wfg4ahvlcf85cS2V5srn3atuzwNi7mL9rIe/XRv1cbea++puS9xvo4
O2t8szj6/NYB9b36WC/p4/OQgD++PgfddNT36mP+UqKxjelZr/Xz9Tgu8l5t
5L36qO/VJpH3Pv4K/RwyNCnvdf6M9FDnnx/qe/WxXtLHegnwhH4O3lDfq4/5
S4lc+7StXu91XLxfrY28Vx/1vdok8t6a53XD1rS8t+vnJKuvb437OESo79XH
ekkfeS/gyZ7vsV+bJ9T36mP+UhLr1+Dq5WB9HjyOjfmLNvJeffH6XvJePSp5
L/0c3JqY95orXni75x5uCu8TUN+rj/WSvomJCepjAA923/o75L2eUN+rj/lL
SRz7tM1etNL72Mh7tZH36uM1rK12ea8jv9twcMT7e9RIU/Ne86vZudzX3iew
nx3Tumxfq2u/3iTqe/WxXtLHXAtNZu9b/utDtwff/tYtwbd/uNX99/nw9uDu
desGZvuzja1ZFSw7a0E7byTvHT3qe/UxfylB1j5t4097H5+dW3vPmverNZH3
6qN/r7Za572xy1uPamR3w9DkvLcJqO/Vx3pJm312irwXTWV/w5760kfauZ/5
6Pl3pWe+c70XhoG8d/So79XH/KUE1p+3gvu0RZi/aCPv1Uf/Xm21zntjVGo1
h4G8Vxv1vfpYL+ljvYTGOj7ZUWcbWrAoGD98ovu6M1PBnR+eT94rgvpefcxf
BhNmLxXdpy3C/EUbea8+6nu11S7vdfRitc/t+x5bVZH3aqO+Vx/rJW3U96LR
0vLeFld//VfXX0reK4L6Xn3MXwZ0z0Rl92mLROeXfg6ayHv1Ud+rrU557+RJ
R977+Cvex1Zl5L3aqO/Vx3pJH+slNFZKze65Z6wO53yp1y+hp8O8C7trhMl7
R4/6Xn3MXwYze95V6Vnv5Td7H1uE96u1kffqi9f3kvfqqVPea3uykfcWR96r
jfpefayX9LFeQpOdOLQn+OHaPwuuX/X14M+++reZezLY37wfffbM07nwqo3B
S0dS+j7kYPdzaO9zwfolZ5L3ekJ9rz7mLwPY8aK7tnfLDv/jm8P8RRt5rz5e
w9rqlPde8cLbqXu1zdv5hvexVRl5rzbqe/WxXtLHXAvI77UHry0vo311M3mv
J9T36mP+MgCr4a3wPm0R5i/ayHv10b9XW53yXst1U/drI+/NRN6rjfpefayX
9E1MTNDPAchrLqO1OoCB72uuf3Ap94VCqO/Vx/ylPycPv+Wu7bWevhUYY4R+
VNrIe/XRv1db7fLelF4Orj09cBp5rzbqe/WxXtJHfQxQzN677g/GD/fXyyHO
3jP9x+u/HPYM8/2c6ubudeuC1WvWhn04TNHLf/TH17bz3vM+8Ynw/ytWrOj7
3wc3bQr/XlomYbjs//Kz27d3rDMjVRhblS+funbMWdsbXbcqY43er46fY99j
4nJ5l+M5gl3mNaxzOfp/fA3Ca1jjcvT/SPx9uSqMz3U5tXdvy+0/frkyY6zi
5XiNPr+j9S67XsO+x8Xl8i6nrZd8j4nL5V4m7wVQN9aDYdC988pkWbL9Do3n
T1z2e9mlCmOr6mX711Xb+19f/IvKHUfOs/5lzq3u5V6qMEYul39uqzC+5Fjv
e+QJ515tDz+x1fsYq3w56/xWZYxcHs5rugrj4vJwzq3vMXF5OOeYz0OiiazG
9p/WjWXu0zYstlec1an6eOy6q2rei+rJO6fBU8H+6/6XM+99/r4HOJ4AADnL
HvqJs743ug5/+7JxfPRxjvVxjvX5znCAkZvroftbm/eP/LFnJ7/Lfm19st9X
1kOhX9/+1i0d/Rwsd7/jO3cU+jfO3i+znkeRQ9N7Ov6f9jWuM5zrROKfBZ9+
6flKjK1q10l+P9yPLS3vXXpD4fsf9rjt6/H5i+8xcZ3yrzO148ft82uXqzIu
rjP4dSL2tzNaX0bXqfrYuU7vcxt9LflZ8CqNO+6c3W921PS2/22p0rH1fZ00
8X4O0VyrimPnOsWuE7HPg+d9DVf9OXGd7vNr0l7DVRsr1+n/OnaZvBeNNpf3
zrvluZE/9qvrLyXv9cTWIOzXps3mLPEs0Pd4Km/8afc+bTte9D++FMxftMXX
mXbZ93hQPl7D2uxvb3R+bd7lezwuqXu1tSzZe8T72Kou/t66fWbS93hQLtvD
Nzq/7NemifWSNtsLl7kWGu34ZHDjx+cH556xOth2YoSPOzMV3Pnh+eS9nsTz
XusN4Xs8GM45Zv6S3+x5V6VmvbMXrfQ+NhfmL9rIe/VFdUVW42trEt/jQblq
k/dGNb0JZezNrC7Ke8PXMHmvnDfffJO8VxzrJX3xGn3fYwFGbi7vDbO/BYuC
lXdu7tgHfBiXH7vzG8Hi+R/0fiXvHT3yXn3MXwrYssNd22t1v77H5xDvM+Z7
LCgfea8+3rPRVoe8d+fRGWfv3l/N+h9f1cXrey0b9D0elIu8Vx/rJW3U96Lx
4nmvJ+S9o0c/B33MX/ILa3jjGW/Ux9f+rcD4XJi/aCPv1Rd/DVPfq6cOea/N
wVPre1tf8z22OiDv1Ubeq4/1kj7WS2g08t5Gor5XH/OXnLJqe++Z8D++DHw+
SRt5r774PjHkvXrqkPeGvXvT8t7W132PrQ7Ie7WR9+pjvaSPvBeNRt7bSNT3
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
6nv1WB+H9nkUzXup79VH3qvP9jqhPgZwsz3YHrvzG4Uy3nMWLAq+tvGfyXkr
ivremrH624L9CeJZUXv+4qoRFql7nb1opfs4WdZdgTGWibxXG3mvPvr3aqtD
3mt9Hkbx+OS9Wt7bsqbzPIr2c6C+Vx95rz7WS0A624PtH6//cuE92G5/6ue1
nrs1AfW99RH2aSjQxyF+jqP3M6P5S+Z+b3Xv4ZvR2zisjfY9viFg/qKNvFcf
9b3aKpX3Pv5Kat5r+7iNagxl5b2WHTu/15rn2PeLZK/R9fvJay0DtLmWSbu9
fS26/7LWRnZ//TzPzPtMeb/J5pdp494//lfd57HP+t7486jie17U9+oj79Vm
v1dYLwGdbA+2u5Z/qlDO+2sXXxn83XOan+VRRH1vjVivBVfea71qHbdLre89
lVEDm9ITojay9rET7OMQoX+vNvJefdT3aqtD3js9M5q8d9D6XuspN/nY3wfX
f+HT4e2ueOHtjvu2fnPR99r3vfjKYPWTe1Pvz2pabv/aJd17Sp+9PLh3T74e
F/b5R7sP63Nn9S5Thw6d/t7MVLD5r/8kdb10yV/eE+w8OlP4+NnabMONf+js
qbf0q98KHn7hUOFz8voz3z+97/aCRe3s357XxivP77j/T//NT8Lv/eL2S1Mf
3471zd+9JbjjO3cE3/7WLaHbf+xeF9rjfuPKpan3c9P3Hw2mX3o++N51q3Kf
i2Ghvlcfea8+8l7gtH1PPlB4D7ZPXX1r/3uwvbo53NP1tj3veX/uTUN9b01k
9HEIc9uM21o+lKzvDVn/B6V+B67nExnb6H+MQ8L8RRt5r754fS95r55K5b1p
e7W1jOrzeP3kvVHGm5YLrtz1Tngd2z+6174iHb0GZqa6ssw0lz467RzT1o13
ns5IE59vtGzwvWfHcq2fbp78j1zHzXLp5Nps8SXXBavXrO3Kt8PnuvSWnjXb
UXaczLm3nTgVrs1cx/Ovb11caI2Y2uOhdfwf+eKvdxw3y3ftNXLv9b/nPM++
UN+rj7xXG/W9wOnP5VjuWuRvuO3BNvnvxd5H7rLne5X4W95E1PfWgKvXbtRv
t0f/Bef8xWqC+8iPK2fLjuw97MzlN/sf5xAxf9FG3quP17C2quS9VsObmvc+
/spIx1Ek752d/G7PvHTryk92fO3C3/6MM6sM+xTP1Zm0s8YLPhd85bL0elWz
4eD7HWP66Yp57mxz6S3B0w/cUmgt9YWnDmYer+QxsMdI1thYHnzjx+d356RP
THXd3+5bf8c5lnPPWB08P/3PmetBO+b2HtWenz7cdZznXXNfmIc+u317+9+0
dWL8GKblwe9N/qBSeS/1vfrIe/XxeUg02vHJQllvmXuwvbr+0kr8LW8i6nsr
zrJeV5/dnDWrzvmL5cSu+/X9vHsI69/Gn87ely3Ws1e9Xs7OrdVwM3/RRN6r
j/692qqS91r/AN95bz/1vYem94S9Bbbc8Hl3Tnn28uCeZ3a178P+7rt6DsSz
yXhuamNLu00yj7Qs8t4N96fWoXbc7upbwzHZ722rpV2/5EzndZ375c3VxMSP
k7P3Rmstd+eHuzPfT296qeN6Vgu9+o4NPcd/4c3rU68T76GRPJe5+vfGntNH
Ft7qfD7xGmnfa0Tqe/WR9+rjvXU0WmuOkPa+cPj3/sLTX7deStabt8zPfNmc
KXpv2Pff8iaivrfCMno4FKnDzZy/uLJke2zPzz/cf856S0RjbP0b1vFm5d8F
9rFTwvxFG3mvPvr3aqtK3muf769j3tuWyD7jua0rM0x7LFdNqes2Hz3/Luf9
x3sSxLl61u6759r08ax8tPv6M1MdazPLtMcP96i1Oby9u35nwaKuGuXoXPzo
s2d2XC+6HO9jEd+XzWqLo2ORdi6zjmvk5ds+88FzOmN1Zu/oqA7Y9xqR+l59
5L36WC+h0TLy3vDv9/+8O3jyl9PhWtN+H/bLbj+148dhz6tkHyrff8ubiPpe
/8I80norWMZq9brxjHOAPg7xc+ycv1ifA9dj+Ozja8+tSK7rqOttQtZrmL9o
I+/VR32vtqrkvZb5pea9O98Y6Tj6zntT1irz1m7OvN17W9YUynrTbtPuaZty
3egzinFffz67xjW1n8KCRV1ZbjwXzZulmqMP/2m+PNkxfjumyetZtmuSXyta
35vMmLPqe03Uy8L3GpH6Xn3kvfqi/Wz4PCQaqUfeOwq+/5Y3EfW9HlmmufSG
/vLMLTsKnWPn/MXuJ+txPGS+YUY7YNYb7t3m+/yOEP2otJH36qO+V1tV8l7r
GeA77x2ovjdlrXLT1LvZt0mpCS58G0d9rEnmpZYNW9+MzPufmUrtu9CRlSZq
ewutk9LWdI7n0JX3puTOWYrW93bVFPfKiOf6DS7Ze8Tb68ZQ36uPvFcf9TFo
NPLeRqK+15MevRoy63qtFrjgOc6cv/TKVgs+3sCyao7zHJ8CWbgK5i/ayHv1
xet7yXv1VCXvtZxTLe/tuXZI7M2W6zYpGbHrNq//YHnn81h8Za79TZK3S2al
aTXG1o8j73H++apPdt9/Sq6aHEeRxymjn0Pkv6/6kfO4vf7MT0vbM2aQn1vy
Xm3kvdpsbsV6CY0Wn0MtWBTc9P1Hw3Vl1L8hulyG6ZeeD7aNbwy+ceVS8l7P
qO/1wGpm+80z+8gye85f8vROsH3jRnFs7HH6zXlz7F2nivmLNvJefbyGtVUl
77V9tqxXr1I/h55rh35uM0De+6FPrciXTb66OfMYpNUNF8l7U/tYrHy06xin
5b2u3hVJ/fRzcI0tWn+ufnKvt9dHFup79ZH36mOuhUabmw9Z3/y8f+dL0ZpT
sV+bP9T3jlifWW+4N1vOfr1p57jn/MVy1qzMd1T7nhXobxHu3WZ9GxpYz5vE
/EUbea8++vdqq0reu3DPW82r7+3jNlHP2Dy3SeayufPemang7vN/M/UYpB2j
IjlsKGXftrRjPGiu3E99rz33ZE+H5DF8+IVD3l4nrp9b8l5t5L3aqO9F4831
R8q7F0CZ/m3NReS9nlDfO0J99HAIc94B+ynknb/06psb5qvDPD6WZ2f04w3H
t+PF8N+m7MOWF/17tZH36qN/r7aq5L2W63bU985dPmf3myMbQx3y3pHU955K
yUp75L1FctjUve1Kznv7re8NHd7es4/guRk9HkaN+l595L36WC+h0eby3i88
dXDkj12VvVebiPreEem1L5rlrFaravW/lguPP11apllo/hL1dnDlvtZbd1jH
yFX73BoL+Uc23q/WRt6rj/pebZXKe1Pqe0e9F1bV895R1PemZqWxY1BG3pun
vneQfg5p48yd95qZqeCRL/56ZuYbHvsnpry9ZuLni7xXG3mvPtZLaLTW39x1
n/xvvfesHYa5HlbkvaNHfe8IZNWtRnWzffZqyHuOC81femXTlksPY6yujNly
YN/nsOKYv2gj79VHfa+2Sua9sTpf6+s7qjE0ob7XakHzHIvkcfjo+Xc563sL
r5My+kXEr1d6fW8fnxPd/Q839sx8L3102tvrxlDfq4+8Vx/rJQBNQ33vcPXq
kTCKvrh9zV9s77OszLfsDDYrEx9iFq7Czu3ExASfTxJF3qsvXt9L3qunknlv
DHlvJ2/1vXNZqesYLdtW4DOYA9T3DtS/t0h9b8yJQ3uCLTd8PjPz9VKTFDtf
5L3ayHv12VqJfg4AmoT63uEK++9m9XAYQZbZ9/zFejdkZb7Wd6KscTry5fD4
VeA8Vh3vV2sj79XHa1hbpfPex18Z+efrqp73jqJ/r+WHyT3LPr3pJef9hsdo
5aP5j3Na/96ULNZHfe+h6T3OY3R83zPB+iXpe7nl+hkZEup79ZH36mOuBaBp
qO8doqy81LLeHS+O7Bz3O3/JzKuN9X4oYYzOx7Ec2Pd5rAHmL9rIe/XRv1db
pfPellHWTVLfO+fw9s762wWLgvHDsdulZM7nnrE6f2/dlPresQPHuq5Xen1v
jrz3zg/P75ld7x//q9TnPz1ToIdxyT+35L3ayHu12WenWC8BaBrqe4fEtfdY
ZPzpkZ7jfucv9rcx7C+c9VzKqFGml8NA2G9WG3mvPvr3aiPv/UAd8t5R9O99
b8ua7Oef0n+3SE+H5P1bb+C0rLT0+t4e/Ryi21h2O3ky+/6PPvynnc9/waJi
e9aViPpefeS9+sh7ATQN9b1DMOretznO8SDzF+svnJn5DtqD2OqcXTXQvs9l
TTB/0Ubeq4/6Xm2VzXvn9mxLq/scppHmvTNTlazv/emKeT3vP5nZFulpkLx/
V05cen1vjvFFtyl67iyz7pURDwv1vfrIe7VR3wugiajvLZn1tM3Keq3Hg4dz
PPD8xepss/adW3pD/2N05eMejlVdMX/RRt6rj/pebZXNe+eMMu8dqL63j+z2
1Kubg8Xz82W3bQPU97r6JsS99+xY53N39TZoPd9kj99cNb6J8dv9u45tWt6b
t2dE2rlMq9vd8zdjwe0/frnrNnn6ET/yxV8vnHUPA/W9+sh79fF5SABNQ31v
iayXbUbW62vvsdLmL1aHm5X5XjvW3/26+hzTuzc38l5t5L364vW95L16yHtj
Ump0c39W/9XN3Tlxr36xKdltr9sMUt9rPrLwVvdzaY0nnj/bdTN70ib7/M4d
q4cOvJ/r+Pbqm/DzVZ/suu8NBx33nSJZRxwe37Wbw+d04tCe4KE//92OY57M
iC99dDrzfMeP1ReeytfLYhio79VH3quP9RKApqG+tyRW/5pV1ztoz4MBz3Fp
8xfrO5z1PK2+ueB9OntFjGg/OwW8X62NvFcfaxBt5L1zDm8P7lr+qe6sN8oJ
l94SbHnZMVeamQq2rvxk6m12Hp0pdBurYXXmpa0xrl/SXVNrtaVpfRrS6nsj
X9v4z8HUoUPh9Swv3P0PN3bVwubqndAaU1dGvmBRsPrJvR31rsf3PdOV9Wbd
//Rjd6Sfh2vuy7fn3Kn0nhNp5yieaSdrgpc88LPuut3WuYufh6wa5VGgvlcf
ea8+5loAmob63pJYP4MKZr3ROS51/tJrLzqrcy5yf4778XnM6ob5izbyXn30
79XW6Lw3pb42L9tHznofrFixoud1L7z62mDlnZvDTDC6TbKPQ9KvXXxl+zZW
S9pVR5vigouXhzlr9PzS6nu/vGRh7wz0mvsK9aK1vPgXt3c/VjSmryzszIP/
x3eeTK8bnpnKzNzjFl9yXZhZZ+Wsrv4crqzXef0Fi4Kv3vb9YNv4xmDDjX/Y
eR9rN3vNeqNxk/dqI+/VNzExQX0MgEahvrcEWTWv1v/Aan89n+PS5y+uHgzR
c85bm+uqi2avtkLIe7WR9+qjf6+2yua9o9iv7fD24MFNm4J7N9wf/uu6nPav
1aZazerd69a1r++y6Xv/X7Bx+4HwMd+b/EHX/SUvR+55Zld7nPHbJG9v9x/9
/+EXDrWfX7K+1/Zrs1pQq529/guf7splLdOc/PdDfR9P65Hw2J3fCK5c2J0p
W+b97R9uzazNtdzyXx+6veO4pR3/6Hv2/165tN3nzvWrgt+/8P/qyG9dWfHz
a0/n7Pa6mNrx4+Cf1o0FX7ksse/dBZ8LLvnLe9z13iNGfa8+8l59rJcANA31
vSVw9bQtknsO+RyXPX+x2ltnH4YiNc2Onse+eh3XlZ1be8+a96s1kffqo75X
W2XzXh/9e8Uk63st743nrfb+TWQYj29Zq+9j0DUmwfesqO/VR96rzX4vkfcC
aBrqeweUVdvbRy/bYZ3jocxfrDY3a/+2PJmv7clW5t5vDcX8RRt5rz7qe7WR
9+pKq+/N2/sW9UF9rz7yXn2slwA0DfW9g3HVuIZfr8D4onM8tPmL1S/3yHwz
+1m4+h5XJCuvC+Yv2sh79cXre8l79VQm753r35C04aBj7zL01Ku+Fxqo79VH
3quN+l4ATUR97wAs63TlnFb363t8sXM81PlLVo1zrz3cktlwdLkCfTDqJDq/
9HPQRN6rjzWItqrnveOHySf75erf63tcKBf1vfrIe/WxXgLQNNT3DsB6DtRg
r7GRzF9cfRmyMl9XTlyx41cHZEXayHv10b9XW+Xy3kTu22s/LrhR39sM1Pfq
I+/Vx3oJQFlmXj8Y7jlrazjbR8l+rwyyH++wUN87AFcfg4r1IhjZ/GX1+kKZ
r3O/t8tv9n7M6ob5izbyXn3079VWhbz3V7OnUmt7jX3P9zGqq7T63qlD1Zvv
YzDU9+oj79XHegnAoI7veya48eLf6Jj7JeeBf/fcy97HGaG+t0+WWzoyzZ57
lHk4xyObv+Sp87U83BTt/QAn5i/ayHv1Ud+rrQp579ajs+l57+OveD8+dfZv
ay7qnOsvWER/DEHU9+oj79UX1eDRzwFAP/bdc60z502at3ZzJeopqO/tk6uX
g+0/5ntsKed4pPOXPP18s/Z3q8Axqxv6UWkj79VHfa+2KuS9V7zwdnreu/MN
78entg5vD278+PyuOf7KJ6b8jw2lor5XH3mvPupjAPTrF7dfmjvrbWe+tzzn
fdzU9/apJr0conM88vmL1ejGj5HreFV4n7s6Yf6ijbxXX7y+l7xXTxXyXst1
k3W95L3FWZ2n9Wt77M5vZM7x/+Dr64Infzkdnu8q1Hdg8PNO3quNvFebza1Y
LwHox3vPjnV8jmvt+HNh7y57L/jQ9J7MOeFte97zOnbqe/uwb39tejlE59jL
/GXHi4Vqe2cvWun9WNUV8xdt5L36eA1rq0Tem9ijLbLh4Pvej0+tHJ8MFs/P
X9tx7tnL2Q9PAPW9+sh79THXAlCUvd/7o8+eebped+ktwfTMbPp1D28P7j7/
N7trfD9/v9f3/anv7YOj92y4/5jvsTnOsbf5i2W+eWp77TqWo1fgeNWRnVvr
SUU/B03kvfro36vNd95r/WTZq224LAOM/hZbNuh7PCgX9b36yHu1Ud8LoC+v
bm6/f99zf4bjk119vs49Y7XX9/2p7+2Dq3fv6vX+x+Y4x17nL/v2n87Cs3o7
WC5cgWNVV8xftJH36qN/rzbfeS+9HIYvynsNea8e6nv1eV8vYejY7wRAUa//
YHmYlV766HSu67/24LVdn/OyPZN9jZ/63j646lUr2nu2MvOXsY3dx872t6Ou
d2DkvdrIe/VR36vNe97r6OVge7j5PjYqyHu1Ud+rrzLrJQwN6yUARVkvh0I1
uoe3B8vOWtCR92474W/8EvW9tjeYZYlWX2v/tv4/rD664f3WqHdvdI4rNX+x
fHfHi5U9XnXE+9XayHv1Ud+rzWfeO3bgWHptb4uzBxkKI+/VRn2vvsqtl1A6
8l4ARe0f/6tg9ZN7898m0dOB+t4BWM6b1RvWakfL7hNgj+nqP+v7eGScY+Yv
2pi/aCPv1Rev7yXv1eMz7+3q5RChl0OpyHu1Ud+rj/WSPuuvTn0MgKFKyXup
7+2D1fH22gMsYtcd9uNefrP/Y5Jxjpm/aCPv1Ubeq4/XsDZfee/OozPOfdpu
mnrX+3FRQt6rjfpefayX9DHXAjB0xyc7+jnMu+U5r+OpZX3vPRP5s96I7bFW
xmNbrjvsTHkI55j5izbmL9rIe/XRv1ebr7zXWdvb4vuYqCHv1UZ9rz7WS9rs
s1OslwAM23tb1nTs17Zy1ztex1O7+l7r/Vo0641YTjzg48+ed1X6fVufB9/H
JuMcM3/RRv9ebeS9+ujfq81H3vur2VPdOW/Uu5deDqUj79VGfa8+1kv6yHsB
DNtPV8z7oLb38/eH8/FB7i/622Q5z7Pbt4eXo397fc0u37vh/vZ4Lvztz4R9
bQZh47E5UcT+Xpb1f7vszFvz2vHiQGPIut+yn29Z/4/PXywrqsKY+H+5/4/6
UUXrzCqMif+X9//4azj5O7YK4+P/g/8/Xt8bfb8K4+L/5fw//p6NvYZH8djn
7H7TWdu75eW3Oq5fhWNU9/9Hc+torlWVcfH/cv5vovNr57oKY+L/5f4/uV6q
yrj4fzn/j7+GyXsBDMWrmztqe2/b897A92k9GOL36dvqNWs7fpeW6ZWr17rz
1o9dFn7/v774F5l5r+XF/T7+8/c94LzfYT1nAEiK5/sAkMaV9c57ZJf3sSlx
/T7m97Q+zjFQT3weEsAwdNT2ltS3t4p57zDmP9vGs/dn23vX/e3rhrnsxy5z
Xte+b9crOs7ptXc4s2bff7fyYF6qj3MM1Efa65XXsLZRnd//e+L59Kz38VeC
tePPeRkToIDXiz7OcTP4zoUAaJmd/G47E/3o+XcF0zOzpdzvt791S/CVyy7t
WzIvtv8PwvpD2OdhrLeViS4X/Vr837DXne235shv91/3v7qu/x9PPOnMfGcv
Wtm+Xp7Hj/7tyHvj9730hr6f77C/P7Xjxx2fE7bL9rWs5+p7zHw///ftXMY/
f2ai81vVMfP94t9Pew1Xebx8v/fv1eT3017Dve6jas+L77u/n3wND+NnKv5v
u09vSt4b/xnkZ2zw70f/2nmNciL7f9rv6So/D76ffjl+HpOvYdf59T1mvl/8
+671Eq/d+n4/eX7tX/JeAEMxMxXc+eH5YZ567tnLg61Hy8l6y2D9iaq+X9vJ
w2+5s1vr5+u67Zi7Jnjm9YPFx7J6ffr92eNU4Di52N+66G+b9S7yPR6Ui/1m
9R2a3tM+v+zXpim+zmS/Nj3xvoH2N3mYj3XT1LvOXg4bDr7v/VioimcJ1ivS
93hQLjun0fm1c+17PCgf6yVt8fUS/RwAlOnnqz55OlNdsKhyc2372xav7fU9
nlTjT7t7OWzZ4bxduGZ29XXoJ6NdekP6fdn4fB+jHueY+Ys28l5t8b2eyHs1
xfNe32NB+UaZ93bV9kb/b/3r+zgoI+/VRt6rj/WSPtZLAMr22oPXtrPesQPH
vI8nKV7fW9W8N6zhdfRl6Hl7V02u5cAljePUjhe9H6MszF/0MX/RRt6rL/4a
pr5Xz6jyXptnump7qzgHVULeq428Vx/rJW18HhJA2d7bsqadpd625z3v40kT
r++tZD+Hffvdtb156mqzbp9RG5zKUSsc9pvwfZx6nGPmL9qYv2gj79XHa1jb
qPLesJY3rXcvtb1DR96r7dixt8l7xbFe0sdcC0BZ3nt2rJ2jWi813+NxqXx9
r2uftgL1uWEdcNp9XH5z7vsIM11Xbuz7GPXA/EWfnVvbJ4Z+VJrIe/XRz0Hb
KPLe8cMnnLW9VZ6HqiDv1UZ9rz7WS9qo7wVQmj3fa2eoX3/+Zf/jyVD5+l5X
xlqk/+49E+77sfrfPPfhqhPuoy+Ej3PM/EUb8xdt5L36Ovo5HHvb+3hQrlHk
vfN2vpGe91LbOxLkvdrIe/WxXtLHfm0ABhbLepdtO5jvNscngxs/Pt9L/UWl
63ut34Ijpy3SQyG8rmvfNqsfHmAsuXoIe8b8RR95rzbyXn3U92obdt47PTPr
rO1dsveI9+ffBOS92ujnoI/1kj7WSwAG8urmYPH8YlmvzR+e+tJHgnPPXh5s
OzH6MVe6vtf6LaRltEtvKH5frn3b8tb4Wq/gQfJij5i/6OP9am3kvfrYr03b
sPPehXveSq3rtX9/Nev/+TcBea826nv1sV7SR94LoG+HtwfLzloQ5qbzbnku
nBf0cuLQnmD9kjPbt/Ex7krX9w6yT1tCZv/dPH18rX9E2m0tR/Z9nHpg/qKP
+Ys28l598fpe8l49w857U/doMzvf8P7cm4K8Vxt5rz7WS/psrxPqYwAUFst6
+zV24JiXsVe2vtdVT/uxywr1cujg2vvNWL+GrNu6ao37yJ59nGPmL9rIe7WR
9+rjNaxtmHnv1qPuXg72Pd/PvSnIe7XRz0Ef6yV9zLUAFDbXe3eQrHfe5+/3
9nm7ytb3uvLVPLW4Lta3wdXHt/X1zJoq1+12vOj/WPXA/EUf8xdt5L366N+r
bZh5b+o+bVbvyz5tI0Xeq436Xn2sl7TZOp/1EoBCZqaCOz88WNZrfO6lUdn6
3lgOW6gOt5esPr6uLNkyXUdG7P045TzHzF+00b9XG3mvPvr3ahtq3uvo5cA+
baNF3qvN6nujz4KT92pivaSPvBdAEfa3//n7Hgge3LSp7d4N93dddv0bXbZ9
lX09h0rW91qmO6R8NVxHu2p1UzJf6x0xe95V5e0b5wHzF33MX7SR9+qjvlfb
sPLerF4OPueWTUTeq436Xn2sl7RR3wugiSpZ3+vqsztIL4c4V54cz5WX3uDO
eWvUuzc6x8xftDF/0Ubeq4/6Xm3DynvP2f1mdx+HuX99P+emIe/VRv9efayX
9PF5SABNU8n6Xlf9bZn5alZfhzxq0svBMH/RZ+fWPmfI/EUTea++eH0vea+e
YeW9rl4OC/f0ua8t+kbeq41+DvpYL+mjPgZA01SuvtfVK7fFeiuU+VizF63s
P++tSW1vdI6Zv2hj/qKNvFcfr2Ftw8h7rV9Dam1vy86jM96fc9OQ92qjvlcf
6yV9zLUANE3l6nvHNo6sV27Ym7dI5hvVHVu/Cd/HqQDmL/qYv2gj79VH/15t
w8h7xw4cS+/dSy8HL8h7tdG/Vx/rJX1RjT6fhwTQFFWr73Xmr5YDD+txrS9w
3sx3mOMY4jlm/qKNflTayHv10b9X2zDy3nk730it7bWv+36+TUTeq41+DvpY
L+mjPgZA01Spvjfs1+DKWfftH+7jb9nhzpqtrtf6/Q57DEPC/EUf8xdt5L36
qO/VNpS819G71+p+fT/fJiLv1UZ9rz7WS9rsvXTWSwCaplL1vdYT1/PeaGHm
bD2E55TdM9jXOWb+oo35izbyXn3U92orO+/t6t0bY9/z/XybiLxXG/179bFe
0sd6CUDTVKm+19lXoWb9cquG+Ys+5i/ayHv1xet7yXv1lJ333jT1bvpebfTu
9Ya8Vxv1vfpYL2mjvhdAE1WqvjfaDy1pyw7vx6nOmL/oo3+vNvJefaxBtJWd
93b07o2jd6835L3a6N+rj/WSPtZLAJqmMvW9lum6evdW4DjVGfMXfWRF2sh7
9dG/V1vpeS+9eyuHvFcb9b36WC/pY70EoGkqU99rPRvSst6lN3g/RnXH/EUf
8xdt5L366N+rrcy8t6t3byz7pXevP+S92ujfq4/1kj7WSwCapgr1veGeaK7a
XtvDrQLHqc6Yv+izc2ufM+TzSZrIe/VR36utzLy3q3dvLPf1/TybjLxXG/W9
+lgv6Yt6srBeAtAUlajvXb3emfeGWXAFjlOdMX/Rx/vV2sh79VHfq63MvJfe
vdVE3quN/r36WC/pY70EoGl81/eGea5rnzbr8VCBY1R3zF/0MX/RRt6rL17f
S96rp9S819G7d8PB970/zyYj79VGfa8+1kvabG7FeglA03iv73X17TX79ns/
PgqYv+hjv1lt5L36WINoKyvv3Xl0xtm791ez/p9nk5H3aqN/rz7WS/qYawFo
Gq/1vZbnurLey2/2fmxUMH/Rx/xFG3mvPvr3aisr712y9wi9eyuKvFcb9b36
WC9po74XQBP5rO+dvWgltb0jOsfMX7Qxf9FG3quP/r3aysp7Xb17z9lNvugb
ea82+vfqY72kj89DAmgab/W990y4s1769paK+Ys+8l5t5L36qO/VVkbea/0a
Umt7W8YPn/D+HJuOvFcb9b36WC/pY70EoGm81Pdm9XH42GWn93CrwLFRwfxF
H+9XayPv1Ud9r7Yy8l7bjy21dy+9HCqBvFcb/Xv1sV7SR94LoGl81Pdm9nGw
ut8KHBclzF/0MX/RRt6rL17fS96rp4y819XLwb7u+/mBvFcd9b36WC/pi3qy
UB8DoClGXt+7er0z6w1z4AocEzXMX/SR92oj79XHa1jboHlvVi+Hm6be9f78
QN6rjv69+lgv6WOuBaBpRlrfu+PFzD4O7NE2HMxf9Nm5tXUI71drIu/VR/9e
bYPmvWMHjjnzXsuCfT8/kPeqo75XH+slbfbZKfJeAE0zqvresCevZbr0cfBy
jpm/aGP+oo28Vx/9e7UNmvd29XKIevfSy6EyyHu10b9XH+slfayXADTNqOp7
M3v2Lr3B+3FQxvxFH/MXbeS9+qjv1TZw3uuo7bW6X9/PDaeR92qjvlcf6yVt
1PcCaKKR1PdefnNmH4ew9rcCx0IV8xd90fmln4Mm8l591PdqGyTv3XDwfXo5
1AB5rzb69+pjvaSP9RKAphl6fe/YRnfWa6ynbwWOgzLmL/p4v1obea++eH0v
ea+eQfLesJdD1L8hjl4OlULeq436Xn2sl/SxXgLQNEOt77WevFlZr2XBFTgG
6pi/6GP+oo28Vx+vYS07j84E5+x+83RWG+W1j+wK7nvkieJ5r6O2d+Wud7w/
T3yAvFcb/Xv1sV7Sx1wLQNMMrb53y47srNd6PFTg+TcB8xd9zF+0kffqo3+v
Bst5u/ZWi3tkV2h6ZjbX/Vl/3q492ubkvQ+MBnmvNup79bFe0hf1ZKGfA4Cm
GEp9b4+sN9y7rQLPvSmYv+ijH5U28l599O+tP6u3Te274LBk75Ge9+nMjunl
UDnkvdro36uP9ZI+6mMANE3p9b296nrZn23kmL/oY/6ijbxXH/W99dbOZQvk
vdH1J0+m32fWPm03Tb3r/TmjE3mvNup79bFe0mbvpbNeAtA0pdb35sh6T+3b
7/05Nw3zF33MX7SR9+qjvreefjWbUYNbwMI9ne+DW68GZ3bc+ro9ru/njk7k
vdro36uP9ZI+1ksAmqa0+t7xp3tnvTte9P58m4j5iz47t/Y5Q/o5aCLv1Rev
7yXvrY/CWW88w03Lc6P93Qpkw6gG8l5t1PfqY72kjfpeAE1USn3v2MbsrNeQ
9Xo9x8xftDF/0Ubeq4/XcP30zHotz21dJ9xzrYQaYGp7q428Vxv9e/WxXtLH
ficAmmbg+t5rx3rX9Vqfhwo816Zi/qKPrEgbea8++vfWi+211iuX3Xl0pn19
y/++/cOt+ep+M1hPX9/PHenIe7VR36uP9ZI+1ksAmqbf+l7bc232opXU9dYA
8xd9vF+tjbxXH/1762P88InsXHbnG101uPa3Nzq/YbZbdF+3lnN2kyFWGXmv
Nvr36mO9pI+8F0DT9FXfaxmu1e3Sr7cWmL/oY/6ijbxXH/W9p9k+Ze3+Byae
jcb/neuVYKzWduvR2ZGNL7MetzWetNvF8177m2y1v7l6PMw9Dj17q4+8Vxv1
vfpYL+mLerJQHwOgKQrX965e37uml6y3Upi/6CPv1Ubeq6/J9b2WoVqe2U/N
a1reetPUu0PrcZs5xozeusm8N/q69WfIzH1b37N6Yt/nCL2R92qjf68+1kv6
WC8BaJrc9b379ufq3zB73lVhrwffzwsfYP6ij/mLNvJeffH63qbkvZbLlraP
WUr2anW/Zea+vcZqubXrtq68N2K3tezXjsnKXe+ENc5Z94fqIe/VRn2vPtZL
2mxuxXoJQNPkqu/NU9NrLr+ZrLeCmL/oo3+vNvJefU1Zg7T7GPSoky26j1nW
fZVRHxtm02ljmftar33UeuW9qD/yXm3079XHeklfU+ZaABDJrO/dsqN3n97I
2EbvzwXpmL/oY/6ijbxXn3r/3rAnb7IP7wj1ymOzhD0XMu47zz5q5L36yHu1
Ud+rj/WSNup7ATRRan3vjhdz9W5o9+q1XLgCzwXuc8z8RRvzF23kvfoU+/fa
Hmpde64NWKvbV93v3OO/dKR4nW/4HLIey7E/WxJ5rz7yXm3079XHekkfn4cE
0DRdee/SG/LlvKZ1Xfo3VB/zF312bm0dwvxFE3mvPpX6XuvXYH1zB6rltdvM
7btmtbV2n9bL1nrxWmY7efJU2KPBaobDfd6ivrq9HitnNht/Lv3uz5ZE3quP
vFcb9b36WC/poz4GQNPE897F88/JX9N7z4T3sSP/OWb+oo35izbyXn1VrO+1
jNUy1TC/tUw1MpfHGvte+/uD1PDO3ee2E/2PN+y70GNPNavXzXNfYdbbY7x2
nbxjI+/VR96rjf69+lgv6WO9BKBp4nnvsrMW5NqT7dS+/d7HjWLnmPmLNuYv
2sh79cXre33lve3a3EGz2yJaj2WZcpnPI+wVPECNb8+63paie8CR9+oj79VG
fa8+1kv6op4sfB4SQFPE92vLrO+lT29tMX/RRz8qbeS9+ny9ZxNmm6PMd2O1
vFY/PKznlVXnm1WXazlu11gTl63PRNHxkPfqI+/VRv9efayX9FEfA6BpevZz
oHdD7TF/0cf8RRt5r75R9u+1nrNXvPD2aDPeIdXyZj1H5/Nz1PiG/SB6HJOV
u97pazzkvfrIe7VR36uP9ZI2++wU6yUATePMey3nHdvofXwo5xwzf9HG/EUb
ea++UfTvDTPQeC3vKPLe1mPYnmpFet2WJavG17LdvNeNWK+LfsdC3quPvFcb
/Xv1sV7Sx3oJQNPE+zlY/97Zi1YGp8af9j4ulIf5iz7mL9rIe/UNs763nfMO
sz9D/PJcv4a8e6MNi/WLcGbara9brbH1ZuiZe7e+b/XQg4yFvFcfea826nv1
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
8okrXnjbueeaZRfbTsxlyK7PM5eUAVtfTGp+u88x8xdtzF+qwX4H9v07rnW7
yZPp90veq4/+vdrIe/WR92qjvlcf6yV99llI+jkAaJJ43vuhCz7nziniX4/1
VHDlE71YT8qw/m2uL2/pGfBc30vfx3dQll1bhmQ5vOXllqtbHwu7nHc/O+Yv
+uhH5Y+9Bm1/yb5/h7V+Vz10IPvzCeS9+ujfq428Vx95rzbqe/WxXtJHfQyA
punKez1mqXaf44dPnN67PsqAB82BW/eTJxOtiq7n78reo+/F+2a0bpNWY838
RR/zl9Gy1+nA71O1bm/3k+fxyHv1Ud+rjbxXH3mvNup79bFe0mbvpbNeAtA0
hfJeT9mpZZhW1zpQvuLIQn2zMYW1gVn7OeV5zon6azte8XPM/EUb85fyWE29
/Z6z16blscZq6tufRejzNTnI7yLyXn3U92oj79VH3quN+l59rJf0sV4C0DQ9
89652tG8dWijEPYYTma/rsspz8fnc7Ea5nZ2NKw+xrHnarXC9jft7nXrQqwz
9VjNyR3fuaN9jn2Pp+qiHinWE+Wc3W92fpagVz+bfl+zc/X3/X4uwtaW0fll
nakpOr/GXtO+x4Ny2d/e6PyyztT04KZN7XNMVqTHzml0fu1c+x4Pysd6SRvr
JQBNZH3Lo7zXJDMKy0R8j9HFcpswO82bwSQyYcuNRzHGjnx62Blvil+7+Mr2
+b13w/3ezxvKZTUn0fk97xOf8D6eKoly3dQ+4WW9FrPus/WY1qd80Oexes3a
9jm+ftXXvR9XlM9eu9E5JivSY397o/P7lcsu9T4elM/2PI7OMb309Ty7fXv7
/F7425/xPh6Uz343s17SxXoJQBPF81773RdlklYXalml7/Hl1e6nWTSnKTnT
rkK+m5X3fvW273s/VygX85fTOvaATL7uRvk6bD2W9Wgps8d5PO+1y76PNcpH
3quNvFdfPO+lhlsPea8+8l5trJcANFGyvtf6Vg5jL7ZRmTx5qlivhPjntAv2
1bRs13Lmrt7CZWdLc2PrkjNPjue98/7n3eFttp3wf65Qjvj8xfgezyj17O0y
wozXekMMq7859b36yHu1kffqi+e9lg36Hg/KZb2UovNr59r3eFA+8l5tNrci
7wXQNNaDSvF3n2XWg+7vZizDsVrndp/PtJy17Hyp9RhWH2hZVp4aa8u4bYyu
cXTlvdGYW6q4hx2KKfP96peOnAh/7qzmPfyZmvuZt59H+1oV+ninvrZHnfHO
vQdj7/WM4v0x6nv1kfdqI+/VZzWf9HPQRX2vPvJebdT3AmiiZH2v7/GUzfJS
y6qq0FchKzeyMZaRvbbrHV157zX3dedjcz0t6tS/Ax/ot77XzndH/4P4+xi9
3tNo3cbeZxj1cw0z6FG8JiPRsZnLve14DauGNwv1vfrIe7WR9+qjvlcbea8+
8l5tTf48JIDmUq3vTZNVA+sj481bv9uPMPede66peW9yPLFx2R54PrI89KfI
+9VWi9ruP+LKcgv+HI/iOdrrpHB/7hxjj2p07fViOW5V3/Ogvlcfea828l59
9O/VFs976eegibxXG/0cADSRen1vmjDvGkbu69ojai5bshraUfdGtuea2s+h
SJ1ja+yWlVtto32eP+rxXNVsrGmy3q/u2j9wSO9fDPP9Aft5GzSTjl5/de1f
Qn2vPvJebeS9+qjv1UZ9rz7yXm3kvVps/Xvs+HHv4wCqrkn1vUlpvQ/KrB20
rLUK+dIf/fG12fW9g2TaiVw42e+16nWTCpL1vR09GnqduxJ/5u09gbKfm71+
Cu29GHtvxUffhWGhvlcfea828l598f695L16rCczea828l5t9HPQYn9nbe5s
66J9+/Z5Hw9QVU2s702yWtX23lRp2VjW5bl8yfZzs5xt1PW7ecTnL2F97yh6
WuTIhe2YWx5smV4Vj1vWz4uNO76fWVqv1yh3tOsO4/nZfVq99ReeOtjxGva9
j1lZe7rFe5JkmutBUqefoaKo79VH3quNvFdfvL6X/dr0/Oz5n5H3iiPv1cZ+
bXpWrFjRPqdLlywJcy1qfoFOTa7vddl24lSY08XzPMtz7f/xmlXf48wrPn+5
e9264nvYDZoZZt0+LT9PZMKW5dkxj/eSGOXxs8ez895XT4R4T4/oX0cNdFQH
bY9n7P+Whdv37Xr2M9jOkuOP8ciuzrx30HOVGGP4sxLPtfPcT+u6g+S+Yc+V
HOO016rv19coUN+rj7xXG3mvPvr3aqN/rz7yXm30c9Bj5zQ+f47OLTW/wAeo
79UX7+dgeW/8e0PraVFSrWjPrDhRT5vsM9xPHwnLWjt6Igyx720p12npO+8t
2P/Ajk2hn5fW/Vt2m/c85L7/Ee0TVxXU9+oj79VG3quP/r3a6N+rj7xXG/W9
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
8Of2b8q1Bm3NeZNrUNc8Ofle5tef79F7P/ncevw9BLyq0ms45+3nXX1rR9/A
XmPmNQxpVX0NJ2oEje1DVTjrPcVrGOIq9hqOv976yXvTrs9rGLVXo3VmXe4T
AFBxfc5Rk+/55ZmjJveNsJ5B8XXj6z9YHn79f2zanWvs0efp4nPUrr/fifWq
XWf8sOP93NhtOv7GL1jU+zaALxV6DWd5b8uajtdpVGPRc8y8hqGuoq/hZK5k
r6MNB9N7gGbiNQx1FXsNJ/sBjx04lnv8zKWhqjbrzLrcJwCg8vr9DFq8j7vJ
6g3WNve+alzUNyjqH2bvneauHTq8vetzbV01CYk5eJ7apPjnfSK/tXm/93MF
pKnKazhT7LUa9SaMP37mmHkNQ1wVX8PR+zMdNv5bf8+R1zDEVe013LUnao+6
vI564LQaRl7DqLlarTPrcp8AgOrroyYh7fd/rp4+KZ+NuWnq3fb394//VaG9
vpP3l/ZeZdfn3nJ+FqVrrlxwr2VgZCr0GnY9VrSmjWqXko+fNeb/v727j7Wi
uhc+nhxrk6dJa9NcvcQ//Pf5p7GBILVtJOaaK9zE2pZIU+mV3NiIYq81olxe
rj6BtBYolcqVAorScuQGrHo5tLxYqBWM9HpaX3PEc05LAgGEkOvbTYGUo2Q9
e23PbGbW/NbMWjOzZ2bv/f3jExT2nj0va82s9ZvfWos6jK5XtzoszLPt1Uc2
UIfR9WpWh8Pz9wasa7sZ25NyjKnD6Aad0s/slG0CADpAljFoxnoRtvah9L3Y
Wk1Z84WE7ennsJmTYLalXecbNXObXOY/AypR8zocjJ/T8aKgDvnEe6nD6Ho1
q8PmePHEWJED6jC6Xs3qsJmXGJDGsYfjQOHndBh1GD2pon5mp2wTAFB/mcag
GesJOz83hJwhp7atjdFWjm1LaBO7Pt/M8+I0tz9QgVrX4VAf2Bxv6hTvpQ6j
B9SqDjf+XY95NeuOzmk6sXeDWnHnjMj63trEW5eqja/8Wf496jB6QK3q8Ljg
XWvMiufFnD9dvzYfEebnpg6jV1XRz+yUbVZ9bQAAbjKuMRF7T+gyLkSYc8z1
eSMx3znGxsEJuRNOY+WE8+I0rz1QhbrW4dDaEGYb2Tm/lzqMXlCnOnxqfyye
66rvtkfjcz5Qh9EL6lSHQ2JrLgYmXBOp57ruHnzfUreow+hRlfQzO2WbNbg+
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoN3ODu9V
m/YfybWNM2fPNiV+5syHqZ8ButnJt/apPVs2qSf7+9W69Y+rrTueUztfHVX/
83H8s8M7N6oVW/+78n0GYBgbUQce3ajumz1dTfny1S3funu12rzvNbE+o3Od
HnxC3TRt0ifXeOkWNTr2ceX71Kl0e1M/9+pQR3SbdOjFrerhWRPV5P6Dle9P
FnUtm3Xdr17RS+e/iD4sAADd6k8rZqrLL79cffrKh73a3+dODqnfblzSbE/o
74fp9sUdyzZE4linn1/e/Le+6x+vRTsf9XXiiVmtcjR70qRIPMVGf/7uA4eS
tz30WGu7qdubcI1af/xvxRzT2Ih6ec08NfWyy2N1JUzHira+efKT7xwbUDf/
3YRmvayind68Bo1z4HKustLnY+7r/1t5eUPJxuuhT/kK6s6Ckb9Wuu86PvTG
L+cn1mPtis8tVM990L39657SuBeb17dv8UD1+9WJGs/CVZ+6rHkOv/Pmh5Xs
w9iJ480Y74o7Z0Sv6eaU9kMd1bVs1nW/ekUPnX/9TH76q5d8coy3PaoOvn+u
8n0CAKAOdLx2zbRLWjFYn2fk7nuvT+3vhl137bWt/+7UHAqUR+cl/PiHS9Qt
ky5zKl8XTZyjFi5arH6+L6W/dmq/+tXq5Wr+jZ9P3N7EW5eqR1avVpuPFBDv
bfymjttKvxPEqRPjRpfOqiRupK/Bv829LTVGnVffkn2VlzeUbGykmeOu6+K9
Uy51qgMLV65v5sTvPvReZfut+5XPfOMzrf36ev8bzXeXOrdo/mfj9yrKdnc4
vXtR/Nry3jrbuWw8Vyo7h437jlRPO7m+1rVs1nW/ekXPnf9G3d71zYtb7YXC
cjUAAOhU47mDwftQ5zZA45ka7u8G5q4aUCMnTza3o/vEesz65h9cJ7apyeeD
j3de2W2Nl+p2XSsf1pPud5rb1dtbN/R+cft/djDWv9S/sXbv65E6p9+9DDz4
Pesx7jlX7TVIymeccf9a9etdu9Szzz7bFPx38Ofz+/e3YntS/L4jc6pQqHee
vN1aviY/9EJt+qjh/YzlSkn5VN3cv+4hHw/+lGtbkBfn9EXOY6n5+uPvmfRz
Sc/f0A3PorqWzbruV6/oxfPfHHuz9GufHO+Ea9SyodOV7xMAAFUItwP0899n
rPihZdF8RB2LSsqBPLF3Q7TN0XgGbznFWBv4+WDr98VY0A27jufabjBvRGD5
kTOF7bNue5p924snLVWDH9m/Y8sTrHoMu2YeS+ZY9Kn9rXEFnZpThYKNjahH
rvxCvHx9bmFifSl7H8N1U3pvad5PvjRwuPr9Rn7CGA3GKWVwbCA2XqSyMeZC
rm9HPovqWjbrul+9oofP/x/nfbHV3yyyTQ8AQEcI5k3MEqtptB/MtvrNe9Lj
bW8v+krr81XNRYoOFyq3YblzxUP9Tx1bKrRsCvl+TvkGQuyrDjnxZiyr2T+e
viRbvsjZwQvjCzowpwrFC8Zi1jUfyRwfa6uTeo1FPReMzuGvep9hp+9nPvce
PQYjWGdTr0tQ9f53IjNfoOocAPOe06nPorqWzbrsl29drzOfY6nL+S9daByq
7ueSYwQA6BnG2HLfsS7H1szMlnsViqn1zd1Wm/47Ooc0Nq2Q9dTCcceCY0tm
ffF619HYr2BNG9f3Ku1mHk/ecxb0/bulH4bsdC58neO90v7V4R0MMhq/73dk
PmenSpg7t4pngFSnKQ9dqJvqejcdSwnnKrjf6HF15BkBAHpBeN5d3/aC2DZ2
7IuH1069fNPblZ8HdCAhv7eQdcxCa4UXHVvKWl+kY65DTLToeG8Qw6fvAq3O
8d7weyHivZ0vmJumDvfVXmGbkynIHahijvpuye+FXTfV9W46ljKEx+TQzgQA
dLvwWOyscyKabWOffMVgDn36yMhCyu8tJN57/kK5LjK2JOYrTrjGe39b+1aD
tqo4n0OeczY2og48ujHzenvoHnXP75XWXeRZ1pnC9zHiJuWIvPO3yDsXf5Z9
It7b3bqprnfTsZQmlM9Rl3FyAAC0hZGblKWtYItfuY6nb7ZVMsS7gKZ25fee
b0+8Vwvn02fNMWjlwNYg7lV4vBcYV/t4r7D2DfHezmPOwVyH92g9ITxW5ZnX
xbEiZa/twHwO3a2b6no3HUvZwveaovoMAADUTaRtnWPOU7E/Pneb03d1rOiK
vp8zhxIyseX35h0DGu7zFR1baq0RbPDKMQjma6vBvNdFzeeg1xAZ/HO2nN53
333Xeh01/e9FnKfw9my/6byts2djf/fRqfcy7Wt4v6osC+1QVLy3LWVEeN+0
YOSvxZSzRvko8prmLW96X5K27buvRdUjaXs+2zy85Ufx8pUjT046z1Ve97Lu
jVkE49B1+3Pzkb9F1nQo4x1KcPzmNcub31vXupKlbJZRfnz3K3wOfb5bVF0v
6tmd9Z5V5LFkLReRclDwPauUcmfca4iVAwC6jjEONeu89bb8q7LG4enfP3r0
aEve9sbYieOlxJ5tvxMcj+9xmOehqP3U+xFsM0ubsOj9ienA/F4pPhqYtvEl
920NH65FfK+Q/N7x8XX63Y/r906ODqntq+5T/zTl72NjBE7s3aDuuWFybL++
/pOd/teysW/6d26aNkm8ZjPuX6te/mDMaVu6nup9m3/j5yP7rGPdm2ZfGdnu
5IdeSD7+t/ap9fO/K8ZHpt/xQ7V27+upx6r3ZeGixerHP1xipf99xe/kfuTL
a+Y1/33lT1ZGvvPvD20r5D6aN7+38DLS6CMGx6iPecWdM8T7T5bz8c4ru63X
M7imvnOc5C1v+jk1uP0XrfP0nTc/jGz7tc0rYuewb+pstXDnW+L+nB3eaz1n
64be9z624Z0b1X2zp4vnS+/H4i37EsvJn1bI92L93Qd+uiRyHW11IDifv924
RN0y6bJmPqrPPaYd1720e2Mexnq9zWvaaGPY8geK2jd9vqUyGJQXXa5acWiP
WFBd60qWsllG+cmyX/q3pfquz+OCDY177MED6rG75onnJ29dL+LZXcQ9q4hj
yXr+w3Wo6HtWWeUuLDyXDDm+AIBuU+Q4IHNbYUXkOpl0uzpop9jaPGntYd2v
aMZcG+3DPVs2NdvVQdtl2lvJ39XHe9WNs9Q//8vt6pZvz1QPDP7F/juN9p1u
w+h+wPJF8yLtvMjv6DlLF8+OtmP630jcD90f+MXSOXKbq9FWmrtqIFPMJWjL
Sef2qrsedpvjudGXi8wVMn2Jc0zMR7vm721nfq8th6l1rm57tC3nql0Kye8N
8pVTvqdjnLo/YI6hb+V0N+qR2feK7VujLLrOUy7l0NjM3TFi3Y5Up1r7nFAe
lh85E9+ecIz/dOud1j6k7ns9snq1erK/vyWIBZ8efOKT/mvCcelt2/qgUgzD
9xy71kPX8tXWMiK8X3LSuB9vOXVO3F99H793yqWRz0+dcVczjm47t2n3t6zl
TT+vg7iVVJ6CPMvR7SsT72HN/Qy3KRzOuTZz26hTudDlNnx99bEtXLm+WbbN
8qz/rZk7amzj0LKrva6h2UYKzpP5e673vqKve9n3xrzCz41wO1F6plvvhT5O
7VdrpkXnCr5ixgL1b3Nvi7Ql+6bE25W29nFd60qWsllG+clcZxq/HZ4H66KJ
c5rx3V/v2qXW3fOP1nNfRF0v6tldxD0r77HU7Z5V9X3LPJdfGjhcyr0PAIB2
k9bIyDNeLinHV1s2dLqw/db5ZOFtT3lgjdr56mgzbmu2CfoWD4htmKT1oFvj
Cj3OnW0MVeI6JOH+f6MfYq75E2nvmNtufP7hWRMj29LtxuA8PHXPTRe24bEG
n27LhftDuk394/98rtkW820bSsfelvFSbcrvbWu897x9TocwW95P3RSR3xvU
yaTvJfVzdDnf9dYLYj1K6wO5HJfuT+j6FYy71Dk6Zv9E2m6wHqVtnw+M/l7c
jvW+3Oj7PHLlF1r/rsdlhMu62ae0MfN5xHyhxn3FNcYSPs7J/QcLLV8+8d4y
ysiJvS+q5/fvbzKfR81rtmpAvXTgpQj9Wendmxnb0uVs96H3Ip/R92Vpn6X3
C3nL2+KnHkw8J/rd5nNzo/euKV++OjnmYbz7u+iqa5vvSW2/kTavlPl+WefS
mWXBfE8jPksbdekPe/aooRe3xvZfv3MLrlvwZ2uumcbzd+k/yLn+SWWznde9
7Htjbo1zH+xPbH5eYy2lQvbLmGdblwfzfCfdO6U2ni0uXWldyVg2215+ctaZ
cL61tH197SJ1RHhu+tZ1Ww5tcE58nt2F3bOy3rdqeM+qw30rdkx1WRcAAIC8
zDVmcszda92mIW/M12xHSO+/dYzObF/b2gA651a3l8x31alrgzTa42I7Xfis
zgsYHh5u/pYZi279TsJ5k+KWb/xyfvT4FsdzeGO52w5zeg2vvT3ynZs3R9uj
4fhkajxVWLO+XW2pduX3au2M9+pzFI7b2eiYe5ZxcWXKm9+rx+m1xvUmfE+P
P2zWp7f2Rett4/4V+e2ps9Xmfa+1cvjNOhN8x5ZvqYXfCek6Jn7O8p4mPI5X
53bpdzFSDlKYfm8lfSa8LS3ynsD2bsqWg9r4/PRp09R1116rrpj3dPQ7lhiL
y/iM8Dsw3Ucrcj4c3/zeMsuI7Vw7j2kxvquPyXruGvcL6fqYsfW85U3HKPT5
0+dx973XW7+v77Hh+UL0eUyKjzSP77ZHI/EBfW2l7yT22418uqS52n3mYPWa
r7WxD3psz7r1j0ffu7re+9pw3Usv9zmF2yjSvF/SO/nMz3Vh7jLrO3DLPT2p
HVmrupKxbLa9/OSpM6H6kjTv3Onnl0fuY3nruo6/FvLsbtM9y+fzuv9Ut3tW
Le5bZn52EX1hAABqwIyRFTZvUcpY16wx33A7rrm/n1toH+/uGcs2cxPT3hGb
sS3X+IbZf9G/o9vwQcxPvys3x0OF24VSLNs230Ms/zhp7jtjnJwmrRvmtZZt
KHfHq01ZVJkz5v3Kot35vcF5MseXJvX/6jrHg5Tfq81aeH9znJ9EzzGnx9HG
8lMcz7VtDmQ9/7H0fTEH2daXCr3TScuPl+aykY4hNi4g1J8Jj8sN5/joe0Lk
3mL2uRLqtXR+0sZwiMfisu5m457bitcXnBuYZ/7etpYRyzVxOc9Nxj1S31NT
+6rSu0HL860d5S18L7I982zjfJLKhfmdpHeu5nM06VkUe7ZbyoxUxlzLsTje
J6lstvm6l1buc9bp1vuhhDFM4nvwTW97/15kLl6HeI70DjnLfaDquuJdNksq
P777Fc4BTWtvB9fadg/OUtfz3kvbcc/KeiyZykUJ96wyyp3t2MzYdBnrzgAA
0G7mczXrWm0SMzZrPu9912TxaStpui1jxi+T2gDmuhxSrLNFaBs4xUOEc67b
o8Hf6T5Bsz1j5KEEaz6IMQ9Lv0dsA9r2UYg3imOxjeNOyk8ISG2xdqyx3bH5
vaHrZcbxk+rP3Qfa1w/PKmn9OV+u51qKTSbO/Sn0P2z3hcg9IS2+IL3bsPRr
xDxoS+6wtL67OfYxsW8nHW9aX1DK8XXImWkdV5tyY7LGe9tZRloyxnu9rmWI
lPdou7+7lrdgvfPYNoRxGrY5kpLOedqxmd9Jer7E3rcm3euFnDTbvvvm1YXP
Xey7HnPStOO6l1Lu8whdl6Tjf3vRV+LPdo/5qaRz4XS+hXt66vdqWFd8y2ZZ
5cdnv8zYZFpfJWgPFpHfG5bn2d2ue1bWYxG/V/E9q4xy53wuypjPBgCANsra
BvSRND+uTyxOiuUlxmPHSfFO8fjMNnpKbEOKZbu8CzbPuT4HT/3m6WZOnHk+
9Gf1/KB63FLwd7H2VkqM2YxhS21f8R2/Y//Rtbzocfp6feBgbuG2lGnL/L1p
8Wifa1bGnF56/jlzbhEb29rPVRHjvY26pMcPzpkzp0nPQRjQcwroP/W8ArH+
gOO5lsYopF3zWHm3zDPYyjl2jF9Kc1VL94XYefIcf+g6b3ggtsa8w7kVc2aS
+j+hGHE76kme/N62lZGE37Ddb81zZsaGnN+FSXPluL5f8B3vKvxW6lwVWea3
ML+TUO+8rqmxXVtuYJ78Xuk8W8tmSde9jHKfR3hOmsT5wS05sy5twOC6Zl2n
wjuOVsO64lU2Sy4/rvvls15GcB10DNC25nLWup7nXtqOe1aeY/EqFyXds8oq
d07nMMi/8dgOAAB10+54r2Yb4x38Xmo+sfTu1iGX1iuebbSt0nIHYnEH13w2
o92j56IK1sdNbTuZ7T+HeLk+B3/ZsbO5VsPISXnuVzOGbN2ucB1yr5NdoE7P
7zWv22ubV6Su5R3UhSLnSc3Dtl6b0/cb/YnwXGzO51qoF0l9A9e+UexYxue8
tblpmrwGisu2fcqpuP+2eYXHZenrS3001/5pO8ZB5on3tquMJP2Gyz1dytHz
uV9Jaz1KMZA85c1WFlKfV8Z6U1mecUnf0ddI3y/0uyK9LnzSeCHXeavKiveW
dd1LKfdZhdoTLnXYHKvl9Yww1lpwzQ0Wz0eGeG/VdcWnbJZdfnz2S1rT6x/m
Pa0Ovi/HW/V6mrZ/Kyre6/vsLvqeledYfM5/afesksqdpIz+MAAAZSojvzeQ
tFZ42nPZzE1zja36HJ/X3L1COzt1bbeE7zZ/LyVeI42vFudb8CXsj7hdoQ9T
yO8XyZLf2xHz9yZc998svdFad8Llug4x37zrtWlBXcwT702b58WlDy/FF7LQ
9wbzOKT4m2seepb79jtP3u71+aTraZvXIuiLFzYHvKDIeG8RZSTpN7S0mE2e
2IFmm2e5yPLWlCWGleU7WedAttBrAG1fdV/svVmR6yQlnWdb2SzrupdS7jMK
nyuXdQ2l97may1oQsTUTHO9/meJINa0rPvPBlll+fPZLKvdNjT7Bwp1veZfB
LGU99700RZZ7VtZj8Tn/pd2zSip3Lttw7tcBAFBTZcZ7taSYrzV+K7RpU2Oj
AWkeNUv7wmWdsoD4njrju/SgLZM2Hkyauzj3utljI6014lrblfJeGtfAzD1J
nEurIt2U32vSczyIa9ZkKIPtZMvv9Tpn43lfeeZzSLvmaX14896o11zR+fFH
jx71pudkMX8/b9/J3P/U73us7yZdi9R7RHguhzaVw6Lnc8hbRtJ+Q0uL2UjX
0St2II19Ec5H3vJWVgwr05wYguGdG1vjZiS281xWfm9Z172Mcp+J8f5ax+pe
ffXVRHpOKPG55zDWK087t5T83hLqSlHzORRdfrz2q1FupDmTAhdNnKO2vimP
YzNVkd+bJOs9K8+x+Jz/su5ZZZU7ifNYRwAAOkjZ41ds61FJz2Zb/955DgEp
Viy11Y12SGIs1RgX6NUnDa+JFlrX12XtJDMu67o2XBIxVyKUu3fyrX3q5zNm
ZG5Pl66M+Xtd42TtIKypF+E7J2cbFBLvHY8FVJrfm2FdQh95+4zSuNYvDRx2
vi4+8y1I7+nM74f7Zy65elkUPZ9D1fm90m8UEYft5HhvnvxefT5Ht6+MPMtn
3L9W7T70nvP1z5sn5pIrV+Z1r2t+rzVPM4uU8V628+2St0d+b/vLj/d+Ndrr
sblgDVckzPGQt6wXGe8t4p6Vt966xHtLvWeVVO5cyiLxXgBApys7v7dJiF1q
4rgZIbbqs39S7ElqD5vvkpPG8MTmlvBpE4TXf/L5rnAe8oxxDa69dB10ns1v
Ny5Rt0wy2mVTZ6u1e1+vvMwmsY33zB1/Cq1T0da1yh2vW+LcKBXvXxHzOWh6
3r2sazlmygUxz9v4Wi/hbRYZS889JrRxT4jdSxLmpIysEem5rr30W+Y9Mhjz
kLSmTBEqze9NqVu++XZF9aFdcqY6ZT6HrPm9ZszkW0u3ROM9HvGDPHGDMmMn
peX3tuGZItXjPPqesbdN8rZz6xrv7Zj83pTyk2le4UabzGW+pbk7Rgov60XN
51DkPStPvS3zHVWp+b0FxXuLfM8PAEDZioj36rFVSW1tkeM8q+YcBpprXpq0
lq+ORUjv/GPtTUt7/vTzy+W+huM5E+evchhzZM69WUgepyVPObJvU2erBRu2
qcE/1zSf1yStAezS13LYbmtdmaLGtp7arx5ZvTpzrvTbi76Sqyy2SyH5vb6K
yAUxr6vQN/nOmx8Wts9F5AiJ9xNhHmfzc1nqg/Seq7Wdkt6HVJ7f24b12qSY
hdf1kcZ+9FJ+rznmofFsfGDwL5mvf975HFxzFcu67qWUe1+hfdLjZfR8N670
3KbSGBfvWFie+XtrMp9Dx+T3ppSfTPs1Lry+q41t7rHK5nMo+J6Vt97W7p5V
UrmTmHP1Vd2eBgCgCLniveNtVO8+vjRvrPAeNda3d1ynrUlaF01YZ0jKcxXj
OpZYok+7Ijbvr+PxtGO+MCkuN+WBNerXu3apna+OinOO1p4Qo9Ny5/eGrn1h
8SzPOWpjhPX76tA+LSq/V3Lm7FmxXLYlF0Q4v0XGPYoaNyi9g9LbWrHrj2r0
4AH11D03RftnKflOVtLcOI3r2tyHIJ7sc3/Ocv2rnr+3hPxeLWnu+Jgc+b11
jPd6nUOP7UvXvx3rtWXN723Xda9jfm94Lpos755sc0HY5rMRcxM9xjiQ39ve
8pMpvzdEvwPYfe/1YpkI2NqAReX3Ot9L23TPynosrue/zHtWWeVOYsa0q25P
AwBQhFxtrSBm5bp+Wkja2CCpfXHxpKXOY4XN2Kq1rXRsINoGseTOBttb/NSD
sfaaUzxRih/d9mjquc7bV3G97u2O1ZTCMleIV5s0oZw3tye8M8i6r0E5yhqP
bmdsNau25feOXwOxHrcpFyT3+iTjv6XnLDdzjAp9hyO92zJcddfD6uUPxnJd
A6m/p+8Zwb2xjLLXbfm9Yn3xmZtdmhNR6Od2Y36vmXOeeN5qlt9b1nWvXX5v
KOaTee6X0LPTpX1oi1W5PHfJ721/+fHZr5OjQ9Z5ec8O77Wub+Aaw2x3fm87
7ll5jsXn/Jd2zyqp3Dlto8r1OgAAKIg5Z4JXLHH8mezbz3eZRyLXXBPCOrC2
eSDMXBFp7t7gMzqufXrwiVg7xCkGJLTNXeOQ7ZhjOfdcXDUljTvPu7ZduI4s
GzpdyH7q8h3kEmS9nrF88YLKRh7tikEHOWFS+7sduSDWXFLPnJGg7EzuPxj5
+8LWBQnNY6jvTyMnTzb7xHo9+5cOvKSGh4cLKw9SPtlFV12beo8tSrfl9zZJ
cxs1nsHO7xWEnClpPdOuy+/1jHX5XP88cQPn9+clXfe65fdG2ps53p1K61Vq
tjl3pPmPXK9rXeO9vZjf21zHNaU9d3jLj8S6Jb0LyFLXM99L23jPynosXue/
pHtWWeUuptGWMucArHo9DAAACmE+wydcozYfccvzbLXdPeeTtb1HNT+Xtf1i
tu2T2o+x+ZrM3xjP/w3iumY/IxJ/arRnHn1mh9O7cdc4sXSuktaTy3r+NZ9r
WNf5HqSxnrnWXAi1AYtei0rnfQb7mCVWZsu36Lp4b2iuaTNu2tSmXBDp/PrE
yYI+i/QOrZD83lA++/999kD7r6/QHyqkjjnqxvl7845JcHlfWUh5q1vOovC5
pHxN1/hB3nXenWMnJV33WuX3hsc45V2DQHinn3S+pbUgXO5Z4vlIG89Wt7ri
WzZLLj+u+xVs2yUnJXa9G+XN3O+sdT3zvbRN96w8x6I551eXdc8qqdxJddC8
p+Re+wMAgDoQ5hlwfcaF2z1ez1ZhvXfzNzO3X8x2QtL7Z6H9Emm7hP69uX/C
51tzxo3HQqR2STiX07nPYDnPXn2l8f0tcv0efSzNHNrGPtjO64m9G9S/zb1N
zZhxm1q8peC1XhyOWRrrmbXPGu43OLefG8d/3+zpzeNfuPMtt+vq8Z4lEI4X
u9Zd133LqvD5HIz7kzTniG8uiPO9xRJT0OOG0+pKeF5daV7J3PmWoTVfin4P
4XpcRdQvX2Xl92Z5/mTK7z1vX3fPpc6Y4xlsfe9K8nuFe3FROYuxNUy1hHxR
8z2tV36vx/3LZ2x6Gde9jHLvKvIszTnmRpPGt2hizqBl/YXUdpg0D1faNapZ
XclSNsssPz77FWzb93zq2KIUI85S17PeS9t5z8p6LJrPe4Ay7llllbsYo1/a
LWMeAQDQYs97h+ek9Hx1HetuPvdt73ljubdp890a7Wz9vE6MixrvcyOfD4+T
DmIZ5vvf0Jy3wTGJ7VDhvbFt3KFEiqGJeY5hodi01K4S8zDTYjan9qt7p1za
/OzX+98QPyPFg8qKBQXEdvXl9nWabYbX3h4pGy5tP7E9bDl+87P6N/KsR5g2
v7XPvmUllavM8003ylukPlu247uuic9cMbaYgnbnpt/H5hLUa8ds/sF1qfe2
rPn+4vcb9yH9XkXP5aDz7vW6dm2rX5Z1Aoua5yRJ0fM5FFVGWjzzt8LnNFPe
lPF7Sbn9ectblniUy3tdl3MofUeKddme9+L4bsvxu86XP/TQcrXid/F2kleZ
KeG6l1LuXRhtoNxz6p+3r9tme6bZ5oCY/NALzvUmKA+JbYGa1ZVMZbPE8uP6
+fC2Xd4XhHMsXOfvdanrWe+l7bpn5TkW73JRwj2rrHJnMu8nVY+VAwCgUKHx
0s7PSem5P+EatW7o/cTv/WlFPB5km8NJmmvCGr81xho7xeeE7ev91+s+BO31
yLkQ2tc6JzOYP8LWz5DaLl5rJwn5IkmxQT3HcNC3ssaFLbmLUt9Hx7AGHvxe
6zNJcVMpHlNm/qFUFsKuevC/rOt9BN55ZXesbLvGs6TfdR1r2+qz7RhJra+x
a+dQ97z2LeN5l/oCLvsW0O32oRe3qhV3zohtx9bHk2LM1nvKeH1yXSfaVk8i
ZerGWeqWb8+M9deT1kCMxZE910uU5qmWTPny1Wr6tGnN/fvnf7ldLVy0WP34
P59LrQNJzLGyPuto5mLJ0ZPG6pZaRsZJsSHneVqkcpaU82++20x5p5K3vJlt
hKTnXYtwf0v7jmvOovS54Lm4du/ravTgAfXbjUsS665+1unP6bhQ+B23OAf8
4oFmGQ+/zzGPRd+7zHtsajukzde9jHLvwjynWdcoNctk7J57ecLz2jL2p3mM
05eo3Yfea3325Fv71FP33GS/tzau0Zw5c9Q/zHs6fm5qVlcyl80Syo/vfoXb
l4nv742yYbsPZ6nrWe+l7bxnZT2WOt6zyih3EnMeQOZyAAB0m3Bbwel9tfB8
DXz9Jztj/X/b2rlp74Vj69k2nuGx2EIo77T5mdsedYs/pKxrr+MY4XaJrb1m
3a9xsfmEM4xltOWs6hxDndN39OhRNbj9F2r+jZ93aw+fl9tUQdvtjmUb1PJF
89Q9N0yOlIukuJ0t/66ScVGh8e5iG3vGArVgwzb16127mmtb/WHPHvWr1cvV
LZPi/cEHBv/i9JtJxy/Wp4RY4kUT5zT7APraBm1W3Wa39UHvPpCck++9b77l
85Xdiec7KFdB7FHPJ6Hjj7rPfM+8u5vlzNZ3D4h9Nin2Pd7PsbX131j6Nb9z
2LhPpO2bdKy2PuDo9pXyPaRx33KNw9py1XxM2/hS5roVyfHNse6Ss0ZdeXjW
RPv914jXlF5GGr8hxZJ0/XKep8XIZw/KkZ53Jbyf4feRzd9IyTfMXd4a11ua
O0afc+t7S8t3Es9H4/ile4h+tpr7KcUpbPRzXL9DSqrD4diJLW/UPPbYuq6W
uU6umLcpuT3SputeSrlPoa+T9I5fX1Ovd97CdsPjb6T7r9hWcXh/50O3dete
VzKXzRLKj89+SW0Y/QyL7YvR9kvK0/St61LebfMzDvfSdt6zst63anfPquq+
ZbRpSnuHDQBAmYzYZ2peUujzOm4jxcl03pv+t3+a8vdie9xl/lDdRtp97/Wx
drDOUdMxuvXzvxv5e2mMpVXjGW9r+4sxY0s+SVpb3hz/LM3n6cIW85X6CS75
lPrc2tpJsWv54H85tX+kOFQh40EzSuwTph3zXQ/bY0gW4jrgtvh+KO9Bx591
fN03rpgY58qzb46s7wzaIBI/tfQJzHuMvv8EdeHA4tnpv9P4jviexNK/Futf
o68U6/s17gNJ8cqwqTPuar7HSawzje1tmn1l7nOadT6P1nu4vOsuJUl5H5ek
mT/Y7jLS2H7wrsLlO/p35q6y91k1W3xMa+aRG89Z6d1qUeVNxwL0+5i070+5
9cJxBd9Ju4/9nxtnXzgXLtdp/PgjbQaH7+nz0/wNyzwkzTpgxBFs78Zanw/F
TPR86LoMSO2f2Hn68tXWd7CFXfcq7o0WUr67JHVuqgzbDDNzifV7U3M9BYlu
R+lnq5lzMPHWpWrzvtciZaaWdWXR4mxls43lR49d0u+fstYZsV6O5yfs2bIp
0h9o1tWEGKFTXW+0XU+dO1jcs7tN9yyf+1Yt71lV37d8+78AAHSocOzPda7C
8JgX3Y7evuo+Ob4bevbq9pDvu1P9nlga461Nv+OHsfa3K/P9to67/XyfPWb8
xi/ntz570VXXxt5nm3SbSOfdrlv/uHqyv189+syOXGOpddzJluOp913nhPqe
Bz3/gxSz0G02PS+o1/422qjh+Ut1G7PqNQ/GThxvXgNb+Ym0bxv9Mf0uQc+F
muW3zPlbr5jxkPVdQJDvEZ7vQv+dzpXV/RZrP7BRh2YtvF/tfNVvPmKfffMp
O0HZlv7sf+xn1n/TfwZs/x/8uWLrf0fLdaMehL9j/k54O8ExDu/cmLovejtb
37Rf+2ZfyVJXdJ/TFnvX1/W1zSus+2vug/7/1DmPzw5Gfj/xvptwP/aO14b6
oW2d465xjc1zI/239Ke+Drq8B+fSVs7ylJFg+0mfD/+7/u+kZ4tZV/WzdPak
SdZ7VNJ9uYjypp+50vky6e9v2n/Eej+wnXf9rDLrsv4z6RzG6majLOq5hsL3
Sl0X9NiN2Pkx3tkEz2/b+Xt5zbxonRpvu5j5a4+sXu10j9OC89Su617lvdEk
lR9bXfW5J0hlN2nfbdsP1i41z7OO2el2j34mB8/ovqmz1Ypdf7Se+7rUlfCf
T/3maeeyqf+/VTbbUH6C+58uP+Fz5VNn9LXQ8T1dB/V4tpE//O6TMVnfjsYc
db2ecf9a53KVVtebv/voxuKe3W26Z7net2p5z6r4vhWeo4PcXgBAVzPeJyfO
l9Sg21y2f9MxNt0e0zm4z+/fr1468FLmGJpJt2kCRR17c3vtXOeoDcLnoah9
L2p7dT6fumzqshvQcyYUvc7VR6fec9qe3hf920nn0dzXvPvpum9Ips9hWKm/
H8qF0Tm6we/r8qKvbzDHizY8PNyk5/2T5i3xnqculAtTxLpLcChrBT7rupVr
PczybKrqfsl1L/Fc80zE+XLLQTvvWWUfS3hfq76GXoxxm2WsPQsAQKVCa03o
3C3awABQI6H+SZ5clCCnxZwHME0wDsRl3RUAAIA6isztUsZaBAAA1EB4/XXm
MQKAmjDWus6TixKs7+J1jw+t05l17l8AAIAqhecD12u2VLXOCAAAVQjP5Wuu
dwEAKF94PUS9ntCec9m3FeT3+sSMW2v+tXOdNgAAgDbR82e3Yr3XP86cvQCA
ntSaw77Rt2dOIwCoTrB2UHg9FO+5d8e98+Tt1vXW9Porr776alO4DxTkAze/
t3ig8vMBAADgJTQnll5TmlgvAKCXEfMFgOrpeO+ub14cXQO7cV9OWq/bdHJ0
SG3+wXWt/GAzR/f088tja2xPvHWp+sXSOZHfXH/8b5WfDwAAAGfhtW4XDzCH
AwAADYe3/KjV1/96/xuV7w8A9KLW+zfThGvUHcs2qM37XlMjJ0+qo0ePtoz8
4XfqV6uXq1smXZj3V8d6Nx+Jx2wja5dY+K7vBgAAUKVwX3bujpHK9wcAgFo5
NqDunXJpc/xv5fsCAL1obEQ9cuUXUmOySa6Yt0kcvyjmD5uxXsY+AgCADvPi
nD518aSl6rkPaMMAAAAAqKGxEfXUPTd5x3n7bl2qtr55MnHb4Tl6TbqfNPhR
DY4fAAAAAAAAALrM2Inj6rXNK9R9s6e31h4Ju+rGWWrWwvvV2r2vN+d4cN3u
6PaVrfntgrki5q5injsAAAAAAAAAKMuZs2c/cebDYrfXUPWxAQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOgN/x9wxIXQ
    "], {{0, 1124}, {1404, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->432,
  ImageSizeRaw->{1404, 1124},
  PlotRange->{{0, 1404}, {0, 1124}}]], "Output",ExpressionUUID->"5977fa9c-\
bf54-49fb-a32e-87eba83b1e47"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "a8f8724c-e682-45f3-9cd1-171dac2a3d90"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "38cf4795-d67c-4725-82f2-103e9cc528fa"],
 StyleBox["66\[Dash]71. Estimating error",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Refer to Theorem 8.1 in the following exercises."
}], "TExerciseDirectionsCell",ExpressionUUID->"1d9e93f3-6d0a-49c9-8b78-\
4cbfced92b67"],

Cell[TextData[{
 StyleBox["66.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"cos", " ", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "d00b70c1-9827-4874-87b1-205bc9d4592b"],
 "."
}], "Problem",ExpressionUUID->"3554c782-bcd6-4188-a851-e26847c6d3ed"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Midpoint Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", 
      RowBox[{"-", "1"}]}], 
     RowBox[{" ", "1"}]], 
    RowBox[{"cos", " ", 
     SuperscriptBox["x", "2"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"b1a11d08-a37d-484f-aa7c-4c36befbfc5b"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "30"}], TraditionalForm]],ExpressionUUID->
  "6b8d8cf1-e60e-4646-8575-33db90b8b629"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"9098be9d-a7b4-4ed8-af7e-750ffcfffb4d"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "4dc6b4f6-f7c7-4fe5-b412-613ee54e1c00"],
 "."
}], "SubProblem",ExpressionUUID->"48622fef-6d1a-43b2-814f-4d385ece7cc3"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tExplain why ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}], "<", "6"}], 
   TraditionalForm]],ExpressionUUID->"05660d58-443c-493c-a4f7-42e27e2cd643"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "eda2dfff-e381-48c2-93c3-923faf958a6c"],
 "."
}], "SubProblem",ExpressionUUID->"e3c286c3-2986-4913-b693-da90c154ca9a"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tUse Theorem 8.1 to find an upper bound on the absolute error in the \
estimate found in part (a)."
}], "SubProblem",ExpressionUUID->"816e1d35-20b7-48c3-af2d-699a4208755c"],

Cell[TextData[{
 StyleBox["67.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "3"], "+", "1"}]]}], TraditionalForm]],
  ExpressionUUID->"e2c666e4-7bbd-4975-842b-91f304aba5fb"],
 "."
}], "Problem",ExpressionUUID->"0c732600-8fd8-403d-9f00-5709b9eaf0da"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Midpoint Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "6"}]], 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "3"], "+", "1"}]], " ", "d", "\[VeryThinSpace]", 
     "x"}]}], TraditionalForm]],ExpressionUUID->
  "eb24e4cf-dec6-4f83-9916-8c1377cdc460"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "50"}], TraditionalForm]],ExpressionUUID->
  "c2011ae7-3542-45aa-878c-7f8590b0c793"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"558dc90f-ce71-4676-a71c-a454a8843701"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2c922ebf-41ff-47cf-9090-ef15e02bac1e"],
 "."
}], "SubProblem",ExpressionUUID->"199eb554-2522-4221-aed1-f8c512b20046"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUse the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],ExpressionUUID->
  "564d3a1c-4f9d-4711-b47f-26efe3477f5d"],
 " is decreasing and positive on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"1", ",", "6"}], "]"}], TraditionalForm]],ExpressionUUID->
  "fc6e8e4a-79e7-43a7-aff8-b7417459dc75"],
 " to show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}], "\[LessEqual]", 
    FractionBox["15", 
     RowBox[{"8", " ", 
      SqrtBox["2"]}]]}], TraditionalForm]],ExpressionUUID->
  "44884315-0d5a-4664-966f-e08cea404896"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"1", ",", "6"}], "]"}], TraditionalForm]],ExpressionUUID->
  "f32a03e7-2335-41f6-b3f6-a8f6e4d3ef5a"],
 "."
}], "SubProblem",ExpressionUUID->"025a1928-d116-4d6b-85f7-bb366740285d"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tUse Theorem 8.1 to find an upper bound on the absolute error in the \
estimate found in part (a)."
}], "SubProblem",ExpressionUUID->"bd9f21c2-4b52-46e2-8b89-a7b4c56cc887"],

Cell[TextData[{
 StyleBox["68.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["e", 
     SuperscriptBox["x", "2"]]}], TraditionalForm]],ExpressionUUID->
  "c4e1afac-cb07-4cfd-8e49-da1ecdedf885"],
 "."
}], "Problem",ExpressionUUID->"dfdf2701-384a-4cf6-b8a4-54f14aa2b826"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Trapezoid Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{
     SuperscriptBox["e", 
      SuperscriptBox["x", "2"]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"0473e3a8-8c50-42b8-a5df-f2b192d9251e"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "50"}], TraditionalForm]],ExpressionUUID->
  "2a4a4b59-439e-4024-84a9-5e6c1c42d148"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"a2c78e03-8837-47ac-8692-8b20e61ed905"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "e8f23499-7e79-4f70-a4c5-36555db8d41f"],
 "."
}], "SubProblem",ExpressionUUID->"470a94eb-c736-43d0-b997-27cc6e7e7986"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tExplain why ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}], "<", "18"}], 
   TraditionalForm]],ExpressionUUID->"a892adf9-a8b5-4c4d-b338-ceb430a44154"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "08ec25b1-ba84-485d-b8e5-3568af182324"],
 ", given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "<", "3"}], TraditionalForm]],ExpressionUUID->
  "40602f41-5983-41c3-b9a6-3470d2903a85"],
 "."
}], "SubProblem",ExpressionUUID->"d9f8d1db-2ef0-4b74-a2c6-55d4f6e799e0"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tUse Theorem 8.1 to find an upper bound on the absolute error in the \
estimate found in part (a)."
}], "SubProblem",ExpressionUUID->"8679a082-782e-4462-84d9-450ed429717a"],

Cell[TextData[{
 StyleBox["69.",
  FontWeight->"Bold"],
 StyleBox["\t",
  FontWeight->"Bold"],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"sin", " ", 
     SuperscriptBox["e", "x"]}]}], TraditionalForm]],ExpressionUUID->
  "28ef4c50-bf4a-4c1b-a64e-ebd3a2108b79"],
 "."
}], "Problem",ExpressionUUID->"cccddc88-8ea7-4a3d-9df5-826fe424a4c0"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Trapezoid Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "1"}]], 
    RowBox[{"sin", " ", 
     SuperscriptBox["e", "x"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"d6096cf7-a000-4a44-9548-234306180eef"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "40"}], TraditionalForm]],ExpressionUUID->
  "37f0e3d7-330b-442e-8526-ec3453112854"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"eb5aa42e-4226-4730-9280-7122d11ae106"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "88cce217-ef63-4214-9c00-c2693862b781"],
 "."
}], "SubProblem",ExpressionUUID->"b6998740-ab80-4c83-9f79-8f5f2b1841a4"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tExplain why ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      RowBox[{"f", "''"}], 
      RowBox[{"(", "x", ")"}]}], "\[RightBracketingBar]"}], "<", "6"}], 
   TraditionalForm]],ExpressionUUID->"b7460c5e-bc54-4fb4-bb8b-bdb33ec72fcd"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "d562c199-ed93-4441-a52f-11beda452651"],
 ", given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "<", "3"}], TraditionalForm]],ExpressionUUID->
  "e0c4acbe-5801-46b1-a387-62d28cfb86b9"],
 ". (",
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " Graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],ExpressionUUID->
  "35c5f4ca-b6ee-4272-b7c2-05ac6e77f4e4"],
 ".)"
}], "SubProblem",ExpressionUUID->"0fd829ed-07c7-41bb-bfb5-90ad642fb588"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tFind an upper bound on the absolute error in the estimate found in part \
(a) using Theorem 8.1."
}], "SubProblem",ExpressionUUID->"26fc781c-2a75-4774-9129-d30946e8391b"],

Cell[TextData[{
 StyleBox["70.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["e", 
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "4531370e-fc63-4674-a0a8-1d53b3f67983"]
}], "Problem",ExpressionUUID->"f7e46b9e-50c4-433b-87e8-03f4724a939a"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Simpson\[CloseCurlyQuote]s Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "3"}]], 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"a5529e44-070a-49b0-b8f7-51a61c7efef4"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "30"}], TraditionalForm]],ExpressionUUID->
  "9ccc8bef-193c-4dcd-bed3-61d8b94f92a7"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"3a108554-4065-4f34-b5c5-4950ee548bbf"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tCalculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", 
     RowBox[{"(", "4", ")"}]], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"fe2c16c5-a3fa-46bb-b7b3-6fea1f67422d"],
 "."
}], "SubProblem",ExpressionUUID->"65eb147a-72d1-444d-aaf8-9f03b7b9ef3d"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tFind an upper bound on the absolute error in the estimate found in part \
(a) using Theorem 8.1. (",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ": Use a graph to find an upper bound for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftBracketingBar]", 
    RowBox[{
     SuperscriptBox["f", 
      RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
   TraditionalForm]],ExpressionUUID->"97240143-dbbd-41d7-a5a1-a1624bed500c"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "3"}], "]"}], TraditionalForm]],ExpressionUUID->
  "ae1d19a2-9cb2-4456-92a6-347c5f913364"],
 ".)"
}], "SubProblem",ExpressionUUID->"52a78449-8a20-4b8e-a5ad-384ac986b63b"],

Cell[TextData[{
 StyleBox["71.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SqrtBox[
     RowBox[{"sin", " ", "x"}]]}], TraditionalForm]],ExpressionUUID->
  "57a35ac5-5fc5-4310-9470-b5816f371fc4"]
}], "Problem",ExpressionUUID->"96f56bdd-3a50-485c-9181-d5c216ba0777"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind a Simpson\[CloseCurlyQuote]s Rule approximation to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "2"}]], 
    RowBox[{
     SqrtBox[
      RowBox[{"sin", " ", "x"}]], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"a8b18808-cc93-4b09-8a2e-19e272ff0485"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "20"}], TraditionalForm]],ExpressionUUID->
  "fd30748a-bfd7-421a-8995-68d582e56644"],
 " subintervals."
}], "SubProblem",ExpressionUUID->"f51184d0-6049-4762-914d-27c94f6963d7"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind an upper bound on the absolute error in the estimate found in part \
(a) using Theorem 8.1.  (",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ": Use the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"(", "4", ")"}]], "(", "x", ")"}], "\[RightBracketingBar]"}], 
    "\[LessEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "e6966ceb-800d-46c1-b22c-258a8b1a8b87"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], TraditionalForm]],ExpressionUUID->
  "0418f01e-567b-4ea6-9270-8fa4085eb90d"],
 ".)"
}], "SubProblem",ExpressionUUID->"098e35cf-5e1c-485c-975c-00521a38cf56"]
}, Closed]],

Cell[CellGroupData[{

Cell["Explorations and Challenges  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Explorations and \
Challenges",ExpressionUUID->"b1940f01-8c39-4df5-9fb4-1d1cb0f78c3b"],

Cell[TextData[{
 StyleBox["72.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Exact Trapezoid Rule",
  FontWeight->"Bold"],
 "  Prove that the Trapezoid rule is exact (no error) when approximating the \
definite integral of a linear function."
}], "Problem",ExpressionUUID->"0b54bd49-d5d7-4a43-8260-7617f9c8d2f9"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "c0f5d920-a208-4e77-95d6-314a6d8469ed"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "b41d2465-b0a0-478d-801d-af06402577aa"],
 StyleBox["73.",
  FontWeight->"Bold"],
 StyleBox["\tArc length of an ellipse",
  FontWeight->"Bold"],
 "  The length of an ellipse with axes of length ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "a"}], TraditionalForm]],ExpressionUUID->
  "69df1bca-d55a-4202-8149-f439bb2fd287"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "b"}], TraditionalForm]],ExpressionUUID->
  "de510f9e-7bd4-42ff-9df8-c5f5d4adad19"],
 " is \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          FormBox[
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{" ", "0"}], 
             RowBox[{" ", 
              RowBox[{"2", "\[Pi]"}]}]], 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["a", "2"], 
                SuperscriptBox["cos", "2"], "t"}], "+", 
               RowBox[{
                SuperscriptBox["b", "2"], 
                SuperscriptBox["sin", "2"], "t"}]}]], " ", "d", 
             "\[VeryThinSpace]", "t"}]}],
           TraditionalForm], "."}]}
       },
       GridBoxAlignment->{"Columns" -> {{"Center"}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "0a393d30-9986-4976-b338-070dec843e63"],
 "\n\t\t Use numerical integration and experiment with different values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "38da891f-2372-4c07-bcc4-db7f987ca879"],
 " to approximate the length of an ellipse with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "9104245a-db84-4f12-afea-bcf9283fc03f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "8"}], TraditionalForm]],ExpressionUUID->
  "b04f1ad4-f2fb-46a6-b8c9-7c7ee5bf0547"],
 "."
}], "TProblem",ExpressionUUID->"1fe83e77-b085-4f9e-9bfc-dc006ea42aa9"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "410315bc-ce0c-43ab-ad53-1172e81cd378"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "840502e5-2f42-4feb-8723-e9a936744374"],
 StyleBox["74.",
  FontWeight->"Bold"],
 StyleBox["\tSine integral",
  FontWeight->"Bold"],
 "  The theory of diffraction produces the sine integral function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Si", " ", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "x"}]], 
     RowBox[{
      FractionBox[
       RowBox[{"sin", " ", "t"}], "t"], " ", "d", "\[VeryThinSpace]", 
      "t"}]}]}], TraditionalForm]],ExpressionUUID->
  "73d4fe9a-ee79-4061-9bd6-e28180cde4ad"],
 ". Use the Midpoint Rule to approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Si", " ", 
    RowBox[{"(", "1", ")"}]}], TraditionalForm]],ExpressionUUID->
  "72c0c27b-dff2-4d8d-a3ca-f4a194879ad2"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Si", " ", 
    RowBox[{"(", "10", ")"}]}], TraditionalForm]],ExpressionUUID->
  "afcd98bd-57c0-4065-b3ca-55670f53862a"],
 ". (Recall that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", "\[Rule]", "0"}]], 
     FractionBox[
      RowBox[{"sin", " ", "x"}], "x"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"e08c4eb8-8118-4dfe-a198-00b1d3b2b9f1"],
 ".) Experiment with the number of subintervals until you obtain \
approximations that have an error less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]],ExpressionUUID->
  "1d3157a5-3ab0-4b2c-a9d6-4797ff1d227c"],
 ". A rule of thumb is that if two successive approximations differ by less \
than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]],ExpressionUUID->
  "779d9d0e-5100-468a-97fa-92d80cfc509f"],
 ", then the error is usually less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]],ExpressionUUID->
  "59e276ea-5003-43cd-948d-46fb091eea81"],
 "."
}], "TProblem",ExpressionUUID->"6e31b717-ddcf-476d-9503-8c4f16239289"],

Cell[TextData[{
 StyleBox["75.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Exact Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold"]
}], "Problem",ExpressionUUID->"7399e871-be2a-4319-b6bd-ee03b9787557"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse Simpson\[CloseCurlyQuote]s Rule to approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "4"}]], 
    RowBox[{
     SuperscriptBox["x", "3"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"24049f4a-dcef-480d-aae2-260529bbe75b"],
 " using two subintervals (",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "cd69a5a2-a790-49ef-9c1a-f99b26a2488c"],
 "); compare the approximation to the value of the integral."
}], "SubProblem",ExpressionUUID->"8f440b6a-ccd9-42dc-93e6-36b4595db4fc"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tUse Simpson\[CloseCurlyQuote]s Rule to approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "0"}], 
     RowBox[{" ", "4"}]], 
    RowBox[{
     SuperscriptBox["x", "3"], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"5e4556da-4890-45ce-9498-a58969c60082"],
 " using four subintervals (",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],ExpressionUUID->
  "bb8ad9d6-1bb0-4df5-8b9a-147de663fd0b"],
 "); compare the approximation to the value of the integral."
}], "SubProblem",ExpressionUUID->"13d50330-5c47-4538-8a5a-bc7e7e69ad88"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUse the error bound associated with Simpson\[CloseCurlyQuote]s Rule given \
in Theorem 8.1 to explain why the approximations in parts (a) and (b) give \
the exact value of the integral."
}], "SubProblem",ExpressionUUID->"ac2719f6-643c-4ce1-9a28-dc8cabab558b"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tUse Theorem 8.1 to explain why a Simpson\[CloseCurlyQuote]s Rule \
approximation using any (even) number of subintervals gives the exact value \
of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"5ecf69bc-af5f-4414-a36f-b003e88e48a6"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "4b679172-733e-4467-a0bb-b8eeabdc540b"],
 " is a polynomial of degree 3 or less."
}], "SubProblem",ExpressionUUID->"0caf7cc6-7dad-4196-a8b1-66532cfd9733"],

Cell[TextData[{
 StyleBox["76.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Shortcut for the Trapezoid Rule",
  FontWeight->"Bold"],
 "  Given a Midpoint Rule approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "f5ca2dba-fa0b-4c78-a4fc-543492624bd8"],
 " and a Trapezoid Rule approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "n", ")"}], TraditionalForm]],ExpressionUUID->
  "385b0ae9-b28d-4682-8922-4fed6ba7b6e0"],
 " for a continuous function on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "68a81404-9213-4657-8f15-d2e7cbe84c38"],
 " with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "474f1c89-2ece-48b3-8afb-4f6068a9fc95"],
 " subintervals, show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", 
     RowBox[{"2", "n"}], ")"}], "=", 
    FormBox[
     FractionBox[
      RowBox[{
       RowBox[{"T", "(", "n", ")"}], "+", 
       RowBox[{"M", "(", "n", ")"}]}], "2"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "42644a3a-7535-4877-b93a-0e6108027cda"],
 "."
}], "Problem",ExpressionUUID->"061163fc-03a4-4d5a-bc43-3b14777cd0cf"],

Cell[TextData[{
 StyleBox["77.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Trapezoid Rule and concavity",
  FontWeight->"Bold"],
 "  Suppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "f9c1402a-5767-4f34-b54c-c01eb44f8738"],
 " is positive and its first two derivatives are continuous on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "45af2568-2fc9-4ee0-90a9-517a0e6bc827"],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "''"}], TraditionalForm]],ExpressionUUID->
  "04776f71-29c0-4aac-abdc-cf0d69e2af1b"],
 " is positive on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]],ExpressionUUID->
  "6166457f-05a9-4cf0-b516-663ea6843847"],
 ", then is a Trapezoid Rule estimate of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "a"}], 
     RowBox[{" ", "b"}]], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"b8db7472-6b38-4533-a7be-59402c76f4e3"],
 " an underestimate or overestimate of the integral? Justify your answer \
using Theorem 8.1 and an illustration."
}], "Problem",ExpressionUUID->"651a341c-2824-469d-81b1-165233407f7f"],

Cell[TextData[{
 StyleBox["78.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Shortcut for Simpson\[CloseCurlyQuote]s Rule",
  FontWeight->"Bold"],
 "  Using the notation of the text, prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"S", "(", 
     RowBox[{"2", "n"}], ")"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"4", 
       RowBox[{"T", "(", 
        RowBox[{"2", "n"}], ")"}]}], "-", 
      RowBox[{"T", "(", "n", ")"}]}], "3"]}], TraditionalForm]],
  ExpressionUUID->"ce5dbbfe-4adf-4440-b224-03a12cdf12c0"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[GreaterEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "e260be3b-384a-4da8-b704-9833a70c5cbb"],
 "."
}], "Problem",ExpressionUUID->"cf40604d-3730-468f-b896-d2160dd29c80"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "bd392c92-69e7-4f67-8ecf-77aaf01c3f50"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "42cc000f-8a8d-447b-8790-14d51019accb"],
 StyleBox["79.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Another Simpson\[CloseCurlyQuote]s Rule formula",
  FontWeight->"Bold"],
 "  Another Simpson\[CloseCurlyQuote]s Rule formula is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"S", "(", 
     RowBox[{"2", "n"}], ")"}], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"2", 
       RowBox[{"M", "(", "n", ")"}]}], "+", 
      RowBox[{"T", "(", "n", ")"}]}], "3"]}], TraditionalForm]],
  ExpressionUUID->"e8e50440-3b7d-4227-9ea2-a7899a004c59"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[GreaterEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "9ac98490-53c1-439e-afb3-4789e4fe3c5f"],
 ". Use this rule to estimate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{" ", "1"}], 
     RowBox[{" ", "e"}]], 
    RowBox[{
     FormBox[
      FractionBox["1", "x"],
      TraditionalForm], " ", "d", "\[VeryThinSpace]", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"a6cfb187-478a-4dc6-aeab-b2d0e3b793ba"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "f3a667ad-94af-486b-a3c5-5d984612ae51"],
 " subintervals."
}], "TProblem",ExpressionUUID->"46993f1a-9978-4264-9856-9980ce1f986d"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
Editable->True,
Saveable->True,
Selectable->True,
WindowSize->{1024, 720},
WindowTitle->"Section 8.8 Numerical Integration",
Visible->True,
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[18], Selectable -> False], 
       PaneBox[
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"CALCULUS\"", "SR", Bold, 14, StripOnInput -> False], 
             
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[18], Selectable -> False], 
             StyleBox[
             "\"Early Transcendentals, Third Edition\"", "SR", 11, 
              StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], Bold, 
         StripOnInput -> False], Alignment -> {Left, Center}, 
        BaselinePosition -> Center, ImageSize -> {300, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {
            Dynamic[
             Max[0, First[
                ReplaceAll[WindowSize, 
                 Options[
                  EvaluationNotebook[], WindowSize]]] - 840]], 0}, 
          BaselinePosition -> Baseline], "CacheGraphics" -> False], 
        Spacer[
         Dynamic[
          Max[0, First[
             ReplaceAll[WindowSize, 
              Options[
               EvaluationNotebook[], WindowSize]]] - 840]]], Selectable -> 
        False], 
       PaneBox[
        StyleBox[
         StyleBox[
         "\"Briggs, Cochran, Gillett, Schulz\"", "SR", Bold, 11, StripOnInput -> 
          False], Bold, StripOnInput -> False], Alignment -> {Right, Center}, 
        BaselinePosition -> Center, ImageSize -> {180, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[6], Selectable -> False], 
       ActionMenuBox[
        StyleBox[
         TemplateBox[{"\"Section \"", "\"8.8\""}, "RowDefault"], StripOnInput -> 
         False], {
        StyleBox[
          "\"8.8 Numerical Integration\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["8.8 Numerical Integration"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Absolute and Relative Error\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Absolute and Relative Error"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"DEFINITIONS Absolute and Relative Error\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITIONS Absolute and Relative Error"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 1 Absolute and relative error\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 1 Absolute and relative error"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Midpoint Rule\"", {"MSG", FontWeight -> "Bold", FontSize -> 13}, 
           StripOnInput -> False] :> {
           NotebookLocate["Midpoint Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.12  \[LightBulb]: Midpoint Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 8.12  \[LightBulb]: Midpoint Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION Midpoint Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITION Midpoint Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 1\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 2 Applying the Midpoint Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 2 Applying the Midpoint Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.13  \[LightBulb]: Example 2\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 8.13  \[LightBulb]: Example 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"The Trapezoid Rule\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["The Trapezoid Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.14  \[LightBulb]: Trapezoid Rule\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 8.14  \[LightBulb]: Trapezoid Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION Trapezoid Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Bold", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["DEFINITION Trapezoid Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 2\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 3 Applying the Trapezoid Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 3 Applying the Trapezoid Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.15  \[LightBulb]: Example 3\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 8.15  \[LightBulb]: Example 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 8.5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 8.5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 3\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 5 World oil production\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 5 World oil production"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 8.16: Example 5\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 8.16: Example 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 6 Net change in sea level\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 6 Net change in sea level"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 8.7\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 8.7"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 8.17: Example 6\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 8.17: Example 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Simpson\[CloseCurlyQuote]s Rule\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Simpson\[CloseCurlyQuote]s Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s \
Rule\""}, "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 8.19: Net area bounded by parabola\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 8.19: Net area bounded by parabola"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"DEFINITION Simpson\[CloseCurlyQuote]s Rule\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["DEFINITION Simpson\[CloseCurlyQuote]s Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 8.20: Example 7\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 8.20: Example 7"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\
\[CloseCurlyQuote]s Rule\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate[
           "EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\
\[CloseCurlyQuote]s Rule"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 8.8\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 8.8"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Errors in Numerical Integration\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Errors in Numerical Integration"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"THEOREM 8.1 Errors in Numerical Integration\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["THEOREM 8.1 Errors in Numerical Integration"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 6\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"SECTION 8.8 EXERCISES\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["SECTION 8.8 EXERCISES"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Getting Started\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Getting Started"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Practice Exercises\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Practice Exercises"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Explorations and Challenges\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 11}, 
           StripOnInput -> False] :> {
           NotebookLocate["\[EmptySmallCircle] Explorations and Challenges"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}}, 
        ImageSize -> {108, 22}, FrameMargins -> 0, BaseStyle -> {"MSG", 11}, 
        BaselinePosition -> Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0807.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ActionMenuBox["\"Contents\"", {StyleBox[
           TemplateBox[{"\"Calculus: Early Transcendentals\""}, "RowDefault"],
            Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Chapters\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Preface\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0002.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 1\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Review of Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Representing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Inverse, Exponential, and Logarithmic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Functions and Their Inverses\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 2\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Limits\""}, "RowDefault"], 
           Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Idea of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definitions of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Techniques for Computing Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits at Infinity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0205.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0206.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.7\"", 
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Precise Definitions of Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0207.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0208.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 3\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Derivatives\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Introducing the Derivative\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Derivative as a Function\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Rules of Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Product and Quotient Rules\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Trigonometric Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives as Rates of Change\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0307.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Implicit Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0308.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Logarithmic and Exponential Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0309.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.10\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Inverse Trigonometric Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0310.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.11\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Related Rates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0311.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0312.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 4\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of the Derivative\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maxima and Minima\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Mean Value Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"What Derivatives Tell Us\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Optimization Problems\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Approximation and Differentials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0406.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"L'H\[OHat]pital's Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0407.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Newton's Method\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0408.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Antiderivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0409.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0410.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 5\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Areas Under Curves\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definite Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Fundamental Theorem of Calculus\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Working with Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Substitution Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0506.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 6\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of Integration\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Velocity and Net Change\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Regions Between Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Slicing\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Shells\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Area\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Physical Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 7\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Logarithmic, Exponential, and Hyperbolic Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Logarithmic and Exponential Functions Revisited\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Exponential Models\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Hyperbolic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0704.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 8\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration Techniques\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Approaches\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration by Parts\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Trigonometric Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Substitutions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Fractions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration Strategies\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0806.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Other Methods of Integration\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0807.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Numerical Integration\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0808.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Improper Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0809.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0810.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 9\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Direction Fields and Euler's Method\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Separable Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Special First-Order Linear Differential Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Modeling with Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0906.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 10\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Sequences and Infinite Series\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"An Overview\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Sequences\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1002.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1003.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Divergence and Integral Tests\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1004.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Comparison Tests\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1005.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Alternating Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1006.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Ratio and Root Tests\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1007.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Choosing a Convergence Test\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1008.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1009.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 11\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Power Series\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Functions with Polynomials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Properties of Power Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Taylor Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Working with Taylor Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 12\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Parametric and Polar Curves\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Parametric Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Polar Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Conic Sections\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1205.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 13\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vectors and the Geometry of Space\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vectors in the Plane\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vectors in Three Dimensions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Dot Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Cross Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Lines and Planes in Space\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Cylinders and Quadric Surfaces\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1307.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 14\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus of Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Motion in Space\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Curvature and Normal Vectors\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1406.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 15\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Functions of Several Variables\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphs and Level Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits and Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Derivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule \""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Directional Derivatives and the Gradient\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Tangent Planes and Linear Approximation\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1506.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maximum/Minimum Problems\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1507.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Lagrange Multipliers\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1508.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1509.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 16\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Multiple Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over Rectangular Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over General Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Triple Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Triple Integrals in Cylindrical and Spherical Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Integrals for Mass Calculations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Change of Variables in Multiple Integrals\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 17\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Vector Calculus\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vector Fields\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Line Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Conservative Vector Fields\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Green\[CloseCurlyQuote]s Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1704.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence and Curl\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1705.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1706.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Stokes\[CloseCurlyQuote] Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1707.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1708.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1709.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 18\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Second\[Hyphen]Order Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Homogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Nonhomogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Complex Forcing Functions\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1806.cdf"], None}], StyleBox[
           TemplateBox[{"\"End Matter\""}, "RowDefault"], Bold, StripOnInput -> 
           False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix A\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix B\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix C\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Index\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"App. Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Figure Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1906.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Algebra/Trig (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_frontpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Calculus (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_endpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Table of Integrals (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_table.pdf"], None}], 
         StyleBox[
          "\"Answers to Odd Exercises\"", Bold, StripOnInput -> False] :> 
         Style["Answers to Odd Exercises", Bold], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  1 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_01.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_02.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  3 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_03.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  4 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_04.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  5 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_05.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  6 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_06.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  7 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_07.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  8 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_08.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  9 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_09.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 10 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_10.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 11 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_11.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 12 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_12.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 13 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_13.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 14 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_14.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 15 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_15.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 16 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_16.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 17 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_17.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter D2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_18.pdf"], None}]}, FrameMargins -> 1, 
        ImageSize -> {72, 22}, BaseStyle -> {"MSG", 11}, BaselinePosition -> 
        Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0809.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Expanded View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Expanded View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}], True -> 
            GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Answers to Odd Exercises",
              All, CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "AlgebraCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Algebra Check", All, 
             CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "QuickCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "CalloutIcon", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "Subsubsubsubsection", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "Subsection", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Outline View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Outline View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ActionMenuBox[
        StyleBox["\"%\"", "Label", 13, StripOnInput -> False], {
        "\"50%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.5]}, "\"75%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.75]}, "\"100%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1]}, "\"125%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.25]}, "\"150%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.5]}, "\"175%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.75]}, "\"200%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2]}, "\"225%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.25]}, "\"250%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.5]}, "\"275%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.75]}, "\"300%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 3]}}, 
        FrameMargins -> {{0, 1}, {0, 0}}, ImageMargins -> 0, 
        ImageSize -> {40, 22}, BaselinePosition -> Center]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]], "DockedCell", 
  CellFrameMargins -> 3],
ScrollingOptions->{"VerticalScrollRange"->Fit},
PageHeaders->{{
   Cell[
    TextData[
     RowBox[{
       CounterBox["Page"], "            ", 
       StyleBox["Chapter 8  \[Bullet]  Integration Techniques"]}]], "Header"],
    "", ""}, {"", "", 
   Cell[
    TextData[
     RowBox[{
       StyleBox["Section 8.8  Numerical Integration"], "            ", 
       CounterBox["Page"]}]], "Header"]}},
PageFooters->{{"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}, {"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}},
PrintingOptions->{"FacingPages"->True,
"FirstPageHeader"->True,
"InnerOuterMargins"->{90, 48},
"PrintingMargins"->{{48, 48}, {72, 72}}},
PrivateNotebookOptions->{"PluginToolbarEnabled"->False,
"PluginUpdateNotificationsEnabled"->False},
ShowCellBracket->Automatic,
Deployed->False,
Copyable->True,
ShowCellLabel->False,
ShowCellTags->False,
TrackCellChangeTimes->False,
ShowAutoSpellCheck->False,
Magnification->1,
GridBoxOptions->{AllowScriptLevelChange->False},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, ShowGroupOpener -> 
       False, CellMargins -> {{10, 0}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 20, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> None, ShowGroupOpener -> 
       False, CellMargins -> {{0, Inherited}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.5], FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontTracking -> "Wide"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{15, 0}, {2, 7}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       18, FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Extended", FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsection", "Printout"], CellFrame -> None, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{0, 0}, {2, 10}}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", FontSlant -> "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
       GrayLevel[0]], 
      Cell[
       StyleData["Subsubsection", "Printout"], CellDingbat -> None, 
       CellMargins -> {{0, Inherited}, {2, 10}}, FontFamily -> "Helvetica", 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       False, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Subsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13, FontSlant -> "Plain"]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> "Bold", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsubsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FirstCell"], ShowCellBracket -> False, 
       CellMargins -> {{30, 10}, {7, 7}}, CellOpen -> False, TabSpacings -> 3,
        FontSize -> 14], 
      Cell[
       StyleData["FirstCell", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       CellOpen -> False, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Text"], CellMargins -> {{30, 10}, {7, 7}}, TabSpacings -> 3,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Text", "Printout"], CellMargins -> {{0, 0}, {7, 7}}, 
       TabSpacings -> 3, FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{50, 10}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, FontFamily -> 
       "Times", FontSize -> 14], 
      Cell[
       StyleData["Item", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{20, 0}, {2, 2}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{70, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Subitem", 
       CounterAssignments -> {{"Subsubitem", 0}}, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["Subitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{40, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{90, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subsubitem", 
       TabSpacings -> 3, CounterIncrements -> "Subsubitem", FontFamily -> 
       "Times", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Subsubitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{60, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    StyleData["QuickCheckFont"], FontFamily -> "Helvetica", FontSize -> 11, 
    FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheck"], CellMargins -> {{30, 10}, {0, 7}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 51}, 
       LineSpacing -> {1, 3}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["QuickCheck", "Printout"], CellMargins -> {{0, 30}, {0, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, TabSpacings -> 3, 
       FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswerIcon"], ShowGroupOpener -> True, 
       CellMargins -> {{50, 108}, {0, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left,
        TabSpacings -> 2, FontFamily -> "Helvetica", FontSize -> 11, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> "Wide", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["QuickCheckAnswerIcon", "Printout"], 
       CellMargins -> {{10, 288}, {0, 0}}, PageBreakAbove -> False, 
       PageBreakBelow -> False, CellFrameColor -> 
       RGBColor[0.976, 0.855, 0.514], FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswer"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["QuickCheckAnswer", "Printout"], 
       CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{30, 60}, {7, 0}}, 
       PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.8], 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontSize -> 13]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DefinitionFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]], 
      Cell[
       StyleData["DefinitionFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Definition"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Definition", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TheoremFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["TheoremFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Theorem"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Theorem", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProofFont"], FontFamily -> "Times", FontSize -> 14, 
       FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["ProofFont", "Printout"], FontFamily -> "Times", FontSize -> 
       13, FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SummaryFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["SummaryFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Summary"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Summary", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProcedureFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["ProcedureFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
       FontTracking -> "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Procedure"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, CellFrameColor -> GrayLevel[0.85], 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Procedure", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Important"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Important", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    StyleData["RelatedExercises"], TextAlignment -> Right, FontFamily -> 
    "Times", FontSize -> 13, FontSlant -> Italic, FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide"], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Closed]], 
   Cell[
    StyleData["CalloutIcon"], ShowGroupOpener -> True, 
    CellMargins -> {{50, 60}, {0, 0}}, 
    CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
    CellEventActions -> {"MouseClicked" :> {
        FrontEndTokenExecute["OpenCloseGroup"], 
        FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
    CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left, 
    LineSpacing -> {1, 2}, TabSpacings -> 2, FontFamily -> "Helvetica", 
    FontSize -> 12, FontWeight -> "Bold", FontTracking -> "Wide", FontColor -> 
    Dynamic[
      If[
       CurrentValue["MouseOver"], Orange, Black], 
      ImageSizeCache -> {11., {3., 8.}}]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Closed]], 
   Cell[
    StyleData["FigureCaption"], CellMargins -> {{30, 30}, {7, 7}}, 
    LineSpacing -> {1, 3}, FontSize -> 14], 
   Cell[
    StyleData["ChapterPreviewFont"], FontFamily -> "Arial", FontSize -> 24, 
    FontWeight -> "Normal", FontColor -> RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SectionTitleFont"], FontFamily -> "Arial", FontWeight -> 
    "Bold", FontTracking -> "Extended", FontColor -> RGBColor[0, 0.34, 0.45]], 
   Cell[
    StyleData["ExampleFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SolutionFont"], FontFamily -> "Helvetica"], 
   Cell[
    StyleData["FigureFont"], FontFamily -> "Arial", FontSize -> 12, 
    FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FigureFontText"], FontFamily -> "Arial", FontSize -> 12, 
       FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
      Cell[
       StyleData["FigureFontText", "Printout"], FontFamily -> "Arial", 
       FontSize -> 12, FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    StyleData["TableFont"], FontFamily -> "Arial", FontSize -> 13, FontWeight -> 
    "Bold", FontColor -> RGBColor[0., 0.597656, 0.515625]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TableCell"], CellMargins -> {{30, 10}, {5, 5}}], 
      Cell[
       StyleData["TableCell", "Printout"], CellMargins -> {{0, 0}, {5, 5}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TypesetAnnotationFont"], FontFamily -> "Times", FontColor -> 
       RGBColor[0., 0.644531, 0.84375]], 
      Cell[
       StyleData["TypesetAnnotationFont", "Printout"], FontFamily -> "Times", 
       FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide", FontColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031]], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{30, 108}, {2, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.97]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Open]], 
   Cell[
    StyleData["Note"], FontFamily -> "Helvetica", FontSize -> 12, 
    FontTracking -> "Wide", FontColor -> RGBColor[0.6, 0.4, 0.4]], 
   Cell[
    StyleData["ExerciseFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.8, 0, 0.4]], 
   Cell[
    StyleData["ExerciseGroupFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.0625, 0.390625, 0.519531]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseAnswerGroupFont"], FontFamily -> "Helvetica", 
       FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["ExerciseAnswerGroupFont", "Printout"], FontFamily -> 
       "Helvetica", FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ControlFont"], FontFamily -> "Helvetica", FontSize -> 12, 
       FontTracking -> "Wide", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["ControlFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontTracking -> "Wide", FontColor -> GrayLevel[0]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseDirectionsCell"], CellMargins -> {{30, 10}, {7, 7}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["ExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{30, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 13, FontWeight -> "Plain", 
       FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TExerciseDirectionsCell"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["TExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubExerciseDirectionsCell"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -22, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["SubExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -16, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Problem"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -29, TabSpacings -> 2.5,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Problem", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -19, TabSpacings -> 2.5,
        FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TProblem"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -47, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["TProblem", "Printout"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -32, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubProblem"], CellMargins -> {{58, 10}, {2, 2}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -22, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["SubProblem", "Printout"], CellMargins -> {{58, 10}, {2, 2}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -16, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Comment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[0, 0, 1], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[0.87, 0.94, 1]], 
      Cell[
       StyleData["Comment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["EditorComment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[1, 0, 0], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[1, 0.85, 0.85]], 
      Cell[
       StyleData["EditorComment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    StyleData["IndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[1, 0.5, 0]], 
   Cell[
    StyleData["ApplicationIndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[0, 0.5, 1]], 
   Cell[
    StyleData["InlineCell"], ScriptSizeMultipliers -> 0.8, ScriptLevel -> 0, 
    NumberSeparator -> ","], 
   Cell[
    StyleData["Output"], NumberSeparator -> ","], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Objectives"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {18, -2}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.5], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 4}, ParagraphIndent -> -24, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14, Background -> GrayLevel[0.97]], 
      
      Cell[
       StyleData["Objectives", "Printout"], CellMargins -> {{30, 30}, {6, 6}},
        PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.5], 
       ParagraphIndent -> -15, TabSpacings -> 2, FontSize -> 13, Background -> 
       GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Solution"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> RGBColor[0.94, 0.91, 0.88]], 
      Cell[
       StyleData["Solution", "Printout"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Answer"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Answer", "Printout"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
       ContextMenu -> FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"],
        FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, 
          RGBColor[0.269993, 0.308507, 0.6]], 
         ImageSizeCache -> {11., {3., 8.}}], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            NotebookLocate[#2, "OpenInNewWindow" -> True]}]& ), Evaluator -> 
         None, Method -> "Queued"}], 
      Cell[
       StyleData["Hyperlink", "Condensed"], FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Header", "Printout"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Footer", "Printout"], CellMargins -> {{0, 0}, {0, 4}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]]}, WindowSize -> {808, 911}, 
  WindowMargins -> {{60, Automatic}, {Automatic, 144}}, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"],
PrivateNotebookOptions -> {"ShowProductBranding" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "8.8 Numerical Integration"->{
  Cell[1533, 36, 186, 4, 
  42, "Section", "ExpressionUUID" -> "0f263b4e-1a5c-48e7-9445-866a30a93d68",
   CellTags->"8.8 Numerical Integration"]},
 "Absolute and Relative Error"->{
  Cell[3042, 74, 170, 3, 
  28, "Subsection", "ExpressionUUID" -> "356fcef9-f62b-4cc2-a416-7ab2e59457ee",
   CellTags->"Absolute and Relative Error"]},
 "DEFINITIONS Absolute and Relative Error"->{
  Cell[3577, 91, 2405, 71, 
  165, "Definition", "ExpressionUUID" -> "9dd982c7-d5da-4346-b299-6b01c5e59501
   ",
   CellTags->"DEFINITIONS Absolute and Relative Error"]},
 "EXAMPLE 1 Absolute and relative error"->{
  Cell[6347, 176, 223, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "0d48d670-2155-4c8c-99cb-
   f1a724bdce37",
   CellTags->"EXAMPLE 1 Absolute and relative error"]},
 "Midpoint Rule"->{
  Cell[9523, 278, 140, 2, 
  25, "Subsection", "ExpressionUUID" -> "e79ddbdc-85dd-42b0-8a23-01df1e6f681f",
   CellTags->"Midpoint Rule"]},
 "Figure 8.12  \[LightBulb]: Midpoint Rule"->{
  Cell[13274, 390, 37839, 698, 
  500, "Output", "ExpressionUUID" -> "8ede8485-de1d-4af8-a467-83fc20e7521c",
   CellTags->"Figure 8.12  \[LightBulb]: Midpoint Rule"]},
 "DEFINITION Midpoint Rule"->{
  Cell[56448, 1246, 4088, 132, 
  198, "Definition", "ExpressionUUID" -> "2781fe4c-54ca-448e-969b-b86498489af2
   ",
   CellTags->"DEFINITION Midpoint Rule"]},
 "Quick Check 1"->{
  Cell[60833, 1389, 893, 25, 
  26, "QuickCheck", "ExpressionUUID" -> "83a34d50-24cf-4d40-87b3-14fcfb311bdf",
   CellTags->"Quick Check 1"]},
 "EXAMPLE 2 Applying the Midpoint Rule"->{
  Cell[62144, 1429, 221, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "
   174d972f-69b0-4b47-9106-94199a194900",
   CellTags->"EXAMPLE 2 Applying the Midpoint Rule"]},
 "Figure 8.13  \[LightBulb]: Example 2"->{
  Cell[66056, 1554, 36141, 672, 
  452, "Output", "ExpressionUUID" -> "f1f85426-acc4-463b-ab3e-5900a745b06a",
   CellTags->"Figure 8.13  \[LightBulb]: Example 2"]},
 "The Trapezoid Rule"->{
  Cell[107939, 2402, 150, 2, 
  25, "Subsection", "ExpressionUUID" -> "f9f0883e-4bd6-4019-a8ec-f53ecf8262df",
   CellTags->"The Trapezoid Rule"]},
 "Figure 8.14  \[LightBulb]: Trapezoid Rule"->{
  Cell[111779, 2506, 38022, 698, 
  500, "Output", "ExpressionUUID" -> "c99acf02-3643-4a20-8645-d3259a5a9e41",
   CellTags->"Figure 8.14  \[LightBulb]: Trapezoid Rule"]},
 "DEFINITION Trapezoid Rule"->{
  Cell[158631, 3449, 3044, 98, 
  182, "Definition", "ExpressionUUID" -> "9a5d531d-c514-4ad8-be57-d9af65e4be7c
   ",
   CellTags->"DEFINITION Trapezoid Rule"]},
 "Quick Check 2"->{
  Cell[161678, 3549, 859, 24, 
  42, "QuickCheck", "ExpressionUUID" -> "9da9e99c-7932-4b77-b2b6-e90a925ed8d2",
   CellTags->"Quick Check 2"]},
 "EXAMPLE 3 Applying the Trapezoid Rule"->{
  Cell[162810, 3584, 223, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "1db5f308-68c5-428f-
   bb05-64962925e9c5",
   CellTags->"EXAMPLE 3 Applying the Trapezoid Rule"]},
 "Figure 8.15  \[LightBulb]: Example 3"->{
  Cell[168481, 3751, 36304, 671, 
  452, "Output", "ExpressionUUID" -> "498674a0-22a2-4604-800c-276a81c5b2d7",
   CellTags->"Figure 8.15  \[LightBulb]: Example 3"]},
 "EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules"->{
  Cell[205022, 4435, 253, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "
   5283e13b-4b4d-44c3-9c3e-186e07d299c1",
   CellTags->"EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules"]},
 "Table 8.5"->{
  Cell[216118, 4751, 10314, 187, 
  194, "Output", "ExpressionUUID" -> "3482a4c2-2b1a-412c-8643-77b1f2db695e",
   CellTags->"Table 8.5"]},
 "Quick Check 3"->{
  Cell[226647, 4949, 1175, 35, 
  29, "QuickCheck", "ExpressionUUID" -> "9eb2d433-d0c5-440b-83ae-13d2676d091d",
   CellTags->"Quick Check 3"]},
 "EXAMPLE 5 World oil production"->{
  Cell[228247, 4999, 209, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "2b4b99ca-fccc-49b5-
   ad8f-914d6a41d901",
   CellTags->"EXAMPLE 5 World oil production"]},
 "Figure 8.16: Example 5"->{
  Cell[229724, 5041, 7060, 144, 
  470, "Output", "ExpressionUUID" -> "b7639b15-26db-4179-990c-4a4e04462b4a",
   CellTags->"Figure 8.16: Example 5"]},
 "EXAMPLE 6 Net change in sea level"->{
  Cell[245764, 5452, 215, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "8e84ade5-157d-42cc-acae-
   c714568e58fc",
   CellTags->"EXAMPLE 6 Net change in sea level"]},
 "Table 8.7"->{
  Cell[246934, 5491, 2462, 57, 
  124, "Output", "ExpressionUUID" -> "25a038e7-9808-435d-94f0-28b4c40f30c1",
   CellTags->"Table 8.7"]},
 "Figure 8.17: Example 6"->{
  Cell[254559, 5702, 219208, 3605, 
  364, "Output", "ExpressionUUID" -> "f4d6a28e-47f5-4a22-b338-1b4f312f12b2",
   CellTags->"Figure 8.17: Example 6"]},
 "Simpson\[CloseCurlyQuote]s Rule"->{
  Cell[482516, 9573, 178, 3, 
  25, "Subsection", "ExpressionUUID" -> "583fca97-2349-498c-bf4f-965e541ef8ea",
   CellTags->"Simpson\[CloseCurlyQuote]s Rule"]},
 "Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s Rule"->{
  Cell[484903, 9643, 39155, 708, 
  546, "Output", "ExpressionUUID" -> "d210afe9-cb1b-4173-968a-f15440827234",
   CellTags->"Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s Rule"]},
 "Figure 8.19: Net area bounded by parabola"->{
  Cell[525749, 10408, 73511, 1216, 
  349, "Output", "ExpressionUUID" -> "162e136e-21f6-4668-a292-01cc413ccd92",
   CellTags->"Figure 8.19: Net area bounded by parabola"]},
 "DEFINITION Simpson\[CloseCurlyQuote]s Rule"->{
  Cell[619811, 12238, 3457, 108, 
  168, "Definition", "ExpressionUUID" -> "07a9a5d2-fa9a-48a1-87ad-8553930550a7
   ",
   CellTags->"DEFINITION Simpson\[CloseCurlyQuote]s Rule"]},
 "EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule"->{
  Cell[623293, 12350, 249, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "
   d7737cf9-98ee-48eb-8c82-405f9536747e",
   CellTags->"EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule"]},
 "Figure 8.20: Example 7"->{
  Cell[630354, 12571, 69248, 1147, 
  280, "Output", "ExpressionUUID" -> "b3f6f147-68aa-41ee-addb-43cc615e635a",
   CellTags->"Figure 8.20: Example 7"]},
 "Quick Check 5"->{
  Cell[699812, 13729, 1006, 29, 
  42, "QuickCheck", "ExpressionUUID" -> "62928e91-8040-45b0-a5b4-e2d4f11c04bd",
   CellTags->"Quick Check 5"],
  Cell[716924, 14119, 1174, 35, 
  29, "QuickCheck", "ExpressionUUID" -> "7e234550-5d96-497e-bbf7-0a3fc49c4cc9",
   CellTags->"Quick Check 5"]},
 "EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s Rule"->{\

  Cell[703248, 13836, 297, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "62040c3f-9ab1-463d-
   a9d7-40d1a6be3225",
   CellTags->
    "EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s \
Rule"]},
 "Table 8.8"->{
  Cell[706744, 13927, 9965, 181, 
  196, "Output", "ExpressionUUID" -> "b6ae4d27-6761-4d6e-9d14-d3d70b544a0e",
   CellTags->"Table 8.8"]},
 "Errors in Numerical Integration"->{
  Cell[718608, 14174, 178, 3, 
  25, "Subsection", "ExpressionUUID" -> "46166a70-9c13-431b-b99f-760f69ca0845",
   CellTags->"Errors in Numerical Integration"]},
 "THEOREM 8.1 Errors in Numerical Integration"->{
  Cell[719124, 14186, 5456, 167, 
  301, "Theorem", "ExpressionUUID" -> "d92573ac-534f-45d2-9c28-d7e39e94ed23",
   CellTags->"THEOREM 8.1 Errors in Numerical Integration"]},
 "Quick Check 6"->{
  Cell[727636, 14445, 1952, 59, 
  83, "QuickCheck", "ExpressionUUID" -> "21aad782-275f-4a50-8ab1-41368124f7fd",
   CellTags->"Quick Check 6"]},
 "SECTION 8.8 EXERCISES"->{
  Cell[730281, 14529, 146, 3, 
  25, "Subsection", "ExpressionUUID" -> "d5206ca9-9c5e-4f6d-9d92-45afe85ccbd6",
   CellTags->"SECTION 8.8 EXERCISES"]},
 "\[EmptySmallCircle] Getting Started"->{
  Cell[730452, 14536, 175, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "bcec0647-5fd4-4167-b280-
   c58c5db96c1d",
   CellTags->"\[EmptySmallCircle] Getting Started"]},
 "\[EmptySmallCircle] Practice Exercises"->{
  Cell[793497, 15720, 181, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "01a6f215-0325-4135-81ee-
   dd65d7b77ac5",
   CellTags->"\[EmptySmallCircle] Practice Exercises"]},
 "\[EmptySmallCircle] Explorations and Challenges"->{
  Cell[1409828, 27164, 199, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "
   b1940f01-8c39-4df5-9fb4-1d1cb0f78c3b",
   CellTags->"\[EmptySmallCircle] Explorations and Challenges"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"8.8 Numerical Integration", 1601096, 31578},
 {"Absolute and Relative Error", 1601277, 31582},
 {"DEFINITIONS Absolute and Relative Error", 1601475, 31586},
 {"EXAMPLE 1 Absolute and relative error", 1601690, 31591},
 {"Midpoint Rule", 1601883, 31596},
 {"Figure 8.12  \[LightBulb]: Midpoint Rule", 1602069, 31600},
 {"DEFINITION Midpoint Rule", 1602268, 31604},
 {"Quick Check 1", 1602448, 31609},
 {"EXAMPLE 2 Applying the Midpoint Rule", 1602633, 31613},
 {"Figure 8.13  \[LightBulb]: Example 2", 1602850, 31618},
 {"The Trapezoid Rule", 1603040, 31622},
 {"Figure 8.14  \[LightBulb]: Trapezoid Rule", 1603235, 31626},
 {"DEFINITION Trapezoid Rule", 1603438, 31630},
 {"Quick Check 2", 1603619, 31635},
 {"EXAMPLE 3 Applying the Trapezoid Rule", 1603806, 31639},
 {"Figure 8.15  \[LightBulb]: Example 3", 1604025, 31644},
 {"EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules", 1604250, 31648},
 {"Table 8.5", 1604457, 31653},
 {"Quick Check 3", 1604616, 31657},
 {"EXAMPLE 5 World oil production", 1604797, 31661},
 {"Figure 8.16: Example 5", 1604995, 31666},
 {"EXAMPLE 6 Net change in sea level", 1605186, 31670},
 {"Table 8.7", 1605374, 31675},
 {"Figure 8.17: Example 6", 1605540, 31679},
 {"Simpson\[CloseCurlyQuote]s Rule", 1605732, 31683},
 {"Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s Rule", 1605957, \
31687},
 {"Figure 8.19: Net area bounded by parabola", 1606193, 31691},
 {"DEFINITION Simpson\[CloseCurlyQuote]s Rule", 1606415, 31695},
 {"EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule", 1606652, 31700},
 {"Figure 8.20: Example 7", 1606871, 31705},
 {"Quick Check 5", 1607045, 31709},
 {"EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s \
Rule", 1607415, 31716},
 {"Table 8.8", 1607654, 31724},
 {"Errors in Numerical Integration", 1607831, 31728},
 {"THEOREM 8.1 Errors in Numerical Integration", 1608042, 31732},
 {"Quick Check 6", 1608236, 31736},
 {"SECTION 8.8 EXERCISES", 1608409, 31740},
 {"\[EmptySmallCircle] Getting Started", 1608602, 31744},
 {"\[EmptySmallCircle] Practice Exercises", 1608825, 31749},
 {"\[EmptySmallCircle] Explorations and Challenges", 1609060, 31754}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1533, 36, 186, 4, 42, "Section", "ExpressionUUID" -> \
"0f263b4e-1a5c-48e7-9445-866a30a93d68",
 CellTags->"8.8 Numerical Integration"],
Cell[1722, 42, 740, 17, 51, "Text", "ExpressionUUID" -> \
"6194d0d8-2d51-4f02-9612-26d58adcd391"],
Cell[2465, 61, 552, 9, 65, "Text", "ExpressionUUID" -> \
"5b2ccb95-44b4-47a1-8526-cc5d77a11463"],
Cell[CellGroupData[{
Cell[3042, 74, 170, 3, 28, "Subsection", "ExpressionUUID" -> \
"356fcef9-f62b-4cc2-a416-7ab2e59457ee",
 CellTags->"Absolute and Relative Error"],
Cell[3215, 79, 359, 10, 44, "Text", "ExpressionUUID" -> \
"41844f8d-c05b-4c82-8299-c801156c8f27"],
Cell[3577, 91, 2405, 71, 165, "Definition", "ExpressionUUID" -> \
"9dd982c7-d5da-4346-b299-6b01c5e59501",
 CellTags->"DEFINITIONS Absolute and Relative Error"],
Cell[CellGroupData[{
Cell[6007, 166, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"627beffd-4adb-45f2-b53b-37d91bf6003d"],
Cell[6111, 168, 199, 3, 37, "Callout", "ExpressionUUID" -> \
"aef77558-8ef2-426c-94a8-82c00438a6c2"]
}, Closed]],
Cell[CellGroupData[{
Cell[6347, 176, 223, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"0d48d670-2155-4c8c-99cb-f1a724bdce37",
 CellTags->"EXAMPLE 1 Absolute and relative error"],
Cell[6573, 184, 579, 15, 50, "Text", "ExpressionUUID" -> \
"c00804f6-55e7-4f55-b814-a2916773e4f1"],
Cell[CellGroupData[{
Cell[7177, 203, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"a25298a8-2f52-4350-821b-b5a99e74e5c6"],
Cell[7293, 205, 440, 13, 47, "Text", "ExpressionUUID" -> \
"67152e9b-0818-43bc-b9d9-a6fd9dae2f4f"],
Cell[7736, 220, 617, 17, 51, "Text", "ExpressionUUID" -> \
"5b0f8bfd-8bd2-451e-a0aa-3739618107d5"],
Cell[8356, 239, 75, 0, 29, "Text", "ExpressionUUID" -> \
"1a38b2f9-df39-48b5-a2c9-0003bd79e9d7"],
Cell[8434, 241, 840, 23, 53, "Text", "ExpressionUUID" -> \
"8f941610-e314-4aaa-a287-acf8ffc9870d"],
Cell[9277, 266, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"b2169a0e-6383-48c1-9d99-bc6cba0b4571"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9523, 278, 140, 2, 25, "Subsection", "ExpressionUUID" -> \
"e79ddbdc-85dd-42b0-8a23-01df1e6f681f",
 CellTags->"Midpoint Rule"],
Cell[9666, 282, 1773, 49, 104, "Text", "ExpressionUUID" -> \
"e9fa2eb0-2067-4ff5-8a64-f271bbd3d846"],
Cell[11442, 333, 1128, 31, 31, "Text", "ExpressionUUID" -> \
"c2abc622-b814-49e6-8de2-b27da1f72e0a"],
Cell[12573, 366, 698, 22, 29, "Text", "ExpressionUUID" -> \
"c59cf460-7158-444b-89b0-0e5294e5303f"],
Cell[13274, 390, 37839, 698, 500, "Output", "ExpressionUUID" -> \
"8ede8485-de1d-4af8-a467-83fc20e7521c",
 CellTags->"Figure 8.12  \[LightBulb]: Midpoint Rule"],
Cell[51116, 1090, 1703, 50, 65, "Text", "ExpressionUUID" -> \
"7c465a7b-3dcb-4113-b6fa-9d4c04f1b316"],
Cell[52822, 1142, 467, 11, 29, "Text", "ExpressionUUID" -> \
"559546af-d66c-41a2-861e-5da26122b774"],
Cell[53292, 1155, 1883, 50, 119, "Text", "ExpressionUUID" -> \
"38ecd2e7-0db7-4c7f-a9c0-2dc5e5a18e25"],
Cell[CellGroupData[{
Cell[55200, 1209, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"8ff92544-7a8e-464f-9790-ec9a61cf2095"],
Cell[55304, 1211, 531, 14, 37, "Callout", "ExpressionUUID" -> \
"bf3edf14-7dff-420d-a340-ca32751c7572"]
}, Closed]],
Cell[55850, 1228, 595, 16, 46, "Text", "ExpressionUUID" -> \
"c83739a1-069b-4f19-9457-9bb8077cb5ca"],
Cell[56448, 1246, 4088, 132, 198, "Definition", "ExpressionUUID" -> \
"2781fe4c-54ca-448e-969b-b86498489af2",
 CellTags->"DEFINITION Midpoint Rule"],
Cell[CellGroupData[{
Cell[60561, 1382, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"42532f34-ffae-4340-a863-a5cfeff67fbc"],
Cell[60665, 1384, 153, 2, 37, "Callout", "ExpressionUUID" -> \
"ed04d23b-74e2-4dfb-a79a-d22f6b5b3f0e"]
}, Closed]],
Cell[60833, 1389, 893, 25, 26, "QuickCheck", "ExpressionUUID" -> \
"83a34d50-24cf-4d40-87b3-14fcfb311bdf",
 CellTags->"Quick Check 1"],
Cell[CellGroupData[{
Cell[61751, 1418, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"49307789-8b85-436c-a353-6be5acd225da"],
Cell[61866, 1420, 241, 4, 37, "QuickCheckAnswer", "ExpressionUUID" -> \
"fa002b68-5888-4926-9474-fcc10e343aa0"]
}, Closed]],
Cell[CellGroupData[{
Cell[62144, 1429, 221, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"174d972f-69b0-4b47-9106-94199a194900",
 CellTags->"EXAMPLE 2 Applying the Midpoint Rule"],
Cell[62368, 1437, 696, 21, 49, "Text", "ExpressionUUID" -> \
"9d8a8137-e0df-418f-907a-73d53c8d71ab"],
Cell[CellGroupData[{
Cell[63089, 1462, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"bef2e145-6128-4268-b2da-011294c15c40"],
Cell[63205, 1464, 941, 30, 48, "Text", "ExpressionUUID" -> \
"960808c4-fc2a-4af5-bd18-f98cc19de357"],
Cell[64149, 1496, 892, 25, 33, "Text", "ExpressionUUID" -> \
"3b1cde02-d296-4953-961d-94f826ff953e"],
Cell[65044, 1523, 188, 4, 29, "Text", "ExpressionUUID" -> \
"05e4348e-2f9b-4134-983f-b252fc657d9c"],
Cell[65235, 1529, 818, 23, 33, "Text", "ExpressionUUID" -> \
"3a8fd099-aa11-4019-b065-b8c83c26722b"],
Cell[66056, 1554, 36141, 672, 452, "Output", "ExpressionUUID" -> \
"f1f85426-acc4-463b-ab3e-5900a745b06a",
 CellTags->"Figure 8.13  \[LightBulb]: Example 2"],
Cell[102200, 2228, 463, 14, 33, "Text", "ExpressionUUID" -> \
"2e6dbd44-0a88-4bd1-a273-53985038b043"],
Cell[102666, 2244, 1896, 51, 101, "Text", "ExpressionUUID" -> \
"bd4d4269-caed-4b5d-bf3f-cf59b37eb858"],
Cell[104565, 2297, 302, 7, 50, "Text", "ExpressionUUID" -> \
"0788d7c3-fb8c-4b7f-a9cf-b90a5d90d02b"],
Cell[104870, 2306, 593, 17, 51, "Text", "ExpressionUUID" -> \
"86305ee6-c493-48eb-8927-c794818cb161"],
Cell[105466, 2325, 95, 0, 29, "Text", "ExpressionUUID" -> \
"9c6b446d-3cd0-4bdb-b17c-3c1e916935a3"],
Cell[105564, 2327, 721, 20, 53, "Text", "ExpressionUUID" -> \
"b44703ab-3b87-4035-9b29-4535235aa7ef"],
Cell[106288, 2349, 274, 7, 29, "Text", "ExpressionUUID" -> \
"6b19016f-55ed-40e9-84fc-ecf59631cbe5"],
Cell[106565, 2358, 746, 21, 63, "Text", "ExpressionUUID" -> \
"46ce7812-4cd5-4504-b959-3f7ed0e4f940"],
Cell[107314, 2381, 376, 7, 47, "Text", "ExpressionUUID" -> \
"a476382b-e589-4d45-b971-0398ecabd811"],
Cell[107693, 2390, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"f997566c-2288-427d-b0e8-428ffdf3b1a8"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107939, 2402, 150, 2, 25, "Subsection", "ExpressionUUID" -> \
"f9f0883e-4bd6-4019-a8ec-f53ecf8262df",
 CellTags->"The Trapezoid Rule"],
Cell[108092, 2406, 2391, 69, 103, "Text", "ExpressionUUID" -> \
"3afa67a1-5d87-414d-867e-f4e5c5be1bdd"],
Cell[CellGroupData[{
Cell[110508, 2479, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"504b1983-2817-4975-ae4e-c20d11b38cee"],
Cell[110612, 2481, 1152, 22, 219, "Callout", "ExpressionUUID" -> \
"0b19e6ae-6777-4016-acc8-306c2e603bb7"]
}, Closed]],
Cell[111779, 2506, 38022, 698, 500, "Output", "ExpressionUUID" -> \
"c99acf02-3643-4a20-8645-d3259a5a9e41",
 CellTags->"Figure 8.14  \[LightBulb]: Trapezoid Rule"],
Cell[CellGroupData[{
Cell[149826, 3208, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"db066355-a405-4ce3-bf7d-4f8465a0e439"],
Cell[149930, 3210, 1002, 27, 53, "Callout", "ExpressionUUID" -> \
"9600f3d5-d431-4342-b541-d463f3ad297a"]
}, Closed]],
Cell[150947, 3240, 433, 11, 26, "Text", "ExpressionUUID" -> \
"10a84f23-c5f0-4079-b801-cec703119bcf"],
Cell[151383, 3253, 6948, 185, 279, "Text", "ExpressionUUID" -> \
"11e3b2e0-2969-4e30-ad5f-cf26e353351b"],
Cell[158334, 3440, 294, 7, 29, "Text", "ExpressionUUID" -> \
"82964c5c-3502-4780-93fc-a5ec864680e2"],
Cell[158631, 3449, 3044, 98, 182, "Definition", "ExpressionUUID" -> \
"9a5d531d-c514-4ad8-be57-d9af65e4be7c",
 CellTags->"DEFINITION Trapezoid Rule"],
Cell[161678, 3549, 859, 24, 42, "QuickCheck", "ExpressionUUID" -> \
"9da9e99c-7932-4b77-b2b6-e90a925ed8d2",
 CellTags->"Quick Check 2"],
Cell[CellGroupData[{
Cell[162562, 3577, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"10ac565e-e16e-44f9-9bab-ee6e5a3c86ff"],
Cell[162677, 3579, 96, 0, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"79bc92ef-b172-44e9-a851-a6f724050f8a"]
}, Closed]],
Cell[CellGroupData[{
Cell[162810, 3584, 223, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"1db5f308-68c5-428f-bb05-64962925e9c5",
 CellTags->"EXAMPLE 3 Applying the Trapezoid Rule"],
Cell[163036, 3592, 576, 17, 49, "Text", "ExpressionUUID" -> \
"c228fff4-d674-4977-975f-2994f4a814e8"],
Cell[CellGroupData[{
Cell[163637, 3613, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"d0430df2-7552-457a-98b6-e8523d518488"],
Cell[163753, 3615, 107, 0, 26, "Text", "ExpressionUUID" -> \
"d7cae65a-b36f-4076-8c22-680f9688e0d7"],
Cell[163863, 3617, 773, 22, 31, "Text", "ExpressionUUID" -> \
"d1feb23a-05dd-441e-9d1a-d11a14b11530"],
Cell[164639, 3641, 464, 14, 33, "Text", "ExpressionUUID" -> \
"4dfa465e-fada-4156-b879-6bf126026455"],
Cell[165106, 3657, 2607, 72, 149, "Text", "ExpressionUUID" -> \
"a1296742-fee2-4e77-b5f8-4bc43cf107de"],
Cell[167716, 3731, 762, 18, 68, "Text", "ExpressionUUID" -> \
"d78b2ea4-80cd-476f-a5a2-cdb82973a10f"],
Cell[168481, 3751, 36304, 671, 452, "Output", "ExpressionUUID" -> \
"498674a0-22a2-4604-800c-276a81c5b2d7",
 CellTags->"Figure 8.15  \[LightBulb]: Example 3"],
Cell[204788, 4424, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"49f92118-245d-462b-a84a-dc910154e1c4"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205022, 4435, 253, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"5283e13b-4b4d-44c3-9c3e-186e07d299c1",
 CellTags->"EXAMPLE 4 Errors in the Midpoint and Trapezoid Rules"],
Cell[205278, 4443, 82, 0, 29, "Text", "ExpressionUUID" -> \
"4eabb326-1395-4a22-97b2-6f69b072a2ea"],
Cell[205363, 4445, 843, 25, 51, "Text", "ExpressionUUID" -> \
"09ff4924-a11f-4de1-949a-1b40fbebcfc1"],
Cell[206209, 4472, 527, 14, 29, "Text", "ExpressionUUID" -> \
"b5498996-d62a-4ba7-9c4f-43a176db13fb"],
Cell[CellGroupData[{
Cell[206761, 4490, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"03f484c9-6b96-4048-8604-5125032c14e6"],
Cell[206877, 4492, 435, 11, 44, "Text", "ExpressionUUID" -> \
"ac21a2b5-9f72-47d8-9bbd-96527b86925b"],
Cell[207315, 4505, 791, 22, 51, "Text", "ExpressionUUID" -> \
"42c3274a-7561-4b60-b26c-373603d5d82b"],
Cell[208109, 4529, 130, 0, 29, "Text", "ExpressionUUID" -> \
"0b6e598c-e072-43d8-9014-c3f673d5b8af"],
Cell[208242, 4531, 2225, 61, 83, "Text", "ExpressionUUID" -> \
"1cb13434-cfea-4508-ac14-29e64710702a"],
Cell[210470, 4594, 74, 0, 29, "Text", "ExpressionUUID" -> \
"b931a373-b23c-42c1-9bb8-c03e107b9842"],
Cell[210547, 4596, 2472, 67, 89, "Text", "ExpressionUUID" -> \
"fefefb0b-4556-4706-8d04-5635f1acf1d8"],
Cell[213022, 4665, 1332, 40, 59, "Text", "ExpressionUUID" -> \
"85d68def-cf41-429f-a8e6-f4a2ab8458ae"],
Cell[214357, 4707, 1758, 42, 83, "Text", "ExpressionUUID" -> \
"edde8417-3422-4349-a75e-2ed3568ca511"],
Cell[216118, 4751, 10314, 187, 194, "Output", "ExpressionUUID" -> \
"3482a4c2-2b1a-412c-8643-77b1f2db695e",
 CellTags->"Table 8.5"],
Cell[226435, 4940, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"4c3416f0-f52d-4fe1-aafd-f07440a232ba"]
}, Closed]]
}, Open  ]],
Cell[226647, 4949, 1175, 35, 29, "QuickCheck", "ExpressionUUID" -> \
"9eb2d433-d0c5-440b-83ae-13d2676d091d",
 CellTags->"Quick Check 3"],
Cell[CellGroupData[{
Cell[227847, 4988, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"89f4db4d-6276-4579-81eb-8c1032671f46"],
Cell[227962, 4990, 90, 0, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"bd5c505a-bce3-44bc-9a2e-80511d66b5a8"]
}, Closed]],
Cell[228067, 4993, 155, 2, 26, "Text", "ExpressionUUID" -> \
"02384a3e-98d1-4c61-b72b-d56e2109e649"],
Cell[CellGroupData[{
Cell[228247, 4999, 209, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"2b4b99ca-fccc-49b5-ad8f-914d6a41d901",
 CellTags->"EXAMPLE 5 World oil production"],
Cell[228459, 5007, 1262, 32, 85, "Text", "ExpressionUUID" -> \
"966928da-b6d0-46d6-bcf7-46d735a7a6cc"],
Cell[229724, 5041, 7060, 144, 470, "Output", "ExpressionUUID" -> \
"b7639b15-26db-4179-990c-4a4e04462b4a",
 CellTags->"Figure 8.16: Example 5"],
Cell[CellGroupData[{
Cell[236809, 5189, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"c8ca9a62-e74a-4e3a-8e15-69158c72aeda"],
Cell[236925, 5191, 1782, 51, 82, "Text", "ExpressionUUID" -> \
"3cdd0b87-7b31-4560-ad4f-87137a3a86d9"],
Cell[238710, 5244, 1041, 29, 71, "Text", "ExpressionUUID" -> \
"b0437245-495b-4e2f-ba66-aa7bb0c8645f"],
Cell[239754, 5275, 74, 0, 29, "Text", "ExpressionUUID" -> \
"9c1f0c7d-26cf-477e-b2f6-d421b54fde23"],
Cell[239831, 5277, 1414, 40, 109, "Text", "ExpressionUUID" -> \
"7cd73237-8559-4c10-adce-c4c2db8d481a"],
Cell[241248, 5319, 555, 14, 29, "Text", "ExpressionUUID" -> \
"fc3b186d-41ce-4517-95cf-6c2c3be5e26e"],
Cell[241806, 5335, 651, 18, 31, "Text", "ExpressionUUID" -> \
"0c25ff7b-2c4c-4f93-8227-bfaa07e2c46d"],
Cell[242460, 5355, 914, 23, 47, "Text", "ExpressionUUID" -> \
"6ebb649e-97d6-4af0-bb21-e32822307cd6"],
Cell[243377, 5380, 602, 18, 49, "Text", "ExpressionUUID" -> \
"61e8c1cd-0d7b-411e-ba6b-2a4d04807784"],
Cell[243982, 5400, 104, 0, 29, "Text", "ExpressionUUID" -> \
"19b890f5-897f-4e3d-ab99-2006f86e264e"],
Cell[244089, 5402, 727, 21, 51, "Text", "ExpressionUUID" -> \
"ddf8d9a7-900e-4149-b801-4cbd129775be"],
Cell[244819, 5425, 206, 3, 29, "Text", "ExpressionUUID" -> \
"7fed6205-99ab-4374-9198-985f54fa5009"],
Cell[245028, 5430, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"2b033a26-6afe-40ac-a1d2-cbf2de88310a"]
}, Closed]]
}, Open  ]],
Cell[245240, 5439, 499, 9, 65, "Text", "ExpressionUUID" -> \
"76e2c26d-7f27-4700-84cd-f0f50a743453",
 CellGroupingRules->{"GroupTogetherGrouping", 51}],
Cell[CellGroupData[{
Cell[245764, 5452, 215, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"8e84ade5-157d-42cc-acae-c714568e58fc",
 CellTags->"EXAMPLE 6 Net change in sea level"],
Cell[245982, 5460, 949, 29, 29, "Text", "ExpressionUUID" -> \
"72004dcb-2da2-4407-a5c5-2aec82082182"],
Cell[246934, 5491, 2462, 57, 124, "Output", "ExpressionUUID" -> \
"25a038e7-9808-435d-94f0-28b4c40f30c1",
 CellTags->"Table 8.7"],
Cell[249399, 5550, 585, 16, 47, "Text", "ExpressionUUID" -> \
"12173ec6-9a04-4f28-9655-b0edda9d3093"],
Cell[249987, 5568, 241, 5, 29, "Text", "ExpressionUUID" -> \
"d3ac35bc-288b-43f3-b66f-a5e0d0cdcdf4"],
Cell[CellGroupData[{
Cell[250253, 5577, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"46ef6c2b-2e7a-49e3-a2b5-012fbd3f8893"],
Cell[250357, 5579, 364, 5, 53, "Callout", "ExpressionUUID" -> \
"de9ffd4f-29a2-4eaa-ba60-036f20836fd0"]
}, Closed]],
Cell[CellGroupData[{
Cell[250758, 5589, 113, 0, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"44ec8aeb-dd27-4395-bb45-241009cb99ee"],
Cell[250874, 5591, 1144, 35, 44, "Text", "ExpressionUUID" -> \
"50d4c311-599f-4d0a-8538-8a7fab8f163d"],
Cell[252021, 5628, 946, 26, 51, "Text", "ExpressionUUID" -> \
"7f2366c3-a5dc-4190-bd58-d328d681c347"],
Cell[252970, 5656, 469, 13, 49, "Text", "ExpressionUUID" -> \
"7b13cf88-1fac-433c-a7ef-5e66e7e77519"],
Cell[253442, 5671, 1114, 29, 85, "Text", "ExpressionUUID" -> \
"b66a737d-4690-4526-ab68-5a0e0593d4da"],
Cell[254559, 5702, 219208, 3605, 364, "Output", "ExpressionUUID" -> \
"f4d6a28e-47f5-4a22-b338-1b4f312f12b2",
 CellTags->"Figure 8.17: Example 6"],
Cell[473770, 9309, 328, 8, 29, "Text", "ExpressionUUID" -> \
"12029dcb-d0ca-47c7-908a-d8f9238e2c41"],
Cell[474101, 9319, 2159, 58, 69, "Text", "ExpressionUUID" -> \
"708e7cdd-d90e-42b0-a592-f1653f80c727"],
Cell[476263, 9379, 1663, 47, 85, "Text", "ExpressionUUID" -> \
"090a53f5-3adc-4a7c-8da4-446d496cf3f3"],
Cell[477929, 9428, 4057, 122, 129, "Text", "ExpressionUUID" -> \
"606501d6-fa61-4300-9dbd-7a359d54545a"],
Cell[481989, 9552, 283, 7, 29, "Text", "ExpressionUUID" -> \
"71cbb798-71fd-4a0b-951f-e59432417f10"],
Cell[482275, 9561, 180, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"1c256d89-eea4-4c0c-9c0f-7eed5ba5d7b8"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[482516, 9573, 178, 3, 25, "Subsection", "ExpressionUUID" -> \
"583fca97-2349-498c-bf4f-965e541ef8ea",
 CellTags->"Simpson\[CloseCurlyQuote]s Rule"],
Cell[482697, 9578, 2203, 63, 98, "Text", "ExpressionUUID" -> \
"9c25a050-0d45-4981-92b3-08b62116b2ad"],
Cell[484903, 9643, 39155, 708, 546, "Output", "ExpressionUUID" -> \
"d210afe9-cb1b-4173-968a-f15440827234",
 CellTags->"Figure 8.18  \[LightBulb]: Simpson\[CloseCurlyQuote]s Rule"],
Cell[524061, 10353, 1685, 53, 47, "Text", "ExpressionUUID" -> \
"b6c060c4-e9d0-468f-9a90-e27bba35d01d"],
Cell[525749, 10408, 73511, 1216, 349, "Output", "ExpressionUUID" -> \
"162e136e-21f6-4668-a292-01cc413ccd92",
 CellTags->"Figure 8.19: Net area bounded by parabola"],
Cell[599263, 11626, 459, 12, 33, "Text", "ExpressionUUID" -> \
"400181d5-7a14-4154-ab49-0aaefe8a501b"],
Cell[599725, 11640, 2124, 65, 83, "Text", "ExpressionUUID" -> \
"5ff5f57a-07e3-4116-8ed5-68d77011301f"],
Cell[601852, 11707, 478, 14, 29, "Text", "ExpressionUUID" -> \
"c1939fb7-6f66-4509-9a83-a46c3577612e"],
Cell[602333, 11723, 973, 30, 55, "Text", "ExpressionUUID" -> \
"5e2d77b9-5b0e-4028-874b-cc69fcbc4d2e"],
Cell[CellGroupData[{
Cell[603331, 11757, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"655a6f81-8fe2-4ac5-8ec0-1075b6173cf4"],
Cell[603476, 11760, 1596, 49, 76, "Callout", "ExpressionUUID" -> \
"2c0d75b0-e804-4f11-9454-72d0e41a8bc1"]
}, Closed]],
Cell[605087, 11812, 130, 0, 26, "Text", "ExpressionUUID" -> \
"b9c301ba-9a7c-471c-8f2c-cf0a8eced6b2"],
Cell[605220, 11814, 4862, 137, 213, "Text", "ExpressionUUID" -> \
"b27f07a3-41c1-47b6-967b-101f129fa674"],
Cell[CellGroupData[{
Cell[610107, 11955, 142, 1, 14, "CalloutIcon", "ExpressionUUID" -> \
"3150fb5c-a87d-4509-af63-b7117a1053fd"],
Cell[610252, 11958, 1218, 38, 73, "Callout", "ExpressionUUID" -> \
"26bc990f-d631-4f22-b661-e1f0983dfa7a"]
}, Closed]],
Cell[611485, 11999, 509, 12, 44, "Text", "ExpressionUUID" -> \
"0a2ac5c0-c4b3-4f58-92c0-1d24ec9ff2b8"],
Cell[611997, 12013, 1078, 32, 51, "Text", "ExpressionUUID" -> \
"43d99ec6-4f12-468b-bb0b-3c64b288b17b"],
Cell[613078, 12047, 366, 10, 29, "Text", "ExpressionUUID" -> \
"cc85e91f-67bf-423f-a596-6940296e1271"],
Cell[613447, 12059, 839, 25, 49, "Text", "ExpressionUUID" -> \
"ab9146c4-0c00-4d34-8806-837d9f2a433c"],
Cell[614289, 12086, 822, 22, 47, "Text", "ExpressionUUID" -> \
"8a7a28d2-5d74-445e-bed0-83fdf98e4a17"],
Cell[615114, 12110, 4290, 114, 165, "Text", "ExpressionUUID" -> \
"ae671f0e-5d85-48cb-9886-f28efc4f9eda",
 CellOpen->True],
Cell[619407, 12226, 401, 10, 29, "Text", "ExpressionUUID" -> \
"ede92a59-eedb-4c3b-8a4b-987288d43b7c"],
Cell[619811, 12238, 3457, 108, 168, "Definition", "ExpressionUUID" -> \
"07a9a5d2-fa9a-48a1-87ad-8553930550a7",
 CellTags->"DEFINITION Simpson\[CloseCurlyQuote]s Rule"],
Cell[CellGroupData[{
Cell[623293, 12350, 249, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"d7737cf9-98ee-48eb-8c82-405f9536747e",
 CellTags->"EXAMPLE 7 Applying Simpson\[CloseCurlyQuote]s Rule"],
Cell[623545, 12358, 700, 21, 51, "Text", "ExpressionUUID" -> \
"63017e70-f420-4bae-9274-ea26c353b425"],
Cell[CellGroupData[{
Cell[624270, 12383, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"4a256a92-9adc-4959-bfcf-d58f56159a81"],
Cell[624386, 12385, 513, 15, 47, "Text", "ExpressionUUID" -> \
"9bd95932-b095-439c-abd4-ebd7de832b9a"],
Cell[624902, 12402, 932, 28, 31, "Text", "ExpressionUUID" -> \
"c08dc076-6785-4fec-8668-389e5f509122"],
Cell[625837, 12432, 515, 15, 51, "Text", "ExpressionUUID" -> \
"bce7a3a2-3463-4de1-aedf-067dbc420c91"],
Cell[626355, 12449, 3161, 96, 215, "Text", "ExpressionUUID" -> \
"4b51202f-c97d-462a-9440-f41cd0527aaf"],
Cell[629519, 12547, 832, 22, 68, "Text", "ExpressionUUID" -> \
"2f6a1903-0014-4251-a238-0d106ad465b1"],
Cell[630354, 12571, 69248, 1147, 280, "Output", "ExpressionUUID" -> \
"b3f6f147-68aa-41ee-addb-43cc615e635a",
 CellTags->"Figure 8.20: Example 7"],
Cell[699605, 13720, 180, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"1aa4acf8-1b27-4e77-a0c8-44808ccf7abc"]
}, Closed]]
}, Open  ]],
Cell[699812, 13729, 1006, 29, 42, "QuickCheck", "ExpressionUUID" -> \
"62928e91-8040-45b0-a5b4-e2d4f11c04bd",
 CellTags->"Quick Check 5"],
Cell[CellGroupData[{
Cell[700843, 13762, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"580ed224-5a99-476a-bc36-86706ac4aff6"],
Cell[700958, 13764, 912, 27, 58, "QuickCheckAnswer", "ExpressionUUID" -> \
"59343f0c-16bc-4fb7-b970-adf81c943e1b"]
}, Closed]],
Cell[701885, 13794, 674, 16, 44, "Text", "ExpressionUUID" -> \
"801fe57d-07d5-4eb7-8e24-fcaf8e1c017f"],
Cell[702562, 13812, 661, 20, 51, "Text", "ExpressionUUID" -> \
"c45ed578-9693-49f0-b1ce-0b0454d2e415"],
Cell[CellGroupData[{
Cell[703248, 13836, 297, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"62040c3f-9ab1-463d-a9d7-40d1a6be3225",
 CellTags->
  "EXAMPLE 8 Errors in the Trapezoid Rule and Simpson\[CloseCurlyQuote]s \
Rule"],
Cell[703548, 13844, 889, 25, 67, "Text", "ExpressionUUID" -> \
"bc0a8565-0ab4-40ea-b5f5-e7d91ed40aa5"],
Cell[CellGroupData[{
Cell[704462, 13873, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"bca25288-a828-40ce-b3f1-20f388c6cc95"],
Cell[704578, 13875, 667, 12, 62, "Text", "ExpressionUUID" -> \
"871ec8de-d955-475f-b206-7ce0b2178862"],
Cell[705248, 13889, 663, 19, 51, "Text", "ExpressionUUID" -> \
"dc1f0c58-bc6e-4bab-af6b-ab76030ac748"],
Cell[705914, 13910, 827, 15, 65, "Text", "ExpressionUUID" -> \
"5564d098-fa94-454f-a17f-1afff8b9ea65"],
Cell[706744, 13927, 9965, 181, 196, "Output", "ExpressionUUID" -> \
"b6ae4d27-6761-4d6e-9d14-d3d70b544a0e",
 CellTags->"Table 8.8"],
Cell[716712, 14110, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"ee6333a5-bf65-4b0c-b7f0-b8c994f75329"]
}, Closed]]
}, Open  ]],
Cell[716924, 14119, 1174, 35, 29, "QuickCheck", "ExpressionUUID" -> \
"7e234550-5d96-497e-bbf7-0a3fc49c4cc9",
 CellTags->"Quick Check 5"],
Cell[CellGroupData[{
Cell[718123, 14158, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"aca96364-ff3b-417f-9fcc-a6bc3245f6d9"],
Cell[718238, 14160, 321, 8, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"deadd036-e124-4a40-bac7-73d538bc6279"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[718608, 14174, 178, 3, 25, "Subsection", "ExpressionUUID" -> \
"46166a70-9c13-431b-b99f-760f69ca0845",
 CellTags->"Errors in Numerical Integration"],
Cell[718789, 14179, 332, 5, 44, "Text", "ExpressionUUID" -> \
"1ab5e28a-670d-48b5-a45c-9f1d15f521f1"],
Cell[719124, 14186, 5456, 167, 301, "Theorem", "ExpressionUUID" -> \
"d92573ac-534f-45d2-9c28-d7e39e94ed23",
 CellTags->"THEOREM 8.1 Errors in Numerical Integration"],
Cell[CellGroupData[{
Cell[724605, 14357, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"38e1074f-7fcc-463c-aa8c-0f173052754d"],
Cell[724709, 14359, 1472, 49, 61, "Callout", "ExpressionUUID" -> \
"803c204d-03a5-408f-b681-0e8ff469ea2a"]
}, Closed]],
Cell[726196, 14411, 1437, 32, 88, "Text", "ExpressionUUID" -> \
"cc745157-e676-4e79-843c-026f0bfd6a94"],
Cell[727636, 14445, 1952, 59, 83, "QuickCheck", "ExpressionUUID" -> \
"21aad782-275f-4a50-8ab1-41368124f7fd",
 CellTags->"Quick Check 6"],
Cell[CellGroupData[{
Cell[729613, 14508, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"be47f2ab-0a8d-478f-83d3-412d4e680922"],
Cell[729728, 14510, 504, 13, 60, "QuickCheckAnswer", "ExpressionUUID" -> \
"561b92bf-8275-4f90-b128-948ea150fbe0"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[730281, 14529, 146, 3, 25, "Subsection", "ExpressionUUID" -> \
"d5206ca9-9c5e-4f6d-9d92-45afe85ccbd6",
 CellTags->"SECTION 8.8 EXERCISES"],
Cell[CellGroupData[{
Cell[730452, 14536, 175, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"bcec0647-5fd4-4167-b280-c58c5db96c1d",
 CellTags->"\[EmptySmallCircle] Getting Started"],
Cell[730630, 14541, 674, 20, 26, "Problem", "ExpressionUUID" -> \
"fa5b9c99-4770-4a8d-9f97-11b644637383"],
Cell[731307, 14563, 219, 5, 29, "Problem", "ExpressionUUID" -> \
"169d5111-858c-4b5c-ba6f-0aa8153ecac7"],
Cell[731529, 14570, 220, 5, 29, "Problem", "ExpressionUUID" -> \
"5d2a74a6-bb4f-4992-b367-67f5b6979227"],
Cell[731752, 14577, 678, 20, 29, "Problem", "ExpressionUUID" -> \
"0b6089b1-6a2c-4cf8-87cc-e427c533f7e5"],
Cell[732433, 14599, 544, 16, 49, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "7cd6b3a3-7b78-44f4-bc4c-b07baaead389"],
Cell[732980, 14617, 55075, 909, 226, "Output", "ExpressionUUID" -> \
"813a8c17-30d0-4c89-847b-607ab2398b90"],
Cell[788058, 15528, 267, 8, 29, "Problem", "ExpressionUUID" -> \
"06e05c45-34f5-4fd9-9cb4-d670a28098be"],
Cell[788328, 15538, 267, 8, 29, "Problem", "ExpressionUUID" -> \
"3cf5ef95-cba9-438b-b991-654c6b9eedb2"],
Cell[788598, 15548, 267, 8, 29, "Problem", "ExpressionUUID" -> \
"80fb1d63-b915-4034-a7c7-c7a527db8c7d"],
Cell[788868, 15558, 267, 8, 29, "Problem", "ExpressionUUID" -> \
"fa08f6a9-ffd2-4154-b5c5-35648c942bac"],
Cell[789138, 15568, 678, 20, 29, "Problem", "ExpressionUUID" -> \
"8d0950a2-a09d-44d7-91e5-f1b5b80f7341"],
Cell[789819, 15590, 1025, 31, 49, "Problem", "ExpressionUUID" -> \
"51fb2c7b-3114-4d44-b39c-03320b78f7b8"],
Cell[790847, 15623, 961, 31, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "bbff7f42-7de9-4e6e-877b-edce61141ba6"],
Cell[791811, 15656, 409, 13, 29, "Problem", "ExpressionUUID" -> \
"23aa02ee-74b8-4a6e-ad14-acbc3d6a0c39"],
Cell[792223, 15671, 420, 14, 39, "Problem", "ExpressionUUID" -> \
"257e880d-f8ae-4b37-8f94-df67afe13b90"],
Cell[792646, 15687, 405, 13, 29, "Problem", "ExpressionUUID" -> \
"d317bbe1-0c10-41d2-af29-2f02efb0b7b8"],
Cell[793054, 15702, 406, 13, 29, "Problem", "ExpressionUUID" -> \
"c475fc0e-f883-4db2-8537-bad86a69ff2c"]
}, Closed]],
Cell[CellGroupData[{
Cell[793497, 15720, 181, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"01a6f215-0325-4135-81ee-dd65d7b77ac5",
 CellTags->"\[EmptySmallCircle] Practice Exercises"],
Cell[793681, 15725, 773, 24, 31, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "af2e069d-212d-423f-a3cd-51e4c097ef97"],
Cell[794457, 15751, 600, 19, 49, "Problem", "ExpressionUUID" -> \
"cfaf671d-2af7-4be9-97b6-f176b991de0a"],
Cell[795060, 15772, 594, 19, 49, "Problem", "ExpressionUUID" -> \
"1819060a-8786-4ff7-949b-690f5248f59d"],
Cell[795657, 15793, 588, 19, 49, "Problem", "ExpressionUUID" -> \
"e6170d64-fa1d-4f47-aef5-76f2e41ef756"],
Cell[796248, 15814, 606, 20, 49, "Problem", "ExpressionUUID" -> \
"e4bcb994-001b-4435-aca9-9fe8cbd0d079"],
Cell[796857, 15836, 775, 24, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "42c1e475-41de-4cff-af14-8c7241ef88d1"],
Cell[797635, 15862, 600, 19, 49, "Problem", "ExpressionUUID" -> \
"8ed57d41-1787-4231-a091-0d8c03951759"],
Cell[798238, 15883, 594, 19, 49, "Problem", "ExpressionUUID" -> \
"45eda873-f80a-44f2-ab06-19a4bcb83511"],
Cell[798835, 15904, 588, 19, 49, "Problem", "ExpressionUUID" -> \
"b0db3427-f222-419d-a19d-6ce49dd91ec8"],
Cell[799426, 15925, 606, 20, 49, "Problem", "ExpressionUUID" -> \
"e6c5da4c-83d6-46c8-a39e-72b23f20e6d6"],
Cell[800035, 15947, 809, 24, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "fd8db544-2bd8-49db-aa63-60955f55492c"],
Cell[800847, 15973, 748, 25, 46, "Problem", "ExpressionUUID" -> \
"9000333e-f2f1-4b25-a24e-cb8596ecd453"],
Cell[801598, 16000, 714, 24, 49, "Problem", "ExpressionUUID" -> \
"5c29e09b-65b8-471e-8069-7e742636b368"],
Cell[802315, 16026, 659, 22, 49, "Problem", "ExpressionUUID" -> \
"31177172-0603-4a83-bf5c-ba3875b3a0a8"],
Cell[802977, 16050, 563, 18, 49, "Problem", "ExpressionUUID" -> \
"9ade0423-2052-4a07-af1b-55bd34f86c45"],
Cell[803543, 16070, 1271, 38, 67, "TProblem", "ExpressionUUID" -> \
"5090ec78-facc-4858-8f6f-fb995d4619b4"],
Cell[804817, 16110, 1289, 39, 67, "TProblem", "ExpressionUUID" -> \
"edd20700-2f72-41b0-b46c-b82428a68ccf"],
Cell[806109, 16151, 1333, 38, 54, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "a6bc43d9-a374-4452-8850-517847d2ef59"],
Cell[807445, 16191, 564, 19, 49, "Problem", "ExpressionUUID" -> \
"5883ecb7-9af5-4f69-8513-e7bbcbc73c8d"],
Cell[808012, 16212, 567, 19, 58, "Problem", "ExpressionUUID" -> \
"22a20106-a877-4fa5-b0b8-dfac578aa147"],
Cell[808582, 16233, 505, 16, 49, "Problem", "ExpressionUUID" -> \
"31fb2dff-1f63-49b2-a872-8330a9a95f4e"],
Cell[809090, 16251, 439, 14, 46, "Problem", "ExpressionUUID" -> \
"a976b5d1-6554-4ce7-882b-7f584f4975b4"],
Cell[809532, 16267, 479, 15, 46, "Problem", "ExpressionUUID" -> \
"2039ea23-fd98-4335-a829-f4dbdbfa753e"],
Cell[810014, 16284, 604, 21, 54, "Problem", "ExpressionUUID" -> \
"6dae22df-cc97-4ea2-8852-c60f431f7466"],
Cell[810621, 16307, 1955, 55, 123, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "986ba82b-1e06-4d6f-9ec8-7291e99ad2a0"],
Cell[812579, 16364, 77450, 1276, 291, "Output", "ExpressionUUID" -> \
"3e914b10-b8e9-4b7a-b430-9178c968ebbf"],
Cell[890032, 17642, 264, 8, 29, "Problem", "ExpressionUUID" -> \
"95aaff05-70af-461b-9d3b-8481842e950e"],
Cell[890299, 17652, 263, 8, 29, "Problem", "ExpressionUUID" -> \
"b2321da8-0773-480b-b45f-12eec6e13fba"],
Cell[890565, 17662, 1745, 50, 90, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "dde66556-f025-476a-a85e-e127fda85166"],
Cell[892313, 17714, 192080, 3155, 383, "Output", "ExpressionUUID" -> \
"177345dd-18a0-4e92-8bc9-98da74882749"],
Cell[1084396, 20871, 354, 8, 29, "Problem", "ExpressionUUID" -> \
"272c1228-df35-4b29-aca4-dcd66e453a7a"],
Cell[1084753, 20881, 360, 8, 29, "Problem", "ExpressionUUID" -> \
"dc4d80ab-adca-45d8-98b4-8d129c50b5a9"],
Cell[1085116, 20891, 356, 8, 29, "Problem", "ExpressionUUID" -> \
"033b7294-7883-4468-b7aa-6322b4e08d36"],
Cell[1085475, 20901, 353, 8, 29, "Problem", "ExpressionUUID" -> \
"70537611-ff9c-4cd0-9344-3a2bd89d7616"],
Cell[1085831, 20911, 278, 7, 29, "ExerciseDirectionsCell", "ExpressionUUID" \
-> "1e3f6e57-5372-4f4f-a318-9a367bf27a90"],
Cell[1086112, 20920, 1712, 46, 108, "Problem", "ExpressionUUID" -> \
"34fd3655-851d-470d-bbef-4b0293af166c"],
Cell[1087827, 20968, 993, 29, 77, "SubProblem", "ExpressionUUID" -> \
"f4091800-a648-4f02-95dd-660d40e27b3c"],
Cell[1088823, 20999, 641, 17, 57, "SubProblem", "ExpressionUUID" -> \
"4565ff7d-61b1-4d17-8bc6-8ade4d4dd9bf"],
Cell[1089467, 21018, 562, 17, 39, "SubProblem", "ExpressionUUID" -> \
"904edba2-2303-478b-bbc7-bd729b6d85ea"],
Cell[1090032, 21037, 1583, 47, 90, "Problem", "ExpressionUUID" -> \
"e1288696-1e8f-4e23-8ef1-479cd89ac940"],
Cell[1091618, 21086, 534, 15, 39, "SubProblem", "ExpressionUUID" -> \
"141fb72e-6993-4641-9343-f428da709024"],
Cell[1092155, 21103, 400, 7, 37, "SubProblem", "ExpressionUUID" -> \
"e319dc47-4689-48ca-ac13-b91dc2efacd7"],
Cell[1092558, 21112, 552, 19, 39, "SubProblem", "ExpressionUUID" -> \
"3c4cb8c3-be28-4ec1-91dc-493867db3203"],
Cell[1093113, 21133, 25009, 416, 260, "Output", "ExpressionUUID" -> \
"93d6b3cf-7dcf-46b2-8f4a-6c39051ff080"],
Cell[1118125, 21551, 1629, 45, 111, "Problem", "ExpressionUUID" -> \
"78f62568-016c-4352-89e9-b07bb47d576c"],
Cell[1119757, 21598, 413, 10, 19, "SubProblem", "ExpressionUUID" -> \
"6853ffa5-de54-492e-9ddb-d39de48e80b1"],
Cell[1120173, 21610, 219, 5, 19, "SubProblem", "ExpressionUUID" -> \
"7416eba7-255b-40f6-b62b-f125394d24c5"],
Cell[1120395, 21617, 874, 28, 64, "SubProblem", "ExpressionUUID" -> \
"8f6450c4-4a77-4cd9-99ef-7f6887ebcd07"],
Cell[1121272, 21647, 338, 8, 47, "Problem", "ExpressionUUID" -> \
"0971577d-50dc-42ca-bdc1-c9f31e5c9fbe"],
Cell[1121613, 21657, 200, 4, 19, "SubProblem", "ExpressionUUID" -> \
"934a528f-51de-4ef4-9038-5db011659380"],
Cell[1121816, 21663, 200, 4, 19, "SubProblem", "ExpressionUUID" -> \
"7639595e-5572-40cd-b736-561c7edf8b17"],
Cell[1122019, 21669, 221, 5, 19, "SubProblem", "ExpressionUUID" -> \
"0700fbd8-874c-4d86-800a-5efc08baeb37"],
Cell[1122243, 21676, 104663, 1722, 260, "Output", "ExpressionUUID" -> \
"a83ad01e-52e1-4880-b746-c3cd1195a61f"],
Cell[1226909, 23400, 889, 27, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "f2bd4a7d-c50f-499d-bcff-a46b8376f635"],
Cell[1227801, 23429, 494, 14, 19, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "c188f399-41f8-4be3-a233-41596f78187d"],
Cell[1228298, 23445, 524, 12, 37, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "d4d02dc6-2903-4b4e-987d-7eddc8e43aee"],
Cell[1228825, 23459, 408, 11, 19, "SubExerciseDirectionsCell", \
"ExpressionUUID" -> "fca5e6b1-75e4-4355-9f52-2040ceac77de"],
Cell[1229236, 23472, 584, 19, 49, "Problem", "ExpressionUUID" -> \
"c3574715-ee8c-4dda-b640-6a9b02a262e9"],
Cell[1229823, 23493, 562, 18, 49, "Problem", "ExpressionUUID" -> \
"b78f7e44-781a-4bd0-9480-dd5c9b281147"],
Cell[1230388, 23513, 548, 18, 51, "Problem", "ExpressionUUID" -> \
"c6af5a13-0835-4842-aa43-38c60f8e14c3"],
Cell[1230939, 23533, 638, 21, 53, "Problem", "ExpressionUUID" -> \
"5bca3c3a-4b3a-4d4d-b309-fba8beff2d93"],
Cell[1231580, 23556, 1407, 44, 70, "TExerciseDirectionsCell", \
"ExpressionUUID" -> "fd543ef3-0214-4e3d-8bbd-6c47b033db54"],
Cell[1232990, 23602, 598, 20, 49, "Problem", "ExpressionUUID" -> \
"417fbb7a-ed91-4108-a9f1-52c9c3474db4"],
Cell[1233591, 23624, 439, 14, 46, "Problem", "ExpressionUUID" -> \
"b5defb73-5c9e-4b7c-8d92-4359c3b7584d"],
Cell[1234033, 23640, 656, 22, 50, "Problem", "ExpressionUUID" -> \
"10ea62a2-a54d-4624-b225-b7454feff64a"],
Cell[1234692, 23664, 631, 21, 49, "Problem", "ExpressionUUID" -> \
"881e381a-8906-4dc9-8da7-f4862cbae045"],
Cell[1235326, 23687, 293, 8, 29, "Problem", "ExpressionUUID" -> \
"fd864a34-cab0-4205-9d88-e51c4d09f64a"],
Cell[1235622, 23697, 1642, 51, 82, "SubProblem", "ExpressionUUID" -> \
"f4bb82c1-d9de-44e4-97de-a2262cb4e5e6"],
Cell[1237267, 23750, 273, 5, 19, "SubProblem", "ExpressionUUID" -> \
"85894a72-901e-41df-a90d-be5fe63e8e51"],
Cell[1237543, 23757, 275, 5, 19, "SubProblem", "ExpressionUUID" -> \
"b3d816b7-6b1c-486c-8795-fe73ee5ddaf0"],
Cell[1237821, 23764, 1185, 40, 52, "TExerciseDirectionsCell", \
"ExpressionUUID" -> "45325bd3-7065-40d3-a5f6-5ac45b42caf3"],
Cell[1239009, 23806, 551, 19, 49, "Problem", "ExpressionUUID" -> \
"1f389469-e999-4f53-ba2b-e91794ccfdd5"],
Cell[1239563, 23827, 529, 18, 50, "Problem", "ExpressionUUID" -> \
"4b7ae7b3-e75e-4701-9230-4819e4d0086f"],
Cell[1240095, 23847, 625, 22, 50, "Problem", "ExpressionUUID" -> \
"48476549-ae77-4902-a0ea-3d3ada2ba8c4"],
Cell[1240723, 23871, 602, 20, 50, "Problem", "ExpressionUUID" -> \
"2e62e072-d3fe-4cf9-9871-38492eff7569"],
Cell[1241328, 23893, 1139, 34, 35, "TExerciseDirectionsCell", \
"ExpressionUUID" -> "c7ee7980-3238-48d0-a690-f420f6f2897f"],
Cell[1242470, 23929, 636, 21, 55, "Problem", "ExpressionUUID" -> \
"a4e9b673-5abf-4a70-bbcb-3f95822e0712"],
Cell[1243109, 23952, 599, 20, 51, "Problem", "ExpressionUUID" -> \
"2eb1ac76-a68a-490c-940a-6f08607d3083"],
Cell[1243711, 23974, 661, 22, 57, "Problem", "ExpressionUUID" -> \
"a055391b-8088-4be4-a258-1f5c817959b4"],
Cell[1244375, 23998, 507, 16, 51, "Problem", "ExpressionUUID" -> \
"56c3af7d-44fc-4f0a-80fc-87421f76a3a8"],
Cell[1244885, 24016, 3576, 114, 157, "TProblem", "ExpressionUUID" -> \
"302ec471-eddd-4b06-a238-9cfbb8b4c10e"],
Cell[1248464, 24132, 2933, 87, 139, "TProblem", "ExpressionUUID" -> \
"9e30ac7d-eec0-4cf0-9337-559b9b585b5e"],
Cell[1251400, 24221, 2913, 88, 117, "TProblem", "ExpressionUUID" -> \
"784407a4-46f5-4395-a506-142ced82d0f3"],
Cell[1254316, 24311, 1021, 28, 70, "TProblem", "ExpressionUUID" -> \
"d8956213-415f-4add-b8f4-c60d5d93093d"],
Cell[1255340, 24341, 404, 10, 37, "SubProblem", "ExpressionUUID" -> \
"60e84444-921c-4606-9996-4d314be3b696"],
Cell[1255747, 24353, 397, 9, 19, "SubProblem", "ExpressionUUID" -> \
"80d54069-10d2-4d77-bd9c-1acea1c38132"],
Cell[1256147, 24364, 139314, 2290, 361, "Output", "ExpressionUUID" -> \
"5977fa9c-bf54-49fb-a32e-87eba83b1e47"],
Cell[1395464, 26656, 732, 23, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "1d9e93f3-6d0a-49c9-8b78-4cbfced92b67"],
Cell[1396199, 26681, 357, 12, 33, "Problem", "ExpressionUUID" -> \
"3554c782-bcd6-4188-a851-e26847c6d3ed"],
Cell[1396559, 26695, 660, 20, 39, "SubProblem", "ExpressionUUID" -> \
"9098be9d-a7b4-4ed8-af7e-750ffcfffb4d"],
Cell[1397222, 26717, 322, 11, 19, "SubProblem", "ExpressionUUID" -> \
"48622fef-6d1a-43b2-814f-4d385ece7cc3"],
Cell[1397547, 26730, 606, 20, 19, "SubProblem", "ExpressionUUID" -> \
"e3c286c3-2986-4913-b693-da90c154ca9a"],
Cell[1398156, 26752, 230, 5, 19, "SubProblem", "ExpressionUUID" -> \
"816e1d35-20b7-48c3-af2d-699a4208755c"],
Cell[1398389, 26759, 371, 13, 39, "Problem", "ExpressionUUID" -> \
"0c732600-8fd8-403d-9f00-5709b9eaf0da"],
Cell[1398763, 26774, 675, 22, 39, "SubProblem", "ExpressionUUID" -> \
"558dc90f-ce71-4676-a71c-a454a8843701"],
Cell[1399441, 26798, 322, 11, 19, "SubProblem", "ExpressionUUID" -> \
"199eb554-2522-4221-aed1-f8c512b20046"],
Cell[1399766, 26811, 1007, 33, 43, "SubProblem", "ExpressionUUID" -> \
"025a1928-d116-4d6b-85f7-bb366740285d"],
Cell[1400776, 26846, 230, 5, 19, "SubProblem", "ExpressionUUID" -> \
"bd9f21c2-4b52-46e2-8b89-a7b4c56cc887"],
Cell[1401009, 26853, 356, 12, 36, "Problem", "ExpressionUUID" -> \
"dfdf2701-384a-4cf6-b8a4-54f14aa2b826"],
Cell[1401368, 26867, 655, 20, 39, "SubProblem", "ExpressionUUID" -> \
"a2c78e03-8837-47ac-8692-8b20e61ed905"],
Cell[1402026, 26889, 322, 11, 19, "SubProblem", "ExpressionUUID" -> \
"470a94eb-c736-43d0-b997-27cc6e7e7986"],
Cell[1402351, 26902, 736, 24, 19, "SubProblem", "ExpressionUUID" -> \
"d9f8d1db-2ef0-4b74-a2c6-55d4f6e799e0"],
Cell[1403090, 26928, 230, 5, 19, "SubProblem", "ExpressionUUID" -> \
"8679a082-782e-4462-84d9-450ed429717a"],
Cell[1403323, 26935, 394, 14, 30, "Problem", "ExpressionUUID" -> \
"cccddc88-8ea7-4a3d-9df5-826fe424a4c0"],
Cell[1403720, 26951, 639, 19, 39, "SubProblem", "ExpressionUUID" -> \
"eb5aa42e-4226-4730-9280-7122d11ae106"],
Cell[1404362, 26972, 322, 11, 19, "SubProblem", "ExpressionUUID" -> \
"b6998740-ab80-4c83-9f79-8f5f2b1841a4"],
Cell[1404687, 26985, 927, 32, 19, "SubProblem", "ExpressionUUID" -> \
"0fd829ed-07c7-41bb-bfb5-90ad642fb588"],
Cell[1405617, 27019, 229, 5, 19, "SubProblem", "ExpressionUUID" -> \
"26fc781c-2a75-4774-9129-d30946e8391b"],
Cell[1405849, 27026, 372, 12, 36, "Problem", "ExpressionUUID" -> \
"f7e46b9e-50c4-433b-87e8-03f4724a939a"],
Cell[1406224, 27040, 695, 21, 39, "SubProblem", "ExpressionUUID" -> \
"3a108554-4065-4f34-b5c5-4950ee548bbf"],
Cell[1406922, 27063, 338, 11, 23, "SubProblem", "ExpressionUUID" -> \
"65eb147a-72d1-444d-aaf8-9f03b7b9ef3d"],
Cell[1407263, 27076, 748, 22, 43, "SubProblem", "ExpressionUUID" -> \
"52a78449-8a20-4b8e-a5ad-384ac986b63b"],
Cell[1408014, 27100, 339, 11, 39, "Problem", "ExpressionUUID" -> \
"96f56bdd-3a50-485c-9181-d5c216ba0777"],
Cell[1408356, 27113, 661, 20, 39, "SubProblem", "ExpressionUUID" -> \
"f51184d0-6049-4762-914d-27c94f6963d7"],
Cell[1409020, 27135, 771, 24, 25, "SubProblem", "ExpressionUUID" -> \
"098e35cf-5e1c-485c-975c-00521a38cf56"]
}, Closed]],
Cell[CellGroupData[{
Cell[1409828, 27164, 199, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"b1940f01-8c39-4df5-9fb4-1d1cb0f78c3b",
 CellTags->"\[EmptySmallCircle] Explorations and Challenges"],
Cell[1410030, 27169, 309, 8, 26, "Problem", "ExpressionUUID" -> \
"0b54bd49-d5d7-4a43-8260-7617f9c8d2f9"],
Cell[1410342, 27179, 2401, 76, 95, "TProblem", "ExpressionUUID" -> \
"1fe83e77-b085-4f9e-9bfc-dc006ea42aa9"],
Cell[1412746, 27257, 2508, 80, 113, "TProblem", "ExpressionUUID" -> \
"6e31b717-ddcf-476d-9503-8c4f16239289"],
Cell[1415257, 27339, 205, 6, 29, "Problem", "ExpressionUUID" -> \
"7399e871-be2a-4319-b6bd-ee03b9787557"],
Cell[1415465, 27347, 700, 19, 39, "SubProblem", "ExpressionUUID" -> \
"8f440b6a-ccd9-42dc-93e6-36b4595db4fc"],
Cell[1416168, 27368, 701, 19, 39, "SubProblem", "ExpressionUUID" -> \
"13d50330-5c47-4538-8a5a-bc7e7e69ad88"],
Cell[1416872, 27389, 318, 6, 37, "SubProblem", "ExpressionUUID" -> \
"ac2719f6-643c-4ce1-9a28-dc8cabab558b"],
Cell[1417193, 27397, 768, 21, 57, "SubProblem", "ExpressionUUID" -> \
"0caf7cc6-7dad-4196-a8b1-66532cfd9733"],
Cell[1417964, 27420, 1240, 40, 67, "Problem", "ExpressionUUID" -> \
"061163fc-03a4-4d5a-bc43-3b14777cd0cf"],
Cell[1419207, 27462, 1313, 39, 67, "Problem", "ExpressionUUID" -> \
"651a341c-2824-469d-81b1-165233407f7f"],
Cell[1420523, 27503, 768, 25, 50, "Problem", "ExpressionUUID" -> \
"cf40604d-3730-468f-b896-d2160dd29c80"],
Cell[1421294, 27530, 1761, 58, 69, "TProblem", "ExpressionUUID" -> \
"46993f1a-9978-4264-9856-9980ce1f986d"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature JJNnjvNZR7M4LIkl@J0LhRaR *)
