(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.1' *)

(*************************************************************************)
(*                                                                       *)
(*                                                                       *)
(*  This file was created under the Wolfram Enterprise licensing terms.  *)
(*                                                                       *)
(*       For additional information concerning CDF licensing see:        *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*                                                                       *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   1054906,      21154]
NotebookOptionsPosition[    851562,      16644]
NotebookOutlinePosition[   1029975,      20645]
CellTagsIndexPosition[   1028455,      20611]
WindowTitle->Section 4.8 Newton's Method
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["4.8 Newton\[CloseCurlyQuote]s Method", \
"SectionTitleFont"]], "Section",
 CellTags->
  "4.8 Newton\[CloseCurlyQuote]s \
Method",ExpressionUUID->"0625b19e-bebf-45e7-bc26-331119c3e052"],

Cell[TextData[{
 "A common problem that arises in mathematics is finding the ",
 StyleBox["roots",
  FontSlant->"Italic"],
 ", or ",
 StyleBox["zeros",
  FontSlant->"Italic"],
 ", of a function. The roots of a function are the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ee57e78a-2a28-4de2-94f4-99a0f6153472"],
 " that satisfy the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"fd8ca0ac-4d79-4795-b445-7e1ab8cf2a25"],
 ". Equivalently, they correspond to the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "0f151921-6220-4a3c-ad45-09f18c155838"],
 "-intercepts of the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "26783eb0-b346-42ba-af55-473238b3577b"],
 ". You have already seen an important example of a root-finding problem. To \
find the critical points of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "5ab8a8c2-e14d-4eb3-958d-723372382665"],
 ", we must solve the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "55b7ceaf-d8a0-46e7-bbb9-31139ac20498"],
 "; that is, the roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "3c9fa778-03a6-41a7-98a2-44e0ec4dea27"],
 " are critical points of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7111b873-7ab5-4ff4-a5a5-f001c6ed4bd0"],
 ". Newton's method, which we discuss in this section, is one of the most \
effective methods for ",
 StyleBox["approximating",
  FontSlant->"Italic"],
 " the roots of a function."
}], "Text",ExpressionUUID->"df317749-1781-42d1-bc12-2adfdeae9295"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"38d62123-6391-4d5b-b75f-22605965bb1a"],

Cell["\<\
Newton\[CloseCurlyQuote]s method is attributed to Sir Isaac Newton, who \
devised the method in 1669. However, similar methods were known prior to \
Newton\[CloseCurlyQuote]s time. A special case of Newton\[CloseCurlyQuote]s \
method for approximating square roots is called the Babylonian method and was \
probably invented by Greek mathematicians.\
\>", "Callout",ExpressionUUID->"25a91bda-869c-4d30-9aec-fd1547f42258"]
}, Closed]],

Cell[CellGroupData[{

Cell["Why Approximate?  \[RightGuillemet]", "Subsection",
 CellTags->
  "Why Approximate?",ExpressionUUID->"32b25502-aa80-4876-b38e-5b7da8d52573"],

Cell[TextData[{
 "A little background about roots of functions explains why a method is \
needed to approximate roots. If you are given a linear function, such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"2", "x"}], "-", "9"}]}], TraditionalForm]],ExpressionUUID->
  "154d4895-3b3a-482f-9bbf-ab1994129bf1"],
 ", you know how to use algebraic methods to solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"d5154a77-5289-4d99-a480-3bf66e3b2080"],
 " and find the single root ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    FractionBox["9", "2"]}], TraditionalForm]],ExpressionUUID->
  "90299c15-1d91-419c-a0f3-f7c1e45ecf02"],
 ". Similarly, given the quadratic function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"6", "x"}], "-", "72"}]}], TraditionalForm]],ExpressionUUID->
  "ee26cfa7-0806-43af-9c67-ef3a206165d6"],
 ", you know how to factor or use the quadratic formula to discover that the \
roots are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "12"}], TraditionalForm]],ExpressionUUID->
  "72c98e6f-ac95-4dfe-a63c-bc5981ca4bb2"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "6"}]}], TraditionalForm]],ExpressionUUID->
  "ff5f9e97-bf14-4aa4-9a21-1b50b3387c75"],
 ". It turns out that formulas also exist for finding the roots of cubic \
(third-degree) and quartic (fourth-degree) polynomials. Methods such as \
factoring and algebra are called ",
 StyleBox["analytic methods",
  FontSlant->"Italic"],
 "; when they work, they give the roots of a function ",
 StyleBox["exactly",
  FontSlant->"Italic"],
 " in terms of arithmetic operations and radicals."
}], "Text",ExpressionUUID->"a5989e40-1d4c-4711-82cf-08b274c1caeb"],

Cell[TextData[{
 "\tHere is an important fact: Apart from the functions we have listed\
\[LongDash]polynomials of degree four or less\[LongDash]analytical methods do \
not give the roots of most functions. To be sure, there are special cases in \
which analytical methods work. For example, you should verify that the single \
root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"2", "x"}]], "+", 
     RowBox[{"2", 
      SuperscriptBox["e", "x"]}], "-", "3"}]}], TraditionalForm]],
  ExpressionUUID->"68d09fff-a93b-4b54-8635-e6a20c1211e4"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "a9f53dd3-9a22-4ca6-a749-f38e0cddb659"],
 ", and two of the roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "10"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"8a1b9e41-21c6-4f44-8e63-2240cd052b1b"],
 " are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "0ebad55a-da96-4fb9-9689-1563c47d1ca6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "db338c22-11f2-4f39-8c50-3b996acbaf4b"],
 ". But in general, the roots of even relatively simple functions such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], "-", "x"}]}], TraditionalForm]],ExpressionUUID->
  "cebe036e-0e8a-433d-a551-aca53d933470"],
 " cannot be found exactly using analytical methods."
}], "Text",ExpressionUUID->"48adb592-1b10-48ec-af46-9d7877a7e7b3"],

Cell[TextData[{
 "\tWhen analytical methods do not work, which is the majority of cases, we \
need another approach. That approach is to approximate roots using ",
 StyleBox["numerical methods",
  FontSlant->"Italic"],
 ", such as Newton's method."
}], "Text",ExpressionUUID->"0e0ef98c-b513-47f2-b3e4-ce2628ea87a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Deriving Newton\[CloseCurlyQuote]s Method  \[RightGuillemet]", \
"Subsection",
 CellTags->
  "Deriving Newton's \
Method",ExpressionUUID->"ce3b77f6-2efe-44ba-806b-0b237d1ee923"],

Cell[TextData[{
 "Newton\[CloseCurlyQuote]s method is most easily derived geometrically. \
Assume ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "fbce30f3-5338-434f-9db2-c2f471b33e7d"],
 " is a root of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "98d70c0b-3549-472f-a27b-9fed91f5a693"],
 " that we wish to approximate; this means that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "r", ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"61f8bdf6-e21d-46b4-94fd-c84ef0779080"],
 ". We also assume ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d0826a11-f0a9-4a87-a3bc-c3bb9c6be602"],
 " is differentiable on some interval containing ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "b7baad14-d65a-4306-a74a-0321a8da6b46"],
 ". Suppose ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "38381e71-b976-4031-b15d-5fd5d907feec"],
 " is an initial approximation to ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "e337e418-4139-4399-995d-33217f99c0ae"],
 " that is generally obtained by some preliminary analysis. A better \
approximation to ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "ab466e65-34cd-49a6-82f7-1cb93d46d073"],
 " is often obtained by carrying out the following two steps:"
}], "Text",ExpressionUUID->"a26ce027-c373-457f-b6f5-6ef77f31cf3e"],

Cell[TextData[{
 "Draw a line tangent to the curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "b9f336ef-ece6-40e1-9163-ed5108e7704f"],
 " at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "0"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"6422ae19-5987-442c-8b41-1d4fa035cbc6"],
 "."
}], "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"82796149-98d3-43d9-8d9c-07ec9fe0c5e5"],

Cell[TextData[{
 "Find the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", "0"}], ")"}], TraditionalForm]],
  ExpressionUUID->"ab5a7b69-5cac-4686-b69d-a31bed085352"],
 " at which the tangent line intersects the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "d5b7a9d8-4f63-4880-95c5-d6c2e0165c77"],
 "-axis, and let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "82062bc1-811f-4291-8763-7091a63c3956"],
 " be the new approximation to ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "c1aad6c9-24b0-4dd4-a0fa-437452f94c66"],
 "."
}], "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"79fbae9e-280f-47ff-8a44-7ad0c5b4d056"],

Cell[TextData[{
 "For the curve shown in ",
 StyleBox["Figure 4.81", "FigureFontText"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "1bc43a71-8c17-44e3-866f-f6bc17d1bafa"],
 " is a better approximation to the root ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "1d315c95-a03a-4764-8959-1c3a42b48851"],
 " than ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "6dae28ad-49fa-4112-944e-03082e54d4d6"],
 "."
}], "Text",ExpressionUUID->"bc0a2683-fcbf-43e9-82e5-7f209c75c20a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`initialRoot$$ = {
             2.64, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
            0.664449, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
            Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
            Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
            Typeset`specs$$ = {{
               Hold["select approximation"], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`nValue$$], 0, ""}, {
               0 -> Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                  16}], 1 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}}, {
               Hold[
                Pane[
                "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`initialRoot$$], {2.64, 0}}, {0, 0}, {5, 
               0}}, {{
                Hold[$CellContext`rootValue$$], 0.664449}, 0}}, 
            Typeset`size$$ = {504., {252., 257.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`nValue$58324$$ = 
            False, $CellContext`initialRoot$58325$$ = {0, 0}}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`initialRoot$$ = {
                2.64, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
               0.664449}, "ControllerVariables" :> {
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$58324$$, 
                False], 
               
               Hold[$CellContext`initialRoot$$, \
$CellContext`initialRoot$58325$$, {0, 0}]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`rootList$, $CellContext`xZero$}, \
$CellContext`xZero$ = 
                Part[$CellContext`initialRoot$$, 1]; $CellContext`rootList$ = 
                NestList[# - $CellContext`funcC4F81[#]/Derivative[
                  1][$CellContext`funcC4F81][#]& , $CellContext`xZero$, 5]; 
               Show[{
                  Plot[
                   $CellContext`funcC4F81[$CellContext`x], {$CellContext`x, 0,
                     3}, PlotStyle -> {Thick, $CellContext`bcB}, Epilog -> {
                    Text[
                    "\!\(TraditionalForm\`y = f(x)\)", {1.8, 145}, {0, 0}]}], 
                  
                  Graphics[{
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", 0], $CellContext`bcFO, 
                    Background -> White], {$CellContext`xZero$, -5}, {0, 1}], 
                    
                    If[$CellContext`nValue$$ >= 1, {$CellContext`bcR, 
                    AbsoluteThickness[0.5], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} - 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F81[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} + 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F81[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}]}], Dashed, 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 0}, {
                    
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F81[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}}], 
                    Dashing[{}], 
                    AbsoluteThickness[2], 
                    Arrowheads[{0, 0.025}], 
                    Arrow[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F81[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}}]}, Black], 
                    If[$CellContext`nValue$$ >= 1, 
                    Table[{
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`i], \
$CellContext`bcFO, Background -> White], {
                    Part[$CellContext`rootList$, $CellContext`i + 1], -5}, {0,
                     1}], 
                    AbsoluteThickness[1], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`i + 1], -2}, {
                    Part[$CellContext`rootList$, $CellContext`i + 1], 2}}], 
                    $CellContext`ClosedCircle[{
                    Part[$CellContext`rootList$, $CellContext`i], 
                    $CellContext`funcC4F81[
                    
                    Part[$CellContext`rootList$, $CellContext`i]]}]}, \
{$CellContext`i, 1, $CellContext`nValue$$}], Black], 
                    AbsoluteThickness[2], Orange, 
                    
                    Line[{{$CellContext`rootValue$$, -2}, \
{$CellContext`rootValue$$, 2}}], Black, 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`r\)", {
                    RoundingRadius -> 5, FrameStyle -> Orange}, Background -> 
                    White], {$CellContext`rootValue$$, -5}, {0, 1}], 
                    If[$CellContext`nValue$$ >= 1, 
                    Text[
                    Row[{"(", 
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`nValue$$ - 1], 
                    ", ", "\!\(TraditionalForm\`\(\(f\)\((\)\)\)", 
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`nValue$$ - 1], 
                    "))"}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F81[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    1.5, -1}], Black]}]}, 
                 PlotRange -> {{-0.5, 3.5}, {-15, 150}}, ImageSize -> 7 72, 
                 BaseStyle -> $CellContext`bcBSG, Ticks -> None, AspectRatio -> 
                 1, AxesStyle -> Arrowheads[0.02], 
                 AxesLabel -> {
                  "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
                   "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}]], 
             "Specifications" :> {
              "select approximation", {{$CellContext`nValue$$, 0, ""}, {
                0 -> Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                   16}], 1 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}, ControlType -> SetterBar,
                 Appearance -> "Vertical"}, Delimiter, 
               Pane[
               "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`initialRoot$$, {
                 2.64, 0}}, {0, 0}, {5, 0}, ControlType -> 
                Locator}, {{$CellContext`rootValue$$, 0.664449}, 0, 
                ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {702., {279., 287.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC4F81[
                  Pattern[$CellContext`x, 
                   Blank[]]] := 2 2^(2^$CellContext`x) - 6, 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`i = 
                1, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 4.81\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.81  \[LightBulb]: Newton's \
method",ExpressionUUID->"1a316152-0762-42cb-9b75-dfb421e7eaba"],

Cell[TextData[{
 "\tTo improve the approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "b120cded-9ad3-4dc6-9711-0fae9450da64"],
 ", we repeat the two-step process using ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "b3a48e40-0ec0-4491-9d0b-94df6a2b2a23"],
 " to determine the next estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "6844370a-8930-40fe-b2e3-49ee71816c6a"],
 ". Then ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "0c3a5049-e656-4c52-a46e-3a2df00dfcb5"],
 " is used to obtain ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "a3d4f6cc-e8f4-451e-a234-0ea99592cd1e"],
 ", and so forth. Continuing in this fashion, we obtain a ",
 StyleBox["sequence",
  FontSlant->"Italic"],
 " of approximations ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"], ",", "\[Ellipsis]"}], "}"}], TraditionalForm]],
  ExpressionUUID->"1ad94e1d-2b5a-40db-a6a7-3090770cdf38"],
 " that ideally get closer and closer, or ",
 StyleBox["converge",
  FontSlant->"Italic"],
 ", to the root ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "a657c55a-f05a-4181-8a58-9d2aed53b0dd"],
 ". Several steps of Newton's method and the convergence of the \
approximations to the root are shown in ",
 StyleBox["Figure 4.82", "FigureFontText"],
 "."
}], "Text",ExpressionUUID->"e23d7d70-83f3-417c-afe4-b3a7bba5ff3a"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"dfe3f2b5-0c76-4b25-866e-047dbce440e1"],

Cell[TextData[{
 "Sequences are the subject of Chapter 10. An infinite, ordered list of \
numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"], ",", "\[Ellipsis]"}], "}"}], TraditionalForm]],
  ExpressionUUID->"7b7160b1-c6ad-4a87-a189-478727fad9c4"],
 " is a sequence, and if its values approach a number ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "4a76bf83-7dde-4055-b270-71093b37a3d6"],
 " we say that the sequence ",
 StyleBox["converges",
  FontSlant->"Italic"],
 " to ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "2ab4e593-d611-4608-b1e7-a427efef73c8"],
 ". If a sequence fails to approach a single number, the sequence ",
 StyleBox["diverges",
  FontSlant->"Italic"],
 "."
}], "Callout",ExpressionUUID->"79176ea6-28a0-4707-a54a-b0a6778c510a"]
}, Closed]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
HszbyyZnemxl0qldSoRQFKRNAIAr+N/71TcqysuVxLj2gPqjU3+Yn0ibsR8a
BY97qidNU+6p3eXLz6ymbmCH6m6aPP170ysr5cCZ/pp+dozHVv6uK3nKVUqE
qigRQqGRNgEALtD358XqX2dXzlzyxfA59Ye6tLnuiOkT/R0bozfMaUhjtT0b
csLcv/In6ru82JXyyPKcicdWtqQ8tnLCveLc5t79BR0eShNpEwDgdKHBdnVy
8vqyyl9qSrDln2+9/0b55zMe22R6emPwuEf9S7Dyu78u8NbKwb13X6kuqXv6
U54jmZsMjq0cPitGTamKEiEUAmkTAOB0n79wm7qGfs13HhVC41hwTL1MnuY/
8MTEqfEpx0Kvcctv98xVU+T3+uZNr6Q4SjJHSs7U16R/deGS+a3GEqGrawo0
KpQ40iYAwNn8B5ZePVWtQ5fq2tJ+2uCuu78VfVbyLZ35Ndr2dHTVvq6tEOF2
KBjSTWymPrbSWCJU82zehwSESZsAAIfTFp6nqr/WG/jTg3LUlK9rJj5dtPZE
4ZB3zRVT5DetKC//Zeqm61mRP0gGx1bK2VKY25TzJ1AApE0AgJMNbrt1ovoX
WcWUueluiYxNh8qXtLmzwCPU8b1eo75v5eR72s7n+cWVYyuFuc0Ux1ZOWixs
2qRECAVC2gQAONipnbdMvUb9i+ybN72SZlF5z2t3qZGvYtrMVCXbheB797ap
Zer0Zt5X8Nf0juj6urckP7bSpERotvJDoABImwDgUGPBsaCv/4vhc/5QshaR
/r6+/v7jXye/wfF0/dvTDG+BQ09MjE5sZl6w41e/88CoeVWR/Kj/dGe8BZMZ
ZTJWjprylffpzerDZyTPiehiujrJmezYyg8/E6PmtPsKXieFUkXaBACnCI2M
yEnmYFubZ/2Gx++smDz9e+of4P+17WuTmy+dVg/HUebQ5v4++62JnZvkV7j1
Bz+smDYzX5cc827YeDDLL2GwfeMj6+tfql+3bp38629+VBlPm/Irqz9XH2ob
CJjGJzmgyp8ouoyeXkCVv3bhO7/in18UY+qFY2/WPCx/UfLLTq+sXLDjWLJX
63p5QXzMt+z4Mo8Zb+KRIWElXf6J+esrJUL6TZsLV+drGICAtAkATtFbf208
pcRjj9qW3OQEnM5N8RtyKrvWv06+Lqnh0yy/hOZaNdGpLY+0l5zx5EudNkz+
kaNTi2raXNae/Axx1YVja66Yonby1H7n8qV9rpyBn7lqivZ8dmnOG8kOWw8e
fGmcf3fZUg4S0rc/qj58xvzWB54TN21SIoSCIW0CgFOELp3u6+sfC45dOLrn
Z1OU/BMPLXVewwk1vndvmXpN/J6sU03wuGf+vHn3Ln18xaKf5+tX+QXr/nY2
uzk9+bNv/8ued95pk6/t9SviH7Bi2syVGxrbP/5YfUi+zLua+96tnjQtumlz
ytzxN21eOOZZv2HPga5Tw6PyV6H92hNpNpJI1ddMxMialqRp87gn/q8mvxtH
lYOE9O2P1vQm6dY+7T5OEULRkDYBwHGUnOZ7V5d8zPpM9jbXphN+nEu3aXNO
QzrbU7Xzillsm9QehRkrSor27ZywqlVOpJ1vvaqG6p3dXyV9lZD3D9Lk+Ovk
sRWScpCQNm02e82L9JUSoSphbjPoS7LDE8gZaRMAHEqbfIxn6KguHN2z9Oqp
uaxc25j/vV99I9OtAkJczPhMH82+goopc+Ww2vfnxdMrK+Uwr826403b+tVT
LHPcVGAk7TqpXUaXf2++X9dYInTZwnyNATAibQKAU+nXypNtQfxouZTiUQeL
dErPcIZQH/MW/THj+V7NYZfytXJDY/WkaZXf/fV7/sxeRTeMOQ35mnYWm202
9Zi/ckOrmDYpEUIhkTYBwLEGm39xVerJvdCl05u/X5FB23MHiYTt+KbN9HY/
+rXf2JU3ZhHzdK+QOueneJFcQ6+ZrkBQKBGSPCfMbxVLhDhFCIVF2gQA59Ju
XLxy5hKTNo+RSCbNeSOPhc82od2Bmfbpk8KkYtKy8RS0a/HKi9TuyrydaeL8
o6mZNKVPrW0gIGzaTHqQkFIiVEWJEIqGtAkAzhU87lH/DFf78xgLkAf+9OD0
ysrcltH9nX/7e/vHH3d0fJLHSw7GOfaZ1Ka+tCNfHtKmNuWadwNIg7blZr56
vG/yBcRD0k13F3QcNZ4iRIkQCoq0CQAOZqhu1oWuyKE5OXZ09Hds1LZayteV
86GN+tzY2J3Ns7JKm6HB9upJ0+KFQtltUej78+K8p83a7nPiSrrpQUIzllIi
hCIjbQKAox2quymeWyasatWmTd/rNeVlZdWHz+Qyixg8+JKxj3oe0maOhdgX
jj1zVaJE6MWuNCcY85A2hXXw7L7eQqTNmzuHdcvo8nXIbE5bWUPXLaNfvP3J
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
qzo6PlGflU3gvO66NN8FcDrSJoASEz3mxtilJz9C3nj/ouRn9ySO4b7mO49q
j6oJHveo2/8W7DiW5mr1WHDsk40rfjbln2bcvWxn91fxn8sfM1rXU9eWdcdI
M7b+AlXy1xjdhzD39+lEx0zvj5MTY9ZpU37i6tWr038vwLlImwBKj1+tsJbz
UkaVIGnqba5VJxXlsNQ2EDB5fe0x32ve1z3ke7f2wXXa0Di+yIk84tJzbD06
p4MXk7LxFxiZHJY/u/wKE1a1ptOnNNP74955py1FTVCa6+l5//YAGyJtAihN
6pE3U7PtqZiCOj+pZonqw2dM7tDkw9zXo4MHX0qkzTlvRPKSUh9U2PVuu36B
8c5Rv3377+lMDmd6v9b/mD1bTcW5XJ71GwiccD3SJoCSdeHont/8qLIAFdb+
vXdfqf7ROmFVqzFL9Lx2l/roN296JZedmVGndsajl/x2p4ZHP3/hNjkFydeS
t83ap+eP/b5AJWZLd61qG0hzn2qm9+vIkTj3tDl/3rws3hpwFtImgFImJ5lC
NPMJHveof7SaVOhozvfJ5QxurbNvPS7sHlS7rOf+yuOy2xeoNv9M/40yvT+u
r68/x5w5lVohlAzSJgAUwmjb02qzIGlOg6bwZDC+xm1+bmO2/Kc7D7a1bXtj
q2zPga7C9cMsmiJ/gZna/pc9+UmbbN1ECSBtAkCB9HheVo8srJx8j5wD5Xzy
mx9Vxvc6kjHGZecvsLW1NS9pc3plpYWfAigO0iYAFE5osP3NmofVOhQ1OM24
e1nbQCAwWoDeQW5k2y9QPaoyL3Ob1n4QoAhImwBQUJFc5P/qwqWgr98FC9zF
Z88vsK+vPz9pk32bKAGkTQAAsnDrD36Ye9pcsejn7KmA65E2AQDIlBwRa2pq
ck+be/7joNUfBSg40iYAAFno6urKMWr+dOZPw2G/1Z8DKDjSJgAA2Zk/b14u
aXPr1q1WfwKgGEibAABkp6+vP+vdm5wihNJB2gQAIGvtH3+cRXF6ZA0dKBWk
TQAAciEHTrUXaPpR0/J+oUAxkTYBAMhRX1+/nCHTiZrLli2zerBAsZE2AQDI
izX/7Z7f/KjSdJ5T/mFNTY0cSq0eI2AB0iYAALnzh0IHb1gelqqC0uyj0n/Z
/P0K+ZLzZ/1L9R0dn1g9OsBKpE0AAHLXNhAYkebKUTOsXFVhab7ym6a9Vo8L
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
5rojyZ5rz69LToz7V/5EHdiLXaN5v7/QhoIh48TmhFWtiRVwOTFmjRIhwK5I
m0ApCB73qP+fXvndX5fCAno4sgiuzkxeX1b5y30+7c+33n+j/PMZj236aPii
6XPt/XUN7r37SnWJ3NNvPv7c7i+giUeGpMZuofHRwRuWB+ML3xk22IwzLxFq
2pvf8WdGfve6BuXK9kMBrkHaBNzPf+CJiVPjE1w2WVEttM9fuE1dQ7/mO48K
iVH+BtTL/Jn2/7r8B565aoo8vG/e9EpXII0wnOn9hRGd2Gzxas9Gn7CqNbGG
/vyW7F/9w89M0qb36/wNP3M1z0aH8dZfrRwGYAOkTcDtBnfd/S21Ijv1NkVX
8R9YevXU6Keua8vkmc74ukbbno4u9Ne1pZOHM72/EG7uHDZ2dD94w/L4HsvA
aA5r/XUNtjtFiLQJxJA2AXcb+NODcnaSr2smPm2/ReFC0RaeVx8+k36+cszX
FfKuuWKKPM6K8nLtPoG83Z9vphObcvRNTGx++FlOb2AsEbq6Jk9jzxZpE4gh
bQJuFpviky9pc6fVoymawW23TlT/ZKuYMjeDzYqO+rp8r9eoQ62cfE/b+fzf
n1/JJjajabN2ba4zrkqJkL7Z5sLVeRp7tkibQAxpE3CxntfuUgNGxbSZm3wB
q4dTLKd23jL1GvVPtm/e9Er6FeUO+7p87942tUydrkxr0T/T+/NnvInN+eHh
s7m8fqRESOjrXpV9J6V8IW0CMaRNwLUCh56YGJ2py7w8xB/09X8xfC4wal4m
Iz/qP90ZbytkK7r+7enHKud9XcoUrhwd5Su96cpM78+blBObVXmoHO84KvR1
V67uU/kYew5Im0AMaRNwKzl0ybkiui6cXuiSE5Fn/YbH76yYPP176p8MV/zz
i2LuunDszZqHb/3BD+WXnV5ZuWDHsYKMPhOhwfaNj6yvf6l+3bp18q+/+VFl
PG1WTJup/lx9qG0gkGzF1olfV9fLC+Kf9JYdX467GJ3p/XlhPrG55v1oPpz3
VB7eQykRMsxtWo60CcSQNgGXik5kqfFpWfvAOLdfOLbmiilqd8p4dlIv7XPl
XPfMVVO0Z45Lc96w/LD13uZaNc6pLY+0lxzw5Eud0Es51enIryt48CXNKzeM
e+BRpvfnhdJj03AqujqxqZSN52MG8uLtT4pzmxPuzf1lc0XaBGJIm4A7+d6t
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
9BXkITclJL+Qh6B102YKx6ZLp23GwmzLaGGi43loLFdmk9bzVUNuKm0BnR3k
s0NJpVl3waGji2ObVhRZAgAYBrYJgJ+R7Gb86dFe2Q+v7HlC5kXc/YqyDuCF
8vwXPmoMSrrLkRwFa1t0ru1KwqQzv/y8fo9yaLp02qZktIv3nTP/fNUE3u6T
Vz1q6gzOW2XtCjJNEZInpLsoRQgAIAG2CYCPYaE2tqGRU0Zy9Fzjw3cJnrP5
9GCGN+vIuQfWsg2WRVMXbD7yiZq7VmlQXc0vslsuNFKQR+JRRpbjnZoufbYp
BFFVBiq1nq8S2qdSFtgk/64N0v2KlkJThErdmyIEAJAA2wTA5yTWT4tmzCAS
VRuWL/uSIzY8HLt5OUtQkZwzNjLCDvWxR7UGJVne1VTPU4q093fOJf4cODFd
emxTkl2e2XsNnK+aSbvOBA5cTBPOps4Tsx+zPMyoSBG68cNfWXuPAAC9wDYB
8D3R883J4KGkJo/VqDWo7v33FU43FpMU91tqLszOw/7p0m6bgwcWfTm5d7Tu
pAqv03q+WpLl3JlqplbSaTn3dz601DYTKUKKuu5IEQLArcA2AcgHrux5omjG
DHKYu2EvC2oMKjZ47Le3TiVqF5jfcF73PY2ee3pSctNmpspFWrF5urTaZt+r
K8jYCjPlzhs+PxNjIyOhBOELXSzSG2j6mHqmdBm96ePxpzdZHthEihAAngK2
CUCeEHpxMVMOo2vN6shpUKNnD1VOLqSqufRP+lUzkZXDQpEGstE52Dldmmwz
0r6V7SxVuf1S6/lKiF6uW7funrn3MANPZmMVF0+cu7JkURUVTmEZfWdX9aP1
FhbYFGhoUdqmJc0xAQBmANsEIG9INr5R1u2xguwGFT3fTAtXJoKHKlerx6Pj
72+t+cHUfyWGs7/zkvB98qCSeT21QVNDavZNl3rbJPOW3Hiw4Pdq1FHr+TL6
+vqXV4od5KWHUCWe3viDa5NBzoaT8R0Htd6LHsrXubqLEAAgHdgmAPlEhOVc
E4MyN1VESQ6D6n2z+tF6qTTmJtGRpzBVfT3pqL1vLrltWqEFfRgT2DRdKm1z
9Owh8mBnTJ9esLZFTWFSrefLOPbee7PuvFNqlVmOwHfvJaq59YmXtd6LTmiK
UPq+zXnVNt01AEA7sE0A8g3WBMf0oosy9Pf+zkD0xAuibc5/JaFPND/I6vVu
G6ZLzVwJpaJ+ffAjNdFgrefLOHw4qNIzhYX1gtlzBg6/p/WOdKLctGl1wSUA
gAFgmwDkIaNnD/3yW8WW5lybbpvx7v2CbRasbekeGvn4ufuITZFj5cHc1eaN
YPV0qekpT7w68ODa4IDKjalaz08jFArNuvNO9aopHKsfKLo0elPHPWqDpggp
EtLf+dDy+9VK63HaKn3HQTs2sgLgbmCbAOQn49FxS8v7SA3KrDXuq6+vZls0
hYNVWTfn1rNi6XSpmSuWA67+NrWeL/3Fe+beI5tnlceUmV+z462E+JsnUoQq
nkkO7/W/OT0UABwGtgkAMJ9YWNoD3cQsm8jljhPB4J5XGgmH2kK2lQ+1EMvm
Sh/kTUGIIes7whesbFgZ906KEGwTgBSwTQCAacTCxAP31tUIbWuEY1nNdvIj
e+KQ3sCtc3XP3HtYRSndh+XvJtMektumO1OEYJsApIBtAgDMY7Cr+cW6F+oa
GxubX95ClEk46uvryfe1JaH7HDfOVXv7+/rW0KXHrDvvtHaUiT6VHkgRgm0C
kAK2CQAwC+leQfYPy3vKeBZ3zhURXYOBTXaEQiGrhtjZzUlIbz1u1d0ZAbYJ
QArYJgAAAAZ5IzCumuTY+5dDVg1xx0GFbZa6MUUoDtsEQAS2CQAAgFFVVWWK
be55pdGqIQoK5/IUoThsEwAR2CYAAACGWbbZ2GiZbd62wjNdhGCbAKSAbQIA
AGD87ne/M8U2Dx8OWjVERV338ac3WXVfBoFtApACtgkAAIDR2NhoPCedHH19
1nTPoSlCii5C7kwRisM2ARCBbQIAAGAQSzSumvfMvceq8e1sVSaku7cvJGwT
gBSwTQAAAAIVFRUGbbO+vt6qwT3yrGdShOKwTQBEYJsAAAAETgSDRjpXzrrz
ztjNy1bVDqVdhNJX0ksqLbkjU4BtApACtgkAAECKkcx0C7PR45wUoXj1Rgvv
ziCwTQBSwDYBAABIGRsZ+dG/3adDNa19Hwl/prDNUvemCMVhmwCIwDYBAADI
qPlFQ+C792pSzZqlP47EYhaOiaYIyWOb7k0RisM2ARCBbQIAAJAycPi9QFNn
oOFkyaIqlW3T616os3xY1Ruj6aoZC/zI8js1AmwTgBSwTQAAAAKx4eHAhiPU
Nnd2BZo+LnlqW8HsOVk8c2FZWSgUsiotSIq3UoTisE0ARGCbAAAABPa80vj9
4GeB+jOBAxepc+4Ok6/EOVdtaVr9QNG93/gmUc9ffqu4oqKivr4+fKHLtoHR
SKaHUoTisE0ARGCbAAAAGP843U49kxjmrjCNbZJ/7Kb/eHfoxtjISP/5VJ7O
tIdsHhjdn6mo6+52i4NtApACtgkAAIBx9/P/lVRN4djZtXjfueRCOc0Kv98R
24zvPeqlLkIM2CYAKWCbAAAA4ok19GRIU2qbDSfFTHMHbbN6o0w13Z4iFIdt
AiAC2wQAABDt7adr6GyjpsQ293deEk9y0DbvWCmPbZLvuBzYJgApYJsAAABW
bWmSJwft7Jq064w02ZyuXJevi5etsT89x3spQoS6puR0tZ91eigAOAxsEwAA
8pxD/30iqZpv9IjCub3j0uhNp4dG4acI7T3q9LgAAGqBbQIAQD5zbehaYGNb
Mv2cHKnY5v7OS2MjI06PjjJw+L2o0jbDnzk9LgCAWmCbAACQz9A8dElpzeQ/
Gk7aUbBdJV5MEQIASIBtAgBA3nKoLZToGdQpxjbJ4Zo19CQllfLApv1pSgAA
A8A2AQAgPxkbGUnWct+dKnyU+Lr5yCcuCmxmSBFy1QgBANmBbQIAQH4yZ9+F
QNPHadU1ybHhiNPjSiORIlQqt82drU6PCwCgAdgmAADkIXQNXVg6F1Rze0df
n8sa9LQe56QIdXY7PSwAgAZgmwAAkG9cicaIWCo7B+39yyGX5KGL0BQhWWyz
1OkxAQC0AdsEAIB8gy6gK9oGBTYcceNmSGWK0G0rnB4TAEAbsE0AAMgrNp8e
DDR/SqOau9P6ofefd2MFy0SKUHpss+IZpwcFANAGbBMAAPKH0FiUBjZZErpg
m7vDe15pdGFgk58itOOg0+MCAGgDtgkAAPkDjWoKqpnatFny1DY1qkm3dLaf
TR720Hqc07Oyo8umezdIZzebK+rMAOQ3sE0AAMgTlpz+nNqmbMdmw0liRKoC
m+HP7N45WdugSEj3TopQxTPJARNnBiC/gW0CAEA+0H49KvYMElLRmzr//uSm
SCym6ibst8151XLbLFhu010bJ2GbdPyv/83poQDgMLBNAADwPcQn09bQU4HN
ml80xIaH1d6K7bbJSREqX2fPXZtAMrYJ2wQAtgkAAP4ncGpAXu+ItQ3S1JTH
Xtv0fIoQbBOAFLBNAADwN9t6xzjVNbd3/P3JTdry0G2ObdIUIYVteiVFKA7b
BEAEtgkAAD7m0uhNcQ19l1jyqG7pc5r7P9psm7UNioT0UheWacoIbBOAFLBN
AADwMYGjvco19IK1LfG6Js23ZbNtzquW2+aEcjvu1yxgmwCkgG0CAIBf+V7H
kHyvZmIN/X/mPKbn5my2zcBCuW16KEUoDtsEQAS2CQAAvqS5/wZnu2ZTZ3De
Kp3l2W20TX6KUEOL1fdrJrBNAFLANgEAwH/Q7ZoHLsq3ayZKHsWrN+q8UTtj
m9wUIdt6GJkCbBOAFLBNAADwH8ntmunVNWnJownlGgpsyrDTNmmKkMw2PZUi
FIdtAiAC2wQAAJ+R1qFSiG1u7+j74uL43qP6b9dO2/R6ilActgmACGwTAAD8
RHBgLBnPTN+xSbdrGsyysdM2lSlCZWssv1NzgW0CkAK2CQAAviG5XVORh76s
ZjvxN5p6YwTbbHPoqqLSptdShOKwTQBEYJsAAOAbuNU1AxuO0IbjOgpsyrDN
Nt/5kGOb3koRisM2ARCBbQIAgD+YdOYKt7pmaMqKeEmlCXdgm22u36G0Tf3J
TU4B2wQgBWwTAAB8AL8Z+q7waxWPxwMLr/09ZMJ92GabNEUoPSHdcylCcdgm
ACKwTQAA8Drt16OcZujJ7Zql409vMudubLNNH6QIxWGbAIjANgEAwNNEYrHA
Gz3c7Zo0Qliw3LQ1aHtsk6YIKeq6G990aj+wTQBSwDYBAMDTBI71K6OagYaT
fV9cHCWq03rctHuyxzb9kSIUh20CIALbBAAA71LdeY2TGdTUeWL2Y9RziPCY
iD22SVOE5LFN76UIxWGbAIjANgEAwKM099/gZgbVLX0uFvgROYwW2JRhi23e
+OGvFLHNhdbdnYXANgFIAdsEAAAvEhrjZwaVPLWNeqYV5dDtiW3SFCFpbLOU
+qcXgW0CkAK2CQAAniNjZlDDyeHAAmo486pNv1MaKS1YHp/2kBU3zqAr5spN
m+t3WHR3lkJLAZC5IjNm4tZZALwJbBMAADwHzQza2SW3TVbIPREPjHd0OT1G
XbSf5djmOx86PSwAgCFgmwAA4C2+1zHEzQwKzluVXEOvbXB6jHqpa+LY5tBV
p4cFADAEbBMAADzEhp5hjmruClc/Wk88M5rYVDkeHXd6mHopW+OTFCEAgATY
JgAAeIV3h27QzCCFapY8tU3MrPH0LkF5ipAlG1ABADYD2wQAAE/QG41R1SSH
rOrRxrZkZhA5HnnW6WHqJ5EiJKu0WerRFCEAgBTYJgAAuB+ahH60N6mX0qpH
iZ5BwqKzyQU2bYabIuTpUC0AIAFsEwAA3E8yCZ3XMygqiNmOg04P0xicFKFS
pAgB4ANgmwAA4HICpwY4pTV3hV+reDyZhB6436sl0KXQFKFSpAgB4D9gmwAA
4GZoJ3RFwyByLKvZLrgZcc54Z7fTIzXMhPKoLLaJFCEAfAFsEwAAXMu23jFu
VLNgbYsQ1fRutx0p/C5C3i0cCgCQANsEAAB3kqx3pLTNDUeGAwtE1bxj5djI
iNODNQxShADwL7BNAABwIaGxaODARc4aeloSeuIgnmYbQ1fJQeOQptPQorRN
T6fY01lKTJeHi+0DYBKwTQAAcBtXorHAGz2cqGayE7oklaZ6o33DCn+WvNPJ
FebfuP9ShCqeST6i1//m9FAAcBjYJgAAuIrx6DgtramMaiY6oUdlPmZngSDB
Nm9bYf6NTyiXxza9niJEbfN+2CYAcdgmAAC4DFpak9cJ/bWKxxONHSW1KHe2
2joyy2yT10XI+ylCsE0AUsA2AQDAPdDSmjzVrH60npY5kspY2Rq7B2ddbJOm
CCls0+spQrBNAFLANgEAwCV8r2OIW++o5KltMtWk5Y/sz6CxzjZ9lyJEgW0C
kAK2CQAAbiBTFfdAw8m00prsqGtyYIjW2Wb5OplqUrv2OrBNAFLANgEAwHE2
9Axzo5qB5k+HAwvkcb+SSmeK6lhnmzRFqFT2GE2+C/uBbQKQArYJAADO0tx/
g6+ab/T8z5zH5FFNmwtsSrHGNmlpesWmzfGnN5l4F84A2wQgBWwTAAAcJDgw
RhsGKVXzwMXLL+/hqKadBTZlWBTb7OjiPEyvpwjFYZsAiMA2AQDAKZKqqQxs
Nn/a8cFHnO2aE8ot6eOjEotsk6YIKRLSO7vNvAtHgG0CkAK2CQAAjtB+PZpU
TVlmUPOnzf03aG1zZcRv71EnR2yRbQpW5qcUoThsEwAR2CYAANgPbYNOVJMc
TZ1psc3d4W29Y/EdBzmqWb7O4UFbZJsFy5VpUGbevlPANgFIAdsEAACboap5
4GIyqpke26wNj9A6k2k9g5JNKp2vP2mBbdLk+sD98pV0B/emmghsE4AUsE0A
ALATqppv9CQ9U9YwqPMaPeORZzmBzYYWpwduTWyT20XIH3oG2wQgBWwTAABs
49LoTaqavHpHS05/Ts9oPc5RzXnVzhTYlGGFbe5s5SSk+yBFKA7bBEAEtgkA
APbQG40lVVPRMIioJvFJmm+urHNO/tvR5fTYE1hhm35NEYrDNgEQgW0CAIAN
ZIlqTjpzJRm6rG3gLCuTb7oEK2xzcoX88d6x0rQbdxbYJgApYJsAAGA1omoq
26CfGkie1NHFUc2C5U4W2JRhtm0mUoQUD9kfKUJx2CYAIrBNAACwlKRqKrsF
SVSTeldJpdtb6pge26SCrXjIO1vNuXHHgW0CkAK2CQAA1pHMQOeq5jFJRSNu
Px2iK67CdNskYunXFKE4bBMAEdgmAABYhFjsKHNUk8AKbCoCmy4osCnDdNvk
1HoqdUX2vSnANgFIAdsEAAArEEu4Z1VNStkaTmDTDQU2ZZhum9Mekj9q8h3f
ANsEIAVsEwAATCdjY0qlamYosOnQwLNiqm36PEUoDtsEQAS2CQAA5vLu0I00
1ZSupMtUc+hqosCmouCkSwpsyjA3tsnNwfdNilActgmACGwTAABMJDgwRj1T
6IGeJaoZpwU2OXno7imwqSA2PDw2MkIOE26LmyLkTs3WBSvXb85cAeBxYJsA
AGAWzf2JqGbWYkci7Wc5qjntIf+kyWSneqPi4fsoRQgAIAG2CQAAprChZ5if
EyTtFpSC/veOlZylZFcV2LQUmiKU/vAnVzg9JgCAJcA2AQDAOLXhERrVVK6e
J3qgR2Ix+S/QApuKwKafcmRyojTtR551ekwAAEuAbQIAgEGIT/JzgnaFqzuv
cX6hs5umArm/wKZ1cFOEdhx0elgAAEuAbQJ9jJ49tPnIJ06Pwhlig8eaX95C
/mTqXqhbtaVpf+clTZvN3DZ1WsfjtvE7TuDUAL/S0e7whp4MLc5pgU3/dmxU
w96j/k4RAgBIgW0C7UTe31pDnjMT72q4ElWsD/qcwb11NTOmT2d/NeSYNb2Y
fA0s/dN5Vb/uwqmL7Ll3EnkU5CG0X49acL6fIZ8yAsf6qViyBXRpVHN3eFvv
GP/XqGgpwnpla/IrQaZ6o9I282sGAMgnYJtAE7HBY38s/RfqV/Mb8k02Yjcv
7/rJrezv5e7n/ysSi119fbWgnYGmj3P8umunLhbe9/AtZGDFU5ZtPj1o/vk+
hXxeCBzt5aefN3/a3H+D/2tDV+OBhTLbpKvqvmkOrhKaIZVumxPKnR4TAMAq
YJtAPdHzzUtum0Z9qfpAr1tCc7YReetnXyiaMYM+/I1t7FvdLy0UbTP1TS6u
n7rIqdq7p8z82sziYiKQKkJMWs/3G8kG6NwM9OZPgwMZoppxFtNTBDbX77Bx
7O6AToJ0HkppLXQAgE+BbQKVRNq3JrVqfoO6VWNf0ffqCvbwJ85d+clQMu8j
zTbrz2T6XU9MHTHG46u+w8b5fCh3PWqt5/uJ9uuZu1K+0cMJXLefFf+h3Kx4
x8q8KwDe2e2NvvAAAJOAbQI1RM83s+dJ8Vd/7q5VYFuIDR5jkclZ04t/erRX
+v3Gh+8i3y95atu7Q/yVU09N3WDroolsiTzjQrCh8/1Asn77bt5ezTd6Lo3e
TDub6OW8aqpS7Wdjw8OcCpOJHzn0UJyDkyJUmo/zAEDeANsEuYm0PT2pUIhi
5eGy6cfP3cfW0G//ypMyYySzwQ7+b3pu6iJtv711Khntl+7+Q2hMhRtrPd/j
0KKayngmO472phXVDH+WaJOdckvinHVN+V5gU4C3nSDvArwA5BOwTZCLwQOL
vsyysLNvTfQtkbbKyYXJGagNavlNT07dSPA3yXX/2qAaPdZ6vnehlY52h5UV
NVlXSvGxD12N1zbwymkqjgnl3iqwSUc7oZweRJ6NUFKZFylCRKrZdOVPfygA
MgDbBNkZ+POjxJfIcfuk37h+IdgSpInnS05/rl6ovDp1sfCGW6aSYRfNmCHd
NmDa+R4kEosF3u4TV88VXSnZafS5QTsELcztmR4tsEn3WyZGftsKQ7cjTxG6
P16+zqQhugka3E48utf/5vRQAHAY2CbIRiqsR47A9g6nR+MIg3vuncT+Roqm
LtCwO9HLU9f7xwo28uIpy4LXzT/fW4jp57yimmKroNbjiW2Z6jwzUWDT0Yel
i/BnJthm/qQIwTYBSAHbBFno2vwgs4iiaXMzlqr2N9375xTezv5GvnT3H9Rn
lHt76nrfvK9wOgtXqtoDoPV87xAcGAscuJipqGbyyiZTgRQGlfmIBX7krTX0
JKbYJlEv5Zz4MkUItglACtgmyMjYqacnJaNzunJAIuT99JOha2Mj/OwY8tPI
5Q6hmpA7Savfrt6jDE2dG+aNRnSJOpJDXbhS6/neYEPPME0/V+7SJMeBi+8O
3aDG+MizxDOj6kOa7KhrcvrB6cIU2+SlCNGEff8B2wQgBWwTZIKIFpGH5Fqw
atEiItT88pbVDxRNmfk19tS65bvPy3Vr9NxrFY/f+41vklueWVy8eN8580ev
l9jgsa1PvFz3Ql19fT35+stvFQu2WTRtLvs++1FwYCzTHk4dU+e2eQu9uFh4
4HP2Xci5W1Xr+e4nmRPE26gZONrbPTSiKhVoQjnnmyWVXp0fU2xzXrVczn2Z
IhSHbQIgAtsEGUhGq5gyVR0byP0bo+c23DKVFaUUlIkd0l8nOvfbW6dKW40H
5r/imqbh8Z5d1UznWMkj6UEEjxwsgpc11Klx6lw5b9ETL0juqCFn/yOt57uZ
XtaSklvmiBxv96VSgbIunc+rjr/zIW8np5cLS5pim8oUIS9uYVUDbBOAFLBN
wKf3zSW3TUvuPJy6QNXOw9FzzS9vOdQW6h4aiZ5v/sFUqk/yNeiEWbGbFeWk
Yrd7bHP07KG9fzl0+HCQHHvraoSHUDRt7qotTcfee4/9iByZyrlrnjpXzhsZ
yZzC29lI1Gw91Xq+ayGXlW7U5JY52hWm8WTa4DurZxITY3axfgdnhd3TBTYN
2ybde6CcE1+mCMVhmwCIwDYBF2moSt9OPGlXx1R+TbL+ZMHaFmJWHa9vqln6
4+WVq/d3XjJ9/KaQtmlzfkNa7e7MGJw6t8xbLPxSYIowktyljbSe70qSGzW5
Ic3d4a1PvJxrf+ZCIk7JKuUdXRwpnVDu7Q2KxmOb3BShdz40dZSuAbYJQArY
JuAicx49bWI6tok7HqcuINLV9+qKmcXFgYrdUm1z8Qa2yFs/+4KOFCGjU+eW
eYuwrpTJh99w0uzzXQfdqMn1THJs7zgx+7Gsqlkar21ISzNnDStlh9etw7ht
1jYop8XbBp4F2CYAKWCbgEe6OSz9k54VW0nTRnKs2tK05LZpxV/9+VsRC8Zr
BYmi5dqDdYanzi3zlv5A5jfkeiBaz3cROTZqbjjS98XF2VSzfB2tISllx0H+
aV7HuG0qU4QCC00dopuAbQKQArYJeER2/eRWwRwm3qXPHNJuRJn24nZ63xQq
bWrZiGh86lwyb1q12YxPKE7Q3H+Drp5n2Ki5rGY7rY2ZJRVIkfKT2JqobCe0
0JMFNmUYtk1FFn+pb1OE4rBNAERgm4CHLE6lM/dZuqZMb6f6gMqtj25Auv1S
S+tJE6bOHfMmNlEqVFXZXuv5rmDJ6c8zbtSsP/NaxeMZ21AWLI/vPcq/UVqB
06eJMMZsk58i5NHSo2qAbQKQArYJeJhjm1JhI0dteETbr/f2t7e/Hzrx10P/
faLt/GWbjUuqfFp8z4SpMzhvcZOmTlpCU026k9bzneUKWz0nqtnUyVlDbzh5
YvZjGcq2LySClHHfbOtxbgjUxfuTtWAwttl6nDOfZMb8CmwTgBSwTcDDHNuM
DR5bcts0IeFFfZPx0bOHVj9QJFtNJrfw64Mf6RiGLtJnoKlT5y/qmjrd8xY3
der6Xl2hyR61nu8gyX6U3Nbn2TZqKlKB0qHZLpxy7qU0P90fGLRNTopQqW9T
hOKwTQBEYJuAhzm2KVtdXXL6czURHmndIenBKqsXrG2xo3L46Lnf3iqmCD0f
Uh9dNGXq9Mxb3Oyp86ttJlfPuU2CEhs11aYCKaE2pah6RL7pGwzaJidP378p
QnHYJgAisE3AwyTb7N4vJNoUqisiNBL8jXD+wrKyqqoqoWa4eDs2VNfp3i+K
k7Z8cDOmTvu8xc2eOuK3x1d9R/JAcqQ7aT3fES6N3kxbPZeFNLd3BOet4ugi
cSQ1q73tZzm/W7DcV7E7Y7aZSBHKjy5CDNgmAClgm4BHWlq0TmWKhbd/PW1J
l9xOjthapI1FFEue2iYRvEjH65t+MDVtXVjT4rIOpOaWe9hpGJ46HfMWt2Lq
6AMRuxrlHoPW8+1mW++YmHuujGpuOBKaskLuihPKM6YCKSmp9P+mRAO2yU8R
Wr/DimG6BdgmAClgm4BLWo6MrjhV1+YHZeu5xVOWZQ8SMscLVB/g3F2iHaSO
xWV9fPzcfVpDiwIGp07HvMUtmbr0IG3uPCmt59sHeby0cnumcpr8Mkc0FSjZ
FUgNtHO6IrDpgwKbMozENrn5Uz6zcRmwTQBSwDYBF+kOQC31f1IkGuIUf/Xn
+zsvSbcgZt0ASXv30P1+A/zKlr1/rNBtgBoZlMYntZqtoanTM29xa6Yube9o
oP6M2efbBJn/wBs9mcppBrZ3vFbxeLpqlsarN2qqjUlOVpSRvN8nBTZlGLFN
zqbWUh9OkRTYJgApYJuAS/R8s3T5VXVt8wSj51gXntoPrpL/Sbfzzdl3QXJe
JHyhS4yAjZ1actu0bJYiidFZKzOpVWk9j93I1Ombt7g1Uzd2qnKy2NIod3l5
refbQnXnNeqZmZsEJVbPJWWO1KQCKSlbwwls+qPApgwjtplvKUJx2CYAIrBN
wCcWfikwRZc8RJgmCQkpaXsgJc2+B/786Izp04kPpH5x8EQwmC0SOHZKaOnI
yXYZPfdaxeMLy8pKFlVtPj2oerQ8JJ3KJ85d+cnQtdy/IkXn1Omet7jRqeMi
aaWkKsFc6/kWExqLZmtGubOr5hcNw4EFomeWVMbf+VDPPWUosGn2A3IHRmxT
WSffr7MkANsEIAVsE2Qibf9hZkWJDQ/39fULLhR6cfHM4mJiR0KSSPR8s5Ac
LXpIx7aiGTO07e6TKJNC4SKND9917ze+STSM3ZER4byy5wnyEMiNkJsKrHtb
xwZRNVNn37zFs08dH+K6YsqPirvTer6lbOgZztKMklyRRO65JBVoZ6vOexq6
Sn5dlhxEV9V1BEg9gV7b5KUIlfo8RSgO2wRABLYJMiKpAkQsiJ/tkqjVQ8s5
JuqH9+yqppsVv/KkNKsldvOyNNY3e+uJSPtW8lsT5658d+iGepcj9kVEix86
i7RJl3ENbuw8VXu3cDuL953Tk46Uc+psnLd49qnLgHQSaj+4mvPutJ5vEcTV
A8f6M9XSpEdtUFK5naYCGapQVNvAyUP3U4FNGbpjm3mYIhSHbQIgAtsEmaG5
J8LaKDctWtbRm+5UnDZXltJCxEOqIuyYNb2Y7U5Uj5AnrjRJImaKqkEN+irw
kJsSsl3IY9G6aTNFjqmzc97iWaeOTyzMdpAWJjqeh8ZyJTppPd8axBpHXM9s
6qxb+lxUCKxpTAXi0H6Wo5rTHvJJk0oe9KG1n6WtkbR2R1q/Q2mbPk8Riifk
nE3XkOa/WQB8BmwTZEOyg/GnR3uVP7+y5wmZDnEXamWNvwvlaS8qSK0FZ/Je
6S5HchSsbdG5mCsJk8788vP6xSnr1Nk3b/HcU5d98Iv3nTP/fLOhIc23+7Il
BG1sYwlB1HPK1hhvJUm9646VnHidvs2fvoemCMkSqfyeIgQAkADbBFlg4TW2
iZFfOnL0XOPDdwlBvM2nBzMEdiLnHljL9lUWTV2w+cgnWkfS/dJC8ruZpJfR
1fwiu4tCI0nrEnEyshyfY+rsmre4uqmTIcRUVQYqtZ5vLjl2aTZ11vyiIVnj
qKTStNXbuiZOHvojz5pz4/4jD1OEAAASYJsgB4lF0qIZM4g41YblVR+JI5Ej
Njwcu3k5SyyRnDM2MsIOPSHH3jfvK5xOlClQG8z265L1XC2dzdOQNvvWsWat
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
      "], {{0, 946}, {890, 0}}, {
      0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {890, 946}, PlotRange -> {{0, 890}, {0, 946}}, ImageSize -> 
    252.],StyleBox["\"Figure 4.82\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.82: Newton \
iterates",ExpressionUUID->"696c2b97-1b39-44c2-9dc4-fa7c9c077751"],

Cell[TextData[{
 "\tAll that remains is to find a formula that captures the process just \
described. Assume we have computed the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a3be753c-f287-4796-9476-8daa40aa58fc"],
 "th approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "e7b10677-b58a-489f-a50a-0905d7fb14a3"],
 " to the root ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "734a0177-55be-4590-ac48-8ba0740527b3"],
 " and we want to obtain the next approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "23e4114e-b8f6-4aeb-b2c1-5c807b41e313"],
 ". We first draw the line tangent to the curve at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "n"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "n"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"5bf58d6a-6183-4339-b959-13511878552f"],
 "; its slope is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "a12b5036-e438-4c0e-b04b-6b289352f0cb"],
 ". Using the point-slope form of the equation of a line, an equation of the \
tangent line at the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "n"], ",", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "n"], ")"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"1d5d75ec-0193-4f46-950e-ab5266be5a3a"],
 " is "
}], "Text",ExpressionUUID->"5defbd4e-8606-4f3e-be61-537d892f4698"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"y", "-", 
          RowBox[{"f", "(", 
           SubscriptBox["x", "n"], ")"}]}], "=", 
         RowBox[{
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"f", "'"}], 
              RowBox[{"(", 
               SubscriptBox["x", "n"], ")"}]}], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox["m", "TypesetAnnotationFont"]],
           TraditionalForm], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             SubscriptBox["x", "n"]}], ")"}], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"93bca0d2-e388-4df0-8d0c-e3d53e80258b"]], \
"Text",ExpressionUUID->"35d3b5ae-842f-46a6-a20b-4cb07b11a367"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"808649eb-819a-4ba3-999f-5a51d235f7dc"],

Cell[TextData[{
 "Recall that the point-slope form of the equation of a line with slope ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "d0620846-22fc-4975-9c61-a2d9d063e478"],
 " passing through ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "n"], ",", 
     SubscriptBox["y", "n"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "0a033780-2e38-4c75-aefc-491ea19aae10"],
 " is ",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"y", "-", 
           SubscriptBox["y", "n"]}], "=", 
          RowBox[{"m", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", 
              SubscriptBox["x", "n"]}], ")"}], "."}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "7fe3254f-46c5-4e8a-a4a7-8b462f3faf64"]
}], "Callout",ExpressionUUID->"d5ba63a5-81b2-4757-bc66-fba46348b3b0"]
}, Closed]],

Cell[TextData[{
 "\tWe find the point at which this line intersects the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e46bd906-d17d-4e43-8e0e-f808403e1974"],
 "-axis by setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "7fb255b0-f1cd-4758-9b6b-57910c6e1ee9"],
 " in the equation of the line and solving for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "8f980a76-3ef1-4fcf-81ab-996e66bfe2d1"],
 ". This value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6f4ede78-8c30-499d-81bd-712141ec58ee"],
 " becomes the new approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "c05cd498-6997-4590-b459-0c27a7e2b837"],
 ": "
}], "Text",ExpressionUUID->"d1918fc2-6995-4392-ad34-23b325cc8cce"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FormBox[
           UnderscriptBox[
            UnderscriptBox["0", 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[
             RowBox[{"set", " ", "y", " ", "to", " ", "0"}], 
             "TypesetAnnotationFont"]],
           TraditionalForm], "-", 
          RowBox[{"f", "(", 
           SubscriptBox["x", "n"], ")"}]}], "=", 
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", 
           SubscriptBox["x", "n"], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FormBox[
              UnderscriptBox[
               UnderscriptBox["x", 
                StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
               StyleBox[
                RowBox[{"becomes", " ", 
                 SubscriptBox["x", 
                  RowBox[{"n", "+", "1"}]]}], "TypesetAnnotationFont"]],
              TraditionalForm], "-", 
             SubscriptBox["x", "n"]}], ")"}], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"29b9ef72-af45-4176-9850-005b606f0865"]], \
"Text",ExpressionUUID->"ae40d184-55ed-46c3-85ad-0a78cc00ae8e"],

Cell[TextData[{
 "Solving for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "0cb2f9dd-028a-4873-9514-a996168c0b22"],
 " and calling it ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "5a7f55c6-ed9b-4a3b-a696-f002387f6735"],
 ", we find that "
}], "Text",ExpressionUUID->"152f76ab-b7f6-447d-b696-7b4b84eb632c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FormBox[
           UnderscriptBox[
            UnderscriptBox[
             SubscriptBox["x", 
              RowBox[{"n", "+", "1"}]], 
             StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
            StyleBox[GridBox[{
               {"new"},
               {"approximation"}
              }], "TypesetAnnotationFont"]],
           TraditionalForm], "=", 
          RowBox[{
           FormBox[
            UnderscriptBox[
             UnderscriptBox[
              SubscriptBox["x", "n"], 
              StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
             StyleBox[GridBox[{
                {"current"},
                {"approximation"}
               }], "TypesetAnnotationFont"]],
            TraditionalForm], "-", 
           FractionBox[
            RowBox[{"f", "(", 
             SubscriptBox["x", "n"], ")"}], 
            RowBox[{
             RowBox[{"f", "'"}], 
             RowBox[{"(", 
              SubscriptBox["x", "n"], ")"}]}]]}]}], ",", " ", 
         RowBox[{
          RowBox[{"provided", " ", 
           RowBox[{"f", "'"}], 
           RowBox[{"(", 
            SubscriptBox["x", "n"], ")"}]}], "\[NotEqual]", "0."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"77941da7-3a38-43a7-a8ca-b92c449e2664"]], \
"Text",ExpressionUUID->"b2887672-c74b-4718-8673-412a881f8579"],

Cell[TextData[{
 "\tWe have derived the general step of Newton's method for approximating \
roots of a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "722d725d-2aa1-45e8-9556-39849bb377ba"],
 ". This step is repeated for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "0"}], ",", "1", ",", "2", ",", "\[Ellipsis]"}], 
   TraditionalForm]],ExpressionUUID->"0cfdc383-f9ba-45b6-b14f-e02cd2923a1d"],
 ", until a termination condition is met (to be discussed)."
}], "Text",ExpressionUUID->"f1772302-d60f-41c4-99c1-e844c528b5cb"],

Cell[TextData[{
 StyleBox["PROCEDURE", "ProcedureFont"],
 "\t",
 StyleBox["Newton's Method for Approximating Roots of ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "0"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"b7e20dae-c606-4c5c-9268-9fb8b3e1e189"],
 "\n",
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tChoose an initial approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "bff4f46b-d098-45bb-bea1-a1681ad27d01"],
 " as close to a root as possible.\n",
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "0"}], ",", "1", ",", "2", ",", "\[Ellipsis]"}], 
   TraditionalForm]],ExpressionUUID->"247f7de2-e62e-436a-b433-8ff863b29bf0"],
 ", \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SubscriptBox["x", 
            RowBox[{"n", "+", "1"}]], "=", 
           RowBox[{
            SubscriptBox["x", "n"], "-", 
            FractionBox[
             RowBox[{"f", "(", 
              SubscriptBox["x", "n"], ")"}], 
             RowBox[{
              RowBox[{"f", "'"}], 
              RowBox[{"(", 
               SubscriptBox["x", "n"], ")"}]}]]}]}], ","}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "f23bf28c-1bc4-43d0-b3db-d13a7907c0a6"],
 "\n\tprovided ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "n"], ")"}]}], "\[NotEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"3a919992-b1e5-4dd5-94bc-05f8459851a6"],
 ".\n",
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tEnd the calculations when a termination condition is met."
}], "Procedure",
 CellTags->
  "PROCEDURE Newton's Method for Approximating Roots of \
f(x)=0",ExpressionUUID->"baccf81b-dbef-4e13-93c6-79bb71fb6571"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"bb9ec3ca-dd18-4f16-84db-a8974b3571e5"],

Cell[TextData[{
 "Newton\[CloseCurlyQuote]s method is an example of a repetitive loop \
calculation called an ",
 StyleBox["iteration",
  FontSlant->"Italic"],
 ". The most efficient way to implement the method is with a calculator or \
computer. The method is also included in many software packages."
}], "Callout",ExpressionUUID->"c720c621-1a5d-4f2d-baa6-4a3affecb8db"]
}, Closed]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "1"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"70226e5e-fee4-41ae-8b7a-03afd80973cc"],
 "  Verify that setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "6847d6fe-b510-4575-b0d8-517ca87aeb8e"],
 " in the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "-", 
     RowBox[{"f", "(", 
      SubscriptBox["x", "n"], ")"}]}], "=", 
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "n"], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["x", "n"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "3bb9eeb1-3513-4cc1-b376-c67fc2cd1ddb"],
 " and solving for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6482b78a-70d6-4f63-97e5-474d537b6be2"],
 " gives the formula for Newton's method.  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 1",ExpressionUUID->"1df3ec27-183e-414d-847d-56846e7c2c6f"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"efc09381-1b53-4b7d-aba9-740c93ad53c6"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"0", "-", 
          RowBox[{"f", "(", 
           SubscriptBox["x", "n"], ")"}]}], "=", 
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", 
           SubscriptBox["x", "n"], ")"}], 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            SubscriptBox["x", "n"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"f", "(", 
            SubscriptBox["x", "n"], ")"}], 
           RowBox[{
            RowBox[{"f", "'"}], 
            RowBox[{"(", 
             SubscriptBox["x", "n"], ")"}]}]]}], "=", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "n"]}]}]},
       {
        RowBox[{"x", "=", 
         RowBox[{
          SubscriptBox["x", "n"], "-", 
          FractionBox[
           RowBox[{"f", "(", 
            SubscriptBox["x", "n"], ")"}], 
           RowBox[{
            RowBox[{"f", "'"}], 
            RowBox[{"(", 
             SubscriptBox["x", "n"], ")"}]}]]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b9d665cf-e0fa-4471-9e0d-6fb4ffb7450f"]], \
"QuickCheckAnswer",ExpressionUUID->"1a4a81a7-5d5a-483b-8ed7-b0eecefdd97c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 1\t", "ExampleFont"],
 "Applying Newton's method"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 1 Applying Newton's \
method",ExpressionUUID->"385b31e4-edb8-4163-9fbc-6b7c04c3486c"],

Cell[TextData[{
 "Approximate the roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "3"], "-", 
     RowBox[{"5", "x"}], "+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "a1e82609-13aa-487b-985c-107f1ac701d3"],
 " (",
 StyleBox["Figure 4.83", "FigureFontText"],
 ") using seven steps of Newton's method. Use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "cf484321-52ba-4afd-8052-21e07df681c3"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "35eff236-40ea-4bc8-93d3-3d253e4f18cd"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "fa16331b-7e2b-4204-80fc-7c5858090c4a"],
 " as initial approximations."
}], "Text",ExpressionUUID->"06beb2a6-ad31-47f3-9b03-eb34b00b2ea1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1:eJzs3Q9QXOd97381d9I/nl7PrV1bNnglUyQ0SEZyEcg/M/jKP/Ag/9LppshG
GQ/KyOQWyf2hawm5SGqC7DEaU117nV+RjTMx9NYmZWTSQLyT0ng7Q507k660
NUqzjbMyxKGzaVexiaAm2Ct3I8HvgSMdrZ6zuwJ29zznz/s1xxoZod2vlnPO
89lnnz9FXzqwc+9nVq1a9dRvil92Nh35vw8davqzR/6b+J+GJ5/6k31PNv/x
//Pknzbvaz70f33pv4gvtotf/kn8t/D7eQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwY
DA4MDIRCocnJSdW1AAAAAPa2v6XFU1hYWFAgjnXFxQ/V1g4PD6suCgAAALAl
r9erRWtxFNx5pzhI1wAAONL01JTqEgDn21xWJhJ1crqORCKqiwIAALnn8/lU
lwA4XDwe1zuu9XQtvqi6LgAAkHtby8tp5YG8CofDese1lq7Fdae6KAAAkHvR
aFQ09MFgUHUhgJMNDw8n912L47GHHr00f1l1XQAAuIJoc+MXPojFYrPpvmPu
ovjTf5uc/uRX2T7X0OCgaOi7u7uzfSAA6Z3s6pL6rg+3takuCgAAx7oU//jn
0ciZv//ON1/6+h/XralefafW/lYP/7uxd2vu0vn+z9+kjdtcteP5M4msnvpY
e7t4nKampqweBUBGh1pbtWtWD9gvnnxRdVEAADhW9C826y1vcvu7qqb7vPG7
wy9r33wlYJ84nc1Te71e8SCby8qyeRAAme2sr9evWe0y9/v9qosCAMCx5i6d
Pz/98fzcxemz/vrfvSN52a62yEX5u2NvbVt9p7YtxUK6TpnAlyYej6/xeLQW
PxqNZvePAJDW1vLy5DfF4giHw6qLAgDA+RbGgcTearz1jmtd01/+P8ZvO/fX
T+nxe9UXT614uerR0bP6E9GTBuSJeBsrRWtxzM6mnVcBAAByK/KiV++a9vzO
/tQjq2NvfemW1Qvp+uQPV/xEr778NX3p3WPt7St+HAAZRCIRKVozFgsAAFMl
jf0Qx5/84KOU3/WPe1eJ72n+/i9W/Dx7m5v15t7r9a74cQBkMDw8LKVrLjcA
AMx1Ycj7W9fmNqaatzh36fxLZbcU3r7jjcmVL5mbPBZ0jceTSGS3/giAVLq7
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
FkRcj9NTU6aVaibSdTrL6rsOBALG08apa5qRrjNwUrqeX2xWMqfrgqtjs0WQ
E+9DBwYGnHra2wjpOgObpmvRUkvpermbCN8Q6Tod0nVmS0zX86nmDhTkdFVJ
SyFdp7OsvmvjMqQO3pCIdJ2Bw9K1sLuxcYkBO3mZEfG3TnZ1ibtKDtc0sItI
JBJUSqQj7QdRXVWlthILEien9uL4/X7VtSxVIBAwTgrr7enJ7bPoV/rxjo7c
PrLd+Xw+vVlXXYsV6StaixM183eOjIwYP+UXh9ZYOExdXZ3WLIowqboWaznc
1lZwdeB95u8UZ5Rx/peDb1D6fmFby8tV12I5+q1jaHBQdS25If4hKac3Zk7a
yXm7tqZGXE0i8o2Pj6tOvmZY4vsRE47ktzwcxhdHeQ0rLlX7yebpn8Bpw7Gy
44anjdvOK70pVF6Jkw5uUC4/HPPTz/4fknwtlG7YIMKnz+cbGRm54ceINmWd
dM3h4IMmhoODg4ODg6PgaiTwFBY+vGPHsfZ2R06HfPaZp71K1dbUaK92cVGR
2kosSP8gRnUhy2D88Ki6qirnz6J/7paPB7e1B6qrtVdmU2mp6losR++eXdbf
Svl5qHid81SkEhtKSrR/l7ghq67FWrZVVmqvzNby8gzfpjdkyceD27ebVqf5
9H2XaLuN9JuGeJVU15IzJevXZ5+r792ypampqbu7+8zp06zjl1fMasxAy5Ai
DNhlVuPo6FljH3U+tuHQZjWK5+rr68v5g9uaPrmbWY2S2dlZPQws6y8aNx7V
spaT1g9hVmM6S5zVePTIEekMEbHctCKVYFZjBs6b1ahPkVvucffatSKZi8vH
7/fbJck4A+k6A9utGaJPqdMP8c49H0/EmiHpkK7TWXG6Fg4eOGBsNZy0fgjp
Op2lrMgXj8f1zn/9cOoy1zrSdQYOS9fTU1MijSx9eGdlRcUT+/b19vSEQiH2
TFeFdJ2B7dK1eItqThNDuk6HdJ1ONul6ZmbGuP1oweLCI/ko1Xyk63SW0net
r56hHzb6wHHFSNcZOCxdH25ru+HkKfGnuxsb/X5/Pj6txgqQrjOwV7r+8MK0
p7BQugDFW9d8PBfpOh3SdTrZpOv5NONDHLO/DOk6naX0XRt7FUTMMLNIJUjX
GTgpXY+OntVa9nTpemt5uc/ns0VKcRXSdQb2StdDb/qli650w4Y8PRfpOh3S
dTpZpuv5pLMu+djb3JzbOpUgXadzw77r8fFx41nh9/tNrtN8pOsMnJSuH96x
I+WyuiJyi1bGMZ/fOQ/pOgN7pev9LS3S1Ze/4EG6Tod0nU726Vo8QsrxIUOD
g7kt1Xyk63Ru2Hctvm78RMMNY01J1xk4Jl2/9tpr+sAPvX3fVll5sqvLFrHE
zUjXGdgrXRs3tstf9CVdp0O6Tif7dC187+23jel6U2mp3Ycakq7Tydx3HY/H
9R119eN4R4f5dZqPdJ2BM9L19NRU8um9xuPZ29w8MjKiui4sCek6Axula/Fz
NGctPg3pOh3SdTo5SdfzixN8jAHb7uNsSdfpZO67Ns5nFMfExIT5dZqPdJ2B
M9K1aGe1Zr26qupkV5fd+xDchnSdgY3Stbj0pCbmodra/D0d6Tod0nU6uUrX
8XhctDXG95K2PhVJ1+lk7rt253xGDek6Awek61AoJG6VT+zbxz3BpkjXGdgo
XYvWWcobnZ2d+Xs60nU6pOt0cpWu5xfbHWO6XldcbN9OS9J1Ohn6rvXGSz/E
C+iG+Ywa0nUGDkjX4ufrjAWRXIt0nYFd0rXILcbdovPaTJOu0yFdp5PDdC0c
7+gwDgnwer2X5i9n/+DmI12nk6HvWlsEOPkE2Fpe7ob5jBrSdQYOSNewO9J1
BnZJ14Hh70qtzLri4ry2MqTrdEjX6eQ2XYvT+8Ht240B26Y79JGu00nXdy1O
J3EiOeOnvzKk6wxI11COdJ2BXdL10SNHTB58SLpOh3SdTm7T9fzivevutWul
gQFrPB7x9Zw8vplI1+mk67vu7ekxLv/rqihFus6AdA3lSNcZ2CVdGyd5iaYn
r89Iuk6HdJ1OztP1fKrJvOJCEJdDPB7P1VOYg3SdTrq+a+NNz21XHOk6A9I1
lCNdZ2CLdC3uHsZdnMbHx/P6pKTrdEjX6eQjXc8vrhohnfzif48eOZLDpzAB
6TqdlH3XIyMjxpue21460nUGpGsoR7rOwBbpuq+vT+q+EzeWfD8p6Tod0nU6
eUrXovUsWb/eOADbXhsEk67TSdl3vbuxUUrXD27frq5GNUjXGZCuodz01JR/
0ffeflt1LZYjGmjtxbHyB817m5ulXCGib76fdHT0rPbKXHgvZNNVGvJEvBHT
XplQKKS6FmvJU7qeT7OliL02cBShWjttbFSzOcbHx7VXRh9OPzExUXD9xtDi
eP3119XWaT5xQWmvDJv3Gdmi7QZgZaUbNki5wj0rvsJG8peu5xffYxpXwHbP
xiKucqy9XYvW+k98Q0kJIQoAkCujo2eNg05Zgh4WlNd0Lc75reXl0oVgwvRe
mGxmZmZdcbHUd51yG0cAAFbmZFeXlK69Xq/qooAU8pqu5xcHVxjXD1nj8UQi
kXw8HZTo7u429icwthYAkEPaZKjkI68boAMrlu90Pb+4gaNxfIgdF+hDSolE
orKiwuUL8QEA8kpkBpM3QAdWzIR0LdJXXV2dcYajCfN8YYKhwUHjD5fpwwCA
HBoZGZEaGpFb8roBOrBiJqTr+cUFJYwbZItDBLP8PSnMYXzrxEA4AEBuPfvM
0yySALswJ10L/f39xvEhJevXMzrX1lKOq+dNEwAgtx6qrZXamu7ubtVFAamZ
lq6F/S0txoDt9XoZgG1fuxsbpR/o1vJy1UUBFjB3MX7hgx9e+PiTX6X+c/Gn
0Wj0/PTH5pYF2NL01JQxP+gbLgBWY2a6npmZuf+++4wL9LF0m01FIhHjaB86
E+BmiQ/e/eZLX//jujX6FfHZezvflQL2xXMDB3boK1j+0dC4mloB+/D7/VJb
s6m0VHVRQFpmpuv5xaXgjXN+xTE8PGzCsyO3jB9GlG7YIM4o1XUBKlw8d+Kz
t4ur4O61a/WuA+03zd//hf5dcx8G22+6PbmHYVVNL5thAJkdbmuTYsMT+/ap
LgpIy+R0Pb+4NrIxXYtUxgBsexE/L09hofRzZOlRuNfFc9986evfCf34hxc+
vjx2qv5379Cvi1UnTuvfoyXw5GNV/TdI10Bm1VVVUmdOf3+/6qKAtMxP1/Op
ButqA7BZWsdGjD0J4hSanJxUXRdgCT/r+gP90vj1LV/9yZz42oVA42cWOquf
+pZI4D8PnHzsoUe/0PzkwHu/VF0s5qfP+gcGBnoH30k3Tt4lEh+8e+bvv/PG
G98Ur8bQm/7Rc+et8IJEo1FjZjC5R27hlTl9Wrw42nkiXplL85fNLMAuLrwX
Eq+P6irUU5Ku0+2Qbs0B2JwqybQ7jLjrGkf4HD1yRHV1KlmzVbIs54eZf3n5
2v3t9h2D/zl//tXHFqL1F0/9h1P/yfYVHfQUForjNzZ3n1ddiypzHwb/8rEN
4kXQpgNojbL49a7bGv7inQ/V1mZcc2xbZaVpzy5uVvpMiuQRX7+2da/yV8ZS
xCn08sHPixfHzdeRTkm6FkRCM44rEIff7zezjMw4VZIl32GMh/hpunZsj5Vb
JYtyQ5j5dPTgzav1C+TLL77QeOsdd93aNPzJnOrKcJ25S+dfKrvF5WPgfx44
qbXI+k0s+W62MH7ppMouJuMcH3N2o7s0fzncuz9dq3fllXnqW469iS2ZaAS1
mdpXXhO3XkfJVKVr4WRXl/FELVm3bmJiwuRKjDhVki3lDlO47Q/deYexeKtk
Qa4JMzND3t+S+ruSpzfCIiIvel1+q//kra/onV1faH6y+2vf6Pvzg/W/e0fy
fWzh08kfzKiqcHNZmdTimLCrgmj4ks+N1A3f4ku06mjAtaNE9LCk9S+5+TqS
KEzX84sDsI0rWD64fbvCFbA5VSTcYTKwfqtkQe4JM8lDrxf+sU8MsZ6O1Vx6
p9vlt3rR5DXeujAD9zdbu88k5pPu4TPh3v36i7Nwh1c0/XZ8fNzY6MRisXw/
7+UzLxRcHdm1t/tv/21y+sML0xfeC4mbvLYuUHILeOKcG7ftmHpjn9a39uUX
Xzj0+7e55Ma+RGrTtThXpQHY2rG/pcX8YuY5VVKR7jA/fv/9lJvau/AOY/1W
yYJcFWbEtZP8JqstclF1Rbjep6PtN91+3SdNjj4hU4o8Vy3++be8EEr9py96
9Sk2q3Y8/xMVw5p6e3qkXrgHqqvz/7QX3vzvv639q+X16hdv/toHcHrbJ27y
LnzvvDB9Rp+UHX6ZyJRMbbqeT78CtrigzC+GU8VAvsN0dnYaP25w5x3G+q2S
5bgszOjvv7Q3p29MuuuTHYsTb4eD/3Oj9u74q5+7WXvT5+wTMoXFS3LVE0Np
JxfPnv7SLauvfECp6Bze29wsNTpmzKCPDoonuuu2huHzn6b+htnTyRMrPDf/
2RmXr3n2L0Sm6yhP1/OL70yNOU0kk1AodW4xCafKvHyHmZ6aEueJPHd79Z1u
vMPYoVWyFFeGmQv9n79Jv6c98o8XVNeDaz556ytXbm6fzAUaP+PSW3345cI7
KjPenWa+6/0N7cX57L2dSnoJNpWWSo2OCasfaCv8fC6QaTqR9mG3dogTafA/
812UtRGZrmeFdD2/+ObU2Be6tbxc5frJnCqGO8zxjg7jj6nvzw+68Q5jh1bJ
UlwYZi6PnapOeu95bU8ZKBd7S5sf8dg//Hx+7qI+/9TZJ+RKzL2v73+kZIRb
JBKRprGIY3oq34XMvLH9vxZu+8MfXvg403fF3tI/nBJ3toB7PrhNich0PYuk
63g8/kB1tbEH2+v1KquJU+X6O0wsFltXXCz9jB7fs4c7TGqqWyVrcV+Y0ZZG
uW74fU2vO9fVsZ4rnylcnYh97Y2wg0/IFUq6vSuZnW38aLu2pibfTyrOinde
frZ38J0btGaLq25qF7jWb5DvwiyNyHQ9i6Tr+cV5wSXr1hm7RpVtMeP6U0W6
wxw9csT404lEItxhUlPdKlmJG8OMtjRK8gqNd93axHtPKzj/6mPXD2NzxQm5
MvppvOrEaSVLQjU1NUkd16ZFghv/e5PWtPf8zn63jIpMx/WRSWKddC0MDw8b
u6/F0d/fr6AaTpVF2h0mGo0aJ58+sW/fwndwh0lFeatkHW4MMz/q9RQWijj9
N//6k+QebFctqmNNl8dOaeee+FlcvTBdcEKuyEeDB7Xzdufr76jaYHRTaanU
7gQCATWlGF2dXKN1HaiuRjUi0/Usla7nF5ekMHaQilw3OnrW7FI4VZLsb2mR
figiMIyPjy/8GXcYAyu0ShbhxjBz8dyJzy4sjaJ9ZqHN5dTeapUP/jTp+2ZG
z50Xr4nL33yZau79rlULS61ev8eT00/IlZg599dPFVzdCOmNSTVnqTboWupw
y/+g66XS9jvQKvyTH3ykuhzViEzXs1q6FnY1NBjXfLt3yxYTVo+/DqfKVcZb
XEHSmuTcYa5niVbJKlwYZuYuanF61dd/pH1Bm8555d/7xVP62JBf/O//IS6c
g6MXXH2GmEi8zv98tFy85r++5avXzzJ29Am5TOJVmj7r17Z7SJ5OeO8rwbTr
I+WNcaXruro6s4tIQ7xQSbOzu5lSQWSSWDBdi3em2yorjT3YXq/X1D0cOVWu
Mm6peffatdFodJ47TBJLtUpW4JIwcyn+8YcXpvXMrK1zvqr+G/q1cHns1LbV
V/Z+vevWpisTE37UuzBqiN0bNXMXzw2+IqKUOPr6+rL59dWXv5ZugWJtY6zC
OypfjUlvZyx8QpryymjEBXvur5+q/907Cq5uVZx8HxNfWXXU7HkDxqbn2qBr
E1+Z1BaXq9U/mMvtPzwrql4ZItP1LJiu5xc7S6UNAbVLzNQ9HDlVFo2MjBgX
RLp2i7PsHcZEFmyVrMCWYWa5ooPaz73w9h2Hv/0D7WMLz+/sT/55z10637Xq
Nv2UEO+2/v3MX1avvpNJjtfMntaWlNHXV1nxr+JoPJvqE7SrA9jKB39q+LDA
wiekCa/MVdo09uefO9H35wdbdz6UfB/Tf11Y88dExkHXw8PDV/7MxFcmhbmL
f/nYhivnjNVW2lT1yhCZrmfNdD2faoajdpzs6jKpAk6VRbU1NVK63lBScmXk
m5XvMCayYKuknk3DzDL9rOsPpBuUeDchvc3U+vD1XgL93HD9SjJJFvdmqsgF
8fqn2nF+JtD4mYUPC754KtU8CAufkHl/ZWSf/OrKTHbxrvDc4Cv6wkdXXx/z
PqBMOSLx2qBr01+ZZOINslaPFfcyUPXKEJmuZ9l0Lfh8PuPFJb5y7d1rXnGq
zM/39/frkcD4BsfSdxjTWadVsgDbhpllmnpjn3SPav7+L4zfdvnMC8lL8xmm
NyK/tB9T+vVCZ5IXYHfTdXpjcx8GRVRLPsNN+4zSuNL1Q7W15jz1DSxOWy5Y
XIGWTXivITJdz8rpen5x2JU+Y04/RKnhcDjvz+36U0WcG/du2SLd37aWl18Z
/c4dJiOFrZJyLgozF8/pH9+If+9fvPNh6m+bu3ht+evbd/zNv/7kUjzjHnDI
oeigNu495RufBXMXr73dq/8Go3Vksbf0LUfFCWza1PW9zc2qVrrOTPsoSlzI
NHzXcX1kklg8XYsgV1tTY+y+Fhkv70uIuP5USbnv+cDAgPan3GFuTFGrpJj7
woyIyuJGmnnpj4WV9xa/7ZNfzbtzlqsi1z4o+b1djx9qbTUeX2h+8lrjcvuO
//fgIe3re5/6Kqv3a7TpydrHLqbdx+7ZuFFqfUz62DqjcO/+lAPAQGSSWDxd
zy9uwL25rMwY8x6qrRXF5/GJ3X2qTExMGLeP0VdD4g6zREpaJaUIM7CUKx+U
VFQuzAJI3pi+IGnqVvLX9S+y86zu0jvd+otjzn1sfHw806BrRfTVNWn4UnB3
ZDKyfroWQqGQKM94re1ubMzjs7r7VBGvrfEdjfhBzHOHWQ7zWyXVCDOwlJk3
//tvJ3/uKR3pvqi99Rv8T9XlW0TsLW1tnAKzNjV4/fXXpdantqbGhOfNQFsE
qYD5yOm4OzIZ2SJdCwMDAylnOB5ua8vXU7r4VAkEAsZorS2HyB1meUxvlVQj
zMBa5j4MfvOlr7/xxjf7UxFf/3bfyUO/f5v2ju/Xtu595dS3ht70iz8Sv2Gy
9hVJG/Ka06kimhtLDbrW+0kOjl5QWIaluTgypWSXdD2/uISIMfIV5G+NPree
KvF4fFtlpXEmaSwW4w6zbKa3SsoRZmAvl+Yvf9f7G9obvVX132BUfArhK63h
mt/qfNeU10eaUC9+NH6/34wnTuXy2CmtjBssrDp7uv2m293bOLo1MqVjo3Q9
v/h+1piuxXWnT7XLJbeeKp2dndISfOIQb224w6yE6a2S9RFmYDEXHLNEZJ6c
f/Ux7fX5b33vmfB0ExMTxoZ+cnLShKc20vdavdGeBReGvL91bTNWF3JrZErH
Xuk6kUjsrK83XndrPJ6RkZEcP5krT5VIJKLPwtP/+dVVVeIOoy1/wR1mWUxu
lWyCMANLcc4C7CsQv/CBSLPnp9MvEXn1A7jP3mtSF4G2z0LyIdogM57Y6OrQ
vrv/19+Jl+jDC9OTBuLrF94LffVzNy9sy+viXdWui0w7e9x2HRnZK10L01NT
4kIzBux1xcU5XgTblaeK1+s1vrbnBl/hDmNkwVbJJlwdZmA97j0hL4+dEnds
7SPg32zt/uEFw93s4rm/evDmAnMXXz144IDUBh1qbTXnqZPNfRjUx/UVJE3K
Tj60V09/DV/4mXu7lfQ5WQWu2z0tNdulayEajaZco098UaSdXD2LC0+Vb770
deOr+oXmJ8Ud5trUM+4wi6zZKtmEe8MMLMm9J6Q2lUa7e2ufWh7+9g+u3M3m
Lk6f9Tfeeof4+l23NQy890vTqqquqpIamrwM/sxscYijsbFLPqTZ2e7phUvh
anunH4wOtWO6FsLhcMm6dcazfVtlZW5GZ7nvVInFYuuKi6V7WkXlau4wKVmz
VbIJ94YZWNK1hW5+Y7MrOlJ02mwaafUeceOqqKjQ7/B7u//WzOnGogU3tjLR
aNS8CoS597WdiG94JLd9nwu46txZFHvr+edOvHzw8yk73FY9fODLL77Q/bVv
uPMmb9N0LQSDQeMm6eJ4oLp65WvOu/hU2dXQYLx1iIiYrr/a5XcYC7ZK9uHe
MAMrmrt4bvAVcWP/dt/Jk3/3rtum2U6f9Sc3eVfuaXdUfqH5SfFqfBhPZN6E
NOf8fr/UvmwtLzezgEUX9FNiib+Kw4XD/xIfvPvNl77+6stfe+XUt8RvjL+K
PxJnkeoy1bBvuhaGBgdTLoJdV1c3+8uLK3hA154qfX19xszs9Xq5w2RgtVbJ
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
NBeaNQHaO9PZKUVrVmm0tYnx8+0vtHi9YmttbV3M2xPHXwwMvZ/GI18KGbEh
disP/Dqt8otXr44Nk3O/TTj9O/Wtq6srzZ2bVRPXh4y2h+IHvPvvfnjtdzOL
YxoL/P1x69vJRpKjF98yfhEZDMOimFd33ma8JMG42QKIX5aIRkaejH3eGu9o
OTlk9JU9hXHLUxqbsZKO8VWC4vymc/WBT9xpPmFo4QhYTQQh6R8XlzTa2tXO
yo8siz12L/it2NJ/xXbMHGudGWV9+GRa41Jmus7Cltvpeqoxy8w+vBk/jH1r
/HaS9XC70XtSPAGmbrD3VLovHMxb0k8OlRZOt2HUMg1aa2L87PGvP/ncsa//
zV+bGdtMmI7bv5a1C4GzZOLC0dvuSvh3Z/x3mtnyZZ3K8fPH93/hy7VfzfKp
pTgpu3zOH5urSddAdsRf0vj0kSOqi4I673c3fuiuZK/GpkUc+BrC42k9uDgW
RKNRI4PNDFJ9eF/gWhozS2tqasTpYerbtspKczQsrW8UW29vb5o7N3uGTuww
/q5jG0r8qulz5vSbhIdXsw95ClNHFkL8frkWLyOiF98y12o0gtNng5k+GVLq
2umn5jixnU2JD59M3rEwh9w4c8yofH/3SNYeVORqYx7ILecjpGsgKz69ZYuU
rrmkEYrdbDVmTCSwdFKlllc1TlwKVS9ZVhjfCflq57d2FIvPb3r07+P7ihud
EhdwRpOmqWU6RcjPzlWrGhO/vvAzsxekFxwKanTR6EjrvR82norGUlOnvu/v
6OgIBALBYNB8Kw5VWW6Pv3A/O278Pf7lj7N1scbEeLD6A/+73mNcxfzrM98q
X/pR0jWQHZFIZLnDIaXr/v5+1XXB7mLnh1g6yKllujZC19SEgQ/vSzhhIEEg
udppDHNZvcPNxxLl3faAi4scF+Xm9ImpvJT+JcA568aZY8ZRqTzwa/FczY/8
PLfpdC227KXrm2b23vvdsePYpGvAUt3d56SrulavWqW6KGD28Cre1v7nb6x7
IA3TdczIf8GhYGrfM7Pq3xzzsTPLfN1frxFXBX7zD39uTubJRHeXXDD2uvOD
xqQmfSaTq0vXM26m65t/5qRrwEKtra3SfLZtlZWqiwJmD0Yfu7PKylkKGqZr
ozGIcWLypTdSmuRpNGcwXojPUp6ZHnQ1Tu1ZxXtR3myZyUu6jF2bM5Q+GxzS
58yLdA3YycGGBildH25sVF0UcEu6bv8fCx9Hu3Q98spDfzSTru/amsrE5olL
odmx7pfezEKJhqETO4xTAKtPoDTXM/OXUvDkf6guJQNEnH5jd4HxutWfbH9k
9+PfMOZd/3e+zyAiXQN24nQ6pXTt8/lUFwXMNq/4X/d/w9IROd3S9UC7ufal
2HWpzGr+VdPnZtJ4lpubDZ4uXzozxk7L4gW7dvopI4tqsl7hzSdwbG8Q48Mv
/lVz6suM5hzSNWAb0Wj07hUrpHQdDodV1wVMXZc30zjO4tylWbo214tJNbJO
N2A0T2TSu8ZwYjwycvGnI+8la4kmvjowMDB0+b0k3z87zG6X4evF7rF4M/tQ
/O6s6KCYfeYFudI2Gws/81hg6P30Mnbmd3v6SNeAbYggLUVrETBE5FZdF2zv
ZuRLcW7DYuR7up64FHr2maPNTU1ie675OWPZCHMsWnzG/FLC9bLNNJ76iUz0
4lvfef6l2AVNErT+GD/ve2yrGZO+eKov4V3FrtJe2v6LRQ1LDp6uXrJM/MgZ
3ERhD7wQWnhJNy1mj93oPfnl2q+KrfmHb8V3phx9ZY/xu9OkeXjMBbkJ07Wj
qMgYx9728tl554pk8ImaAaRrwDZ8Pp+Urj+zdavqoqA5ccj7XmuzOOq91vXz
ZC0OROgy5jZkoX9Fvqdrka/MBWLMkGC+b3wp+VD2iLFUemGKvVnGzxv934zX
vGIfKPZ7ReA3x8NnJn5sbkn4uzaX2Fh8QzmjycyCF7VPuGXgGbjoPWbO2xHb
73/iUMwp0khPyz7j89lcoMRaExdePLRXnEp8bl2ZFLBjP5zJhw+fTPqEyfQT
NQNI14BtHG5slI4mBxsaVBcFvY19/0//0DyWfWxJTfyA6pX2/TNp0JrlAiX5
nq5FkDj1fb+x1sarO2+LHbje7fnBmX99TXxJEG8TrLsxeNpY9Nx4mWD+Sdfj
543TInFX5oLpMwdrM7rfDDaxW0HltxOn696T5izxRc76Fne149N/trO6uqam
JlNvxR0uNrgueo+Zy2vORsQNn9+1a9vMzbY+m/Y0iRxm/CAzbyPvjbzdJfbe
LS/HSLNEjnYm/tkz/UTNANI1YBvbKiuloZ6XX35ZdVHQ24iZrs0xpbv/7oeX
ItGpNdAvvuV7bKuRJcQns9O8N+/TdQyzsV7hdH+2qwlXjYlhDh0XLmjmc+yw
6s15vyPB6g9MnRk9/qoINu8Gm0VA/XLtVxNOSpkycaGp4E4zMmm2lne8Be2x
kbPHvx47vaHQaKbh+UHeLFO4CMYPKGK2MX8jfkul52QGnqiL92aL8Z+tITxu
1UPMjXQNZEvx6tVSuu7uPqe6KOjMWLs59llnTKQ0X/MV7//eut3Z7AygT7qe
Xvg4wRhdcrELYi5k2cSbw3HG0Hf7/0w12ZtKLA+fTLl/2sy6ITeP+NlYyEal
he6xqfUKI+/NbNPvZ6viHHL5nD82Hxr/PYo2fF7E43m+MwNP1OTGz7f+7X6X
y/X0kSPJtiefO9b4oZnu7uLM6Lnm577+N389x7eIrzb/8K0M/w8kXQNZ0d/f
Lw0CiP9UkYgWl8Ygl02Mn29/oX7bpwulC5eWrf/iXzW/1vXzZNf1W0SjdH0h
9pXuFJZoGbsljS9gpb9bj9ciQlQvWfaxJTXpjIHPpmtjLpAuqw0mkYE9Zm8T
F2KvFDDemX802MrdfuPMsdj+gQnfmgMI4p3lDoc0yyXh28ynX9I1kBWBQEBK
15966CHVRcFGrkfeuzw6Krbh4WFre2HNSZ90fbN9dGGqnavHzNXPp2eSLOB6
rtl7MKNOmsvW3zp2rX26zsAes8D0CW+L1yu21tbWxbw9cfzFwND71hZ7fegf
P3V77KBQafsv5vsmC3e7eTltKps8pJB8u+NYV4bHGUjXQFY8+8xRaVrIvro6
1UUB2aZNuo6dRO24/WspLGh+a7JdULeE2BmtU3ey91R817g53TIPX5umzXNY
9B6zwNXOyo8sm3soNcW3hVlZ1OZG78nYBy148j/mnURh4W6fGL86n+uRqand
ZqoXH859+6nrUDI++Yd0DWTFzupqaey6xetVXRSQbdqka5EfZl9WfvzVFAa+
MpCujYE7804WcMVW7Nzvxax6Hxm5eC70Rnf3OfH2jTcvnOnsXPzbrq6ujF85
uPg9lnnT7eXLMqFo2fos/ETiNxJ6dI15OpBKL0flu/3XZ75lPDQ9QwC9rSst
jf1vI94PhTKwbgKQX3RJ17dE5T9ufTs76XriUqh6yWxPvwUs/TN0Ykdsul7w
VNiM97susmap0MXvMUyJuVAxlQlF6nf7z44bs69J14DGLo+OSkci8b74pOq6
gGzTJF2Pn49dFyO1obkMpGtpPZpU2qNJjO4NM+l6EReaWbaaTMZDyGL3GKa8
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
      "], {{0, 892}, {970, 0}}, {
      0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {970, 892}, PlotRange -> {{0, 970}, {0, 892}}, ImageSize -> 
    288],StyleBox["\"Figure 4.83\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.83: Example \
1",ExpressionUUID->"2226c33c-350d-4278-a993-e4c18f82006c"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"d194fa68-c69b-436b-b35c-199a4770a13a"],

Cell[TextData[{
 "Noting that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}], "-", "5"}]}], TraditionalForm]],
  ExpressionUUID->"c095b980-385a-42ef-bcfa-7e8861ffad81"],
 ", Newton's method takes the form "
}], "Text",ExpressionUUID->"775f6f09-a674-4c07-9692-79eabd254299"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SubscriptBox["x", 
           RowBox[{"n", "+", "1"}]], "=", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "n"], "-", 
            FractionBox[
             FormBox[
              OverscriptBox[
               OverscriptBox[
                RowBox[{
                 SubsuperscriptBox["x", "n", "3"], "-", 
                 RowBox[{"5", 
                  SubscriptBox["x", "n"]}], "+", "1"}], 
                StyleBox["\[OverBrace]", "TypesetAnnotationFont"]], 
               StyleBox[
                RowBox[{"f", "(", 
                 SubscriptBox[
                  StyleBox["x", "TypesetAnnotationFont"], "n"], ")"}], 
                "TypesetAnnotationFont"]],
              TraditionalForm], 
             FormBox[
              UnderscriptBox[
               UnderscriptBox[
                RowBox[{
                 RowBox[{"3", 
                  SubsuperscriptBox["x", "n", "2"]}], "-", "5"}], 
                StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
               StyleBox[
                RowBox[{
                 RowBox[{"f", "'"}], 
                 RowBox[{"(", 
                  SubscriptBox[
                   StyleBox["x", "TypesetAnnotationFont"], "n"], ")"}]}], 
                "TypesetAnnotationFont"]],
              TraditionalForm]]}], "=", 
           FractionBox[
            RowBox[{
             RowBox[{"2", 
              SubsuperscriptBox["x", "n", "3"]}], "-", "1"}], 
            RowBox[{
             RowBox[{"3", 
              SubsuperscriptBox["x", "n", "2"]}], "-", "5"}]]}]}], ","}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"dade06e2-3504-41ec-8f5e-fde3fa1278da"]], \
"Text",ExpressionUUID->"9259fe41-8ad8-4209-b0b7-5ced846f75d6"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "51585e70-9d03-4aa4-a311-8d287015ff9b"],
 ", 1, 2, \[Ellipsis], and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "6904e66d-f10e-4224-8105-343107d072f8"],
 " is specified. With an initial approximation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "1eb0c659-00a4-4a8f-95da-00a2664f07be"],
 ", the first approximation is "
}], "Text",ExpressionUUID->"9fd2559c-6b37-4543-bcea-a597043c1f57"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["x", "1"], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", 
             SubsuperscriptBox["x", "0", "3"]}], "-", "1"}], 
           RowBox[{
            RowBox[{"3", 
             SubsuperscriptBox["x", "0", "2"]}], "-", "5"}]], "=", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "3"}], ")"}], "3"]}], "-", "1"}], 
            RowBox[{
             RowBox[{"3", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "3"}], ")"}], "2"]}], "-", "5"}]], "=", 
           RowBox[{"-", 
            RowBox[{"2.5", "."}]}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6dded617-8e54-4f31-acac-f52089276236"]], \
"Text",ExpressionUUID->"358a7660-faa9-4781-b5e6-84a24bb5f7f0"],

Cell["The second approximation is ", "Text",ExpressionUUID->"73c193c5-7694-4560-98e4-93b239cacfc3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["x", "2"], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", 
             SubsuperscriptBox["x", "1", "3"]}], "-", "1"}], 
           RowBox[{
            RowBox[{"3", 
             SubsuperscriptBox["x", "1", "2"]}], "-", "5"}]], "=", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"2", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "2.5"}], ")"}], "3"]}], "-", "1"}], 
            RowBox[{
             RowBox[{"3", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "2.5"}], ")"}], "2"]}], "-", "5"}]], 
           "\[TildeTilde]", 
           RowBox[{"-", 
            RowBox[{"2.345455", "."}]}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ecdddd06-946d-4abc-bbb3-0e1ff1bc86d5"]], \
"Text",ExpressionUUID->"c8680e0d-bdf9-48d4-b833-1fb91cc2cbb0"],

Cell[TextData[{
 "Continuing in this fashion, we generate the first seven approximations \
shown in ",
 "Table 4.5",
 ". The approximations generated from the initial approximations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "59b3c2c4-59e5-4d42-806a-1f9950da0a66"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "f701714e-2276-4d6a-af60-58d4afb980af"],
 " are also shown in the table."
}], "Text",ExpressionUUID->"6e31aa0d-6de9-49af-9e45-3edbd020ec5d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     PaneBox[
      StyleBox["\<\"Table 4.5\"\>", "TableFont",
       StripOnInput->False],
      Alignment->{Left, Center},
      ImageSize->{60, 14}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\\!\\(TraditionalForm\\`n\\)\"\>", 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False]},
    {"0", 
     RowBox[{"-", "3"}], "1", "4"},
    {"1", 
     TagBox[
      InterpretationBox["\<\"-2.500000\"\>",
       -2.5,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"-0.500000\"\>",
       -0.5,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.953488\"\>",
       2.953488,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"2", 
     TagBox[
      InterpretationBox["\<\"-2.345455\"\>",
       -2.345455,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.294118\"\>",
       0.294118,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.386813\"\>",
       2.386813,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"3", 
     TagBox[
      InterpretationBox["\<\"-2.330203\"\>",
       -2.330203,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.200215\"\>",
       0.200215,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.166534\"\>",
       2.166534,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"4", 
     TagBox[
      InterpretationBox["\<\"-2.330059\"\>",
       -2.330059,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.201639\"\>",
       0.201639,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.129453\"\>",
       2.129453,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"5", 
     TagBox[
      InterpretationBox["\<\"-2.330059\"\>",
       -2.330059,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.201640\"\>",
       0.20164,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.128420\"\>",
       2.12842,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"6", 
     TagBox[
      InterpretationBox["\<\"-2.330059\"\>",
       -2.330059,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.201640\"\>",
       0.20164,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.128419\"\>",
       2.128419,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"7", 
     TagBox[
      InterpretationBox["\<\"-2.330059\"\>",
       -2.330059,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"0.201640\"\>",
       0.20164,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.128419\"\>",
       2.128419,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]}
   },
   AutoDelete->False,
   BaseStyle->{"TR", 13},
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{
    "Columns" -> {False, False, False, False, False}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, False, 
       False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, Bold, {Automatic}}},
   GridBoxSpacings->{"Columns" -> {1, 1, 1, 1, 1}, "Rows" -> {1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 4.5",ExpressionUUID->"70a6529c-f5c2-4201-97e7-b58c740d3589"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"db5bf8d2-c6b5-4139-99bf-69e05895edd9"],

Cell["\<\
The numbers in Table 4.5 were computed with 16 decimal digits of precision. \
The results are displayed with 6 digits to the right of the decimal point.\
\>", "Callout",ExpressionUUID->"1f5d7964-353e-469f-a1da-e09119c6ddd4"]
}, Closed]],

Cell[TextData[{
 "\tNotice that with the initial approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"-", "3"}]}], TraditionalForm]],ExpressionUUID->
  "3dfa3424-06b8-4a11-b3e4-790f07aa0b68"],
 " (second column), the resulting sequence of approximations settles on the \
value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2.330059"}], TraditionalForm]],ExpressionUUID->
  "9bd3ba61-263d-4cd5-8284-915dc5c3f68a"],
 " after four iterations, and then there are no further changes in these \
digits. A similar behavior is seen with the initial approximations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "f635036e-e9ea-4ad2-9c0f-21ceba847d45"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2e585073-8e48-4430-8143-32ac34494845"],
 ". Based on this evidence, we conclude that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2.330059"}], TraditionalForm]],ExpressionUUID->
  "9dd5454c-0f37-42c2-a8ad-fcba4bf1e7a7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "0.201640"}], TraditionalForm]],ExpressionUUID->
  "18defd60-9e60-4950-8b4f-aa139211c0e7"],
 ", and ",
 Cell[BoxData[
  FormBox["2.128419", TraditionalForm]],ExpressionUUID->
  "e2322fdb-037c-4211-b471-fd562258c1fb"],
 " are approximations to the roots of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3e2ec6ad-b159-40eb-b974-3ff429395fcb"],
 " with at least six digits (to the right of the decimal point) of accuracy.\t"
}], "Text",ExpressionUUID->"9fe3e0cd-dbf1-4abe-8740-ac2be04733f2"],

Cell[TextData[{
 "\tA graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9e0824b9-c918-4cac-8a30-28c79333ba87"],
 " (",
 StyleBox["Figure 4.84", "FigureFontText"],
 ") confirms that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "fd442e43-9e3e-48f4-b585-1289b5650519"],
 " has three real roots and that the Newton approximations to the three roots \
are reasonable. The figure also shows the first five Newton approximations at \
each root.",
 Cell[BoxData[
  FormBox[
  Cell["",ExpressionUUID->"bcc689c1-a9ed-425e-8adf-7b7da3b2139e"], 
   TraditionalForm]],ExpressionUUID->"63a4e0ed-c523-4a34-9f8b-9003f4978bd8"]
}], "Text",ExpressionUUID->"24fb5682-be07-4b45-9672-ea24985a02ec"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`initialRoot$$ = {-3., 
              0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
            0.664449, $CellContext`xMax$$ = 
            5, $CellContext`xMin$$ = -4, $CellContext`yMax$$ = 
            45, $CellContext`yMin$$ = -25, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold["select initial value"], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold[
                Grid[{{
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \(-3\
\)\)", 11], $CellContext`initialRoot$$ = {-3., 0}, Appearance -> "Palette", 
                    Alignment -> Left]}, {
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 1\)",
                     11], $CellContext`initialRoot$$ = {1., 0}, Appearance -> 
                    "Palette", Alignment -> Left]}, {
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 4\)",
                     11], $CellContext`initialRoot$$ = {4., 0}, Appearance -> 
                    "Palette", Alignment -> Left]}}, Spacings -> {0, 0}]], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold["select approximation"], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`nValue$$], 0, ""}, {
               0 -> Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                  16}], 1 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \[Rule] \
\*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}}, {
               Hold[
                Pane[
                "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`initialRoot$$], {-3., 0}}, {-4., 0}, {
               5., 0}, {0.01, 0.1}}, {{
                Hold[$CellContext`rootValue$$], 0.664449}, 0}, {{
                Hold[$CellContext`xMin$$], -4}, 0}, {{
                Hold[$CellContext`xMax$$], 5}, 0}, {{
                Hold[$CellContext`yMin$$], -25}, 0}, {{
                Hold[$CellContext`yMax$$], 45}, 0}}, 
            Typeset`size$$ = {630., {316., 323.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`nValue$58598$$ = 
            False, $CellContext`initialRoot$58599$$ = {0, 0}}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`initialRoot$$ = {-3., 
                 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
               0.664449, $CellContext`xMax$$ = 
               5, $CellContext`xMin$$ = -4, $CellContext`yMax$$ = 
               45, $CellContext`yMin$$ = -25}, "ControllerVariables" :> {
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$58598$$, 
                False], 
               
               Hold[$CellContext`initialRoot$$, \
$CellContext`initialRoot$58599$$, {0, 0}]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`rootList$, $CellContext`xZero$}, \
$CellContext`xZero$ = 
                Part[$CellContext`initialRoot$$, 1]; $CellContext`rootList$ = 
                NestList[# - $CellContext`funcC4F84[#]/Derivative[
                  1][$CellContext`funcC4F84][#]& , $CellContext`xZero$, 7]; 
               Show[{
                  Plot[
                   $CellContext`funcC4F84[$CellContext`x], {$CellContext`x, \
-4, 5}, PlotStyle -> {Thick, $CellContext`bcB}], 
                  Graphics[{
                    Text[
                    "\!\(TraditionalForm\`f(x) = \*SuperscriptBox[\(x\), \
\(3\)] - 5  x + 1\)", {1, $CellContext`yMax$$}, {-1, 1}], 
                    If[$CellContext`nValue$$ >= 1, {$CellContext`bcR, 
                    AbsoluteThickness[0.5], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} - 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F84[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} + 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F84[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}]}], Dashed, 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 0}, {
                    
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F84[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}}], 
                    Dashing[{}], 
                    AbsoluteThickness[2], 
                    Arrowheads[{0, 0.025}], 
                    Arrow[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F84[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}}]}, Black], 
                    If[$CellContext`nValue$$ >= 1, 
                    Table[{
                    AbsoluteThickness[1], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`i + 1], -1}, {
                    Part[$CellContext`rootList$, $CellContext`i + 1], 1}}], 
                    $CellContext`ClosedCircle[{
                    Part[$CellContext`rootList$, $CellContext`i], 
                    $CellContext`funcC4F84[
                    Part[$CellContext`rootList$, $CellContext`i]]}], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`i], \
$CellContext`bcFO, Background -> White], {
                    Part[$CellContext`rootList$, $CellContext`i + 1], -5}, {0,
                     1}]}, {$CellContext`i, 1, $CellContext`nValue$$}], 
                    Black], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", 0], $CellContext`bcFO, 
                    Background -> White], {$CellContext`xZero$, -5}, {0, 1}], 
                    
                    Text[
                    Grid[
                    Table[{
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], 
                    " = ", 
                    NumberForm[
                    Part[$CellContext`rootList$, $CellContext`i + 1], {6, 
                    5}]}, {$CellContext`i, 0, $CellContext`nValue$$}], 
                    Spacings -> 0, 
                    Alignment -> {{Right, Center, "."}, Automatic}], {
                    Left, Top}, {Left, Top}], 
                    AbsoluteThickness[2], Orange, 
                    Line[{{-2.330059, -1}, {-2.330059, 1}}], $CellContext`bcG, 
                    Line[{{0.20164, -1}, {0.20164, 1}}], Magenta, 
                    Line[{{2.128419, -1}, {2.128419, 1}}], Black, 
                    Text[
                    Framed[
                    Subscript["\!\(TraditionalForm\`r\)", 1], {
                    RoundingRadius -> 5, FrameStyle -> Orange}, Background -> 
                    White], {-2.330059, -5}, {0, 1}], 
                    Text[
                    Framed[
                    Subscript["\!\(TraditionalForm\`r\)", 2], {
                    RoundingRadius -> 5, FrameStyle -> $CellContext`bcG}, 
                    Background -> White], {0.20164, -5}, {0, 1}], 
                    Text[
                    Framed[
                    Subscript["\!\(TraditionalForm\`r\)", 3], {
                    RoundingRadius -> 5, FrameStyle -> Magenta}, Background -> 
                    White], {2.128419, -5}, {0, 1}]}]}, 
                 PlotRange -> {{$CellContext`xMin$$, $CellContext`xMax$$}, \
{$CellContext`yMin$$, $CellContext`yMax$$}}, AspectRatio -> 1, ImageSize -> 
                 7 72, BaseStyle -> $CellContext`bcBSG, Ticks -> {
                   Range[$CellContext`xMin$$, $CellContext`xMax$$], 
                   Range[$CellContext`yMin$$, $CellContext`yMax$$, 10]}, 
                 AxesStyle -> Arrowheads[0.02], 
                 AxesLabel -> {
                  "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
                   "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 
                 Method -> {"AxesInFront" -> False}]], 
             "Specifications" :> {"select initial value", 
               Grid[{{
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \
\(-3\)\)", 11], $CellContext`initialRoot$$ = {-3., 0}, Appearance -> 
                   "Palette", Alignment -> Left]}, {
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 1\)", 
                    11], $CellContext`initialRoot$$ = {1., 0}, Appearance -> 
                   "Palette", Alignment -> Left]}, {
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 4\)", 
                    11], $CellContext`initialRoot$$ = {4., 0}, Appearance -> 
                   "Palette", Alignment -> Left]}}, Spacings -> {0, 0}], 
               Delimiter, 
               "select approximation", {{$CellContext`nValue$$, 0, ""}, {
                0 -> Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                   16}], 1 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}, ControlType -> SetterBar,
                 Appearance -> "Vertical"}, Delimiter, 
               Pane[
               "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`initialRoot$$, {-3.,
                   0}}, {-4., 0}, {5., 0}, {0.01, 0.1}, ControlType -> 
                Locator}, {{$CellContext`rootValue$$, 0.664449}, 0, 
                ControlType -> None}, {{$CellContext`xMin$$, -4}, 0, 
                ControlType -> None}, {{$CellContext`xMax$$, 5}, 0, 
                ControlType -> None}, {{$CellContext`yMin$$, -25}, 0, 
                ControlType -> None}, {{$CellContext`yMax$$, 45}, 0, 
                ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {828., {344., 352.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC4F84[
                  Pattern[$CellContext`x, 
                   Blank[]]] := $CellContext`x^3 - 5 $CellContext`x + 1, 
                Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], $CellContext`i = 
                1, $CellContext`ClosedCircle[
                  Pattern[$CellContext`coord, 
                   Blank[]], 
                  Optional[
                   Pattern[$CellContext`color, 
                    Blank[]], 
                   GrayLevel[0]]] := {$CellContext`color, 
                  AbsolutePointSize[7], 
                  Point[$CellContext`coord]}, 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`bcG = 
                RGBColor[0, 0.6, 0.4], 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 4.84\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.84  \[LightBulb]: Example \
1",ExpressionUUID->"c50beb3d-858c-45e2-9e04-1b85d11b3c3a"],

Cell[TextData[{
 "Related Exercises ",
 "13\[Dash]14",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"7c7f15aa-3855-4f10-8456-ddaea04d1da4"]
}, Closed]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FrameBox[
   StyleBox[
    RowBox[{"Quick", " ", "Check", " ", "2"}], "QuickCheckFont"],
   Alignment->Center,
   Background->GrayLevel[0.93],
   BaselinePosition->(Baseline -> Baseline),
   FrameMargins->{{5, 5}, {2, 4}},
   FrameStyle->GrayLevel[0.93],
   RoundingRadius->5]],ExpressionUUID->"f689c2c6-e972-434f-a317-a8542de1f97f"],
 "  What happens if you apply Newton\[CloseCurlyQuote]s method to the \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"f59d51bd-23ea-46c3-aa25-8f2f93b1d24b"],
 "?  \[FilledDiamond]"
}], "QuickCheck",
 CellTags->
  "Quick Check 2",ExpressionUUID->"d5ef4985-749d-44e1-b209-bbfaf16eb12a"],

Cell[CellGroupData[{

Cell["Answer  \[RightGuillemet]", "QuickCheckAnswerIcon",ExpressionUUID->"97ffda57-fb95-4440-b6d0-6dfc26635a6f"],

Cell[TextData[{
 "Newton\[CloseCurlyQuote]s method will find the root ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "2f93041d-5289-4b9a-b6e2-2da41ee07694"],
 " exactly in one step."
}], "QuickCheckAnswer",ExpressionUUID->"0d26027c-9509-488f-a63b-ed80bd83c573"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["When Do You Stop?  \[RightGuillemet]", "Subsection",
 CellTags->
  "When Do You Stop?",ExpressionUUID->"c272b7b7-1701-4d5b-bace-65e0b1126ddb"],

Cell[TextData[{
 "Example 1 raises an important question and gives a practical answer: How \
many Newton approximations should you compute? Ideally, we would like to \
compute the ",
 StyleBox["error",
  FontWeight->"Bold"],
 " in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "c6d31c4b-4d4d-4fe5-90e4-98e6e2336c2a"],
 " as an approximation to the root ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "510e5edc-a5f7-4cba-80f3-a8e66825b76b"],
 ", which is the quantity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftBracketingBar]", 
    RowBox[{
     SubscriptBox["x", "n"], "-", "r"}], "\[RightBracketingBar]"}], 
   TraditionalForm]],ExpressionUUID->"42f3e6ec-e133-4a01-bf94-979d5a22ce9e"],
 ". Unfortunately, we don't know ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "16115e94-e5bb-4f06-9b51-59fbe93bc0ba"],
 " in practice; it is the quantity that we are trying to approximate. So we \
need a practical way to estimate the error."
}], "Text",ExpressionUUID->"68d4137f-5b21-496c-a091-4821e5c5ea45"],

Cell[TextData[{
 "\tIn the second column of Table 4.5, we see that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "4"], TraditionalForm]],ExpressionUUID->
  "3202417c-403b-4ab4-bba6-0a35281594a4"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "5"], TraditionalForm]],ExpressionUUID->
  "922e6340-64f3-4146-b242-33e665100b15"],
 " agree in their seven digits, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2.330059"}], TraditionalForm]],ExpressionUUID->
  "a5ae21e7-99de-400b-81f8-3a1f8017a8f2"],
 ". A general rule of thumb is that if two successive approximations agree \
to, say, seven digits, then those common digits are accurate (as an \
approximation to the root). So if you want ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "6b4f60b5-6163-492b-afa9-f7517bac6255"],
 " digits of accuracy in your approximation, you should compute until either \
two successive approximations agree to ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "742e6cd6-def7-43b5-aa8f-c8c5f44de271"],
 " digits or until some maximum number of iterations is exceeded (in which \
case Newton's method has failed to find an approximation of the root with the \
desired accuracy)."
}], "Text",ExpressionUUID->"f4e2a364-cbe3-4ef7-ae5e-a31f2ba4ebbd"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"83fc90be-3306-40ae-baea-a825c41552b6"],

Cell["\<\
If you write a program for Newton\[CloseCurlyQuote]s method, it is a good \
idea to specify a maximum number of iterations as an escape clause in case \
the method does not converge.\
\>", "Callout",ExpressionUUID->"0211aebb-9ff5-426f-997a-b56645171a52"]
}, Closed]],

Cell[TextData[{
 "\tThere is another practical way to gauge the accuracy of approximations. \
Because Newton's method generates approximations to a root of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "03516cbb-4e55-46eb-971e-86a9f978a4c0"],
 ", it follows that as the approximations ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "16772151-f151-4198-a37b-0985ddf87ac6"],
 " approach the root, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "efdeb543-6905-4840-a59f-877966302f7b"],
 " should approach zero. The quantity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "ce64e82a-21dd-427e-ae0a-c923b363f184"],
 " is called a ",
 StyleBox["residual",
  FontWeight->"Bold"],
 ", and small residuals usually (but not always) suggest that the \
approximations have small errors. In Example 1, we find that for the \
approximations in the second column, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "7"], ")"}], "=", 
    RowBox[{
     RowBox[{"-", "1.8"}], "\[Times]", 
     SuperscriptBox["10", 
      RowBox[{"-", "15"}]]}]}], TraditionalForm]],ExpressionUUID->
  "b46cb89b-24fe-4120-8c58-50f0e6e2b6c5"],
 "; for the approximations in the third column, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "7"], ")"}], "=", 
    RowBox[{"1.1", "\[Times]", 
     SuperscriptBox["10", 
      RowBox[{"-", "16"}]]}]}], TraditionalForm]],ExpressionUUID->
  "0d6bbf9d-6250-4e43-a62f-6533b8fedf06"],
 "; and for the approximations in the fourth column, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "7"], ")"}], "=", 
    RowBox[{
     RowBox[{"-", "1.8"}], "\[Times]", 
     SuperscriptBox["10", 
      RowBox[{"-", "15"}]]}]}], TraditionalForm]],ExpressionUUID->
  "4b9e4e74-90c9-43b4-a706-c1d08478cbdf"],
 ". All these residuals (computed in full precision) are small in magnitude, \
giving additional confidence that the approximations have small errors."
}], "Text",ExpressionUUID->"93332758-8bd6-419a-bbb5-b5569410cb2a"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"9df13633-f100-4a91-9df1-3bb0fc217bfb"],

Cell[TextData[{
 "Small residuals do not always imply small errors: The function represented \
by this graph has a zero at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "e6f15078-a417-4520-8a1d-c90094730178"],
 ". An approximation such as 0.5 has a small residual, but a large error. \n\t\
",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
IZOaDBN7HwnrvgJF+PLuF3IE5CjMg0hrX2HeROzaoFtdG91XnyNaXP+ocurb
9fc7/Mvi6m7IEdN34x0/OQIoQpgDIUdAfsK6TGntK8xdjF0bdK3KZF17eXTg
1eTGVvdJGccYnlsprub5Nx/W+9SPt643R3IEUISwJlNaHyes4RS7NiiDsE9E
WhsL67DErg26V6V+jkT/UPLz5S3u07DO02O7R5JfFzgmcP0HD8dQ+n50Jerx
kyOAIoS95tL6OGFPidi1QRmcO3s2tY2Ffa5j1wbd7OO3XqxrM8/O3Nz8Pg37
1/WNXmp62y9WbiaLN1fa2iuuTm2GaSXz5EyOAIpQqVRS+zhhvenYtUEZTE1N
yRGwHQ3jC30H3tn0WqHfvNhX08YGk4ml9NtVJg/XzWMYr6SsTfjpH5LzE5Nr
3wP87dUbycoWtS7+5ODDOk/H32tBjgCK0CxHDA4ORq8NymD6venUNva9kZHo
tUG3uzv7amtjEjVzE4JvTN9Iv90fN7bHDXO4wzyLfbsa1n0aSX72D5+lPubS
1LGHjzW8edYpihwBFCHsUZnWx/nO009Hrw3K4P0LF1Lb2HdfeCF6bdAL6q5v
6h9KxhYa9mVYvFi3b91m1zM1XvtUHedYql0bNiVHrH/HdvpXSeX2g9vduXkt
mR59uPfc3hO/qn+ciOQIoAjNcsSB/fuj1wZlMHNxJrWN+WyH1tVeixTsOzq2
NtY3PnqooZ8/u/mch88+SPb1N+SIlLVhG9eP3UzfwPebjlXEIkcARbhSc66p
dXBoKHptUAZzTdqYz3bI5t7H88nUiZc25IAwF2JkdDyZXWpt/+il86fWH+Ox
4ePp+8Xdv5XcuDCeHB0eapIfBpPnV7NMmDsR+7ikkSOAIly6fFkfB3Ikq0Pn
hb2PgpWV1rJDW+4/eK6wTnpQyHO2SY4AitDsmovnn3suem1QBq4dBIomRwBF
MAcU8mUtA6BocgRQBGtSQr6srQwUTY4AimCPLMhXsz3j7fUI5EWOAIowMfFu
ah/nyJEj0WuDMgjzMtPa2DefeCJ6bUA5yRFAEd4581ZqH+fYsWPRa4MyCOu8
pLWxx/fsiV4bUE5yBFCEM2fOpPZxThw/Hr02KIMv737RdP+q2LUB5SRHAEV4
/bVTqf2bkydPRq8NyqJZjggZI3ZtQPnIEUARQl5I69+EfBG7NiiLcA1TWjvr
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
4Xwazq1B9Vwbzr1B7fm49jwdztvV83gQzuvhHB80nvtrPxtqPzNqP0uCtM+b
8DlU+9m0lXY+K2tVP3vD8f/eyEhyaPVzObTlMMYQPhOa7UGdRXj8PPqncsTW
Wr2upHaMIrwvQtuJXTvFKCJHBOHcHc4F7Z5P6G7hHBLmvQQh94VrWYPweRKE
HBiE75aC8FlzcFX4LiMInz/VnBiE62WD8NkUhOwYPquC8LnVmCOrWTIt922W
75plu+rnfTXXVbNdNddtlu2q+a5Wbc6rNVeT+RqzXzX/1ebAtDxYmwtr82Gt
ap8p/Kyq9qVq+1aNqn2vtJ9bqfbd0n6GY1R974T3wVb3aVVarc3UHoNGacew
sc/ZqPE1anwta1/jatavvv6NfdTafmpjX7VZn7W231r7vm2139qsr5rWB63t
Q1Z/VvuTI1+112rbDe04tOlqG68K7T689kNfCeeF6nkiqJ47wnkknFOCcH4J
55rwmRX7nEd+wmse3vd59UvkiNb6iOF12M7rF9poaPPhfBLOZdbWKaeickRV
+Kw82OK1kADAzhL6IqFfn/c1MuZHtKb2+552he8GwncO4buNXh+zCN9RtTL2
V3aN+80X9bzhe6pOXOsEAPS+kB/C94yhn1lEPySMhVWfO4yDxe6PdbPtjkm0
8pqHccmQG8PYUy+NWWSZPwIAAOQrXMcYro8M115285hF7fxQAAAgnjCnIsyl
qs6p6Ob9xUJtaWvl7CRhTdba6wOD8Lvav3fyv8PPxv9uRbh9df5f9Vqsxjl9
tfP6ihDe59WfaapzhKvzhZvNL6z+rHXwq7nHVWG8tfqzUe18xNo5ibVzE6uq
cxSr8xSrQrutCmOMVeH9YB4jUBa157eq6rmv9pxYXSeidq2I6jm0ds2I2rUj
qutH1K4jUVV7Hq9dV6J2fYnadSZq1X6G1H6uvLT6t9rPnNrPpfC3QwV9Fjau
exFU17oIcw7C53boZ2T5vG/8mdd/h/qr741wrPN+vl797yCv65pCuwj9ubA+
hH0oelPR86wph+qaimHMsfr+CeeZL1Zu1q2Ds9mairVr11ypWa+mlfUU09al
qa6tFFQzcuN6NGlrJ4bPuqrGuUO1a9LUrk1Tq1mObcyVjXkyLUe2mh/TMmRa
jgwa+0JpubJZxmzMm2n/vzaHZlGbV2vPQdW/bfdxG2tr9u+p7SvWqh6bxuNV
PZaNxzftdWj2mjX2Jxv7lI39ycb+Y2N/sdqPq66B3difa1zHLG09s+p7v9oW
GtcYrfYDq6r9isa1zNLWMUtbv6x2Laq5mrbfuD7Z4sJ86trU1fW1whzH2v2J
wjFIW5samjHPujWhfXciM4TzcWin1bEGe02UQzjfyhFsV+08I/tHkFXIjbXf
B8auh95iHzraYd3XrYW8vt09QMJ3JuF7i9BOO7kPOd3FeATtsJ817bhiHzra
IEfQDjlia1n3/Qr9gHBcQ/6IXTvFkCNohxxBO+xnTTvkCNrhuqbNhWsMW80P
of2F74Vi10zx5AjaIUfQDjmCdoQ5GHIE22U8YnPhuqStxh7OnT5t7GGHkyNo
R22OMD+CrOQI2mE8gnbIEc2FNRSa5YdwrVMYq4hdI91BjqAdxiNohxxBO4xH
0A45Il3a3OowNhGyRTfv50AccgTtMB5BO+QI2mE8gnaYH5EutKXqOq1hvaVu
3lOa+OQI2mE8gnbIEbTDeATtMB6xUbheKexhEzK6/R1ohRxBO4xH0A45gnYY
j6AdcgS0T46gHcYjaIccQTuMR9AOOQLaJ0fQDuMRtEOOoB3GI2iH+RHQPjmC
dhiPoB1yBO0wHkE7jEdA++QI2mE8gnbIEbTDeATtkCOgfXIE7TAeQTvkCNph
PIJ2yBHQPjmCdhiPoB1yBO0wHkE7zI8AgN4lRwAAAFnJEQAAQFZyBAAAkJUc
AQAAZCVHAAAAWckRAABAVnIEAACQlRwBAABkJUcAlMD9W8ny8nKytLSUrGxx
2y9Wbq7dbnHlTvy6AehZcgRAb7q9uJDMTJ5Kjg4PrZ/Hg0cHXk3m76Xdp5JM
vXSg7rbPn69E/3cA0JvkCIAec+9aMvZIf10eaPTS3Kf197l9JTn+tY336Tvw
zpbjFwCQRo4A6DWVZOrUeHL+ysLatUm3r00nw/0N+eDEBw9vv0nu6Bv+mRwB
wLbIEQC9b/EnB+uvbXrqx8mN8Lf7t5LfvNj3IDMc/mVSub2SfDh1Onlp9Xz/
7KGjyfnFf4teOw/dqcwl52YWinvO1ffHJwt/n8xcnElmZ2cf/FyoJLe74FhQ
ntfvn/7qmbXvLLqtLtonR+xAPXDecc7pPfo/kS38tH6soX8omb775+TmxL9/
kCEOTSVL97ugTlLd+3g+mTh6YD0D5v5arbafKxOjyb7+ZtfGDSaHx2e8Z7pV
N7x+X10rOTg42NTeoaHVnw/GQvedX4x/3Og4OWIHiX3ecc4pJf2fLnH3d8nR
XfXXLh0bP712vdNju0eSX9/tghrZILSfc0eHi52zcu9aMv7U7vXnC++PN+c+
XFvva3H+fPKDmr89MjCazN6Of5zovtfv47de3HSOVq1Q42932jl5h5Ajdogu
OO8455SL/k+XWc1Xv3j2a63NuSa6B+3nQOrrlWs7un8z+cW+XXXtZOPaXpW6
99Jju9JuQxTd8vqtnovT1m1opu9HV+IfO3IhR+wA3XDecc4pDf2f7tU4R2Lt
NTn8y517rVeXWjk38uC1Gfh+MvbGWPLKQH9h7ajxPXLqw7vpt/3kYt2YX9/R
mejHje55/T6feqX17wX7n09+vhz/2JEPOaL8uuG845xTDvo/XW7uhxva03+5
cS9+XdRZmb+UzF67+fB3DXNbcmtHn31Q3zYOTW2aMa+N7qur6/D87ejHbkfr
mtevsr7+W926cOxIckTJdcV5xzmnLPR/utzqcapb/7V/SCbvBQW1o8YsvuX1
bpXJ+rq2aHfkq1tevz9dOu78wjo5oty64bzjnFNi+j/dJcyRqLn2a+28PrcS
vy42V0g7qtTvIbJ6Pj7/2Rb3ufu7+utRncMj6pLXr+b6Ut8LEsgRZdYF5x3n
nHLT/+kuf5zesI6VuUY9oIh21PAc6/uLbCZl7v43pm/EP147Ube8fvNv1jze
YPLS0VeTU5PnkpkrH9rPcoeSI0qsG847zjnlpv/TRSp1a1nVviY7bg3cXlNA
O/r96N7652hx/n3l1LP197P/eRRd8frV7GnZzLOj48ns0g65jpQ1ckR5RT/v
OOeUn/5P10hbqymwd0QPyLsdpeTqvvF/bOm+69elej/F0y2vX+VvNv08r3Xw
xPTW3/dQCnJESXXDecc5p/z0f7rDV69D+Df+amXjuMSJhTvxa2TL1y+3dtR4
nV+GdtRYW1hP7++2uq6QzuqS12/x9Ldb/kyvno/++p+brKtHacgRJdUF5x3n
nB1A/ye+e9fW549U16Wae6V+DGfw3If191nNZ5VKZWfMPe8Febej21eSkd31
7ajlNcxS2tGW85PorG55/e7fTD5aXEwWF+aT2fPnktOjhzfMx9rwue79Unpy
REl1w3nHOaf89H+iu/yf/vLBsT+9sP672+eP1b8uDetVVfcBeemacYquUEAe
P7qrM+0o030p/+t3/9baeuDjo89ueJ7a97M5WuUlR5RUt553nHPKRf+nOKHt
rNyuywOViRcfHPfhn9W3mcrf1GX2MNb32+rfvzouO3Gf6xsXxpO3x8eTycnJ
XLxz5q3k/OK/Za8t73aUso7Xjm1Hvfj+6ZXX71/mkrEDG9d6CPadX4z++pEP
OaKkeuG845zT+/R/irF6HNb3l+sfSkan55IrE698lRFeSbleq2Gt3FV7x+eS
/3H1v64dz5ArSnmN12ZuX6nfoy8nL27nPZZ3O5of235bKFM76tX3Ty+9fvdv
JR+c2Pg94Y7Zw2cHkiNKqlfOO845vU3/pxDN1mIKayn/6L9/mXqfxnWuao3O
/2v0f1PhvpprMzg4mAwMDOTyM7weR7czpz3vdtS4z/kObUc9+/7ptddv9XO9
er1lVfi+47euMyglOaKkeum845zTu/R/CvH51CupeeDwpU3G7eZ+mHofY31d
qMeuD9xWVmJnvX4Nc9tKu84FckRZ9dp5xzmnN+n/FOPTPySnhwfq2sepK0ub
36dxrK9/KHn1UiX+v4WNemy9AufmgvXo69e4h4/1p8tJjiipHjzvOOf0IP2f
Qt25cyf5/NatbPdbzROZ70Ox8m5HNWsDrz9HG+snl3Hds67Wq69fw5hor44H
szk5oqR68bzjnNN79H+gfT21n6NrTgvXq69fzfva+be85IiS6sXzjnNO79H/
gfbl3Y5WXRvdV/8cLa5lUTn17fr7Hf5l/OO1A/Xk6+czfUeQI8qr5847zjm9
R/8H2ldAO/pzZbLuOR4deDW5sdV9UnL88NxK/OO1E/Xi6zf/5sN6n/rx1vXS
k+SIEuu1845zTu/R/4H2FdGOGvcU6R9Kfr68xX0a1jkI+478+m4XHK8dqfde
v9rvcvp+dKULjiF5kCPKrLfOO845PUj/B9rXgXb0xcrNZHl5edP7ffzWi3XP
8+zMzc0ft2H/lr7RS/GP1Q6W5+vXyvsnk9pzcCvnbHqWHFFuPXPecc7pTfo/
0L7GdjScrR1VJg/XXRM6Xmmy1l1Dvg7tdbOxvd+82FdT12AysdQFx2ony+n1
a+n98+kfkvMTk8m5s2eTv716Y8v3Z+3emX2nF+IfO3IjR5RcrPOOc87OoP8D
7WtYqy68v5daXRPgj9N19127/yZziO7OvtpaJq+5zjT4xvSN+MeJzr9+rbx/
wnWi+3bV3SaM8f7sHz5LfcylqWN1nwmuUS43OaL8Cj/vOOfsHPo/0J47HyYT
B3ZtaAuj8//a2v0bxt5aaYd143v9Q8nYQsMa24sX6/ZtMZ7XXTr6+rXy/kn5
TK8aPP2rpHL7we3u3LyWTI8+3Adq74lftf55QM+SI3aGQs87zjk7g/4PbM/q
+/T1104lJw4Pp54n19+/QyPJsRMnklfHZ5uvUfbZB8m+/ob7tbA2We1YYLDv
6Fgy/d50Mj56aMM5u5X10ShWx16/Ft8/jevfbfq+Hfh+0+8NKR85Yuco8rzj
nFNS+j/Qvk//kEydGk8mJt5NJicn637WCr97e3w8efP8tU0fb+n8qfW29Njw
8db3bQ91nHhpQzsM1wKOjI4ns0v2Au1qHXr9Wnr/3L+V3LgwnhwdHmpy3h9M
nl89F4frmKMfFwolR+wwRZ13nHPKSf8HSunzW7fWrKxoO72oyNfvy7tfrD1X
WB8jCP8d+99PPHLEzlXUecc5hzzp/wBAHHIEAACQlRwBAABkJUcAAABZyREA
AEBWcgQAAJCVHAEAAGQlRwAAAFnJEQAAQFZyBAAAkJUcAQAAZCVHAAAAWckR
AABAVnIEAACQlRwBAABkJUcAAABZyREAAEBWcgQAAJCVHAEAAGQlRwAAAFnJ
EQAAQFZyBAAAkJUcAQAAZCVHAAAAWckRAABAVnIEAACQlRwBAABkJUcAAABZ
yREAAEBWcgQAAJCVHAEAAGQlRwAAAFnJEQAAQFZyBAAAkJUcAQAAZCVHAAAA
WckRAABAVnIEAACQlRwBAABkJUcAAABZyREAAEBWcgQAAJCVHAEAAGQlRwAA
AFnJEQAAQFZyBAAAkJUcAQAAZCVHAAAAWckRAABAVnIEAACQlRwBAABkJUcA
AABZyREAAEBWcgQAAJCVHAEAAGQlRwAAAFnJEQAAQFZyBAAAkJUcAQAAZCVH
AAAAWckRAABAVnIEAACQlRwBAABkJUcAAABZyREAAEBWcgQAAJCVHAEAADXu
30o+Wfj7ZObiTDI7O/vg50IluR27rgb/9FfPJH3DP4tWlxwBAAB/XssPVyZG
k339X1/vH9cbTA6PzyRL93Os4faV5PjX+pPBwcGm9g4Nrf7sX6tp3/nFaMdL
jgAAYMe7dy0Zf2r3er/4sd0jyZtzHybLy8vJ4vz55Ac1f3tkYDSZvZ1PHR+/
9WKTDLNRqPG3eWaaLcgRAADsaPdvJr/Yt6suJ8zfa7xdJfnFs1972IfflXab
Nq1mmTAW0WqO6PvRlajHTY4AAGAnW/zJwbr++akP76bf9pOLddc89R2d6Wgd
n0+90vpYRP/zyc+X4x43OQIAgB3rsw/qs8GhqU3nLV8b3VfXnz88f7tDtVSS
sUcejEX0nfgg+fLuF/GPzRbkCAAAdqrGsYiX5j7d/D4LP62/tmiL3NGqP106
/uAx+4eijzO0So4AAGBnejgGUO3Dn/9si/vc/V39HIZO9Ptr5meEsYj4x6U1
cgQAADtSw9jCo0/9OLmx1X3u36qbbx18Y/pGe3XMv1m3tuxLR19NTk2eS2au
fJisxD5Gm5AjAADYiX4/urf+GqXDv2zpGqXKqWfr7zf8s+3391dzyW9e7Nt0
TvWzo+PJ7FKn5mF0jhwBAMCOkzKu0Df+jy3dd30uQ80+Dr++u806KpMtr9F0
8MT01uMlBZIjAADYcRrnOWTIEY3XQ4U1WP9uq3kVTSye/nbLOaKaWf76n5us
S1swOQIAgB3n9pVkZHd9jmh5DdeUHLHtudb3byVLS0vJ4sJ8Mnv+XHJ69HDd
OrTN9o7Ycj54AeQIAAB2nLu/S47u6kyO6Ow+En9eyxYr85eS8dFnm2aJvgPv
JEv34x5DOQIAgFhuXBhP3h4fTyYnJ3Pxzpm3kvOL/7bxuf84veF7/67JEbX+
ZS4ZO7A7NUvsO7/Y1mMfOXIkef6557btwP7967V884kn1rLEdh8r3Pfq1avR
348AAPSAu79Lhre4hqcTXkzr48+PbT8LFJkjgvu3kg9ObBybaHcPvNoc0A3e
v3Ah/nsSAIDu99Vc54GBgWRwcDCXn2E/hqMLdzY+92cfbMgwXZsjgtUscfk/
/WXDnOtXkt+2cW2THAEAABl1eH5EalbptNXsUzs3vJ11ooJwHdGly5dbNjs7
u/4zOHPmzHotIZNkeazGxwyWl5fjvy8AAGAzHV6vqZ3+fBaNe+CdKCK/NHHF
PGsAAHaae9eSsUc6t39EYeuwzv2w2OupNmG9JgAAdpyO7mfd3jyFTGoyTOx9
JOQIAAB2omuj+7a1/lHl1Lfr73f4l8XV3ZAjpu/GO35yBAAAO1Jlsi4PPDrw
anJjq/ukjGMMz60UV/P8mw/rferHW9ebIzkCAICdqVI/R6J/KPn58hb3aVjn
6bHdI8mvCxwTuP6Dh2MofT+6EvX4yREAAOxUH7/1Yt3YwrMzNze/T8P+dX2j
l5re9ouVm8nizZW29oqrU5thWsk8OZMjAADYsRrGF/oOvLPptUK/ebGvJkcM
JhNL6berTB6um8cwXklZn/XTPyTnJyaTc2fPJn979UayskWtiz85+LDO0wvR
j50cAQDATnZ39tXWxiRq5iYE35i+kX67P05v2KduwxzuMM9i366GdZ9Gkp/9
w2epj7k0dezhYw1vnnWKIkcAALDT1V3f1D+UjC007MuweLFu37rNrmdqvPap
Os6xVLs2bEqOqBo8/aukcvvB7e7cvJZMjz7ce27viV/VP05EcgQAANRfixTs
OzqWTL83nYyPHmro589uPufhsw+Sff0NOSJlbdjG9WM30zfw/aZjFbHIEQAA
8MC9j+eTqRMvbcgBYS7EyOh4MrvU2v7RS+dPrT/GY8PH0/eLu38ruXFhPDk6
PNQkPwwmz69mmTB3IvZxSSNHAADARp/furVmZaW17NCW+w+ea3l5eU0hz9km
OQIAAMhKjgAAALKSIwAAgKzkCAAAICs5AgAAyEqOAAAAspIjAACArOQIAAAg
KzkCAADISo4AAACykiMAAICs5AgAACArOQIAAMhKjgAAALKSIwAAgKzkCAAA
ICs5AgAAyEqOAAAAspIjAACArOQIAAAgKzkCAADISo4AAACykiMAAICs5AgA
ACArOQIAAMhKjgAAALKSIwAAgKzkCAAAICs5AgAAyEqOAAAAspIjAACArOQI
AAAgKzkCAADISo4AAACykiMAAICs5AgAACArOQIAAMhKjgAAALKSIwAAgKzk
CAAAICs5AgAAyEqOAAAAspIjAACArOQIAAAgKzkCAADISo4AAACykiMAAICs
5AgAACArOQIAAMhKjgAAALKSIwAAgKzkCAAAICs5AgAAyEqOAAAAspIjAACA
rOQIAAAgKzkCAADISo4AAACykiMAAICs5AgAACArOQIAAMhKjgAAALKSIwAA
gKzkCAAAICs5AgAAyEqOAAAAspIjAACArOQIAAAgKzkCAADISo4AAACykiMA
AICs5AgAACArOQIAAMhKjgAAALKSIwAAgKzkCAAAICs5AgAAyEqOAAAAspIj
AACArOQIAAAgKzkCAADISo4AAACykiMAAICs5AgAACArOQIAAMhKjgAAALKS
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
AAAAAAAAAAAAAAAAAAAAAAAA+KMLUhDoWQ==
     "], {{0, 772}, {786, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
     Automatic],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->216,
   ImageSizeRaw->{786, 772},
   PlotRange->{{0, 786}, {0, 772}}]],
  CellChangeTimes->{3.717696464399061*^9},ExpressionUUID->
  "b53422e9-173a-4999-a9d5-430f7cfd6dfb"]
}], "Callout",ExpressionUUID->"a6e73c10-a490-48d2-a319-194f8e6ec15a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 2\t", "ExampleFont"],
 "Finding intersection points"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 2 Finding intersection \
points",ExpressionUUID->"a3afe101-16ab-430b-985e-3f1bf0f34e90"],

Cell[TextData[{
 "Find the points at which the curves ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"cos", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "4c0b8690-a9d9-49a2-9f38-60864c8c90b7"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "x"}], TraditionalForm]],ExpressionUUID->
  "9ecde443-4016-453e-a5b3-554c6e950bd1"],
 " intersect."
}], "Text",ExpressionUUID->"7f068b16-1b58-4f7c-a624-f74c3946b610"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"357b99c6-2f3d-42b9-8a0f-2a423cf37bef"],

Cell[TextData[{
 "The graphs of two functions ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "fb2a3b80-8d2f-411e-b63b-4fc13dbd7c36"],
 " and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "df1d2779-1dc1-40b1-b5c3-50ccd211dcd1"],
 " intersect at points whose ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "eba42726-a3cc-4de3-8778-18198242903c"],
 "-coordinates satisfy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{"h", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ad2f4d12-3c4b-4b19-85aa-256a24d25531"],
 ", or, equivalently, where "
}], "Text",ExpressionUUID->"a0caace5-52e6-42dc-8c23-e2984bd67e9b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "(", "x", ")"}], "-", 
           RowBox[{"h", "(", "x", ")"}]}], "=", "0."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"37cb870d-4a24-4f54-b1c7-d2ee9da2c16a"]], \
"Text",ExpressionUUID->"73036dc1-669d-4a35-8640-d7f70e943bf7"],

Cell[TextData[{
 "We see that finding intersection points is a root-finding problem. In this \
case, the intersection points of the curves ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"cos", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "fde5fa10-0937-439c-a106-0254c4001574"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "x"}], TraditionalForm]],ExpressionUUID->
  "6acfb90a-13d9-4f19-ba0c-c4b6fd141433"],
 " satisfy "
}], "Text",ExpressionUUID->"65e63d6e-054e-40ea-82f3-84f808036f5a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"cos", " ", "x"}], "-", "x"}], "=", "0."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"f22cf1f3-7e3d-4e7b-8073-ddbdfa651566"]], \
"Text",ExpressionUUID->"635eede0-859c-4c04-bbd2-f0a46bdeaacd"],

Cell[TextData[{
 "A preliminary graph is advisable to determine the number of intersection \
points and good initial approximations. From ",
 StyleBox["Figure 4.85a", "FigureFontText"],
 ", we see that the two curves have one intersection point, and its ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fab9ab6c-1e75-464e-9a25-e5039a4227b1"],
 "-coordinate is between 0 and 1. Equivalently, the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "511de4af-7469-48c5-aa0b-14afce0a23b3"],
 " has a zero between 0 and 1 (",
 StyleBox["Figure 4.85b", "FigureFontText"],
 "). A reasonable initial approximation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.5"}], TraditionalForm]],ExpressionUUID->
  "01c3b5e6-8679-439e-81dd-1a4805aebe98"],
 "."
}], "Text",ExpressionUUID->"5b70d15b-4774-433d-9946-57d51933e2e0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
/+adH9zf0d7e2dlZrrfBHa5qV8nZzF9//fDgT8dPnZ0Ohjf/W/FmTr/Yohf8
d6DpzoFqd+aIyPwXT1R5LADUkSrMmfMXTwBcPG2+YceO8J2tW7YU5s/zp82Z
TKaMYwAAgGWbzTzVMbf4MLgO/d3J/LzVhuU6xyS0d+/eBfPh+w4enJiYvPaa
a8I/ZrPZnp6eRHPz/Anze7ZvL+MYoKLmfvE884MPXPXmr35ND/63xTc7/eQf
xJlYKyZ4+uEV/vHM4TsLK7ffuvlLF7fGmPz+x349+Miv/cdvnTo7fSqduqu9
48N3Jb/903+p6kDPvpS/9uPFI/MXHq/qSACoI9WaMwfT4wUZOZgtH+7vHx4e
Dn+q3r5vXyaTuePAgQWd2WmAAADEa2r0L+fPUd+1/65wseVH/r6MO8zlg8nw
/CUZu1tbR0dHw08VOvMrr7wS3vLOD+6fP6RgUl3GkUClhX01vDZc+YniOzCf
+cHdV66bW+ibGqv2+Kpl/n9bmq+65VuvzX1n5p7ynQPhf1xWuRH0ConMAKxI
debMgVQqNf+BkslkuI9cMCUOP7Jv797wlkcHB7du2TL/dYJOAwQAIEYXjj2a
aG6eH4GD9z8+OF7eR+nu7g4fJVyPkcvlCp9a0JlD6XS6sI2G0wCpM2/sjBG+
4jX57CtFb/Xf72kK/kcxf+PiRvNvz953xbrCf1ju/+Ij+95+dXm3r1y2sy/l
W+4uHpkfSMU3LADqQHXmzIHfe+97w/u/cdeukZGRwscXd+b8xQNQenp6Cuuf
nQYIAECcpo7Nb0G/9sGD3/2fuct/1XLkcrnwpL9P3ntvNptd8NminTk/t9ft
VHd3dzBtDi6nAVJXJr91228WfgMtetLfbO7MV3/3yuarbnnqxderP75qmZ7/
fQjPM4qzq798TmQGYOUqP2fOvxGTg+lxKpWavzAjX6IzhzKZzO379gU/bRd/
CgAAqmk2d2b4R09/+9tHn33+F5VIQOl0+sZdu0ptf1GqM4fGx8f3tLUFM+2y
jwoqZ/Kpewq/hyaueODE4v9VXVzz3PSBw2V+qW2NeaGvrdCZ5zaj/uR/jW0t
s8gMwKpVes4c+OS993Z2di5emJGP7MyhYMq9dcsWpwECANDAgqnygvUY80V3
5tArmeMNu7cADenn6UJfDa7U/5hd8A84PAqw1JYaS/HL02eO/3jkmePPBW/H
Tj5blrfBdersdBn/t3bh2KPhdyDszH/yk1fLdc/L8/K5/NZ7SkVm/20BoHZE
VOLLdubAuXPnvAwQAIA1aymdWQiizsxmHn3LVYXUfN3AqV/57MUX3jZ9ILWa
xcyLd4lc5RXua1F0l48Ve/3FkX1vv/pSao5rk5DpmZKR+d6HYxgPAKzIUjoz
AACsZUvpzFB3nnvgXYV+23T/0/P/v5Izh+8MPn7HsZdXc/+FpcJlicyF+2lK
ja36qc83+dTOKwpLmlf5lFdieia/MykyA9AAdGYAAIimM9OQzn//M+EK4eB6
6+YvvblF89Sxu69c9ysfWZHXXjwV7nRR3uvU2bLuoPzz9M518/ZnLuti6csT
mQFoIDozAABE05lpTGd+sO/tV4f/tje848C3Xru0/cupL+5d/WLmujCbO/PV
370y3NzjUmeu5rmH0zP5mw6Wisy24gGg7ujMAAAQTWemQU1+7YNXFDamuHQE
3sX4/NbNX6pebo1PWNTnnwO44cpPPF3W5dIlTc/kbz1UPDJ3fL4qIwCAMtOZ
AQAgms5Moxr/851hXw3evue/zB0fH27anHx2DfxTP3k40dy84cpPDP50PFzV
HP7P/OHx85V+5Lm1yqUjs5XMANQpnRkAAKLpzDSq89//TOGUvd/4yvHZ5785
t3fEnQNnG750vjr+6FuuCp71p0dfys87ErHQ298w/ezzv5idvVDG9vv6q6+V
jMwf+azIDED90pkBACCazkyjmn3+m4VdI5q23t31++uCf+d9z7wY97gqbXrk
D//DXFFPjYV//pe//aM3t2i+c6Cwc8bpJ//g+nduKONW1W+sZL6pSGTe/6DI
DEBd05kBACCazkzD+rdn//S3rips0TxXWR85FveYKmB6ZmJislCPT31x78ZE
ounOgTf3oP55eue6S+uZN1z5ie/NXPzgycNz35BP/tdybdgctV3G/gfn1jkD
QD3TmQEAIJrOTOOa/v7Hfj1cxxuegvfjxoudP0/ve/vVcw35qlsO/d3J00/+
weLz/mZzZx59y1WFrTOuGzg1NfqXO9eV81jAuci8/8HiK5lvPWQlMwANQGcG
AIBoOjMN7IW+tsJRgJ8efanxgmfwBOcv2J57pldvX3DYX/CsC1s0v3mzN3Zv
Xr3LRubG+7YDsAbpzAAAEE1npoEVjgJsur9cS3dry+RT9yQ2JOYH5KL1+MKx
RwvrusPrtm/9c9ny70c+Wyoy56dnyvMQABA3nRkAAKLpzDSwyafuCTclbszK
HHh1/KmOjet+e9PcdhnvOND3zItF63HwwVNf3HtpJfNVtwz+dHyyHAV47rE6
Pi8yA7AW6MwAABBNZ6ZhzWa++rtXlnGDiBoU7koxmzszPTUVvUPF3KemZ6b+
9dXpfL5s0f3eh4sf/LczKTID0GB0ZgAAiKYz06jG/3xn8/r1v/GV43EPpEGJ
zACsJTozAABE05lpSBeOPTq3LfP+vzoT90ga01xkLrZdhsgMQIPSmQEAIJrO
TOOZff6bO9e9s5G3ZY5XqZXMW+8RmQFoVDozAABE05mpd7lcbv6+xK+/OHLf
Feuar97+8Pj5GEfVsB5IlYzML5+Le3AAUCk6MwAARNOZqWOzmac6Nq777U3B
dejvTuYvRuY//a2rgn/PDXz2X5xKReaWu0VmABqbzgwAANF0ZurX1Ohfhv96
w+td++/auW7unY/8vV2ZK0BkBmAN05kBACCazkz9unDs0URzc/P69YXUHLz/
8cHxuMfViOYic7GD/679eP6speMAND6dGQAAounM1LGpY/ddsa4QmX/tgwe/
+z9zcY+pEX3h8eIrmUVmANYMnRkAAKLpzNS12dyZ4R89/e1vH332+V/MPw2Q
somIzKfPxj04AKgSnRkAAKLpzEBJjx0pHpnXfVRkBmBN0ZkBACCazgwUJzID
wBt0ZgAAiKYzA0Wk0iUj889eiHtwAFBtOjMAAETTmYGFSkXmptutZAZgbdKZ
AQAgms4M/Iq5yHxT0cj8y9NnHLYIwNqkMwMAQDSdGXjT498puZLZdhkArGE6
MwAARNOZgUtEZgAoQWcGAIBoOjMw5xs/FJkBoBSdGQAAounMwMXIXHRP5tvy
JzNxDw4A4qczAwBANJ0Z1jqRGQAuR2cGAIBoOjOsaSIzACyBzgwAANF0Zli7
BodLROZbRWYAmE9nBgCAaDozrFERkfnYybgHBwC1RWcGAIBoOjOsRZci8+LO
fGv++Km4BwcANUdnBgCAaDozrDlDo/mmm4uvZBaZAaAYnRkAAKLpzLC2RERm
22UAQAk6MwAARNOZYQ0pGZlvzv/DP8Y9OACoXTozAABE05lhrfiHf7wYmRfv
ySwyA8Bl6MwAABBNZ4Y14djJkpF5aDTuwQFArdOZAQAgms4MjU9kBoDV0ZkB
ACCazgwN7vipuTP+iuzJfFN+cDjuwQFAfdCZAQAgms4MjUxkBoBy0JkBACCa
zgwNa267jNtEZgBYPZ0ZAACi6czQmE5mSkbmb/ww7sEBQJ3RmQEAIJrODA1I
ZAaAstKZAQAgms4MjUZkBoBy05kBACCazgwN5WcvXIzMNxXpzCIzAKyUzgwA
ANF0ZmgckZF5dvZC3OMDgHqlMwMAQDSdGRrEXGS+vdh2Ge/LP/6duAcHAPVN
ZwYAgGg6MzSCS5G52ErmVDruwQFA3dOZAQAgms4M9e6Xp8+IzABQUTozAABE
05mhvv3shfzbPiwyA0BF6cwAABBNZ4Y6dvpsft1Hi+/J/NiRuAcHAI1DZwYA
gGg6M9QrkRkAqkVnBgCAaDoz1KWIyPyFx+MeHAA0Gp0ZAACi6cxQf86+lL/2
4yIzAFSNzgwAANF0ZqgzEZH5gVTcgwOAxqQzAwBANJ0Z6snL5/Itd4vMAFBl
OjMAAETTmaFuiMwAEBOdGQAAounMUB9ePpffeo/IDACx0JkBACCazgx1ICIy
3/tw3IMDgManMwMAQDSdGWrd9MzFyHyTyAwAcdGZAQAgms4MNW16Jr8zaSUz
AMRLZwYAgGg6M9SuS5HZSmYAiJnODAAA0XRmqFHTM/lbD5VayTw7eyHu8QHA
GqIzAwBANJ0ZatDrr75WMjJ3fF5kBoAq05kBACCazgy1Jioyf+SzIjMAVJ/O
DAAA0XRmqClzGXkuMhfbk3n/gyIzAMRCZwYAgGg6M9SONyJzsZXMIjMAxEdn
BgCAaDoz1Ii5jLz/wVIrmec20wAAYqIzAwBANJ0ZasEbkbnYSuZbD1nJDADx
0pkBACCazgyxm8vIH/ls8ZXMtx6ykhkAYqczAwBANJ0Z4tfx+VIrmfPTM3EP
DgDQmQEA4DJ0ZojZXGQutpL5poMiMwDUCJ0ZAACi6cwQp3sfLr6SeWdSZAaA
2qEzAwBANJ0ZYiMyA0Cd0JkBACCazgzxmIvMxbbL2JnMv3wu7sEBAL9CZwYA
gGg6M8Tgvi8Vj8xb7xGZAaAG6cwAABBNZ4ZqeyBVfLsMkRkAapXODAAA0XRm
qKpSkbnlbpEZAGqWzgwAANF0ZqieiMh89qW4BwcAlKQzAwBANJ0ZqqRUZL72
4yIzANQ4nRkAAKLpzFANf/FE8YP/RGYAqAc6MwAARNOZoeK+8HjxlczrPioy
A0Bd0JkBACCazgyV9dgRkRkA6p3ODAAA0XRmqKC5yFxsu4x1H82fPhv34ACA
pdKZAQCoca+9eOr4j0eGf/R0Op3+3neffvb5X8zOXqjmAHRmqJRUuvhK5rd9
+Jenz8Q9OACoM/FOm3VmAABq1tTY0a7fXxfOV4Oref368GraenffMy9WbRg6
M1REqcjcdLvIDADLUgvTZp0ZAIAaNDt74Z/6P1WYKi+YM4fv/9p//FZ1UpTO
DOU3F5mLbZfRdHv+Zy/EPTgAqBu1M23WmQEAqDXBbPnUF/cuni0vnjk33f90
FV4MqDNDmT3+HZEZAFavpqbNOjMAALXmwrFHL82Kr7rl//rLvzt1dnpiYvKV
zPHvfPEPE83NhZcBhtef/OTVSo9HZ4Zy+sYPS22XITIDwLLU1LRZZwYAoMZM
fvvGfx9MUJtaHzmxaM3F6y+OfPV3r5z/SsCmOwemKzwgnRnKpmRkvk1kBoBl
qq1ps84MAEBt+Xk6mJ1ueMeB7/7PXPEbTB2774o3TzlJXPHAj1+r7Ih0ZiiP
iMh8MhP34ACg3tTYtFlnBgCgppw5fGfz+vUf+tGZiB3kJp+6p3CsSTC1/t5M
ZYekM0MZzEXmonsyi8wAsBK1Nm3WmQEAqCXTT+28omnbbafORr6q78wP9r39
ap0Z6obIDABlVnPTZp0ZAIDaMXdkdjr19b85fpm94/7t2cJrAHVmqHWDwyUi
8635YyfjHhwA1KUanDbrzAAA1JqIl/5dMn/CfOUn7M8MtUtkBoCKqalps84M
AED9mTp295XrwuOzm+5/utKPpjPDCs1F5puLR+bjp+IeHACsAVWcNuvMAADU
nfPf/0xiQyKcxyafrXj71ZlhJYZGS0ZmK5kBoCqqOW3WmQEAqC+zsxe+/7Ff
TzQ3z63K+EDqTOUfUWeGZSsZmW8WmSEwPj7e2dl5fqbCBwwAa1uVp806MwAA
debn6fClf8H18Pj5KjygzgzL8w//WDIyB5+CNS+bzW7bti34sbK7tTV4P+7h
AI2rutNmnRkAgLoy/VTHxnAG2/TIsZXdRW6ZCp15YmJyuV9b3icPdSAiMg+N
xj04iN/5mZndra1h9gmuTS0tzxx/Lu5BAQ1ptdPmcDYb/FdriW+HhoaC/6wF
D7enrW1ZX+jFHQAAVN+FY49e/84NwfT1rZu/9M8ruoeenp7Cuo6lX+EUfblf
mEwmy/z8ocYdO3kxMt8kMkMpd7V3zP/hEry99ppr0ul03OMCGs3qp827du0q
zIGXcs3/L9v8+fNSrqODg2V+/gAAEGE28+hbrgomohveceCpF19f2X309PQs
NzIvmCfrzFDcXGS+1UpmiBAu9iv6Uyb48RT36IAGUo5p843L7MyruXRmAACq
Znb2wnMPvGsu8151y4pny/mLnXljIpFobl76VZgAL+urgktnZg05fqpEZL4p
Pzgc9+CgVuRyueBHw+L/yzL8KdPR3u4gAGD1yjVt3t3auqyp7/y1GcudNuvM
AABUzT/1f2putnz19uqc/TefcwDhMkRmWI7e3t5Sr5rZtWtXJpOJe4BAfYtr
2uwcQAAAat/5738mnLVWPzLndWaIdjJzMTIv3pNZZIaSjg4OBj9ciu7OFHzc
uj5gxWKcNuvMAADUuAvHHg2nrJ8efSmWAejMUFJEZP7GD+MeHNS0E2NjW7ds
KbVVaXd3d9wDBOpPvNNmnRkAgFo2NfqX4T6WcUXmvM4MpcxF5tuKb5chMsMS
TExM7mlrW7CeOfypF7wNPpU9OxH3GIG6Efu0WWcGAKBmzT7/zXCy+pG/PxN1
u6ljf/pbV1VuRq0zQxEiM5RDLpc71NW1eD1zmJo3tbSMjIzEPUagDtTCtFln
BgCgNgWz5Z3rljBbzk9+67bf3HDlJ743U6mR6Myw0M9eyDfdXiwyv09khhU4
3N+/MZEouoFGorm5r68v7gECNa1Gps06MwAAtejMD/a9/epgmvrv/+wHk9Mz
ExOTi68zL//rK5njX/vgFcHNmh45Vrmx6MzwKyIi8+PfiXtwUK+eOf5cxHbN
d7V3nDt3Lu4xAjWpZqbNOjMAALXm9RdH7r5yXeFVw6XeJpqb595uSAR/TP2P
2dnZCxUaj84Mb7oUmRcf/Ccyw2pNTEzeceBA0T00gus927c/c/y5uMcI1Jaa
mjbrzAAA1JaLu8aVWtC14JfucObctP+vzlaqMc/RmeGSiMicSsc9OGgQj/3Z
I4tPBgx/8G1MJFKpVNwDBGpGjU2bdWYAAGrIbObRt1xV9PfrUnPm4J0P/Sh6
J7rV0pkh8MvTZ0pulyEyQ1kNDQ1tamkp9ePvjgMHJiYm4x4jELfamzbrzAAA
1JLJU+nUX3/98LKuH79W2THpzJA/fTb/tg+LzFA12Wx2d2trqYK0qaXl6OBg
3GME4lVz02adGQCAmlK5bZZXTGdmrTt9Nr/uo8Uj8188EffgoGHlcrlDXV2l
9tAIruCz01NTcQ8TiE2tTZt1ZgAAiKYzs6ZFRObHjsQ9OGh86XT6+uuuW1yb
w9T8e+997+joaNxjBJijMwMAQDSdmbXr7Ev5az9ePDJ/4fG4BwdrRSaT+dAt
t5TadjXR3NzT03N+ZibuYQJrnc4MAADRdGbWKJEZakYul+vp6Sm1XXPw8V27
dlnYDMRLZwYAgGg6M2vR2ZfyLXcXj8wPpOIeHKxRIyMj27ZtK7WwObi6u7st
bAbiojMDAEA0nZk15+VzIjPUpnPnziWTyVKduXn9+q1btgwPD8c9TGAt0pkB
ACCazszaIjJDzTs6OHj9dddF1OZkMnnu3Lm4hwmsLTozAABE05lZQ14+l996
T6nIPDt7Ie7xAZdks9mO9vaI1LyppeV733067mECa4jODAAA0XRm1orpmZKR
+d6H4x4cUEQ6nd7U0lIqNQdvOzs7s9ls3MME1gSdGQAAounMrAnTM/mdSZEZ
6s7ExGRnZ2eiuTkMy4uv4KdYKpXK5XJxjxRocDozAABE05lpfCIz1Lmjg4Nb
t2wplZqD6/033uh8QKCidGYAAIimM9PgpmfyNx0sFZntyQz1YmJi8lBXV0Rq
to0GUFE6MwAARNOZaWTTM/lbDxWPzB2fj3twwLINDw9v27YtIjVvTCR6e3un
p6biHinQaHRmAACIpjPTqObWKpeOzFYyQ506PzPT09OTaG4ulZqb16/f1NLy
5JNP2rQZKCOdGQAAounMNKTXX32tZGT+yGdFZqh34+Pje9raorfRuGHHjqOD
g3GPFGgQOjMAAETTmWk8b6xkvqlIZN7/oMgMDWNgYGBTS0tEag6uPW1tIyMj
cY8UqHs6MwAARNOZaTBR22Xsf3BunTPQQKanpnp6ejYmEqX20Aivjvb28fHx
uAcL1DGdGQAAounMNJK5yLz/weIrmW89ZCUzNKpMJtPR3h6dmoP3k8lkNpuN
e7BAXdKZAQAgms5Mw7hsZNaZobENDw/vbm1dvGlzoTMHV6K5+VBXl9oMLJfO
DAAA0XRmGsdHPlsqMuenZ+IeHFAl6XT6Pdu3R+zY3Lx+faK5+b6DBzOZTNyD
BeqGzgwAANF0ZhrA3ELljs+LzEAol8sd7u+/7BGBzevXd3Z2nhgbi3u8QB3Q
mQEAIJrOTCO49+HiB//tTIrMsGaFRwQGP+YW76QxPzUHbzva24eHh+MeL1DT
dGYAAIimM1P3RGagtGw2e6ira2MiEZGaw9q8u7U1nU7ncrm4hwzUIp0ZAACi
6czUt7nIXGy7DJEZmCebzSaTyaXU5q1btvT29k5MTMY9ZKC26MwAABBNZ6aO
lVrJvPUekRlYLJPJHOrqSjQ3X3bf5o2JRDKZtHUzUKAzAwBANJ2ZevVAqmRk
fvlc3IMDalc2m+3u7i78+Iu+PnTLLQMDA+dn/F9XsNbpzAAAEE1npi6Viswt
d4vMwFJMTEz29PRcf911EacEFq7gZ2V3d/czx5+Le9RAbHRmAACIpjNTf0Rm
oEymp6ZSqdTWLVuWsra5ef369994Y3B7uzfDGqQzAwBANJ2ZOjMXmYsd/Hft
x/NnX4p7cEBdyuVy6XR6T1vbUmpzcCWamzva24MvyU/PzM5eiHv4QDXozAAA
EE1npp78xRPFVzKLzEA5PHP8uWQyuTGRuOzC5vAKfoYGtx8aGsrlcnGPHags
nRkAAKLpzNSNLzxeciXz6bNxDw5oHBMTk729vdu2bVtKal4QnJ0YCI1KZwYA
gGg6M/XhsSPFVzKv+6jIDFTI0NBQR3t7ork5OjWH7xdODEwmk0cHB8+ds108
NBSdGQAAounM1AGRGYhPNpvt6+u7YceO6FXNCz64MZG448CBw/39mUwm7mcA
lIHODAAA0XRmal0qXTwyv+3DIjNQTaOjo4e6ugo/Nxeval5cocO327Zte+D+
+4eGhixyhvqlMwMAQDSdmZpWOjL/8vSZuAcHrEXnZ2aODg52tLcXfoCW6syL
s/PGRGJPW1tvb+/w8LCdnKG+6MwAABBNZ6Z2zUXmYgf/Nd2e/9kLcQ8OWOsm
Jib/9v95ItzAeSmdefHGGmFzHhoamp6aivvZAJehMwMAQDSdmRr1+HeKr2QW
mYEaMzExmU6nO9rbNyYSS6/NC/bW2N3aeqira2BgYHx8PJfLxf2cgIV0ZgAA
iKYzU4tEZqAOnTt3Lp1OJ5PJ66+7bgXBuXAFP5r3tLV1d3cH95bJZGRnqAU6
MwAARNOZqTnf+KHIDNS1XC43MjLS09Ozu7V16VtqzE/N8/d8Dn5SB/dz38GD
qVRqaGgom83G/fxgLdKZAQAgms5MbSkZmW/Ln8zEPTiAZctmswMDA52dnZta
WpabmksdMhgueE4mk1/ue/To4OCJsTE7PEOl6cwAABBNZ6aGzEXmogf/icxA
IzgxNtaf+lpHe3tEc168qrnUiugFtwnuc09bW2dnZ09Pz5NPPjk0NDQ+Pj4x
MRn3k4YGoTMDAEA0nZlaITIDa8mJsbHD/f3hOucFJXmJnbno+udEc/OC5dDB
D/obduy4fd++ZDLZ3d2dSqXS6fTQ0FAwgGw2ayE0LJHODAAA0XRmasLgcInI
fKvIDDS8bDabTqd7enr2tLUFP5eX3plLrX8utSh6/l0VPrgxkXj35s3vv/HG
4NE72tvDHB0MJpVKHe7vDwZ2dHBweHj4+I9HToyNZTKZYLQTE5PnZ2bi/rZB
VenMAAAQTWcmfhGR+djJuAcHUFWzsxfGx8cHBgYeuP/+QnZe7gGC0bU54k4W
f3DxQ8z/Y6K5ORjhppaW4Nq2bdsNO3a8b+fO3a2twRUMPrj27t17+759dxw4
EFwd7e3hdVd7R2cxn7z33mW9TSaTwTvJX3XfwYPBdairK7y639Bz0WN/9khv
b29fX19Y0YMr+FaHLT3M6SMjI88cfy5zkZzOfDozAABE05mJ2aXIvLgz35o/
firuwQHEL5PJfO+7T3+579FkMrm7tXVjIrHKVc0ru5Z4n4sXTi9lP5D5QXuJ
bxffbalCPv/tZRd4L/7CcO+Rd2/evGvXrg/dcssdBw6Eibunp6e3t/dwf/+3
v310+EdPh/uQ6NINTGcGAIBoOjNxGhrNN91cfCWzyAxQTC6Xy2QyQ0NDqVTq
UFfX3r17t27ZUoXOHJGaV3wPqxnM4rtd2VO47P1EJ/HFNwg3xA7PZOzu7u7r
60un08PDw8Hfmgpd13RmAACIpjMTm5KR+WbbZQAsy/mZmTA+H+7v7+np+eS9
9+5pa9u6ZcvGRKK8aXf17boSnXk1T6E6j1K4NrW07G5t7ezs/NxDDwV/WcFf
WfAXl8vl4v4XxOXpzAAAEE1nJh6RkXl29kLc4wNoEBMTk2Mnn/3ed58+cuRI
b2/vA/ff39nZuXfv3ht37drU0lJ0F47lFtQV30MsnXl9tVr3EvcYCd95z/bt
He3t3d3dTz755MjISPC3Fvc/HBbSmQEAIJrOTAz+4R8vRubFezLfPNefAaii
YAKQyWROjI0N/+jpo4ODR44cSaVSvb293d3dh7q6Ojs7O9rb7/zg/g/dcsuN
u3Zt27ZtU0tLYfKw4lQbb2deX63Wvawmv+Czwff59n37gr+FgYGBZ44/Z81z
7HRmAACIpjNTbcdOiswAjWF6ampiYjK4stls5qITY2NjJ5995vhzIxcNB370
9Nf/5vjz//1vv/3to0NDQ0cHB4MrnU6Hb4MPpldtYGAgfBs6cuTIE088cbi/
P7xSF32579Hei3ou6u7ufuD++w91dSWTyc6L7jhw4PZ9+/a0te1ubf299773
3Zs3B3OkFaz3jk7NK76HRHNzMLBgtMEzGh0dtdVz9enMAAAQTWemqkRmgDWp
fjdEyuVyYUg/MTY2Ojo6NDSUTqefeOKJvr6+np6e+w4evKu9Y09bW7gPyWVT
8+qrdfjOxkRid2vrA/ffHwwmGFvc36Q1QWcGAIBoOjPVc/xUvunWYnsy35Qf
HI57cACwWmGUPjE2FuboL/c9Gm6Ivbu19d2bN5d3m44Fxwt+8t57D/f3j4+P
x/09aFg6MwAARNOZqRKRGYC1LZfLZTKZ4eHhI0eO9PT0JJPJPW1t11933SpT
8/pf3W46uMPOzs7D/f3BY8X9jBuKzgwAANF0ZqphbruM20RmAFhsYmLymePP
pdPpnp6eu9o7btixI9HcvOLmPD87b92y5VBX19HBweAh4n6WdU9nBgCAaDoz
FXcyU3Il8zd+GPfgAKDmnJ+ZOTE2FpbnOw4cKLXz8xKXOof7Oe9pa+vr67PI
ecV0ZgAAiKYzU1lzkbnESmaRGQCWJpvNHh0c7O3t7WhvX0F2LgTn4O17tm//
3EMPjY46fnd5dGYAAIimM1NBIjMAVEAmk0mn0w/cf//u1tYVb++8qaXlUFfX
0NBQ3M+mPujMAAAQTWemUn72wsXIfFORziwyA0CZBFO4oaGhnp6ePW1tGxOJ
FeytEQbnkZGRuJ9KTdOZAQAgms5MRURG5tnZC3GPDwAa0PmZmbA5r2Cdc3hu
YPC14+PjcT+PWqQzAwBANJ2Z8puLzLcX2y7jffnHvxP34ABgTZiYmEyn08lk
cgX7Oe9ubT3c3x/cQ9xPoobozAAAEE1npswuReZiK5lT6bgHBwBr0ejoaG9v
7/tvvDHcKGOJhwZuTCQ6Oztt4BzSmQEAIJrOTBn98vQZkRkAalY2m02lUnva
2pYenMP9NHp7e9f48madGQAAounMlM3ps/m3fVhkBoDaNzEx+cQTT9xx4MDS
N9MIlzev2eMCdWYAAIimM1Mep8/m1320+J7Mf/FE3IMDAIqbmJg83N+/9BXO
4e7N6XQ6l8vFPfaq0pkBACCazkwZRETmx47EPTgA4PIymUxvb+97tm9f4n4a
7968ua+vb+1spqEzAwBANJ2Z1boUmYttl/GFx+MeHACwPKOjo4e6ugpTxOja
HNysu7s7m83GPeqK05kBACCazsyqnH0pf+3Hi69kFpkBoG5NT00NDAwsZT+N
8AadnZ2jo6Nxj7qCdGYAAIimM7NyEZH5gVTcgwMAyuDE2NjSlzfv3bt3+EdP
xz3kitCZAQAgms7MCr18Lt9yt8gMAGvBL0+f6U997bK7NzevXx9ce9rahoaG
4h5ymenMAAAQTWdmJURmAFhLZmcvhO8cHRyM3kwj/FRYm4eHh+MddhnpzAAA
EE1nZtlePpffeo/IDABr1ujoaGdn51LWNt/5wf3HfzwS93jLQGcGAIBoOjPL
ExGZ73047sEBANWTyWS6u7uDyWSp5c2Ftc0d7e0nxsbiHu+q6MwAABBNZ2YZ
pmcuRuabRGYAIDQxMdnb27uppSV6YXNwHerqymazcY93hXRmAACIpjOzVNMz
+Z1JK5kBgMXOz8ykUqnL1uZg5tnb2xvcOO7xLpvODAAA0XRmluRSZLaSGQAo
Kbo2h6k5eGfrli0DAwNxD3Z5dGYAAIimM3N50zP5Ww+VWslcOIAeACB/sTb3
9fVtamkptW9zeO1ubR0ZqZsjAnVmAACIpjMTbS4j33SweGTu+LzIDAAUFcwt
e3t7C1PNUtdd7R2nzk7n89Nxj/cydGYAAIimMxPh9VdfK7mS+SOfFZkBgGgT
E5OHurpKLWwOP/47Gzc+9meP1PimzTozAABE05kpZS4jl4rM+x+Me3QAQN0Y
Hx+/48CBiNocXNu2bRsaGop7pCXpzAAAEE1npqg3InOxg//2P2glMwCwXEND
Q++/8cbobTQ6Ozuz2WzcIy1CZwYAgGg6M4vNZeT9D5aKzHObaQAArMjh/v5N
LS0RqTmYnQa3iXuYC+nMAAAQTWdmgTcic7HtMm49ZCUzALBK01NTPT09GxOJ
iE2b97S1ZTKZuEf6Jp0ZAACi6czMN5eRP/LZ4iuZbz1kJTMAUC6ZTKajvb3U
qubm9es3JhKpVCqXy8U90jk6MwAARNOZ+RUdny+1kjk/XdOnwAMA9ejo4OC2
bdsittGokYXNOjMAAETTmXnTXGQutpL5poMiMwBQIednZj730EOJ5uaiq5qD
63c2bkylUvEOUmcGAIBoOjOX3Ptw8ZXMO5MiMwBQaSfGxna3toabMxetzfEu
bNaZAQAgms7MHJEZAKgBh/v7g9lp0docXMGn4lrYrDMDAEA0nZmLkbnYdhk7
k/mXz8U9OABgbclkMnd+cH+pVc3BO7fv2zcxMVnlUenMAAAQTWde6+77UvHI
vPUekRkAiMXs7IVwYXOpwwE3tbSMjIxUc0g6MwAARNOZ17QHUsW3yxCZAYC4
ZTKZPW1tpfbQSDQ39/b2Vm0wOjMAAETTmdeuUpG55W6RGQCoEalUquiOzeFH
Otrbq7OHhs4MAADRdOY1KiIyn30p7sEBALwpXNhcag+NrVu2jI6OVnoMOjMA
AETTmdeiLzxefE/maz8uMgMAtamnp6fUHhobE4nD/f0VfXSdGQAAounMa85c
ZC62kllkBgBq29DQ0KaWlsWduXn9+uDq7Oys3IRWZwYAgGg689pSaiXzuo+K
zABA7ctms0X30AhT8++9970nxsYq8bg6MwAARNOZ15DHjhRfySwyAwD1I5fL
dXd3l9pD43c2bnzyySfL/qA6MwAARNOZ14q5yFxiJfPps3EPDgBgeY4ODgbz
2FK1OZlMnp+ZKePD6cwAABBNZ14TUuniK5nf9uFfnj4T9+AAAFYik8nsbm0t
2pmb16/ftWtXcINyPZbODAAA0XTmxlcqMjfdbiUzAFDXzs/MHOrqKpWag4lu
Op0uywPpzAAAEE1nbnBzkbnYdhlNt+d/9kLcgwMAKIN0Ol2Y0y44GTC4DnV1
rX4PDZ0ZAACi6cyN7PHviMwAwFqQyWR27dpVKjXvbm3NZrOruX+dGQAAounM
DesbPyy5XYbIDAA0nPMzM8lkslRq3tTS8szx51Z85zozAABE05kbU8nIfJvI
DAA0sCNHjgTz2+b16xek5uCd4OPf++7TK7tbnRkAAKLpzA0oIjKfLNup6wAA
tenE2NgNO3YUPRwwsSHx118/vIL71JkBACCaztxo5iJz0T2ZRWYAYK04d+5c
Z2fn4s4crm3u6elZ7h3qzAAAEE1nbiglI/OtIjMAsNakUqmiq5qDK5lM5nK5
pd+VzgwAANF05sYxOFwyMh87GffgAABicHRwcGMiMX+75sJ1x4EDS58A68wA
ABBNZ24QIjMAQDEjIyObWlqKpub333hjNptdyp3ozAAAEE1nbgRzkfnm4pH5
+Km4BwcAELNMJrN1y5bFqTn4SPDxE2Njl70HnRkAgDrySub41//meJUfVGeu
e0OjJSOzlcwAQCNawbR5YmJyd2vrgtQcHgsYzIeHh4ejv1xnBgCgLrz+4sh/
Onjb9e/c8O/elTpT3YfWmetbych8s8gMADSe1Uybz8/MdLS3F91AY2MikU6n
I75WZwYAoMYFU+VvHrylMMVt+sDhl6o7AJ25jv3DP5aMzMGnAAAaSFmmzblc
7lBXV9HUHFy9vb2lvlBnBgCgZhWmyokNbx6BrTOzVBGReWg07sEBAJRN2afN
vb29RTtzcOeHurpyudziL9GZAQCoTZNP3TM3Pd5225f7Hv3UpnU6M8tz7OTF
yHyTyAwANLYKTZsHBgY2JhJFa3NHe/v5mZkFt9eZAQCoTVNjR599/hezsxfm
/nDiP9s3g2WYi8y3WskMAKwFlZs2Dw0NXX/ddUX30Njd2joxMTn/xjozAAB1
QGdm6Y6fKhGZb8oPXuacdACA+lbuafOJsbF3b968ePeM4HrP9u3ZbLZwS50Z
AIA6oDOzRCIzALCWVWDanM1m33/jjUU30Ni6ZUshNevMAADUAZ2ZpTiZuRiZ
F+/JLDIDAGtDZabNwTR439690alZZwYAoA7ozFxWRGT+xg/jHhwAQFVUbNqc
y+U6OzsTzc2Lt2sOU7PODABAHdCZiTYXmW8rvl2GyAwArB0VnjZ/7qGHSq1q
TqfTOjMAALVOZyZCycj8PpEZAFhbKj9t7u3tXbykOfjIppaW8OM6MwAAtUtn
ppSfvZBvul1kBgCYU5Vpc9HUXLh0ZgAAapfOTFERkfnx78Q9OACAqqvWtLm3
t7dUZ97T1laxhwUAgNWpwIQ5l8tls9nR0dHvfffpI0eO9PX19fT0HOrq6uzs
7Ghv37d3bzBD3t3a+v4bbyys1rhhx47gj8EHg0/dceDAXe0dyWTygfvvD77w
cH//wMDA0NDQibGxiYnJ2dkL5RgjkURmAIAFqrg8o2hqDmbOGxOJYJpdyUcG
AICVWt2EeWJicmRkZGBgoKenp7Ozc09b26aWlsJMePHcOHwbXkU/W3i/8McF
X5XYkNi2bdu+vXuTyWQwA0+n088cf27qX1+tyDdnbboUmW8qEplT6bgHBwAQ
k+q+DLDUquatW7ZkMpkKPzgAACzfcibMuVzumePPDQwMHOrqmp+Ui7biiKto
Z17uV4XvJ5qbC1Pujvb2np6edDo9Pj5epe9e4zl9tuRKZpEZAFjLyteZw4n0
Za/CFnMLpsTBBPj6665byj0E19DQUNm+AwAAEOFyE+bx8fEwLO9ubd2YSBRW
F684F5fxKixyXpygg2l5MIH/3EMPHR0c9OrCJfrl6TP5t324eGR+7EjcowMA
iFX5OvONu3atfgK8xBsHk+GyfQcAACDCoglzuGg5lUp1tLdfe801C1ru4ivG
zrwgNUfc4D3btyeTySNHjniZYUmnz+bXfVRkBgAorjY68/rlLPbQmQEAqJ55
E+a3br1vfltevGC4Bjvz+mUu6lh/cYeN+w4eTKfTr7zyStzf/ZohMgMARCtf
Z56YmFzW1dnZmWhuXjzdfffmzc8cfy76a19/9bWyfQcAAKCEXC73T/2fWvqC
4aV35k0tLbt27brjwIFkMtnd3d3b23u4vz+dTh8dHBweHh4ZGQmmxCfGxgqb
zo2OjgZ/DN4GnxoaGgpuNjAwkEqlgi881NUVTK337d17w44dYQNfzaKOwu3D
t3va2oKHCB467r+KWJ19KX/tx4tH5i88HvfgAABqQ3XPAZwvmCGXmtM6FhAA
gBidn5k5OjiYTCbDzHvZQhsRmRPNzTfs2BEewHe4v394eDiY6Ab3v8SRFDrz
0pcWT0xMnhgbC8YfPNyhrq47DhwIZterXxEd3El3d3cw/pV+U+uWyAwAsBTx
deZgjhr9Yj2pGQCAajo/M5NOpzs7O8Pj/Ja7ADi8rr/uujsOHOjp6QnuallJ
uagVdOaipqemRkdHBwYGuru797S1FT2be4lPc1NLywP33z8yMrKa8dSNsy/l
W+4uHpkfSMU9OACAWlIDnfk927dLzQAAxCWXyw0NDRVWL69f5obGGxOJPW1t
n3vooaODg9lstrxjK1dnXmx8fHxgYOC+gwdv2LFjZc353Zs3d3d3N/KWGi+f
E5kBAJaqBjrzvr17e3t7i07jg0nvxMRkFQcFAMAaMj4+3t3d/e7Nm0sd6lcq
sf7Oxo13HDgQTGJHR0dXuWI5WuU683zBlPt73306+Fbsbm1d1trm8J3333hj
KpVqtHm7yAwAsCw10Jlv37cv+GPR1Bx8JJjrVnTqDgDAWjM9NfXEE08E88yi
88+Izrzutzfd/8VHhn/09HQ+Pzt7oQpDrU5nnm9iYjKdTieTyU0tLcta3pxo
br6rvWNoaKg646ysl8/lt95TKjJX568eAKDOzO/M+/8qrvXM4Uf6+vqKLpO4
48CBXC5XxaEBANCYToyNHerquvaaayLWKi/ozIkNiXkLM1Jnqjvg6nfm+YJv
V29v7562tiUubw6vrVu2BF9V9i1Eqmd6pmRkvvfhuAcHAFCjLhx7NK5p8+LO
nC+9qjmZTFZxaAAANJRcLpdOp/fu3buUPTHC+ee111zT2dn5118//LUPXjH/
U58erebSjJg7c0E2mz3c33/7vn2X/b4Vro2JRPANPP7jejsucHomvzMpMgMA
LM+r4zFOm4t25sDnHnqo6JS1p6enamMDAKAxTExM9vb2bt2y5bJ7Yqx/Y+Pl
MC+n/uje/3TwtgU3SzQ3B9e79t/1+we/FNymCos0aqQzF4TBOWKF84Jvb7gP
Xjqdro/XJ4rMAADLcuYHj/3ZI8G0efGOatWcNpfqzIFkMll0VXMwp63woAAA
aBCZTCbcImNxYS7amfe0tQ0MDJw7d25u992pY8F8uD/1teBtqeurP/hpFZ5F
rXXmgmw229vb+76dO0vtcb3gI5taWmr9rMDpmfxNB0tFZnsyAwAs9tqLp2ph
2hzRmXO53B0HDixeHZFobj46OFjpgQEAUNeeOf5cZ2dn0ba8uDNv27att7c3
k8ks6yGqVh1rtjMXjI6OFnp+9JYawdvgZj09PbW4dfP0TP7WQ8Ujc8fn4x4c
AEC9qs60OaIz5y8eAr67tbXoRnkjI/W2yRsAAFURTBTD5QqXjcyJ5ubOzs6h
oaG4h3wZtd+ZQ+dnZo4cORJM4KM3cA7/ajYmEoe6umqnNs/9+lM6MlvJDABQ
46I7c/7ia/Hes3374pfgbWppGR8fr/JoAQCoZUNDQ3d+cH+pM+nmX8Fksre3
t3YiZ7R66cwFJ8bGlri8uUZq8+uvvlYyMn/ksyIzAEDtu2xnzl/cVS/4RWDx
7wtbt2yJfUYKAEAtGBoa2tPWFi6jXbwt8PwruFk6na6vclh3nTk0MTHZn/pa
MGmPXt4ce21+YyXzTUUi8/4H6+ufCgDAmrWUzpy/uOHb4uUQ4bnV9TXZBgCg
vIL5ZFiYI073C7fISCaTzxx/Lu7xrkSdduaCo4ODwd9R9Nrm4IqlNkdtl7H/
wbl1zgAA1IMldub8xdlpMPNcvDTl9n37crlcdUYLAEDtGB8fv+PAgYjT/cLr
2muu6e7uruvXwdV7Zw4d//FIR3t7TdXmuci8/8HiK5lvPWQlMwBAHVl6Zw48
+eSTReeinZ2dVRgqAAA1IpvN3nfwYMQBf+Es8frrruvt7Z2YmIx7vKvVGJ05
lMlkkslkork5eieN4Cn39PScO3euciO5bGTWmQEA6siyOnPgsT97pOj2bt3d
3ZUeKgAAsZuemurp6Zm/o1qpY/76+vqCG8c93vJopM4cWkptDq7g7/Fwf3+l
Xr34kc+Wisz56ZmKPCIAABWz3M4cONTVVXTPvVQqVdGhAgAQo1wud7i/f1NL
y+KdMRYU5rlpYWN1wsbrzKEl1uYbduw4OjhYxsedW6jc8XmRGQCgkaygMwe/
YpTa2C2dTld0tAAAxOLo4OANO3ZEn/QXFubzMw0YCRu1M4cuW5sLx7KcGBsr
z0Pe+3Dxg/92JkVmAIA6tYLOHAh+fQhPFV98aEhwh5UbLQAAVTY+Ph5MFC97
0l9vb2/D7JKxWGN35lChNhfdJa8QnA91da12w22RGQCgEa2sMweC6eUNO3Ys
nnwGk/CyrXMAACA+wXyvu7u7sMy1aGcOPluG8Fjz1kJnDmUymY729ujUvKml
5ciRIyt8gLnIXGy7DJEZAKDOrbgz5y/OQoNJZtGZZzabrcRoAQCojoGBgaIz
vfmduaO9PZgQxj3Salg7nTk0MjJS9NWL868P3XLL2Mlnl3e/pVYyb71HZAYA
qHer6cyBE2Nj808bL/wCcsOOHWthEv76iyN//fXDn3vooZ6enuCdb//0X+bO
NFmCqbGjX/+b4+UaRnBvX/3BT8t1bwDAGhdM8MLGWDQzhh/f3do6MjIS90ir
Z6115lA6nd62bVv0ps3LWM3+QKpkZH75XIWfCgAAFbfKzhwYGhramEgsnnl2
tLcvMbrWp8lTX9y7+Fk37f+rf77MF07/U/+nglv+u3elXirPSKa/feO/TzQ3
Bw994kK+ob/nAEBlTU9NdXd3B1O7Uof9Bdd7tm9fg0c/r83OnL94LEtfX9/i
hSXL3kajVGRuuVtkBgBoDKvvzPmLSx0W/BoS/mLS09NTxqHWjtncmW/d9pvh
07xu4FQw/f6Xv/2j8I+JDYngI6UC8msvnvraB68Ic3QZm3Awnu9/7NeDu93w
jgN9z7xYlvsEANaaoaGhrVu2LNgfY8ExHH19fblcLu6RxmDNdubQxMTkZY8I
DH6bKLmJisgMALAGlKUzB4JfOopOOBtxucv09z/26+FvXk2PHAtbcbi2OZx4
N6WKH4M4+/w397396rkbfPK/nqnAqJ574F3rfntT89XbHx4/X/67BwAa1yuv
vJJMJovuilD4Y3CDtXwAxxrvzKHR0dHdra0RC5uD79Lh/v6FX/aFx4sf/Hft
x/Nny/TyPgAAakC5OnPgUFfX4lXNwWzzxFjx7lqnzhy+M/y1K3HFAyfeWI/8
Ql9bYsOlzUOKduap0b8MV4AsYWONFZqdvTDyh/9h7tsuNQMASzZ/GXPRa3dr
6/Efr6GtmIvSmQsO9/cH342Ihc13HDjw5v8lMReZi61kFpkBABpOGTtzLpcr
eiz1tm3blno4SM17/cWRfW+/OuzMH/n7M/M//lTHxnW/vel/+3T/qbPTCzbE
mH3+m2F133DlJ56erugAJ8MNPTa848BTL75e0UcCAOrd9NTUoa6uiMIcLk9d
mxtlLKAzzxe9jUa41OTJJ5+Misynz8b9JAAAKLMydub8xTln0fUwt+/b1xjn
043/+c4wMm+48hM/fu1XPhU8wfBa+DVTx+67Yl045a7GMuN/ezZ8uP/l3X9+
ohG+5QBARQSTwOhlzJ2dnQ2zVGD1dObForfRCK5PbVr3/2392FTTrl/ZN2Pd
R61kBgBoSOXtzIETY2NFX0nX3d1dlvuP09Sxu69cd2ln5vufXtrXXFpgHFy/
8ZXj1Ynt57//mUs7eNz/dGPkfQCgjC67jHnrli1DQ0NxD7O26MxF5XK5vr6+
jYlEqX9Lv7Nx4//91mvzTTe/GZmtZAYAaFBl78yBdDpddJ45MDBQroeIxb/8
7R+9ue/csZeXknAnn7onTO6L1z9X0Gzm0bdctXhzDwCAYO73nu3bIzbXPdTV
NT01Ffcwa47OHGF8fHx3a2vEP6pPbVp3pumG/Ns+LDIDADSwSnTmQHd39+Id
24L5+ejoaBkfpbom/3/27j62jevO97/R9nbvbhf5I2jt1DTVGySA4aU2DmQ5
vpEt50FunFSwr+1AjttKBRwiSbNs6xZSN2m5v6YF2948MN2rdtkgKwU3rqGb
ZrneNpXbJGWwwN0UiinHC8her5KW94+Ga3VtKmkklnLDROHvUCOPRvNAURLJ
c2bm/cJAsPVAHj7MnDMffuecZ3ZcoT2iwNrd1cx+/P6FkbuvnJ8xw3ZxwPqZ
GDw0PyP0x7p+UWjkPQMAAEXNFApihKZ9Em0bCVLGXAE5c2Wzs+/F4/EKhc2b
Pr7hR08Oym4mAAAA6qhOObNwsKvLtCCI2MT5y8Ly0+7y2+SOdfOP5cObv1fN
1Mdv9HfOP/artib+Y7b+TTSYeEFrbTnifuRkQ+9anvL82MWJibf+8O75icn8
suN1/c+1rytZsDFf0O79IrOVAAAUMzIycuO2bXrIbM2ZI5EIZcwVkDNX4/zx
R+5vXmebMwcDAfG1p7vbrecCAAAAWEr9cuZcblI7nTFGzeLrns5ON65aPvnM
vfoDqSq5/eOrf/Nna/Vc+tfLu7f8u+cnzl3MO0adF98UP5146w+V2jtXfe2T
kubpsROJr9ynR+vzAXvr3i888dyZ90pLzXCSF3/+gyN7tT/XToK07VNHvjf8
2viSgbO4fXELvZ9ap997+U0yd+9jZ18VDes/daEWj3L17woX8dWDBYD6MpUx
W3Pm5lCIMuYlkTMv7amfldbc9O6anf/7w9cGNywqbDa+68T7LZlMym4rAAAA
aq9+OXNpbq42fUxumvev5vdVc+9fGHnsO48kEon+/v6/7X/0/uZ1+kwggau2
iu8MJH4ovortp6/93vrn2mTO2u9XWVH8zoVzP3pysPdT69Z9otmxcPrS+LNH
dusj9r3HHQPsc4/v03/thn/MrGpBwIkX9n/0KvGoa7iJhm0cOrf6ZQrFy/TD
264o58NzpzMfuO3IXYcjt64NGhNj8Sw53dH02Amt6kb8uXiirrvz8Dcfesj4
Emi3+fP/dP5kZDajLfUo/mRN617xCv70p+XUWj+9Ejf7pfTKF1Wv7btCcb56
sADQGOl0entbmynrM+bMkUgkl5uU3UwXIGdewlzIPLfdIr6eW/PfxXjMVHBi
fOMd7u7hjQcAAOAxdc2ZhRPDw9YLM8V3BgcG6nF3NWQsYNYSS31srEWI4t9a
OGkXI09q2aO2fSn95hKB6qXxRz9ULn6+uqnJmHCa/vb9CyN6jfR8ye6tg04J
5nsnH10owL41sZrlAMVNVVjYZcXbf/1fo6toVNns688uTA9y59+fu5gvz31R
frryesyu35f1JRCPS/vsQGzGMFmrT/7yFev017r84chzZ623IL7zq3vXaL/w
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
aRkmn7nXtJS2bXT23slHTaeZVVVWV7xrD5n82eNfrBAyO0zavOgWzj2+z/RX
1915+P7mdesvF9V/4YnnHKZWnp8WQ3+BAmt3i1/+0ZODia/cp3/zA189Xv0L
UN93hWJ89WABoHqZTObGbdts+7VgIDA4MCC7gT7li5z5N2/Mhcy32OTM8kJm
zUyh8Pn77nMa8vV0d+enp+W2EAAAAErlzMVicU9np7V6JxwOS2jNmb/TG7Dm
kZMruIHZ2ffGv7tj/hasK81dGn+mp2ndJ5rXzxU895+6YBudiW/qQWhg7e7h
18Yn80uXMOkloJ4tZp4z94zl386M/uDIXi0Znn+2W/d+4Ynnzl3ML5lGil8Q
2zsXzv3s8S/+j7+47uqmJmPa/P0XXqt4I/l/PXKPdkev/+on4hYO3XanqQ0/
fe33y3tI9XxXKMdXDxYAqpNKpTZt3GhbySy+L4ZtshvoX97PmSuGzIp8wlth
uuabd+5kZUAAAAC5lMqZS3OXxYlhvHUA2fjqnYnBQ8FAQGvJyi/Sn5u/QruR
v/73S4t+MpdwzhYn8tPT2r8db0P8KF+Y/sOlfKlU1ZS0hmmBHx6fUeS8oK7E
Yyw/M/mC9nUVDzn//qV3isXi/GKCVcTUtv8uXX59l3v3dXxXqMdXDxYAqqGt
+qdfkWTctre1MSGzXB7Pmcsh8wG76TJuKj31M9mNW+TE8LD+Wpii5uZQaGRk
RHYDAQAA/Eu1nLk0N3o0nV6J/4rx5JmxsQa2Iv/8Zz84f42qzQJwyzD7+rPa
w1lzaKghEdmkNpnD+rm15wjlAABQX7FY7Ovt1RJma858sKsrl5uU3Ua/83LO
PB8y21UyJ1RcZU+cFLS2ttpOoNEUDB47dkx2AwEAAHxKwZxZ0E61jDmz2Nrb
2xu36s2lcX0NuP/6v0ZXeWP6PLR7j9d9EouJwUPz8zYcGrro/UJmAABcL5eb
PLB/vzFkNo6CotGoHy5NUp9Xc+Z3z0+4K2TWiL3GdrY9fa+R3UAAAAA/UjNn
nikUdnV0WIeOkUikMQ3Qlx4LXLU18R+zq79BbYJZcZsrn4KjCtPpJ+ZD5o5H
znBKCgCA8jKZzA1bt+qfqhtz5qZgkFX/1OHNnPn8xdJH7rIPmR9TvSq4WCyK
UwN9mjvTtZAHu7qmpqZktxEAAMBf1MyZS3OnXaaJmrXTrmSylpUVs7Pv/dvA
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
TfSelDcDFZAzK46cWXHkzNVIp9PWWZrF6K4x907OrDhy5gYYHBiwPcnSrwoU
28GuLnFqyW4COHFjzmwNmfV9XxwWZLeuxsiZFaflzMFAYHpNuzVknp19T3YD
/c579cwaz0TN1DM3RjweN34g6zR4bgoGxS4jXouRkREXvYuAxiBnVhw5s+LI
masUiUTEmYXpQ+Fjx4414K7JmRVHztwY1ssKbEfOzaGQ2FvFvnlmbEx2kwG1
uC5ndgqZxea9kLlEzqy4fOHqpiatozHnzPc9LLtxKPNkPbPGG1Ez9cyNMVMo
bG9rc7oM0HZrCgbFMLuvtzeZTLplhADUFTmz4siZFUfOXCXtyn1TZ92YBQHJ
mRVHztwYp0ZPVzNaNs1Ed2D/fnFek0qluDywYcRTLU5SxqEebSV6LcZU/zU6
MTzsFDKLnVp26+pi3759eoouuy1YZOzsq/9vy2e1nFls59b8d30r3XJEdusw
T/T43t6DtKl3rduujg4xRpLduqX19fZqfVA0GpXdFo8zLghYTc5sHEWLbdPG
jT3d3fF4/OWXXnTdNOCuk81mZb9fYEPsROsvzzMjuy2wcWZsTD++yW4LbAwN
DelDFPXPOuXSPoU3dcefv+++et+vfl/1viOsjF4iKPojdqK6Emcoyxotr188
sYZ4pSKRiDj9FKdjXOBcP06TnLBJ30wL0Ku/reAc2RubPx+1slswEDD+V39b
6t/n9VJkM/b4HntRlnxQrni83ntdlN3EKYlW3r/iJ9z4ltvZ3i5G4MeOHRun
oqYODnZ1sV+wsbF5cjMOzKQ3hs128+Sw2Usbr04Dtlxu0qm+sfpNe6Wubmra
09kZi8XEUDybzcoeY3rK4MAA+wIbG5s3NqfRl3GZLY54qm2efFE8+aDY6rSJ
wW0ymVzle8b65+3t7dFolGFzbZEzs7GxsbFJ3Bhhsvl5E29+MRj7/H331erW
tK/XXnPNns7OwYEB5qWpFXFqI85EdrKptzUFg9r7/8Zt26Q3xmm7YetWU/mo
vjWHQt5+a2nLzIltS0uL9Mawie2mHTv+x19ct2Pdx+9vXnfr2qD+zhTfEd8X
+9HNO3d6+z3prs24B3n4dWk3PFLTJr6/va1NvG+lN9J200sFxD+kN8bbWyqV
Eu+E1Z85ildKn0BjMl+QPcD0pr7eXg8fr9y76Rcsi8Gz9MawWTd95tL1c9dc
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
ZNZz5qZgkHlTIUEtQuYSOTM8IRqN2lY137htG1EzAABYPXLmerh5507TEE6c
mzB4AwB4nhYy6+v96VswECBkhgSJpH3I/JG7lhUyl8iZ4RXRaNR2ruYbtm7l
bAUAAKwSOXM9iGfVmDNr/w6Hw7LbBQBAHaVSKeN6uHrITCUz5HAOmd89P7Hc
GyNnhmc4VTW3trYSNQMAgNUgZ66Tnu5u08hNDOdGXxmR3S4AAOpCC5mtM38S
MkOOcsh8i13OfKD0mzdWcHvkzPAS27XLiZoBAMAqkTPXSSaTMdZ0aefauzo6
ZLcLAIDaOzE8bOr1tE18M5VKyW4d/Oepn9lXMq80ZC6RM8NzYrGY9aAtTli2
tLSIExnZrQMAAK5Ezlw/1kvSxH9/8n+elt0uAABqySlkvrqpiZAZEtQhZC6R
M8OLnKLm6zdvJmr2uvy75yfOXcznnX5+8U3x04m3/tDINgEAPICcuX6mpqaa
QyHTsO2666+fKRRkNw3wKsbMQKMlk0nbi68JmSHHj39Zj5C5RM4Mj4rFYsFA
wHoYF2cx4+PjsluHGnvnwrkfPTnY+6l16z7RrL3QH978vTPvLf6lS+PPHtmt
n73uPf5rOW0FALgTOXNdDQ4MWIdt8XhcdrsAT2HMDMhy7Ngxa8IstmuvuYaQ
GRI4hsx7S2dXW5xJzgyveuw7j9h+XNgcCp0aPS27daiRS+OPfmit9imwPmDW
ti+l35ydnR83v39h5G/+bK2xSmrNrYNvym05AMBVyJnrSnTZN+3YYRq5ic6d
9TWA2mDMDMgzODDgFDK//NKLslsH/ymHzLYL/9UgZC6RM8PT4vG47QQamzZu
TKfTsluHWpjN/OjJweHXxs9dzM++/uyta4ObPr5hflT8yMn535kbV5tOXdcc
GmLMDACoHjlzvaVSKdPFaOLfkUhEdrsAT2DMDEjS39/vGDK//LLs1sF/6hwy
l8iZ4XXWo7oYO4lNvPNHRkZktw6rNTv7nrZp/50YPKS9xNplgHOX+U0+/9kP
iu984KvHxbj6XDJxuLvnrsORn772e5ntBgC4DTlzA/R0d5tyZrFRGwCsHmNm
YLneuXBu9JWRl196MZlM/uLnL776+u/0Pah6tpVvWshM71ZDb2dGn/yHUdmt
cIPhlx1C5jtqFTKXyJldgr1mNWxn/Fv9VSo16XdQW9PpJxZOTtfuPv5OeRRd
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
yzRCE4esTCaz6JfYcdyDfqdxGDPDO/Inf/Lsj54cXP02kPjhz/+z6muWdb9N
6vmAce0AY84ciUTq8MBdQdKrQ9evcQyZb2p8yFwiZ1Yce01jZbNZbYYla9q8
q6PD5gpNI0O/w+Rm9fXbpLZAeWDt7r7nzp4/+lfrLWuXzBYnHv3QWv3l2zh0
bjr9hBhFs8QJ1CN7zFzi8FWZjBeI3l9J5MwSnRkbs150Fg6HF/8SO4570O80
BmNmeMn0SfF+Fu/S4IbgajbtZH/5tfr5Z3qa5j/ovHwthmkzre7kL7JeHbp+
4TdvzIXMtygSMpfImRXHXtNwudzk7bt3206gceO2bdls1uHvFvqdNY+cbGiL
/eeN/k7zq3PVVtNJyuzse/p0c8YXUZuJDlCI5DFzicPXEqS8QPT+SiJnlisS
iViHZ+l0euE32HFcg36nQRgzw1P++Orf/NnaLS0tq9xaW1vFjvDX/768Rfre
O/nopo9vWG83UcZ6p9mcfEXWq0PXXzFkljWFCzmz0thrZMhPTx/s6rL2HWK7
fvPm8fFx65/o/c6HN3/v141vsc9MPnOv6UNk25GweFFML+Le479msiwoR+qY
ucTha0lSXiB6fyWRM8uVzWavbmoyDcz2dHYu/AY7jkvQ7zQMY2agNmYzWtm/
HjKbdpn+/n7ZTfQrn3f95ZD5gP10GU/9TGK7yJmV5vO9Rp6ZQiEcDttGzc2h
0KLimdJCv7PhY13PXHhfUpP95NL4Mz1N6z7RrD3n/acu2I6ExTfPPb5vvipj
7e7h18Yn81Wt5wj4CIcvNdH7K4mcWbpvPvSQteryxPDw/I/ZcVyBfqeRGDMD
q2aq+TflzOIfTz/9tOw2+pifu/75kNmukllqyFwiZ1acn/ca2YrF4pePHLHm
zGITe83LL72o/Zre74hRGaPlxhDPeXkrTuSnp7V/V/jNUr4w/YdL+VKJGeYA
Ew5f6qL3VxI5s3S53GRzKGQqA7hpxw4xZiv/mB1HefQ7DcaYGVi9fxu43/oR
p9YTNQWDyWRSdgP9za9d/7vnJxxD5seOyW4dObPa/LrXqMNaOaP1LKJP0epn
tH7HOtcZACiOw5e66P2VRM6sgkQiYR2YzdeSseMoj34HgLvMPP8128IzrfYs
lUrJbqDv+bPrP3+x9JG77EPmhBIffJAzK82fe41i+vv7bXuWwPr1PziyV5tf
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
AAAAAAAAAAAAAAAAAAAAgFj8/7TqeiU=
      "], {{0, 976}, {1912, 0}}, {0, 255}, 
      ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {1912, 976}, PlotRange -> {{0, 1912}, {0, 976}}, 
    ImageSize -> 576],StyleBox[
   "\"Figure 4.85\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.85: Example \
2",ExpressionUUID->"bf6a3717-de00-4295-844e-35f90bb32eee"],

Cell["Newton\[CloseCurlyQuote]s method takes the form ", "Text",ExpressionUUID->"effcfc4a-c966-48ad-a8a3-fa75887dd47d"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"n", "+", "1"}]], "=", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "n"], "-", 
           FractionBox[
            FormBox[
             FormBox[
              OverscriptBox[
               OverscriptBox[
                RowBox[{
                 RowBox[{"cos", " ", 
                  SubsuperscriptBox["x", "n", "\[VeryThinSpace]"]}], "-", 
                 SubscriptBox["x", "n"]}], 
                StyleBox["\[OverBrace]", "TypesetAnnotationFont"]], 
               StyleBox[
                RowBox[{"f", "(", 
                 SubscriptBox[
                  StyleBox["x", "TypesetAnnotationFont"], "n"], ")"}], 
                "TypesetAnnotationFont"]],
              TraditionalForm],
             TraditionalForm], 
            FormBox[
             UnderscriptBox[
              UnderscriptBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "sin"}], " ", 
                 SubscriptBox["x", "n"]}], "-", "1"}], 
               StyleBox["\[UnderBrace]", "TypesetAnnotationFont"]], 
              StyleBox[
               RowBox[{
                RowBox[{"f", "'"}], 
                RowBox[{"(", 
                 SubscriptBox[
                  StyleBox["x", "TypesetAnnotationFont"], "n"], ")"}]}], 
               "TypesetAnnotationFont"]],
             TraditionalForm]]}], "=", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{
              SubscriptBox["x", "n"], "sin", " ", 
              SubscriptBox["x", "n"]}], "+", 
             RowBox[{"cos", " ", 
              SubscriptBox["x", "n"]}]}], 
            RowBox[{
             RowBox[{"sin", " ", 
              SubscriptBox["x", "n"]}], "+", "1"}]], "."}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"f5e12766-3dc9-476f-b4d6-31d040d9ea28"]], \
"Text",ExpressionUUID->"9d372dd9-eb07-41da-a270-9af9481df47f"],

Cell[TextData[{
 "The results of Newton\[CloseCurlyQuote]s method, using an initial \
approximation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.5"}], TraditionalForm]],ExpressionUUID->
  "945616c3-f7fa-4e81-bc74-fcd3dddacd18"],
 ", are shown in Table 4.6."
}], "Text",ExpressionUUID->"92b81be7-a8d2-43b2-96d8-fd056593419c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     PaneBox[
      StyleBox["\<\"Table 4.6\"\>", "TableFont",
       StripOnInput->False],
      Alignment->{Left, Center},
      ImageSize->{60, 14}], "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\\!\\(TraditionalForm\\`n\\)\"\>", 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"Residual\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False]},
    {"0", "0.5`", 
     TagBox[
      InterpretationBox["\<\"0.377583\"\>",
       0.377583,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"1", 
     TagBox[
      InterpretationBox["\<\"0.755222\"\>",
       0.755222,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"-0.0271033\"\>",
       -0.0271033,
       AutoDelete->True],
      NumberForm[#, {7, 7}]& ]},
    {"2", 
     TagBox[
      InterpretationBox["\<\"0.739142\"\>",
       0.739142,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"-0.0000946154\"\>",
       -0.0000946154,
       AutoDelete->True],
      NumberForm[#, {10, 10}]& ]},
    {"3", 
     TagBox[
      InterpretationBox["\<\"0.739085\"\>",
       0.739085,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"-1.18098\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"-9\"\>"]}],
       -1.18098*^-9,
       AutoDelete->True],
      NumberForm[#, {7, 5}]& ]},
    {"4", 
     TagBox[
      InterpretationBox["\<\"0.739085\"\>",
       0.739085,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], "0"},
    {"5", 
     TagBox[
      InterpretationBox["\<\"0.739085\"\>",
       0.739085,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], "0"}
   },
   AutoDelete->False,
   BaseStyle->{"TR", 13},
   GridBoxAlignment->{"Columns" -> {Center, ".", "."}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{
    "Columns" -> {False, False, False, False, False}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, Bold, {Automatic}}},
   GridBoxSpacings->{"Columns" -> {1, 1, 1, 1, 1}, "Rows" -> {1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 4.6",ExpressionUUID->"57fed736-e3ae-4b88-b35b-d6ded5d9923f"],

Cell[TextData[{
 "We see that after four iterations, the approximations agree to six digits; \
so we take 0.739085 as the approximation to the root. Furthermore, the \
residuals, shown in the last column and computed with full precision, are \
essentially zero, which confirms the accuracy of the approximation. \
Therefore, the intersection point is approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.739085", ",", "0.739085"}], ")"}], TraditionalForm]],
  ExpressionUUID->"feaf0754-232a-4092-9474-344227b0a7d7"],
 " (because the point lies on the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "x"}], TraditionalForm]],ExpressionUUID->
  "c2bb3ac9-23f3-4ef3-9d92-f08f48bea6d7"],
 ")."
}], "Text",ExpressionUUID->"985b4973-6c38-4cf0-a9cf-dd28ac218a3a"],

Cell[TextData[{
 "Related Exercises ",
 "27\[Dash]28",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"e2e21669-8c87-41fa-8ec4-1bc9937ec017"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 3\t", "ExampleFont"],
 "Finding local extrema"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 3 Finding local \
extrema",ExpressionUUID->"ec7dba37-6f47-4297-9704-b7c06a8b9d0d"],

Cell[TextData[{
 "Find the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "8ba6cc50-1597-4140-ab7e-4a87d1f54d0a"],
 "-coordinate of the first local maximum and the first local minimum of the \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], "sin", " ", "2", "x"}]}], TraditionalForm]],
  ExpressionUUID->"bccb8b92-4722-4e62-be9e-ce7dd79f1143"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"047bb3a6-b565-4e54-ad0c-a87dbe211e3d"],
 "."
}], "Text",ExpressionUUID->"585d4ba4-71b1-438f-8915-b643f6942956"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"6808aa0c-6b43-454a-a640-70fea4f48c15"],

Cell[TextData[{
 "A graph of the function provides some guidance. ",
 StyleBox["Figure 4.86", "FigureFontText"],
 " shows that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "4ea8c9d5-62c8-4ca7-9307-b84bc1203a79"],
 " has an infinite number of local extrema for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "f6e3f4ec-6f27-4fa8-bd2f-8a9369b987a5"],
 ". The first local maximum occurs on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "b12e77c4-90c1-4f5a-9a5a-7ca7a5c9754e"],
 ", and the first local minimum occurs on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"2", ",", "3"}], "]"}], TraditionalForm]],ExpressionUUID->
  "5d92a501-4ce0-43fa-a4cc-63140e29c1c3"],
 "."
}], "Text",ExpressionUUID->"9b608ca8-4495-450b-8b8d-88e782982fae"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    TagBox[
     RasterBox[CompressedData["
1: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
TnVJ+XBXW+Z2FFWq2jLfahUAACATxi698WVjv9Mz8S4cnU5j1EKNps/aF67d
sGXzZvOx/uVNiwsLtcvkz1u5oahI+/xPtu5zqH2onk7TWbNvbutU1e94s9Pp
Wz8dkG59RcNgxm4dAADASdMn1ucnsFdUfl6edknDZk8zX7nIn1oTJ22xvH5o
X9JvXbuMdhMi/b4/5Eg90J506uq59WUXB+UBnA5k7NYBAAAcVbf123pEjH9u
/cr25foCf2XD+6bV92bB49/7Wmrrj/LnrUygNpuK9NNpx0RYXpdU0mLvIOPb
22HazzRT/awAAACcpu8uKo5ZS3Y1x7xgVJV1de1AIlce6TpzaP8fyo4dO3Lk
iOXHPx7e/89/M1eLx/d955W3i8tKP6gQnxT/iD2StKSfTj/uH5NLlxWt9g4y
PnUvgOg1WSzbBwAA/nFvg1GtYhlzf1LD6v7EJp0mJBIZd2tVVMrp1KJ0mfGO
o+apBQ5N0wUAAMi8zgNr9aLojz7qsryMsW+/sq3G8jKh/kBbW3uSCXO6G/+s
JbusGqLaLP10uu5KUE6nGZ/2qZxol8Zg2oQLAAAgaxnqosqKveZT6pHIePWL
903VVy12I1U1vFuknaAvmPvc/vrE2+pPretX2/Wn1I0/WemnU+Vcn3xi/XwG
Bh49BtOy/WUXWbYPAAD8Y6J2R5zy6e3P9ulfXVLaZPH9rWX6BRYVFCgb3k+4
gpruTqbJsiGdmpLh+qagvYOc0ROXBl2v3wIAADhKP7+fP2/ljsaQ4Qsn9Y79
yqvVlrHTeN5fO0ef8K5P6e5kmiwb0ml1h1Q7zfxZ9YOdI3I6rWrL8BgAAACc
1npoo97R9Cdb971dXHZs06q5ixZPVU1/Xxqzi1R/zfL505ucfqXoeOK105Lv
zk4+06bOhnRqasVfGch0Or0wOiGn05KrGR4DAABABox1NpTu+JkWNbVyaP6C
pSKpzhjAuj7cqX3XA6u2fNw/lujtRUINpfsP7f+DOA78qT4r1uzLk05LrmYg
VFsNg2X7AAAgV0Qi46H+QG9vb8/ArQS67qcrAzehSzOdtobGTUXLjLbi17Fs
HwAAwAfSTKdqK34pnWa2Fb+OZfsAAAA+kGY69UIrfs2KhkF5jgHL9gEAALJN
mul0fZP7rfg1FjmZZfsAAADZJs10qpzvlzPhuT7bB5kIlu0DAAD4QLrp1DTb
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
K3/n+Ca8Y5//fPZ07TTWZADxaGuNUvXEPmvJW3KL4zE1uus/A88eb3R25AAA
n0oxnZq2CvXORlGa1pCp51VJS2rFnNY3/5sWJ4y9d2JuBlS/Jypd7Pw0hVuc
qN0hrl/8fbfxcGIeprFn5uy/f1IEOZG+puPZC0cc3L69v0a8TdDW5ovIJK2B
qtv6bb3Vp/bVONXOKJHQ6X9StKStThIYm05fejcAKcJFus6IbCmlSvXur3jX
ePfFT5G5+33BnJcqatWqr/lL09fzarWzRcjOk9ojGbMN1720L55ZadspY/sp
8TgY78jkmqx3HfwBAAD4V4rptPy6lP0cr/AkTzkq72aV4iDD7drMQxHGpI0y
t101VYwNf+snI0oq21mGr5Ss/cHqdS++uKGoyK6P4grt3NZzcmajfjfXll3Q
g5yeDKdPrDtAPETGUq10PnqkepvxaUqiiHfh3XtzVk2FQUMzVeMjKX4q1r+8
6dD+P0gZVcpmPY1nzzV1aqfvtQCv1rTvFZwfWLVl76eNfcMj4odNPLDG6xEB
uzjg4C9X54G1+s0p++otLjF2Sdw7kaIvB4LiYTf+Cky/35lMsHLh19G3JwAA
/0oxnZq6iQ7c8Vw3UaW6Qxrkrra0ph+op8Unz7lP//3dVmO+WOuhjfqpW3/+
gQ63l637sv4gbK24YJyC2P37VXo6fX9oxLFB9B7btErtNr9gqTQAbYTaKebC
tRv+eDmQeO1RW+o+f3LXJHM6FT8AWmV1U/OQcY6EuH51AJGQ3s/KnE51+uOj
Hxv3lEhvYcSPUFTMK3ZsU9Rwy25lrpYqxfMVa3ct4501jl9k+MmZsb3VL96n
nk147b22tvaG0v0b1zwlErt45J0aNgDA11JIp+pGUdI+oV7aKEqnnA5I6XRF
w2D6V2v861ww5yXr2YydJ386Z/5kTc+qGJXVwi3GHTDlybfhFn3Op3hwnKud
6mIt/9E+n+Ra+97j3/vavdy1y3JFkjbpYuPnlmsAe//zH2fNmE7NdV2L5UXS
myDHujyJwejvpGbo268zzF3Jn7dSvAHRsrR4I6ZnbE/tmQUAyDoppNOP+8e8
vFGUTmRRR5qyGs7di/wpldF0p/9JEX/37TyZ7gm9Jd+dPV0Z3vC+lKyM0UvE
lWzrWjCdTmNmwrFL4n3H6toBy/RlbLgac9alId0VzH0uxlqtoLEM61SXp3D7
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
ceOekuaMPRawD+nUB0ingEeY06n4C+v2oLKSyDBy5MhU51jSaeLUAKlFxzi5
tLpj29XhgTtpTRv+uH/smcs31SprQkm1SXnsSa3zsPLae+r/Vncsuzgofqjs
uuNwGunUB0ingEeY0+n2G8NuDyorudiTn3SaiMDYhJoV46fE04FPBm0OhMPh
yN6OUXXiR1mMmKr1qnrsSfEMTqdTPTyL7zod2NIyZF5IBU8hnfoA6RTwCHM6
Pdw96vagspW5J/+6K5noyU86nZG622xFa7xcWtNdF3S8UFkaCKl9q6xGop3Z
t0in0gzV0wHxQyUiNN3+vYZ06gOkU+fQKw9JUfadkdIpW3CmTDnfb67FZeB2
SafxbWkZincev6ot8+/IRLx8sH5AOdFuPLOv/SbGS6fR80bUd0Pn+rbfGKas
6gWkUx8gnTpH/Hlas2ZN2bFj7E6CRJjTKX/pUqaewDUVuzJwu6TTOCy28TKs
RSqoH3C3CNk8Mr6+Kaic6kqodmoavxxW63pFFBdvMHn9zzzSqQ+QTp3T29v7
rYceWlRQID6KP1VffPGF2yOCp33pjZPip8WYTvuGM9Sl0386JsLmXCHih9O3
Szq1JBKaunw+VjvTilbvnCYQwWbtD1Zr7xPFr6RScn7maBonqd67g+rdP9cn
8mplYDRje0PkLNKpD5BOHVV27Jj2Kqcd4kVPfIYz/jBT/3xLtdOSq24PKruZ
pxRmYJUZ6dRM7bQ/fd7cdJzt8Vp1ce3zz2u/iVWVH4rYvOzioHkac7qR9eg1
9TE5HSioHxCR9XD36IXRCeav2oV06gOkU6fpb8P1Qyul1tfXuz00eEjzyPiX
3jip9bGZSqeZaoLkV+reQ6Yg5PSNkk4l6uaksdZAlVzddtWLXSn0dGrsxt9/
O7yrbVj9oapqSyumxj+0jQZOB5RzfWsab4pbLA2ExIuD1wK8x5FOfYB06rQv
vvhCSqfasaig4IePP37kyBFKqRBqQxHl9/+fNtttKp1WtLo9qOwmko/8p7+q
zekbJZ0aqT/VR69ZVx3Lr3vnbL7EMp0aBcYmDnaOqCvvRJJMttt/srMC7iV5
9YZEMD7VpWXXFQ2DW1qG9naMVgZG64J3xJAy/Ch5GenUB0inGXBs06oHHn5k
cWGhOaBqpdQtmzdTSs1xxYE78rzTE+1uDyq7qVU70195p/+Ik051aueoWNG0
uqM15Pgc4JTNmE6Nbkci4p6qOwtoZdU0JwCkGWjFA17ROrXNqwixYkjn+pZd
HFzfFBRv1kSUPdw9KkYr0mzzyHj/bd9OfyWd+gDp1GnD4Ujf8MhDjyy1rKAa
jx8+/vh//Md/9Pb2uj1kuEBdYy7NO83U5ps+Zt54XTzOjt4i6VQTL5rWdHv8
PHVS6VQiwuong3fUuv25PjUimn4CXTjMPQekQFt2TR2niLUn2qeSbU23Gm7v
5VvlfL+IuCsaBtddCYqgu6VlSNzB7TeGd7Wpifdg54gIvaWBUGVAjb7iEI+A
CMDiEO8QxSGSsHaItyQdE2Hto/izKN4qioSsHwN3bDvElevp1MarzZHDI7+e
pNPMqKr8cMZ0qlVTxW/TP3z/+1s2bz5y5AgF1dwhXvDleacZ6c/pb+qfV+nv
8rk+R2+RdHpX20k2VjR1fupv+tJJp2Yig4nkphZXtbwqQmDm66uJF2BLrD7p
RGBOpE9Xylde3KT9GorD/cc26w5vFEZIpxmjv+IlfmjdqNasWbNr507xTOVI
WTUSGf/tv/2bDw7xjD+xcmWCR+HaDQ88/Ij+1CuPPSn+94ePP57gsaGo6Nim
VRv3lPDR+HH9y5uU53+uvLBZP8Tj7Ogtrv3Bau1vonhSXP8JdOUQP4riQVZ+
/AvpkdcefPFSJnL766+/7oUfj1gfH330Ue3X0NFfK/HDuWzzbvGYaIf6iL24
2fygZejQb9c4AOcG4+jdFFf+/M+n06krj2c2H06/SCb4UfyCaL+G4vfxt4Lb
r2w+PrZs3qzNKkzneGz5cvGCeWj/H+rr60WKcztIOiI0cks/KZMjh3hmtY/G
Y3FhofbOccZDfO/cRYvT/NHy62H8WXL6tjJwEx4/xKMd60dRvPrpL4Be/nGV
FghkYKjaD6f2g+rWS59+u8YBODcYR+9mrv35sPdw/RcwY793HMbjoUeWmtdG
pXx866GHfvj447t27qyq/NBPC/9zM51ycHBwcHBwcGT+SGRtVFLXtqGo6O3d
u8+cOeundBqJjIs79f++/Xa2H+LZWffii4kca59/3nhmX4Rz7WTfxjVPaV+d
8eOWzZvf2X1g75tv7Nu3j4/Gj8rG7epp043b1fN9L/9W/Pt/2fL/HNr/B/G2
zolHTDwX2pO49gervXD3M/Zx454S6XHW//2Tre4PL6mPjz76qFbmFb/CWfRr
JX6ktSdCmzagPSNLfl+qfxQ/+eqTIo6Xfys9R37798u/1f9QemVIWfTvjdtd
/2EWH8Vvn/YMrnrkUdcH4++PsfpKJX6I7/3h44+L6znwp/qexrNup0jYSV0u
cW/Nvvg5UfbV72obZu+Y9D15+aY857+6w7mbO/jOO9qTKN4vOHcrXqPuGxuj
5f6m5qGs+zHW32LYsioqY6Ye50jo7mSvGP3z4t/9+lcNF9aOwJi6rL42pPbF
quq/s7djdGdrePuN4d9cH153JSh+fcTxYP2AuqRLHHW96qEt56/pVmq61Bcu
cVR3qMeJdrWnlvgoDvHzII7y69PH0WsWh7Y8aupose0obtL/btp5tTlxXBVP
a2Z/cq2J3z7tGWRVlKPE64N506jEC6Ti/fuZM2cjEXYM8S3xqq6v2b9vcs3+
4W5nex/liE8G75iW9LY493ukp9PcWbPffzsca/uk9U1Bt0eXijVr1mRjOnVI
1r25uDt5Ak7/G+r2WJAiPZ2uff55t8fiZ2XHjiW4JGpxYaHIsaU7flb6QUWo
n55CuUKtNkTvFeXZnXSyjnk3n+LAHYduK9dqpyK6qKUzq2i6pvGm26NLUZbW
TqEjnfoAtdMMCI3c+tZDD824+EW8Qaiq/FArkGpvV7PxTStSoyao6G78F0bZ
mtAe6inI6OD09b/0O3RbuVY7Vc/tWnXFfLB+wO2hpY7aabYjnfoAtdMMEH+n
tEXosc7d79q5s6fxLFk0l4k/8VI3fh/vM5hhz2Rw6mlO1U7ViYiWDdvrsrsz
M7XTbEc69QFqp06rr69fVFBgmU71Yim5NMcNhyPqXPTo2qnbg/IPdVfNTE09
zZ3a6borQeuNZrJ/jzNqp9mOdOoD1E6d9sPHH5dmnD70yNK9b77R1tbu9tDg
Fc0j40pxU1Tt9Og1twflK+aNNQ92jjhxQzlSO93bMRprD0QfvNemdprtSKc+
QO3UUUeOHNGj6eLCwo1rnjrwp/q7d7NyHSuco64rl2qnFa1uD8pX1OmRUo46
1+fEDeVC7VStRZsWmqnHiXZ/NBWhdprtSKc+QO3UOb29vdpiqEcffVQvlvp1
+1GkozQQkmunJyit22l9k+k0dFWbEzfk+9rphdEJpcwqmla0toZ88uJG7TTb
kU59gNqpc371q19tKCri9Q0z2tU2rP59N9ZOT3miH7Jv1AVNXU+LWzom7F93
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
VF7+rT7bjXSaBQzFt8nuN7ss3jPCq1p3r9KWlMZJp/r6cdJpZvXqVWtxrK4d
cHs8yBDx7l4pbpoMSNROXaCu3J96/JNry995YK14pp493hgnyva9t0H/pY73
qpspMRfpn2j3SF3XdSPV2xYVFGhPVvWL95FOs0MkVLf12/rvWv6CpcxRyS7i
5VSkU/HnTzx3OxpD1hcypFPXX0tzSGvZ8vnTjfene/LD79Spj1o0onbqEouV
+zMXEoPHv/e1mcuhnSf1cyKuv6Kqi/TN95TtSo0mny/xJ1Kd+RYJnXjqr0in
WUG8pzDOxMjf+ZnbI0JyjEtvYk2C0hcqeuQ8VE4It+itS/QXQybM5Iiqfn1h
DrVTd6xpvGleuh6/lqg2kirdf+BP9TOUHMc+10/uu55OlRrT3liT74lizkzI
Ob3FT9+vvvxONVgIkk6zw9gl4xSaxx4oIrpkHX1OqdbkZElpk3wJw2upB1ug
+JW5KQ3TKnLHwc4R5p26Sz3fndI+njO/QhrT6ZyXXPyjqZzrs1wJtf0GLzRT
tKkahrJM8D//cRbp1PuM82fE8beHL2ifF28hxREaueXu8JCQoTM/nTPf+Dw+
e7xxekvNe7PBtRdSTutnyIV3tTj6x8sB4yJfT/WfgXMMC6ipnbpGOWWqK1Z3
2HC9hpdc8X7fhitMyfom056tk8eD9cxvnxK+UmJ64aV2mhWilmyIv6TFgTtd
H+7c86/PL58/OY9x8hW1cO0G8RfWuIE4vEZ6lyEO8Qdx8uRU8PSr6/Q1U6wZ
z5CxS298eZ749dF67xvndUdXtoPnmjoJq740lRyonbpq21VTk6WSlvTX/GpL
bLTn1K39NfZ2jFp03WeRvlG4ZbcyV02hOz81fJbaaTboPGlcsjHfsJuwfujN
h5XVBzjp71nivYMxAmnPWv6CpfrzK54++jBkyL1lhiKTaJ8wbuNlnBjcemij
eKY2NQ8RUP3nXkejJmqnLlJXDJn6LBWkV1oUL7aGRd97XZlJHrN/VHUHi/Q1
2t9E8SZi1pK3ordfp3aaBbT5GNLxk637Sj+o+OzTP5fu+JmUXR97oIjzwh7W
awyo0ol+8o9zQiO3ent79T8KjW8+rW5x+MKR6T9bhpX705MrJk/9s3uUX01N
CKR26jbldECuMSazq6nZSOv7etEmZo8UJ6nNskQ0NRdOK1pbQ5zinDJRu0Pr
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
      "], {{0, 786}, {906, 
      0}}, {0, 255}, ColorFunction -> RGBColor], 
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Automatic], Selectable -> False], BaseStyle -> "ImageGraphics", 
    ImageSizeRaw -> {906, 786}, PlotRange -> {{0, 906}, {0, 786}}, ImageSize -> 
    288],StyleBox["\"Figure 4.86\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.86: Example \
3",ExpressionUUID->"79a64b10-a3cc-4838-a4ef-dc7052c5188e"],

Cell["\<\
\tTo locate the local extrema, we must find the critical points by solving \
\>", "Text",ExpressionUUID->"0f5f897f-d853-4b3a-82a3-6c01844c38a1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], 
          RowBox[{"(", "x", ")"}]}], "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["e", 
            RowBox[{"-", "x"}]], "(", 
           RowBox[{
            RowBox[{"2", "cos", " ", "2", "x"}], "-", 
            RowBox[{"sin", " ", "2", "x"}]}], ")"}], "=", "0."}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"cfcdeed0-c8af-40c5-879d-5b74136976c1"]], \
"Text",ExpressionUUID->"a41d36cb-9ada-4b27-a2b5-26c11e7c6a22"],

Cell[TextData[{
 "To this equation we apply Newton's method. The results of the calculations, \
using initial approximations of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.2"}], TraditionalForm]],ExpressionUUID->
  "598d5292-e4c4-4770-935b-65135d7456b4"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2.5"}], TraditionalForm]],ExpressionUUID->
  "52210ac9-5657-4e23-96b2-e445290691c3"],
 ", are shown in ",
 "Table 4.7",
 "."
}], "Text",ExpressionUUID->"9c6220cb-fed6-4123-85bc-78627661a1cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     PaneBox[
      StyleBox["\<\"Table 4.7\"\>", "TableFont",
       StripOnInput->False],
      Alignment->{Left, Center},
      ImageSize->{60, 14}], "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\\!\\(TraditionalForm\\`n\\)\"\>", 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False]},
    {"0", 
     TagBox[
      InterpretationBox["\<\"0.200000\"\>",
       0.2,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.500000\"\>",
       2.5,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"1", 
     TagBox[
      InterpretationBox["\<\"0.499372\"\>",
       0.499372,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"1.623915\"\>",
       1.623915,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"2", 
     TagBox[
      InterpretationBox["\<\"0.550979\"\>",
       0.550979,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.062202\"\>",
       2.062202,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"3", 
     TagBox[
      InterpretationBox["\<\"0.553568\"\>",
       0.553568,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.121018\"\>",
       2.121018,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"4", 
     TagBox[
      InterpretationBox["\<\"0.553574\"\>",
       0.553574,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.124360\"\>",
       2.12436,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"5", 
     TagBox[
      InterpretationBox["\<\"0.553574\"\>",
       0.553574,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.124371\"\>",
       2.124371,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"6", 
     TagBox[
      InterpretationBox["\<\"0.553574\"\>",
       0.553574,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ], 
     TagBox[
      InterpretationBox["\<\"2.124371\"\>",
       2.124371,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]}
   },
   AutoDelete->False,
   BaseStyle->{"TR", 13},
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{
    "Columns" -> {False, False, False, False, False}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, Bold, {Automatic}}},
   GridBoxSpacings->{"Columns" -> {1, 1, 1, 1, 1}, "Rows" -> {1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 4.7",ExpressionUUID->"d6b175cd-7e3b-4245-9efe-5424d0166bc9"],

Cell[TextData[{
 "\tNewton's method finds the two critical points quickly, and they are \
consistent with the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "caa22885-d8ef-4150-8e42-c409afb1ebb2"],
 ". We conclude that the first local maximum occurs at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[TildeTilde]", "0.553574"}], TraditionalForm]],
  ExpressionUUID->"b444daf7-3fe0-4932-8326-fc07ae683f10"],
 " and the first local minimum occurs at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[TildeTilde]", "2.124371"}], TraditionalForm]],
  ExpressionUUID->"ba183ad7-aae0-4ebf-a306-9122282d1f56"],
 "."
}], "Text",ExpressionUUID->"5ecea8e0-b1b7-42ec-b288-acc55ed5efeb"],

Cell[TextData[{
 "Related Exercises ",
 "43, 46",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"559893d7-c072-424f-8b0d-e49bb13c72ee"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pitfalls of Newton\[CloseCurlyQuote]s Method  \[RightGuillemet]", \
"Subsection",
 CellTags->
  "Pitfalls of Newton's \
Method",ExpressionUUID->"2ec980e7-17f3-41d2-ace9-68237df1196d"],

Cell[TextData[{
 "Given a good initial approximation, Newton",
 "\[CloseCurlyQuote]s",
 " method usually converges to a root. In addition, when the method \
converges, it usually does so quickly. However, when Newton's method fails, \
it does so in curious and spectacular ways. The formula for Newton's method \
suggests one way in which the method could encounter difficulties: The term \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "n"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "b13a3c73-394c-45c0-b126-696fd1b6d584"],
 " appears in a denominator, so if at any step ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "n"], ")"}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"81d6c451-a8ae-47b7-9476-d75ded4fcceb"],
 ", then the method breaks down. Furthermore, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "'"}], 
    RowBox[{"(", 
     SubscriptBox["x", "n"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "be219ea3-e4f3-4fcc-9a42-ada650d251ee"],
 " is close to zero at any step, then the method may be slow to converge or \
may fail to converge. The following example shows three ways in which \
Newton's method may go awry."
}], "Text",ExpressionUUID->"546d3b45-b39b-4bf8-84f4-cb70ebb8cc27"],

Cell[CellGroupData[{

Cell["Note  \[RightGuillemet]", "CalloutIcon",ExpressionUUID->"039b2a68-3879-4661-be00-02ffc50e2c54"],

Cell["\<\
A more thorough analysis of the rate at which Newton's method converges and \
the ways in which it fails to converge is presented in a course in numerical \
analysis.
\tNewton's method is widely used because in general it has a remarkable rate \
of convergence; the number of digits of accuracy roughly doubles with each \
iteration.\
\>", "Callout",ExpressionUUID->"97720db0-4f33-43a7-afe6-79a8c1018d3d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EXAMPLE 4\t", "ExampleFont"],
 "Difficulties with Newton's method"
}], "Subsubsubsection",
 CellTags->
  "EXAMPLE 4 Difficulties with Newton's \
method",ExpressionUUID->"2bd1b8a0-be5b-4f07-b728-365d69dec463"],

Cell[TextData[{
 "Find the root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{"8", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{
      RowBox[{"3", 
       SuperscriptBox["x", "2"]}], "+", "1"}]]}], TraditionalForm]],
  ExpressionUUID->"a135927a-e54d-4da8-9f9d-a33eb3057e64"],
 " using Newton's method with initial approximations of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "6b0eff2f-3cfc-4b87-a4fb-c1f8a142947d"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.15"}], TraditionalForm]],ExpressionUUID->
  "1a4db2fe-a6ee-405a-9410-0af21598d926"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1.1"}], TraditionalForm]],ExpressionUUID->
  "0d00fca1-4315-4764-85c9-8bfc8f6e8e43"],
 "."
}], "Text",ExpressionUUID->"9b56f314-40cf-48c2-b755-6132cf7e4f72"],

Cell[CellGroupData[{

Cell["SOLUTION  \[RightGuillemet]", "Subsubsubsubsection",ExpressionUUID->"87100fc5-2e70-408a-9ff1-d7034bf79e87"],

Cell[TextData[{
 "Notice that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "457a45d6-25ae-423c-afd0-447345682040"],
 " has the single root ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "9f6e96f1-2bcb-4336-b611-d029e2729c7a"],
 ". So the point of the example is not to find the root, but to investigate \
the performance of Newton's method. Computing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "da837d46-190d-4a90-8651-c46fdbb395e3"],
 " and doing a few steps of algebra show that the formula for Newton's method \
is "
}], "Text",ExpressionUUID->"9708fd91-cf58-49d7-bed3-1df89ce4c3d9"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"n", "+", "1"}]], "=", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "n"], "-", 
           FractionBox[
            RowBox[{"f", "(", 
             SubscriptBox["x", "n"], ")"}], 
            RowBox[{
             RowBox[{"f", "'"}], 
             RowBox[{"(", 
              SubscriptBox["x", "n"], ")"}]}]]}], "=", 
          RowBox[{
           FractionBox[
            SubscriptBox["x", "n"], "2"], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", 
               SubsuperscriptBox["x", "n", "2"]}]}], ")"}], "."}]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"ad951b50-2fb3-44b3-971d-0e9ea50df20a"]], \
"Text",ExpressionUUID->"1ea6a7bf-70f7-4f15-9c3f-4f7f37d3f9f3"],

Cell["\<\
The results of five iterations of Newton's method are displayed in Table 4.8, \
and they tell three different stories.\
\>", "Text",ExpressionUUID->"86611d1b-84a3-4d1d-a857-2229c760f1a5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     PaneBox[
      StyleBox["\<\"Table 4.8\"\>", "TableFont",
       StripOnInput->False],
      Alignment->{Left, Center},
      ImageSize->{60, 14}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"\\!\\(TraditionalForm\\`n\\)\"\>", 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False], 
     ItemBox["\<\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(x\\), \
\\(n\\)]\\)\"\>",
      Alignment->{Center, Baseline},
      StripOnInput->False]},
    {"0", "1", "0.15`", "1.1`"},
    {"1", 
     RowBox[{"-", "1"}], 
     TagBox[
      InterpretationBox["\<\"0.0699375\"\>",
       0.0699375,
       AutoDelete->True],
      NumberForm[#, {7, 7}]& ], 
     TagBox[
      InterpretationBox["\<\"-1.446500\"\>",
       -1.4465,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"2", "1", 
     TagBox[
      InterpretationBox["\<\"0.0344556\"\>",
       0.0344556,
       AutoDelete->True],
      NumberForm[#, {7, 7}]& ], 
     TagBox[
      InterpretationBox["\<\"3.816650\"\>",
       3.81665,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"3", 
     RowBox[{"-", "1"}], 
     TagBox[
      InterpretationBox["\<\"0.0171665\"\>",
       0.0171665,
       AutoDelete->True],
      NumberForm[#, {7, 7}]& ], 
     TagBox[
      InterpretationBox["\<\"-81.486500\"\>",
       -81.4865,
       AutoDelete->True],
      NumberForm[#, {7, 6}]& ]},
    {"4", "1", 
     TagBox[
      InterpretationBox["\<\"0.00857564\"\>",
       0.00857564,
       AutoDelete->True],
      NumberForm[#, {7, 8}]& ], 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"8.11572\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"5\"\>"]}],
       811572.,
       AutoDelete->True],
      ScientificForm[#, {7, 6}]& ]},
    {"5", 
     RowBox[{"-", "1"}], 
     TagBox[
      InterpretationBox["\<\"0.00428687\"\>",
       0.00428687,
       AutoDelete->True],
      NumberForm[#, {7, 8}]& ], 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"-8.01692\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"17\"\>"]}],
       -8.016920000000001*^17,
       AutoDelete->True],
      ScientificForm[#, {7, 6}]& ]}
   },
   AutoDelete->False,
   BaseStyle->{"TR", 13},
   GridBoxAlignment->{
    "Columns" -> {Center, ".", ".", "."}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{
    "Columns" -> {False, False, False, False, False}, "Rows" -> {False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}, False, False, False, False, False, False, {{
         Thickness[Large], 
         GrayLevel[0.85]}}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, Bold, {Automatic}}},
   GridBoxSpacings->{"Columns" -> {1, 1, 1, 1, 1}, "Rows" -> {1.25, {0.5}}}],
  "Grid"]], "Output",
 CellTags->"Table 4.8",ExpressionUUID->"6c1ddc72-c542-42dc-8282-04e89ac0254f"],

Cell[TextData[{
 "The approximations generated using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "1d715f6a-8517-4e90-ba43-73fa81381a42"],
 " (second column) get stuck in a cycle that alternates between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "1"}], TraditionalForm]],ExpressionUUID->
  "a96a8d26-1ecb-44d2-b0bd-1473589d81cc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "b7764e67-cd31-4c49-be93-68a3a7ea7c82"],
 ". The geometry underlying this rare occurrence is illustrated in ",
 StyleBox["Figure 4.87", "FigureFontText"],
 "."
}], "Text",ExpressionUUID->"5c84d4ef-0056-4eaf-91ae-3d2ed020b769"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`initialRoot$$ = {
             1., 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
            0.664449, $CellContext`xMax$$ = 
            2, $CellContext`xMin$$ = -2, $CellContext`yMax$$ = 
            2.7, $CellContext`yMin$$ = -1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold["select initial value"], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold[
                Grid[{{
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 1\)",
                     11], $CellContext`initialRoot$$ = {1., 0}, Appearance -> 
                    "Palette", Alignment -> Left]}}, Spacings -> {0, 0}]], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold["select approximation"], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`nValue$$], 0, ""}, {
               0 -> Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                  16}], 1 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}}, {
               Hold[
                Pane[
                "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`initialRoot$$], {1., 0}}, {-1.5, 0}, {
               1.5, 0}, {0.01, 0.1}}, {{
                Hold[$CellContext`rootValue$$], 0.664449}, 0}, {{
                Hold[$CellContext`xMin$$], -2}, 0}, {{
                Hold[$CellContext`xMax$$], 2}, 0}, {{
                Hold[$CellContext`yMin$$], -1}, 0}, {{
                Hold[$CellContext`yMax$$], 2.7}, 0}}, 
            Typeset`size$$ = {630., {316., 323.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`nValue$59110$$ = 
            False, $CellContext`initialRoot$59111$$ = {0, 0}}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`initialRoot$$ = {
                1., 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
               0.664449, $CellContext`xMax$$ = 
               2, $CellContext`xMin$$ = -2, $CellContext`yMax$$ = 
               2.7, $CellContext`yMin$$ = -1}, "ControllerVariables" :> {
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$59110$$, 
                False], 
               
               Hold[$CellContext`initialRoot$$, \
$CellContext`initialRoot$59111$$, {0, 0}]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`rootList$, $CellContext`xZero$}, 
               If[$CellContext`initialRoot$$ == {
                  0., 0}, $CellContext`initialRoot$$ = {
                  0.01, 0}]; $CellContext`xZero$ = 
                Part[$CellContext`initialRoot$$, 1]; $CellContext`rootList$ = 
                If[Abs[$CellContext`xZero$] <= 1, 
                  
                  NestList[# - $CellContext`funcC4F87[#]/Derivative[
                   1][$CellContext`funcC4F87][#]& , $CellContext`xZero$, 7], 
                  Drop[
                   Quiet[
                    
                    NestWhileList[# - $CellContext`funcC4F87[#]/Derivative[
                    1][$CellContext`funcC4F87][#]& , $CellContext`xZero$, # != 
                    ComplexInfinity& ]], -1]]; Show[{
                  Plot[
                   $CellContext`funcC4F87[$CellContext`x], {$CellContext`x, \
-5, 5}, PlotStyle -> {Thick, $CellContext`bcB}], 
                  Graphics[{
                    Text[
                    "\!\(TraditionalForm\`f(x) = \*FractionBox[\(8 \
\*SuperscriptBox[\(x\), \(2\)]\), \(3 \*SuperscriptBox[\(x\), \(2\)] + \
1\)]\)", {0.1, $CellContext`yMax$$}, {-1, 1}], 
                    AbsolutePointSize[7], 
                    If[
                    
                    And[$CellContext`nValue$$ >= 1, $CellContext`nValue$$ <= 
                    Length[$CellContext`rootList$] - 1], 
                    If[Abs[
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1]] < 
                    10^2, {$CellContext`bcR, 
                    AbsoluteThickness[0.5], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} - 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F87[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} + 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F87[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}]}], Dashed, 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 0}, {
                    
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F87[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}}], 
                    Dashing[{}], 
                    AbsoluteThickness[2], 
                    Arrowheads[{0, 0.025}], 
                    Arrow[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F87[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}}]}, {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    
                    Line[{{$CellContext`xMin$$, 8/3}, {$CellContext`xMax$$, 8/
                    3}}]}], Black], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", 0], $CellContext`bcFO, 
                    Background -> White], {$CellContext`xZero$, -0.2}, {0, 
                    1}], 
                    If[$CellContext`nValue$$ >= 1, 
                    Table[{
                    AbsoluteThickness[1], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`i + 1], -0.05}, {
                    Part[$CellContext`rootList$, $CellContext`i + 1], 0.05}}], 
                    Point[{
                    Part[$CellContext`rootList$, $CellContext`i], 
                    $CellContext`funcC4F87[
                    Part[$CellContext`rootList$, $CellContext`i]]}], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`i], \
$CellContext`bcFO, Background -> White], {
                    Part[$CellContext`rootList$, $CellContext`i + 1], -0.2}, {
                    0, 1}]}, {$CellContext`i, 1, 
                    
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Black], 
                    Text[
                    Grid[
                    Table[{
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], 
                    " = ", 
                    NumberForm[
                    Part[$CellContext`rootList$, $CellContext`i + 1], {6, 
                    5}]}, {$CellContext`i, 0, 
                    
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Spacings -> 0, 
                    Alignment -> {{Right, Center, "."}, 
                    Automatic}], {$CellContext`xMin$$, 2.2}, {Left, Top}], 
                    AbsoluteThickness[2], Orange, 
                    Line[{{0, -0.05}, {0, 0.05}}], Black, 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`r\)", {
                    RoundingRadius -> 5, FrameStyle -> Orange}, Background -> 
                    White], {0, -0.2}, {0, 1}]}]}, 
                 PlotRange -> {{$CellContext`xMin$$, $CellContext`xMax$$}, \
{$CellContext`yMin$$, $CellContext`yMax$$}}, ImageSize -> 7 72, 
                 BaseStyle -> $CellContext`bcBSG, AspectRatio -> 1, 
                 Ticks -> {
                   Range[$CellContext`xMin$$, $CellContext`xMax$$], 
                   Range[$CellContext`yMin$$, $CellContext`yMax$$, 10]}, 
                 AxesStyle -> Arrowheads[0.02], 
                 AxesLabel -> {
                  "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
                   "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 
                 Method -> {"AxesInFront" -> False}]], 
             "Specifications" :> {"select initial value", 
               Grid[{{
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 1\)", 
                    11], $CellContext`initialRoot$$ = {1., 0}, Appearance -> 
                   "Palette", Alignment -> Left]}}, Spacings -> {0, 0}], 
               Delimiter, 
               "select approximation", {{$CellContext`nValue$$, 0, ""}, {
                0 -> Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                   16}], 1 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                 Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \[Rule] \
\*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}, ControlType -> SetterBar,
                 Appearance -> "Vertical"}, Delimiter, 
               Pane[
               "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`initialRoot$$, {
                 1., 0}}, {-1.5, 0}, {1.5, 0}, {0.01, 0.1}, ControlType -> 
                Locator, 
                Exclusions :> {{0, 0}}}, {{$CellContext`rootValue$$, 
                 0.664449}, 0, ControlType -> 
                None}, {{$CellContext`xMin$$, -2}, 0, ControlType -> 
                None}, {{$CellContext`xMax$$, 2}, 0, ControlType -> 
                None}, {{$CellContext`yMin$$, -1}, 0, ControlType -> 
                None}, {{$CellContext`yMax$$, 2.7}, 0, ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {828., {344., 352.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC4F87[
                  Pattern[$CellContext`x, 
                   Blank[]]] := (8 $CellContext`x^2)/(3 $CellContext`x^2 + 1),
                 Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`i = 1, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 4.87\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.87  \[LightBulb]: Example \
4",ExpressionUUID->"9c1acc15-07b6-40a2-a346-17626646e221"],

Cell[TextData[{
 "\tThe approximations generated using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.15"}], TraditionalForm]],ExpressionUUID->
  "b59d031a-8f78-4ac9-ba16-e60b3565008d"],
 " (third column) actually converge to the root 0, but they converge slowly (",
 StyleBox["Figure 4.88", "FigureFontText"],
 "). Notice that the error is reduced by a factor of approximately 2 with \
each step. Newton's method usually has a faster rate of error reduction. The \
slow convergence is due to the fact that both ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c9e27019-6eba-4ffd-8e57-f96ddcdb4cec"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "efcde6f2-0729-4b53-8819-ed2e0d8f638e"],
 " have zeros at 0. As mentioned earlier, if the approximations ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "n"], TraditionalForm]],ExpressionUUID->
  "e42f106a-eaa2-4550-80a9-b3df92618cbc"],
 " approach a zero of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "'"}], TraditionalForm]],ExpressionUUID->
  "a23752f3-b068-402f-bd79-c6a1f23c4fbb"],
 ", the rate of convergence is often compromised."
}], "Text",ExpressionUUID->"4081f585-79d9-486a-ac48-7712dafab0ae"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`initialRoot$$ = {
             0.15, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
            0.664449, $CellContext`xMax$$ = 
            0.2, $CellContext`xMin$$ = -0.05, $CellContext`yMax$$ = 
            0.2, $CellContext`yMin$$ = -0.05, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold["select initial value"], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold[
                Grid[{{
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = 0.15\
\)", 11], $CellContext`initialRoot$$ = {0.15, 0}, Appearance -> "Palette", 
                    Alignment -> Left]}}, Spacings -> {0, 0}]], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold["select approximation"], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`nValue$$], 0, ""}, {
               0 -> Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                  16}], 1 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}}, {
               Hold[
                Pane[
                "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`initialRoot$$], {0.15, 0}}, {-0.05, 0}, {
               0.2, 0}, {0.001, 0.1}}, {{
                Hold[$CellContext`rootValue$$], 0.664449}, 0}, {{
                Hold[$CellContext`xMin$$], -0.05}, 0}, {{
                Hold[$CellContext`xMax$$], 0.2}, 0}, {{
                Hold[$CellContext`yMin$$], -0.05}, 0}, {{
                Hold[$CellContext`yMax$$], 0.2}, 0}}, 
            Typeset`size$$ = {630., {312., 318.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`nValue$59296$$ = 
            False, $CellContext`initialRoot$59297$$ = {0, 0}}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`initialRoot$$ = {
                0.15, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
               0.664449, $CellContext`xMax$$ = 
               0.2, $CellContext`xMin$$ = -0.05, $CellContext`yMax$$ = 
               0.2, $CellContext`yMin$$ = -0.05}, "ControllerVariables" :> {
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$59296$$, 
                False], 
               
               Hold[$CellContext`initialRoot$$, \
$CellContext`initialRoot$59297$$, {0, 0}]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`rootList$, $CellContext`xZero$}, 
               If[$CellContext`initialRoot$$ == {
                  0., 0}, $CellContext`initialRoot$$ = {
                  0.001, 0}]; $CellContext`xZero$ = 
                Part[$CellContext`initialRoot$$, 1]; $CellContext`rootList$ = 
                If[Abs[$CellContext`xZero$] <= 1, 
                  
                  NestList[# - $CellContext`funcC4F88[#]/Derivative[
                   1][$CellContext`funcC4F88][#]& , $CellContext`xZero$, 7], 
                  Drop[
                   Quiet[
                    
                    NestWhileList[# - $CellContext`funcC4F88[#]/Derivative[
                    1][$CellContext`funcC4F88][#]& , $CellContext`xZero$, # != 
                    ComplexInfinity& ]], -1]]; Show[{
                  Plot[
                   $CellContext`funcC4F88[$CellContext`x], {$CellContext`x, \
-0.1, 0.2}, PlotStyle -> {Thick, $CellContext`bcB}], 
                  Graphics[{
                    Text[
                    "\!\(TraditionalForm\`f(x) = \*FractionBox[\(8 \
\*SuperscriptBox[\(x\), \(2\)]\), \(3 \*SuperscriptBox[\(x\), \(2\)] + \
1\)]\)", {0.03, $CellContext`yMax$$}, {-1, 1}], 
                    AbsolutePointSize[7], 
                    If[
                    
                    And[$CellContext`nValue$$ >= 1, $CellContext`nValue$$ <= 
                    Length[$CellContext`rootList$] - 1], 
                    If[Abs[
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1]] < 
                    10^2, {$CellContext`bcR, 
                    AbsoluteThickness[0.5], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} - 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F88[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} + 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F88[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}]}], Dashed, 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 0}, {
                    
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F88[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}}], 
                    Dashing[{}], 
                    AbsoluteThickness[2], 
                    Arrowheads[{0, 0.025}], 
                    Arrow[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F88[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}}]}, {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    
                    Line[{{$CellContext`xMin$$, 8/3}, {$CellContext`xMax$$, 8/
                    3}}]}], Black], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", 0], $CellContext`bcFO, 
                    Background -> White], {$CellContext`xZero$, -0.02}, {0, 
                    1}], 
                    If[$CellContext`nValue$$ >= 1, 
                    Table[{
                    AbsoluteThickness[1], 
                    Line[{{
                    
                    Part[$CellContext`rootList$, $CellContext`i + 
                    1], -0.005}, {
                    Part[$CellContext`rootList$, $CellContext`i + 1], 
                    0.005}}], 
                    Point[{
                    Part[$CellContext`rootList$, $CellContext`i], 
                    $CellContext`funcC4F88[
                    Part[$CellContext`rootList$, $CellContext`i]]}], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`i], \
$CellContext`bcFO, Background -> White], {
                    
                    Part[$CellContext`rootList$, $CellContext`i + 
                    1], -0.02}, {0, 1}]}, {$CellContext`i, 1, 
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Black], 
                    Text[
                    Grid[
                    Table[{
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], 
                    " = ", 
                    NumberForm[
                    Part[$CellContext`rootList$, $CellContext`i + 1], {6, 
                    8}]}, {$CellContext`i, 0, 
                    
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Spacings -> 0, 
                    Alignment -> {{Right, Center, "."}, 
                    Automatic}], {$CellContext`xMin$$, 0.18}, {Left, Top}], 
                    AbsoluteThickness[2], Orange, 
                    Line[{{0, -0.005}, {0, 0.005}}], Black, 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`r\)", {
                    RoundingRadius -> 5, FrameStyle -> Orange}, Background -> 
                    White], {0, -0.02}, {0, 1}]}]}, 
                 PlotRange -> {{$CellContext`xMin$$, $CellContext`xMax$$}, \
{$CellContext`yMin$$, $CellContext`yMax$$}}, ImageSize -> 7 72, 
                 BaseStyle -> $CellContext`bcBSG, AspectRatio -> 1, 
                 Ticks -> {
                   Range[$CellContext`xMin$$, $CellContext`xMax$$], 
                   Range[$CellContext`yMin$$, $CellContext`yMax$$, 10]}, 
                 AxesStyle -> Arrowheads[{0, 0.025}], 
                 AxesLabel -> {
                  "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
                   "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 
                 Method -> {"AxesInFront" -> False}]], 
             "Specifications" :> {"select initial value", 
               Grid[{{
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \
0.15\)", 11], $CellContext`initialRoot$$ = {0.15, 0}, Appearance -> "Palette",
                    Alignment -> Left]}}, Spacings -> {0, 0}], Delimiter, 
               "select approximation", {{$CellContext`nValue$$, 0, ""}, {
                0 -> Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                   16}], 1 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}, ControlType -> SetterBar,
                 Appearance -> "Vertical"}, Delimiter, 
               Pane[
               "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`initialRoot$$, {
                 0.15, 0}}, {-0.05, 0}, {0.2, 0}, {0.001, 0.1}, ControlType -> 
                Locator, 
                Exclusions :> {{0, 0}}}, {{$CellContext`rootValue$$, 
                 0.664449}, 0, ControlType -> 
                None}, {{$CellContext`xMin$$, -0.05}, 0, ControlType -> 
                None}, {{$CellContext`xMax$$, 0.2}, 0, ControlType -> 
                None}, {{$CellContext`yMin$$, -0.05}, 0, ControlType -> 
                None}, {{$CellContext`yMax$$, 0.2}, 0, ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {787., {335., 340.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC4F88[
                  Pattern[$CellContext`x, 
                   Blank[]]] := (8 $CellContext`x^2)/(3 $CellContext`x^2 + 1),
                 Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`i = 1, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 4.88\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.88  \[LightBulb]: Example \
4",ExpressionUUID->"c75bc2d7-bd96-4f87-a803-f27145409069"],

Cell[TextData[{
 "\tThe approximations generated using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1.1"}], TraditionalForm]],ExpressionUUID->
  "c25e78ec-7ffd-4dda-9dd2-2af8c6147a94"],
 " (fourth column) increase in magnitude quickly and do not converge to a \
finite value, even though this initial approximation seems reasonable. The \
geometry of this case is shown in ",
 StyleBox["Figure 4.89", "FigureFontText"],
 "."
}], "Text",ExpressionUUID->"609572d9-4d57-4c39-ae41-963d71aa5b66"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       FrameBox[
        TagBox[
         StyleBox[
          
          DynamicModuleBox[{$CellContext`initialRoot$$ = {
             1.1, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
            0.664449, $CellContext`xMax$$ = 
            2, $CellContext`xMin$$ = -2, $CellContext`yMax$$ = 
            2.7, $CellContext`yMin$$ = -1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
               Hold["select initial value"], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold[
                Grid[{{
                   Button[
                    Style[
                    "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \
1.1\)", 11], $CellContext`initialRoot$$ = {1.1, 0}, Appearance -> "Palette", 
                    Alignment -> Left]}}, Spacings -> {0, 0}]], 
               Manipulate`Dump`ThisIsNotAControl}, {
               Hold["select approximation"], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`nValue$$], 0, ""}, {
               0 -> Pane[
                 "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                  16}], 1 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}}, {
               Hold[
                Pane[
                "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                 BaseStyle -> {
                  LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                   LineBreakWithin -> Automatic, Hyphenation -> True, 
                   TextAlignment -> Left}]], 
               Manipulate`Dump`ThisIsNotAControl}, {{
                Hold[$CellContext`initialRoot$$], {1.1, 0}}, {-1.5, 0}, {
               1.5, 0}, {0.01, 0.1}}, {{
                Hold[$CellContext`rootValue$$], 0.664449}, 0}, {{
                Hold[$CellContext`xMin$$], -2}, 0}, {{
                Hold[$CellContext`xMax$$], 2}, 0}, {{
                Hold[$CellContext`yMin$$], -1}, 0}, {{
                Hold[$CellContext`yMax$$], 2.7}, 0}}, 
            Typeset`size$$ = {504., {252., 257.}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = 
            False, $CellContext`nValue$59395$$ = 
            False, $CellContext`initialRoot$59396$$ = {0, 0}}, 
           DynamicBox[
            Manipulate`ManipulateBoxes[
            1, StandardForm, 
             "Variables" :> {$CellContext`initialRoot$$ = {
                1.1, 0}, $CellContext`nValue$$ = 0, $CellContext`rootValue$$ = 
               0.664449, $CellContext`xMax$$ = 
               2, $CellContext`xMin$$ = -2, $CellContext`yMax$$ = 
               2.7, $CellContext`yMin$$ = -1}, "ControllerVariables" :> {
               
               Hold[$CellContext`nValue$$, $CellContext`nValue$59395$$, 
                False], 
               
               Hold[$CellContext`initialRoot$$, \
$CellContext`initialRoot$59396$$, {0, 0}]}, 
             "OtherVariables" :> {
              Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
               Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
               Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
               Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
             Module[{$CellContext`rootList$, $CellContext`xZero$}, 
               If[$CellContext`initialRoot$$ == {
                  0., 0}, $CellContext`initialRoot$$ = {
                  0.01, 0}]; $CellContext`xZero$ = 
                Part[$CellContext`initialRoot$$, 1]; $CellContext`rootList$ = 
                If[Abs[$CellContext`xZero$] <= 1, 
                  
                  NestList[# - $CellContext`funcC4F89[#]/Derivative[
                   1][$CellContext`funcC4F89][#]& , $CellContext`xZero$, 7], 
                  Drop[
                   Quiet[
                    
                    NestWhileList[# - $CellContext`funcC4F89[#]/Derivative[
                    1][$CellContext`funcC4F89][#]& , $CellContext`xZero$, # != 
                    ComplexInfinity& ]], -1]]; Show[{
                  Plot[
                   $CellContext`funcC4F89[$CellContext`x], {$CellContext`x, \
-5, 5}, PlotStyle -> {Thick, $CellContext`bcB}], 
                  Graphics[{
                    Text[
                    "\!\(TraditionalForm\`f(x) = \*FractionBox[\(8 \
\*SuperscriptBox[\(x\), \(2\)]\), \(3 \*SuperscriptBox[\(x\), \(2\)] + \
1\)]\)", {0.1, $CellContext`yMax$$}, {-1, 1}], 
                    AbsolutePointSize[7], 
                    If[
                    
                    And[$CellContext`nValue$$ >= 1, $CellContext`nValue$$ <= 
                    Length[$CellContext`rootList$] - 1], 
                    If[Abs[
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1]] < 
                    10^2, {$CellContext`bcR, 
                    AbsoluteThickness[0.5], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} - 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F89[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}], {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0} + 200 Normalize[{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F89[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]} - {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}]}], Dashed, 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 0}, {
                    
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F89[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}}], 
                    Dashing[{}], 
                    AbsoluteThickness[2], 
                    Arrowheads[{0, 0.025}], 
                    Arrow[{{
                    Part[$CellContext`rootList$, $CellContext`nValue$$], 
                    $CellContext`funcC4F89[
                    Part[$CellContext`rootList$, $CellContext`nValue$$]]}, {
                    Part[$CellContext`rootList$, $CellContext`nValue$$ + 1], 
                    0}}]}, {$CellContext`bcR, 
                    AbsoluteThickness[2], 
                    
                    Line[{{$CellContext`xMin$$, 8/3}, {$CellContext`xMax$$, 8/
                    3}}]}], Black], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", 0], $CellContext`bcFO, 
                    Background -> White], {$CellContext`xZero$, -0.2}, {0, 
                    1}], 
                    If[$CellContext`nValue$$ >= 1, 
                    Table[{
                    AbsoluteThickness[1], 
                    Line[{{
                    Part[$CellContext`rootList$, $CellContext`i + 1], -0.05}, {
                    Part[$CellContext`rootList$, $CellContext`i + 1], 0.05}}], 
                    Point[{
                    Part[$CellContext`rootList$, $CellContext`i], 
                    $CellContext`funcC4F89[
                    Part[$CellContext`rootList$, $CellContext`i]]}], 
                    Text[
                    Framed[
                    Subscript[
                    "\!\(TraditionalForm\`x\)", $CellContext`i], \
$CellContext`bcFO, Background -> White], {
                    Part[$CellContext`rootList$, $CellContext`i + 1], -0.2}, {
                    0, 1}]}, {$CellContext`i, 1, 
                    
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Black], 
                    Text[
                    Grid[
                    Table[{
                    Subscript["\!\(TraditionalForm\`x\)", $CellContext`i], 
                    " = ", 
                    NumberForm[
                    Part[$CellContext`rootList$, $CellContext`i + 1], {6, 
                    5}]}, {$CellContext`i, 0, 
                    
                    Min[$CellContext`nValue$$, Length[$CellContext`rootList$] - 
                    1]}], Spacings -> 0, 
                    Alignment -> {{Right, Center, "."}, 
                    Automatic}], {$CellContext`xMin$$, 2.2}, {Left, Top}], 
                    AbsoluteThickness[2], Orange, 
                    Line[{{0, -0.05}, {0, 0.05}}], Black, 
                    Text[
                    Framed[
                    "\!\(TraditionalForm\`r\)", {
                    RoundingRadius -> 5, FrameStyle -> Orange}, Background -> 
                    White], {0, -0.2}, {0, 1}]}]}, 
                 PlotRange -> {{$CellContext`xMin$$, $CellContext`xMax$$}, \
{$CellContext`yMin$$, $CellContext`yMax$$}}, ImageSize -> 7 72, 
                 BaseStyle -> $CellContext`bcBSG, AspectRatio -> 1, 
                 Ticks -> {
                   Range[$CellContext`xMin$$, $CellContext`xMax$$], 
                   Range[$CellContext`yMin$$, $CellContext`yMax$$, 10]}, 
                 AxesStyle -> Arrowheads[{0, 0.025}], 
                 AxesLabel -> {
                  "\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\)", 
                   "\!\(\*\nStyleBox[\"y\",\nFontSlant->\"Italic\"]\)"}, 
                 Method -> {"AxesInFront" -> False}]], 
             "Specifications" :> {"select initial value", 
               Grid[{{
                  Button[
                   Style[
                   "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] = \
1.1\)", 11], $CellContext`initialRoot$$ = {1.1, 0}, Appearance -> "Palette", 
                   Alignment -> Left]}}, Spacings -> {0, 0}], Delimiter, 
               "select approximation", {{$CellContext`nValue$$, 0, ""}, {
                0 -> Pane[
                  "\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\)", {48, 
                   16}], 1 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)] \
\[Rule] \*SubscriptBox[\(x\), \(1\)]\)", {48, 16}], 2 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(1\)] \
\[Rule] \*SubscriptBox[\(x\), \(2\)]\)", {48, 16}], 3 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(2\)] \
\[Rule] \*SubscriptBox[\(x\), \(3\)]\)", {48, 16}], 4 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(3\)] \
\[Rule] \*SubscriptBox[\(x\), \(4\)]\)", {48, 16}], 5 -> 
                 Pane["\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(4\)] \
\[Rule] \*SubscriptBox[\(x\), \(5\)]\)", {48, 16}]}, ControlType -> SetterBar,
                 Appearance -> "Vertical"}, Delimiter, 
               Pane[
               "Drag \[CirclePlus] to change the initial root estimate \
\!\(TraditionalForm\`\*SubscriptBox[\(x\), \(0\)]\).", {124, Automatic}, 
                BaseStyle -> {
                 LineIndent -> 0, LinebreakAdjustments -> {1, 1, 0, 0, 0}, 
                  LineBreakWithin -> Automatic, Hyphenation -> True, 
                  TextAlignment -> Left}], {{$CellContext`initialRoot$$, {
                 1.1, 0}}, {-1.5, 0}, {1.5, 0}, {0.01, 0.1}, ControlType -> 
                Locator, 
                Exclusions :> {{0, 0}}}, {{$CellContext`rootValue$$, 
                 0.664449}, 0, ControlType -> 
                None}, {{$CellContext`xMin$$, -2}, 0, ControlType -> 
                None}, {{$CellContext`xMax$$, 2}, 0, ControlType -> 
                None}, {{$CellContext`yMin$$, -1}, 0, ControlType -> 
                None}, {{$CellContext`yMax$$, 2.7}, 0, ControlType -> None}}, 
             "Options" :> {
              ControlPlacement -> Left, LabelStyle -> 11, Paneled -> False, 
               Deployed -> True, AppearanceElements -> "ResetButton"}, 
             "DefaultOptions" :> {}], ImageSizeCache -> {661., {274., 280.}}, 
            SingleEvaluation -> True], Deinitialization :> None, 
           DynamicModuleValues :> {}, 
           Initialization :> ({{$CellContext`funcC4F89[
                  Pattern[$CellContext`x, 
                   Blank[]]] := (8 $CellContext`x^2)/(3 $CellContext`x^2 + 1),
                 Attributes[Derivative] = {
                 NHoldAll, ReadProtected}, $CellContext`bcB = 
                RGBColor[0, 0.63, 0.85], $CellContext`bcR = 
                RGBColor[0.92, 0.11, 0.27], 
                Attributes[Subscript] = {NHoldRest}, $CellContext`bcFO = {
                 RoundingRadius -> 5, FrameStyle -> GrayLevel[0.85], 
                  Background -> GrayLevel[1]}, $CellContext`i = 1, 
                Attributes[PlotRange] = {
                 ReadProtected}, $CellContext`bcBSG = {"Text"}}; {Null}}; 
            Typeset`initDone$$ = True), SynchronousInitialization -> True, 
           UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
           UnsavedVariables :> {Typeset`initDone$$}, 
           UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
          True, StripOnInput -> False], 
         Manipulate`InterpretManipulate[1]], FrameStyle -> {
          GrayLevel[0.95], 
          Dashing[{0}]}, RoundingRadius -> 5, StripOnInput -> False]}}, 
     AutoDelete -> False, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],StyleBox[
   "\"Figure 4.89\"", "FigureFont", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Bottom", ",", "Left"}], "}"}], "}"}]}], 
     "]"}]& )]], "Output",
 CellTags->
  "Figure 4.89  \[LightBulb]: Example \
4",ExpressionUUID->"633702c1-7867-48dd-ac57-578d34194ddb"],

Cell["\<\
\tThe three cases in this example illustrate the most common ways that \
Newton's method may fail to converge at its usual rate: The approximations \
may cycle or wander, they may converge slowly, or they may diverge (often at \
a rapid rate).\
\>", "Text",ExpressionUUID->"48850e08-95bf-4ec5-bc6f-ad25fb70c8fd"],

Cell[TextData[{
 "Related Exercises ",
 "52\[Dash]53",
 StyleBox["  \[FilledDiamond]",
  FontSlant->Plain]
}], "RelatedExercises",ExpressionUUID->"b6f4d6e3-abf1-4d99-9e47-ca85cfb202fa"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises  \[RightGuillemet]", "Subsection",
 CellTags->
  "SECTION 4.8 \
EXERCISES",ExpressionUUID->"c12a435b-a050-45c8-80ac-8250d459415d"],

Cell[CellGroupData[{

Cell["Getting Started  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Getting \
Started",ExpressionUUID->"41e612d4-3123-4a1b-b196-0271540de73c"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 "\tGive a geometric explanation of Newton\[CloseCurlyQuote]s method."
}], "Problem",ExpressionUUID->"0efb6915-4738-42e9-b625-b64618950599"],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 "\tExplain how the iteration formula for Newton\[CloseCurlyQuote]s method \
works."
}], "Problem",ExpressionUUID->"713dffdb-8698-4949-9fe8-4e620938ab4a"],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 "\tA graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "7f876600-f7ee-48c4-8085-0ef4196c8e01"],
 " and the lines tangent to ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d2a32e7a-d9e0-41b1-b97d-88618942df02"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "2", ","}], TraditionalForm]],
  ExpressionUUID->"dbe47599-0c30-4b28-a741-3f881839c30f"],
 " and ",
 Cell[BoxData[
  FormBox["3", TraditionalForm]],ExpressionUUID->
  "7ec29f34-8ddf-4f49-b15d-a3bfbb2a25ea"],
 " are given. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "bbac64c6-2c4b-4745-ae11-82207a392c1d"],
 ", find the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "c2a5596e-f219-4d1b-a12a-47e9640ec9fb"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "6a13a2f3-4a03-4ecf-b698-f0318b50b7d4"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "a8f1364b-0c08-44ee-aee8-a8f08f913264"],
 " that are obtained by applying Newton\[CloseCurlyQuote]s method."
}], "Problem",ExpressionUUID->"7d868e3b-c821-4159-a4db-d8c6692de101"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X9wFOed7/txnDjxf9dZFymN8TrXosqFRWoXn0omVfY6tUaXEsVuNhtO
JGcdpzau6yOuc3dNrVOCdfLP3tRGKueWk1o58MeAg4kzweEEc5UgFjnKJigL
x7gAG/HDxFY5B6KDMDIYWZhYaGbu0/NIrVZ/Wj9nprtn5v3ajlYIWWrEaDTz
5tvP878/8vgX/9uHEonEEx8zL774tY1/+U//9LV/Xve/mV986R+f+L9a//HR
/3PNP37j0dZH/+mzj9xo3rjZvO//85FEwnk9DwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuzll1+O+hQAAAAAAED1e//q
1fWtrVGfBQAAAAAAqH4HDx5MpVJRnwUAAAAAAKh+nZ2dybq6ixcvRn0iAAAA
AACgyq1vbb31tmTPL1+K+kQAAAAAAEB5ZcdG84Nvn/ofvZn01m8/+a1Hmz5z
wxc6fzeeC3znsdMvmHdIpVIfad3WPzL83vVskZ89l8utaGi4fenSjvZ283qR
Hw0AAAAAAMTTyZ/98NGmz9x8S92ttyW9x+1Llz5+5N1s1l8Yctm3txTeYWXd
bc673fL1/pHh8ex4Medw9uzZZF1dMplsaW6mQgAAAAAAUJXGs+PXX/m3v2t7
OpPe+sLD62++pc62BXsk/u//T+Yccvlrrzzy8U+Yd7PvbF4GxooFyWQyty9d
aj7jsvr6Ij8UAAAAAACILfusfzw7bo6x0y98+dZPunMOS+64+/mha74sYH55
eMOf2mhgzDQysSAb29rsBzQvjx8/XtSfBwAAAAAAVIh3u57wXpdxQ+dhfZ/s
2OjvOluW3HG3fZ/Hj7xb5Cdd09TkXJFRODKZDOMQAAAAAADUgtzoa95lHxIP
pIfGrvneJVtge8WHPvs33RezxXSD999/f2KJicI4xBMbHi/yjwAAAAAAACrC
eHb8d50t7izEkjvu3jJ4NSgy5K6/8m8r62772Ir/d6atNObp0KFD3umLVCpV
zEcDAAAAAACVw8kLdizBjijc8+PTge9mZyFu6Dxc5AYZ6XTa/Vz2ZX7w7SI/
JgAAAAAAqAh2L86bb6mzLeIjrdvkogznfX7+tx+1i0IUczlGLpdb39pqpyAM
52VdXW9vb3F/AgAAAAAAUAGy2ex4dvzwhj9dVl9v48Dtt3z936/K+1175cu3
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
p2FFV1dXmU6ACuFjnqz1XRrY3939tfRPPrR537R1IWY6aqBFUCFUZVUIy9m4
c/qWnYUu0bjhzN6SfHwqhKJCKCqEYhZCUSEUFUJRIcJEhVAxqRA+49nxabuC
ehe6/MSDc16yoXVC04Rv6w3f5RvmqSsVwiuGFcLKZDIrGhrs5RhugpgKEUZd
XUtzs3nWU/JPTYVQlwd+v/vF3eZGsr9n/3fPvjfjnp611CKoEKriKkQulzO3
z8SuRwKuy9ixtn9kuPjrMqgQigqhqBCKWQhFhVBUCEWFCBMVQsWzQvgERon8
d3+kUWL2QYjAKKGLXn6w7Cu/uPHT3Z/66xceXp9/4aX8G2dD23YhtmJbIfKF
c1vf2jrTkpX2pTk62ttHRkr5XU+F8LE7G+7v7jY3kt7e3nzhuRstggqhKq5C
FOT6Lg0ktq+efmlGo924s/grv6gQigqhqBCKWQhFhVBUCEWFCBMVQlVEhfAy
z3QCL9/wRYl5b/rpG6uYqBD7En/2ixs/bV7aMYlc4q/ya75hJyVqM0rEuULY
vw7z5DeVSgW2CPcw75DJZEr1eakQPuZ7052FMD/u3bfXeIugQqjKrBCOdSd2
yeoQznUZK489V+RHpkIoKoSiQihmIRQVQlEhFBUiTFQIVXEVwsdGCd+kRH7f
f+ae+Wn+4X+Zd5TwHhMVwh52lUt36Uv7sgajRJwrhGX+Fq5cubKxrc17XYa7
ZIQ7GmGOUl2gQYXwmTYL4akQVs22CCqEqtwKYW7kzsadvgUizC+3r95zob+Y
j0yFUFQIRYVQzEIoKoSiQigqRJioEKrSK4RPwMW5l67kf3PEEyWCF46YpUL4
5iU8l3JM/OdTUWLff+bfqM47t/hXCNehQ4e8W3m623f6ttL4Wvon+cG3i5mj
pkL4zDQL4VWDLYIKoSq3Qhj9I8POxp3+lSpXmTea2+qiF4igQigqhKJCKGYh
FBVCUSEUFSJMVAhVZRVibm6U+NI3xz/xYH5qKGKWWYhpwxIzRQl3XqIqo0QF
VQjzPPf69evpdHr5nXe6S1Z6hyKSdXX29RV//ufFXKBBhfCZfRbCaxEt4p2K
bRFUCFXRFcLczv914FeycWfhl31PLfrDUiEUFUJRIRSzEIoKoagQigoRJiqE
qrkK4TM9StjCMPMsxOe0WsyyvkQ1RYkKqhAuu2qle4GGHYqwv7Qhwu7muaap
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
xSyEokIoKoSKQ4UwP+/M41vvg2F32fZ0Ol1NoxFUCEWFUMxCqNAqhI9GifmN
Q/h3CHXbReG/tUdjvrgoUUyFsMx3n7mPdZeM0IkI71yEfWkr8fHjxxf3Gcuq
mmYhvIpsEVQIVcsVwtw2ErseSWxfPa1F/GBV4vOfYhbChwqhmIVQzEIoKoSi
Qqg4VAjjxMkT3pXTvI9+zYNeu6N9FfxYpEIoKoRiFkJFVSF8giYl5hiE8A1O
BEaJfFCUmPPyjeIrhGXuWvt+2+depqGbe/pyhPMesbyArvpmIbzm2yLs4WkR
VAhVwxXC3AByfZcGnArhXpphXjfH5z/FHhk+VAjFLIRiFkJRIRQVQsWkQuQL
y1QGPvp154Eb770vnU5fvnw52vMsBhVCUSEUsxAqJhXCZ84oIYMT840Snt+d
MUqUqkLkC89wjT+cO2seMKxoaPBOpul6Ee5L9wK6mDyVq9ZZCK+5W8SPp7WI
z5+4bP5O7c9WKoSrhivEhHUndk1boPLZRiqEokIoZiEUsxCKCqGoECo+FcI8
G72nYYU++nUvT7bMG81dX4U+cqBCKCqEYhZCxbNC+My1psR8o4T7DpNFImBN
ifGtezLprfZOcvmdd5bwT2G+DTOZzJqmppnWi5hpQ410Oj00NFTCM1mo6p6F
8FpAi8gMfKR128231FEhvKgQ5pvF2bjT9ge7NMRkhTDf+/zQsagQilkIxSyE
okIoKoSKT4XIF5apdK/L8O1l7/7r24S6OnMLN/eB5j+xF2tUxIMrKoSiQihm
IVRFVAgfGyXGt+7xrCkxzyhx/0yTEpOvOG/v/tRf2ztDp0K88JLzuUr63KH/
lSPmPnZZfb1vIkJfuhNr5hXzGLWrq8t8X5fwTOapFmYhXPan3twt4vnf3fzw
V2/42J+Y46Mrl2fHRnmCmadCFPSPDDsbd06sDjFVIczt5J3rWX7u5KkQQZiF
UMxCKCqEokKoWFWI/GRltQuzB16b7M4Du0/T7IJp5j80N/W9e/eaZytR/yFm
ZCtEpsA8AMgPvj10/vzly5fNOQ/XKvPNmJn0h3Nnoz6dWDA3Y3cWwjy1HBq7
xu3E/HB3bydRn8u8XCwc5m9tuPDSvG7+EvP7/nN8655X1j0+/pnWdz60Npto
LOZl96f+2t4ZmjtJ8xZ7jP3lP9hJiWP7+sxnNN9fg4t2/n+ZF6dPnzZ3reYR
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
4ZKcwukY7N5lP90KPf9B6o59++W8y1ITK554quo+oyNe7uoP2jSfFgKhhSBe
oIVAaCGQ4FgIB9rc0KiJxOlPE7vej9Vt2Hf3oyZxw2EVHA04XAtKuBoJr207
bEki4XB4ko05cssYLiI6WRdBC5FDdK8Otb7oViDi4U1n/1S8lSppIYgXGAtB
vEALgQTYQljY5+nx2HkNjdAzq69X/OrUcDx+9djmZJCqRj7Il91QR9ehQ4eO
nekP4BcfLQRCC+GK7O1du7c9GXkzNng1gHuy/xSdhZAPbrB718aNv17/3At1
tbVrVq+KRrbs+yyWw0+TFgIJrIXIgrVLJKVE27JV++5+1B4mYXI0MC4iU0FL
NBJZRIR5Brlw/PjxQm8JJ/lzEbQQBjmJkkOTHKnkGCVHqh/Xv/T6gT9PoNVm
/+BXVl6Go1nG1kXauDNPK59vaCEMup/o15nuJ/LP4v1kcwtjIbIjZ7NPLV8u
J7Sfj1VgeWpDC4EE3EKkE+/d/ANzbjb9/sfkAHh49b9YcRE/fVtPP/T3pkS6
vggOtBAILYQDmb3KEVvL7H+94lfJvFpSZBZCPsGVN99qb7+o+lT+OW1pY65c
BC0EUowWwk4qWOL0p/GN/71rRZ1KCeMWPBaUQCPhLiLSC2ZGo9FgfiXlw0XQ
QiSS88pXvn+zVj3F3WYCJb7fOtfptBCal3FwXTB3rTGhhUgkfxORY5HZT4wX
1S+1YJaC9xnGQmRhqO03eki57Z8fdxT0KzVoIZAishCy6+rOLOjB8Hs/ecYK
ZL3pmfe+KPTKeYMWAqGFMBj/YLLFr6/dSguhFIuFGI4Nn2qsMadqM3dGLvb8
zZoW9e2XE35zkv9yVw6CtWghkGK3EIp+NchSW3MOdXQNb3lLJgJycKhcsNBe
TcKjkcgkIuyBFlroUg5BiQuXCr0BXMiti6CF0GpausNgso+O6fc/duxM/7iy
XeZ1vOaal7HsRFP+3kv+oIWQb66VN9+qxeExzkrHtKWNJS4iGAuRCROvLoea
2/758WKZrOUJWgikiCyERd9+/Y3YmFjZt1cd+UehV8srtBAILUTCzT/o2eDX
K371+aR70k0NisVC/KN5jfkQ57/RLZ+svUThK9+/eU5ZmSlcM0kRQQuBTA0L
4UD2EzMT1L7VcrjYd/ejlQsWZi9x6TASThHh1jxUHyhP+1TVfbtW1PXteS/R
e76wb99OrlxEiVsI/UFH95AsRVDlFEtTX70fqeSeoeanISLi4dD2Ja0XevL6
pvJBqVuIkVNu2R+m3//Yk5E3o9Hoext/pqXY7JIzgNXg/YSxEK7Iyc/h1f9i
fpShhaCFQIrLQmhpCGPv5ULop28XUdY8LQRCCxG/emzlzbdqeVX5fp/29f/H
FD9hLIShKCyEvYLutKWNLp/dV22aqWF9vpMO4qKFQKakhXAQG7xqz0Ac6ujS
ftYOmYBNN1BE2GMhHBkcKR06a5ZKiV0r6mQk9v9vECrVTN5FlLSFGJlaCvIV
8/bJY2e/vJDoPd/ZdkQD7+1GwhTd8o7VuHP7EqeF2Loo1LTySrFlhZeyhZDz
7Xcev1Enj1ax96RR11rxcpOcq9gPFyU+wWQshCtdu7fp78V6VCnxnSRBC+FG
cVkIOQZ2rX/AfnL1y0+vFPyMyDu0EAgthHyhd+xv1d+bVB2b80DGQhiCbyHM
OZuelbnGaMnn27v5B+Y+o41+JgQtBFIKFsKOmRdojE2WGpUuERGz05SFw1eY
H7DsN8mcVItnynS1c+2LiQ+OFFBKTMZFlLKFMIeg5S2ndedJmB4uyZq6K2++
1Xz0OsHc0T8OGS5PtfrjFkjKsKIjbji8ubhOe0rZQmjAzPT7H3u5q99xk+4t
9nMVuYB3Kx0YC+FC0nbKV4bsG3pBq/lNrLfy1IAWAikuC5FIBjwbBTHeL8eC
QwuB0EIkTEm6JKcaa0wNKMZCGIJvIeSczRyaNIzZ7V7x0c7CyS/lyZy50UIg
pWYhDDXV1a4+wbXwIMZIODI4srTkcBSdkNPLzd+YbYVJPLdpqKPL/5oSnlyE
DpuLKFkLYdK0l7ecdp0OWN9EttRX41THe7oSOrgu9OojVggENO7M0Vvxg5K1
ELHBq+88fuMYbmEktE8PFxPYSaYMjIVwoD/KaBE/E7vOWAhaCKToLITj+1GO
e4yFKGpoIRyYH6oYC2En+BZC+/WYJNlMxyXTcdjUjpjwTwO0EEjJWohoNOoq
DW7JUHgwk2RwXI/JHagv9PdQk7ux7+5H25atSvzydT+lxBgu4g2nizjSVaIW
Qn/gDi2KZCknqCFb9k9cDlPjfaGRxp0QEbGzRm4qlpOfkrUQcqZt7Sc7TmW5
C4b/FcvHmnMYC+FAf027/aZn3jrXqdqTaTsJWgg3is5CyHeo/YxIzvaL6LhH
C4HQQjgwp3+MhbATcAsRv3rs2X+61Zy0L285nememlZm7inTgQl30KaFQErT
QsTjcTl4hsPhTNIgS3SEnh9iu8bsXiJT+gaGSZy887HED56Pb/zvfKdvyEbw
6iKiPV+Lts/cGdmzd0/rH1vztD7BRDv4jF3TO/kztwmMGX/twbgc06zGnRsW
OiMi5PLBdRNdfb8pTQshn108ZtUJyX76ofESJjI5Vx2oixHGQtgZ7N6lhw45
EZJTI9NsmhaCFgIpLgth6vgV6Y/FtBAILYSD3s0/ML9aFtfunVcCbiFMzXmd
jmXvf/GP5jXmzjL7k6nTxF6UFgIpTQuhRKNR14gFR1tPx1JuXVxVJd+uV65c
6dq9bf1zLzj6gaKXyOIi7OETDiMhoz0U/nz6kljdhrxGSoztInackml16PnX
Q/+588nIm6VjevXH68z5YjaSFsJ86BPogKClA244vDmpICrTC0RUrv64ZYLv
wV9K00J4Iy47ybP/dKt8Ad3yjQzVmEsGxkIYTM5X6KdvW6evI2k7jIVI0EK4
UUQWIjZ41R7znDrhn3SdeT+hhUBoIRwwFsKVYFuIuD2PJvtBSf7qNaDLHMe+
e+LixH5CooVAStlCCHW1tZmCGTKVrKwoL//72dQZkdkP5YJ8Q3Xt3rZrRV3l
goWuRS+z1I7IcgetVCbj3evubQ+Fh2/9YWLFf+QjUiKji4haY+bOiJwk6zK0
+2/yN1giNdPk+OPlncoHoWnd5jfNib2cvFaoaaVLgYjtSzovDwT/FIgWIgum
FNKY4n3Kw1gIQ9uyVXKQ10KU1i4xoqrkYEILQQuBFJGF0J4vcoYfjWwx4aOe
YgsDAy0EQgvhgLEQrgTZQpj0WD0ohRZFxnBHtmjnWybRaZ0WAilxCyGTPi1T
6WjT6QhjMMs5ZWXt7e2u30T6W7ZekGVPT4988+5aUTe/vCJT8EOWV7RHR2gF
Cb1JwyTUSMRClaNSIkctQTO5CPmju752a+j516dv2h/accpSE6XkIsYibn7Q
1E9qokV04zJaL/RYjTudEREPh5qfDv68lRYiE/YkxAlLqikDYyGUobbf6Oxs
dF42ElXFjIwELYQbRWMh+vZrVI/s247vxwnUTSoUtBAILYQDxkK4EnALsXmk
Rp/VfzNZ6iHbA2zfy5a1+OnbE5v70EIgJW4hNB9//XMvOLpw2kMUTDpGOByW
cyGPX0OmJahc/vKLLz766KN3ft5QtTRZggzKR2QvTOHIBzE3OYxEIvRgrqSE
00XsOKVREJaI+M+dloLYcSbVTYMuQkkeo/Qz8pTBkZVlJ5qgTKWVmjGv47Vc
rW+eoIVwxYj3Em/QaWAshEUy7OEWR72+kSuZkZGghXCjKCyE6fmilec1VlBP
Y+QMXM4l7CcnpxprlrecljOWAM7xaSEQWggHjIVwJcAWIm4yH2+xFZzM9oiR
72Vz/4m5JloIpOQthIV8s3S2HTG9OzFuYX55RSQSsTcInsBLJB9rTU57e3v3
7N2z/rkXTO6G4xUzJYNk0hR2I3EutECNhImUSPzy9cQHRyZQUyLlIqKpWAgV
EaOxEDvOjKZslLyLsLdE/1q0fZLPFo/Hrcad0LUz9ErlW+c6c7LCeYIWAhns
3mW+7+TvVCurlPjZLGMhZM71yvdv1lyMU8Nxh4VIztYYC0EL4UJRWAit6iwz
Mj1Xl91by7ulfjK+6ZlU/tFIONCEf1vMN7QQCC2EA8ZCuBJgC5EwmY/6wXm0
EOO4fwZoIRBaCDs9PWf0zFCnDDfOm/vOzxve/MM++bqUiWEOX8ikb8g3b3t7
+8aNv35q+XJ75AMmg+DSXlbCLi5MZUu7kYiNREqMV0qoi7Dkw7N75QArF6xK
la7lI0rVRdh7H4zmd0+KuDyJ1bjTKSJSjTtVZwUQWgg7Qx1dejxxeEU5Cd/3
2cSV5hSAsRAyKTPZW2l7AjMybNBCIAG0EHKge/3An80Xn+zbVnhn8ihn0lRN
VZxbRvoUJ0Y6aAR5P6eFQAJoIWTvWrN6lYy19fWTH/I848qaZCyEKwG3EOON
hRjf/TNAC4HQQtiRb0zt267zepl0TzK0fixSP4HFRvhr98loZEtdbe388opb
3Dp0uGZn2EMjTOqlftc7jERsxEiMN1JCTpVHYyHUOWTo6Vl6LiI+2L3LfBzy
5ZWT6g2yM2w6+yfXfhmh1hcn//x5ghYiRTIneuYdd2UqPysn3jv6S/cXk1KP
hejbnzFBnhkZNmghkKBZCI0D1P152tLG9zb+TH/HcZSg1MI45hgo95RTHU1j
lHsGdnZPC4EEzULYc/xzMsbbbJ2xEK4E3ELI4cicnnmMhRjH/TNAC4HQQjjQ
7i0mwd9nq2n/jvv72U+j0eja+vpwOOxaNcIRMmFCI0yVCcWoiR/d8k05VieL
SDyYsOmIUSnxg+dda0rI5eNdJ/fs3fNk5M3RjIwsnT1LyUXYAyFyGFaqVirU
+qJbgYiHN539UzArVdJCKHLKLefYMjZu/PWuFXUYtqSnK6XwB+JKKcdCmCIh
7t1amZFhgxYCCZqFsDe8MwNtvHydHV79L/aG5jptnHC1eX+ghUCCZiE0u+3G
eXPDOUJ2TtmBvX87MxbClYBbiLRqk+OtTkkLkTtoIRwE02p+NjBwYN++d37e
MGPFE1g7IlNohN1FOMSFKSKRsIzEQ3YpgTUl5CA/1NG1Z+8e2U9k+pCxp6eb
i/jOyantIuImslpzMXL7ZmX3s/IyHM0yti7Sxp05fKFcQQuRsOVbJZIGT3YJ
mXh27d4mf3SOv1BnNH7JUMqxEJoynzEYhhkZNmghkEBZCDl8qYWwn5ZoRUrH
PeWa9zb+bH55hV3Jhp7dG/DTA1oIJGAWYjRcWT6d+KRJjJZx80owZw0FJ+AW
wlFtclzVKactbaSFyBW0EA4CazXly1prTV+5cuXg795/MvJm5YKFGCOBjgJb
jt5iy92Yecddm78x+93r7tUACSMlksuHjJpoW7ZKxq4VdTKZ0vQNe+3KjGPH
GWtMXRehUaayw2jvg3ycorx1rtNpITQv4+C6AJ4R0UJkwqotY4tJNqfrhV6v
wlCysRAmOz5j6hYzMmzQQiCBshDapfqV799s3IJ2u3C9q1yvCk6H1un1eXXH
Cy0EEjALUXgCO2soLAG3ECtvHndGhr06JXtk5ApaCAdFYTXl9DX1Rd97Xk7m
19bXL66qcoRGYHSEoxupPYJC+4fa+37GbDpCLh+ZX70/9C25dd/dj9pbgr5+
4M+WizD9MjAcYuq6CPkITIipIwc2t8zreM01L2PZiab8vejEoIXIgnUG27ff
HhEhR5jSPGMpzVgIma9t/sZsOWI4OhWmMRILIXfLR3hVcUELgQTMQiTPRmJW
uNdnAwP6W0mGO8Y1SEzvKce9opjR00IgtBAOimLW4D9BthAmL9JrbEN6dcq0
5trjgRYCoYVwUERW0x74LZflm33P3j1YR8LuIuyFKzMldGjfTw2QSGZnWLEQ
R+ZXyz/3h74lFwbT0jeskIm2ZauejLwph9+ZOyPz3+h2Sokp6iLMzzqrjvwj
f1Ua9FMONT8NEREPh7Yvab3Qk6fXnRi0ENmRT7Nr/QPmz810sis1SjAWQvPi
5cArQ46TB/bta3YjGtnyo1u+aQLV5J5du7fJgT0ajb7c1V/oN+E3tBBI0CyE
4v2cvLgm8rQQCC2EgyKaNfhJkC2EnFTby9SEFkWydyLQbj5m3jThKFZaCIQW
wsHUsJpa2XLN6lUV99xjT8FwZHBgKQlHyISpIKGxEDL23f1oLD1xQ43EYOjB
tmWrvveTZ6bf/1jV0pof178k589WKctoZ6qa5dRyEalmZLfdNq6OThPGaty5
fYnTQmxdFGpaeSVIPyrRQozNSH+Eoj7CTJISjIWwl7E1Ktg62ibPSXRgGp1W
8NMeBHp+G5w/dh+ghUCCaSGmKrQQCC2Eg6kxa8g5AbYQ8eHYsPnUtKpblubp
2mhYv6P1d4QJBz/TQiC0EA6mntUc6uiKRrbUVFfLbu8qH7CUhDOVQ/5qZs/W
pp/77n50ML2/hq2yZcpFVC2tWbDgcfm7fqrqPiMl0iIloj1F7SLkiHTLSCVw
f05L5FVWf9wCSRlWdMQNhzcH59SIFiI71ic1kmDIWIhSshBxYyEcRXvsIiJL
L6TJ5KIWL7QQCC2En9BCILQQDqberCEnBNhCWAx277L/RJtdLNiVxe03PTPh
ek20EAgthIMpZjW1RL9evnbtWusfWzc0NGgrItcACfs1mL6ht6qOaA+FB0cj
IoyReEi7bKiLuPtbjyxY8LhZTr//MVnOWPHEmtWrpm/an4qUKDYXYVcQPrfL
DB1cF3r1ESsEAhp3+rkaWaCFGBNTHGDmHXflsLVrccFYCPvRNSUiZrtoYfuy
BPcWWgiEFsJPaCEQWggHU2zWkCuCbSHi5kxMwxvmv9Gd6XzeZFOmfg7IUtZp
LGghEFoIB1PbamofIqG/ry8ajdbV1s4vr8iSsoHJGo6OG5qvcTX0gC1Hw0iJ
ShMXIa9ilnYvIcOkb7x+4M+XLl0q7PYZE9Wn8sazHLIUOcS93NWfW00x0rgT
IiJ21shNQThBooUYG1uZozH3oqlKCcZCjAwLe0kfc0xO/dNWNeu2f35832ep
1kh+r28woIVAaCH8hBYCoYVwMLVnDRMm2BZitMuwTm2yuAXjK3TiM5la9LQQ
CC2Eg1KzmvKX2Nl2ZENDQ9XSGnuBStelY9jvrzriXGiByc4YKV+ZqhehzsF1
aPqGCop3ft4Qq9uQ+OXriQ+OaEvQ4DDYvUsLx8nkMVMzMkWmEpuT30c5Ldpg
1Ri3GnduWOiMiJDLB9fl6FUmBS3E2Iy0yZA55o7+KX54yUQJxkJ4xB4ywU6d
tBAILYSf0EIgtBAOSm3W4JGAWwjrR4Fkka5Una7MeRYa/6wfsZzVn/3yAmMh
cggthIOStZry9SoHT+2yUVFebgzhLdD6E42Eve+n0RG2ZA1rZHERGiZh/+eu
FXUaTaEtQQMhJUYmj2MqCLm1a/0DM++467snLub2R0z9CfWGw5uTCqIyvUBE
5eqPW3L4WhODFmJMTGuV0E/fLvS6FIzSi4XwSJwWwg4tBEIL4Se0EAgthAP7
rCG0KFI6s4bsBN5CWJjzMeuz++0n+Afu6KYxyXL0tBAILYQDh9UsqeOJ+QOM
x+MaILG4qipTvobdSJjr7b7CNToik4swCRr2C8ZFmLoThZIS2qZH5wVvnzzW
tXvbgY/+hMuO/a0n/3xI3vjMO+6afv9jnZcH8hFKfWUoFmpa6VIgYvsSecXC
niaVsoXQMrCvH/izfAoZ7zTisvK3exQFjIXIBC2EHVoIhBbCT2ghEFoIB6Zo
gCy/XvGr7D0fS4fgWwj5c9a4ZZ3IuIWnxofafqMKQpbTGg9P8ghAC4HQQjiQ
44mZaJfy8UT/1mT597OfRiKRxVVV2jNuzAoSjlvlQuWChSY6wu4ijHDILiVG
XMRoY440KfGD5+Mb/zux/3/l7D1fc7pkUwN7BIhuClzeMtJcT5aTP15lwMou
b73QYzXudEZEPBxqfrqwE9vStRB9++1hQk9G3sRDh7osuY982b3c1V+Q1QwI
jIXIAGMh0qCFQGgh/IQWAqGFsNO1e5uj1LA/3duDT/AthKY5a6ku/RBl0rfv
s9G/cc3C1h9Ypy1tnPx8kBYCoYWwY44n5id+Hk+Unp4z0Wh0Q0NDTXW1ydfA
2hFoJ/QmpXLBwl0r6q7N+fd46N8GJ+QiRqpfPpRI1xH5i5TQujR2yZCldIa8
faMp8j3NXHaiCcpUWqkZ8zpey+vrZqc0LYS2k3bouOn3P/b6gT/L19ZwbDge
O3+qsUb1VCmXgzAwFiITtBB2aCEQWgg/oYVAaCHkO10mC2tWr9Ipqn1YImKW
1QBLTm6fjLxZyhGPxWAhLKyIiKvHXvn+zeZD/HH9SzLfkWvkc9RAiOtrt8rd
Jt+jihYCoYXA44lJK+DxxNDTc0Z2kubmZpk+yEb46KOP1j/3QjgcdtSOcEzS
7Udme3TE4qqqaGSLpQue29S59sUxa1dijkbMpiOMlDCtQvXC5CMl5CFmRoCO
xf7G7W9fD1n5zuWJx+NW407o2hl6pfKtc515fekslKaFsLAFzNitlPGZchiR
sbzldP/gVyV7GDEwFiIDViyE0Z5qIUp54kMLgdBC+AktBEILobOGxsZGOY+V
6ero0oyRf2ZLz5zqFIuFSCQ/UBmD3bueWr5cz9xunDdXf0/8cf1LyeiIeE7+
9mkhEFoIl+NJ8kIkEjFLHk9Onz6t+4lMH+zX9/SckU23uKrK3u/eEQiBrthc
qKmu3rN3j3y5v33y2JORN2XyXldb6xodkclFGOeQ3ir0IaMjTMiESglLfXiV
EnHdN+zfLKP7Q/oeMrqMbJEN4ku8fVx2SKtxJ4qIZONO0xbQT0rXQiTDZtY/
94J2UTFZouaL7PUDf/58KEb/oDAWIhNWbdvd2/RIUuJfOglaCDdoIfyEFgKh
hUjuBta0NAul3GFZKSILkRip/S7DKj7fe15O585+eUFnCjn8HGkhEFoI1+OJ
3qSd3Hk8SWS2EAY5S5TZd9XSGpQPmTpraA6dMKesbM3qVa1/bN3c+0Wo5Wxo
x6lpjYenb9ovczdHykaGHI2HzEhXE85gCbM0kRJjSgn99O17Be4h9qWfyGps
Ovsn134ZodYXfV4ZpWQthP3EIx47f7Hnb/19ffItrE2deO7qgLEQ2TGHnUKv
SIGhhUBoIfyEFgKhhSBeKC4LYZBv3itD+Zr00UIgtBDEC2NaiCRW8MDfz6Z0
hF07ZOn1qS5CL88vr9jQ0LC85fTXou2hN3pC0Z7QjlN2KTFjxRNPVd03/f7H
zPKdnzdcDT2AERGOgpYgJR6amJQIGnJSFGp90bVAxMtd/TId9nl9StZCGDh/
9AJjIYgXaCEQWgg/oYVAaCGIF4rUQuQVWgiEFoJ4wZuFGMU01zA6IlOvz7Qi
lrNmpe654okf179kuYgdZ0JNnyRdxBnLS7zRM/+NboeUyJCjMT4p4YijsEsJ
P1uCToD+wa+svAxHs4wNC+VK/8O5aSGIFxgLQbxAC4HQQvgJLQRCC0G8QAuB
0EIgtBDEC+O1ECNYqS79fX2RSKSmutpkytuNhP2yucZIiRkrnri+dmtSR5yy
QiOiJkAiJSXskRLv/Lzh8+lL7AkaI8OLlHgIgyWKRUq8da4zzUK8+og1ti4K
HVzn81kTLQTxAmMhiBdoIRBaCD+hhUBoIYgXaCEQWgiEFoJ4YaIWYhT5+v5s
YCAa2eKoHSE4mnuaTA1zH6tdzoonQs/uTcVFqItQC6FSwvzzt5/8386BxK73
E89tGr6vNh76t9jYgRAPehAX6RUnrlsWNCkxr+O1UQthq1e57ESTn6tBC0G8
wFgI4gVaCIQWwk9oIRBaCOIFWgiEFgKhhSBemLyFMMj3uOx1GxoaFldVeSli
aeIibr/tthvnzb2+duu0xsNpFsISEaOhEdbY/bfvnLx4ZcgqGDjU0TWmlLCF
Q7hkZzjEhfxz0FbrMghSQmsRhJqfduZlyNi+pPVCj29rQgtBvMBYCOIFWgiE
FsJPaCEQWgjiBVoIhBYCoYUgXsihhTDIF/rxrpPrn3thfnlFpiKWjlISJkwi
FRoR7UzJB7uRUCkhY/ffvnvCchH2V0Qp4RYOkS2DA28KiJSwGnduX+K0EFsX
hZpWqpDxYR1oIYgXGAtBvEALgdBC+AktBEILQbxAC4HQQiC0EMQL+bAQirY4
7Nq9bc3qVXPKyoxzUCNhQiNcIyVunDd3xoonrNAITcowERH2SImRuAjXl06c
/tRD+ob3KpejN/kvJeTtrP64BZtlyPKGw5tpIUhwYCwE8QItBEIL4Se0EAgt
BPECLQRCC4HQQhAv5M9CJJL9ebW54ZdffBGNRp9avty1WIQjUsKUjJDl9Psf
u752a+i3nzh1xBujcRGZXITBLiUG//VntkiJcVW5HOsOeZYSoYPrUqUp03XE
prO5/+AQWgjiBcZCEC/QQiC0EH5CC4HQQhAv0EIgtBAILQTxQl4thAP5oh8Y
GIhEIlo4wtHQ095cw56j4RIaYY+L8Owi7KvhkBKQmvFQAKXESONOiIjYWSM3
5fskihaCeIGxEMQLtBAILYSf0EIgtBDEC7QQCC0EQgtBvOCnhbDT3d29tr7e
XjjCESPhSNnQ4QyNmISLMORJSjifZLJSwmqNajXuhFgIbdw5/iccH7QQxAuM
hSBeoIVAaCH8hBYCoYUgXqCFQGghEFoI4oVCWQhFzgT27N1TU13tmpSBUsKE
Rkxb2phqqLHjzGh/z0m4CEMBpETveY8rNhwbvuHwZhARlTJWf9wysffrEVoI
4gXGQhAv0EIgtBB+QguB0EIQL9BCILQQCC0E8UJhLYRBzkU3NDRUlJdjycqx
G2qY0IjcuQhD0KSEvKNQ00qXAhHbl3ReHsjfqRQtBPECYyGIF2ghEFoIP6GF
QGghkKGhod4R4vF4oVcnENBCILQQCC0EIsdYPZjIH1Gh1yUoBMRCKHImcPB3
79dUV984b65rpQhsqCF3kDuHnt1rhUY4+mi8ka2PRhYuXbqk+8nFixcd3zt2
KZFY/GwOa0poncyxpISsTLz1Qo/VuNOyEJVpIqL56eHYcC4+BxdoIZDPP/9c
95P+wa/yt+WLC8ZCIPJ1o/uJfAEVel2CAi0EQgvhJ7QQCC0EIieBZpsMDQ0V
enUCAS0EQguB0EIgn3zyiW6T//ngD4Vel6AQKAth6O/ra2xsDIfDYzbUMHcY
rWBptxA6fvvJuFzEiZNduk3a2tqy3zOnUiLVqsOLlFh2ognKVFpjXsdrk930
GaCFQGT3kA3S3Nx8vOtkodclKDAWAvnDhx/o3458ARV6XYICLQRCC+EntBAI
LQRCC4HQQiC0EAgtBEILgQTTQijxeFzWqq621hECgTkaetPMO+6aPXv2jBVP
TN+0fzQ0wrOLkK9dmVGura8Ph8MV5eVyMJEL8urRaPTSJU/1JP2UEusa6qdt
rgv918MjcRGpGhFvnevM3ScwCi0EohZCJt1JC8FYTQvGQiC0EAgtBEIL4Se0
EAgtBEILgdBCILQQCC0EQguBBNlCKHJ68NnAwMaNv6645x5X/+BaNWLGiiec
3TQyuwj5colGoxXl5XoYkWezQi7ksjJr1pyyMlkBOVcZ75rnT0p8Pn2JvMfK
BQtl+dTy5d9+6f9NSYmmlf2DX+V8UkwLgZhYiBMnuwq9LkGBsRAILQRCC4HQ
QvgJLQRCC4HQQiC0EAgtBEILgdBCIMG3EIbh2PCBgwdqqqtNsQjXiAgTMiHc
OG+u5SKinVlcxLlz5xZXVaW0Q9I8mEQP+1JGOBzu6Tkz4QpFOZQScnkw9GDb
slVz77xzfnmFjIry8op77pExY8UT6597wbQEzdXJFS0EohZCxomuE4Vel6DA
WAiEFgKhhUBoIfyEFgKhhUBoIRBaCIQWAqGFQGghkCKyEIaenp619fWmoUam
iAh7yYhpSxu/Fm1HF7G85bRM4UeDHzIMoyPmlJW1t7fnpFSym5R4KH1kqWP5
oBqJNatXGf8gI2Uk7rln14q61KPsNSUmISVoIRBaCISxEAgtBEILgdBC+Akt
BEILgdBCILQQCC0EQguB0EIgxWghlC+/+CIa2RIOhzV6wdFHwxEgoVUjUuUr
d5wZ6abReeO8uXK9GoaMImL2qNaQyzLr7+3tzfnbscyGVynxkImLkAuLq6qM
hTAuQjbL59OXTKYlqANaCIQWAmEsBEILgdBCILQQfkILgdBCILQQCC0EQguB
0EIgtBBI8VoIc9pw6NChmupqR10Ih4uwB0iMuIhTcsFSEzfN0lAK03QDdYQJ
q7BunTVLXi7f7y6rlEj5B10emV+t5TQdLuKp5ctHMjhGQynsUiIxHilBC4HQ
QiCMhUBoIRBaCIQWwk9oIRBaCIQWAqGFQGghEFoIhBYCKV4L4aCn58za+vo5
ZWXoIhz1InRMv/8xc6ViNxVpImK202PINR9++KGf7y4lJfb/r5ESsVSBCMsn
7FpR51AQKiXkerdCl5jf8dCYUoIWAqGFQBgLgdBCILQQCC2En9BCILQQCC0E
QguB0EIgtBAILQQyZSyEIl8ZGzf+Wks9mBqVZmm0g5oERwUJu6ZwiAi8gw/h
EIg5U0IpIeuD4RAyrs3596uhByC5Iy2/w7UlqENKdLYd2bN3Dy2EHVoIhLEQ
CC0EQguB0EL4CS0EQguB0EIgtBAILQRCC4HQQiBTzEIkklP1K0OxaDRauWCh
PZkiU0+NTKkc9n6drvEV/YNfDceGC/tOzYWhjq5pm+u+95NnZFgJGiMWompp
TUoppFsI7y1BNeLiyPzqfXc/KqNr97be34+vpsRUhRYCYSwEQguB0EIgtBB+
YrcQ/X19X12+Il/opb7s6zPb5LOBgUtXLnP09vaabXL2ywuF/4wCsOy8PKC/
Scko+AcUkCEzDp0yzCkru3LlymVy+bKZXR783fuFXpeg8Nfukykzc+gQ9xNF
JlC6TT788MNCr0tukIPkpUuX5POVA6YcKk3JCMHVSLjmazi6bJj72D3GgX37
CrsXmVeXdypj9cctoZ01OqZtrjNSYteKus+nL7k259+Hb/3hhIdaiHevu1cu
pK68rzZWtyGxfmvv7/93qKNLViBx4VJJLT/66CP922lvby/gbhAoWv/Yqtvk
+PHjhV6XoCBfN7pNuru7C70uQUFOS3SbyIlKodclKOw/8B4thG/YLYSM5pLH
vjU4cLS0tMhW0mWJI6e+Bf84AjVkr9jQ0GD66DXzr4mDo+RHc/L7Qi80NjYu
rqqyR0HYjQTma7gaCUcnDnn42vr6gr9NfYPypaDfDtM214XW3Bdad//oMnnh
ycibbctW7VpRpyZhf+hb4x3yQFnKY/WCY8j1epO8RNfubdHIlgMHD+iheAov
dQfj4ODgyOGghfABh4XQg3kpLzm8jyB8XtxPgjPkbFAthIw5ZWUFXx8ODo4A
jkgkUlNdffttt7kmZWTK18jUa0PGmtWrCv6m7EOOhHv27gm99MOUgjBD/rlh
oUbQ7U/6imhkS+faF3etqDsyv1oFgkcLoRdc729/nkxSgt9iHBwcHNkHLYQP
OCwEBwcHx4QHLQQHB0f2oT9hR6PRmupqdAuZ8jUy9doITiyEfezZu+fJyJuh
um+nWQgVES/9UO9jVIBcUDXhRUoY+eAaCzExKVHwzcXBwcERtEEL4QN2C3Hx
4sVr5No1eyXGS5cuFXp1AoG9EuOXX35Z6NUJBHKAMtuk0OsSCORgIie0OmWY
+3/+T6FXJyiYSoyHDh0q9LoEhZ6eHt0m//OH/yn0ugQFUyuj9Y+thV6XPDI0
NGQuXxmKdRztwLYXXoyEvVLlzJ2R2OBVGfKEQVgOy3/J9bnh8GarOsR/PexY
rv64xXF/2Syy1G1ibhrq6Ep13/jB88O3/jAe+jcZRlDIBb1mvCNx3bJkg9FK
vWx131i/VVuCyjG8cLvGxPnLX/6ifzvHjx8v9LoEBVOdsru7u9DrEhT+54M/
6DY5ffp0odclKJhaGXKiUuh1CQqsC+EndgshM+5Cr04gYI8MhD0yEPbIQNgj
A2GPDIQ9MpCp1yPDFau15chF/V84HPaSfOGoIGHuNvOOu6Y1Hg7t/tt3T1z8
fCgQTb5Mywz5rgw1rQy9+kjolYdHlxsWyrLz8oC9s0YibcukPckoyZagnWtf
NNUpR3pnPDiuoc04THuOtIahtpagRdR9gz0yEPbIQNgjA2GPDIQ9MvyEnToR
WgiEFgKhhUBoIRBaCIQWAikRC+FApt7rn3thXAUqHdfMWPGEZSHe6AlFe0K7
//adkxevBMNFJJImofVCT8o/bF2UshD6z+anJ9BdVJ7w2LFjWh26a/e2VKTE
4metqAa3pp+ZljYp4dIwVP9ZRFKCFgKRw4im/NBCGGghEFoIhBbCT2ghEFoI
hBYCoYVAaCEQWgiEFgIpTQsh9Pb2OoRDlnIQjraeMkLP7g01fRLaccqyEDvO
WCNgLmLZiabQK5WWeTAuIjnmdbw2ARHRceyo7CQH9u070n0i7eGnP+3b855N
SpgwCefSTUrgPdNuSpMSI+kbudxGk4MWAmEsBEILgdBCILQQfkILgdBCILQQ
CC0EQguB0EIgtBBIyVoIOeswVW2zl4PApAytTpkWDvFG4FxEPB4PHVxn5INt
VL51rnO8z6YWorm5ubPtSLb79Z5P7HrfMgYjkRJpmRdO7ZA2bPESjoc8ZMIk
rGVgpAQtBMJYCIQWAqGFQGgh/IQWAqGFQGghEFoIhBYCoYVAaCGQkrUQwrVr
16qW1ngsB4E9MmbecdeN8+ZOW9oYinamgiIC5iI6Lw9YpSltgRCpsbOmf/Ar
UyLDC2ohZHQc7ch6x/TnzCglcDzoGi/hiJowBSWMlLCetkBSghYCYSwEQguB
0EIgtBB+QguB0EIgtBAILQRCC4HQQiC0EEgpWwg58ejv6wuHw9iIM0tSBlaK
uHHe3Otrt4Z++4nTRfz2k0K7iPjLXf1al9LmIiqt0friuJ7Is4VwrkDavzJL
ifRAiDGiJuyRFQ5lYUVKLH7Wn5oStBAIYyEQWgiEFgKhhfATWgiEFgKhhUBo
IRBaCIQWAqGFQErZQihyBlJTXa3VKR01Ku2FK+3lIzA7Q5bT738s9J87UyIi
GC5Ce3eGWl90y8t4+OWu/njM6zx9ohYiK+lSYqzKlk5lgeLC5cp8SglaCISx
EAgtBEILgdBC+AktBEILgdBCILQQCC0EQguB0EIgtBDKgX37wuFwpmiHivLy
xVVVroUrHUZixoonpm/abykIUy9CR+FchCUidtaMVqrUsWGhXNl5ecDjk+TF
QqQRd4uUcA2HyBgIEcuQ1jH6DDmVErQQCGMhEFoIhBYCoYXwE1oIhBYCoYVA
aCEQWgiEFgKhhUBoIezIRtjQ0FC1tKZywcJwOLy4qmr9cy8cOnRIu0L8tfvk
U8uXz5492zVwQpeauDFauNIxfHcRsSRvnetMderUoY07ty4KHVzn8ewr/xYC
6D3vaAmaPRAikfXKfEgJWgiEsRAILQRCC4HQQvgJLQRCC4HQQiC0EAgtBEIL
gdBCILQQDuRs5HjXyebmZtkm7e3tenISj8fNrTL3rFpa49rc04RGyDWpYhHR
ziC4CGFex2ujFsJWr3LZiSYvD/ffQjhPC51SYryBELmXErQQCGMhEFoIhBYC
oYXwE1oIhBYCoYVAaCEQWgiEFgKhhUBoIZATJ7veSXalbG9vN/7BRlzOWA7+
7n3M4MBx47y50zftD0JcxHBsONT8tDMvQ8b2Ja0XesZ8eAFiIdJBKdG35z0o
dOndObjcwdkeVKVE5u4btBAIYyEQWgiEFgKhhfATWgiEFgKhhUBoIRBaCIQW
AqGFQGghELUQMv7yl79kuZuct0QikfnlFXLkUR2RqddGKkHDdNAokIuwGndu
X+K0EFsXhZpWygpkPw0ruIUYA42USC90ie02xpISjnSPh2zP4yIlaCEQxkIg
tBAILQRCC+EntBAILQRCC4HQQiC0EAgtBEILgdBCIMZCmIyMLFy+fHlDQ4Nx
Dpl6bWixCCtBo2AuwgrqWP1xi0s4xCsP33B4c1FbiJGVHwlcyY2UsMVFuEmJ
tmWrdq2o69q9TUbB3nnAYCwEQguB0EIgtBB+QguB0EIgtBAILQRCC4HQQiC0
EAgtBDJWRoaT4djw389+Wldb62iiYUpG6HLmHXfdOG9u6Nm9od9+UsC4iJk7
I1aDDK1OaRMRm85m2wECbiEcuNeUGL+UcMvXGJUSR+ZX7w99693r7j1552N5
bQlaRDAWAqGFQGghEFoIP6GFQGghEFoIhBYCoYVAaCEQWgiEFgLxmJGBtLe3
m4aeAlaNkGPUGAkaIy7i8/y4iOHY8NkvLyQbdzrCISrlyv7BrzKdjBWXhXCQ
RUokrluWORAiU6vQlIhQCyFDLuS1JWgRwVgIhBYCoYVAaCH8hBYCoYVAaCEQ
WgiEFgKhhUBoIRBaCGRcGRkO4vF4NBoNh8P2oAiztHuJ62u3uletzL+LsBp3
pgdCpApEHFyX6SFFbSHGIIOUyBAO4bQQ7153r7EQ6XcbR6HLKQNjIRBaCIQW
AqGF8BNaCIQWAqGFQGghEFoIhBYCoYVAaCGQ8WZkIJcuXcJiEWYYF5Gtg0be
XEQsyQ2HN7uEQ7xSufrjFtdHTWUL4SA9fQMKRHiLhRhnocspA2MhEFoIhBYC
oYXwE1oIhBYCoYVAaCEQWgiEFgKhhUBoIZAJZ2TYGY4Nd14eeGr5cpOaYe+a
YR+pBI2mDMUi8uMirgzFQk0rsTpEaPsSWW08JSshC+HAraaELrPGQoyv0OWU
kRKMhUBoIRBaCIQWwk9oIRBaCIQWAqGFQGghEFoIhBYCoYVAJpORYZAHDseG
5cKhQ4fC4bCja4ajm+eN8+ZeX7s1Y9XK3LsIK8Cj9UKPZSGwZUbz07rmdkrX
QjiwSYkssRDjLXQ5ZaQEYyEQWgiEFgKhhfATWgiEFgKhhUBoIRBaCIQWAqGF
QGghkMlnZDiQE54NDQ1zysqyd/Ocfv9j0zftz5idkYe4iGUnmrBrp4x5Ha85
RAQtBCK7RzSypWv3ts61L2bvvjFmocspIyUYC4HQQiC0EAgthJ/QQiC0EAgt
BEILgdBCILQQCC0EQguB5CQjA5HzbXuChqObp6kXMUbVypy6iHg8Hjq4zk1E
VL51rtN+T1oIB7Lp2tvb9+zdI6O7uzt1beb0jcxVLl0CJzJICeuyVaoiwFKC
sRAILQRCC4HQQvgJLQRCC4HQQiC0EAgtBEILgdBCILQQSE4yMhB9qgMHD5gO
Gq7dPE1QhD8uovPygNW4E1tmJBt3au5GghbCjba2NtkgLS0tx7tO6obK0hLU
VugyUyBEaukqJcw/E+mmImhSgrEQCC0EQguB0EL4CS0EQguB0EIgtBAILQRC
C4HQQiC0EEjOMzIcfPnFFxsaGm6/7TY9atlrV5rsDLlyxoonQtHObJUicuMi
4i939Yc2LEyvVJksFtH6orkTLQSiFkL2E9lhMt0n7eTWa6SEi5TIZCqCJiUY
C4HQQiC0EAgthJ/QQiC0EAgtBEILgdBCILQQCC0EQguB5CkjwxBPcqLrxOKq
Kj1wYUPP22+7beYdd1Xcc49VKWJMETEJFzEcG44NXg21vuhaIOLlrv54zJrM
0kIgaiFkyEc5kce7RUpkD4TIbiqCICUYC4HQQiC0EAgthJ/QQiC0EAgtBEIL
gdBCILQQCC0EQguB5CkjA4nH45FIRI5aRj44unlqmMT3fvJMqOWsJxfRNEEX
YYmInTXOxp0bFsqVnZcHErQQbkzWQjjILCW8pGyMW0qczsvsj7EQCC0EQguB
0EL4CS0EQguB0EIgtBAILQRCC4HQQiC0EEi+MzIc9Pb21tXW2uWD3UVYiRuz
Z4fD4eUtp78WbR/DQkzIRcSSvHWuM5mIMdK489VHUlLi4Dq5lRYCybGFcGCT
ElabDJcun5ORElbFy3xICcZCILQQCC0EQgvhJ7QQCC0EQguB0EIgtBAILQRC
C4HQQiD5zshw5cC+ffPLK+zFKu01IvSfT0befPvkMSsuYsygiAnFRczreG00
EMIWFLHsRBMtBJJfC+Egd1LClMS03zoqJZ7bNBkpwVgIhBYCoYVAaCH8hBYC
oYVAaCEQWgiEFgKhhUBoIRBaCMS3jAwHZ7+8sGb1KteuGaZ2xIIFj8tabe79
Ih8uYjg2HGp+ejQcwoztS37R8/s9e/fQQtjx1UI4MFLiB887Cl2OKSXs+sJx
2X7/iUkJxkIgtBAILQRCC+EntBAILQRCC4HQQiC0EAgtBEILgdBCID5nZBj0
RKhr97YFCx6fcdMse9cMR4zEhoYG+ULMh4uwGnduXwJlKiunba6jhXBQSAvh
wLOUSO8W+qDb5UlJCcZCILQQCC0EQgvhJ7QQCC0EQguB0EIgtBAILQRCC4HQ
QiAFychQhmPDMuKx82vr6x1dM9Q/zLgp1dlzcVWVTn5z6iIs5bL64xYIh7As
hIzm5uaOY0f92hhBJ0AWwkFmKeF9OTEpwVgIhBYCoYVAaCH8hBYCoYVAaCEQ
WgiEFgKhhUBoIRBaCKRQGRkGfdGPPvooHA6bohDGP5gx8467opEtw7HhxDhd
RPjExStZ4yJm7oxYDTJMywxZvvTD0Lr7n4y82dl2hCdsSnAthAM3KZEhQGIc
FS/tl42U6Nq9TfbJA/v2/bX7ZKHfdlCghUBoIRBaCD+hhUBoIRBaCIQWAqGF
QGghEFoIhBYCKVRGBiJnBWvr6zUiwhSrtGdqyEGvprr63Llzen9PLmLHGesO
mV3EcGz47JcXrMad6bEQoTX3hTYsPPDRnzRkghSNhXAwVqTEeKTEaKFLXZ68
87F3r7tXRtuyVanuG/JypQ0tBEILgdBC+AktBEILgdBCILQQCC0EQguB0EIg
tBBIATMyXOnY31pxzz2zZ49Wh1AvoU085bhXUV7e0tJi7p8TF2E17jRtMkZi
IUJr7pu2uc7Htx5oitVCOMidlJAL++5+dH/oW+9ed++R+dVy02Dy+rSWoKUn
JWghEFoIhBbCT2ghEFoIhBYCoYVAaCEQWgiEFgKhhUAKnpFhJ5ZETpPqamux
fYZeozpibX395cuXzQMn4yL0RW84vNkZC7Hufrmw+uMWtzUtOaaIhXAwOSlx
ZH71/tC3ZKiFiKUXlEiUpJSghUBoIRBaCD+hhUBoIRBaCIQWAqGFQGghEFoI
hBYCCU5GhoMDBw/ML68wlSKwoWc4HD7eddJ+QjUZFyGXrcadWxfZYyGsC9uX
dF4e0HoUpczUtBAOxiclUhbCxELYC0p4khKeW4IWEbQQCC0EQgvhJ7QQCC0E
QguB0EIgtBAILQRCC4HQQiBBy8iw89nAwFPLl9u7ZuCysbHR8aiJuQg5MWu9
0KONO+2xEFbhyuanaSFKwkI4GEtKuMZCZI+gsEmJh0YLXU4hKUELgdBCILQQ
fkILgdBCILQQCC0EQguB0EIgtBAILQQSqIwMV6LR6Mw77rLXiEgtZ83SBI2a
6mqZMDoKPlgu4kDvGB00wEUsO9HkjIV49ZHQKw/P63itxEVEKVoIByAlMsdC
OIaz6Ya90KWt0ETGlqBFBC0EQguB0EL4CS0EQguB0EIgtBAILQRCC4HQQiC0
EEhgMzIUWSU5ZRrq6Jqx4glHXoYpE6HZGa1/bMWHT8BFhA6uM7EQloV4pVKL
Rbx1rtP/tx8caCGc9J7v2r1t14q6I/Or25atGnTJ3UgNDKKwh0w4LtsDJ4pR
StBCILQQCC2En9BCILQQCC0EQguB0EIgtBAILQRCC4EEOSNDSQYhxGODVzc0
NGQpEyE3yR1cz6+85mjIaPrk5o7zzoyMVx+xAiR21vQPflWyjTtpIRzIbtmx
v1UN3l+7T7qmb2QNhHCESbjcsxilBC0EQguB0EL4CS0EQguB0EIgtBAILQRC
C4HQQiC0EEjwMzLsfPTRR+FwGMtEpHpnzJpVU1197tw518eOERcRHXUR0zft
t6IgTEaG1cSz0hqtL/r8foMDLQQie6NskJaWlo8//th521g1Jbwsi1FK0EIg
tBAILYSf0EIgtBAILQRCC4HQQiC0EAgtBEILgQQ8IwORL0pTslILRDhyNOaX
V8j0MNPDx3YRO05N37R/2ua6GSueCO2ssUSECYd45eFf9PzezzcbHGghEDmM
6DZxsRAOskVKuC/HlBIm1yNQNSVoIRBaCIQWwk9oIRBaCIQWAqGFQGghEFoI
hBYCoYVAgp+R4Uo0suX2227DBA0rImK2tWxsbMwiVTK6iKg1pm/af33tVss/
yNhZEzq4TntnWCPZuLME8zJoIRA5jLS0tHiyEA5sUiJx3TIvzmHMtqEBkRK0
EAgtBEIL4Se0EAgtBEILgdBCILQQCC0EQguB0EIgxZWRYZBVlelwOBw24RAO
FyHLp5Yv/2xgIMuTuLsIzch4/vWZOyOp6pTJohAjLqJSLpRgvwxaCGQcsRAZ
SP3FjZW+kbmsxEN2+eCQEqbchJ9SghYCoYVAaCH8hBYCoYVAaCEQWgiEFgKh
hUBoIRBaCKToMjLsyMnDmtWr1Dk4XITpnSHvK/uTpFzEjjNGRFgW4tm919du
tUSEpmPocvsSy0X818PLTjSV2okcLQQy8ViI7HirKeFW39K9JYejAGZepQQt
BEILgdBC+AktBEILgdBCILQQCC0EQguB0EIgtBBIkWZkGOSEKhqNzikrw64Z
xktEI1vGfB57XITGQsiwLjQ/bfkHGcl+ndaFZFxE64UeH95dcKCFQCYfC+GJ
jDUlnM4hU6MNP6UELQRCC4HQQvgJLQRCC4HQQiC0EAgtBEILgdBCILQQSJFm
ZDj4a/fJcDhs75qhS42IkOXa+vpr166N+TzqIuwW4mvRdisEIlma0hpyQUfT
yu+cvHhlqFi32HihhUDyFQuRHZUSv3xda0qk52JkCYSYkJTY9f54pQQtBEIL
gdBC+AktBEILgdBCILQQCC0EQguB0EIgtBBIUWdk2JGTq7raWtfeGSoiFldV
9fb2enmq5S2nrVyMn75t6Yhoj3U5JSIqUxERSR0h138t2v6dkxc/LwEXQQuB
+BQL4cboPCKblJhY0Uun0BiXlKCFQGghEFoIP6GFQGghEFoIhBYCoYVAaCEQ
WgiEFgIp9owMB9g7w14poqK8XN5mdtkyHBvubDuyZ++eJyNvWoEQO05ZaRoH
140oiJGRTNOwBIXc2vTJlHcRtBBIYWIh3MiHlEhkiLLILiVoIRBaCIQWwk9o
IRBaCIQWAqGFQGghEFoIhBYCoYVApkZGhkHewrFjx8LhsGtQhPbxjEQi2Z/k
SPcJOcw2Nzd3HO2wcjRazoainVY5CLuF2LrICpCQK+WmqNVZY2q7CFoIpICx
EF5JlxKeAyEy3mS7UOmavkELgdBCILQQfkILgdBCILQQCC0EQguB0EIgtBAI
LQQyZTIyDPIu5Mu0pro6U0TE7Nmz19bXZznxkE2h+0nH0Q69ZnPvFzd3nE91
ytDUDK0O8crDVpjEjlMpETF14yJoIZDgxEJ4xbOU8OgrUEocmV+97+5Hd62o
G97ylrwc5zsJWgg3aCH8hBYCoYVAaCEQWgiEFgKhhUBoIRBaCGSKZWQY5ERr
Q0NDpjIRMqqW1vT39bk+tuPYUYeFiA1eHY4NLzvRZAU/bF+S0hGpGhGVVl7G
7r9NbRdBC4EUQSxEdjJIiQlXk5AL++5+dH/oW+9ed++R+dV5bQlaRNBCILQQ
fkILgdBCILQQCC0EQguB0EIgtBAILQQyxTIyHBzYt29OWRkGRegyHA53th3B
R6GFSCS1xpWhmNW4U4eJi5Dl9iVWBYmmT1Ii4o2RMYVcBC0EUnyxENlxSonR
rhnepcTJOx9797p794e+NXxf7dXQA/lrCVpE0EIgtBB+QguB0EIgtBAILQRC
C4HQQiC0EAgtBDL1MjIcyIceDoc1HMK+1OyMOWVl0WjU8RBXC5FIiojWCz1a
l9ISEU0rUwUi5J9y+Y0e9zElXAQtBFL0sRDZGb+UGByJhZChsRC2+4wWuiw1
KUELgdBC+AktBEILgdBCILQQCC0EQguB0EIgtBDIVM3IsCPnXd/7yTOmNASW
idjQ0GA3MJkshGLlZZh+GcZFaF7GbyEcwuYiwicuXilaF0ELgUy1WIjseJAS
CfdYCCMfHrK320ikxVS4FLqcMlKUFgKhhfATWgiEFgKhhUBoIRBaCIQWAqGF
QGghkKmdkaHI+xqODW9oaNDUDMdQEVFXWyunZ3r/7BZCSDbutPXLGMnRsPIy
op3uERE7zlh2omhdBC0EMsVjIbIDLUFjocqxYiEeGiug4sEsLUGLV0rQQiC0
EH5CC4HQQiC0EAgtBEILgdBCILQQCC0EMuUzMuzI25xTVoaNM3Qsrqo6d+5c
woOF6Lw8YJWp1B4ZOjRH4+C6VOPOTNkZResiaCGQ0oqFyM6IlGhbturd6+6V
kSkWYszKEth9o9ilBC0EQgvhJ7QQCC0EQguB0EIgtBAILQRCC4HQQiClkJFh
53jXyXA4bK8OYc/OkJvkDseOHctuIRKJ+Kazf0q17FQLoY07ty6auTNyc8f5
aY2HM4oIm4soonoRtBBIScdCuCGzmz98+EFLS8uevXv69ryXWL91JFLCXhoi
W2UJLy1Bi05K0EIgtBB+QguB0EIgtBAILQRCC4HQQiC0EAgtBFIKGRk2rKmK
fK1ULa1R/zDjplmONI25d94ZiUTGshDWhCvU+uKohdALya4Z/7dzYN9nsVDL
2WxBEVAvIuAbnxYCYSwE8ocPP2hO0tPTM3pthpoSmQIhxiUlgl9TghYCoYXw
E1oIhBYCoYVAaCEQWgiEFgKhhUBoIZCSysgYIR4bvLpm9Sp7IIRe0BoRslxb
Xy/bpOPY0SzPIk9i5WVov06TmrFhYWj7ks7LA/Iqm3u/CB3oHcNC7Dhjjd1/
C7iLoIVAGAuBaCyEbJPWCz3DsWH3O0FNiezOodilBC0EQgvhJ7QQCC0EQguB
0EIgtBAILQRCC4HQQiCllpFhp7GxUc0DlqyUUVNd3XG0I9P8JZbkrXOdloWw
V4fQcXCdmYKN4SKixeEiaCEQxkIgf/jwA9kgB/btG+ro8lr5JF9S4sGApG/Q
QiC0EH5CC4HQQiC0EAgtBEILgdBCILQQCC0EUmIZGU5kuoT1Kk1cRE119Zjn
J/M6Xhu1ECPVIeTyshNN9u1Z7C6CFgJhLASiFmLP3j2dlwcyxkJk58Ilu5QY
zI+UGPzXn/kmJWghEFoIP6GFQGghEFoIhBYCoYVAaCEQWgiEFgIpyYyMNI4f
P15RXm7qVZqqlTqqltYkes9n+VXXKhDR/PRIgYjKUSOxfclb5zoddy5eF0EL
gTAWAtGMDDmejCMWIjt5kRIP2a/Pt5SghUBoIfyEFgKhhUBoIRBaCIQWAqGF
QGghEFoIpJQzMgz9fX2Lq6qMeXD08QyHw729vVnO3KzGnduXpCkINRJNK101
glcXEaTalbQQCGMhkBzEQmQnF1LCfr29f2iepAQtBEIL4Se0EAgtBEILgdBC
ILQQCC0EQguB0EIgJZ6RochE48svvnhq+fLZs50REeoi5pdXZK5UKZOU+OqP
W8BCWOOGw5szbVWvtSuD4SJoIRDGQiC5j4XIjk1KDN/6Q881JRzDeWtupQQt
BEIL4Se0EAgtBEILgdBCILQQCC0EQguB0EIgzMgwDMeG19bXm2KV9j6espxT
VnboULbDy8ydEatBhr1lRvLCprPZdrZicRG0EAhjIZC8x0Jkxvq7GIeUGLUQ
41IWDinh5Y+RFgKhhfATWgiEFgKhhUBoIRBaCIQWAqGFQGghEGZkOGhsbFTz
oC077TUi5J/RaNT1UTLhOvvlBatxpzMcolKulJuyv2jwXQQtBMJYCMTvWIjM
GCkR3/jfDimRNRAiu7JwegkvUoIWAqGF8BNaCIQWAqGFQGghEFoIhBYCoYVA
aCEQZmQgKiL0MKsiwnTNkGsikUimoBGrcacJhLCPg+u8vG6QXQQtBMJYCKSA
sRDZQSnhLRDCNYNjfFKCFgKhhfATWgiEFgKhhUBoIRBaCIQWAqGFQGghEGZk
IB3Hjm5oaJhTVubol2GG3IoncrEkNxze7BIO8Url6o9bPJ77BdNF0EIgjIVA
ghMLMTbp6RuObp5ZMjg8SImUwVAp0bZsVTSypWv3tmNn+jkBVGgh/IQWAqGF
QGghEFoIhBYCoYVAaCEQWgiEGRnI8ePHZYNEIpH55RX2WAjTNUPG2vp6169p
mXlZjTsxImL7knH9Ohw0F0ELgTAWAglsLMTYuERKeAmHGMNLxEKV71537/7Q
t2QM/uvP8toStIighfATWgiEFgKhhUBoIRBaCIQWAqGFQGghEGZkIB1HO3Sb
HPzd+6aDp6Nrhozv/eSZ2ODV9I1m9ctovdCTbNyZbiG2Lgo1Pz3eedl4XcTn
efv1mRYCYSwEUkyxENlxS9+YsIVQEXFkfnVeW4IWEbQQfkILgdBCILQQCC0E
QguB0EIgtBAILQTCjAyk49hR2SYymeo42pHoPV+1tMbEQpiuGXqN3OR6Urfs
RFOmxp0TWB9PLkJH3lwELQTCWAikiGMhsnPhUuKDI1b6xor/GI+USLMQw/fV
Xg09kMPuG8ULLYSf0EIgtBAILQRCC4HQQiC0EAgtBEILgTAjA1ELIaPjaIeV
5zB49Xs/eca1a4aMxVVVn3/+OT5J6OA6lwIR//XwW+c6J7ZWhXURtBAIYyGQ
qRMLkZ10KZG5dkS2WIgJFLqcMtBC+AktBEILgdBCILQQCC0EQguB0EIgtBAI
MzIQu4XQa4Zjw2vr6415sJeJuP222yoXLJSvKkckSeflAatxp71AxKuPWGNn
Tf/gV8ncjYlQKBdBC4EwFgKZsrEQ2XGTEmbpMRaipKQELYSf0EIgtBAILQRC
C4HQQiC0EAgtBEILgTAjA0ELIVtGztw2NDQYEWHKRFjtO2fPDofDvb296Rsw
vunsn5IWonK0NIRGRLS+OGELofjvImghEMZCIKUSC5GdpJQwNSX23f2oVqfM
GgsxppRI6x9a7FKCFsJPaCEQWgiEFgKhhUBoIRBaCIQWAqGFQJiRgaCFUGRi
NWPFE6Y6pblgRITsYPb7y8leqPVF1wIRv+j5/eTX008XQQuBMBYCKdFYiMzI
RujavS0a2dK2bFWsboNpCTquKpdunUOdUmL4vtoikhK0EH5CC4HQQiC0EAgt
BEILgdBCILQQCC0EwowMBC2EfDs/GXnT3qnTdcwvrzjeddL+VLHBq1ZexquP
OHt3Jht3TjIiQvHHRdBCIIyFQBgL4UAOqq8f+LOKiP6+PsvMjLv7htM5oJSw
BVc8qOkbKiXkUyj0BnCHFsJPaCEQWgiEFgKhhUBoIRBaCIQWAqGFQJiRgdgt
xLVr1yKRyPzyihk3zTIhEHPKyuylIUyBiNmzZ1eUl8uW1OeJJXnrXKdlIRxl
KmV5cF0OfyzOt4ughUAYC4EwFgKIy2mJbBDZLH8/+6njNms+OJaUGDMQAupI
jN7ZqlYRSGgh/IQWAqGFQGghEFoIhBYCoYVAaCEQWgiEGRmIsRCNjY3hcNiq
ATFrlqqGOWVlGxoargzFDhw8IJftBSJMdoZcb0SEMq/jNWdSRjI0YtmJptye
EObPRdBCIIyFQBgLgRw6dEj3k08/dVoIF5xSwmsgBGoK64I8WyChhfATWgiE
FgKhhUBoIRBaCIQWAqGFQGghEGZkIB3Hjqp/sMIbkgdbtQ1r6+t7e3vN3WQv
mnvnnXKrtu+0R0TMKSuTabu5p1UgovlplwIRrz4y4cadWciHi6CFQBgLgTAW
ApHTEt1PPFkIBy6REpkCIZyawrp/UKGF8BNaCIQWAqGFQGghEFoIhBYCoYVA
aCEQZmQ4kJlCTXX1bEPyYCvXdHd34/bpOHa0orzcUR3CiAj7bmY17ty+BERE
Zahp5ZWhWD5OC3PrImghEMZCIIyFQCZlIRykS4kspSGs5Yr/yMXq5wVaCD+h
hUBoIRBaCIQWAqGFQGghEFoIhBYCYUaG4dKlS2vr6zXPQsMbZLm4qurQoWxH
le7u7vnlFfZwCLuIaP1ja/JecRmrP25x7Zdxw+HN+TstzJWLoIVAGAuBMBYC
yaWFcJBsCZr45euJFf/hUlNCrg8qtBB+QguB0EIgtBAILQRCC4HQQiC0EAgt
BMKMDEG+cCORSEV5ub3Iw9w779zQ0ODlu1gmoeFwGFtmaI2Irt3bzI/CM3dG
QhsWprXMSF7YdDa/O+TkXQQtBMJYCISxEEgeLYQDh5QIamnKBC2Ev9BCILQQ
CC0EQguB0EIgtBAILQRCC4EwI0MmTVYJyuRBVYs8zJv1jbra2j1793QcO+rx
SXp6elRE2LtmqIi4cd5cFRHDseGzX16wGnc6wyEq5Uq5Ka9vMzE5F0ELgTAW
AmEsBOKfhSgeaCH8hBYCoYVAaCEQWgiEFgKhhUBoIRBaCKSUMzLa29sXV1WZ
EpQ61qxedejQITUz3i2EMNTRVXHPPY6WGaojKsrLP/zwQ72b1bjTBELYx8F1
+XmXTibmImghEMZCIIyFQGghEFoIP6GFQGghEFoIhBYCoYVAaCEQWgiEFgIp
zYwMmQ7U1da6lqBM2Dp1dhzt8PiEw7FhGXJGrZ011D/MuCnVPkNbfMpeF0ty
w+HNLuEQr1Su/rjFt49gvC7iwEepGTcthIGxEAhjIRBaCIQWwk9oIRBaCIQW
AqGFQGghEFoIhBYCoYVASi0j49KlS+ufe+HGeXNNY01ZPlV13+sH/mwmTROw
EAaZaFj5HbNn2/MyTI0IDTi5MpRs3IkREduX+Dx38+4ipm/aP3NnRGaXx7tO
JottEsZCuMBYCIQWAqGF8BNaCIQWAqGFQGghEFoIhBYCoYVAaCGQ0snIMCUo
TaCCLOWf0WjU0StzMhZC6O/vNyLC4SJGRES89UJPsnFnuoXYuijU/LT/vyCP
7SJ2nJm+aX/o2b2h/9y5vOV0/+BXPq9hMGEsBMJYCIQWAqGF8BO7hfj72U8/
GxiQ+aYsS5ne3l6zTeRyoVcnEMhBWw7duk1k9l3ie4jS09Nj9pNCr0tQkHNm
0wZOjiRyzeclT3d3t+4kB3/3fqHXJSic6DphzEyh1yUoHD9+3JiZQq9LUGhv
bzdmptDrkkfksDlagnJ2Sgg8GXlzqKPLmlP3nreKQ44sP/roI/2N+y9/+csE
XksOy3/tPmlSM+wuQiMiDh06JPdZdqLJqlTZtNKxlOv7+/pkrfxZmnf9clf/
16Ltod9+Yi2jnY6hsRChZ/daOiLa+X87rTMWx3YrteWHH36ofztHjx7N+R5b
pMi+rbEQ8icwkJzs8BRFTkt0P5Ftwg2iHKCF8BG7hdDQR/s/OTjeSe4VB/bt
s/9Tz4I4OOxD9ooNDQ3mbJb7CQcHB0eW0djYqELA1H+QyzXV1dHIFtX+jlMy
81vAJEc0Gq0oL7eLCHtqhqyVvG7opR+G1tyH48nIm7IackqgR/i8Lh3vWl46
9J87Q8+/7jKe3asiwlr+9G1ZTt+0Xx4oQ56qBJcF37c5OIp90EL4gMNCcHBw
cExsyEmjWgj9La/g68PBwcERzBGNbKlaWmOKP6iIWFxV1djYaO7jsLgtSSb/
0jq7t4sIrBERiURkDS0RUfft0IaFln9Yd7815MJLP5TH+rahzLs2SxcXIf98
du/1tVtHL4z8U+tF2B9eCkv6fw6OyQ9aCB+gheDg4MjVoIXg4ODgyDJkCq8t
MOxBCOFwWA6evgWjpkREZItWonDUiLj9ttvk+kgkYs33676d8g/GQqy5b9rm
ukLFzbq7CLmgl+0XkgESegd1EYwQ4ODg8D5oIXzAbiEuXblc6NUJBKxOibA6
JcLqlA7i8bicHOqPa3PvvDNOknz66Wh1ykKvS1CwV6cs9LoEBVOdsvWPrYVe
l6Bg6oe0tbUVel1ywLVr10wJShOEoCUo5SY9hI7J0aOj1SknszLal1O7Zjjy
MnTML6+IXz1mNe7csDD06iPJrhlWy0698Iue38vDJ7MCE17t+Ei3FLlg1a5s
OWt0hFUXYsep9HEmtdz9t/CJi58nS336v9r+Y69OWeh1CQqmVoZ8ARV6XYKC
vTplodclKLA6pZ/QQiC0EAgtBEILgWiPDDnBZo8MA3tkIOyRgbBHBmJ6ZLS1
tRV6XSZLS0uLNqdIVaGcNevGeXM3bvx1/+BX4+pNNskeGQ7iSSWoIkJjIexN
QuX6zssDVmnKlIVwNu4MQFtMawWWt5w25SDmv9FtNc6Ipo8dZ7SbRqjpk/CJ
i462I1MS9shAtEeGWohCr0tQYI8MhBbCT2ghEFoIhBYCoYVALAuRhBbCQAuB
0EIgtBDI1LAQ7e3tNdXVpviDNsJYs3rVxZ6/TWAunFsLkUiKCJmoaoSGPU9E
RUTlgoVvnzxmWYi0xp2V1vLguiC0O5R16Gw7smfvHitHI9ppRT7YtQO09bSW
JeAi5DCi2Su0EAZaCIQWAqGF8BNaCIQWAqGFQGghEI2FkEELYaCFQGghEFoI
pNgthJzYO0pAaAuME10nNCFiAs+ZcwuhdHd3y0HbUaxS/7m4qmpex2sp82BG
MjRi2YmmIEzk29vbdcZ9vOuklaNxoNcpH0rPRTAWAqGFQGghEFoIP6GFQGgh
EFoIhBYCoYVAaCEQWgiEFgIpXgtx6dKlDQ0NMou3z+srFyw8+Lv3J/nM+bAQ
8WSlBZnLzykrc60RUbW0JtT8tFNEyHj1kbfOdeZqNSa88rJ76DY53nVSczTo
IhgLgdBCILQQCC2En9BCILQQCC0EQguB0EIgtBAILQRCC4EUo4WQ70ctQWlK
QMgsXktQ5iR/IU+xEIrseyoi7DUidFlTXR3avsRpIV6pDDWtLPgU3liIE10n
7NeXsotgLARCC4HQQiC0EH5CC4HQQiC0EAgtBEILgdBCILQQCC0EUnQWQktQ
jtZ/mDVLJvUbGhq+/OKLeDw3hRzzaiGEQ4cOafyGJpLoUt/RjBVPgIWwxg2H
NwfTQiil6SIYC4HQQiC0EAgthJ/QQiC0EAgtBEILgdBCILQQCC0EQguBFJGF
sJegTE3bZ81as3pVzs9j820hEkmXYnJJzJg36xsyLBEx2rhzVERsOlvInTa7
hVBKzUUwFgKhhUBoIRBaCD+hhUBoIRBaCIQWAqGFQGghEFoIhBYCKQoLkSpB
mcy8MKOmuvr48eP5eDkfLIQQjUa157L6hxk3jb67UN23XQpE7Kw5++WF/K1P
drxYCGW8LuLzoWIVEYyFQGghEFoIhBbCT2ghEFoIhBYCoYVAaCEQWgiEFgKh
hUACbiEylaA8dCiPf+n+WAihsbHRpGY4emckRQSkZhxcl9f1yYJ3C6F4chE6
itZFMBYCoYVAaCEQWgg/oYVAaCEQWgiEFgKhhUBoIRBfLES8uMaVK1d6e3v7
+/o+Gxgo+MoEZMg0X7eJfAElw+MLv0rJka0EZb6/H32zEMKGhgbsl6E1IkJr
7nOWqXylcvXHLQXJYhivhVCmtotgLARCC4HQQiC0EH5CC4HQQiC0EAgtBEIL
gdBCILQQHN5HkPyDNeQo51qC8qvLV3yYg/tmIbSc5tr6ekezDFP7wioQ4UjN
2L6k8/JATlqBjIuJWQhlqroIxkIgtBAILQRCC+EntBAILQRCC4HQQiC0EAgt
BEILwVGMQ07Ua6qrZxuSx7q62tr+vr687cZO/IyFEIZjw/IGTbMMu4WYecdd
SRFhsxBbF4Wany4uC6FMPRfBWAiEFgKhhUBoIfyEFgKhhUBoIRBaCIQWAqGF
QGghOIpxXLp0ycrCSB7iZOSvBGUWfLYQ8Xg8NnhV23+YWAgzUiIi1TKj0jTu
9GHF7EzeQihTyUUwFgKhhUBoIRBaCD+hhUBoIRBaCIQWAqGFQGghEFoIjiId
0cgWLUF58Hfv523XzYbPFkKIxWJfXb6yuKrKtOw0jTNm3nFXuohIFYh461yn
P+um5MpCKFPDRTAWAqGFQGghEFoIP6GFQGghEFoIhBYCoYVAaCEQWgiOIh3D
seFoNFqQGoyK/xYikRQR8n0XDoc1L0OXRkTcOG+uzUKkGnf2D36V3GJ+kFsL
oRS7i2AsBEILgdBCILQQfkILgdBCILQQCC0EQguB0EIgtBAcxTwKSUEshNLT
06MJKaaDp0nNCH33bltSRnLZ+qJv2yofFkIpXhfBWAiEFgKhhUBoIfyEFgKh
hUBoIRBaCIQWAqGFQGghSmTEBq/29/XFrx47dqb/ylBsXN0u5LEjdQ5zsCby
VONdgcyjkBTQQgjt7e1zysqMfLBXirBERHpExC96fu/PWuXPQiheXcSOM8Fx
EYyFQGghEFoIhBbCT2ghEFoIhBYCoYVAaCEQWgiEFmLKj/jVY7tW1M284y7T
VWH27NlPRt48Nezpsa98/+bbb3qm8/JArtp0dq1/QFZgecvpXDxhISmshRAO
HDzgKFOp/5SPOFT37TQRkWzc6cMWy7eFUIrLRTAWAqGFQGghEFoIP6GFQGgh
EFoIhBYCoYVAaCEQWoipPf7RvEYbKMy4adaTkTe7dm8z89bra7cmZ2cZHzvU
9hu5s4yZOyMjtQVyMMw6hH76thcTknUUkoJbCKsyRmSLJmVoaQi9rMvQmvvS
WmYcXOdD405/LIRSLC6CsRAILQRCC4HQQvgJLQRCC4HQQiC0EAgtBEILgdBC
TOGhCkItxMtd/dYktG//j275pvnpPHUlfEaxwaunGmv0PlbQwuDVXH2O8nK6
GitvvlWefPr9j2mGyESfsJAU3EIoGxoaTI1K88neftttqZYZGguRDIpYdqIp
38U8/bQQSvBdBGMhEFoIhBYCoYXwE1oIhBYCoYVAaCEQWgiEFgKhhZiqY7B7
l4nSX95yWufsQ22/sYfuf/fERbQQ8dj5V75/s2ZwJB+Y2w/RQubC8avHNif1
yO03PfPeF4mJZmcUkoBYCGHN6lWuBSKcvTtffSTfjTv9txBKkF0EYyEQWgiE
FgKhhfATWgiEFgKhhUBoIRBaCIQWAqGFmJJD5/gaoj+SeZGc6fftN7PU6fc/
9nJXf+p688DY+Xcev1Ens/Pf6M7TxyevaH15jUREaN2JCUVEFJLgWAjZmDXV
1Y4CEdq7M11EVIaaVo6UBs0LhbIQSjBdBGMhEFoIhBYCoYXwE1oIhBYCoYVA
aCEQWgiEFgKhhZiKI/GP5jUyCdWpaFI1mDm7VZbhez95Zs3qVaog7B+QPQoi
9NO3k2ES+VpDZbB7149u+aasZGhRZEI1IgpJcCxEPB5P9J4Ph8NGMZnenZaF
+O7d9oiIGw5vnqoWQgmai2AsBEILgdBCILQQfkILgdBCILQQCC0EQguB0EIg
tBBTb8SvHnv2n27VqejXK36VnN2PBjwMx4ZHLjvyIBK9m3+g09jp9z/WeXkg
h905cehLy0uY4hUT8h6FJDgWIpZEPrK5d96ppSmz9+7cdPZPeVqTIFgIJTgu
grEQCC0EQguB0EL4CS0EQguB0EIgtBAILQRCC4HQQky5YQVCmI6N0xoPJ1K2
wXwQ7p+IvWTEqiP/0E8uV905Mw2rQETsvBaI0DIU41QfhSQ4FiJhRETbkTll
ZWP17qwM7aw5++WFfKxGcCyEEgQXwVgIhBYCoYVAaCH8hBYCoYVAaCEQWgiE
FgKhhUBoIabYMIUddO454hPGeuBXbc/+063WEWO2FZOQb/lgH/Ja7238mVqI
2/758R39X41nnykkgbIQimzMlpYWRyDEaO9Oq2VGZaprxsF1+ViBoFkIpbAu
grEQCC0EQguB0EL4CS0EQguB0EIgtBAILQRCC4HQQkyxYVpjjCexItG1/gGZ
qM5Okql9Z95GQmtp6jpPW9rYP/iV98cWkABaCKWxsRGTMtJaZlgionL1xy05
LxARTAuhFMpFMBYCoYVAaCEQWgg/oYVAaCEQWgiEFgKhhUBoIRBaiKk1rNoO
+sO3zEDTumNkeVTf/h/d8k2dqGIdCR/GcGz4VGON/mQvY6SvqKf3W0ACayGE
tfX1rr07b5w3d7RS5fYlNkmVG4JsIRT/XQRjIRBaCIQWAqGF8BNaCIQWAqGF
QGghEFoIhBYCoYWYSkNrLJgppxaFGOtRlrgwcftudSTyPqzGnW2/UXliq6jp
ZRSSwFqIeDwu5wZVS2u0SYqxUqOVKo2IaH661CyE4qeLYCwEQguB0EIgtBB+
QguB0EIgtBAILQRCC4HQQiDFZSFig1cTvedP/vlQNLJl/XMvPFV137SljZlm
rIPdu+QO4XD4+tqtnZcHrgxN8Mf9+NVj8nIbN/66MQ/I0450zJzIuskUUlbv
2Jn+/r6+3t5emcvLZNMUJFzeclqu//vZT3XIZUy10IYaZorqtY5E8rOQLSxb
ZteKuvnlFQsWPJ6MYXA+Vp5f7iAfhNznycibGT6shOnroYkhnrNCCklgLUQi
6ZE+GxiQnd+0zLDXiLC3zLjh8OYcvm6xWAjFHxfBWAiEFgKhhUBoIfyEFgKh
hUBoIRBaCIQWAqGFQIrFQnTt3iYz2Rk3zcIplUycMX3ARAWkpuQ3PTPR1pOJ
xFdtmrCgE7rcLmX1qv/qsv4eh1aBwJmmPRRfjwMaY5C4cCndxlgNNczDtY7E
mLpGXnT9cy/o7+wz77hLlqa/577PYvb3olbEvnqZsi1ig1dNUU3r9/rnP0h4
ygopJEG2EIpMe+eUlTliIVKVKtfcp9UhZLx1rjNXBSKKy0Io+XYRjIVAaCEQ
WgiEFsJPaCEQWgiEFgKhhUBoIRBaCKQoLMRwbFjmsz+uf0l/eTfT3tSM9adv
XxlKyyCwplRfta28+VadKevSVVZ4GiNP5TrTn/zwHn7gnLnbEhk05d8x3zSh
BXIc0AQNh4eRuf/h1f9itufXK36VrAyZbWVMY039OGTLyNObF/3uiYvmJezr
Zu6QzPhweSOCJoYYoeGxrmYBCb6FEA4dOqRFR10iIjYs1HCI0M6akYqgk6UY
LYSyo/+rUMvZUNSTi5h7/IJ3F8FYCIQWAqGFQGgh/IQWAqGFQGghEFoIhBYC
oYVAisJCpMRCUkfIGOzepcEJOmOVGbHMININQ0LuJvNrU2rAFjIx3vWxGOro
6mw7crzrZM7Hka7Tn080VUTfy8gbT3WaMHUAtDSlY7OgYNE8CN1ErorAMSwz
cOGSfhD6WdjntqMxDH379dOZseKJp6ru00acMl7u6ndzQQk1KsZXyP1Vzowl
jgpJUVgIIRKJmD8Wk61zi6NlRuuLJW4hFMtFeI6L8OgiGAuB0EIgtBAILYSf
0EIgtBAILQRCC4HQQiC0EEixWIj0WWf8H81r7JNfRxlGtQ2xwaunGmvM/Nfb
rNZdgCR/lE/9ZJ9bcrd9EjrxN4EQHkpTJga7d9kDJ7xYiMRo7UrrggmN0Lmt
FpY0PkTXwQpl6eg6dOjQsTMZqz2ouDCtOmTMf6ObsRC5QltmYESEvWXGL3p+
P/kXKnYLEY9bO1VuXQRjIRBaCIQWAqGF8BNaCIQWAqGFQGghEFoIhBYCKTYL
kZqx6jzX/LYbWhQZCSm3iwhrqb7CVrJgAuuTSL+Q22XOtomJJdDN4iXRwx5+
oKJmnKUzEppJYdJeNJNCo1BGMmXSNE4iowhKODJfzMPH+mgKRrFYCJlZX7t2
rWppjSMi4hZ7pcpXHtbGnZPcqsVuIZTcugjGQiC0EAgtBEIL4Se0EAgtBEIL
gdBCILQQCC0EUowWIpH8ef1UY42ZdM+8467NvV/g9Fbn5jLnGk/zx6Ic9roK
M26adds/P/7eF2NsefMQe4WK8caKGPsh6Nz2ez955ke3fPP2m56xrYC3fWAk
PSQ1O14U+XxoTGtUSIrFQiRGWmbML6/AiAhrU9d9OyUiDq6bZOPOqWEhlFy5
CMZCILQQCC0EQgvhJ7QQCC0EQguB0EIgtBAILQRSnBYirTCjTn7nv9GNr2Vi
IbAw4xQb8dh57TGhFR4wOMR1G/Zu/oF9G06gdIYjk0JLOmgt0HG/i6SFkENW
qodImsfINApJEVkI5ejRo/ZYCHuNCCsv45XK0NZFy040xSbRL2MqWQhl8i6C
sRAILQRCC4HQQvgJLQRCC4HQQiC0EAgtBEILgRSphbCeNFmRwF6MEfs7mLn5
xBtkFMewSlPKFN5eFGJMn2Av4HlL5p6nHj8IjcHQuW3op29rCsb4RjIjw/xS
r+EcrE6ZQ2RjRqNR3cKOiAhbpUqrceeEX2LqWQhlMi6CsRAILQRCC4HQQvgJ
LQRCC4HQQiC0EAgtBEILgRSphdAGDTKJnlNWlppEu/x0bpUa+NEt35y2tNFD
bH/GERu8mmqQkQfa29tPDccnGachs8vB7l32eeXyltNe3pcqGsjIGMeaaI3N
rvUPaAyGPs8vP70ygXdkL3RpLMRYj/r/27v/2KiuO+/js1Ebnvyxf6R6Nquw
ppVi/qEQaUmkTKWm/wQUOYqUtsoWrx60KyVSZcR2nyBREdT2v6gFRY/aqs4D
f0xDsgmduGJDqB8ZAi39RQUFFGdj47CEWFmFWjGJl6QJAdUw4+fcOfbl+Hyu
zdieOffO3PdLp5ZLjD0MBvu++d5z0tRyFcJ6cts2dwAmLlfRTpW1bSoL/ZvN
58bibs1o1wphLa5FHD7BLISPCqGoEIoKERIVQlEhFBVCUSEUFUJRIVSLVgj7
fq+d/ondF9E9BcMtFae2fN5cWy3m7gDnKtumDDstEP0Tcu2PVaPWovaETFgf
9W+NLy2Tji5NqgczFSKezF/cLIT70W09MB99auHHkcSDK/bxUCGaxFxKd2/Y
YH+zvImI6Z0qn33g1lO7F3dfRntXCGthLeJno7fsOnRHX2n/K/v/8+ybaT/2
rKBCKCqEokKERIVQVAhFhVBUCEWFUFQI1bIVojY/MHtHAv9sytp/XeK+lLZC
RHcKmD9NjU4Q9n025G6Rkae+El9L2l/yTctGfNW/lFmI6RQw+5DNRb2fKXc2
Y0VHBxWiScxFtPkuolgs6kREtKPI1vuibSr3rNt14fgi3nkeKoRr99inN2kR
e98u/KCv8O1XzMuNA+dn7hrLOyqEokIoKkRIVAhFhVBUCEWFUFQIRYVQrVsh
ovc7+zr6sz3Pxmc7mqvgU1s+f8cXvvjImQ+Xer/D5OWRl5975pkf9/b2lhqt
XPrp8McTiz1C9EZPiO9lMJeTM8/D/NMI0YeLj9VYwixEtK6d/ol7R8bMrhQL
eZIrlXh/CfaFaLZqtTo0NBTfzeRPRNidKvu6L1y5tND3nLcKYc03F1EejSrE
d180fyrv6CsV9r1TPPPhXGd65gcVQlEhFBUiJCqEokIoKoSiQigqhKJCqFau
ENGlqz2vc/o6+vZ/MVf0081hZhBifPIm9ybU81Hia95KQ9ndLeL3vPgHWZvW
iK8iE48LSfx1je3+hnsFurhZiOrlN8xHj+uBHcZY6EYc8czJjRMka7+bN3s8
aWrdCmGVy+U4HMUlynw+3Nip8sj2hb7PfFYIK7lF2ApRG4f4q95ThX9/p7D3
LVoEFUJRIRQVIiQqhKJCKCqEokIoKoSiQqhWrxDxeZ12n//dY9EQf2Xy8p5/
+Jz5vw3ZciHpyrdRLxvzwLxDS380Mh7PhMz/C7HHmLqzEFML7CHmqXYP2ohz
UB03U8iafVJnfOjJzSY6UtPqFWLK2anSPy/jkbujcYg967ecG1jQBhF5rhCW
3yJmz0Lc87OzN/5TjlsEFUJRIRQVIiQqhKJCKCqEokIoKoSiQqiWrhDR+679
A3p8DW43ojRX5eZKyg5CNPOjZ2RNx4TZZ4Xc/Gm/Xrlu76SIt2LYOHB+obMQ
Iy8/Z572jr/5ern0U/Ocz7VTaF1r9ixE4bu/q+sTID1tUCH+8pe/PNTVlXhk
RmHTvVGIeOHhG/NFdaBCWDdahDcLsa82C1EezXmLoEIoKoSiQoREhVBUCEWF
UFQIRYVQVAjV4hXCP94x2pFgZpPDxVwIt+CyR4Hc2JNh+ljSen6uv6uk3d5z
AbMQ7x2y3cA81dXLb5jfiPjIkjrvCnHXtdM/cS+E63sPaWqDCmGMjY2tWb3a
xih/g4jtX4ruy+jfTIVYnOkWMdcsxM/y2yKoEIoKoagQIVEhFBVCUSEUFUJR
IRQVQrV6hTCXzPZ4CHvpaq6j3+rtXrZ2lbtTZXsv22HieQb/oJB5L+HNz93z
D5+L00F8E0SdH/f/fX2ZuW41H9FucGHjjz1JpPCtX8xseREt85sSDVpMXp4n
cVw7/ZP4Qtj8Qn40Ml5HD0lTe1QI4/jx4+YJ14mIeIOIW0/trvNdUSGU+cyP
9qX81i8+Ux70ByHy2iKoEIoKoagQIVEhFBVCUSEUFUJRIRQVQrV6hTDro/6t
7m0Fy9auMldPe8evLvHgiZZY8aaO8SxE/Vth2B0yx3Z/I/65s7b3vNlPt/uC
xre9mJ9lbwyx7819V/YGGXMV9sncW1baR7LArSmrTfuMrUvbVAijt7c3/jRw
JyKiDSJqIeLAxeF6NoigQnjMH4ETJ07sf2X/Y6WXbl4hctMiqBCKCqGoECFR
IRQVQlEhFBVCUSEUFUK1QYWYPPtzb3fEe3521l7/LvF0jOwvuz9nfNnY8Tdf
3zt+0x0d3Uv46K4K86TF//a9e+zTxJ977fWRFw//MQ4LtvysuP1fDn5QsT9i
d5m4ETRm9rq0d23YYzfneTDxoavxTIu95uWkzmA29fTE8cE98WR6g4i+7pld
VuZDhVAnT560z8m5c+fMn685z/TMU4ugQigqhKJChESFUFQIRYVQVAhFhVBU
CNUGFSLekcBeAt/ypa+ai+UAHzcba+qt3u74mvF/rPk/b11fwE831/jx5b9d
GwfO6yzER/1bzXM73Qe+1vvqM/9qN+Kwe4HOvPGU+Y349l/fOLLTvOX+V/bb
OY2ZM0Dn/FW4W1POnHVS1y8/Re1UIarV6p///OdisegemXFjp0q7QcSxp2/6
nFMh1PHjx+MKYX+EFkGFUFQIRYUIiQqhqBCKCqGoEIoKoagQqvUrxJTdjtJe
PdnTOZv/QbOy7EGZ8cYOMyMEC3j2pmp3TNhLTvN+vP0c7Nu490por4g/ot0n
M34wN3JEHY/K3ZpyZk+Pen4T09ROFcIaGhqKfxfirGdexhtEfH/01/O/ByqE
On78+MDAgFshrDy3CCqEokIoKkRIVAhFhVBUCEWFUFQIRYVQrV4h7OXtyFNf
sXcl2J0Sm/1Bs7O8OZCZkYMF/PLtOIQ9Z8SeuXnwg4obDeIdG9y2kPg8mx95
9Zl/vWf1mvjxRP+M/u1XbpoUbL6IdySwHanum0pS034Vwjzn5XLZ/ka4QxFm
LVu7KgoRfd21QaM5n3kqhNJZCFe9LWLv2+3UIqgQigqhqBAhUSEUFUJRIRQV
QlEhFBVCtXqFmHKOqnS2NEy/DwRZs47atLeiLPxkkNr1/nuH4nSwceC82w2i
THH5DXuURvwGlcnLUwmhIJpLsbtW2vVY6SV76MZNflOcDTbtMEbdLSVN7Vch
rE09Pd5GK3YiItqpsnZw5zzbVFIh1FyzEK68tQgqhKJCKCpESFQIRYVQVAhF
hVBUCEWFUG1QIeIr8R+NjOdqEGJq5nTLhd/IMGvZczY/6t9qb6bwNpeozKhW
3v9gIqoccz3J5m3su7Jv+d9zv6W3xnZ/w/5lZXfXrG9fSrvS1K4Vwnyvtf7L
90e/I85hGdONqLZBxKNn9s0VIqgQav5ZCFd+WgQVQlEhFBUiJCqEokIoKoSi
QigqhKJCqFavEPHmip8pD9rL0vzMQphrfHfHho0D5xf7y5+y6SDepnL2HpXT
v4POfMJcH2X6t7uOt3RW7ZCOeMrC/Yj1PPIUtWuFMMz18srOTvPlw70vw90g
4sDF4cSfSIVQ9cxCuPLQIqgQigqhqBAhUSEUFUJRIRQVQlEhFBVCtXqFiP4Z
ffnymTGA9MtAyBXv5zD7dozFPeG1n3X19Lf/+m/tEZzzH6zZ2F9CvImlfSQL
CSlpauMKYZTLZb0vIxqHeOTu6ODOfY+bTzadiKBCqPpnIVzt3SKoEIoKoagQ
IVEhFBVCUSEUFUJRIRQVQrV0hbD3I9jtIJZwAd6y671DdkvJ6Nrwu79byI0M
ycuYPPvz6Xf4QGlBh34uYl2vXB956ivx7SS1HSQW+k7S1N4Vwti65Ynkgztr
G0Tcemo3FaIeC52FcLVri6BCKCqEokKERIVQVAhFhVBUCEWFUFQI1boVwl4v
3/Klr/5oZNx+mHa9F6MyeXnk5ef2v7J/5lda+8FK5a3ebjsIYV7uHb/akKfa
vNt4r4nCt36xqDJQ7/qof+v0B5ouHot4/Glq+wphvgErFovuIMSNDSJ23l/Y
s37XhePeT6FCqMXNQrjar0VQIRQVQlEhQqJCKCqEokIoKoSiQigqhGqJCjF5
9ue9vb3mMrx2SmDtHb536PHP/a25PrKnOgYLAqmst3q7ly9fbjdPiHfgtPcy
xOdmLvSAzrmW3YgyQIi4kSC+/Upd52gkrzS1fYUw/vPsm8vWrnIPabVreoOI
vu4LVy65b0+FUEuZhXC1U4ugQigqhKJChESFUFQIRYVQVAhFhVBUCJX9CjF5
9ufxXv3m2sdchpsfsYdiLGE/xpZZ7uYPM5snRL9kcxVvf9AeadG4J2HKhoj4
1oy/+lpvY88/vV65Hk9xRId+LqmfpCkPFcL87pRLPzW/U/GfQfNZcdvtd0YV
wm4QcWS7+/ZUCLX0WQhXe7QIKoSiQigqREhUCEWFUFQIRYVQVAhFhVAZrxDm
IsgeA+GNhZv/O/sch7Zd8dEV9hkwv+poB4yZw0lv+dJXD35Q74GYC3rao6M5
L79hA0gDN6usTF4+teXz9pHbG0yW1jfSlIcKYW3q6Yn7g7tTRGHTvYXnH9xy
biDeIIIKoRo1C+Fq9RZBhVBUCEWFCIkKoagQigqhqBCKCqGoECr7FSK+O8Bt
EU+89pG99G7vQYgpp8PEZ2iOvPxcnCDeeHvcbsvZ6Ocheof2+M63erujmZNL
f25I64h2pHz5ucdKL81M8i/1caYoJxWiWq1Ojb2/5u//Pnmnyp33F154ePjj
CfvpQYVQjZ2FcO0dv9qiLYIKoagQigoREhVCUSEUFUJRIRQVQlEhVPYrRPXy
G3YYwK7/te2HzfjX/wyvqcrkZXsLw2233xk/D/ZQiWaeDDKtdnvG5aUfwGGX
+Y2zgxYzH6IxDzIVOakQ9vdr+PRrKzo63BBhXl++fPmytauiENG/+U8X3i2X
y5t6ero3bDDLvNLf32++NKf98NPXjFkIKwpErdkiqBCKCqGoECFRIRQVQlEh
FBVCUSEUFUJlvEKYn2yuW6N/lL/8xhtvj5vr7jz1hxsrqjGV96+9PvLa2TPm
etC5jmjuB7W/BQ39QI19zGnKSYWwzCdDb2+v+YLihoj44M5la1fFXSJ+xb7x
pp6ehl99t5bmzUJYrdgiqBCKCqGoECFRIRQVQlEhFBVCUSEUFUJlvkJMXw7b
f0O3F55tfxdG4uW2rTFTM/dKpP14MrLSlKsKYZir3e4NG9w7MrzdWvRAz/iN
Hyu9VK28n/avIB3Nm4VwtVaLoEIoKoSiQoREhVBUCEWFUFQIRYVQVAjVEhWi
Qe+k1deUvMJKU94qhDE2NrZm9WrbFtxTM+bqEnZDS/uD39y48erHn6T9K0hB
s2chXK3SIqgQigqhqBAhUSEUFUJRIRQVQlEhFBVCtUiFYLESV5pyWCGMgYGB
eM7BOzXD6xL2R+IfNF+MNvX0pP3wUxBmFsK1iBaxauhSyBZBhVBUCEWFCIkK
oagQigqhqBCKCqGoEIoKwWrllaZ8VgjjyW3b4sjgbRPhdQn7io0SdrOIUqmU
9sMPLeQshGthLcKsgC2CCqGoEIoKERIVQlEhFBVCUSEUFUJRIRQVgtXKK025
rRBnz57V+DBXl/A2i1izevXU2Psze8zmQvhZCFc2WwQVQlEhFBUiJCqEokIo
KoSiQigqhKJCKCoEq5VXmnJbIeJZiHl2p5xrswjjmWd+bA9+zYm0ZiFcWWsR
VAhFhVBUiJCoEIoKoagQigqhqBCKCqGoEKxWXmnKZ4Uw33Ws7Oz0jsCYKzgk
bhZRLBbT/kUEle4shMpCi6BCKCqEokKERIVQVAhFhVBUCEWFUFQIRYVgtfJK
Uz4rxODgoBsW5t+dUt/M/qcPJibS/nWEk4VZCJVui6BCKCqEokKERIVQVAhF
hVBUCEWFUFQIRYVgtfJKUz4rRLlcdrPDPLtTzrNZxIkTJ9L+dYSTtVkIV1ot
ggqhqBCKChESFUJRIRQVQlEhFBVCUSEUFYLVyitN+awQpVJJ95+sc3fK+M2O
/OqXaf86wsnmLIQrfIugQigqhKJChESFUFQIRYVQVAhFhVBUCEWFYLXySlM+
K0S5XPa2g3BvyrjpZhF2jbz83CdBToTMgizPQrhCtggqhKJCKCpESFQIRYVQ
VAhFhVBUCEWFUFQIViuvNOWwQlSr1aNHj3obQcSRIbFLeJtF2P86/PFEZfJy
2r+aQLI/C+EK0yKoEIoKoagQIVEhFBVCUSEUFUJRIRQVQlEhWK280pTDCjFV
+2prvqzMdduF1yV0swhj1V135SdBTLXOLISr2S2CCqGoEIoKERIVQlEhFBVC
USEUFUJRIRQVQpf5O/admrGxsdQfTEbWxMSEfU7G33sv9QfjrDTls0IYD3V1
uftPznXbReJmEeaVTT09af8KgmqtWQhX81oEFUJRIRQVIiQqhKJCKCqEokIo
KoSiQqggFaLFnD9/3j4n5vIh7ceSFWfeHLHPyenTp9N+LFmR2wrhHZMx120X
c81LDA4OVip52RRiqjVnIVzNaBFUCEWFUFSIkKgQigqhqBCKCqGoEIoKoagQ
igqhqBAqtxViqjYOoZMP7m0XcYLw5iW6N2xI+7GH1rqzEK7GtggqhKJCKCpE
SFQIRYVQVAhFhVBUCEWFUFQIRYVQVAiV2wpRrVaHhoZWdnbWeUZnPC+xbO2q
qbH383M6htXqsxCuRrUIKoSiQigqREhUCEWFUFQIRYVQVAhFhVBUCEWFUFQI
ldsKYfX398c3YtR5Rmdh630HLg6nvqFHYO0xC+FaeougQigqhKJChESFUFQI
RYVQVAhFhVBUCEWFUFQIRYVQOa8QxsjLz92zek2dZ3QuW7uq8PyDhb7u8cmr
uQoR7TQL4VpKi6BCKCqEokKERIVQVAhFhVBUCEWFUFQIRYVQVAhFhVA5rxDX
K9c/uVYxV0ybenrqOaPTzkIU9qwrHHs6bxWizWYhXItrEVQIRYVQVIiQqBCK
CqGoEIoKoagQigqhqBCKCqGoECrnFcI1NPLmU9/53m3/9M/ejRjeZhF3fOGL
hZ33F55/8Pujv87PMRntOgvhWmiLePHwHw8fPNjf33/s0uj1yvW0H34mUCEU
FSIkKoSiQigqhKJCKCqEokIoKoSiQigqhKJCuMy1pFknT54s15gLTHcuIn69
8MjdhT3rCy88PPzxRE4mItp7FsJVb4sojxZ+0HfLrkP7X9n/4eh/USEsKoSi
QoREhVBUCEWFUFQIRYVQVAhFhVBUCEWFUFQIZT497L/7D428+cwzP9abMm7c
l3Fke04uP/MwC+G6eYuoVYjCd180LzcOnK/tEwIqRAIqREhuhTDfGY5jfHz4
44n9r+yP/2Cm/XAyYXR0NP48GRsbS/vhZEJ81WBW2o8lK8rlsq0QKzs7L168
mPbDyYQzI2fsJ8nhI4fTfixZMTQ0NF1mjh5N+7FkxeDg4HSZ+e1v0n4sWWGe
k/7+fvOcHPvDsbQfS1acOHHCfp6YV9J+LFlhrrjN54m56D558qT5/uShri53
EMK+Et2X8cN/LOx7/LHSSxeuXBp/7720H3VzxXsgmD9EaT+W5jO/m7Xf0B+N
jH+mPFgoD5uXuqIKUVu37Dpk3uZ/D0+8NnJ+YmLCfM7k9tuVwzNX3OYblbQf
S1YcevUQFSIYt0KwzDJfyw4fPJj6w2CxWnHt3LHDfL+3oqNjZWenvXxgsVis
RSz+AmEtYplPm1KplHiaZ3Rexs77C1vvK5d+Gv9LE6ttlp39MOux0kvTYw/e
in/wB32f7XnWrPgeDT4fWLqoEAFQIVgsVkOW+fbPVgizVnZ2pv54WCwWi5XD
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
B4iF5bI=
    "], {{0, 662}, {1410, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->360,
  ImageSizeRaw->{1410, 662},
  PlotRange->{{0, 1410}, {0, 662}}]], "Output",ExpressionUUID->"0b6feae3-a879-\
44ac-b5cb-229536d43372"],

Cell[TextData[{
 StyleBox["4.",
  FontWeight->"Bold"],
 "\tA graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3c1e2b86-26e6-45ce-a7e8-bb7175114682"],
 " and the lines tangent to ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "40e1a790-7fac-42db-9d85-9ed474a5b1b8"],
 " at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"-", "3"}]}], ",", "2", ","}], TraditionalForm]],ExpressionUUID->
  "a6cbb1fb-a63e-4969-9ece-80a0da61c23e"],
 " and ",
 Cell[BoxData[
  FormBox["3", TraditionalForm]],ExpressionUUID->
  "bf44fe4f-52c1-4de5-9b9e-0202ce4ea421"],
 " are given. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "3"}], TraditionalForm]],ExpressionUUID->
  "bb676a6c-458a-43f1-91f3-695fb76df9a8"],
 ", find the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "5baced5e-f795-4364-834e-9985c5af01fa"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "66b44936-e13b-4ede-97d6-f650bc9eee61"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "c4dd68fe-2990-4732-8fa5-371e91d360a9"],
 " that are obtained by applying Newton\[CloseCurlyQuote]s method."
}], "Problem",ExpressionUUID->"6d5c0651-0e9f-4568-aa3a-57913bb13546"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MBgMYePSpUuRqFy3pULh8Zx2/brWTGdH9piX1jiyJ1bS/H5frn8qGAwGg8Fg
MFY01BsYddnU1GQ1tJxvEoPBYDAYDEaWxn/+53/mOi/JNzc3Z05CO7LHOpbT
fmkOb1PLrYuDA/3rd3x47arOgBf+cCHnG5O9oR6d/sW5fPnyjZsDIsfFP17U
j/HdgdGcf8OzNC5dulQ4j1FdyfkPVZbGpQ//qP/p4Y+X/pjzjcnSUD+i+h9Z
1JPPzZsDOf+5ysawP8acf8OzNNRLhv59FPkY9d9jS0uL1dBuDg3m/Ocq46Ov
r89689zb91nOv+1ZGt2fXNOP0d/57znfmCyNT3o+iT1Gvz/nG5Ptx6hGzjcm
S6O3t9d6jAMDud+erDzGvs+sx3j9xvWcb082hv2ptf96f863J9uPUV3P+fZk
Y6i/O/Evkep3kIbmpI/vj8Wmnx1+xuxmp150naxy/a7a9bsXzOvmlWrXm8/X
Hf1l23i3un0kEplbV9Q2j42N6WM3Prx6Odebk0XXumPvLUdGRnL9Y5Utn/Z+
+n70wJwvRr7I9fc7W/RrmXqMarfIWIe/celQDy325vnGjVz/TGXLzZs3rTck
ud6WrJgNh9XfY+cHnerZVb0hyfXPVFaYE+L7h9Uvo/p7VDt9uf6WZ8utW7f0
z+rHH3+c623JMOuv8l9PnCgu3fh4SUn1Cy/k8CcqS9QjDYVC1pvnr7/+Otff
+Gz58ssvrd6b623Jlj9/9R/6MXZ2fZDrbcmWu3fvWi0019uSLffv37d+JfUv
qTxqP916jLOzs7nenKz461//aj3GYDCY683Jim+++cZ6jFNTU7nenKxQf3fi
XyJnZmZoaE5SuwivWMdyttfH6pkeZkyLljRrXDnSO3F33R1mO3ZnLDZB6+qV
XG9LFln/Piu7oekDcwSfNbGvr08/xsHBoVxvS7ZY/1ZCQ1vXPh8e1v88oX4x
c70tWRHrhF0fqIdJQ1vX9LqcJRs3Sl2XsxB2EAwamhQ0NBloaDLQ0GSgoTks
EonM3unweE6bJa293nXipVg6s5c0+4iWtJHJQK43fAVuj92mocmgdtX18XGy
G5p+jDeHBnO9LdlCQ5NB/Rrqxyi1oRnRvuTz+fx+/7Xua7nelmwpnIamBg1t
XaOhyUBDk4GGJgMNTQYamsOCM8FTH3R3nY8dH1cz1O7y1i5qaLGZadZldHjc
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
OW/9NrSlqPfh5oSrW+N6SQJjZ/MS89C2J8xGqwov/Slzrtr8kgTmnecLPSVv
Tu1xmPVMNzQ992ypFTx9DW3j3bne7NWgoclAQ5OBhiZD3jS02PTyyLwM3jUN
TQYamgw0NBloaDLQ0GSgoTlPXkOzmw2Hvxj54kzHueD+17z7GqJLEqQ6f1rK
RQoWLQlqLUkQ6R/O+euj2t241n3N5/O94jnt8jalCmjWtLSu5o7AOqs0NDQZ
aGgy0NBkyJuGlkU0NBloaDLQ0GSgoclAQ5OBhuY82Q1NifQPezyn3x0YHTj7
zmw4HFuS4PWT80t8Jk5LS5rRtiWrbbFhLUmgvpa6/5y8XF7rvqb+ErvOn/9i
5Iu28W6XryFVRosd6WmWtI/vj62X86TR0GSgoclAQ5OBhiZAIewgGDQ0KWho
MtDQZKChyUBDc57shjYbDvdO3B04+86ZjnPXuq9ZixFoZk9LsiRB6tlo9oy2
zX68Z9g6ndrOZvMUap3d6v4dO/lY9yfXfP7zaqgdIiM6M80sad7ahHOjJUxI
U+PKEfVdyv+SRkOTgYYmAw1NBhqaAIWwg2DQ0KSgoclAQ5OBhiYDDc15shta
JBIZHbt9puOcejfy7sCoGc3mWet7KuqKeRa16JIEwf2vRXvashnNvhKBdWmv
cNtjS3xGlySYnprIak/r/uSa3+/3+Xxqp8+YP6WM+oqNo36zpKU+uvNklevU
i0U9x0cmA9nbwrWjoclAQ5OBhiYDDU2AQthBMGhoUtDQZKChyUBDk4GG5jzZ
DU0ZuzPm9/vPdJybvdMRCIWWvb1OataSBOY6Akl62rbFV7Yt/qD9I9Zan1VZ
XZKg+5Nr+u9RNzS74EywZqjdLGkpJqSpT6nhcRf1HFffpfxcu5OGJgMNTQYa
mgw0NAEKYQfBoKFJQUOTgYYmAw1NBhqa88Q3tNGx27qhvTswmn4asuanmf58
zwxfh49NP7V/uQM8l1yGYPGSoOaSBMH9r+lTqBnRSXFrfJhLNTTrngOhkFnS
PO7lVhx4Qd3m6Rsedft8O7qThiYDDU0GGpoMNDQBCmEHwaChSUFDk4GGJgMN
TQYamvPEN7SxsbH3oyfbT3Me2lJ0VZuemjCXJDh8bH5JgtQnTEuMaYmRbWFJ
AqNnaDYcXt2rbYp5aFFz+tBO9R0o6jkeLWkpVu2MXvHW1gy152qJhKRoaDLQ
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
aDLQ0GSgoclAQ3MeDS3/RSIR9Zbj8+HhDz/6yOfz6RSm09bBAwf27N69w+3e
UlamhtpHKNm40T4eLymxLu1X9C2LS82hPqj+U1+xPquu2/+UvqV1e+vj1vXE
obZna3n5T39YqTbvJ3V1alN1i2t9+02P53TX4dev/+jQ9FP7A64fqCs1NTUp
Mpoe39n1473FT3Q+uaP/+7V6qYL5lUDNY0XNqW47m43W9kj/8FIre+Y/GpoM
NDQZaGgy0NBkoKHJQEOTgYYmAw1NBhqa82ho+UD95I+Pj1/rvubz+U6cOPHW
0aNNTU0/3vuP1dXVlRUVulbprmUVKnvOsj6ldxPsY6nApW9sL2OrHkm/tH0j
rZtZ18tLSuM+smHT5upnn1Mf2VJW9nD593QS1ENPRVPfh5/+sFJ9Sv3Zuvr9
4eKXJ2MZbdt8SauyxpzLbfW04ExwHb2BoaHJQEOTgYYmAw1NBhqaDDQ0GWho
MtDQZKChOY+G5qTp6emxsbEPP/rI6/W2tLToWWSVFRX2OGalLf1B+7yvZfNX
ipyVtKHFTTDLeElL88/qpGZVNf2fcVuuO5v+lF7Z017SwrHZaNbYbsyfeE19
1jx6NLrEZ3AmmOenUKOhyUBDk4GGJgMNTQYamgw0NBloaDLQ0GSgoTmPhpYl
6hdW7X/5/f621tZXDzXucLsrKyoSg1jSALXGtJWYs5bKaJkKaEt96Qw2Oquz
FSdMadtb/IQaxx4tVaPzgco+V2VoYYpalbWWge5peolP470L+bkkAQ1NBhqa
DDQ0GWhoMtDQZKChyUBDk4GGJgMNzXk0tIxQb+3Ud9Lr9TY1Nf2kri5uallc
sLKfdiwxQGUqbcXlrOwdy7nUl85Go0sxNmzaXPTQBusoUautmcsQzIe18MIs
NfNcanm4JAENTQYamgw0NBloaDLQ0GSgoclAQ5OBhiYDDc15NLRVUE8yavdf
F7M9u3dvKStLfV6yrAarNHPWUsdybti02Trz2Nbycmvo/7Q+ZR1HmbdDb549
3MVNXbPCmp6x1ueqDLh+YCW18IO7gvtf06dQU3/FuXrPQ0OTgYYmAw1NBhqa
DDQ0GWhoMtDQZKChyUBDcx4NLR3j4+PqPVvr228ePHBAn4yr2DbRy0pScdfj
RgYPbNSBSG1G9bPP6VUv9+zerde+9O5r8HhOe73eMx3nus6f//Cjj9Ten9qj
HxsbU+8///KXv6hny1AoFIlE5qIiUdZ1fUU/ar26pf64+v/ZcFhdD84Ev578
+t79e/8R+Mq4NT440P/58PC17msDZ99RX1EN9dXbWlvV96rr8Ot19ftfPdSo
Vw5V37et5eW5DXHqqxc9tME+Yy1uupo+u1rckgSZ+UFMDw1NBhqaDDQ0GWho
MtDQZKChyUBDk4GGJgMNzXk0tKQmJiYuXbr01tGjdfX7t5aXp38+/6Ua2koP
bFRf9Kc/rKypqXn1UGNLS0tba+uZjnNXr1wdHBwaHx//evJrfS4vq3p1f2Ku
6alu0ztx15nsozbAOp+YDnGGLbupbdCbocubpv+I2vhI//DgQL96G+z1ev91
fh1S9a1Wj7eyoiJ7nU39LVjpTGc0K6ZZf4n2qtbnqjSP+tzZbBw+prZ5empC
P8DsoaHJQEOTgYYmAw1NBhqaDDQ0GWhoMtDQZKChOY+Gpqnnjd7e3hMnTuiZ
ZtYcs6R9bNkZZWkuUrm1vHyH262+YktLi3qTr94WDg70q3eJoZkZq1BZ0Sb1
q3D3J9fUY/T5fF+MfJHB7142qMdlr3z26XCK+qwZBv98Tz2Qa93XvF5vW2tr
U1OT+i5VP/ucPmw2IzFNH92Z9N7i1gm1T1SLLUnQ2a22MLPflvHxcfVg1cNU
PxI1NTXmlEKvV/0wZPar5AMamgw0NBloaAIUwg6CQUOTgoYmAw1NBhqaDDQ0
51kNTe0j3Lp9S95Qj8t605X4KR3Nqqur4w7MTD+XpVPStpSVVVZU1NXvb2pq
euvoUa/Xa+aywaFbFr1Jt26Njt3WY2xsbEUP89KlS+YbEr9f7QdZd5KfY+zO
mP3R3R67bb+0bqb+U99YfdD87K1blz78o89/Xh8x+orndFHTD7+z68dFO8sf
Lv+eGo4dJaq+UPWzzx17tNS7r+H6jw4NnH1ncKD/i5Ev1KYu/FWuZKifhx1u
t/UjF/dzuGf3bvXXmvPfowwO6zlHXcn5xmTrMV69oh/jhx99lPONydJQTzX6
MapfzJw/q2RpLDzGS5dy/g3P0rBeIi9evJjzjcnSaGlp0Q1NvRDfuXNndU/U
+Tys2KvG58PDOd+eLA1rnnbnB50535gsDevfmPyd/57zjcnSUG+ZYo9R1nsb
+7D+HU0NeU84scc4NCj+MaqnU5/Ppx+jeprN+fZkY1j/Hir45aMQXiJHR0dp
aA6z9mcLZHg8p5uamn689x/Ve+m4XJZ0CctVNBY9u+wndXVWMdPPwOpSvWGw
no31R+I2T98g7mbpD9/ie8jPy6QP3P49SX1j/fGu8+d1SXP9utb1i8rYOPi0
GkU7y3VY27BpsxrZaGhx/xmbqPbkDn0yOrVtaf59qZ+NPbt329dpTTwEWA/1
E6ser/nYc/0bxGDEjXx4VsnSZc6/t4yMDPVarP9VS73ur+61lcFgZGT4oiPn
m8HI4PClfFfPYDAcHjQ0ZxRCQztx4kTcApop5ozFLQ2QZjHTx2O2tbb65ukv
zStL9oYuaepyoaQdfmahpy0R1vTZ7TIe1tTPj16tQCe1n/6wUve0FOHL6/Wm
CLmJMU3dp7rDC3+4wE8Ug+HAYEdPxlBPmLqhqaGecnO+PQxGIQ/+bULe4O+U
wcirQUNzhtXQLv7x4pWPr4oZ6in9raNHX375ZfsZtOLOcrZUSUtxLKdeCtNa
/vLCHy5cvnrF+qIff/yxuvzwWuyK/oj9P7M3Ors+0H+PapNy/s134DHq76q6
vHrl6uydjlMfdJsl7cieJceva80RvV50/KD6u9MLGezZvTsjqxhYSxUU2xYs
KJ4/l5r+aRk4+867A6N6a9Xltytfivu6SU+jZz+Z3g63+8OPPnLgxymrw8yA
0n9W1UMT//toPUb1i5nzjeExrnqol/7YY/ygM+cbk/GhXynUU71+KVfP9uv9
+TPpsP9jqHqNyPn2ZGnoc1a8H91nz/nGZOsxRs9ZoR9mzjeGx7jqod7sWf+E
mvONye5j7Px3n89n3xWSNNTTqfXUqp5mc749PMbVjUJ4ibTOIUNDc4ykNQWC
waB6OC0tLdXV1emspJnO2FJWtmf37reOHlWvEePj4/q893rRycTThOqPxH3c
mbOJ6jUF3o8esO/Al8uJT3s/1Y9xaPhz67tqXwBUjcZRv8tb6zpZFT9+V20O
feXUi2oU9RyfnprQf4/q8tatW+rNgF6JtfrZ59YyV00vWKCvWCdqU5cbNm3W
Z1EbOPuOulzqONOkJU3fobpsa21d7+enZU0BGVhTQAbZawroZ8sT0TUF1PMn
awqsa4WwpsB/BL6yun2utyVbxK8pYK5H/+d76i2lfpjr/T1bUvoxWk87rCmw
frGmgAysKeA8AQ3t8+Fh9Q5ZTzlLemazFS0NUF5SusPtbmpq8nq9Y3fGzDUi
18PLX6E1tKQ3sApnzVB7rKSZ6eyF+GF93ON++oYnEArZFz/Vi4ROffNNb99n
+ux5NTU16qdi7UeA2uenLTvsJc3+pdUP+b37GV4S1GE0NBloaDLIbmiaXpdT
PZFWV1fneluyohB2EIzCaGisyymAeg+p3ljGTq0ptKGpB6UfIw1tvaOhyUBD
c946bWjqR+XDjz5qamrSZ5SKK2aJ55JK3SvUnZiHZ3q9vX2f2SeYraMXPhqa
pguYfgOz6bNTLo87SUOzxzQ1vLU1Q+3q9upPx92VMd/lZsNhPVGtpaWlpqZG
n/ds1fPT0h9Jjz5+6+hRK/qtRzQ0GWhoMhROQ1ODeWjrGg1NhkJoaPfu37PW
plnXb9iWYv57c3Sune6ENLT1i4YmAw3NeeuroU1MTHi93oMHDlirA6Q4DXvi
6aTso/rZ5/Rks/HxcWO+veT68a0eDS2O/tucnpoo6jluljRz7lliRquen5b2
gstb2zjq14eFLmVunrrz0bHb6s2Dd1/DDrc7I7PU0h+VFRUZ+57mAg1NBhqa
DDQ0AQphB8GgoUkhvqEp9+/ft34l19E/x6fPmmvHPLT1joYmAw3NeeuioY2N
jZ04cWLP7t2Pl5SokXrWWdKh/6A+SLPr/Hn1Cr6ui1kiGloifYY09e5lZDLg
unLEPA1aijlpekRLmpHeFER157q5qZ8ltR/qVfY1bC0vX/sKBctOTtPhd52i
oclAQ5OBhiZAIewgGDQ0KWhoAjAPTQwamgw0NOflc0NT+y9vHT2qT/C+1Fi2
nlVWVPykrq6lpUW9IUl6zn8ZaGgp6MljvRN3647+MmVDiy43cLLK5WtoG+9e
UWVV96+Tnbr+9eTX17qvefc11NXvLy8pzUZSGzj7jv5a6xENTQYamgw0NAEK
YQfBoKFJQUMTgHloYtDQZKChOS8PG9ro6KhOZ/pozdQjaTfbUlamz282Pj5+
e+y2fpK/fPVKrh9ZFtHQlmOe/lSNjsCgq6s5+VoDixYdeMHla1A3Xl2q0m+Z
9Cy13om7Hs9pvRBnRnqa+r3YW/xE55M7Zv75V8Z7F6anJtZXT6OhyUBDk4GG
JkAh7CAYNDQpaGgCMA9NDBqaDDQ05+VPQ1Pv5M10Vl29bDdL2tAeLynZs3t3
W2ur2jHX84703d4eu60fIA1tvVtbQ1vELGm+hpQlbf5UaV3N6sar/kJ6PQJr
ipp6OdYxbY0ZzTr92t7iJ9To+budxsE3jPcuGLfWwTGeNDQZaGgy0NAEKIQd
BIOGJgUNTQDmoYlBQ5OBhua8nDe0sbExnc7sZzlLf2wpK2tqavL7/epJIOnB
dzQ0MTLV0KylAdrGu82Slny5gcU9rau5d+Lu2qd7qXt4d2A0s0d36ntTl+bk
tAcqzZ62s9nsaT1D+fnOjYYmAw1NBhqaAIWwg2DQ0KSgoQnAPDQxaGgy0NCc
l6uGplfY3OF2WwdsWjPK0kln1c8+99bRo729vcuup0lDEyOD89As6oen5dZF
V3t9ypJWHbu8cmRkMrCW1SjUn1XvOrK33ICOaWoce7S084HKOZfb7Gmt7UbP
kF5eIVPft7WgoclAQ5OBhiZAIewgGDQ0KWhoAjAPTQwamgw0NOc53NDUX3HX
+fMHDxzQ6cxezOwnNEvazfTRmidOnFjRjCAamhjZaGjG/HIAjaN+l7d2mQlp
J6tcHndRz/GRycDqvlYkSv0YZzWj2een6clpfa5Kw1Vl9rTDxyL9w9NTEzlc
l5aGJgMNTQYamgCFsINg0NCkoKEJwDw0MWhoMtDQnOdYQ7t+/XpTU9OWsrKl
Jp7FrQtgP1qzrn6/eqJWPxJ61tmKdv9paGJkqaEZtiUAaobazZKWYk6a/lS0
pAVCodWVKPWWw4GGZmU0++S0Pldl2LXN7GnP/Mw4fMzo7FbvgjL7zVwWDU0G
GpoMNDQBCmEHwaChSUFDE4B5aGLQ0GSgoTkv2w1Nvedpa23Vi2zGrbOZdElN
+9qaP6mr83q9U0uc6CxNNDQxstfQjPmMpqh3BU/f8Lg87uVXHPC41S2DM8GV
/nyqr1VTU7O6LLa1vFz9Nq2upxU9tEGvDbq3+Ik+V+Wk63kj2tMmv1vn5JIE
NDQZaGgy0NAEKIQdBIOGJgUNTQDmoYlBQ5OBhua8LDW0SCRy8eLFgwcOpLOk
pn2oHfy6+v1er/frycz8kNPQxMhqQ5s3Fx1mSSvqOR4taSkyWrU5Lc1bWzPU
vtLpkV+MfLGlrGwVAW18fHw2HL53/576HXn1UGP6d6J+46zVB6yqpo/0DLh+
oGOaGuEHd5k9rbXduDW+9jUUkqKhyUBDk4GGJkAh7CAYNDQpaGgCMA9NDBqa
DDQ052W8oak3OW8dPVpZUWEPZcs2NHs6y+yZmmhoYjjS0Ezmmf+jRiYDZklL
NSFNH91Z7fLWNo76V/Sjq/YCVrRA54ZNmwcH+q2uZR3XrD6ofuNWPbHNimnH
Hi3t+bud0clp26M9bVuWliSgoclAQ5OBhiZAIewgGDQ0KWhoAjAPTQwamgw0
NOdlqqEtNfEsxTIB+uM73G6P5/S9+/ey9CpDQxPDsYZmY75N6J2467pyJOVy
A9Wx0V7fNt6d5vQt9Svz4bWr+gyBy2auyoqKwYH+xEanf2t0T9PvZ1491Li1
vHzVB3vuLX5CjYDrB9GYVhWdn6aTWnRJgtdPGp3mA1xL6KahyUBDk4GGJkAh
7CAYNDQpaGgCMA9NDBqaDDQ05629oekznql9fB3K4orZUqttqtu/dfTo6Njt
bL+40NDEyEVDU+Z0L/r4/pirqzmNOWkvuHwNbePdad67+vV59VBjioxWXlLa
1NS0bGRWG6nbnTU5rfXtN2tqatIJdNbBnvrG1iGfi9YgMEta7HjPNS5JQEOT
gYYmAw1NgELYQTBoaFLQ0ARgHpoYNDQZaGjOW0tD6+3tPXjgQOI6mylW29xS
VtbU1KS+qD5WLhuPKA4NTYwcNTTT3LyOwKBZ0lIs3GlNS+tqVjdO887Vbuxb
R4/ucLutozs3bNpcU1OjPtg7cXcV5yWzNli9kVNvctTv6SpOv2ZFPFtM09PS
ts8nte32JQnUG6p0fqlpaDLQ0GSgoQlQCDsIBg1NChqaAMxDE4OGJgMNzXmr
aGihUMjr9ar9ffvEs9RD3ezHe/9R/anp6elwdk5UvhQamhg5bGg25rQ0s6T5
GpafkBYtaR/fH1v2yEfdu2bD4d6+z9SvyZmOc4MD/dYZzzKy3erX9sOPPmpq
aqqsqFjLadP6XJWhRYd5zh/pGZ2lZl+SYKktp6HJQEOTgYYmQCHsIBg0NClo
aAIwD00MGpoMNDTnraihqRc+a72AdNKZGurGLS0t4+PjDjyWpGhoYuRHQ4sd
NanePrSNd7va612nXlx6Wlp17PLKkd6Ju+nUsL6+Pv2GZHBwKHvbr+689e03
d7jdK21ocTFtfgGCWEybP+ozdmn2tPklCfQyDXoDaGgy0NBkoKEJUAg7CAYN
TQoamgDMQxODhiYDDc15aTY0tUvY1NRkX0ZQH8KZYuLZT+rq/H5/zp9XaWhi
5ElD0/QksdlwuHHU7/LWpjpP2skqc5x60XXlyMhkIPXd9vX16cd4cyit40DX
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
d2g436i795hOy05MSOvo6MhtNMoOjQbs0OxFyR4cQ0Xp0LRof7gMX4m0+Fy4
rz5hUmfSXLVIHpoaEYe2diHalSDakmD2zrRN39YScWjkx4+lcIi0hUMT3/ya
xgFwVvbKjmaczg+DPtvlIbNDowGck8j0SBnEvgPZodFAx6FJ8GcIPOmCk2oh
00TrgQwd2kRMzTRVphn0zSwzkJ96N8k+Gf49RfNbPBYBaL78vU3PJ7WwQyse
cIzWGxgRJk2/cSfO7uzbBXfGx1ru0OQmTE5O6iekQWxoaPD7/dkunB0aDdih
2YhSPjiGit6h6SBe/6t+4dOa9qgtPtfFqTN5PerQltVoqqUl3lO4tdlfbJEt
CazexCwoBYdWCuPHUjhE2sKhhWLzk+V0/iLvv5kKdmgEgEPeN66tj6qNYkeG
h/7noX8jOZ+dHRoNMnFocWQt0+J7ehol07DYC87o17kbfjxlJB1T2A52aMUH
jNSWhEnzbE8zuxM9W9+uT6YmisShhTQJafotO+G/brc7q4E2OzQasEOzEaV8
cAzZ2aHFEW5J0LRHSDCNHFtIloeWIoHtWdmSAKeLim6hqk8Tsq64Ie/QSmT8
WAqHSLs4NNmpU37tKzuO4+mf1auWNezQCIB9LlDkLs2I70CSvyOwQ6NBDg5N
ggbs2ORdZfC22s3zShqfFvPfGJlWkB+78dxD/6dzUWVX86nEZs35P7XlsEMr
QnBWDpyKtPn7la6taWZ3qpcPffC2y9XZ3Xvs0/5Pi+QcZnJycvPWLfoJab/b
vPnmzZsZLpAdGg3YodmIUj44hqg4NO2aY389bUuCdHloiV0J4sRapMWnWkJt
cWisCFMQyTu0Ehk/lsIh0iYOTWQgn9/ToG0x88ZXwSLvHZAKdmh2RybMKzuO
B+bm8DtQFpeg9B3IDo0G+Tg0Cc4ECcu07htZFEyTEZFpOZ/fYn+Zn1S9Dp87
3fS2Je2nUraesTvs0IoWNGmwTzb7vIp7o17vzn3PCNW2s6asvam791iRDGHw
F0m3251JQlomC2SHRgN2aHZBHhz1k9CoHhxDVByalsSWBKGT/e6Xtw/9n43S
oSXkoenEusT8tCWlVvo0rC5u4fYitB0ajh/L7l9OfvxYCodImzg0kQvxjWvr
A1VPyIxHGIhZvVI5wg7N7mDVVizHJ3/Uw/ECse9Admg0KIhDk+Qu047Gy7Qc
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
0+A3Lu3rI9PS4HCDmgtvEZOkdv/J/fL2of+zMff8NPnAiE/DFLXhniNut/vU
6VM5HED5PbV1sEMzB+nQfD7fHYrIYi8f/+1vVq+LgchaYZfGxkSFJYr0f/Yp
buOXF4etXhejGBwcxG38x5f/sHpdjELWQ4MrVq+LUQz9I1wr7PPBz3N5/Ixg
VuXuvbsYMTXTjvujtdEiJdHir+C/5I0Qg7ffGfZhDY2ZvL8lvozUCoMPZp6L
Kloujo7gNsIXrNXrYhSyZCicDBjyBJo9DXY83P16AyMix/Lw8ynLox3YqLhq
xZWurW3+/jvqxyGHJxePmplpa21FM+Z47rkki9Ksod/v37x1SyqHBgupKC9v
amz89ttvg8FgbqtkBNpCKFNTU1avjlFo66FRPc+BPRBHryc/PGn1uhiF/6v/
i++j1+u1el2MQlsPLf+jbXHydeAbuY0//PCD1atjCJOTk1ovkdtCZiPg0efu
XXFGd0c9IMr4/vvvl27dXhwaEy0+IyXUlpTaHC5l4J9YQi10sh9Lgifujdr+
F9PT0/m+ZEVJKRwitf0v2KGZA/flpIH0S+Pj41avi1FwX04aUOnLqcfFixdx
G+ENzWc52PVpKQI234Qrg9OTay5OCZOGPTqPXom/8u41tXHnlfCN70ZugXhX
yLQ3vgrGtZTKFu7LSYOrV69KT2joE8ndeDFCb2BE6dul7HtGyLS/OKIBf2pv
ObQO7gZ3zvmpOxL6cuoAK+Z2u1dXVupotJrq6sHBweLpWVYKTcdC3JeTCtJL
eE/+1ep1MQruy0kD/b6cmSP3gSUNeHYnT8PgBE+e74kbZUuC++qxQedCppfP
aq+rXT7D/w09/Xv0adoWnzMzM3Ib79y5k+crVpyUwiGS+3KaDzs0GrBDowE7
NBoUyqGlAk+04MpAcP7BYVWmvXstas/CMk2KtYmwQ4u78f28ZBo7NBqY5tBS
0ebvVzzblb88F41D62L+lLf07fpkaiKHffXP2Tg0xO/3b2ho0ElIg6W1tLTk
M6oqIKUwQAixQ6MCOzQasEMzB3HIu+oXPq1pj+rTUIitDSW/XJfi+trYG9fN
/mILLDD03ilYODs0ArBDMx92aDRgh0YDdmg0MNqhIfh7JV4fnJ6Ml2no00So
Di3uxqPyxisiOW3w9rFJMaEg82dnh0YDyx1aSN2ThUlzbxTpZ0KXOeIdmojI
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
ZnZnuaO3tT8cymKr5DRPXab5H+hpaUcCWsdd6dNWVe1YTmXPdU6n8mkyRe21
iorm5maPxyOOSwX9FtOh5YqHDx+ePn1afIrEZ0l8OFXKmdjKfSlvM/l81tXW
ij76fD7modkJHRoGdGgY0KFhQIeGAR0aBnRoGNChYUCHBoDoVOzeg46uY+JN
9Hq90dlJL5GJSOX1dt2kLZiQ5q5w9LZm95JfNG0yGo3LtFP3dJl2NC7Tlpmf
lrSQmqpNsLGkZMf2/2hubhYvhbiaLqx3nA7NToLBoMfjaWxsLC8vVxmPS/4Q
lj/3vPjUiZO3yclJrodmP3RoGNChYUCHhgEdGgZ0aBjQoWFAh4YBHRoAMuNL
XK3LPqac2xiZiGy54tbLDaTPSRPhrhD3zK5JEw81a5qnz5jmKX3akVsqPy2L
8z3NWWpvbNsma31+f+NGnmcE0aFZyqNHj77++uuW/fuT6gIs2Zu5nGt3bP8P
t7stGAyaP1pcD81+6NAwoEPDgA4NAzo0DOjQMKBDw4AODQM6NABm8tB8Pm8q
hxYzmDYUlqO31TBpC5Ub8FRXXm+PTESy+IrJOp6GT9Ann1bdeKhnph25pccc
n7aqascS6hGkdGsyRU3+6HKuLS8vf+fthpb9+7/86qufQvez1busQIeWXcRr
KM78ZTFNccqRspKm+nhkHv/5atlL7x6cvNPlHxmaTiwDaIZ5aPZDh4YBHRoG
dGgY0KFhQIeGAR0aBnRoGNChAZBJHppB3KT1h0O6SdMT0hbKSfNUNwz4sm4A
zGk5A2PRWTJN+rSOu6oegbav01H11qqqHc+uzXRBqvlCztSTFkUOQ+ZENY/H
c7Hn4sjISHY7uyjo0JbJw4cPxenTgQMHdGlWXq4+MOaducU0M/nwbHa5xGOK
D8lPofviAyy+FGm+F8xDsx86NAzo0DCgQ8OADg0DOjQM6NAwoEPDgA4NgAXz
0FL+UX84pJ3bs3BCmmHSWoI9kYmIpb1IIdMMjSZ9mi7TjgbkfM8ny15Z6dq0
ev2GrKSoJW3limrSqrXs33/27NmkaXqWQoe2KMbGxsQZvsfjaW5u3rH9P8pK
S81v7jKTGEWIT0Jdbe2BAwfEudmiGsY8NPuhQ8OADg0DOjQM6NAwoEPDgA4N
Azo0DOjQAMg4D20GOa1S7FwYDmjdTdqhrWkrDhjpat76lmCP1X0RDYvLtONB
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
    "], {{0, 872}, {1644, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->432,
  ImageSizeRaw->{1644, 872},
  PlotRange->{{0, 1644}, {0, 872}}]], "Output",ExpressionUUID->"09da2530-196a-\
4813-a9da-fe78e76b8461"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 "\tLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"6", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"4", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "fb9aba56-bfc3-431c-860a-4d4e094eb0ad"],
 ". Use Newton\[CloseCurlyQuote]s method to find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "080aca59-e6ee-4557-ae1d-e06fc3804abc"],
 " given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "1.4"}], TraditionalForm]],ExpressionUUID->
  "cb31e808-89f2-4f19-9096-d1de5ea06154"],
 ". Use the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "3a64f032-a174-4e2a-b9a4-c5b9856c922b"],
 " (see figure) and an appropriate tangent line to illustrate how ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "b5f70396-a2e0-4bc8-9eb7-f4e0599e81b3"],
 " is obtained from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "f2962207-52d1-4d99-b417-0ca215e469d7"],
 "."
}], "Problem",ExpressionUUID->"71046931-e55a-423a-845d-74fdbbb06ce4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
H6YmHA7z7hcKhbybLEiCBYkOLIgKLIgELIiKmy1IQck2LBd+DrA8wnL58G7l
5jtzS5WImjGNRVkETX3b6T3ClI/MTkuKQ19pVPdNGZ4aLSmnUT7P6vRE0xOb
Z3xsxWsfsZcyGWMm+fbp3/UM3Ej0kWPfj69Wm7Wyw5d0/xZJYFbJjwY2NTWZ
WvvsBhYkNrAgKrAgErAgKp6wIPWAV052dtY3/4nLMCPJ3TiyL/HzVRwSFQsL
i1PuS1FKqrE2SdP3sv3caHofVh7JUk8NOr/3G/M1u7gakas/dSqDj/PjG2rM
HetMzdm2Nr4vqKOjw5JKaBewILGBBVGBBZGABVHxhgVJ0Y9fKZm9g8cHxfg7
uCwGTJMcSYNjvwXxNmLk9UqJzzNP59Dy7htK30vF00+wc258rvVs0ViQdp5S
aurr6/lkQf39/VZWRcuBBYkNLIgKLIgELIiKRyxI0kxHWXX0il6fQ2xrdXlW
sFe6dNIv0TFljVVcIfj+MW0ZqtuotqB0J5BLykjWfNV6tHScaq4FcR6Vmuef
e47vC4pEIpgXBFwLLIgKLIgELIiKRyxoei28sgRJngmsVZ3o2InHbomNDZ0f
c95SrCyxD/7VR+plcSmnOk9KUx/syVOPiKU3gTx+lDmpGuV17um8Vfh99Yqz
u+94rCEszT1QCnbv2qlRoBX5+Z5WIAkWJDqwICqwIBKwICoesaAYl39crL5j
asZfYmIwcLz06/O4pVLUMnKxyyo6OzvPj/xJyii8mRKf6qx0yOim5ZlzclR9
R/IvzlgQLRh5/pX8t1As6JlraU3Bmhx8+aHbEv9NU/PoI49oLCgQCFhT++wD
FiQ2sCAqsCASsCAqHrKgr35brb6Jcx0+Us/zD8+fzhSUgV3MZE00vbCwc7Kz
056TrCkTp38w+85c9gCdErcgdfKiDPqCYkef7QtKti98MpvSDOqlYUHFRUWa
eUHl5eUWVkFbgAWJDSyICiyIBCyIiocsKDrcofaT+KJs1Y01vmxcnh6TUVrC
P3Wqh2nMtSD2Ne05yZo4lX3h58dzZV+8KaVUDnm4kLOgZL+YUIRUW7LK5pnW
OR/JxILYERfk5GhOcnV1tZV10A5gQWIDC6ICCyIBC6LiHQuKqjPVZM/dP13O
mqi6HUvpO0Z0rOd4bMOvwxbw8i+OJdcV4/4gK838me0nUvbqMNRrxDLoC4oV
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
oPUlJZoLkH3HnePyGQILEhtYEBUHLSgcDvPbaeVkZ39y7ZrNkRjHOguampoK
BALirZqHBVGBBVExxYIKCgo0l962igoTg3QPsCCxgQVRcdCC6urq+Ju+y1se
6yxISrBKhZWuri5zD2QnsCAqsCAqmVtQJBLhe2IFGI/WBRYkNrAgKg5a0INr
1/J3/Pb2dpvDIGGpBTHKy8v5c7KhtNT0A9kGLIgKLIhK5hakO0HRtWs0MgQW
JDawICpOWdC5c+f4Zqe4qMjOGNLAagvq7+9fkJPDnxnv5i2BBVGBBVHJ3IJ+
8+67/EXHvmlqmG4BFiQ2sCAqTlnQkzt28F3Q7s/UarUFSXqbi8l+6NEkirAg
KrAgKplbkG76evZIYm6cLgEWJDawICqOWNDo6Og9Cxfy66Hcnx7HBgtiJ2fp
kiV8m+zRJIqwICqwICqZW1BNTY3mcmPPaJFIxNw4XQIsSGxgQVQcsaBQKJST
na3pC6qqqnL/ulQbLEiKnx++o6ygoMC1aZSSAAuiAguikrkFbauo0Fxx7HIz
N0j3AAsSG1gQFUcsiN84zCsroeyxIGY7qwsL+VPE7MiiI1oHLIgKLIhK5hbE
Jwvy9JKE5MCCxAYWRMV+C+rs7OTv74FAwJ6jZ4g9FsRoamriz9J9y5aFw2H3
95ipgQVRgQVRydyC+Mztu3ftNDdI9wALEhtYEBX7LaiyspK/v7t/XrSMbRaU
KImi53KYwIKowIKoZGhBE+Pj/AB0MBg0PU6XAAsSG5Es6IsrA2PWH8VmC2IN
Dp8vWp4X7YkuDtssiJ2N1tZW3oLYuRoeHrbuuKYDC6ICC6KSoQX19vbyFnTk
yK/YVWh6qG4AFiQ2mVpQdOyL7hNHX/3Z03t2ySX0xpsf9Q2ye5+5cbI3/PLL
cCLYj/r+7fvsSmywfsmUzRbU2NDANzge6ny2zYJk+OkKrOzfv8/q45oILIgK
LIhKhhbEHjf4q6yjo8P0OF0CLEhsMrGgodaXSr8+T1kmOT++p5X8z6zSg6eG
J010ocs/LuYXSWlK1qbGUbOOlxibLUj3tu6hBsdmC9LNLbkgJ4ephdWHNgtY
EBVYEJUMLai2tpa/yty8m2GGwILEJj0LYre2nucfZndn+QZd+NybfxiLsG9G
hztefui27Lyl057QOWxO5rrw++W336UcLlHZfm40GrU8UZ6dFtTf389/6tWF
hVYf10RstiBJ9QdSl6qqKhsObQqwICqwICoZWhCfp5Q9aEyyp15BgQWJTXoW
NNxQId+dWVl19ApzD7nEfzjy1hPfUHqHfnJ5IvPpK0N1G5PIj1xybtt38WaG
xzGEnRYUDAb5T+qtWYj2W1B3d7dud9DA1QEbjp45sCAqsCAqGVrQ41u3aq6v
4qIiT0xTTA9YkNikY0FXGhUFynr0dZ1BqHjXjSxCd9++7dREZiHe7P3hX9yZ
XIHYgVa89pHpk5F0sc2CWKuyurCQ7/7yyt1cxn4LkhJssVpZWWnP0TMEFkQF
FkQlQwviF2OWlZWZHqR7gAWJDd2CRn79N38piwcre8/zq7JiTwQfv1Iya0r7
M9r0/HrzU/KF9pPLE+yWykqEIzYYZ/1YmIxtFqSbJshzqckcsaDe3l7d7iBP
7HMEC6ICC6KSiQWxp7NFubneHXFOA1iQ2JAtqOdVeZYyK7esfOHj2DWhpx+f
tRbfNW1K2XeuS3vpVnRysPbe29kRszY12rAK3gi2WRBrWPhbeVNTk6UHNR1H
LIjxxPbt/NnzxNo6WBAVWBCVTCxoeHiYv7K8mKTdOLAgsaFa0Pm9s3N+sp5N
tFIpKkkj/7r8r5TuoOwX3k8vvJvvHYwdbt7qF666ZX9weywoEonct2yZpqlh
j2Ce2xjLKQvq6+vjBxOZTrPv2xZDesCCqMCCqGRiQbp91M3NzVbE6RJgQWJD
s6CvPlJP0dnY9mnil0Yv/7hY9qVYT843/ymthcojR9feKnc9HXjr9x/1Dd4Y
HbFt5CsR9lgQa1X4m/iTO3ZYd0SLcMqCGOx0efEcwoKowIKoZGJBx48d4y+r
CxcuWBGnS4AFiQ3Jgm6+d1CdtOcnl5PNex5uqFCmD2XPW/36p3R7iY++zb5J
XKhuvX/r9hePnB/5k1M6ZI8F6c7vPdvWZt0RLcJBC+rv71cSWHlodhAsiAos
iEomFqS7cJU9n1oRp0uABYkNyYKUOc+s2qde/NXzqvoy2X6OmNEwOnbisVuU
X1enzZFvbSVP/4K5EO09zcAGCwqHw/z8wxX5+ZFIxKIjWoeDFsR4as8ez80O
ggVRgQVRycSC2OWj6QtanpdnRZDuARYkNgQLio6devjPlZqf9c1fphjkmlkv
P/36l/+DFtmVRt1k0WodYv9TcbRLlarIDmywIN3t0b21DYSCsxaUqDvIzdkG
YEFUYEFUMrGgDaWlmmY5EAhYEaR7gAWJjXELUpZrTU+N/uYvk3buRKU/dX7n
NpUFVZ6iLfK60rjlv/1tyf2FvA9ojIi9c3obZzQ3N1fTWV04HdKDa9c+uWMH
tTDDuZgK3V0zjh871tNz2Xvl4gXFgrq6ulJ+dtPZsnkzfzLLy8vtj8QgnZ2d
SpPrdCzegLVd8hl789yFi11dvb29Fy5ccDooV6NckqyyUX93eV6e5oJiD4ZW
BOke1JdkWrca4GoIfUFzt7FIZUGS1oJS9h3NZbZ7Jzo2Pnip53joxZ2liXQo
6+UPKe89jbwUfXYhm7GSxMqMFHZQpQnSLUeO/Io/yor8/OS/hZKo1NXV8edz
QU5OfX2947GhmFzebnY+BrHL2818M8ieKZwPzJYCCxISggVxVkO1oPR6bOQB
Lzlf4o3RkcuHdyv7lKlLGlt17P3e99V9Si6xoMrKSt2+C8dbAO8W3b419gDr
eGAoKN4quvuosjbtZEuL47HZUGBBQuJ+C1IRkxxmROODl+StytRDY2ksxq+v
ry+nsyI/Xz5oQUHBhtJSUvnb//7oy784drGr69y5c13nuzo7Oz/89w81JRAI
8Lfspqamrq4u/sXuL0pnMisdHR32B8DOm+7a3gU5OadPn3L8/PCFnSWlyXU8
GE+Us21t8hlj/+N4MJ4oaV+SoVCIv5Tq6uoc/0SWFvUlmelNDLgPT1nQLMyF
Lh/ePUeE0luMH08IT/qawezoqNyjleQVQ0NDfCPz4Nq1aXwulzA5Oak0uTdu
3HAqjG0VFfwz7I+eecapeJKA2dFUMDuaStqzo5nw8NeRm9camAJmR4uNdy0o
JkI/LlY7A3kxflpYukZMt5Hx1ibyGtQWZP8aMYVLly7xJ3ZRbq6DISUCFkQF
FkQlbQuqrq7m+1Tt2cbaQWBBYmOfBenuPp8hc3NZkxfjp4WlFrShVGcGuMuz
/CXHJRbEeHzrVk8YJiyICiyIStoWxF9ED6xZY1GQ7gEWJDYkC5qT/8fiNWIG
UXacF8CCdIfDAoEAdda3q3CPBXV1dfEWtDwvz21bs8GCqMCCqKRtQQ+uXau5
gsrKyiwK0j3AgsSGkjt6RJ3MOXXfjsaC0lrMnoqoOkO11y1IdzgsFArBgszi
0Uce0T3DzkalARZEBRZEJW0L4nPaV1VVWRSke4AFiY1xC5qUpn67PUvprMgq
PfixlOzuHB3uUPcdrTp6xcy4FVQZqr1uQbrDYe7fAz05rrKg9vZ2zell9bmg
oMBV3UGwICqwICrpWZBuZ7XbHiKsABYkNoYtKBrzmn/+B6Xy333HY6cmpMRb
V0S/+vCQ+mJJI5+PAeZkqPa0BQ0PDycYDvP2zENXWRBDkztIzgFVX1/vdFyz
wIKowIKopGdBnZ2d/GPayZYW6+J0CbAgsSHtpipdaVTfPvbGxCbhPXqobqOy
3cbdt287Z81GoNHhjtKvz5ND2vy+h9eINTY0aCyI/dOFc3epuM2CWKPNt+TF
RUUsTqdDmwYWRAUWRCU9C2pqauKf1Lq7u62L0yXAgsSGYkFR6WZvKOsOJYvy
qqNXEq2RZN//YE+e8sqsylPWrKacnReUfee6I5/bMX/GIgtS3lak4TDJfRYU
jUaZ8/CNeXNzs9OhTQMLogILopKeBbGHMr6NCofD1sXpEmBBYkPrC5Kkj18p
MeQ2N3uf/7M7lVd++8P/NDFmNT3PPyz3OGVtaqTt1pouVlgQa0nuWbhQ07x4
OlmigtssSIo/0vKN+fqSEpfMQocFUYEFUUnPgp7csUPz+LA8L8+6IN0DLEhs
qBYkfdZafNf0bIq7b992aiLBy5QumvnzF/zXZz+OPYJrfemL7hNHjvzq7dO/
Sz7LOhmqDV5/cjlRKCZjhQUdP3aMvy+zJy+vTwqSXGlBkUikoKCAP+EdHR1O
hxYDFkQFFkQlPQtiTwr8s4N1QboHWJDYkC0o3h2kGM7X3ujV6Q6KjqnX1G8/
N8rfzYcbKpTHipzb9mlmDTFBenH7Q7fev/XpPbsOdA7r9zhFx87vnd5NLOtZ
++5fVliQ7v4OYgy4u9CCGIcPH+ZP+JbNm52OKwYsiAosiEp6FrQ8L09zyTy5
Y4d1QboHWJDYpGFB0cnBf13+V9PTnu94jJ+Nc/O9g8q8aOYnOg5zs1ed81k7
sTk6durhP2ffvGfhwuk3KT3INGnO+0THfve//u9pBXr09fR7k+iYbkET4+N8
Fo7VhYWmvLnjuNOC2Dm/b9kyXoR6e3udDg0WRAYWRCUNCwqHw7r91ZbG6RJg
QWKThgXFZpgOd8gawyzl1vu3nhqeXV/zRfcJZcgsa1Ojfr5oVZKf+fwi97gF
yf6jzCzKnrf6e80X/jAWYT9lh9jy8PQt7O/+5QM7FoapMN2C2M2Ob16qq6tN
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
N778wvvpHe7mewdjh5u3+oWrePaU/vDaJuMO8M477/AW9NSePTbFag2kM2Ac
v1WzwcFBTUcQM8CamppEr1efdvaLG9s+FWNY0CxEsiBNmujEjbyPgAVpGB0d
5W8uzz/3nPICkS3oq4/UcydYY5j4pbPjy/HlPP+U1qLmWBYvuevpwFu//6hv
8MboiJ+74kkOoLubxqLcXE/vpmGNBfmump0+fUoz34mV5ubmhL8wM9Nv+szj
zjgXcSzoq4++c9td6nlB5q/E9CCwIA0dHR28BakbEIEtiD0yq7OpJM+gPtxQ
MXs1zVv9+qf020p89E19SbJ/3nr/1u0vHjk/8iex71O6UB1AvN00LLEg/1Uz
9tTGN2KDg4MJlnNGlZujfJYwQVqDIBYUHftgT55mbSCSBUmwII66ujq+AVGv
QRbYgpQ5z+zTpb46el5VnyLy+HJ07MRjt2geV5Xee/a15OlfsJtUBp/Ge1Ad
QHc3DVY/7YjVGsy3IF9WM35m44r8/GQZLaJjpx7+8/SvZdERw4LkedGsYT96
9DV5Vqd8Rez1zX5hiYAFaaisrMzmtieIRGaTaAhrQXNbQnYPSjHIpelFpz4/
XmnUzeKrvk/Fspse7VKlKhKcNBzgwbVr+RPInvotj9UazLcg/1UzZjvL8/I0
nzfFTnMzm0kZ6QT2IQJYUHS4Q26uY1Pf52aNkHcQ8zOwIA3rS0o0DUggEFA/
RolqQco6mump0SnuQVHpT51KL3rs9ZWnaKtvrjRu+W9/W3J/Id+boblVsXf2
yaNpGg4QCoX488a+aXms1mCFBfmtmvX39/PWFwwGk/2O6olmepNNoML7FjQi
94hmv/A+U/1JaUrpII3N6tzzlnoy/OXDu9lDga+mx8OCNCxdskTTQj65Y4f6
BaJakGZ/gdT3II0Fpew7msvsc3d0bHzwUs/x0Is7dfIhz3Q0fZjmh/IUaTjA
4OAg39fBvN17iYPimG5BPqxmTU1N/Ec729aW+DeiE6d/oLzya2/0+iSZgHG8
bkE9zz8sr2GR/ZZdFMqszvkzCcPlK+WrDw/xXiQ8sCA17J6i+2Tth74g3mqo
FpTePUseiZDzxtwYHWFPIpo9H5Ve+sy36nA56TmAZhKI3LL19PRYG6s1WLRS
XvJTNdu/fx//ua5fv57wF1RD4dhBQxdvWdDQ5Q/ePv27noEb8j+V6UBzNom7
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
bleQ0tzcXNhbgNIUqgqyvX1Y/jMFpVFBIlSQ2UJbQR0dHZazIyrKy9XbYSrI
WVSQlAcVdHZkRH8lfXTvXpc257ZQVVB/f3+RJwWlqCAhKshsoa0gNeZbKqi+
ri73fIlpVJAIFSTlQQUtLy/vqK21vJKqp0NAz5EOVQUdPnRQryDpD44KEqGC
zBbaCvrU/fcX9l6YChKhgqQ8qCClq6tLv1JM/WX+c86UjlBVUE1NjeWnlv/t
wzKoIBEqyGzhrKBEIqG/n8rzVgJUkAgVJOVNBamt6OdI37d9+9LSknsbdUl4
KigWi+kDV2trq3Q9VJAIFWS2cFbQ9PS0Ppj09PTk87VUkAgVJOVNBaVWz5HW
DwcF8Rzp8FSQ7Z3gTgwMSNdDBYlQQWYLZwXZ3kd1bGwsn6+lgkSoICnPKkit
X39JVb/erm7UDeGpINuL++bm5qTroYJEqCCzhbOCbCeOy3MwoYJEqCApzyrI
9hzpAk619V1IKkj9vLZWVVl+WA/s3FnAqqggESrIbOGsoMLuo5pGBYlQQVKe
VVAqyznSgfvFDkkFTU1N6T+sPM9mtKCCRKggs4WzgnY3NFgGk8/s2pXn11JB
IlSQlJcVNDc3p58jva26OljzSIekgmyPYA8NDRWwKipIhAoyWzgrSD+wnP8d
makgESpIyssKSmU51aSAE259FJIKeqix0fJjUgUbj8cLWBUVJEIFmS2EFbSw
sKAP+11dXXl+ORUkQgVJeVxBo6Oj+tNBveB6sGmnhKGCri0u6kftdjc0FLY2
KkiECjJbCCtoYmKimDe/VJAIFSTlcQUlk8n6ujr9hJNYLObB1h0RhgqyvaCv
4FkuqSARKshsIawg2xvx5D9+UkEiVJCUxxWUWj3hRK+g9vaj3my9eGGooI6O
Dn3UGh8fL2xtVJAIFWS2EFaQqhd9PLm2uJjnl1NBIlSQlPcVpH4ud2/YYHlG
bNm8Of8nhb/CUEH68Tr1A1JPrnxufaijgkSoILOFsIL2t7RYBvyampr8DyxT
QSJUkJT3FZSymztCLdHvvq5+fJ7tQ8GMryD1K6G/cWt58vOJa78vbIVUkAgV
ZLYQVlAkEinmXFAqSIQKkvKlgiYnJ/XX2cJm5POe8RXU19ur/3RefmmgsANB
KSpIiAoyW9gqaGlpST/439bWlv8aqCARKkjKlwpK2b07KMv7tjL+Mr6C9MPX
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
faV+bfXZXoyv3mdtrKy0jDCtra0Fb5oKEqGCpAJRQbYv3Furqhy/10M+gl5B
7e1H9Qezp6fHvS1SQSJUUEA4PLmozeXnRVaQ7d3ni3TrXNa2F+OrX2B9hIlG
owVvkwoSoYKkAlFBykONNlcrFPPMKligK0g9QbZVV1sexvUVFa5+vEgFiVBB
uOEPE7fM/+PyNWJ5ytxxPlsF2b5pPTU4WPAWqSARKkgqKBVkOwGFekG/trjo
8Z4EuoLOjozoD+Nj+/a5ulEqSIQKwk2X107mfPtjO5YKynkxe6GSa2eotq2g
/v5+/VypqampgjdJBYlQQVJBqSBld0OD/uQ6duyYx7sR6Ap64sAB/TE8efKk
qxulgkSoIKQtpZb/5+PrMk/YdY0vvJfzY7jk/NjaY0f3vfauK7u1ZoZq2wrq
6urS32oVc/YCFSRCBUkFqIKGhoZK4XBQcCtIDUT6WYv3bNrk9gNIBYlQQViV
XOmav/svmafqJz762dPXUtlvXZH8l58fW/vUzjGfT1F7teaIk20FHT500PJW
a2tVVTGbpIJEqCCpAFWQekbrF2CWrd6exsvdCG4F9ff364+eGrLc3i4VJEIF
4QPv9mWeqiotnlkJm6w38Jrr/lzmdhufuHP/eIGTFN5Gcn6s8SN3pXdp709t
PqPTD9qrvymmx6ggESpIKkAVpJwaHPT9cFBwK8j2diRnR0bc3i4VJEIF4aZk
6vp0dN1HM3fFuu+1Wy+lX0P9/c+OVGX+5brW09n+ZbG7dPO8oPKP7Xr1fZu2
0a+/eOLAgWI2SQWJUEFSwaog28NB6inv5cViAa0g9YO2DcjlZTeGyltQQSJU
ENZ675sNebXN9enn/9XHMv/yr37+/1zan3PPP5g+4rTukT79bq3qDak+zjz/
3HPFbJEKEqGCpAJXQacGB/Xze708HBTQClKhqI9OnZ2dHmyaChKhgnCLfxqq
//iNG6l/4s79p69l+WeZQzRlZev/9dfeWxksrb30u6k3Xn31+z888+PcZ1nn
suYGr199x2ZXpqen9XGmr7e3wM2tooJEqCCpYFVQanVuMX8PBwW0gurr6vTR
KRaLuXD+pBUVJEIFweK9bzZkBrp/991pm8NByatrr6l/fHxBT6D53pbM+8eK
Dx21nDWkAunFx//sjk/ue/LIob+emLc/4pS8+otnbtxNbN3Xxmx31fakhfHx
8UK/9RVUkAgVJBW4CkpleaJ5NpV0ECtobGxMP4D2mV27vNk6FSRCBcEiuXTp
e1s/fOO0549+Vj8b5/pPXsicF636xKZhrk+vnfPZemJz8urpB/9Y/eXdGzbc
WEnjCyqTbllP8uqPv/ynNxLo4W9nO5p07NgxfXBWrzLFfPtUkAgVJBXECkrZ
3a2vbPXOYh4c2QhiBenXrqrFvZvIW1BBIlQQNMnk/Fg6Y9QT+Y5P7js9v5T5
b7+beiPzkdm6R/rsg2PNJD9l+kXuqxWUHiIyZxaV37XjqZPnf3M1of6r2sSj
D96b/sI//87PckzeqN+gZ2NlZZHDMhUkQgVJBbSChoeH9Qq6Z9OmhQXn75xj
EbgKsp0myO27ZqxFBYlQQdCtfMJ1ffr4PXeWV20pW70HfcOTL7366veH/3Jd
5kld+9zr2Y+5XP7e1g9njhep5ZlbzupJXjvz3z7on9VFH2Dv+IsvDsZuM8Dq
d76ur6sr8nungkSoIKmAVlBqdVYK/Xn6pWefdXu7gaugnp4efUzb39Li2Q5Q
QSJUEGypEFpKLY9+58svHmxMH7S5cbLQXTtUEak+yTGVUGr1kFHbfevTX/LU
yfP65V0rpwbdXPPaEUOt//EXX1Xrz+d6Uv38w0f37i3im15BBYlQQVLBraDR
0VH9xf3uDRt+ffGiq9sNXAXZ3nnkR2+95dkOUEEiVBByUy2UuPb7+bmLavR+
//KC3jNZrFw1pr7waiple/LzjYhKXr2ycFmNopdWqf+d/ve5EytNZZIagS1D
TXv7UcH3ZocKEqGCpIJbQaks0wB+4cgRVzcarApSO6kf395RW+vlPlBBIlQQ
Asp2UrJXXnmlyNVSQSJUkFSgK2hyclJ/0qlXfFcvAA9WBbW1tekVFI1GPTiN
PIMKEqGCEFC216KeOXO6yNVSQSJUkFSgK0hpbm7WQ6j4T6JzCFAF2Z4XXVFe
Pjc35+VuUEEiVBACqr+/X6+gt99+u8jVUkEiVJBU0CsoFoupl3U9hNS7Epe2
GKAK6u7u1gcl1Y0e7wYVJEIFIaC6urr0obj4Wf2pIBEqSCroFaS0trbqT71I
JOLShz4BqqAHdu7UHxkPbp9qQQWJUEEIqCcOHLC87dpaVVX8aqkgESpIyoAK
Ut+C/rmPWk4MDLixuaBUkO1n9PV1deo54vGeUEEiVBACSr8cVf1N8aulgkSo
ICkDKkhRzw69gmpqaty4xWpQKsj2jKljx455vydUkAgVhIC6b/t2SwU9ceBA
8aulgkSoICkzKigej2+tqtJf9Lu6uhzfViAqaPbCrH661MbKSvVAeXl1WBoV
JEIFIYjUW059BHakW6ggESpIyowKSmU5E1i97hd5Iz9dICroS88+q49IbW1t
vuwMFSRCBSGIYrGYPub09fYWv2YqSIQKkjKmghKJRH1dnSWE1P915JDsWqVf
QepN2ZbNm/URaXp62pf9oYJEqCCzzc/PT05OTk1NFX8JeUmxvbejI9fqUkEi
VJCUMRWknB0Z0Q8Hqb+ZmJhwcCulX0Hd3d36cPRQY6Nf+0MFiVBBZvs/s/83
/fN960dv+b0vTrIddmYvzBa/ZipIhAqSMqmCUnZ3NE5fNZ/PfQDzVOIVpJ4C
n7r/fv1BGBoa8muXqCARKshsplaQ/in8+oqKRCJR/JqpIBEqSMqwCorFYuqp
pzdAT0+PU5so8Qo6MTBge4G89ydFZ1BBIlSQ2UytIP2iVKfuV0gFiVBBUoZV
kNLR0aFX0NaqqvcvLziy/hKvoEgkYnuOIhUUFFSQ2UytIH3keXjPHkfWTAWJ
UEFS5lVQPB7fVl2tl4BT95ov5Qr60Vtv6d+4ejQSiQQVFBRUkNlMrSD9iozW
1lZH1kwFiVBBUuZVkNLX26vHgFrGx8eLX3kpV1BTU5P+XbsxaZIIFSRCBZnN
yAq6cuWKeyMPFSRCBUkZWUHJZHJ3Q4P+rKyvqyv+bL2SraCJiQn9W75n0yY1
QPm7Y1SQCBVkNiMraGpqSr8416l7GFFBIlSQlJEVpKhEsb3XfPFvT0q2gmwP
BHV2dvq9X1SQDBVkNiMr6NTgoH5RhlNTlFBBIlSQlKkVlMpymvTGyspYLFbM
akuzgmwPBKlvdn5+3u9do4JkqCCzGVlB0WhUr6C5uTlHVk4FiVBBUgZXUDwe
r6mp0dtgd0NDMacKl2YF2R4IUh3o936toIJEqCCzGVlB7e1H9bdgTl2RQQWJ
UEFSBldQavU4rf5ptfqzu7u74HWWYAXZHgi6e8MGx++hVhgqSIQKMpuRFfTo
3r36SZhOrZwKEqGCpMyuoNTqXF62d1mdmZkpbIUlWEEPNTbq3+MzTz3t937d
QAWJUEFmM7KC9Hs4qnRxauVUkAgVJGV8BalvUJ/IQj1hVTkUdluNUqug4eFh
9e1YhiCVeSVyIChFBQlRQWYzsoLUgOPeuzAqSIQKkjK+gpSenh79XvNqOXbs
WAFrK6kKUiH3wM6dpXlpWAYVJEIFmc28Cpqfn9eHoGg06tT6qSARKkgqDBWU
TCZtTx6+e8OG6elp6dpKqoL6env1z8K2bN7s+xxBa1FBIlSQ2cyroMnJSX10
PXnypFPrp4JEqCCpMFSQMnth9p5Nm/SnaiQSuba4KFpV6VSQ2nPbi+B8nyza
ggoSoYLMZl4FqeDRRyGVRk6tnwoSoYKkQlJBqeyfi0kvJy+dClJjgn4gaFt1
tbTr3EYFiVBBZjOvgqLRqF5BDs5URgWJUEFS4amglN3lnOlleHg4/5WUSAXN
zMxsrKzUK6ivt9fHvbJFBYlQQWYzr4Keeepp/eoMB9dPBYlQQVKhqiD1zW6t
qtIrSP1l/ldUlUgFPbZvn35pWCQSKezCN1dRQSJUkNnMqyD17tIyEDk4WVCK
ChKigqRCVUEpu3kU08vuhoY8b7RaChWkfli238XY2Jhfu5QDFSRCBZnNvArS
JwtSXeTg+qkgESpIKmwVpLS1tdkmRJ4nCPleQdnuDLK/pcWX/bktKkiECjKb
eRXk6mRBKSpIiAqSCmEFXVtctJ1jRy0nBgZu++W+V1B7+1Hb2bBLZ5pECypI
hAoym2EV5PZkQSkqSIgKkgphBSmxWEx//5Juidu2jb8VNDExoSeQWgqbAdIb
VJAIFWQ2wyrI7cmCUlSQEBUkFc4KUvr7+21zoqamZm5uLscX+lhB1xYX6+vq
9H2ORCLqN9/jnckfFSRCBZnNsApye7KgFBUkRAVJhbaCUllOEFJptLuhIceU
Oz5WULYdnpqa8nhPRKggESrIbIZVkO1kQQsLC8lk0qlNUEEiVJBUmCsokUio
4NGjQi3Nzc3ZLjn3q4LOnDldzEndPqKCRKggsxlWQe3tR/XzCpzdBBUkQgVJ
hbmCUqvf/n3bt9vWRbbLHHypoGwzHT2wc2fi2u89243CUEEiVJDZDKsgfSpa
ZycLSlFBQlSQVMgrKLV6dp/tmdJlWW7I5X0F2R6zUsv6iooS/ywsjQoSoYLM
ZlgFRSIRy7ikosXZTVBBIlSQFBWknBgYsK2gMrtLPr2voGwTHJXaXVOzoYJE
qCCzmVRByWRSv0u1Gq+c3QoVJEIFSVFBaap2bC8ZU39puQjd4wrq6emxTaCH
GhtL8GYZtqggESrIbCZVUDwe14dNNZY6eGp0igoSooKkqKA09bTNdsjFckTI
ywoaHh6uKC/X92dbdXXuy/lLChUkQgWZzZgKUmPm1NSUPjr19/c7uyEqSIQK
kqKCMpaXl/e3tGQLocwT0LMKynbCkuqi0rxfWDZUkAgVZDZjKii1eltGy7Eg
9X8nJiac3QoVJEIFSVFBayUSiaampmwhdPjQQfUPvKmgX/3qV7YXhdmeqlTi
qCARKshsJlXQ8ePH9QHK8Vv5UEEiVJAUFWRxbXFRhZDtOULps3HU2OV2BU1O
TmZLoNbWVpc26h4qSIQKMptJFdTR0WEZoNZXVDh+viIVJEIFSVFBOhVCqnay
HRHaVl0djUbdq6Dx8fEtmzfbblrlWSKRcGOjrqKCRKggs5lUQftbWixvGHfU
1jq+FSpIhAqSooJsqRDSZwPLfPCt3u8cPnTQjbl6+np71cptt/vAzp3xeNzx
LXqAChKhgsxmUgXpkwU9vGeP41uhgkSoICkqKJtEIvHEgQPZjgilbzc2MzPj
4Ob0w8uZpb6uLkAXhVlQQSJUkNlMqiD9g/svHDni+FaoIBEqSIoKyiGZTHZ2
dmarILVsrKzs6urKcevVPE1NTenvqtYmkOMnHHqJChKhgsxmTAWpcU8frNyY
ypUKEqGCpKig28rxKVX6M/Gampqenp7CzthZWFhQoVVRXp7OKvMSKEUFCVFB
ZjOmgmKxmD5eqdHS8Q1RQSJUkBQVlI+JiQmVOjk+HVN/3rd9u3oflH+xqH+p
/n22E6HTy+6GBpVJrn5rHqCCRKggsxlTQWdHRvQha3R01PENUUEiVJAUFZSn
9y8vZDtfWk+XaDSqwkn/pCyZTKo3UD09PWpVtpNCr132t7SU/v3i80EFiVBB
ZjOmgvp6e/XD1zMzM87ePiNFBQlRQVJUUP7Us7u7uzvbDejXHhfK/O+amhoV
RQ81Nqo/6+vqch/5ySzrKypW78UTjNuE3RYVJEIFmc2YCnr+uef0sav4kyR1
VJAIFSRFBUmdGhyMRCLZplUsftlRWzs5Oen3d+kkKkiECjKbMRV0+NBBy9i1
rbrajQ1RQSJUkBQVJJW+g0ZnZ2eOM4UKW9ZXVHR0dAR0UqAcqCARKshsxlSQ
PrXs7oYGxz8OS1FBQlSQFBUkla6gU4ODk5OTfb29n7r/fkcSqKmpaXp62u9v
zhVUkAgVZDZjKmhHba1lENvf0uLGhqggESpIigqSstxNdXl5WRWRep4W9hmZ
+qrm5mbDPgKzoIJEqCCzmVFBatzT5w/p6OhwY1tUkAgVJEUFSWW7p7x6JLu7
u5uamnKfPr326PErr7wye2HWr2/EM1SQCBVkNjMqSA13+pimBkA+EfMdFSRF
BUllq6CMRCKR/rCss7PziQMH1FP4ocZGVUf7W1ra2tqi0ejo6Gg8HndjuChN
VJAIFWQ2MypoYmJCr6BTg4NubIsKEqGCpKggqdtWUD7Ck0ApKkiICjKbGRV0
YmBAryA3bjCdooKEqCApKkjKkQoKFSpIhAoymxkVFI1G9TMhXZrongoSoYKk
qCApKkiKChKhgsxmRgW1tx+1JNDGykqXtkUFiVBBUlSQFBUkRQWJUEFmM6OC
Htu3z1JB9XV1Lm2LChKhgqSoICkqSIoKEqGCzGZGBUUiEX3GM5e2RQWJUEFS
VJAUFSRFBYlQQWYzo4K2VlVZKqi1tdWlbVFBIlSQFBUkRQVJUUEiVJDZDKig
a4uL+gViXV1dLm2OChKhgqSoICkqSIoKEqGCzGZABcViMb2C+np7XdocFSRC
BUlRQVJUkBQVJEIFmc2ACvrRW2/pFTQ6OurS5qggESpIigqSooKkqCARKshs
BlRQX2+vXkGxWMylzVFBIlSQFBUkRQVJUUEiVJDZDKigrq4uvYKuLS66tDkq
SIQKkqKCpKggKSpIhAoymwEV9IUjRywJtLWqyr3NUUEiVJAUFSRFBUlRQSJU
kNkMqKCmpiZLBUUiEfc2RwWJUEFSVJAUFSRFBYlQQWYzoILq6+osFfTYvn3u
bY4KEqGCpKggKSpIigoSoYLMZkAFbaystFRQe/tR9zZHBYlQQVJUkBQVJEUF
iVBBZgt6BS0sLOinRkejUfe2SAWJUEFSVJAUFSRFBYlQQWYLegWdP39er6AT
AwPubZEKEqGCpKggKSpIigoSoYLMFvQKGh4e1itofHzcvS1SQSJUkBQVJEUF
SVFBIlSQ2YJeQT09PXoFzV6YdW+LVJAIFSRFBUlRQVJUkAgVZLagV5BKEb2C
EomEe1ukgkSoICkqSIoKkqKCRKggswW9gg4fOlheVrY2gbZVV7u6RSpIhAqS
ooKkqCApKkiECjJb0CvoocZGy4Gg3Q0NyWTSvS1SQSJUkBQVJEUFSVFBIlSQ
2YJeQfV1dZZjQc3Nza5ukQoSoYKkqCApKkiKChKhgswW6ApKJpfXV1RYjgV1
dHS4ulEqSIQKkqKCpKggKSpIhAoyW6Ar6P3LXk+ZmKKChKggKSpIigqSooJE
qCCzBbqCpqamLAlUXlZ28uRJVzdKBYlQQVJUkBQVJEUFiVBBZgt0BZ05c1o/
FjQxMeHqRqkgESpIigqSooKkqCARKshsga6g7u5uvYJ+ffGiqxulgkSoICkq
SIoKkqKCRKggswW6gvQpE8vLylydMjFFBQlRQVJUkBQVJEUFiVBBZgt0BT1x
4IDlMvmamhq3N0oFiVBBUlSQFBUkRQWJUEFmC3QFeT9lYooKEqKCpKggKSpI
igoSoYLMFugK8n7KxBQVJEQFSVFBUlSQFBUkQgWZLdAVdPeGDR5PmZiigoSo
ICkqSIoKkqKCRKggswW3ghYWfJgyMUUFCVFBUlSQFBUkRQWJUEFmC24FnT9/
Xq+gN354MplcdnW7VJAIFSRFBUlRQVJUkAgVZLbgVtDw8LB+mfzY2Jjb26WC
RKggKSpIigqSooJEqCCzBbeCenp69GNBsxdm3d4uFSRCBUlRQVJUkBQVJEIF
mS24FfT8c8/pFeT2lIkpKkiICpKigqSoICkqSIQKMltwK+jwoYOWy+S3VVe7
PVlQigoSooKkqCApKkiKChKhgswW3ApqamqyHAiKRCIebJcKEqGCpKggKSpI
igoSoYLMFtwK0qdMfGzfPg+2SwWJUEFSVJAUFSRFBYlQQWYLbgVt2bzZcizo
maee9mC7VJAIFSRFBUlRQVJUkAgVZLaAVlA8HredMpHzgkoNFSRFBUlRQVJU
kAgVZLaAVlAsFtMnC+rr7fVg01SQCBUkRQVJUUFSVJAIFWS2gFbQ6OiofixI
/aUHm6aCRKggKSpIigqSooJEqCCzBbSC+vv79QqKxWIebJoKEqGCpKggKSpI
igoSoYLMFtAKikajlgvE1BKPxz3YNBUkQgVJUUFSVJAUFSRCBZktiBWUTCbb
2tosCbRl82Zvtk4FiVBBUlSQFBUkRQWJUEFmC2IFKc3NzZZjQfV1dd5smgoS
oYKkqCApKkiKChKhgswW0AqKRCKWY0FNTU3ebJoKEqGCpKggKSpIigoSoYLM
FtAK2lZdbamgw4cOerNpKkiECpKigqSoICkqSIQKMlsQKyiRSOgXiHnWJFSQ
CBUkRQVJUUFSVJAIFWS2IFbQry9e1Cuop6fHg4mjU1SQEBUkRQVJUUFSVJAI
FWS2IFbQ5OSkXkGnBge92ToVJEIFSVFBUlSQFBUkQgWZLYgVpIJHnyxIpZE3
W6eCRKggKSpIigqSooJEqCCzBbGCuru79WNB6rXDm61TQSJUkBQVJEUFSVFB
IlSQ2YJYQSo/LAlUUV6uXm292ToVJEIFSVFBUlSQFBUkQgWZLYgVdPjQQUsF
3bd9u2dbp4JEqCApKkiKCpKigkSoILMFsYKamposFfSZXbs82zoVJEIFSVFB
UlSQFBUkQgWZLVNBZ0dGFgKivq7Ocnb0o3v3erZ11WDprXd0dHi20eCan5/P
VJD6ZfN7dwIgFoulH66hoSG/9yUYxsfH04/YxMSE3/sSDKcGB9OP2MzMjN/7
EgDqUaKCDJapoAAtd2/YYDkW9Mgjj3i29Ugkkq6g5uZm3x8KFhYWFhZvFirI
SPF4fPbC7NmREd9/wfJcTgwM6JfJP3HggGc7QAWxsLCwhG05d+6ceq30+xUb
bhkbG/P9dyzPpbu7W6+g9vajnu0AFcTCwsIStsWzyVjgi2RyORkQo6Oj+mRB
Z0dGPNuBtWdHe7ZRAIC//H6hBlbMzc2dGBiIRqMdHR37W1oeamzcUVsbi8U8
2wGuEQMAAOFEBQEAgHCiggAAQDhRQQAAIJyoIAAAEE5UEAAACCcqCAAAhBMV
BAAAwokKAgAA4UQFAQCAcKKCAABAOFFBAAAgnKggAAAQTlQQAAAIJyoIAACE
ExUEAADCiQoCAADhRAUBAIBwooIAAEA4UUEAACCcqCAAABBOVBAAAAgnKggA
AIQTFQQAAMKJCgIAAOFEBQEAgHCiggAAQDhRQQAAIJyoIAAAEE5UEAAACCcq
CAAAhBMVBAAAwokKAgAA4UQFAQCAcKKCAABAOFFBAAAgnKggAAAQTlQQAAAI
JyoIAACEExUEAADCiQoCAADhRAUBAIBwooIAAEA4UUEAACCcqCAAABBOVBAA
AAgnKggAAIQTFQQAAMKJCgIAAOFEBQEAgHCiggAAQDhRQQAAIJyoIAAAEE5U
EAAACCcqCAAAhBMVBAAAwokKAgAA4UQFAQCAcKKCAABAOFFBAAAgnKggAAAQ
TlQQAAAIJyoIAACEExUEAADCiQoCAADhRAUBAIBwooIAAEA4UUEAACCcqCAA
ABBOVBAAAAgnKggAAIQTFQQAAMKJCgIAAOFEBQEAgHDq6upqbm5+dO/eEwMD
yWTS790BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAUv8fALqz2g==
    "], {{0, 772}, {770, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{770, 772},
  PlotRange->{{0, 770}, {0, 772}}]], "Output",ExpressionUUID->"99797879-db39-\
4495-b7ed-c743cda3b87f"],

Cell[TextData[{
 StyleBox["6.",
  FontWeight->"Bold"],
 "\tThe function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{"4", "x"}], 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "4"}]]}], TraditionalForm]],
  ExpressionUUID->"a347a41d-020c-41b8-9708-afdf5f6c88e8"],
 " is differentiable and has a local maximum at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "93d962e8-106f-41c5-97a4-f70a6a28eb0a"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "2", ")"}]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "c1193bfb-8176-4273-b48a-e49ad8a373f3"],
 " (see figure)."
}], "Problem",ExpressionUUID->"f9e0c48c-2395-4402-8c3c-3abfb3cc5930"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse a graphical explanation to show that Newton\[CloseCurlyQuote]s method \
applied to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"74df201c-9543-42c1-bbea-7e85e798f52e"],
 " fails to produce a value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "29f1c0ce-5f90-4b75-a352-cf8aa6048dc3"],
 " for the initial approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "873de08b-ac8a-499c-8c6e-879d55ce6083"],
 "."
}], "SubProblem",ExpressionUUID->"43acc08a-d5a4-462a-883d-fc4dc3b1420f"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tUse the formula for Newton\[CloseCurlyQuote]s method to show that Newton\
\[CloseCurlyQuote]s method fails to produce a value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "b806d48e-e4c8-42dd-a9c1-587189ca5bfd"],
 " with the initial approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "3bc1e7ad-0d35-4b12-807e-e2b7ef6337b9"],
 "."
}], "SubProblem",ExpressionUUID->"944f203b-9098-4c0b-8136-37afcdfe5155"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
eI0fOOxvvvHG+OWPVFYAWfhW3Lnc6pqXfmPQy2vkueLxxx5TnlSTVieQUNLv
r8Ph6OjoiHxRs8BWuWHDga4u8flL79eB5SFouoOF69eml8KNjpTmiM7+ct3Z
MEuCpwfx+yt92A9skdxeCX6K+C7tsV+N4Tou3byQdiJ9n9/etyonKyvjB8ej
7o8VdMtJmtbboD26Is8V4swpO5furKtLWp1A0ni93rODgyJI52RnRx4tpHNL
xQMPdHZ2jo2N6f0ikOYuH/nm7fdeqFshEmllcPE5+t0/GvKTb+Rk1/cle2CK
CBH8FPGH2G4VSROAB3byo5aWr9290FE22iAn9YoJ7soSWX+PVBRhrhBnWuU5
tr29PZmlAknmdrvNZnOEo1NlAaO8vPwnzz13YXTUoC2ZSHHSnf3AW+5vXpsI
+U77+MT3I+w5YGz+G+dq/lskDTjBpo7Vx58rpGm1ZGeAGHd1Z3tFhONTUlCE
ueLS5KTy/GmxWJJZKqCXiYmJA11dIipEe39EnBzuKysTCXxkZISZaaGVxe4T
lw9nfPl2m3nIboqLQxfFA/bYr+pQZbIExr/czhWR9cAM7toaexgImozr1tFj
WmFk4fGfjEoDTILvqhhRhLni7OCg8pwpTpXJLBXQ3YXRURESYuiAIbaVK1Y0
NTWdOnlyyQnogEi8+9PbA6WVn20XrlOLH6Uzal+Oqzndf2NhMEhixoOMjY1p
c4Pmsx6YUkKIaE4M/41TNX8eZyOD9PjgH4TYnrsS87Jld/QClXKFERs8I8wV
R44cUZ4np6aMvjoKEAuv1zs8PNzS3BzV9OCBLSc7+5EdO8xms8vlMuJJA6lA
vHP+ONIR/L5SjviQrnfxjDCVPkRLy2fE8FaPZNOkLSV4bXSV3iZ3vK47b53E
3F4hniKtRnprP4sLksbwEpQlRdJLJDVFmCtaW1pkb4aiwsJk1gmkoNmZGavV
uruxMarF2YO3BzduPNDVdWF0lKkwELU77+zLl8NYHHeZ8dCheD/+zY0FN85r
u4nL8fffuh5ngdKCpIF95n7+HyJqA9GiveKWoPGhcSWlZZYrttXUyN4Pm6ur
k1knkMpEwDg7ONjU1LSiqCi2E2zxypUin5zo76cZEBG7o9k8ePlOcX2URjt+
6/wfVOZMWJL0IXr831945ciRhe3YMbOm+l40R7KUeXTfh9afL3k1Dp7fMv5c
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
O5U=
    "], {{0, 698}, {712, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->180.,
  ImageSizeRaw->{712, 698},
  PlotRange->{{0, 712}, {0, 698}}]], "Output",ExpressionUUID->"afa01b7d-3866-\
4950-909f-1553e19dbf3c"],

Cell[TextData[{
 StyleBox["7.",
  FontWeight->"Bold"],
 "\tHow do you decide when to terminate Newton\[CloseCurlyQuote]s method?"
}], "Problem",ExpressionUUID->"dd3e9b31-9dc2-448d-a6fa-d3ca7544192a"],

Cell[TextData[{
 StyleBox["8.",
  FontWeight->"Bold"],
 "\tGive the formula for Newton\[CloseCurlyQuote]s method for the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "5"}]}], TraditionalForm]],
  ExpressionUUID->"edbf0fe9-56a0-4815-8e44-002a4a964453"],
 "."
}], "Problem",ExpressionUUID->"ea8cfb5d-c2c7-474d-b86b-5c35a005b594"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "e74b21de-68b7-456e-b3cf-ccafbd6f31de"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "d8d7679b-1924-48d5-9782-3016dd2c0e1a"],
 StyleBox["9\[Dash]12. ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "Write the formula for Newton\[CloseCurlyQuote]s method and use the given \
initial approximation to compute the approximations ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"22acf92a-bb78-427a-8720-ac3be9e6f542"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"271e8dfa-525a-4505-9fde-9580d3c10a04"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"5c431a40-a4ed-4715-9383-\
b6876cdbfec5"],

Cell[TextData[{
 StyleBox["9.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", "6"}]}], ";", "  ", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "3"}]}], TraditionalForm]],ExpressionUUID->
  "2cd47683-5f05-4706-8d29-6106b21ef1b2"]
}], "Problem",ExpressionUUID->"606aad2a-3196-4b6f-87f3-20b9068f0540"],

Cell[TextData[{
 StyleBox["10.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      RowBox[{"2", "x"}], "-", "3"}]}], ";", "  ", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "2"}]}], TraditionalForm]],ExpressionUUID->
  "601bfa87-ebf4-4fee-a900-789e136d9382"]
}], "Problem",ExpressionUUID->"ecd99f2a-d1c5-49d9-bcf9-69f92546b350"],

Cell[TextData[{
 StyleBox["11.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["e", 
       RowBox[{"-", "x"}]], "-", "x"}]}], ";", "  ", 
    RowBox[{
     SubscriptBox["x", "0"], "=", 
     RowBox[{"ln", " ", "2"}]}]}], TraditionalForm]],ExpressionUUID->
  "1198da98-bfc9-4cdf-a5f9-7b3613efb324"]
}], "Problem",ExpressionUUID->"559c6b48-e376-4344-a64a-4d3eed1827fe"],

Cell[TextData[{
 StyleBox["12.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", "2"}]}], ";", "  ", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "2"}]}], TraditionalForm]],ExpressionUUID->
  "cbe5533d-3d05-4a34-b327-e4aa8366fa42"]
}], "Problem",ExpressionUUID->"56368d4a-a121-4e78-b896-d1c47bf68ea2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Practice Exercises  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Practice \
Exercises",ExpressionUUID->"0dd9329e-2176-4daf-8ad3-ee8580b8254b"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "3ea6acf5-b7dd-4d24-af90-391053b6dd1f"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "448df8db-3038-4d98-a02b-5284ff509ffb"],
 StyleBox["13\[Dash]19. Finding roots with Newton\[CloseCurlyQuote]s method",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  For the given function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "409e4d20-bf53-4902-8d2b-fab4536b47bc"],
 " and initial approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"3b37ee3f-6185-4835-8890-ec20a8004fe1"],
 ", use Newton\[CloseCurlyQuote]s method to approximate a root of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "4d022c94-4952-4f96-ab7f-3ca9039a778c"],
 ". Stop calculating approximations when two successive approximations agree \
to five digits to the right of the decimal point after rounding. Show your \
work by making a table similar to that in Example 1."
}], "TExerciseDirectionsCell",ExpressionUUID->"72942d87-aa91-41d7-8fb0-\
df33651e7ff6"],

Cell[TextData[{
 StyleBox["13.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", "10"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "3"}]}], TraditionalForm]],ExpressionUUID->
  "82d1eb10-eb96-403f-8499-616151ac8d01"]
}], "Problem",ExpressionUUID->"7b17f3a2-439f-4cb4-bea3-f58b1ab1a93d"],

Cell[TextData[{
 StyleBox["14.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["x", "3"], "+", 
      SuperscriptBox["x", "2"], "+", "1"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", 
     RowBox[{"-", "1.5"}]}]}], TraditionalForm]],ExpressionUUID->
  "537c7a65-8d78-4ffb-84f4-a8f185257372"]
}], "Problem",ExpressionUUID->"f6299b11-739b-4db2-97a3-60c3955da6c6"],

Cell[TextData[{
 StyleBox["15.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      RowBox[{"sin", " ", "x"}], "+", "x", "-", "1"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "0.5"}]}], TraditionalForm]],
  ExpressionUUID->"84728542-0c2a-45eb-af8b-e40ccd893384"]
}], "Problem",ExpressionUUID->"6c516dbb-972b-4c1b-be99-4ec27efba01c"],

Cell[TextData[{
 StyleBox["16.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      SuperscriptBox["e", "x"], "+", "x", "-", "5"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "1.6"}]}], TraditionalForm]],
  ExpressionUUID->"44aeba01-d8b0-4965-8d4d-adcaab7728e2"]
}], "Problem",ExpressionUUID->"e954c699-bd9c-46b2-97f4-c3cca2884f88"],

Cell[TextData[{
 StyleBox["17.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      RowBox[{"tan", " ", "x"}], "-", 
      RowBox[{"2", "x"}]}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "1.2"}]}], TraditionalForm]],
  ExpressionUUID->"25ae940b-0e11-4b12-88ac-e28ce539466c"]
}], "Problem",ExpressionUUID->"4c7a4c9f-b330-4dd3-90dd-72c74c9abe45"],

Cell[TextData[{
 StyleBox["18.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", " ", 
     RowBox[{
      RowBox[{"x", " ", "ln", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}]}], "-", "1"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "1.7"}]}], TraditionalForm]],
  ExpressionUUID->"05351ae7-98ed-46b5-9276-b2142c228ea3"]
}], "Problem",ExpressionUUID->"ef2325d9-7104-4ae6-bc39-8ff7ac7ef2dd"],

Cell[TextData[{
 StyleBox["19.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox["cos", 
        RowBox[{"-", "1"}]], "x"}], "-", "x"}]}], ";", 
    RowBox[{
     SubscriptBox["x", "0"], "=", "0.75"}]}], TraditionalForm]],
  ExpressionUUID->"3e60548d-90f7-4677-9f0e-c56fac050702"]
}], "Problem",ExpressionUUID->"98e440f5-1e16-4cba-93a5-0a6ecdcf41e5"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "f9185a85-5eeb-42bc-bca1-e40ec4761786"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "83b2d19e-8212-4ade-8076-2e423a2de35e"],
 StyleBox["20\[Dash]26. Finding all roots",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Use Newton\[CloseCurlyQuote]s method to find all the roots of the \
following functions. Use preliminary analysis and graphing to determine good \
initial approximations."
}], "TExerciseDirectionsCell",ExpressionUUID->"afb0041f-0c13-4d28-ae18-\
6d3819f2e0de"],

Cell[TextData[{
 StyleBox["20.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"cos", " ", "x"}], "-", 
     FractionBox["x", "7"]}]}], TraditionalForm]],ExpressionUUID->
  "dbd25b47-d858-4c2b-aee8-e31c07406a04"]
}], "Problem",ExpressionUUID->"0d9a8b23-0c49-489b-ac21-219e2f4f5108"],

Cell[TextData[{
 StyleBox["21.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"cos", " ", "2", "x"}], "-", 
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"2", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "04ffef09-3a72-4f1f-aa9d-c198b35927e4"]
}], "Problem",ExpressionUUID->"094deac2-4229-4b32-a447-e267d5a2473d"],

Cell[TextData[{
 StyleBox["22.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox["x", "6"], "-", 
     RowBox[{"sec", " ", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "496ede93-7fcd-4632-ad8f-ee565986c704"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "8"}], "]"}], TraditionalForm]],ExpressionUUID->
  "0558a95a-523a-453e-be6f-e73f24c8a0b2"]
}], "Problem",ExpressionUUID->"7550e579-e717-4786-bfa6-16359466084e"],

Cell[TextData[{
 StyleBox["23.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "x"}]], "-", 
     FractionBox[
      RowBox[{"x", "+", "4"}], "5"]}]}], TraditionalForm]],ExpressionUUID->
  "e8ef1ed8-0056-4783-9fd3-53bff201e74e"]
}], "Problem",ExpressionUUID->"7ca28d2b-1355-487f-9add-f8c1f2554b23"],

Cell[TextData[{
 StyleBox["24.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "5"], "5"], "-", 
     FractionBox[
      SuperscriptBox["x", "3"], "4"], "-", 
     FractionBox["1", "20"]}]}], TraditionalForm]],ExpressionUUID->
  "88b834cf-aba4-4963-b898-b478e3491c4b"]
}], "Problem",ExpressionUUID->"4b6af4c5-5d1a-4f12-a4c6-ec199d4eee44"],

Cell[TextData[{
 StyleBox["25.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"ln", " ", "x"}], "-", 
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"3", "x"}], "-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "2052cd9e-66d1-456a-9b69-a59834c0f24d"]
}], "Problem",ExpressionUUID->"9ba87279-5802-47d9-820a-48ef67a0b30d"],

Cell[TextData[{
 StyleBox["26.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "(", 
      RowBox[{"x", "-", "100"}], ")"}], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"9a74fdf9-91f6-4d89-a206-08537e3c84b1"]
}], "Problem",ExpressionUUID->"e229700d-afef-4df1-8849-df1f728f0ee0"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "cf218942-2589-470c-a9b1-9d3e15811e14"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "4e65bfee-5070-4bdf-8f91-471597982478"],
 StyleBox["27\[Dash]32. Finding intersection points",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Use Newton\[CloseCurlyQuote]s method to approximate all the intersection \
points of the following pairs of curves. Some preliminary graphing or \
analysis may help in choosing good initial approximations."
}], "TExerciseDirectionsCell",ExpressionUUID->"77d9c330-1a4d-429b-96c1-\
c83f3a0d581e"],

Cell[TextData[{
 StyleBox["27.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"sin", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "a9f32544-788d-4465-9968-3f49b1cb1d25"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "39d5318f-0ea6-43b3-b0f6-4afb9db2e71d"]
}], "Problem",ExpressionUUID->"d86a4101-665a-4101-b3f7-48e7529c968f"],

Cell[TextData[{
 StyleBox["28.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["e", "x"]}], TraditionalForm]],ExpressionUUID->
  "0a4a0fc9-b446-48f2-8c52-589f5cc0fcae"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "0fe37033-e0e9-4fe9-b031-4a1910e5363d"]
}], "Problem",ExpressionUUID->"eccf7f8e-960c-4b44-8a36-feab79b88b63"],

Cell[TextData[{
 StyleBox["29.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["1", "x"]}], TraditionalForm]],ExpressionUUID->
  "49110e0f-ffc2-48d5-b5cc-ad9055a67745"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"4", "-", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "a7bdfb31-996c-4353-b011-78bfd315f6d5"]
}], "Problem",ExpressionUUID->"adcec5e5-a824-4e8e-864a-46e350851f92"],

Cell[TextData[{
 StyleBox["30.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "04d1f013-be70-4860-9235-20b15f056639"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"590e31df-9fc0-48bd-ab84-e1b4653f7e29"]
}], "Problem",ExpressionUUID->"6f29c1c9-c091-4167-b4d4-d2185f5c2f55"],

Cell[TextData[{
 StyleBox["31.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"4", 
     SqrtBox["x"]}]}], TraditionalForm]],ExpressionUUID->
  "bbfc90ef-00cd-4a6d-a6e5-1a006310401e"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"52d5fc64-38b6-4c00-b7a9-fdf632e8b0ed"]
}], "Problem",ExpressionUUID->"1ec84f1c-e241-4b04-93ec-bf1a1e92459f"],

Cell[TextData[{
 StyleBox["32.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"ln", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "74c65e23-0816-4dec-81de-9966e43a6ad6"],
 "  and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SuperscriptBox["x", "3"], "-", "2"}]}], TraditionalForm]],
  ExpressionUUID->"9ed9782b-c216-405d-8571-3dd550120c40"]
}], "Problem",ExpressionUUID->"f1605dcc-1bd8-4641-b0bc-895b946b1ca2"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "2cca630c-ae6c-4e3a-9c4b-61c42b2cdb08"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "e56d2073-af9b-41ab-b98f-d71275cec028"],
 StyleBox["33\[Dash]34. Tumor Size",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  In a study conducted at Dartmouth College, mice with a particular type of \
cancerous tumor were treated with the chemotherapy drug Cisplatin. If the \
volume of one of these tumors at the time of treatment is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "0"], TraditionalForm]],ExpressionUUID->
  "3cea158c-58e6-4f70-9e3d-3c3ecb72bd09"],
 ", then the volume of the tumor t days after treatment is modeled by the \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "(", "t", ")"}], "=", 
    RowBox[{
     SubscriptBox["V", "0"], "(", 
     RowBox[{
      RowBox[{"0.99", 
       SuperscriptBox["e", 
        RowBox[{
         RowBox[{"-", "0.1216"}], " ", "t"}]]}], "+", 
      RowBox[{"0.01", 
       SuperscriptBox["e", 
        RowBox[{"0.239", "t"}]]}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"e8114282-ba08-45ad-92d4-496ea5bb3d57"],
 ". (Source: Undergraduate Mathematics for the Life Sciences, MAA Notes",
 StyleBox[" No. 81, 2013",
  FontSlant->"Plain"],
 ")"
}], "TExerciseDirectionsCell",ExpressionUUID->"fa36f090-fa46-47bc-b01d-\
35a6565e05a8"],

Cell[TextData[{
 StyleBox["33.",
  FontWeight->"Bold"],
 "\tPlot a graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"0.99", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "0.1216"}], " ", "t"}]]}], "+", 
     RowBox[{"0.01", 
      SuperscriptBox["e", 
       RowBox[{"0.239", "t"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "f9f51fd9-b02d-455c-9820-224a543243e8"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "16"}], 
   TraditionalForm]],ExpressionUUID->"2508bfed-2bac-4fc8-b94f-6c0daafb3d42"],
 ", and describe the tumor size over time. Use Newton\[CloseCurlyQuote]s \
method to determine when the tumor decreases to half of its original size. "
}], "Problem",ExpressionUUID->"5a9362f7-db55-4f12-b698-a663d3793098"],

Cell[TextData[{
 StyleBox["34.",
  FontWeight->"Bold"],
 "\tResearchers plan to give a second treatment of Cisplatin just before the \
tumor starts growing again. Use the derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"0.99", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "0.1216"}], " ", "t"}]]}], "+", 
     RowBox[{"0.01", 
      SuperscriptBox["e", 
       RowBox[{"0.239", "t"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "7c7ede17-bc90-420a-894a-f2075d337af4"],
 " and Newton\[CloseCurlyQuote]s method to determine when a second treatment \
should be given. "
}], "Problem",ExpressionUUID->"7939ce2d-c748-441e-877b-4905a88b27ff"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "d4eb6932-52d1-459e-a831-46246ff2a2ee"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "2e6477f3-dcfe-42da-a9f5-90471b3c115e"],
 StyleBox["35.  Retirement account",
  FontWeight->"Bold"],
 "\tAssume you invest $",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]],ExpressionUUID->
  "e92d8a33-2247-4fed-ae2b-56f455464885"],
 " at the end of each year for 30 years at an annual interest rate of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "ef16a99b-8575-49a3-8a0c-d107c16ed598"],
 ". The amount of money in your account after 30 years is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    FractionBox[
     RowBox[{"10000", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], "30"], "-", "1"}], ")"}]}], "r"]}], 
   TraditionalForm]],ExpressionUUID->"60bb1cec-e5c5-426d-b8b2-5c449d260df7"],
 ". Assume you want $",
 Cell[BoxData[
  FormBox["1000000", TraditionalForm]],ExpressionUUID->
  "fcc7b550-09c1-4d15-9143-51b46bfdff89"],
 " in your account after 30 years."
}], "TProblem",ExpressionUUID->"de565eaa-ca9a-4a3f-9579-a4aa5e8690a5"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tShow that the minimum value of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "c8942fe2-cf37-41cf-a0e5-38f4df1545d8"],
 " required to meet your investment needs satisfies the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"1000000", "r"}], "-", 
     RowBox[{"10000", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], "30"]}], "+", "10000"}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"c6504cdb-715f-4689-a21c-8fcec916d3f1"],
 ". "
}], "SubProblem",ExpressionUUID->"7eee67da-d960-409b-a2f1-97ed1bafbd18"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tApply Newton\[CloseCurlyQuote]s method to solve the equation in part (a) \
to find the interest rate required to meet your investment goal."
}], "SubProblem",ExpressionUUID->"f115f6ed-c282-432c-88d8-69823a3e173a"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "96d6b386-2339-4f7e-87a1-334eb21ac83d"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "59e9c3a8-1d90-4732-bc7d-58f807ca6a72"],
 StyleBox["36.",
  FontWeight->"Bold"],
 StyleBox[" Investment problem",
  FontWeight->"Bold"],
 "\tA one-time investment of $2500 is deposited in a 5-year savings account \
with a fixed annual interest rate ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "793cea12-8517-4565-af72-e28cc90ff514"],
 ", with monthly compounding. The amount of money in the account after 5 \
years is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "(", "r", ")"}], "=", 
    RowBox[{"2500", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox["r", "12"]}], ")"}], "60"]}]}], TraditionalForm]],
  ExpressionUUID->"81d19672-5d31-41e8-97ac-46cfece687fb"],
 ". "
}], "TProblem",ExpressionUUID->"09722365-a9af-4e4b-9f05-3b9dee874f10"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse Newton\[CloseCurlyQuote]s method to find the value of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "9f02db1b-06f2-417c-a162-2a105566c9ad"],
 " if the goal is to have $3200 in the account after 5 years."
}], "SubProblem",ExpressionUUID->"ae200d74-be4c-435d-8610-84089f96116b"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tVerify your answer to part (a) algebraically."
}], "SubProblem",ExpressionUUID->"3ed841de-2a77-4a02-b6cf-c5b56d193793"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "e663ee0d-adf7-4477-8382-5be80f1ea70f"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "98123456-e0fd-40e2-8625-1fa91bbed03e"],
 StyleBox["37.\tA damped oscillator",
  FontWeight->"Bold"],
 "  The displacement of an object as it bounces vertically up and down on a \
spring is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "t", ")"}], "=", 
    RowBox[{"2.5", 
     SuperscriptBox["e", 
      RowBox[{"-", "t"}]], "cos", " ", "2", "t"}]}], TraditionalForm]],
  ExpressionUUID->"70d1f4d0-3bd7-467f-a91d-af274ae818de"],
 ", where the initial displacement is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "0", ")"}], "=", "2.5"}], TraditionalForm]],
  ExpressionUUID->"3616b4d8-8c98-49c9-9973-5ccfd7cc3d91"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "55195d36-1ee2-444e-9eb1-b7182bdea36a"],
 " corresponds to the rest position (see figure)."
}], "TProblem",ExpressionUUID->"3c3a67c9-8e20-4268-8ff0-1d56ee0bb2fa"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tFind the time at which the object first passes the rest position, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "edcae327-67dc-4fbc-b563-123f634ba26a"],
 "."
}], "SubProblem",ExpressionUUID->"2da7385f-4842-48ef-8482-3857a4692cb5"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tFind the time and the displacement when the object reaches its lowest \
point."
}], "SubProblem",ExpressionUUID->"356f394a-7503-410b-ac21-23089805de10"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tFind the time at which the object passes the rest position for the second \
time."
}], "SubProblem",ExpressionUUID->"04e84a65-34ca-4765-bb8e-7fc34a6e8f2b"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tFind the time and the displacement when the object reaches its high point \
for the second time."
}], "SubProblem",ExpressionUUID->"5a77c850-49bd-493d-a3dc-d61f8a003910"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3X1wVGWe9//e2XtctQr9DaM06YRFsXarABVLxuH+A2p+92rNyDgyxc1o
yQw71gLKLEU5UxEEat0/tpwVCqb4AUpgl70tdJKWB40EK0ZGlrrNSJxAeJjQ
TCAYgYQknXRCJE/QSbrzu06u5KRzTj/3eerk/apjVySdc115/uR7zvW9Hlz+
6//98rdcLterd4qH//1P6/9Xfv4/bVzy/4j/ee6VV/951SsvrVz4ytqXVr2U
/z+X/7X4x2+Jh/9X/Ke8PAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAASWttbbV7CgAAAEjB7oICu6cAAACAZPl8vp8tWWL3LAAA
AJAsr7fwoRkz7J4FAAAAkvXa2rXunByfz2f3RAAAALJF9432dl/F0cO/353/
av4/Pf246/m9dTGeGq59Xzzhe3Pnfn/d70v9tw0ZfsGCBdPy8vbt22fI2QAA
AMaxwLGdyx9/8N557gemT3fn5EQea6puRnmDcEPBw5PV50ybvKqidyDDOXR3
d4tTeXJyRHTM8FQAAADjXt+p3b/+ly1Fu3ZsX/Osksfy8jzy0eNx/eqjroGw
9g2CZ1+/e4p8mmdI9JiXilOfHZH5bcGCBRmeCgAAYEIJ176/+L6pIpLJNJU7
9YmCRu3l0VCo/+yGx+QTZIR76Yu2DMd9e8fvZHQUjzfa2zM8GwAAwITScnid
e6T+Jh5z9l2K9qy2v+x+2T2S3zbW9ohQl8mgS194wTMSCP/72LFMTgUAADDh
BGtev3uKvDAqEprryYLGkO4S6hCZ9PLuf67sVqZjzp45S81vb775ZqanAwAA
mGC+3vWMejUz6iVUqf/LreI5d8zZ5sts/cLly5c9EVdjl77wQiZnAwAAmIDC
te9H3t42d//FqE8LFK1U1jhsqshwuAMHDozmt5wcuvgCAACkLFizw3W/Gqhc
S72BoL7C1v2HX3xLxLzMFy+8tnZtZP1NuHz5cobnBAAAmGgu/Ha+WoKbNnnV
0S7dM/yfLr5vquv5vZkvFl349I/dEfU3cXi9hRmfFQAAYGIJlv+rmqZEuFp/
Wtvhzbf5p1H/PVXd3d3DreQijtfWrs3wtAAAABNNKHBCaQQ3ck3T9Z81Y17t
/3S+O+fOxVtibbCVvMrKSk3xTRwLn/5xhg1JAAAAJp62Qz+YpNyLNnILXORG
DLJ/75LTHZmnrLd3/E4dRS33iX/o7u7O8MwAAAATzde7nhlOVh7PtHs2jG5y
Wn9wvjvnjjnbMi++CYteWS/3XdWU4CorK404PQAAwERSvUeNVWoXuFCov/xl
l8eIZafybLMee1zd7iFyFSpdfAEAAFLWeXL5ZPfwEtS8vOGlCtV7lNvhYm/K
kJJLly6pjYIji2/iX362ZEnm5wcAAJhgRm6BkxtpKUsYhv9lY22PIQO8tnat
DG9j6m9STk79tXpDRgEAAJg4Lvx2/ugShk0VcsNT168+ilzLkLZQqP/h2bNH
M5vuFjguoQIAAKSq55ONkRtpTcvLi7Mdaqo+/PBDfWaLPOY8+ihdRAAAAFIS
rn1fc1nze++cN+rkP1uyJH5+E8cnpaVGDQcAADAhBGs2f3vK6LKCyC4imamr
q4t6zVRz/OOyZYYMBwAAMGF0Fy+6S62/GbVsQXjzzTf1Pd+iHB4PqxgAAABS
oi5hcG2qMOpuNHGe2TNnJVN/YxUDAABASkTQkltlGXjlVCgpKUkmucn62/fm
zmUVAwAAQLL8n/4v99QHpk/fdOmWgWdVVi4kV3yTEe6/jx0zcHQAAIDxq+3w
s3e5c3ImbT5p4Enrr9Unm9xG8hurGAAAAJLR8s4LylZZBnXrVb355pup5beh
3RmampoMnAMAAMD40//lVsNvexscuqFuzqOPxsppyqIGVjEAAACkLlz7/nx3
Tu6UHxW2BI098yelpVHvfHviiSfkCw/NmCEO/SVU8QRjZwIAAJCluqpLdhcU
7Hiv+HLPyBpP/6fLJ7tFalp/+qbhwy194QVNNhNpTUxA3Uvr0Uceqb9W/+rP
F+VOncMqBgAAAA1le6yhu8uUjU3dC7b9qUbEObngdOnxZsOHE8FMDBRZf1u9
enVra+tgREcRkd+CYeV2O5HWFixYENnjd+WKFYZPCQAAILvU73hGhCmRkWRM
ki+I8Lb4yGUzhotcuSCyWWVlpdrY7fDhw2p+U5/f3d0t3kS5nDpEZD8Z9gAA
ACas4UUKeXnqMk/xv5tPNZo03KzHHhdDyAumIptFvipqfpPq6ur+cdky+dq3
d/zOpLkBAABkh2DNWwsnuUduMFu0buexdoMXLKj++9gx99A10Kj7mcbJb9In
paVPDDFpegAAANkiFOrvue778+X6673m7lG1u6AgzgKEhPltcORyal1dnTkT
BAAAQAqSyW8AAABwDvIbAABAdiG/AQAAZBfyGwAAQHYhvwEAAGQX8hsAAEB2
Ib8BAABkF/IbAABAdiG/AQAAZBfyGwAAQHYhvwEAAGQX8hsAAEB2Ib8BAABk
F/IbAABAdiG/AQAAZBfyGwAAQHYhvwEAAGQX8hsAAEB2Ib8BAABkF/IbAABA
diG/AQAAZBfyGwAAQHYhvwEAAGQX8hsAAEB2Ib8BAABkF/IbAABAdiG/AQAA
ZBfyGwAAQHYhvwEAAGQX8hsAAEB2Ib8BAABkF/IbAABAdiG/AQAAZBfyGwAA
QHYhvwEAAGQX8hsAAEB2Ib8BAABkF/IbAABAdiG/AQAAZBfyGwAAQHYhvwEA
AGQX8hsAAEB2Ib8BAABkF/IbAABAdiG/AQAAZBfyGwAAQHYhvwEAAGQX8hsA
AEB2Ib8BAABkF/IbAABAdiG/AQAAZBfyGwAAgFECF891DYTNHoX8BgAAsl3P
dd/h3+9+e8fv8l/NX7169a//ZcuWI1/eaG83NkqFQv3dcbUcXjctL29/t4Fj
Rkd+AwAA2SsUOPHuizNFanLn5IhDfUG+vGL7gTrjxrrw2/ny/Ep28ngiX1DH
dS31BoIDxo0ZHfkNAABkqb5Tu+e7c4ZzVMQxJsXds6HUf9uAwTpPLp/s9ujG
0hwvfdFmwFiJkN8AAEA26v9yqyx8aUOUEJHixKOIcBW9mdbEWt55IWF4EwP5
Mh4oGeQ3AACQdUKBE4vvmyrT2p2Ltxyqqmltbb3R3h64eG77mmcfmD7dHRnn
PB7XznMZjRes2fztKQnym8czd/9Fg96/BMhvAAAg69TveEYGmPyPz0f+eyjU
Lx67qks01zrz7n+usCWY9nA9n2yUgXDTpVtiiKhH363eTN+rpJHfAABAlhmp
hsWrd/k/HS7QjRTH1lTdTHO4cEPBw5On5eW5lnot6A2SDPIbAADIMtV7lJWe
TxbEX1vatHupIRc35Y12uVOf2HTpVnpnMBz5DQAAZBff5p+KQLX+dKJ6WtcJ
9SqqUj1L8xa4tkM/mCRXSWw58uWfL9ffaG9P6zxGIr8BAICs0n342bvumLMt
cWO34Nnf3OMeXcLwdkU6o1Xv8YxwD51KZLm/+v6zK7YfqPZ3pnNCI5DfAABA
dgmF+pO7D01JesMddz2enxz1pzHQH37xLf06U6UnSV6eeGHRup3lHX1pvAsZ
Ir8BAIDxKaLph4hbm081pnyG+oNR+4TItahq97kV+8+aMPt4yG8AAGB8Uu9/
83iSut6qE659/yeP/3D54w/mTp0Tq+ebfHStP2DlXXHkNwAAMC6pTdvEY86+
S+mdJBgOi2NwsC1w8dypz468++LMKFluqCKX5v11aSG/AQCA8Wj45jfldjUj
9s8SugaULNdz3Vf53mvz3bpCnMdjWYMR8hsAABh/wrXvq1toLTndIfdlMFKw
pmTVI+6xES6Nq7Q+n++J1D08e7Z6X18ab75yxQqDPxoAAACZGi2+uX71kUmb
JohM+JfdL8tRZH7LdS8oaLyd0kkqKytHz2DVsfDpH5vxAQEAAEhbzycbZduQ
aZNXlZl8SfPshsfkWPJ46Yu2lN5c5Dcrkxv5DQAAOFGw5vW7lbYhuVOfSKdn
SLrDyV4iqe7y0NraeiBFrnX/4Vr8mrx0+92Zj7j+eet92/fveK/4wKefJXmG
/z52zKQPBgAAQOq6y192ySrTxtoea4YMFK0c7hKcen5Lg+vzZhHh5LraSX8/
2+WtdX1wJRTqN/4ePwAAAPM17V4qc9T60zf7bvVaNGr1nuFevh6PFfmtKqDk
t6Fb5obyW504zB4UAADADC2H18nK29LjzZYO3HlSaRQ8FKgsyG9LTnfI+ttw
fiuqE0djyJQ1GgAAAObp/3KrLIItPnLZ6rFvn/zNPW6PVddP37jWNab+NpTf
Sv2prXsFAACwV9+p3fKyqQhv1t8GFgqcWHzfVLXXnNnDHWq5pa2/eetS7VsC
AABgI9mqd1pe3vfeOR//mT3XfR9fbDU+4A3d/6aseJ3yo8KWoMEn17nc06+v
vy27dNPscQEAAAwhwpvcykqEt0TBrO3QDybdMWeb4RvN+zb/dHjxwlKvSb2C
IwXDYf39b64zqfWdAwAAsIf/U+XCpceTRHjrPrvhsdypc/RLG7qqS7zewkOl
X6S5BKDrhLp4wbKOJfr6m6uixZqhAQAA0hYKnHj97inuoauWh6pqTn12RGQw
X8VRzWNlZaV41VsLJ3mGtmPQbGQfKFrpHtr6SrkCO3abe5Hr/v2XT/7k8R8u
WrdTnD9GYa37T6/MGl65sKnC5Pd41H3b97s19bej5ncqBgAAyMTQrgfytje5
cZXc/kDditQzksrUeKZc39RErJGtE9QN6CN2v1J2UM2dOkc9+Z2Lt2iyn3jO
H/9twXB4e36vZS3YguGwzG9iVqP5raTeqvEBAABSF6wpeHiyds/3aFvAD4c6
ubhg6hPaRZqyb1vE8yO6fyj5Tc2HMgHmuhfkf3z+Rnu7eK3/dNlbCyfJItjC
PZ9bcNtbJNe2j7T1N1r4AgAA51KSVdS0pj0kNZst9QaCmgJaW9Gs78ilB/ot
t3o+2Rj55mohzh3xv67Fr318sdXi919Ysf2Adv1CUd31XvbPAgAADnXqsyO7
Cwq83sLkH4t27RBBKxjWVsm6qkuWP/7gA9OnizCW/7F2EYT/dNn2Nc+6x9bx
ZClPJChbktvg0PVTMbq2/lZUd6zd9NYlAAAAaTC8e5s4Yd+t3q6BcOwzd/tb
m8VRf62+qanpRnt73CdbQeS3e+e5NfmNFr4AAACOteO9YlkzjMxvtPAFAABw
rAOffqZdf0oLXwAAAAeT+U1z/ZQWvgAAAI4Vvf5GC18AAACnil5/o4UvAACA
U0Wvv9HCFwAAwKmi19+K6hpDlm4DAQAAgCRFr78V1ZX6aQEHAADgRNHrb15a
+AIAADhUrPrbylpa+AIAADhRrPvfXOfa7Z4aAAAAoohVf6OFLwAAgDPFrL8d
b7Z7agAAAIgiZv2NFr4AAACOFLP+RgtfAAAAR4pZfyuqu97bb/fsAAAAoBWz
/lZUd6w9aPfsAAAAoBWn/kYLXwAAAAeKU3+jhS8AAIADxam/0cIXAADAgdT6
23dnPqLNb7TwBQAAcJ54+Y0WvgAAAM6jXj9V8pt3bH6jhS8AAIDzjM1vtWMi
3MErds8OAAAAWmp++7uZs7X1t6K6QHDA7gkCAABgDPX+t6j5rbyjz+4JAgAA
YIz4+W1vU4/dEwQAAMAY6vXT2TNn6fPbmq867Z4gAAAAxlDrb3MefVTbP6So
Lq/6ht0TBAAAwBhj8tvBK7TwBQAAcDg1vz36yCOu0gZa+AIAADicev+bUn/7
vFmb30ob7J4gAAAAxhhTfzvZqs1vtPAFAABwmMj62zxfBy18AQAAHC6y/rax
tkef36o6aeELAADgIJH93wpbgvoWIuIf7Z4jAAAARkX2D6nq7NPnt/w6WvgC
AAA4SOT1066BsD6/zfN12D1HAAAAjIq8fir+N0oL35Otds8RAAAAoyKvn4r/
jdLC93Na+AIAADhI5PVT8b+u47TwBQAAcLTI/m/if2nhCwAA4HCa+tvM8zf0
Sxi6BsJ2TxMAAADDNPW3NV916vMbLXwBAACcQ1N/29vUo89vh1pu2T1NAAAA
DNPU38o7orTw3VjbY/c0AQAAMExTfwsEB7T5zVv31AVa+AIAADiFpv42SAtf
AAAAZ9PU3wRXSb02v5X77Z0kAAAAVFHqb/oWvmXX7Z0kAAAAVFHqbxUt2vxW
fNXeSQIAAEAVpf52rl2/BDUYpoUvAACAI+jrbytrb+rzm693wN55AgAAQNLX
3woab7u8tS7vmPxWEqCFLwAAgCPo62+l/tua8CaON6512TtPAAAASPr6W2Mo
rK+/Lan5xt55AgAAQNLX3wR9/c11ps3GSQIAAMTRc913+Pe7397xu/xX81ev
Xv3rf9my5ciXN9rbuwaMXYDZ7T9dVrRrhxxFPO54r7iqrS8U6jd0lMT09bdB
WvgCAIAsEQqcePfFmSLJiDwjI418Qb68YvuBOoMGChzbuXyy2+PxyDOLF9Sx
7ly8pdR/26BxkhK9/na0UZvfjjZaOSsAAICE+k7tnu/OkUkm8hiT4u7ZkGG4
CoX6fZt/KgKbPPl92/fLyp6Ijm8tnHTvPPcD06eLgTafsi4sRa+/0cIXAAA4
W/+XW4dLYZr8NhK0ZIoTjyLCVWTQCS1QtFI9+dz9F8deLe1+98WZMr+JY9Ml
i/p1RK+/nWnT5jevUdVHAACATIUCJxbfN1WmtTsXbzlUVdPa2nqjvT1w8dz2
Nc/KQDUa5zwe185z6Q0Urn1fDYSu5/c2hnQ31HWdUK6rysQ4edVRSzp2RK2/
Lan5Rr+E4XKP1ffmAQAARFW/4xkZmfI/Ph/577I41lVdomYqeeTd/1xhSzD1
cdqKF92lnmT96ZtRn/T1rmc8I1wb/5jO+5OiqPW3rQ3d+i0YjrWn8V4DAAAY
LViz+dtT5NXMmM/xfzpcoBupwq2pip6+4qneoxbf7pizLebFSP+n893DA+VO
+VFaQTE1UetvJYFb+vwmQp3ZkwEAAEiseo9IL64nC+Lf3dW0e2lkfosX9mI4
u+Ex9Tqsa1NF7Ce2HfrBJPfIQDn7LqU6UKqi1t8u9/Tr89uyS6mnVgAAAKP5
Nv/UHftq5qjIO9Py8lK+BS549vW7p6gJcOnx5lhPDIX6L/x2vtq9RATLKLfJ
GSpq/S0YDtPCFwAAOFL34Wfvinc1UxU8+5t73KNLGN6OU0CLov/LrbLPm8xv
8deWBopWqstdc90LChrNbQcXtf4muIqvavNbRYupMwEAAEhGKNSf3MYKStKT
sUqksJ8cTW0zAmVVgtpQbvKqsvitQYYu6ap955ac7jB1U4ao9bdBWvgCAIBs
N7LMQV4/TbG/bnfZor9R85vrH/4rwSXRzpPqtVrlEmq67UqSFLP+9nmzNr+V
1Js6EwAAACOp9795PEldb40Ubih4eHJkfmuP//zbJ4ev1crn/+ojo7deHSNm
/a0qQAtfAACQvXo+2egeKYilvCY0op6WTn5LWK/LTKz621MXOvRLGMxeTAEA
AGCQ4ZvflI3m09g/S5fHUs1vCZ4/IhTqr79W35QK8fyiXTvku/bw7NmRr8o/
9ZXr7QrNcaiqxt/aHDlKa2trah8NAAAA84Vr31dbt6WzmsCq/FZZWTm8wmJk
nWwCI6sktFu+jqyTHd0BVn3U/G9OzsKnf5zaRwMAAMB0o8W3NG9FszC/jYle
CY+UnhzjIL8BAACn6flk43A3toR9P2Kxtv5mSCojvwEAgGwVrJH7JuROfSLF
niERMsxvz+9N/v63urq6wMVz1f7O5B+Ldu2Ql1Afnj1bvHn9tXr1UX//21/v
P6l5857rvmCYRQ0AAMAhustfdskQtbG2J/3T3M6C9af6/iGCq7TB5a0dPYrq
XMcazJsJAABAhpp2L5WFqfWnb/bd6s3gTG3Fi+5KoZ6myW/xNrs3QKz+IYKr
3K+0EIk8aOELAACcquXwOhmf4uw1n7TROp447ly8JX4b3FDgxGi9zuNJud1c
iuLV3062alv4Hrxi6mQAAADS0//lVhlpFh+5bMgJA++skHlMnDbv/ufir4Po
O7U7chlCRpdukxCn/jbPF6WFbyCYYvs7AAAAk4n4JPOMCG9GbRwvO8gpqWyo
pBY/krW884JarJs2edXRLkOmEFOc+lt+Xac+v1V19pk7IQAAgFSoQet775yP
/8ye676PL7YmG/CCNTtc98uSmjj/3P0XY63ZFCc8u+ExtQev69Uys1d3xqm/
FbYEtddPi+r2NplbDwQAAEieCG/z3UqSEeEtUTBrO/SDSXfM2ZZkZw/h613P
qNsWxEtlwZrN357iHtkZYf3pm6m8B+mIU3+r6uzT57f8uk6zpwQAAJAU/6eL
75sqwlUS4a377IbHcqfO0S9t6Kou8XoLD5V+EaXjh/9TGQ498VsBV+9Rw9vf
3vWmL9W9VlMXp/7WNRDW57d5vg6zpwQAAJBQKHDi9buVqlfulB8dqqo59dkR
kcF8FUc1j5WVleJVby2cJDOYZiP7QNFK91B5TQlg0ba5/3rXM+6RVQyuD65E
mUao/w+/+JZ689tLX7SZ9y6r4tTfBNfBK9oId5IN6wEAgN2GNllQq16RCw0i
H+Wr5AvKNVBNW7aRnRrUvh9R0le4oWjWd+QJ8+5/rrAlqHl9/5db1ZWn4vzW
7GsQp/42KFv4avKbAQ1VAAAAMhCsKXh4snbP0GhbiA6HuqEjd+oTBY23x5yn
c8wmC0oA23lOP5pa6BNnu2POvx5rH41wXdUl8gKu7PEbv0ecgRLU3443a/Nb
KVswAAAAG3UffvaupDZ8l9RsttSra4PWVjTrO0n1bRtKjPfOc8vTLlq30+st
fPfFmblT58g3/P6635u6YZZGgvobLXwBAIDDnPrsyO6CApGgkn8s2rXj44ut
+oubXdUlyx9/8IHp00Ucyv843iII8Srx5Fd/vijyom3u1CdElhNnNvk91opf
f5t5/oZ+CUPXABvWAwAAexjVnjfyhH23ekW8SXhm+QTxZH9rc1NTU2trq12h
KH79bc1Xnfr8ZsGqWAAAAMQSv/62t6lHn98OtcTdAAwAAABmil9/K++I0sJ3
1Xm/9fMEAACAFL/+FggOaPObt3bJ6Q5repsAAABAL379bVDTwtc7dFQFLJ4k
AAAAVPHrb4KrpF5bgivn+ikAAIBtEtff9C18jzZaPEkAAACoEtffKlq0+a34
qsWTBAAAgCpx/e1cu34JKusXAAAA7JKw/rbs0k19frvcY3DrYwAAACQpYf2t
oPG2y1urLDuNyG8lAVr4AgAA2CNh/U1ENU14E8fWhm6L5wkAAAApYf3tem+/
/vrpkppvLJ4nAAAApIT1t2A4rK+/uc60WTxPAAAASAnrb4Kr+Ko2v1W0WDlJ
AAAAqBLW3wTX0UZa+AIAADhEUvW3cr82v5XUWzlJAAAAqJKqv51p0+Y3b52V
kwQAAIAqmfrbkppv9EtQr/fSwhcAAMAGydTf3rjWpV+Ceqw9aOU8AQAAICVT
f1Na+OrqbwWNt62cJwAAAKRk6m++3gF9fltZe9PKeQIAAEBKpv6mtPDV5TfX
uXYr5wkAAAApmfrbIC18AQAAHCOZ+pvgKruuzW/Hmy2bJAAAAFTJ1t9o4QsA
AOAMydbfTrZq89vBK1bNEQAAAKOSrL89daFDv4QhEBywbJ4AAACQkqy/bazt
0bfwreglvwEAAFgtyfrboZYoLXz3NvVYNk8AAABISdbfqjr79PltzVedls0T
AAAAUpL1t66BKC18Z56/Ydk8AQAAICVZfxNcB69oI9zJVmsmCQAAAFWS9TfB
VdpAC18AAADbpVB/O96szW+lDdZMEgAAAKoU6m+08AUAAHCA5OtvM8/f0C9h
6BoIWzNPAAAASMnX39Z81anPb1WdfdbMEwAAAFLy9be9TT36/FbYErRmngAA
AJCSr79V9A64vLWaXbQ21rIFAwAAgKWSr79d7+3XboHqrZvn67BmngAAAJCS
r78N0sIXAADAAZKvvwmuknptfiv3WzBJAAAAqFKrv+lb+JZdt2CSAAAAUKVW
f6to0ea34qsWTBIAAACq1Opv59r1LUSCYVr4AgAAWCel+tvK2pvaJahFdb7e
AQvmCQAAACml+ltB4219C7hDLbcsmCcAAACklOpvpf4o+e2Na10WzBMAAABS
SvW3xlBYn9+W1HxjwTwBAAAgpVR/E5TwprkF7kyb2ZMEAACAKqX62yAtfAEA
AOyWcv3taKO2/na00exJAgAAQJVy/Y0WvgAAALZKuf52pk2b37x1Zk8SAAAA
qlTrb8su3dRvwXC5p9/seQIAAEBKtf62taFbn99K/bfNnicAAIDzBS6e6xow
fWvRVOtvQy18tddPRagze54AAADJaav+8K0V2w8YnqNCof7uuFoOrxOZar/5
sSjV+tvlnn59/W3ZpZtmzxMAACCRbpHcFt83VWSbO+ZsawwZnN8u/Ha+iGcy
OHk8nsgX5L+Lw7XUGwiavjV8qvU3QZ/faOELAABsNZzcPEOZSgQb1z/8V7ux
I3SeXD7ZLc8f53jpCytCUar1N8FVfFWb3ypaTJ0kAABADMPJLbIyJhie31re
eSFheJt2zwZfr+nFt8H06m9HG7X5jRa+AADAesGa39zjFjFm0Svrt695Nnfq
HDVKGZzfgjWbvz0lQX7zeObuv2jgmHGkU38r92vzW0m9qZMEAACIpu3Y//28
2t8p/+fshsdEllOqb0bnt55PNsq8tOnSrVCoP+rRd6vXuAETSKf+RgtfAADg
PE27l8rwZnB+CzcUPDxZuaduqdeC3iDJSKP+tuR0h+vgFZe3NrKRiOFLPAAA
AFKi5DcTrp/2f7lVhKXcqU9sunTLoFNmKo362xvXujThjRa+AADAdubkt7ZD
P5ikXJbNydly5Ms/X66/0W7wwtY0pFF/K2wJavObt66gkfwGAADsZEp+q97j
GeEeWqQgstxfff/ZFdsPqPfdWS+N+pvSwterbQG3spYWvgAAwE6G57dQqP8P
v/iWfp2pCE5yocSidTvLO/oMmHqK0qi/dQ2E9fnNdc7+WiIAAJjIjK+/1R+M
2idEZidZARMvrNh/NvOhUpJG/W2QFr4AAMB5DM9v4dr3f/L4D5c//mBkZzlN
lpOPrvUHrKxkpVF/E1xl17X57XizeZMEAABIyIz734LhsDgGB9sCF8+d+uzI
uy/OjJLlhipyrrcrjBgwKWnW32jhCwAAHMak/iGqrgEly/Vc91W+99p8t64Q
5/Gk0WCktbX1ww8/PHDgQEqPr61dK/cLe2jGjOTf0LXtI9c/b3Wt+w/X+gPD
a1EPXjH6gwQAAJACs/PbGMGaklWPuMdGuDvmbEt1S4PKykq153AKh/omSb+t
e+iQpcK/+v6zai+RQNCKDVsBAACisjS/Da1O/cvul9Udu8RDrntBqh3VRH4b
PYOZh1xqIYPcd2c+ol5CtWX9LAAAgGRxfpPkpqvukQLXS1+0pfTmPp/ve3Pn
pno8PHu2msqSf6tZjz0+6e9ni/D2P5b90vWfNTK/7W3qMekjAwAAkJAt+W0w
WPP63VPUApdr5zkLxjx8+LAn9fWnvt6BoW0XapXwVnxVXkJd85VtXYgBAADs
yW+Dg4GilbIE5/D8prTwHdo2a+gYvv8tr/qGefMEAACIz678Nli9Z7iXr8fj
5PwmuD64MhrhaOELAADsZlt+6zy5fLJbrkFwen4rbaCFLwAAcA7b8tvtk7+5
x+1x/PXTQVr4AgAAh7Erv4UCJxbfN1WOu+R0hwUjpp/fTrZq8xstfAEAgH3s
vf9NDJo75UeFLUELBkw7v83zdYze+TZy0MIXAADYxa785tv80+HFC0u9XQNh
C0ZMO79trO3R57eKXvIbAACwR3r5rau6xOstPFT6RWMorejVdUJdvCDSUTpn
SF3a+a2wJai9fkoLXwAAYJ+Wd15QN6JyPb83mfwWKFqp7go67Z4NkZUokev+
/ZdP/uTxHy5at/NQVU2Mwlr3n16ZNTzipgqj3pGE0s5vVZ19+vyWX0cLXwAA
YA8RpdS9RJPaSn5k6wR1L/iI3a+6Dz97V+7UOXJXLHHaOxdv0V1n7P7jvy1Q
42KqO9dnIu38NtzCd+wx8zwtfAEAgA0Cx3a6x+7Ynv/x+QR3o8m+bRFvEtH9
Q8lvMrmpBbpc9wJxzhvt7eK1/tNlby2cJEdcuOdza257U6Wd3wTXwSvaCHey
1YxJAgAA6IVC/dUfvvXvv3xy+eMPesaGNxm9cqc+seiV9b/+F33pTGormvUd
tWSnuYGt55ON6r97RranV/fJkv/rWvzaxxdtCD8Z5Tda+AIAAPvI/Pb2Wx/u
Lijwegs1j/v27Tv8+93iBfEEX4wlll3VJSL7PTB9unuoXidOGPla/+my7Wue
dY/sTa8eIhau2H7AluQmZZTfjjdr81tpgxmTBAAAiEUTutJ4875bvV0D4djn
6fa3Nouj/lp9U1PTjfb2uE+2Qkb5jRa+AAAAlsskvyktfHVLGCy+fw8AAGCi
ySS/5dd16vNbVWefGfMEAACAlEl+U1r4ems1uzBYs+0XAADAhJVJflNa+Oq2
0KKFLwAAgKkyyW+B4ID++uk8X4cZ8wQAAICUSX4bpIUvAACA5TLNb7TwBQAA
sFam+Y0WvgAAANbKNL/RwhcAAMBaGea3medv0MIXAADAShnmN1r4AgAAWCzD
/EYLXwAAAItlmN9o4QsAAGCxDPMbLXwBAAAslmF+G6SFLwAAgLUMyG+08AUA
ALCQAfmNFr4AAAAWMiC/0cIXAADAQpnnN1r4AgAAWCnz/EYLXwAAACtlnt/2
NvXoW8DRwhcAAMAkmec3pYWvrv62sbbH2HkCAABAyjy/RWnh66WFLwAAgFky
z2+DtPAFAACwkDH5jRa+AAAAVjEmv9HCFwAAwCrG5Dda+AIAAFjFkPw2z9dB
C18AAABrGJLfaOELAABgGUPyW2FL0OWt1XTxpYUvAACAGQzJb0oLX90WDPl1
nQbOEwAAAJIh+a1rIKy/fjrz/A0D5wkAAADJkPw2SAtfAAAAqxiW32jhCwAA
YAnD8hstfAEAACxhWH6jhS8AAIAljMpvUVv4BoIDRs0TAAAAklH5bWNtj76F
SEUv+Q0AAMBgRuU3pYWvrv62t6nHqHkCAABAMiq/KS18dfltzVe08AUAADCY
UfktagvfvGpa+AIAABjMqPw2GLWFb0WLIZMEAACAysj8VtqgXcJAC18AAACj
GZnfyv3a+ltJvSGTBAAAgMrI/EYLXwAAAPMZmN+eukALXwAAANMZmN+itvA9
1h40ZJ4AAACQDMxvh1pu6etvBY23DZknAAAAJAPzm693QJ/fVtbeNGSeAAAA
kAzMb6FQv/76qetcuyHzBAAAgGRgfhNcxVdp4QsAAGAqg/Pb0UZtfjvamPlp
AQAAoDI4v33eTAtfAAAAUxmc3860afObty7z0wIAAEBlbH5bUvONfgnq9d7+
zM8MAAAAydj89sa1Lv0S1FI/LeAAAIBl2qo/fGvF9gNdA2Gjz9ztP11WtGtH
/qv5q1evFo873iuuausLhawuVRmb30oCt7T5zVu3taE78zMDAAAk0i2S2+L7
prpzcu6Ys60xZGR+CxzbuXyy2+PxiJNPy8sTL4hH8bI47ly8xeJqlbH57XJP
v/766ZKabzI/MwAAQGzDyU2mGpGsXP/wX0a1oA2F+n2bfyoCmzz5fdv332hv
7xoIhwIn3lo46d557gemTxcpbvMp63puGJvfhCgtfM+0GXJmAAAAneHkJqth
SqoZYmB+CxStlGFJHHP3Xxx7tbT73Rdnyvwmjk2Xbhk0ZgLG5zd9C99yvyFn
BgAAGCNY85t73CK5LXpl/fY1z+ZOnaMGLaPyW7j2fbXy5np+b5Rrsl0nlOuq
su43edXRLiNGTcT4/Ha0UVuCo4UvAAAwRdux//t5tb9T/s/ZDY/JO9OMy29t
xYvuUjPh+tPRd3X/etcznhGujX80YNhEjM9vFS3a+lvxVUPODAAAEEfT7qWj
tTJD8lv1HvWEd8zZFrOnrf/T+e7hjJc75UeFLcHMR47P+Pymb+FbVBcMG76A
FwAAYAwlvxl6/fTshsfc6gk3VcR+YtuhH0xS777L2Xcp45ETMDy/ray9qc9v
vt4BQ04OAAAQi8H5LXj29bunqCdcerw51hNDof4Lv50v+4qIR9eTBca2LtEz
PL8VNN52eWs1t8AdarFoOQYAAJiwjM1v/V9uVe+m8yRaWxooWinDm3jMdS8Q
cSizwRMwPL8daw/qW4isOs8SVAAAYC5j85uyKmHkbNMmryqLX4uq3qPW38Sx
5HSHqZsyGJ7fAsEB3Rb2teK94BY4AABgKkPzW3fZor+JPFuCS6KdJ9UuIsol
1J3nMho8EcPzm+A6eCVy/yzlqAoYdXIAAICojMxv4YaChyencLbbJ39zj3v0
+b/6yITdV0eZkt9K6rWXUGPf8gcAAGAII/NbRD0tnfyWsF6XGVPy2/Fm7SXU
0gajTg4AABCVkflNl8dSzW9G7d4VlSn57WSrNr8dvGLUyQEAAKLKxvxWf63+
tbVrUz1+tmSJHOihGTPSePPdBQX6mcw8f0PfAi4QpAUcAAAwUTbmt8rKSk8a
RgZK5209noVP/1g/k/y6Tn1+q6CFLwAAMFOW5jfZdcRj4RE1vxW2BPX5bW9T
T+ofOwAAgGQ5KL89vzfJ0evq6lanTgQw2Vv4oRkz0njzN998Uz+Tqs4+fX5b
81Vn6h87AACAZBmb35y8/rSkpEReCZ3z6KNGnbNrIKzPb/f+2dR1GAAAYKIz
tH9vW/Giu1Kop2nyW7zN7g1gxvpTwVV8VRvhKloMPD8AAICGsfsvlL/sUs92
5+ItdXGfHQqcGK3XeTw5+y5lNHgiZuW3suva/EYLXwAAYCZj9z8NvLPCM7If
Vt79z8Xf/7Tv1O7Ize431pp7279Z+a3cr81vJfUGnh8AAEDD2PwWrn1fbkkv
S2rxI1nLOy+oQ0+bvOpoV2ZjJ2JWfqsK6Haxj193BAAAyIix+W0wWLPDdb8s
qYkgN3f/xWA4+pKEUKj/7IbH3CMXT12vlsV6plFMym9Lar7RL2G43ttv4BAA
AACRDM5vg4Nf73pm+JJo/FQWrNn87SmyWCce15++mfHICZiU39641qXdwr6o
rtR/28AhAAAAIqWX37qqS7zewkOlX0Tp+OH/dL579KpozFvgqveo4e1v73rT
Z/6eBSblNxHVtPnNW7e1odvAIQAAACIpN6GNrCBIsoNuoGile6i8pgSwezbo
t4v6etcz7pFVDK4PrujPEAr1/+EX31Jz40tftBnwniRiUn673NOvr78tOd1h
4BAAAACR/vTKLHUR6B1ztiW+8z5Y8/rdU0Y3lvJ4oqSvcEPRrO/Ic+bd/1xh
S1Dz+v4vt6qDujZVmH3nm2RSfhP09TdXVcDYIQAAAKTAsZ2aXUTzPz7fNRA3
TXWO2WRBCWA7z+mfFQqcEDFPXiG9Y86/HmsfjXBd1SWL75s6HN6e32vZWk0T
81tJvXYJQ7nf2CEAAMBEFgr1V3/41r//8snljz+o2aJdxq3cqU8semX9r/9l
i/7C6JC2olnfSapvW7Cm4OHJ985zyzLdonU7vd7Cd1+cmTt1jnzD76/7vakb
ZmmYmN+ON2vzW9l1Y4cAAAATmcxvb7/14e6CAhGoNI/79u07/Pvd4gXxhFhr
CrqqS0T2e2D6dPdQvU6cMM5Y4smv/nyRulRBHEo+XLfz44utpr2L0ZmY3ypa
tPnt4BVjhwAAAIgTupJ8875bvV0D4YTnkU8QT/a3Njc1NbW2tia4Pmsa8/Jb
XvUNfQs4u95NAACAccO8/Lbmq059fqvq7DN2FAAAgInGvPxW2BJ0eWs1q1D3
Npm7nSsAAMC4Z15+q+rs07eAW/NVp7GjAAAATDTm5beugbD++mle9Q1jRwEA
AJhozMtvguuDK9oIV9Fi+CgAAAATirn5rey6Nr8dbTR8FAAAgAnF3PxW7tfm
t5J6w0cBAACYUMzNb2fatPnNa9nOYAAAAOOTqfltSc03+iUMl3syapIMAAAw
wZma37Y2dOvzW0ngluEDAQAATBym5rdj7UF9fnvjWpfhAwEAAEwcpua3xlBY
vwXDUxc6DB8IAABg4jA1vwlKeNPswnCy1YyBAAAAJgjT81tJvfYS6ufNZgwE
AAAwQZie3443a/NbaYMZAwEAAEwQpue3k63a/HbwihkDAQAATBBm57d5vg79
EtRAcMCMsQAAACYCs/Pbxtoe7fqForryjj4zxgIAAJgIzM5vh1pu6etvBY23
zRgLAABgIjA7v/l6B/T5bdmlm2aMBQAAMBGYnd+C4bD++qnrTJsZYwEAAEwE
Zuc3wVV8VZvfyv0mjQUAADDuWZHfjjZqS3BHG00aCwAAYNyzIr9VtGjrb8VX
TRoLAABg3LMiv51r1y9h6BoImzQcAADA+GZBflvzVac+v1V10gIOAAAgHRbk
t71NPfr8VtgSNGk4AACA8c2C/FbV2afPb2u+6jRpOAAAgPHNgvzWNRDW57e8
6hsmDQcAADC+WZDfBqO2gKtoMW84AACAccyi/FZ2XZvfaAEHAACQFovyW7lf
28K3pN684QAAAMYxi/LbmTb9LXDBMC3gAAAAUmZNflt26aY+v/l6B8wbEQAA
YLyyJr8VNN52eWs1l1BpAQcAAJAGa/JbeUeUFnD5dbSAAwAASJk1+S0QHNDn
t5nnaQEHAACQMmvym+A6eIUWcAAAAJmzLr/pW8AdbzZ1RAAAgHHJuvxW7tfm
t+Krpo4IAAAwLlmX3/Qt4Lx1po4IAAAwLlmW32gBBwAAYAjL8lvUFnCHWm6Z
OigAAMD4Y1l+i9oCbmNtj6mDAgAAjD+W5bcoLeC8dfN8HaYOCgAAMP5Ylt8G
aQEHAABgBEvzW2kDLeAAAAAyZGl+owUcAABAxizNb7SAAwAAyJiV+Y0WcAAA
AJmzMr/RAg4AACBzVuY3WsABAABkzsr8FrUF3MzzN8weFwAAYDyxMr8N0gIO
AAAgY1bnt7Lr2vx2tNGCcQEAAMYNq/ObvgVcSb0F4wIAAFggcPFc10DY7FGs
zm/6FnBFdcGw6e8mAAAY17r9p8uKdu3IfzV/9erV4nHHe8VVbX2hUL+BY4iz
dcfVcnjdtLy8/d0GjhmdxfltZS0t4AAAgJECx3Yun+z2eDzunBwRn8QL4lG8
LI47F28p9d82aqALv50vz6xkp6Hh1BfUEV1LvYGg6cHG4vy2t6lHn98KW4IW
DA0AAMaZUKjft/mnIkHJMHPf9v032tu7BsKhwIm3Fk66d577genTRabafMqI
m+07TyopUWa22MdLX7QZMFYiFue3qs4oLeDWfNVpwdAAAGCcCRStVIPT3P0X
x14t7X73xZkyv4lj06VM9wtoeeeFhOFt2j0brLmqaHF+E5FYn99c59otGBoA
AIwn4dr31cqb6/m9jSHd7fRdJ9SK2bTJq452ZTBYsGbzt6ckyG8ej8iQGYyR
Aovzm+AqvkoLOAAAkJm24kV3qdlp/embUZ/09a5nPCNcG/+Y9mA9n2yUd7tt
unQrFOqPevTd6k37/KmyIb8dbaQFHAAAyEj1HrX4dsecbXWxnub/dL57OOPl
TvlRmrfchxsKHp48LS/PtdRrQW+QZNiQ3ypatPmt+Ko1QwMAgPHh7IbH3CPF
N9emithPbDv0g0nqQtGcfZfSGKv/y63iDLlTn8j8JjqjWJ/f7v1zu/4WOIek
WQAAkAWCZ1+/e/RutKXHm2M9MRTqv/Db+Wp/D9eTBVFuk0tASYBKW5KcnC1H
vvzz5fob7fbft299fsuv69Tnt6rOPmtGBwAA2a7/y62yz5tn5J60OE8OFK2U
4U085roXFDSm2A5OXqgd4h4q4onz/NX3n12x/UC137YGGtbnt8KWoD6/pfzB
BAAAE5WyKkFt2TF5VVn8q5rVeyL76y453ZH8pgzimX/4xbf060zF2WSAXLRu
Z3mHDTUo6/Obr3dAn9+WXYq+bAQAAGCs7rJFf6OmKdc//FeCS6IRfXeVS6g7
z6UwVP3BqH1C3CNnk9dVV+w/m+G7lCrr81swHHZ5dS3gzljRrBgAAGS9odWg
kfktwe1ot0/+5p7RfRNcv/oo+bvuw7Xv/+TxHy5//MHcqXNi9XyTj671B6y8
K876/Ca4Suq1+a3cb9noAAAgi43dxyrl/JawXjdWMBwWx+BgW+DiuVOfHXn3
xZlRstxQRc71dpxlsAazJ78db9bmt9IGy0YHAABZTJfHUs1vaRfKugaULNdz
3Vf53mtqW7nRQpzHY1mDEXvy28lWbX47eMWy0QEAQBazL7+NEawpWfWIe2yE
i9dJOAafz7cgdd+bO1deup2Wl5fGm69csSKN9/ipCx36JQyp92MBAAATj0Py
29Dq1L/sfnm0k4nHk0Z/ksrKSrURSrLHyAKKNA+PZ+HTP07j/X3jWpc+v5X6
aSECAAAScUx+k85ueExtTiKOl75IbUmmyG+RveysOdLLb8fadS3gvHUi1KVx
KgAAMLFkmN+e32vwQtFgjdwMQvYSSa0/yeBga2vrvtS9tnatjHwPzZiRxpt/
Ulqaxjt6vbdfX3976kJHGqcCAAATy21L158mQ93iIY38lp4PP/xQ5rc5jz5q
wXAq18Er2gh3stXKCQAAgOzUVrzorhTqaZr8Fm+z+3SNbPGgNIKzJL+VlJRY
v/5UcJU2aPNb7M1nAQAARnSXv+xS89idi7fEX/IZCpwYrdd5PDn7Lhk/I9mS
bqggZk1+s6V/iOAq92vzW/FVKycAAACyVOCdFTK9uHNy8u5/Lv7+p32ndkcu
ENhY22P8hCJKfOM8v51p0y9hGOpvDAAAEE+49n1171GRy+JHspZ3XlCLddMm
rzpqwnLJUODE4vumyiGWnLbifn678tvK2pv6JQy+3gEr5wAAALJSsGaH635Z
UhNBbu7+i7FKQKFQ/9kNj7lHLp66Xi0zpVg0dP+bGCJ3yo8KW4LGn1/Hrvy2
t6lHn9+seZcBAEC2+3rXM6N7x8dJZcGazd+eIot14nH96ZtmTMa3+afDixeW
ersGrLiYaFd+q+rs0+e3NV91WjkHAACQrfyfqjuQTpu8KuYtcCMrQ8Xj3971
ZtQrfV3VJV5v4aHSL9LsK9J1Ql28YMrNddHYld9ETtbnN9eZ1FoWAwCACevr
Xc+4R1YxuD64on9CKNT/h198S735LerOCIGile6RHamm3bOhIiLgiVz37798
8ieP/3DRup2HqmpiFNa6//TKLBM7k8RgV34TXMVXtfmt3G/xHAAAQLYKNxTN
+o4sfOXd/5z+Lqz+L7eqK09FuIpyjXVk6wS1u0hExus+/OxduVPnyF2xxHnu
XLylQlu+6/7jvy1Q29ClunN9JuzMb8ebtfmt7LrFcwAAANkrFDghApjMV3fM
+ddj7aMRrqu6RFkTKsNbrHDVOWYrh7HdP5T8pl57lQW6XPeC/I/P32hvF6/1
ny57a+EkWQBcuOdza257U9mZ3ypaXN6x+e3gFYvnAAAAsluwpuDhyffOc8sC
2qJ1O73ewndfnJk7dY5MON9f9/vYN7a1Fc36TqzucD2fbIzcVl4txLkj/te1
+LWPL9qwgZSN+W2er0Ob34rqDN+SDAAAjG+hUH9XdcmrP1+k5iulVjb1CZHl
EoYr8YbLH3/wgenTxZvkf3xenCrytf7TZdvXPDvaa27kECdfsf2ALclNsjG/
vXGtS7+EoSQQt4cyAACAjsxdfbd6/a3NTU1Nra2tyV/QFG8r3lA8XxPeInSL
04qj/lq9OPmN9va4T7aCjfntWHtQn99EqLN4GgAAANnFxvzWGAq7vLWaS6jz
fFbsOgEAAJC9bMxvguvgFW0JrqLF+mkAAABkEZvzW9l1bX472mj9NAAAALKI
zfmtokWb34qvWj8NAACALGJzfjvXrl/CYHEHPAAAgOxib37Lr+vU5zfd5hQA
AAAYZW9+O9RyS5/fChpvWz8TAACAbGFvfrvc06/Pb0tO00IEAAAgJnvzm6Dd
Qkv8b1XAlpkAAABkBfvzW0m9NsIdb7ZlJgAAAFnB/vxW7tdeQi2pt2UmAAAA
WcH+/HamTZvfvHXBMC1EAAAAorM9v62svalfwlDV2WfLZAAAAJzP9vxW2BLU
72K/t6nHlskAAAA4n+35zdc7oM9vyy7dtGUyAAAAzmd7fhvUtxApooUIAABA
TI7IbyX12vxGCxEAAIAYHJHfjjdrS3C0EAEAAIjBEfmtKkALEQAAgCQ5Ib8t
uxSlhYivd8Cu+QAAADiZE/Lb3qYefX6jhQgAAEBUTshvVZ19+vxGCxEAAICo
nJDfguFwlBYiZ9rsmg8AAICTOSG/DdJCBAAAIGlOyW+0EAEAAEiOU/LbmTZa
iAAAACTDIfltZW2UFiJVnX02TgkAAMCZHJLflBYiuiUMtBABAADQc0h+8/UO
6OtvS2q+sXFKAAAAzuSQ/CZEaSFystXeKQEAADiQg/JbSb02wtFCBAAAQMdB
+a3cr62/FV+1d0oAAAAO5KD8pm8hUlTXNUALEQAAgDGck9/WfNWpz2/lHbQQ
AQAAGMM5+e1Qyy19ftva0G3vrAAAAJzGOfntck+/fgnqUxc67J0VAACA0zgn
vwmug1e0JbiKFrsnBQAA4CzOym9l17X57Wij3ZMCAABwFmflt4oWbX47eMXu
SQEAADiLo/LbzPM39EsYGkO0EAEAABjlqPz2xrUufX4rCdyye14AAAAO4qj8
dqw9qM9v+XWdds8LAADAQRyV37oGwvr85jrTZve8AAAAHMRR+U1wFV/V5rdy
v92TAgAAcBDH5bfjzdr8VlJv96QAAAAcxHH57WQrLUQAAADicFp+W3bppv4W
uKpOdrEHAAAY5rT8trepR5/fChpv2z0vAAAAp3BaflN2sdflN3axBwAAUDkt
vw1G3cX+ZKvdkwIAAHAKJ+a30gZ2sQcAAIjFifmNXewBAABic2B+i7qL/fXe
frvnhWFdA+FDLbeW1HyjNHv5vNl1tFEpmZbUK49l15X/Pd7sKvcrOfxM2zxf
R35dZ2FLsKqtr93umQMAMD44ML9F3cVeBAa75zXRVfQOiDCmxDP5SfHqdjqL
emieVnxVSXcnW1fW3iwJ3AoEB+x+twAAyD4OzG/lHX36GLDmq/G/i/2bb775
0IwZD0yf/o/Lltk9l1FdA2GRtaLclGjUUVIv4pz4/Ip8aPf7OurVny/67sxH
xOdCfFLsnstE9725c+X3xSelpXbPZUJrbW0VnwX5uairq7N7OsBE58D8NmF3
sRdRwSPk5Cx94QW756IIBAfyqm8oy4GTLLVleHhrlepcuV9kOZ+tWS4YDosI
7c7JmZaXR36z3cOzZ8ufUSUlJXbPZUJramqSnwhxkN8A2zkwvwlKTUbzy/14
s92TMp2S34Y+F7bnNxGhn7rQYV1yk5dZvWOvt5Y2iNBeErDnurn4FCifC4+H
/GY78ptDKPlt6A9M8hucqtt/uqxo1478V/NXr14tHne8V1zV1hcKGXv/vDWj
JObQ/Kbfxb74qt2TMp1D8lthS1DJz5Ylt4RH8VXrg9xwfsvJIb/ZjvzmENTf
4GSBYzuXT3aLvzDkpRPxgngUL4vjzsVbSv3G7OJkzShJcmh+O9Om/z3eNRC2
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
Nxn5l8iV4xx2HmZ/d6Q7K/E1o+5brXlZfPGoh+ZV6nHvPLf6757IH3oj/zvm
+zTaTwl3xE/L6Jkh4us508fIWUX9SRL3m8uUKTnvcfSzluLXkuYzG/kqtTT3
SWlpK6W5wXGY38bT75rhv0Q4ODI50vh2iHyTWL8QOTgiDnfEz6vIlzW/ytVX
qY9u/ZuMPZL5MWj9j0p+ONvw8Rn7s2jh0z8+cOBActFgnBp3+c32r1sDv1bH
TRDl4OAY/8fY2K++rP1VHinWm2uenHBci39U8sPZjo+P+EISme21tWtFbLt8
+XJyoWBcyzBZPb/XivyW5ChD979dunTpcm1tSoe6Umb2zFmpvq0Fh3I7x/93
fMzxdoXtszLpEN+b8nMhvk8zP5vP51PuxNj2kWuT9nHu/ovitXV1dWl8wYyP
Q7zj2/5Uo3x1ydt4thzVPP7V95+Vf+26Fr/mekP7WvFW4m0XH7l8qKpmon0k
xXtaceGieMfFB1Ac+R+fFx8H8dFQD+XjI7/won1g03j87sxHhj8X/7xV+9OA
w8pj20eju0CuPxD1ZwuPw4/rD4y5fyOt4+HZs1/9+aK3d/yusrKSfnFaty1Z
GWrNKOly8vpTQVl2FLmEcGibcmfu7pQ5Zf3p0De7IetPRz90smGv+nJFS3pb
go5L4mspv65TWZw7djnq/1j2S4+8T1vktw+ujFnK6h1Zsir/UXxIjzfP83UU
tgSv92b9PcZdA2Ff78ChlltbG7pX1t6cef6Gsriv3K98iEobRps/y/ddPMoP
zgdXhv9xaEVzai1cEh2T/n62/FXoWvcfBp6WI7VDfHLfrlBv8VKidZHuZ0uG
L6uP6lF8dfhRf5TUDz/qD/GFWnZdeUF9lP8iH2Md4is88jGzQ/wBKG9rTK/I
9uGHH9Zfqxc/qPlZHVtb8aK7Uqh0aZJVvG3orR8lTQ7Pb8rvVt1PkpJAtnaa
jc/A/iEba3si8kZE9iipH8cNWDIhQouSVWR/4/+sET9+5ZUvJb+pv2VGf5fV
RfnHkY+wSDsizon8I87pwB+/akJ741rXkppvlP4MFS3KLx0x84MjSVXzR5P2
V7l61EYckf9iZHKQ+U35XIj8ZuiZnXWo0SUyosg0IoOHzAZqnwq104XaJUNt
qSH+dpOdN86151UrDTrEF+RTFzqWnFYO2dBDhPM1XymNPsTPCtn9QzYDEUdB
421x7G3qkW1DxCFbiHx8sVUNJIeqaso7+sQhG4+IQ/YhkT1JxCH+lpFdSsQh
m5bIBibyEN8X43hBpddbqC5gSVh/m/PooytXrNhdUECRLUXd5S+71A/jnYu3
xO9IGAqcGK2kic/JviS77VkzSpocnt+OtQf1P+jEzxy752UKo/Kbsj29uqVU
5O/iD674dI1qoaHsD3uuXdbflDqDyG8Hr6SfScTbDiU68ctUfN2K34ni/BaU
6cSvTvG7VQwn/gIarqGJ3/iygBYrPGheSCZveMdG2TixNoND5DePNflNJqjI
4CRTk5qXImPSUEAS6UhEIyUX1XwjEpH4aIs4JIKQjEAy/Ii/N2VHNfGpr2rr
kyFHZhsZZsz+YjBK/bV6dXU2/XtjaW1tFZFM/Q0ep9QmYtupz4448E+8bBF4
Z3irMhGV8+5/Lv7OpH2ndkfGafF96qhR0uPw/CZ+uEX5MVsVsHtepjAkvymt
esUvnWi/npLfvX2CC4X6f7ZkiVweKIJcaqkmTjTS5ASREEQ2kKngTJsSA2q+
ERlP/vZXqx+HWm6JABDZSVW8dmtDt/jJIAKDSA5K41PZv1QmNBE/vHVRLvhm
7RElv0UGLfEuayKWDFfn2uWHVMYq9aMqPoal/tsyStUNdXsOBJ1YJnUgkUzU
+hv5LRb1NuZYx4IFC3YXFNADJHPh2vfdEU3z4oellndeGA3Pk1cdTXqvb2tG
SY/D85ug/IjW/Eg/3mz3pExhSH5TGphH+yWYV32DX1LJk/tnie9Z8Um53NOv
XMcX2SBW8cqkQ95OFvUfvXGLXSYUwYw/1AAm01dE9BK5a9mlmzLKisT1dzOH
89uO94rlZTi7vzomKPbPSihOFy/x76tXrxZPGMcXjq0WrNnhul9+tEXEmrv/
YqzfceJjfnbDY2qjQterZSn8NrRmlLRkQX4TP9h1P/ntnpQpMs9vygagUX9X
Hm8mvKVE7p/lHrt/lvgYlgRuKZcjY21GZmR4i33jme3RK1YeU8PYSBJ76kLH
ytqbMoaJD13F0KXDVNcfDe+/4PEcOXLE6M8zUsD+9QktfPrH+jULFNzM8/Wu
Z0bX1MTJS8Gazd+e4h5purj+9E0HjpIG5+c35del7peF+C1g97yMl2F+U3ao
19cqi5Tb3sbBukiLJdy/vmsgLNLyPF+HElcsrsvZFczEX1IilZ1rX1Lzzcba
HhnJqjr7zF4Pzv6nDkH9LT4R0iLb/T00Y4YsuNk9r3HN/+l89+j1ypg3p1Xv
UWPV3971ZtT7wLuqS7zewkOlX0Tp+GHcKMZyfn7b2tCt/50yLm/lyjC/Kb9b
o/3+LWi8bfhUx71U968XMeaNa13KbVci53yQVXHOWzcczz5vFl9CIpHm13WK
r5lS/23xV5ITLlaS3xyC+lscrUMb9cri2/LHH9zxXvGN9iRbtyIjX+96Rt3H
RPzs1T8hFOr/wy++pebql75o0z8nULRS3YFu2j0bKnTRy5BRDOf8/CZCrP6X
zlMXOuyel/EyyW+FLcHoayRPUrRPR8L6W3wi+Yg/MZTuHHLhZ9S6qMU1tNIG
ZSYnW2eevyFXwh5rD5raW9Io5DeHoP4WR/6r+ffOc4vHyspKJ/zVM4GEG4pm
fUf+ZZF3/3PiV6Hm9f1fblVvSnRtqohy9TNY8/rdU0YveXs8UdJX5qOYwPn5
TVlQqb8+VdFi97yMl3Z+U66cylWHmo8S3d7SlWr9LSHZdU1812+s7VGuusqm
uJErRjMpoGlWsw5d4nzjWtehFuX6ZrZ/DZDfHIL6WyyhUL/XW0jBzS6hwAkR
wOS1yzvm/Kv4y1R9VVd1yeL7pg7Hquf3Rv+q7RyzyYLyzJ3njB/FBM7Pb0KU
hhilDXZPynhp57dYV07Ha6NjC2RYf0uD+DtF5PDLPf0icYmfDKX+27JniNpD
Ve0lIl5b3jHcRizbs1kyyG8OQf0NzhWsKXh48r3z3LKAtmjdTpGo331xZu7U
OfIr9vvrfh/7ckNb0azvJNW3LaNRjJcd+U2fT7x1429BZXr5TblyGrUsc8aK
6+/jleH1N6SN/OYQ1N/gZKFQf1d1yas/X6QuIhBH7tQnRMr6+GKC+4jEGy5/
/EG55Vn+x+fj9HjJZBTDZUV+W3bppj6fRFYvx4c08ptycVlu+aSrT06Eyox5
rK+/IRbym0NQf4PDydzVd6vX39osvlxbW1uT/z0o3la8oXh+wgZ9mYxirKzI
b1HbmuXXjbddtNLIb8qdVFw5NQH1N+cgvzkE9TfAUbIivyn350+A64Op5rfh
lbn64tu4+8hYj/qbc5DfHIL6G+AoWZHfBifGLlqp5jdl9aI+1rLm1AjU35yD
/OYQ1N8AR8ma/DYBdtFKKb8p3WKjXTkdl52NrUf9zTnIbw5B/Q1wlGzJb1Fv
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
    "], {{0, 770}, {832, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->216,
  ImageSizeRaw->{832, 770},
  PlotRange->{{0, 832}, {0, 770}}]], "Output",ExpressionUUID->"503a6367-c8d0-\
4141-9674-2f9162eff2f9"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "93cdcc0c-b33d-492b-8f5b-4c0f7435fc54"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "209713e0-c751-41b8-9fcd-cb9e4e1fdfaf"],
 StyleBox["38.\tThe sinc function",
  FontWeight->"Bold"],
 "  The sinc function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sinc", " ", 
     RowBox[{"(", "x", ")"}]}], "=", 
    FractionBox[
     RowBox[{"sin", " ", "x"}], "x"]}], TraditionalForm]],ExpressionUUID->
  "95d3686e-3bc0-4672-8c1c-70f037d9636b"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[NotEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "7ee6220f-6b22-41fc-990c-28ab2135c33e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sinc", " ", 
     RowBox[{"(", "0", ")"}]}], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "693399ce-eda8-4227-a8be-b30e7fe8650b"],
 ", appears frequently in signal-processing applications."
}], "TProblem",ExpressionUUID->"9c0df975-f340-4898-9d4d-ad1efdfbe385"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tGraph the sinc function on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "]"}], TraditionalForm]],ExpressionUUID->
  "9b5a3172-c015-4d42-aa9c-906d0526b3f3"],
 "."
}], "SubProblem",ExpressionUUID->"e2a6a3d4-ab57-4188-9c50-51d39416d9a5"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tLocate the first local minimum and the first local maximum of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sinc", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "63ba0b71-efee-4436-84b3-83ac028758ea"],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "2be80df3-a2c8-408f-8ec2-e6a75ce3d6f6"],
 "."
}], "SubProblem",ExpressionUUID->"a44bf4c9-7a6e-403a-80b7-abcd978aca34"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "77337009-e91b-4ede-af81-98e61cb08ed1"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "17cbf62d-4dd2-4a6c-97cb-0943822f6f67"],
 StyleBox["39\[Dash]42. Estimating roots",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  ",
 StyleBox["The values of various roots can be approximated using Newton\
\[CloseCurlyQuote]s method.",
  FontSlant->"Italic"],
 " For example, to approximate the value of  ",
 Cell[BoxData[
  FormBox[
   RadicalBox["10", "3"], TraditionalForm]],ExpressionUUID->
  "3e820285-e875-4fdf-bead-2f07059c4267"],
 ", we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RadicalBox["10", "3"]}], TraditionalForm]],ExpressionUUID->
  "6ec9a81f-0350-4a0f-aa97-c378f17aa2c3"],
 " and cube both sides of the equation to obtain ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "=", "10"}], TraditionalForm]],ExpressionUUID->
  "75440a53-9245-47a8-ba37-7c43caa50f70"],
 ", or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "3"], "-", "10"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"ee663a3f-ac6a-4848-9c26-cccc81758b71"],
 ".  Therefore, ",
 Cell[BoxData[
  FormBox[
   RadicalBox["10", "3"], TraditionalForm]],ExpressionUUID->
  "ed9554c7-e26b-43b4-9c78-8454ec188ecf"],
 " is a root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "3"], "-", "10"}]}], TraditionalForm]],
  ExpressionUUID->"530770de-c9f3-4386-8e80-b356266f3bb0"],
 ", which we can approximate by applying Newton\[CloseCurlyQuote]s method. \
Approximate each value of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "91979030-11b1-43c4-bce0-d43a1a92a12e"],
 " by first finding a polynomial with integer coefficients that has a root r. \
Use an appropriate value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"0d45f5f0-3e22-411e-bbcb-c16bce435cc6"],
 " and stop calculating approximations when two successive approximations \
agree to five digits to the right of the decimal point after rounding. "
}], "TExerciseDirectionsCell",ExpressionUUID->"4e288213-b4d9-4180-a0c8-\
7ea13390e811"],

Cell[TextData[{
 StyleBox["39.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SuperscriptBox["7", 
     RowBox[{"1", "/", "4"}]]}], TraditionalForm]],ExpressionUUID->
  "e92d285a-fc9c-4781-9e33-0ace0239b599"]
}], "Problem",ExpressionUUID->"1fafb667-783b-48ab-90e7-3c0bb64f9691"],

Cell[TextData[{
 StyleBox["40.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SuperscriptBox["2", 
     RowBox[{"1", "/", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "08eba143-0b41-4ed7-bbc7-61f57ae2cf77"]
}], "Problem",ExpressionUUID->"64f2126a-00ea-4053-a3f8-58ba2e1016c5"],

Cell[TextData[{
 StyleBox["41.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "9"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], TraditionalForm]],ExpressionUUID->
  "eb3f5d2b-09de-4bb6-9c29-5c4f5f3bb7bd"]
}], "Problem",ExpressionUUID->"663a7617-ab6e-4769-924f-02697281e1cc"],

Cell[TextData[{
 StyleBox["42.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "67"}], ")"}], 
     RowBox[{"1", "/", "5"}]]}], TraditionalForm]],ExpressionUUID->
  "3a9aecc5-3b79-4f11-bb16-74dd5665b0aa"]
}], "Problem",ExpressionUUID->"b0aff130-78ed-45f0-a7ca-326e76c8f8b3"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "0d73a604-2342-43bd-87af-edae79dc25ab"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "cd28b5b7-12c6-4a9c-99f0-56e277ce79bc"],
 StyleBox["43\[Dash]46. Newton\[CloseCurlyQuote]s method and curve sketching",
  
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Use Newton\[CloseCurlyQuote]s method to find approximate answers to the \
following questions."
}], "TExerciseDirectionsCell",ExpressionUUID->"36f5853a-7cc8-4e74-9e88-\
bad47bfc0162"],

Cell[TextData[{
 StyleBox["43.",
  FontWeight->"Bold"],
 "\tWhere is the first local minimum of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{"cos", " ", "x"}], "x"]}], TraditionalForm]],ExpressionUUID->
  "ed0b2bac-3023-4016-bd04-a036d87f2c04"],
 " on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "\[Infinity]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"7ce06092-d453-4fc6-9116-fa344c6aa587"],
 " located?"
}], "Problem",ExpressionUUID->"a0ddfbf6-7c12-4405-98d1-ae7485ceb58f"],

Cell[TextData[{
 StyleBox["44.",
  FontWeight->"Bold"],
 "\tWhere are all the local extrema of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "4"]}], "+", 
     RowBox[{"8", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"12", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"48", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "44d2545d-c7ec-4a58-8881-55d75942a448"],
 " located?"
}], "Problem",ExpressionUUID->"83b29e2c-9a70-4e86-87f5-3ee5a1c99800"],

Cell[TextData[{
 StyleBox["45.",
  FontWeight->"Bold"],
 "\tWhere are the inflection points of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["9", "5"], 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{
      FractionBox["15", "2"], 
      SuperscriptBox["x", "4"]}], "+", 
     RowBox[{
      FractionBox["7", "3"], 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"30", 
      SuperscriptBox["x", "2"]}], "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"4c3118a3-6ab2-4bf2-807f-084376fc9930"],
 " located?"
}], "Problem",ExpressionUUID->"3f62f022-23a8-43cc-b071-2d7b55c162b5"],

Cell[TextData[{
 StyleBox["46.",
  FontWeight->"Bold"],
 "\tWhere is the local extremum of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     SuperscriptBox["e", "x"], "x"]}], TraditionalForm]],ExpressionUUID->
  "aa3734bc-30ce-4f60-b569-5ee564fdd124"],
 " located?"
}], "Problem",ExpressionUUID->"6f7d957d-0cfa-4f66-8d90-25ee7b75d817"],

Cell[TextData[{
 StyleBox["47.",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Explain why or why not",
  FontWeight->"Bold"],
 "  Determine whether the following statements are true and give an \
explanation or counterexample."
}], "Problem",ExpressionUUID->"1535b474-fab9-4f05-bc49-7431ef6a6f3c"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tNewton\[CloseCurlyQuote]s method is an example of a numerical method for \
approximating the roots of a function."
}], "SubProblem",ExpressionUUID->"7f62cc5e-835c-414e-9b04-a665d892cf66"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tNewton\[CloseCurlyQuote]s method gives better approximations to the roots \
of a quadratic equation than the quadratic formula."
}], "SubProblem",ExpressionUUID->"639a9dcd-fbfb-4618-bb8e-30888644fe89"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tNewton\[CloseCurlyQuote]s method always finds an approximate root of a \
function."
}], "SubProblem",ExpressionUUID->"63a931b0-f2e1-4447-a66d-2d066010bf95"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "f1dcb984-998f-47d2-9d9b-70013d0c8230"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "d872eb2f-a75a-4b28-8309-4274453359da"],
 StyleBox["48\[Dash]51. Fixed points",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  An important question about many functions concerns the existence and \
location of fixed points. A ",
 StyleBox["fixed point",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 " of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "127a853f-d5b0-41b4-8908-74e0dc12558d"],
 " is a value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c6a3a06d-ea14-4def-9315-08ed4320f1be"],
 " that satisfies the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "x"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"489d63fd-47ea-423a-a48f-4bd2bb283084"],
 "; it corresponds to a point at which the graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9f360f58-0c6c-4c70-a5c0-12c583fb7c33"],
 " intersects the line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", "x"}], TraditionalForm]],
  FontSlant->"Plain",ExpressionUUID->"67449f10-5708-4ad3-84a4-b2366318b0f6"],
 ". Find all the fixed points of the following functions. Use preliminary \
analysis and graphing to determine good initial approximations."
}], "TExerciseDirectionsCell",ExpressionUUID->"d351c4d0-a0bc-4443-9f4a-\
18c62f9a6e73"],

Cell[TextData[{
 StyleBox["48.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "3"], "-", 
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}], "+", "x", "+", "1"}]}], TraditionalForm]],
  ExpressionUUID->"f8315036-89eb-411d-8bf8-ed660bd3f84c"]
}], "Problem",ExpressionUUID->"8b12430e-a475-432c-99f8-283c230115b8"],

Cell[TextData[{
 StyleBox["49.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"cos", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "6cebe867-0c24-48d1-97ae-2f7f324a44fe"]
}], "Problem",ExpressionUUID->"2b61de4d-1ae7-4453-914f-c5bae193e865"],

Cell[TextData[{
 StyleBox["50.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"tan", " ", 
     FractionBox["x", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "8f5e9e27-f01d-47d3-9e3f-9ca29af59f7d"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"ace50088-fd6e-484b-8ebf-aa9042d62a2a"]
}], "Problem",ExpressionUUID->"27500332-b79e-4524-902e-f95cd6555aca"],

Cell[TextData[{
 StyleBox["51.",
  FontWeight->"Bold"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"2", "x", " ", "cos", " ", "x"}]}], TraditionalForm]],
  ExpressionUUID->"d4b755c7-25bd-4678-a722-02708ae72b19"],
 " on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "2"}], "]"}], TraditionalForm]],ExpressionUUID->
  "89950c4f-92a3-4d73-9396-702a2f0a381e"]
}], "Problem",ExpressionUUID->"3d3fcedd-fb4b-490d-a02e-0d766befe475"]
}, Closed]],

Cell[CellGroupData[{

Cell["Explorations and Challenges  \[RightGuillemet]", "Subsubsubsubsection",
 CellTags->
  "\[EmptySmallCircle] Explorations and \
Challenges",ExpressionUUID->"d7ed6467-2c66-44c4-a043-15ec99f8dbae"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "aed7d4f6-17c5-4cd9-a95b-cb0acf91e38b"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "ac7df11e-da3f-46e4-a27a-9fce1d4ae5bb"],
 StyleBox["52\[Dash]53. Pitfalls of Newton\[CloseCurlyQuote]s method",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 "  Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["x", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "4922aee8-fa20-422c-a38d-a8d806ec0283"],
 ", which has just one root, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "5bc44523-1cd1-457f-944e-de0fca9a7b3c"],
 "."
}], "TExerciseDirectionsCell",ExpressionUUID->"433c6e7f-9c42-4bf7-a7d6-\
f835a08c8ec8"],

Cell[TextData[{
 StyleBox["52.",
  FontWeight->"Bold"],
 "\tUse the initial approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"1", "/", 
     SqrtBox["3"]}]}], TraditionalForm]],ExpressionUUID->
  "171f32e2-3ccb-46d4-8f68-10e20c0f3d11"],
 " to complete the following steps."
}], "Problem",ExpressionUUID->"f3ced4a4-2dc8-46aa-b323-2ca6bf9d1d0d"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse Newton\[CloseCurlyQuote]s method to find the exact values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "e3f36515-1ffd-496f-b14c-dc7e36d2670e"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "92540afa-774b-4dbe-898b-8add7cba783b"],
 "."
}], "SubProblem",ExpressionUUID->"e710f0f3-1b9b-4c75-aafb-0c9a1c3b437b"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tState the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "6777e42f-a595-4fa2-b616-6d0cd2881e80"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "4"], TraditionalForm]],ExpressionUUID->
  "c7f3584b-00e0-4bfb-8bf9-32daef3259af"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "5"], TraditionalForm]],ExpressionUUID->
  "7fb200e0-d47b-456d-b527-97c76b90e1ea"],
 ", \[Ellipsis] without performing any additional calculations."
}], "SubProblem",ExpressionUUID->"e9996642-611c-4653-9dc2-6155ba4e94e9"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tUse a graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d159212f-d464-4065-8c41-2e08ff44adc9"],
 " to illustrate why Newton\[CloseCurlyQuote]s method produces the values \
found in part (b)."
}], "SubProblem",ExpressionUUID->"6b617dad-54ef-4f42-8c02-53dfd122231d"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tWhy does Newton\[CloseCurlyQuote]s method fail to approximate the root ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "fcfddd28-b463-4da6-948b-6c645ab2c3aa"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{"1", "/", 
     SqrtBox["3"]}]}], TraditionalForm]],ExpressionUUID->
  "ca4281ff-13f2-456e-b5a5-200bdd44217c"],
 "?"
}], "SubProblem",ExpressionUUID->"fde2f884-5ba3-4bd9-8d4b-8dd1181c857d"],

Cell[TextData[{
 StyleBox["53.",
  FontWeight->"Bold"],
 "\tUse the initial approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "5a07d1d3-5962-4472-902a-0e52d5ed0198"],
 " to complete the following steps."
}], "Problem",ExpressionUUID->"282271d0-7963-4e2b-a483-9fd69ba75f99"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tUse Newton\[CloseCurlyQuote]s method to find the values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ",", " ", 
    SubscriptBox["x", "2"], ",", " ", 
    RowBox[{"and", " ", Cell[TextData[Cell[BoxData[
      FormBox[
       SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
      "fedf82ae-e88c-429b-9d9e-57969fb7632e"]],ExpressionUUID->
      "9a6c3ce1-9133-4eb7-89bc-7d64ad54fba9"]}]}], TraditionalForm]],
  ExpressionUUID->"94fed655-ee49-46c9-b6ed-49215be79fdf"],
 "."
}], "SubProblem",ExpressionUUID->"99c83614-9244-4727-8263-64cfce02d135"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tUse a graph of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d66c36dd-4caa-49f7-be83-262a41cb9d46"],
 " to illustrate why Newton\[CloseCurlyQuote]s method produces the values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], " ", "and", " ", 
    SubscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "4f2ea9f1-483d-4653-bd27-827cade98fa9"],
 " found in part (a)."
}], "SubProblem",ExpressionUUID->"a39cadf7-0b7a-4118-9ca8-faf1b350110f"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tWhy does Newton\[CloseCurlyQuote]s method fail to approximate the root ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "e75179ac-cad8-4092-834a-c3a297399dbe"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "571a2c0d-4d6a-4f71-a1b8-5d618cea0ee7"],
 "?"
}], "SubProblem",ExpressionUUID->"57089430-2d89-4858-83a5-e20885d1cc86"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "83f36656-6cc7-4d2c-b475-48ff0a01d182"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "c2a0002b-03f0-472c-a6d1-a02eafda5f22"],
 StyleBox["54.\tApproximating square roots",
  FontWeight->"Bold"],
 "  Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "361af702-26cd-4507-9485-e55095ef77f4"],
 " be given and suppose we want to approximate ",
 Cell[BoxData[
  FormBox[
   SqrtBox["a"], TraditionalForm]],ExpressionUUID->
  "27f8b7e8-076e-41aa-b2ac-6f079c55a01b"],
 " using Newton\[CloseCurlyQuote]s method."
}], "TProblem",ExpressionUUID->"fbc266f0-2809-424d-a089-909925ed891d"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tExplain why the square root problem is equivalent to finding the positive \
root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "a"}]}], TraditionalForm]],
  ExpressionUUID->"ac2797dc-008d-45aa-a2cb-78879303114d"],
 "."
}], "SubProblem",ExpressionUUID->"18e86a44-4b57-41a2-bbde-302079229ea4"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tShow that Newton\[CloseCurlyQuote]s method applied to this function takes \
the form (sometimes called the Babylonian method) \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SubscriptBox["x", 
            RowBox[{"n", "+", "1"}]], "=", 
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["x", "n"], "+", 
              FractionBox["a", 
               SubscriptBox["x", "n"]]}], ")"}]}]}], ",", " ", 
          RowBox[{
           RowBox[{"for", " ", "n"}], "=", "0"}], ",", "1", ",", "2", ",", 
          RowBox[{"\[Ellipsis]", "."}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "ddfc036a-d4ec-442e-b5cc-6e1d018c4d15"]
}], "SubProblem",ExpressionUUID->"8490a33d-b820-437e-81e7-c3c4cb6ad260"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tHow would you choose initial approximations to approximate ",
 Cell[BoxData[
  FormBox[
   SqrtBox["13"], TraditionalForm]],ExpressionUUID->
  "f6c67bb5-eb12-4f92-99f5-a3a4792c83a8"],
 " and ",
 Cell[BoxData[
  FormBox[
   SqrtBox["73"], TraditionalForm]],ExpressionUUID->
  "00cca05c-0a9e-4eae-baf0-0175e3fdad5b"],
 "?"
}], "SubProblem",ExpressionUUID->"662af12f-dfda-4c9a-bf4e-3d36661b6a1e"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tApproximate ",
 Cell[BoxData[
  FormBox[
   SqrtBox["13"], TraditionalForm]],ExpressionUUID->
  "88a3a849-7b5d-4b21-a648-d0a56d36920d"],
 " and ",
 Cell[BoxData[
  FormBox[
   SqrtBox["73"], TraditionalForm]],ExpressionUUID->
  "3f9d8f5e-3f13-44d1-8347-fa6d5ab8b1a7"],
 " with at least ten significant digits."
}], "SubProblem",ExpressionUUID->"c2aabb03-38f7-4541-bcde-0007f4d3e339"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "06540e51-5ac0-493f-b00d-d73e5d558835"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "e815b8b4-9df6-4c69-92da-f70fbc80a4c7"],
 StyleBox["55.\tApproximating reciprocals",
  FontWeight->"Bold"],
 "  To approximate the reciprocal of a number ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "51f20940-e130-457c-9592-e46768161c3e"],
 " without using division, we can apply Newton\[CloseCurlyQuote]s method to \
the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     FractionBox["1", "x"], "-", "a"}]}], TraditionalForm]],ExpressionUUID->
  "362ea763-b2ab-4e40-8328-b41b67c61d59"],
 "."
}], "TProblem",ExpressionUUID->"c283315d-a198-4c1a-a9f3-e54530d3b0c4"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tVerify that Newton\[CloseCurlyQuote]s method gives the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", 
     RowBox[{"n", "+", "1"}]], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"a", " ", 
        SubscriptBox["x", "n"]}]}], ")"}], 
     SubscriptBox["x", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "d48ddc2e-9061-4cea-a089-4167207adf45"],
 "."
}], "SubProblem",ExpressionUUID->"0a17d905-0b54-420a-be33-1157845412f2"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tApply Newton\[CloseCurlyQuote]s method with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "7"}], TraditionalForm]],ExpressionUUID->
  "34cb7fbb-5ec9-4086-bda5-d1f2a68c5e04"],
 " using a starting value of your choice. Compute an approximation with eight \
digits of accuracy. What number does Newton\[CloseCurlyQuote]s method \
approximate in this case?"
}], "SubProblem",ExpressionUUID->"950695f2-f5a1-4323-bcb1-19608e81e3b6"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "f5af305e-8a76-471d-a07f-eb6d06200f9a"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "8bf201a4-f5e4-4e0c-ae7f-684b7c922d6b"],
 StyleBox["56.\tModified Newton\[CloseCurlyQuote]s method",
  FontWeight->"Bold"],
 "  The function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "61223dfc-a328-49f0-b7be-c8084b99087d"],
 " has a root of ",
 StyleBox["multiplicity",
  FontSlant->"Italic"],
 " 2 at ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "43390309-e967-4963-8a51-c2aa2c31f407"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "r", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "r", ")"}]}], "=", "0"}]}], TraditionalForm]],
  ExpressionUUID->"aa4d9556-cd0c-48bd-8589-818e813723e1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "''"}], 
     RowBox[{"(", "r", ")"}]}], "\[NotEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"e5431d60-4b11-4cb0-b507-4b363b38d97d"],
 ". In this case, a slight modification of Newton\[CloseCurlyQuote]s method, \
known as the ",
 StyleBox["modified",
  FontSlant->"Italic"],
 " (or ",
 StyleBox["accelerated",
  FontSlant->"Italic"],
 ") Newton\[CloseCurlyQuote]s method, is given by the formula \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           SubscriptBox["x", 
            RowBox[{"n", "+", "1"}]], "=", 
           RowBox[{
            SubscriptBox["x", "n"], "-", 
            FractionBox[
             RowBox[{"2", 
              RowBox[{"f", "(", 
               SubscriptBox["x", "n"], ")"}]}], 
             RowBox[{
              RowBox[{"f", "'"}], 
              RowBox[{"(", 
               SubscriptBox["x", "n"], ")"}]}]]}]}], ",", "  ", 
          RowBox[{
           RowBox[{"for", " ", "n"}], "=", "0"}], ",", "1", ",", "2", ",", 
          RowBox[{"\[Ellipsis]", "."}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "a1680445-b804-4237-9a84-26b7905545a6"],
 "\n",
 StyleBox["\t\t",
  FontWeight->"Bold"],
 "This modified form generally increases the rate of convergence."
}], "TProblem",ExpressionUUID->"e34b8499-0adf-44a0-a75e-01cd86fddfb1"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tVerify that 0 is a root of multiplicity 2 of the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"2", "sin", " ", "x"}]], "-", 
     RowBox[{"2", "x"}], "-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "7a84181e-e473-4174-b048-4e6fcabc0c56"],
 "."
}], "SubProblem",ExpressionUUID->"a39653fc-8cdf-414a-b938-10136811781f"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tApply Newton\[CloseCurlyQuote]s method and the modified Newton\
\[CloseCurlyQuote]s method using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.1"}], TraditionalForm]],ExpressionUUID->
  "bca28b84-60ee-4fb4-8ab6-8ba76e3f3184"],
 " to find the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "428bb548-da5e-48bd-9919-d057573e1375"],
 " in each case. Compare the accuracy of each value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "1222c875-3fa0-41ba-916e-8bf257cd80f5"],
 "."
}], "SubProblem",ExpressionUUID->"36406059-7a15-4362-be40-d2b33f386336"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tConsider the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     RowBox[{"8", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{
      RowBox[{"3", 
       SuperscriptBox["x", "2"]}], "+", "1"}]]}], TraditionalForm]],
  ExpressionUUID->"d5fdedff-f429-4e57-a836-a9950d03a0c1"],
 " given in Example 4. Use the modified Newton\[CloseCurlyQuote]s method to \
find the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "c68b3184-58c2-4583-b67d-18d4cb81eae1"],
 " using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.15"}], TraditionalForm]],ExpressionUUID->
  "3806dc26-c064-4308-b43f-914ba62d09b9"],
 ". Compare this value to the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "6d9a8ac2-8755-436f-a4da-ddb6d50b3f54"],
 " found in Example 4 with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "0.15"}], TraditionalForm]],ExpressionUUID->
  "9894ffc0-1100-4663-84c4-c8b96c80a6ff"],
 "."
}], "SubProblem",ExpressionUUID->"8e35affd-9b6a-472e-ae98-42b7a5475343"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "6e608c79-b4d4-481c-af98-06d77add22db"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "faaf0664-568c-466e-aa44-79f702d22b8e"],
 StyleBox["57.\tAn eigenvalue problem",
  FontWeight->"Bold"],
 "  A certain kind of differential equation (see Chapter 9) leads to the \
root-finding problem ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tan", " ", "\[Pi]", "\[VeryThinSpace]", "\[Lambda]"}], "=", 
    "\[Lambda]"}], TraditionalForm]],ExpressionUUID->
  "5db034f2-1ce0-47d8-b669-4a5cc86343ce"],
 ", where the roots \[Lambda] are called ",
 StyleBox["eigenvalues",
  FontWeight->"Bold"],
 ". Find the first three positive eigenvalues of this problem."
}], "TProblem",ExpressionUUID->"dae6dcee-e711-4441-8b28-96f3eeef65ef"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "eca0c086-96fe-4a21-9c01-3cce32e896f7"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "0af463d4-998d-489a-9283-4ad5d38d754d"],
 StyleBox["58.\tFixed points of quadratics and quartics",
  FontWeight->"Bold"],
 "  Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"a", " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "28752d30-4d9e-41c6-9800-64b2680e4de5"],
 ", where ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "37a172ea-5929-4b15-9212-af2ba8dff711"],
 " is a real number and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], TraditionalForm]],
  ExpressionUUID->"eed6d0f3-49ad-4bcd-9cd8-8c55648a0989"],
 ". Recall that the fixed point of a function is a value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a14ada51-aa21-4324-b542-aac8bd91ad61"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"21518e85-ab95-4657-a19d-1ae6e1fccaca"],
 " (Exercises 48\[Dash]51)."
}], "TProblem",ExpressionUUID->"b67c0fc8-d468-47a3-b9ef-5d586f7c18d9"],

Cell[TextData[{
 StyleBox["a.",
  FontWeight->"Bold"],
 "\tWithout using a calculator, find the values of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "7f067d4a-7ad7-471d-a2c8-a5c6632bd9da"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "a", "\[LessEqual]", "4"}], TraditionalForm]],
  ExpressionUUID->"22f798ad-99b3-4041-8d00-f6e98bda85b4"],
 ", such that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "62a7fcfb-028e-41ae-b39a-724d015b9a54"],
 " has a fixed point. Give the fixed point in terms of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "08616efb-9f26-4461-bec2-e4f112ddb125"],
 "."
}], "SubProblem",ExpressionUUID->"ff4f0d30-588a-481c-a0c4-ebc3a151fed9"],

Cell[TextData[{
 StyleBox["b.",
  FontWeight->"Bold"],
 "\tConsider the polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{"f", "(", 
     RowBox[{"f", "(", "x", ")"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "e25b1698-f50f-467a-9454-4c87aa34de43"],
 ". Write ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "1393a2df-2b91-43e5-8aed-c45eb8f8f0cf"],
 " in terms of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "e2b90808-96d2-4374-9564-ac0823eaabf8"],
 " and powers of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b037a1ce-f72d-49fe-8f06-e008c389d526"],
 ". What is its degree?"
}], "SubProblem",ExpressionUUID->"29c0dade-d366-4452-9ad7-ed216a90056f"],

Cell[TextData[{
 StyleBox["c.",
  FontWeight->"Bold"],
 "\tGraph ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "56dee877-c60a-4ab2-8473-0cd2f664109e"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "98288da7-d9ef-441e-a1d5-8635b9e2099e"],
 ", 3, and 4."
}], "SubProblem",ExpressionUUID->"01531d3c-0bf0-4e85-965e-d119c105178a"],

Cell[TextData[{
 StyleBox["d.",
  FontWeight->"Bold"],
 "\tFind the number and location of the fixed points of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "76155f3b-faeb-4020-93bd-eaaac39189c3"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "376054b1-2a5a-4c9d-82ea-b4fc0ee212d5"],
 ", 3, and 4 on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], TraditionalForm]],
  ExpressionUUID->"e78b6ac7-75e8-4705-95dd-aef03c8cfc10"],
 "."
}], "SubProblem",ExpressionUUID->"37938a26-2985-4c7d-b36f-837ae272ea8d"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "8ee11657-6c19-4424-8ec0-77f709d0cb10"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "041b5658-4367-4bd7-ae88-c85cfdb675a6"],
 StyleBox["59.\tBasins of attraction",
  FontWeight->"Bold"],
 "  Suppose ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "170e4d76-b844-4ac6-8c4c-9b9d01d46d69"],
 " has a real root ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "3244e7ce-0913-425b-93de-5f14269bb87e"],
 " and Newton\[CloseCurlyQuote]s method is used to approximate ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "d32d5e37-76fe-4b76-951d-318f34b00de4"],
 " with an initial approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "839172a2-2c12-4d28-9113-0bd01698965b"],
 ". The ",
 StyleBox["basin of attraction",
  FontWeight->"Bold"],
 " of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "29175806-cdad-49a3-96a8-486da3526b60"],
 " is the set of initial approximations that produce a sequence that \
converges to ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "d0a3680e-d44e-4cb4-adbd-6fcd0f8899f8"],
 ". Points near ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "c776b8a6-de96-4f14-b5d6-683fb0e45782"],
 " are often in the basin of attraction of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "58845d5a-7c39-4627-8fd3-b4efb0a85845"],
 "\[LongDash]but not always. Sometimes an initial approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "8a36d851-12c4-4ad5-a5a9-39643937dbd8"],
 " may produce a sequence that doesn't converge, and sometimes an initial \
approximation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],ExpressionUUID->
  "079b3092-a536-4602-9562-64eeae22a2ab"],
 " may produce a sequence that converges to a distant root. Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", "3"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "260f9a50-ac93-4300-964d-a75ba117dc14"],
 ", which has roots ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "abfd0866-a51e-43a3-83f0-c8f3255307ee"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "b530aec7-e971-464b-b5e9-276bd480df3c"],
 ", and 3. Use Newton\[CloseCurlyQuote]s method with initial approximations \
on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "4"}], "]"}], TraditionalForm]],ExpressionUUID->
  "8f1df246-5eae-403e-99bd-6b29aef504c6"],
 " and determine (approximately) the basin of each root."
}], "TProblem",ExpressionUUID->"2861298d-f148-4517-ac1c-75ae85d645f4"],

Cell[TextData[{
 Cell[BoxData[
  PaneBox[
   StyleBox["\<\"T\"\>", "SR",
    FontSize->10,
    FontWeight->"Bold",
    FontColor->GrayLevel[1]],
   Alignment->{Center, Center},
   BaseStyle->{Background -> RGBColor[0, 0.3, 0.6]},
   ImageSize->{12, 14}]],ExpressionUUID->
  "adb1846b-6474-415d-a176-fd458c2c8dff"],
 Cell[BoxData[
  StyleBox[
   GraphicsBox[{},
    BaselinePosition->Baseline,
    ImageSize->{6, 0}],
   CacheGraphics->False]],ExpressionUUID->
  "f573c27f-8a37-404b-9ec4-dab72e3180cc"],
 StyleBox["60.",
  FontWeight->"Bold"],
 "\tThe functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"52277458-5f93-477a-b372-9c6e6ec29c56"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"6ab13b90-6b0b-437a-9d1d-259532a36bb4"],
 " both have a root at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "39246797-dea9-4f8c-a691-bfb1a345c1ec"],
 ". Apply Newton\[CloseCurlyQuote]s method to both functions with an initial \
approximation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", "2"}], TraditionalForm]],ExpressionUUID->
  "4fda2173-7e3a-44f5-a1f1-e98dedeb9c1b"],
 ". Compare the rate at which the method converges in each case and give an \
explanation."
}], "TProblem",ExpressionUUID->"b4860a4f-2296-4b74-a990-33ea8fd8c29b"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
Editable->True,
Saveable->True,
Selectable->True,
WindowSize->{1024, 720},
WindowTitle->"Section 4.8 Newton's Method",
Visible->True,
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[18], Selectable -> False], 
       PaneBox[
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"CALCULUS\"", "SR", Bold, 14, StripOnInput -> False], 
             
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {18, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[18], Selectable -> False], 
             StyleBox[
             "\"Early Transcendentals, Third Edition\"", "SR", 11, 
              StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], Bold, 
         StripOnInput -> False], Alignment -> {Left, Center}, 
        BaselinePosition -> Center, ImageSize -> {300, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {
            Dynamic[
             Max[0, First[
                ReplaceAll[WindowSize, 
                 Options[
                  EvaluationNotebook[], WindowSize]]] - 840]], 0}, 
          BaselinePosition -> Baseline], "CacheGraphics" -> False], 
        Spacer[
         Dynamic[
          Max[0, First[
             ReplaceAll[WindowSize, 
              Options[
               EvaluationNotebook[], WindowSize]]] - 840]]], Selectable -> 
        False], 
       PaneBox[
        StyleBox[
         StyleBox[
         "\"Briggs, Cochran, Gillett, Schulz\"", "SR", Bold, 11, StripOnInput -> 
          False], Bold, StripOnInput -> False], Alignment -> {Right, Center}, 
        BaselinePosition -> Center, ImageSize -> {180, 20}], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[6], Selectable -> False], 
       ActionMenuBox[
        StyleBox[
         TemplateBox[{"\"Section \"", "\"4.8\""}, "RowDefault"], StripOnInput -> 
         False], {
        StyleBox[
          "\"4.8 Newton\[CloseCurlyQuote]s Method\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["4.8 Newton\[CloseCurlyQuote]s Method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Why Approximate?\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Why Approximate?"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Deriving Newton's Method\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Deriving Newton's Method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.81  \[LightBulb]: Newton's method\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 4.81  \[LightBulb]: Newton's method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.82: Newton iterates\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 4.82: Newton iterates"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"PROCEDURE Newton's Method for Approximating Roots of \
f(x)=0\""}, "RowDefault"], {"MSG", FontWeight -> "Bold", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate[
           "PROCEDURE Newton's Method for Approximating Roots of f(x)=0"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 1\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 1 Applying Newton's method\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 1 Applying Newton's method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 4.83: Example 1\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 4.83: Example 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 4.5\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 4.5"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.84  \[LightBulb]: Example 1\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 4.84  \[LightBulb]: Example 1"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Quick Check 2\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Quick Check 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"When Do You Stop?\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["When Do You Stop?"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 2 Finding intersection points\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 2 Finding intersection points"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 4.85: Example 2\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 4.85: Example 2"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 4.6\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 4.6"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 3 Finding local extrema\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["EXAMPLE 3 Finding local extrema"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], "\"Figure 4.86: Example 3\""},
             "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Figure 4.86: Example 3"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 4.7\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 4.7"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"Pitfalls of Newton's Method\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["Pitfalls of Newton's Method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"EXAMPLE 4 Difficulties with Newton's method\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["EXAMPLE 4 Difficulties with Newton's method"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {32, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[32], Selectable -> False], "\"Table 4.8\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 12}, 
           StripOnInput -> False] :> {
           NotebookLocate["Table 4.8"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.87  \[LightBulb]: Example 4\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 4.87  \[LightBulb]: Example 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.88  \[LightBulb]: Example 4\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 4.88  \[LightBulb]: Example 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"Figure 4.89  \[LightBulb]: Example 4\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 12}, StripOnInput -> 
           False] :> {
           NotebookLocate["Figure 4.89  \[LightBulb]: Example 4"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, 
         StyleBox[
          "\"SECTION 4.8 EXERCISES\"", {
           "MSG", FontWeight -> "Bold", FontSize -> 13}, StripOnInput -> 
           False] :> {
           NotebookLocate["SECTION 4.8 EXERCISES"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Getting Started\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Getting Started"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Practice Exercises\""}, "RowDefault"], {
           "MSG", FontWeight -> "Plain", FontSize -> 11}, StripOnInput -> 
           False] :> {
           NotebookLocate["\[EmptySmallCircle] Practice Exercises"], 
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}, StyleBox[
           TemplateBox[{
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {16, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[16], Selectable -> False], 
             "\"\[EmptySmallCircle] Explorations and Challenges\""}, 
            "RowDefault"], {"MSG", FontWeight -> "Plain", FontSize -> 11}, 
           StripOnInput -> False] :> {
           NotebookLocate["\[EmptySmallCircle] Explorations and Challenges"], 
           
           FrontEndExecute[{
             FrontEndToken["SelectionOpenAllGroups"]}]}}, 
        ImageSize -> {108, 22}, FrameMargins -> 0, BaseStyle -> {"MSG", 11}, 
        BaselinePosition -> Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.55}, {0.65, 0.85}, {0.65, 0.25}, {0.25, 
              0.55}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0407.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ActionMenuBox["\"Contents\"", {StyleBox[
           TemplateBox[{"\"Calculus: Early Transcendentals\""}, "RowDefault"],
            Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Chapters\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Preface\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0002.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 1\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Review of Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Representing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Inverse, Exponential, and Logarithmic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"1.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Functions and Their Inverses\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 2\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Limits\""}, "RowDefault"], 
           Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Idea of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definitions of Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Techniques for Computing Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Limits\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits at Infinity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0205.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0206.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"2.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Precise Definitions of Limits\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0207.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0208.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 3\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Derivatives\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Introducing the Derivative\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Derivative as a Function\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Rules of Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Product and Quotient Rules\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Trigonometric Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives as Rates of Change\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0307.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Implicit Differentiation\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0308.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Logarithmic and Exponential Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0309.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.10\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Derivatives of Inverse Trigonometric Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0310.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"3.11\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Related Rates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0311.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0312.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 4\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of the Derivative\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maxima and Minima\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Mean Value Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"What Derivatives Tell Us\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphing Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Optimization Problems\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Approximation and Differentials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0406.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"L'H\[OHat]pital's Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0407.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Newton's Method\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0408.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"4.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Antiderivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0409.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0410.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 5\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Areas Under Curves\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Definite Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Fundamental Theorem of Calculus\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Working with Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"5.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Substitution Rule\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0506.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 6\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Applications of Integration\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Velocity and Net Change\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Regions Between Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Slicing\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Volume by Shells\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Area\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"6.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Physical Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 7\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Logarithmic, Exponential, and Hyperbolic Functions\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Logarithmic and Exponential Functions Revisited\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Exponential Models\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"7.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Hyperbolic Functions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0704.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 8\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Integration Techniques\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Approaches\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration by Parts\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Trigonometric Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Trigonometric Substitutions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Fractions\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Integration Strategies\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0806.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Other Methods of Integration\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0807.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Numerical Integration\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0808.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"8.9\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Improper Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0809.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0810.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 9\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Direction Fields and Euler's Method\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Separable Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Special First-Order Linear Differential Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"9.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Modeling with Differential Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0906.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 10\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Sequences and Infinite Series\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"An Overview\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1001.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Sequences\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1002.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Infinite Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1003.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"The Divergence and Integral Tests\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1004.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Comparison Tests\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1005.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Alternating Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1006.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Ratio and Root Tests\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1007.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"10.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Choosing a Convergence Test\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1008.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1009.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 11\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Power Series\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Approximating Functions with Polynomials\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1101.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Properties of Power Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1102.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Taylor Series\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1103.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"11.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Working with Taylor Series\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1104.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1105.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 12\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Parametric and Polar Curves\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Parametric Equations\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1201.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Polar Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1202.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1203.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"12.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Conic Sections\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1204.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1205.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 13\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vectors and the Geometry of Space\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vectors in the Plane\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1301.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vectors in Three Dimensions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1302.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Dot Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1303.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Cross Products\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1304.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Lines and Planes in Space\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1305.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"13.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Cylinders and Quadric Surfaces\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1306.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1307.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 14\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1401.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Calculus of Vector\[Hyphen]Valued Functions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1402.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Motion in Space\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1403.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Length of Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1404.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"14.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Curvature and Normal Vectors\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1405.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1406.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 15\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Functions of Several Variables\""}, "RowDefault"], Bold, 
           StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Graphs and Level Curves\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1501.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Limits and Continuity\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1502.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Partial Derivatives\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1503.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"The Chain Rule \""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1504.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Directional Derivatives and the Gradient\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1505.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Tangent Planes and Linear Approximation\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1506.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Maximum/Minimum Problems\""},
            "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1507.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"15.8\"", 
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Lagrange Multipliers\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1508.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1509.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 16\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Multiple Integration\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over Rectangular Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1601.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals over General Regions\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1602.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Double Integrals in Polar Coordinates\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1603.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Triple Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1604.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Triple Integrals in Cylindrical and Spherical Coordinates\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1605.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Integrals for Mass Calculations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1606.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"16.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Change of Variables in Multiple Integrals\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1607.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1608.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 17\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], "\"Vector Calculus\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Vector Fields\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1701.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Line Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1702.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Conservative Vector Fields\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1703.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Green\[CloseCurlyQuote]s Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1704.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence and Curl\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1705.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.6\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Surface Integrals\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1706.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.7\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Stokes\[CloseCurlyQuote] Theorem\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1707.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"17.8\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Divergence Theorem\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1708.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1709.cdf"], None}], StyleBox[
           TemplateBox[{"\"Chapter 18\"", 
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[6], Selectable -> False], 
             "\"Second\[Hyphen]Order Differential Equations\""}, 
            "RowDefault"], Bold, StripOnInput -> False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.1\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Basic Ideas\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1801.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.2\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Homogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1802.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.3\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Linear Nonhomogeneous Equations\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1803.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.4\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], "\"Applications\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1804.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"18.5\"", 
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[6], Selectable -> False], 
            "\"Complex Forcing Functions\""}, "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1805.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Review Exercises\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1806.cdf"], None}], StyleBox[
           TemplateBox[{"\"End Matter\""}, "RowDefault"], Bold, StripOnInput -> 
           False] :> "", TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix A\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1901.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix B\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1902.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Appendix C\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1903.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Index\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1904.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"App. Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1905.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], "\"Figure Index\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_1906.cdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Algebra/Trig (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_frontpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Formulas: Calculus (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_endpapers.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[12], Selectable -> False], 
            "\"Table of Integrals (PDF)\""}, "RowDefault"] :> 
         NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_table.pdf"], None}], 
         StyleBox[
          "\"Answers to Odd Exercises\"", Bold, StripOnInput -> False] :> 
         Style["Answers to Odd Exercises", Bold], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  1 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_01.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_02.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  3 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_03.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  4 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_04.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  5 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_05.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  6 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_06.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  7 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_07.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  8 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_08.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter  9 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_09.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 10 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_10.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 11 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_11.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 12 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_12.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 13 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_13.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 14 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_14.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 15 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_15.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 16 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_16.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter 17 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_17.pdf"], None}], TemplateBox[{
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24], Selectable -> False], "\"Chapter D2 (PDF)\""}, 
           "RowDefault"] :> NotebookLocate[{
            URL[
            "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/pdf/\
bccalcet03_answers_18.pdf"], None}]}, FrameMargins -> 1, 
        ImageSize -> {72, 22}, BaseStyle -> {"MSG", 11}, BaselinePosition -> 
        Center], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       ButtonBox[
        PaneSelectorBox[{False -> GraphicsBox[{
             GrayLevel[0.5], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
             RGBColor[0.92, 0.11, 0.27], 
             
             PolygonBox[{{0.25, 0.25}, {0.25, 0.85}, {0.65, 0.55}, {0.25, 
              0.25}}]}, ImageSize -> 20, AspectRatio -> 1, 
            PlotRange -> {{0, 1}, {0, 1}}]}, 
         Dynamic[
          CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
         0], ButtonFunction :> NotebookLocate[{
           URL[
           "https://media.pearsoncmg.com/aw/aw_briggs_calculus_et_3/ebook/\
bccalcet03_0409.cdf"], None}], ImageSize -> {20, 22}, Appearance -> "Palette",
         ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
        BaselinePosition -> Center, Evaluator -> Automatic, Method -> 
        "Preemptive"], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               GrayLevel[0.65], 
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               GrayLevel[0.65], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}], True -> GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.85}, {0.25, 0.85}, {0.105, 0.6}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.72}, {0.9, 0.72}, {0.9, 0.57}, {0.3, 
                0.57}, {0.3, 0.72}}], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.45}, {0.25, 0.45}, {0.125, 0.2}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}], 
               RGBColor[0.8666666666666667, 
                NCache[
                 Rational[1, 3], 0.3333333333333333], 0.6], 
               
               PolygonBox[{{0.3, 0.32}, {0.9, 0.32}, {0.9, 0.17}, {0.3, 
                0.17}, {0.3, 0.32}}]}, ImageSize -> 18, AspectRatio -> 1, 
              PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Expanded View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Expanded View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[1], Selectable -> False], 
       TagBox[
        TooltipBox[
         ButtonBox[
          PaneSelectorBox[{False -> GraphicsBox[{
               AbsoluteThickness[1], 
               GrayLevel[0.5], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}], True -> 
            GraphicsBox[{
               AbsoluteThickness[1], 
               RGBColor[0.8, 0, 0.4], 
               PolygonBox[{{0.01, 0.65}, {0.2, 0.8}, {0.01, 0.95}}], 
               LineBox[{{0.3, 0.8}, {0.9, 0.8}}], 
               PolygonBox[{{0.01, 0.25}, {0.2, 0.4}, {0.01, 0.55}}], 
               LineBox[{{0.3, 0.4}, {0.9, 0.4}}]}, ImageSize -> 18, 
              AspectRatio -> 1, PlotRange -> {{0, 1}, {0, 1}}]}, 
           Dynamic[
            CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
           0], BaseStyle -> "Paste", ButtonFunction :> {
            SelectionMove[
             ButtonNotebook[], All, Notebook], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionOpenAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Answers to Odd Exercises",
              All, CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "AlgebraCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "\[EmptySmallCircle] Algebra Check", All, 
             CellTags, AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "QuickCheckAnswerIcon", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "CalloutIcon", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            NotebookFind[
             ButtonNotebook[], "Subsubsubsubsection", All, CellStyle, 
             AutoScroll -> False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "SelectionCloseAllGroups"]], 
            NotebookFind[
             ButtonNotebook[], "Subsection", All, CellStyle, AutoScroll -> 
             False], 
            FrontEndExecute[
             FrontEndToken[
              ButtonNotebook[], "OpenCloseGroup"]], 
            SelectionMove[
             ButtonNotebook[], Before, Notebook]}, ImageSize -> {24, 22}, 
          ImageMargins -> 0, FrameMargins -> 0, Alignment -> Center, 
          BaselinePosition -> Center], "\"Outline View\"", TooltipDelay -> 
         0.5, LabelStyle -> "TextStyling"], 
        Annotation[#, "Outline View", "Tooltip"]& ], 
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {3, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[3], Selectable -> False], 
       ActionMenuBox[
        StyleBox["\"%\"", "Label", 13, StripOnInput -> False], {
        "\"50%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.5]}, "\"75%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 0.75]}, "\"100%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1]}, "\"125%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.25]}, "\"150%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.5]}, "\"175%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 1.75]}, "\"200%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2]}, "\"225%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.25]}, "\"250%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.5]}, "\"275%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 2.75]}, "\"300%\"" :> {
           SetOptions[
            ButtonNotebook[], Magnification -> 3]}}, 
        FrameMargins -> {{0, 1}, {0, 0}}, ImageMargins -> 0, 
        ImageSize -> {40, 22}, BaselinePosition -> Center]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]], "DockedCell", 
  CellFrameMargins -> 3],
ScrollingOptions->{"VerticalScrollRange"->Fit},
PageHeaders->{{
   Cell[
    TextData[
     RowBox[{
       CounterBox["Page"], "            ", 
       StyleBox["Chapter 4  \[Bullet]  Applications of the Derivative"]}]], 
    "Header"], "", ""}, {"", "", 
   Cell[
    TextData[
     RowBox[{
       StyleBox["Section 4.8  Newton's Method"], "            ", 
       CounterBox["Page"]}]], "Header"]}},
PageFooters->{{"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}, {"", 
   Cell[
    TextData["Copyright \[Copyright] 2019 Pearson Education, Inc."], 
    "Footer"], ""}},
PrintingOptions->{"FacingPages"->True,
"FirstPageHeader"->True,
"InnerOuterMargins"->{90, 48},
"PrintingMargins"->{{48, 48}, {72, 72}}},
PrivateNotebookOptions->{"PluginToolbarEnabled"->False,
"PluginUpdateNotificationsEnabled"->False},
ShowCellBracket->Automatic,
Deployed->False,
Copyable->True,
ShowCellLabel->False,
ShowCellTags->False,
TrackCellChangeTimes->False,
ShowAutoSpellCheck->False,
Magnification->1,
GridBoxOptions->{AllowScriptLevelChange->False},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, ShowGroupOpener -> 
       False, CellMargins -> {{10, 0}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 20, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> None, ShowGroupOpener -> 
       False, CellMargins -> {{0, Inherited}, {3, 10}}, CellFrameColor -> 
       GrayLevel[0.5], FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> 
       "Bold", FontSlant -> "Plain", FontTracking -> "Wide"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{15, 0}, {2, 7}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       18, FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Extended", FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsection", "Printout"], CellFrame -> None, CellDingbat -> 
       None, ShowGroupOpener -> True, CellMargins -> {{0, 0}, {2, 10}}, 
       CellFrameColor -> GrayLevel[0.85], FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", FontSlant -> "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
       GrayLevel[0]], 
      Cell[
       StyleData["Subsubsection", "Printout"], CellDingbat -> None, 
       CellMargins -> {{0, Inherited}, {2, 10}}, FontFamily -> "Helvetica", 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       False, CellMargins -> {{30, Inherited}, {2, 10}}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0]], 
      Cell[
       StyleData["Subsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13, FontSlant -> "Plain"]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       True, CellMargins -> {{30, Inherited}, {2, 10}}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> "Bold", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["Subsubsubsubsection", "Printout"], CellDingbat -> None, 
       ShowGroupOpener -> True, CellMargins -> {{0, Inherited}, {2, 10}}, 
       FontFamily -> "Helvetica", FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FirstCell"], ShowCellBracket -> False, 
       CellMargins -> {{30, 10}, {7, 7}}, CellOpen -> False, TabSpacings -> 3,
        FontSize -> 14], 
      Cell[
       StyleData["FirstCell", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       CellOpen -> False, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Text"], CellMargins -> {{30, 10}, {7, 7}}, TabSpacings -> 3,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Text", "Printout"], CellMargins -> {{0, 0}, {7, 7}}, 
       TabSpacings -> 3, FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{50, 10}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, FontFamily -> 
       "Times", FontSize -> 14], 
      Cell[
       StyleData["Item", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{20, 0}, {2, 2}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{70, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", TabSpacings -> 
       3, CounterIncrements -> "Subitem", 
       CounterAssignments -> {{"Subsubitem", 0}}, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["Subitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{40, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubitem"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{90, 12}, {4, 4}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
       CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subsubitem", 
       TabSpacings -> 3, CounterIncrements -> "Subsubitem", FontFamily -> 
       "Times", FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Subsubitem", "Printout"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{60, 2}, {1, 1}}, CellFrameLabelMargins -> 4, 
       TabSpacings -> 3, FontSize -> 13]}, Open]], 
   Cell[
    StyleData["QuickCheckFont"], FontFamily -> "Helvetica", FontSize -> 11, 
    FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheck"], CellMargins -> {{30, 10}, {0, 7}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 51}, 
       LineSpacing -> {1, 3}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["QuickCheck", "Printout"], CellMargins -> {{0, 30}, {0, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, TabSpacings -> 3, 
       FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswerIcon"], ShowGroupOpener -> True, 
       CellMargins -> {{50, 108}, {0, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       CellEventActions -> {"MouseClicked" :> {
           FrontEndTokenExecute["OpenCloseGroup"], 
           FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
       CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left,
        TabSpacings -> 2, FontFamily -> "Helvetica", FontSize -> 11, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> "Wide", 
       FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, Black], 
         ImageSizeCache -> {11., {3., 8.}}]], 
      Cell[
       StyleData["QuickCheckAnswerIcon", "Printout"], 
       CellMargins -> {{10, 288}, {0, 0}}, PageBreakAbove -> False, 
       PageBreakBelow -> False, CellFrameColor -> 
       RGBColor[0.976, 0.855, 0.514], FontSize -> 13]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["QuickCheckAnswer"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["QuickCheckAnswer", "Printout"], 
       CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{30, 60}, {7, 0}}, 
       PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.8], 
       LineSpacing -> {1, 0}, ParagraphSpacing -> {0, 6}, FontSize -> 13]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DefinitionFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]], 
      Cell[
       StyleData["DefinitionFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.84, 0.58, 0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Definition"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Definition", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TheoremFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["TheoremFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.46, 0.3]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Theorem"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Theorem", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProofFont"], FontFamily -> "Times", FontSize -> 14, 
       FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]], 
      Cell[
       StyleData["ProofFont", "Printout"], FontFamily -> "Times", FontSize -> 
       13, FontWeight -> "Bold", FontColor -> RGBColor[0, 0.46, 0.3]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SummaryFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["SummaryFont", "Printout"], FontFamily -> "Arial", FontSize -> 
       13, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       RGBColor[0, 0.3, 0.6]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Summary"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Summary", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ProcedureFont"], FontFamily -> "Arial", FontSize -> 14, 
       FontWeight -> "Bold", FontSlant -> "Plain", FontTracking -> 
       "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]], 
      Cell[
       StyleData["ProcedureFont", "Printout"], FontFamily -> "Arial", 
       FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
       FontTracking -> "Condensed", FontColor -> RGBColor[0, 0.3, 0.6]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Procedure"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, CellFrameColor -> GrayLevel[0.85], 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Procedure", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Important"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.85], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 6}, TabSpacings -> 3, FontFamily -> "Times", 
       FontSize -> 14], 
      Cell[
       StyleData["Important", "Printout"], CellFrame -> 1, 
       CellMargins -> {{30, 30}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, TabSpacings -> 3, 
       FontFamily -> "Times", FontSize -> 13]}, Open]], 
   Cell[
    StyleData["RelatedExercises"], TextAlignment -> Right, FontFamily -> 
    "Times", FontSize -> 13, FontSlant -> Italic, FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide"], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Closed]], 
   Cell[
    StyleData["CalloutIcon"], ShowGroupOpener -> True, 
    CellMargins -> {{50, 60}, {0, 0}}, 
    CellGroupingRules -> {"GroupTogetherGrouping", 100000}, 
    CellEventActions -> {"MouseClicked" :> {
        FrontEndTokenExecute["OpenCloseGroup"], 
        FrontEndTokenExecute["MoveNextLine"]}, PassEventsDown -> True}, 
    CellFrameColor -> RGBColor[0.976, 0.855, 0.514], TextAlignment -> Left, 
    LineSpacing -> {1, 2}, TabSpacings -> 2, FontFamily -> "Helvetica", 
    FontSize -> 12, FontWeight -> "Bold", FontTracking -> "Wide", FontColor -> 
    Dynamic[
      If[
       CurrentValue["MouseOver"], Orange, Black], 
      ImageSizeCache -> {11., {3., 8.}}]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{50, 60}, {7, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Closed]], 
   Cell[
    StyleData["FigureCaption"], CellMargins -> {{30, 30}, {7, 7}}, 
    LineSpacing -> {1, 3}, FontSize -> 14], 
   Cell[
    StyleData["ChapterPreviewFont"], FontFamily -> "Arial", FontSize -> 24, 
    FontWeight -> "Normal", FontColor -> RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SectionTitleFont"], FontFamily -> "Arial", FontWeight -> 
    "Bold", FontTracking -> "Extended", FontColor -> RGBColor[0, 0.34, 0.45]], 
   Cell[
    StyleData["ExampleFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.92, 0.11, 0.27]], 
   Cell[
    StyleData["SolutionFont"], FontFamily -> "Helvetica"], 
   Cell[
    StyleData["FigureFont"], FontFamily -> "Arial", FontSize -> 12, 
    FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["FigureFontText"], FontFamily -> "Arial", FontSize -> 12, 
       FontWeight -> "Bold", FontColor -> RGBColor[0., 0.33, 0.59]], 
      Cell[
       StyleData["FigureFontText", "Printout"], FontFamily -> "Arial", 
       FontSize -> 12, FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    StyleData["TableFont"], FontFamily -> "Arial", FontSize -> 13, FontWeight -> 
    "Bold", FontColor -> RGBColor[0., 0.597656, 0.515625]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TableCell"], CellMargins -> {{30, 10}, {5, 5}}], 
      Cell[
       StyleData["TableCell", "Printout"], CellMargins -> {{0, 0}, {5, 5}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TypesetAnnotationFont"], FontFamily -> "Times", FontColor -> 
       RGBColor[0., 0.644531, 0.84375]], 
      Cell[
       StyleData["TypesetAnnotationFont", "Printout"], FontFamily -> "Times", 
       FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["CalloutIconFont"], FontFamily -> "Helvetica", FontSize -> 
       13, FontTracking -> "Wide", FontColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031]], 
      Cell[
       StyleData["CalloutIconFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontColor -> RGBColor[0.0859375, 0.496094, 0.332031]]},
      Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Callout"], CellFrame -> 0, 
       CellMargins -> {{30, 108}, {2, 0}}, 
       CellGroupingRules -> {"GroupTogetherGrouping", 100000}, CellFrameColor -> 
       RGBColor[0.0859375, 0.496094, 0.332031], LineSpacing -> {1, 2}, 
       ParagraphSpacing -> {0, 6}, FontFamily -> "Times", FontSize -> 13, 
       Background -> GrayLevel[0.97]], 
      Cell[
       StyleData["Callout", "Printout"], CellFrame -> {{1, 0}, {0, 0}}, 
       CellMargins -> {{30, 180}, {2, 0}}, PageBreakWithin -> False, 
       CellFrameColor -> RGBColor[0.0859375, 0.496094, 0.332031], 
       LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 6}, FontSize -> 12]}, 
     Open]], 
   Cell[
    StyleData["Note"], FontFamily -> "Helvetica", FontSize -> 12, 
    FontTracking -> "Wide", FontColor -> RGBColor[0.6, 0.4, 0.4]], 
   Cell[
    StyleData["ExerciseFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.8, 0, 0.4]], 
   Cell[
    StyleData["ExerciseGroupFont"], FontFamily -> "Helvetica", FontColor -> 
    RGBColor[0.0625, 0.390625, 0.519531]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseAnswerGroupFont"], FontFamily -> "Helvetica", 
       FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["ExerciseAnswerGroupFont", "Printout"], FontFamily -> 
       "Helvetica", FontColor -> GrayLevel[0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ControlFont"], FontFamily -> "Helvetica", FontSize -> 12, 
       FontTracking -> "Wide", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["ControlFont", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 12, FontTracking -> "Wide", FontColor -> GrayLevel[0]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseDirectionsCell"], CellMargins -> {{30, 10}, {7, 7}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["ExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{30, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 13, FontWeight -> "Plain", 
       FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TExerciseDirectionsCell"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["TExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{10, 10}, {7, 7}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -15, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubExerciseDirectionsCell"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -22, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic"], 
      Cell[
       StyleData["SubExerciseDirectionsCell", "Printout"], 
       CellMargins -> {{58, 10}, {2, 2}}, PageBreakWithin -> False, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, 
       ParagraphIndent -> -16, TabSpacings -> 2, FontFamily -> "Times", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Italic"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Problem"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -29, TabSpacings -> 2.5,
        FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["Problem", "Printout"], CellMargins -> {{30, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -19, TabSpacings -> 2.5,
        FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["TProblem"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -47, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["TProblem", "Printout"], CellMargins -> {{10, 10}, {7, 7}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -32, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SubProblem"], CellMargins -> {{58, 10}, {2, 2}}, 
       PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -22, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14], 
      Cell[
       StyleData["SubProblem", "Printout"], CellMargins -> {{58, 10}, {2, 2}},
        PageBreakWithin -> False, LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 3}, ParagraphIndent -> -16, TabSpacings -> 2, 
       FontSize -> 13]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Comment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[0, 0, 1], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[0.87, 0.94, 1]], 
      Cell[
       StyleData["Comment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["EditorComment"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
       RGBColor[1, 0, 0], LineSpacing -> {1, 3}, FontSize -> 14, Background -> 
       RGBColor[1, 0.85, 0.85]], 
      Cell[
       StyleData["EditorComment", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, FontSize -> 13, Background -> GrayLevel[0.9]]}, 
     Open]], 
   Cell[
    StyleData["IndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[1, 0.5, 0]], 
   Cell[
    StyleData["ApplicationIndexEntry"], CellFrame -> 1, 
    CellMargins -> {{50, 400}, {-1, -1}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameMargins -> 2, 
    CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 3}, FontFamily -> 
    "Verdana", FontSize -> 11, FontColor -> GrayLevel[1], Background -> 
    RGBColor[0, 0.5, 1]], 
   Cell[
    StyleData["InlineCell"], ScriptSizeMultipliers -> 0.8, ScriptLevel -> 0, 
    NumberSeparator -> ","], 
   Cell[
    StyleData["Output"], NumberSeparator -> ","], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Objectives"], CellFrame -> {{0, 0}, {0, 0}}, 
       CellMargins -> {{30, 30}, {18, -2}}, PageBreakWithin -> False, 
       CellFrameColor -> GrayLevel[0.5], LineSpacing -> {1, 3}, 
       ParagraphSpacing -> {0, 4}, ParagraphIndent -> -24, TabSpacings -> 2, 
       FontFamily -> "Times", FontSize -> 14, Background -> GrayLevel[0.97]], 
      
      Cell[
       StyleData["Objectives", "Printout"], CellMargins -> {{30, 30}, {6, 6}},
        PageBreakWithin -> False, CellFrameColor -> GrayLevel[0.5], 
       ParagraphIndent -> -15, TabSpacings -> 2, FontSize -> 13, Background -> 
       GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Solution"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> RGBColor[0.94, 0.91, 0.88]], 
      Cell[
       StyleData["Solution", "Printout"], CellFrame -> {{1, 1}, {0, 1}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Answer"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 14, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["Answer", "Printout"], CellFrame -> {{1, 1}, {1, 0}}, 
       CellMargins -> {{60, 30}, {-1, -1}}, 
       CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
       LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 3}, FontFamily -> 
       "Times", FontSize -> 13, Background -> GrayLevel[1]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
       ContextMenu -> FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"],
        FontColor -> Dynamic[
         If[
          CurrentValue["MouseOver"], Orange, 
          RGBColor[0.269993, 0.308507, 0.6]], 
         ImageSizeCache -> {11., {3., 8.}}], 
       ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
            NotebookLocate[#2, "OpenInNewWindow" -> True]}]& ), Evaluator -> 
         None, Method -> "Queued"}], 
      Cell[
       StyleData["Hyperlink", "Condensed"], FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Header", "Printout"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, StyleMenuListing -> 
       None, FontFamily -> "Helvetica", FontSize -> 8, FontSlant -> "Plain"], 
      
      Cell[
       StyleData["Footer", "Printout"], CellMargins -> {{0, 0}, {0, 4}}, 
       StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
       FontSlant -> "Plain"]}, Open]]}, WindowSize -> {808, 911}, 
  WindowMargins -> {{60, Automatic}, {Automatic, 144}}, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"],
PrivateNotebookOptions -> {"ShowProductBranding" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "4.8 Newton\[CloseCurlyQuote]s Method"->{
  Cell[1527, 36, 208, 4, 
  42, "Section", "ExpressionUUID" -> "0625b19e-bebf-45e7-bc26-331119c3e052",
   CellTags->"4.8 Newton\[CloseCurlyQuote]s Method"]},
 "Why Approximate?"->{
  Cell[4172, 111, 146, 2, 
  25, "Subsection", "ExpressionUUID" -> "32b25502-aa80-4876-b38e-5b7da8d52573",
   CellTags->"Why Approximate?"]},
 "Deriving Newton's Method"->{
  Cell[8351, 232, 183, 4, 
  25, "Subsection", "ExpressionUUID" -> "ce3b77f6-2efe-44ba-806b-0b237d1ee923",
   CellTags->"Deriving Newton's Method"]},
 "Figure 4.81  \[LightBulb]: Newton's method"->{
  Cell[11962, 346, 12935, 248, 
  600, "Output", "ExpressionUUID" -> "1a316152-0762-42cb-9b75-dfb421e7eaba",
   CellTags->"Figure 4.81  \[LightBulb]: Newton's method"]},
 "Figure 4.82: Newton iterates"->{
  Cell[27615, 680, 62378, 1033, 
  302, "Output", "ExpressionUUID" -> "696c2b97-1b39-44c2-9dc4-fa7c9c077751",
   CellTags->"Figure 4.82: Newton iterates"]},
 "PROCEDURE Newton's Method for Approximating Roots of f(x)=0"->{
  Cell[98629, 1982, 2033, 67, 
  190, "Procedure", "ExpressionUUID" -> "baccf81b-dbef-4e13-93c6-79bb71fb6571",
   CellTags->"PROCEDURE Newton's Method for Approximating Roots of f(x)=0"]},
 "Quick Check 1"->{
  Cell[101178, 2065, 1235, 38, 
  26, "QuickCheck", "ExpressionUUID" -> "1df3ec27-183e-414d-847d-56846e7c2c6f",
   CellTags->"Quick Check 1"]},
 "EXAMPLE 1 Applying Newton's method"->{
  Cell[103955, 2158, 217, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "385b31e4-
   edb8-4163-9fbc-6b7c04c3486c",
   CellTags->"EXAMPLE 1 Applying Newton's method"]},
 "Figure 4.83: Example 1"->{
  Cell[105172, 2200, 49256, 818, 
  300, "Output", "ExpressionUUID" -> "2226c33c-350d-4278-a993-e4c18f82006c",
   CellTags->"Figure 4.83: Example 1"]},
 "Table 4.5"->{
  Cell[160577, 3210, 4406, 151, 
  206, "Output", "ExpressionUUID" -> "70a6529c-f5c2-4201-97e7-b58c740d3589",
   CellTags->"Table 4.5"]},
 "Figure 4.84  \[LightBulb]: Example 1"->{
  Cell[167773, 3441, 16414, 310, 
  730, "Output", "ExpressionUUID" -> "c50beb3d-858c-45e2-9e04-1b85d11b3c3a",
   CellTags->"Figure 4.84  \[LightBulb]: Example 1"]},
 "Quick Check 2"->{
  Cell[184402, 3762, 740, 21, 
  29, "QuickCheck", "ExpressionUUID" -> "d5ef4985-749d-44e1-b209-bbfaf16eb12a",
   CellTags->"Quick Check 2"]},
 "When Do You Stop?"->{
  Cell[185639, 3802, 148, 2, 
  25, "Subsection", "ExpressionUUID" -> "c272b7b7-1701-4d5b-bace-65e0b1126ddb",
   CellTags->"When Do You Stop?"]},
 "EXAMPLE 2 Finding intersection points"->{
  Cell[217389, 4394, 223, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "
   a3afe101-16ab-430b-985e-3f1bf0f34e90",
   CellTags->"EXAMPLE 2 Finding intersection points"]},
 "Figure 4.85: Example 2"->{
  Cell[221402, 4518, 80788, 1336, 
  329, "Output", "ExpressionUUID" -> "bf6a3717-de00-4295-844e-35f90bb32eee",
   CellTags->"Figure 4.85: Example 2"]},
 "Table 4.6"->{
  Cell[304813, 5931, 2630, 84, 
  172, "Output", "ExpressionUUID" -> "57fed736-e3ae-4b88-b35b-d6ded5d9923f",
   CellTags->"Table 4.6"]},
 "EXAMPLE 3 Finding local extrema"->{
  Cell[308468, 6047, 211, 6, 
  27, "Subsubsubsection", "ExpressionUUID" -> "ec7dba37-6f47-4297-9704-
   b7c06a8b9d0d",
   CellTags->"EXAMPLE 3 Finding local extrema"]},
 "Figure 4.86: Example 3"->{
  Cell[310479, 6110, 45295, 753, 
  285, "Output", "ExpressionUUID" -> "79a64b10-a3cc-4838-a4ef-dc7052c5188e",
   CellTags->"Figure 4.86: Example 3"]},
 "Table 4.7"->{
  Cell[357203, 6911, 3235, 109, 
  188, "Output", "ExpressionUUID" -> "d6b175cd-7e3b-4245-9efe-5424d0166bc9",
   CellTags->"Table 4.7"]},
 "Pitfalls of Newton's Method"->{
  Cell[361390, 7053, 189, 4, 
  25, "Subsection", "ExpressionUUID" -> "2ec980e7-17f3-41d2-ace9-68237df1196d",
   CellTags->"Pitfalls of Newton's Method"]},
 "EXAMPLE 4 Difficulties with Newton's method"->{
  Cell[363524, 7112, 235, 6, 
  21, "Subsubsubsection", "ExpressionUUID" -> "2bd1b8a0-be5b-4f07-
   b728-365d69dec463",
   CellTags->"EXAMPLE 4 Difficulties with Newton's method"]},
 "Table 4.8"->{
  Cell[366792, 7216, 3173, 100, 
  176, "Output", "ExpressionUUID" -> "6c1ddc72-c542-42dc-8282-04e89ac0254f",
   CellTags->"Table 4.8"]},
 "Figure 4.87  \[LightBulb]: Example 4"->{
  Cell[370699, 7340, 15520, 295, 
  730, "Output", "ExpressionUUID" -> "9c1acc15-07b6-40a2-a346-17626646e221",
   CellTags->"Figure 4.87  \[LightBulb]: Example 4"]},
 "Figure 4.88  \[LightBulb]: Example 4"->{
  Cell[387482, 7670, 15584, 296, 
  721, "Output", "ExpressionUUID" -> "c75bc2d7-bd96-4f87-a803-f27145409069",
   CellTags->"Figure 4.88  \[LightBulb]: Example 4"]},
 "Figure 4.89  \[LightBulb]: Example 4"->{
  Cell[403593, 7982, 15463, 293, 
  600, "Output", "ExpressionUUID" -> "633702c1-7867-48dd-ac57-578d34194ddb",
   CellTags->"Figure 4.89  \[LightBulb]: Example 4"]},
 "SECTION 4.8 EXERCISES"->{
  Cell[419630, 8296, 146, 3, 
  25, "Subsection", "ExpressionUUID" -> "c12a435b-a050-45c8-80ac-8250d459415d",
   CellTags->"SECTION 4.8 EXERCISES"]},
 "\[EmptySmallCircle] Getting Started"->{
  Cell[419801, 8303, 175, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "41e612d4-3123-4a1b-
   b196-0271540de73c",
   CellTags->"\[EmptySmallCircle] Getting Started"]},
 "\[EmptySmallCircle] Practice Exercises"->{
  Cell[750266, 13934, 181, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "0dd9329e-2176-4daf-8ad3-
   ee8580b8254b",
   CellTags->"\[EmptySmallCircle] Practice Exercises"]},
 "\[EmptySmallCircle] Explorations and Challenges"->{
  Cell[824769, 15778, 199, 3, 
  21, "Subsubsubsubsection", "ExpressionUUID" -> "d7ed6467-2c66-44c4-
   a043-15ec99f8dbae",
   CellTags->"\[EmptySmallCircle] Explorations and Challenges"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"4.8 Newton\[CloseCurlyQuote]s Method", 1022839, 20485},
 {"Why Approximate?", 1023020, 20489},
 {"Deriving Newton's Method", 1023193, 20493},
 {"Figure 4.81  \[LightBulb]: Newton's method", 1023392, 20497},
 {"Figure 4.82: Newton iterates", 1023597, 20501},
 {"PROCEDURE Newton's Method for Approximating Roots of f(x)=0", 1023820, \
20505},
 {"Quick Check 1", 1024029, 20509},
 {"EXAMPLE 1 Applying Newton's method", 1024214, 20513},
 {"Figure 4.83: Example 1", 1024416, 20518},
 {"Table 4.5", 1024584, 20522},
 {"Figure 4.84  \[LightBulb]: Example 1", 1024765, 20526},
 {"Quick Check 2", 1024951, 20530},
 {"When Do You Stop?", 1025118, 20534},
 {"EXAMPLE 2 Finding intersection points", 1025308, 20538},
 {"Figure 4.85: Example 2", 1025513, 20543},
 {"Table 4.6", 1025682, 20547},
 {"EXAMPLE 3 Finding local extrema", 1025857, 20551},
 {"Figure 4.86: Example 3", 1026056, 20556},
 {"Table 4.7", 1026224, 20560},
 {"Pitfalls of Newton's Method", 1026396, 20564},
 {"EXAMPLE 4 Difficulties with Newton's method", 1026602, 20568},
 {"Table 4.8", 1026800, 20573},
 {"Figure 4.87  \[LightBulb]: Example 4", 1026981, 20577},
 {"Figure 4.88  \[LightBulb]: Example 4", 1027190, 20581},
 {"Figure 4.89  \[LightBulb]: Example 4", 1027399, 20585},
 {"SECTION 4.8 EXERCISES", 1027593, 20589},
 {"\[EmptySmallCircle] Getting Started", 1027785, 20593},
 {"\[EmptySmallCircle] Practice Exercises", 1028007, 20598},
 {"\[EmptySmallCircle] Explorations and Challenges", 1028242, 20603}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1527, 36, 208, 4, 42, "Section", "ExpressionUUID" -> \
"0625b19e-bebf-45e7-bc26-331119c3e052",
 CellTags->"4.8 Newton\[CloseCurlyQuote]s Method"],
Cell[1738, 42, 1837, 52, 83, "Text", "ExpressionUUID" -> \
"df317749-1781-42d1-bc12-2adfdeae9295"],
Cell[CellGroupData[{
Cell[3600, 98, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"38d62123-6391-4d5b-b75f-22605965bb1a"],
Cell[3704, 100, 431, 6, 53, "Callout", "ExpressionUUID" -> \
"25a91bda-869c-4d30-9aec-fd1547f42258"]
}, Closed]],
Cell[CellGroupData[{
Cell[4172, 111, 146, 2, 25, "Subsection", "ExpressionUUID" -> \
"32b25502-aa80-4876-b38e-5b7da8d52573",
 CellTags->"Why Approximate?"],
Cell[4321, 115, 1915, 52, 119, "Text", "ExpressionUUID" -> \
"a5989e40-1d4c-4711-82cf-08b274c1caeb"],
Cell[6239, 169, 1757, 50, 91, "Text", "ExpressionUUID" -> \
"48adb592-1b10-48ec-af46-9d7877a7e7b3"],
Cell[7999, 221, 315, 6, 47, "Text", "ExpressionUUID" -> \
"0e0ef98c-b513-47f2-b3e4-ce2628ea87a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[8351, 232, 183, 4, 25, "Subsection", "ExpressionUUID" -> \
"ce3b77f6-2efe-44ba-806b-0b237d1ee923",
 CellTags->"Deriving Newton's Method"],
Cell[8537, 238, 1458, 39, 62, "Text", "ExpressionUUID" -> \
"a26ce027-c373-457f-b6f5-6ef77f31cf3e"],
Cell[9998, 279, 586, 19, 23, "Item", "ExpressionUUID" -> \
"82796149-98d3-43d9-8d9c-07ec9fe0c5e5",
 CellGroupingRules->"NormalGrouping"],
Cell[10587, 300, 778, 24, 23, "Item", "ExpressionUUID" -> \
"79fbae9e-280f-47ff-8a44-7ad0c5b4d056",
 CellGroupingRules->"NormalGrouping"],
Cell[11368, 326, 591, 18, 29, "Text", "ExpressionUUID" -> \
"bc0a2683-fcbf-43e9-82e5-7f209c75c20a"],
Cell[11962, 346, 12935, 248, 600, "Output", "ExpressionUUID" -> \
"1a316152-0762-42cb-9b75-dfb421e7eaba",
 CellTags->"Figure 4.81  \[LightBulb]: Newton's method"],
Cell[24900, 596, 1659, 49, 65, "Text", "ExpressionUUID" -> \
"e23d7d70-83f3-417c-afe4-b3a7bba5ff3a"],
Cell[CellGroupData[{
Cell[26584, 649, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"dfe3f2b5-0c76-4b25-866e-047dbce440e1"],
Cell[26688, 651, 912, 26, 53, "Callout", "ExpressionUUID" -> \
"79176ea6-28a0-4707-a54a-b0a6778c510a"]
}, Closed]],
Cell[27615, 680, 62378, 1033, 302, "Output", "ExpressionUUID" -> \
"696c2b97-1b39-44c2-9dc4-fa7c9c077751",
 CellTags->"Figure 4.82: Newton iterates"],
Cell[89996, 1715, 1665, 49, 65, "Text", "ExpressionUUID" -> \
"5defbd4e-8606-4f3e-be61-537d892f4698"],
Cell[91664, 1766, 973, 29, 49, "Text", "ExpressionUUID" -> \
"35d3b5ae-842f-46a6-a20b-4cb07b11a367"],
Cell[CellGroupData[{
Cell[92662, 1799, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"808649eb-819a-4ba3-999f-5a51d235f7dc"],
Cell[92766, 1801, 1038, 33, 58, "Callout", "ExpressionUUID" -> \
"d5ba63a5-81b2-4757-bc66-fba46348b3b0"]
}, Closed]],
Cell[93819, 1837, 888, 25, 44, "Text", "ExpressionUUID" -> \
"d1918fc2-6995-4392-ad34-23b325cc8cce"],
Cell[94710, 1864, 1369, 39, 65, "Text", "ExpressionUUID" -> \
"ae40d184-55ed-46c3-85ad-0a78cc00ae8e"],
Cell[96082, 1905, 403, 12, 29, "Text", "ExpressionUUID" -> \
"152f76ab-b7f6-447d-b696-7b4b84eb632c"],
Cell[96488, 1919, 1564, 46, 77, "Text", "ExpressionUUID" -> \
"b2887672-c74b-4718-8673-412a881f8579"],
Cell[98055, 1967, 571, 13, 47, "Text", "ExpressionUUID" -> \
"f1772302-d60f-41c4-99c1-e844c528b5cb"],
Cell[98629, 1982, 2033, 67, 190, "Procedure", "ExpressionUUID" -> \
"baccf81b-dbef-4e13-93c6-79bb71fb6571",
 CellTags->"PROCEDURE Newton's Method for Approximating Roots of f(x)=0"],
Cell[CellGroupData[{
Cell[100687, 2053, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"bb9ec3ca-dd18-4f16-84db-a8974b3571e5"],
Cell[100791, 2055, 372, 7, 53, "Callout", "ExpressionUUID" -> \
"c720c621-1a5d-4f2d-baa6-4a3affecb8db"]
}, Closed]],
Cell[101178, 2065, 1235, 38, 26, "QuickCheck", "ExpressionUUID" -> \
"1df3ec27-183e-414d-847d-56846e7c2c6f",
 CellTags->"Quick Check 1"],
Cell[CellGroupData[{
Cell[102438, 2107, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"efc09381-1b53-4b7d-aba9-740c93ad53c6"],
Cell[102553, 2109, 1365, 44, 124, "QuickCheckAnswer", "ExpressionUUID" -> \
"1a4a81a7-5d5a-483b-8ed7-b0eecefdd97c"]
}, Closed]],
Cell[CellGroupData[{
Cell[103955, 2158, 217, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"385b31e4-edb8-4163-9fbc-6b7c04c3486c",
 CellTags->"EXAMPLE 1 Applying Newton's method"],
Cell[104175, 2166, 994, 32, 33, "Text", "ExpressionUUID" -> \
"06beb2a6-ad31-47f3-9b03-eb34b00b2ea1"],
Cell[105172, 2200, 49256, 818, 300, "Output", "ExpressionUUID" -> \
"2226c33c-350d-4278-a993-e4c18f82006c",
 CellTags->"Figure 4.83: Example 1"],
Cell[CellGroupData[{
Cell[154453, 3022, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"d194fa68-c69b-436b-b35c-199a4770a13a"],
Cell[154569, 3024, 409, 13, 30, "Text", "ExpressionUUID" -> \
"775f6f09-a674-4c07-9692-79eabd254299"],
Cell[154981, 3039, 1956, 54, 101, "Text", "ExpressionUUID" -> \
"9259fe41-8ad8-4209-b0b7-5ced846f75d6"],
Cell[156940, 3095, 648, 19, 29, "Text", "ExpressionUUID" -> \
"9fd2559c-6b37-4543-bcea-a597043c1f57"],
Cell[157591, 3116, 1118, 34, 63, "Text", "ExpressionUUID" -> \
"358a7660-faa9-4781-b5e6-84a24bb5f7f0"],
Cell[158712, 3152, 99, 0, 29, "Text", "ExpressionUUID" -> \
"73c193c5-7694-4560-98e4-93b239cacfc3"],
Cell[158814, 3154, 1151, 35, 63, "Text", "ExpressionUUID" -> \
"c8680e0d-bdf9-48d4-b833-1fb91cc2cbb0"],
Cell[159968, 3191, 606, 17, 47, "Text", "ExpressionUUID" -> \
"6e31aa0d-6de9-49af-9e45-3edbd020ec5d"],
Cell[160577, 3210, 4406, 151, 206, "Output", "ExpressionUUID" -> \
"70a6529c-f5c2-4201-97e7-b58c740d3589",
 CellTags->"Table 4.5"],
Cell[CellGroupData[{
Cell[165008, 3365, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"db5bf8d2-c6b5-4139-99bf-69e05895edd9"],
Cell[165112, 3367, 234, 3, 37, "Callout", "ExpressionUUID" -> \
"1f5d7964-353e-469f-a1da-e09119c6ddd4"]
}, Closed]],
Cell[165361, 3373, 1674, 46, 62, "Text", "ExpressionUUID" -> \
"9fe3e0cd-dbf1-4abe-8740-ac2be04733f2"],
Cell[167038, 3421, 732, 18, 49, "Text", "ExpressionUUID" -> \
"24fb5682-be07-4b45-9672-ea24985a02ec"],
Cell[167773, 3441, 16414, 310, 730, "Output", "ExpressionUUID" -> \
"c50beb3d-858c-45e2-9e04-1b85d11b3c3a",
 CellTags->"Figure 4.84  \[LightBulb]: Example 1"],
Cell[184190, 3753, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"7c7f15aa-3855-4f10-8456-ddaea04d1da4"]
}, Closed]]
}, Open  ]],
Cell[184402, 3762, 740, 21, 29, "QuickCheck", "ExpressionUUID" -> \
"d5ef4985-749d-44e1-b209-bbfaf16eb12a",
 CellTags->"Quick Check 2"],
Cell[CellGroupData[{
Cell[185167, 3787, 112, 0, 12, "QuickCheckAnswerIcon", "ExpressionUUID" -> \
"97ffda57-fb95-4440-b6d0-6dfc26635a6f"],
Cell[185282, 3789, 308, 7, 38, "QuickCheckAnswer", "ExpressionUUID" -> \
"0d26027c-9509-488f-a63b-ed80bd83c573"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[185639, 3802, 148, 2, 25, "Subsection", "ExpressionUUID" -> \
"c272b7b7-1701-4d5b-bace-65e0b1126ddb",
 CellTags->"When Do You Stop?"],
Cell[185790, 3806, 1095, 28, 62, "Text", "ExpressionUUID" -> \
"68d4137f-5b21-496c-a091-4821e5c5ea45"],
Cell[186888, 3836, 1284, 30, 83, "Text", "ExpressionUUID" -> \
"f4e2a364-cbe3-4ef7-ae5e-a31f2ba4ebbd"],
Cell[CellGroupData[{
Cell[188197, 3870, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"83fc90be-3306-40ae-baea-a825c41552b6"],
Cell[188301, 3872, 264, 4, 53, "Callout", "ExpressionUUID" -> \
"0211aebb-9ff5-426f-997a-b56645171a52"]
}, Closed]],
Cell[188580, 3879, 2256, 62, 106, "Text", "ExpressionUUID" -> \
"93332758-8bd6-419a-bbb5-b5569410cb2a"],
Cell[CellGroupData[{
Cell[190861, 3945, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"9df13633-f100-4a91-9df1-3bb0fc217bfb"],
Cell[190965, 3947, 26387, 442, 267, "Callout", "ExpressionUUID" -> \
"a6e73c10-a490-48d2-a319-194f8e6ec15a"]
}, Closed]],
Cell[CellGroupData[{
Cell[217389, 4394, 223, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"a3afe101-16ab-430b-985e-3f1bf0f34e90",
 CellTags->"EXAMPLE 2 Finding intersection points"],
Cell[217615, 4402, 439, 13, 29, "Text", "ExpressionUUID" -> \
"7f068b16-1b58-4f7c-a624-f74c3946b610"],
Cell[CellGroupData[{
Cell[218079, 4419, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"357b99c6-2f3d-42b9-8a0f-2a423cf37bef"],
Cell[218195, 4421, 729, 21, 26, "Text", "ExpressionUUID" -> \
"a0caace5-52e6-42dc-8c23-e2984bd67e9b"],
Cell[218927, 4444, 545, 16, 31, "Text", "ExpressionUUID" -> \
"73036dc1-669d-4a35-8640-d7f70e943bf7"],
Cell[219475, 4462, 522, 14, 29, "Text", "ExpressionUUID" -> \
"65e63d6e-054e-40ea-82f3-84f808036f5a"],
Cell[220000, 4478, 505, 15, 31, "Text", "ExpressionUUID" -> \
"635eede0-859c-4c04-bbd2-f0a46bdeaacd"],
Cell[220508, 4495, 891, 21, 65, "Text", "ExpressionUUID" -> \
"5b70d15b-4774-433d-9946-57d51933e2e0"],
Cell[221402, 4518, 80788, 1336, 329, "Output", "ExpressionUUID" -> \
"bf6a3717-de00-4295-844e-35f90bb32eee",
 CellTags->"Figure 4.85: Example 2"],
Cell[302193, 5856, 119, 0, 29, "Text", "ExpressionUUID" -> \
"effcfc4a-c966-48ad-a8a3-fa75887dd47d"],
Cell[302315, 5858, 2133, 60, 95, "Text", "ExpressionUUID" -> \
"9d372dd9-eb07-41da-a270-9af9481df47f"],
Cell[304451, 5920, 359, 9, 29, "Text", "ExpressionUUID" -> \
"92b81be7-a8d2-43b2-96d8-fd056593419c"],
Cell[304813, 5931, 2630, 84, 172, "Output", "ExpressionUUID" -> \
"57fed736-e3ae-4b88-b35b-d6ded5d9923f",
 CellTags->"Table 4.6"],
Cell[307446, 6017, 785, 17, 65, "Text", "ExpressionUUID" -> \
"985b4973-6c38-4cf0-a9cf-dd28ac218a3a"],
Cell[308234, 6036, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"e2e21669-8c87-41fa-8ec4-1bc9937ec017"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308468, 6047, 211, 6, 27, "Subsubsubsection", "ExpressionUUID" -> \
"ec7dba37-6f47-4297-9704-b7c06a8b9d0d",
 CellTags->"EXAMPLE 3 Finding local extrema"],
Cell[308682, 6055, 736, 22, 30, "Text", "ExpressionUUID" -> \
"585d4ba4-71b1-438f-8915-b643f6942956"],
Cell[CellGroupData[{
Cell[309443, 6081, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"6808aa0c-6b43-454a-a640-70fea4f48c15"],
Cell[309559, 6083, 917, 25, 44, "Text", "ExpressionUUID" -> \
"9b608ca8-4495-450b-8b8d-88e782982fae"],
Cell[310479, 6110, 45295, 753, 285, "Output", "ExpressionUUID" -> \
"79a64b10-a3cc-4838-a4ef-dc7052c5188e",
 CellTags->"Figure 4.86: Example 3"],
Cell[355777, 6865, 154, 2, 29, "Text", "ExpressionUUID" -> \
"0f5f897f-d853-4b3a-82a3-6c01844c38a1"],
Cell[355934, 6869, 701, 21, 33, "Text", "ExpressionUUID" -> \
"a41d36cb-9ada-4b27-a2b5-26c11e7c6a22"],
Cell[356638, 6892, 562, 17, 29, "Text", "ExpressionUUID" -> \
"9c6220cb-fed6-4123-85bc-78627661a1cf"],
Cell[357203, 6911, 3235, 109, 188, "Output", "ExpressionUUID" -> \
"d6b175cd-7e3b-4245-9efe-5424d0166bc9",
 CellTags->"Table 4.7"],
Cell[360441, 7022, 705, 17, 47, "Text", "ExpressionUUID" -> \
"5ecea8e0-b1b7-42ec-b288-acc55ed5efeb"],
Cell[361149, 7041, 180, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"559893d7-c072-424f-8b0d-e49bb13c72ee"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[361390, 7053, 189, 4, 25, "Subsection", "ExpressionUUID" -> \
"2ec980e7-17f3-41d2-ace9-68237df1196d",
 CellTags->"Pitfalls of Newton's Method"],
Cell[361582, 7059, 1361, 35, 80, "Text", "ExpressionUUID" -> \
"546d3b45-b39b-4bf8-84f4-cb70ebb8cc27"],
Cell[CellGroupData[{
Cell[362968, 7098, 101, 0, 13, "CalloutIcon", "ExpressionUUID" -> \
"039b2a68-3879-4661-be00-02ffc50e2c54"],
Cell[363072, 7100, 415, 7, 75, "Callout", "ExpressionUUID" -> \
"97720db0-4f33-43a7-afe6-79a8c1018d3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[363524, 7112, 235, 6, 21, "Subsubsubsection", "ExpressionUUID" -> \
"2bd1b8a0-be5b-4f07-b728-365d69dec463",
 CellTags->"EXAMPLE 4 Difficulties with Newton's method"],
Cell[363762, 7120, 970, 32, 56, "Text", "ExpressionUUID" -> \
"9b56f314-40cf-48c2-b755-6132cf7e4f72"],
Cell[CellGroupData[{
Cell[364757, 7156, 113, 0, 27, "Subsubsubsubsection", "ExpressionUUID" -> \
"87100fc5-2e70-408a-9ff1-d7034bf79e87"],
Cell[364873, 7158, 704, 18, 44, "Text", "ExpressionUUID" -> \
"9708fd91-cf58-49d7-bed3-1df89ce4c3d9"],
Cell[365580, 7178, 1009, 31, 53, "Text", "ExpressionUUID" -> \
"1ea6a7bf-70f7-4f15-9c3f-4f7f37d3f9f3"],
Cell[366592, 7211, 197, 3, 29, "Text", "ExpressionUUID" -> \
"86611d1b-84a3-4d1d-a857-2229c760f1a5"],
Cell[366792, 7216, 3173, 100, 176, "Output", "ExpressionUUID" -> \
"6c1ddc72-c542-42dc-8282-04e89ac0254f",
 CellTags->"Table 4.8"],
Cell[369968, 7318, 728, 20, 47, "Text", "ExpressionUUID" -> \
"5c84d4ef-0056-4eaf-91ae-3d2ed020b769"],
Cell[370699, 7340, 15520, 295, 730, "Output", "ExpressionUUID" -> \
"9c1acc15-07b6-40a2-a346-17626646e221",
 CellTags->"Figure 4.87  \[LightBulb]: Example 4"],
Cell[386222, 7637, 1257, 31, 65, "Text", "ExpressionUUID" -> \
"4081f585-79d9-486a-ac48-7712dafab0ae"],
Cell[387482, 7670, 15584, 296, 721, "Output", "ExpressionUUID" -> \
"c75bc2d7-bd96-4f87-a803-f27145409069",
 CellTags->"Figure 4.88  \[LightBulb]: Example 4"],
Cell[403069, 7968, 521, 12, 47, "Text", "ExpressionUUID" -> \
"609572d9-4d57-4c39-ae41-963d71aa5b66"],
Cell[403593, 7982, 15463, 293, 600, "Output", "ExpressionUUID" -> \
"633702c1-7867-48dd-ac57-578d34194ddb",
 CellTags->"Figure 4.89  \[LightBulb]: Example 4"],
Cell[419059, 8277, 322, 5, 47, "Text", "ExpressionUUID" -> \
"48850e08-95bf-4ec5-bc6f-ad25fb70c8fd"],
Cell[419384, 8284, 185, 5, 22, "RelatedExercises", "ExpressionUUID" -> \
"b6f4d6e3-abf1-4d99-9e47-ca85cfb202fa"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[419630, 8296, 146, 3, 25, "Subsection", "ExpressionUUID" -> \
"c12a435b-a050-45c8-80ac-8250d459415d",
 CellTags->"SECTION 4.8 EXERCISES"],
Cell[CellGroupData[{
Cell[419801, 8303, 175, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"41e612d4-3123-4a1b-b196-0271540de73c",
 CellTags->"\[EmptySmallCircle] Getting Started"],
Cell[419979, 8308, 195, 4, 26, "Problem", "ExpressionUUID" -> \
"0efb6915-4738-42e9-b625-b64618950599"],
Cell[420177, 8314, 209, 5, 29, "Problem", "ExpressionUUID" -> \
"713dffdb-8698-4949-9fe8-4e620938ab4a"],
Cell[420389, 8321, 1359, 43, 29, "Problem", "ExpressionUUID" -> \
"7d868e3b-c821-4159-a4db-d8c6692de101"],
Cell[421751, 8366, 89763, 1478, 184, "Output", "ExpressionUUID" -> \
"0b6feae3-a879-44ac-b5cb-229536d43372"],
Cell[511517, 9846, 1380, 44, 29, "Problem", "ExpressionUUID" -> \
"6d5c0651-0e9f-4568-aa3a-57913bb13546"],
Cell[512900, 9892, 146469, 2408, 244, "Output", "ExpressionUUID" -> \
"09da2530-196a-4813-a9da-fe78e76b8461"],
Cell[659372, 12302, 1331, 42, 51, "Problem", "ExpressionUUID" -> \
"71046931-e55a-423a-845d-74fdbbb06ce4"],
Cell[660706, 12346, 54267, 896, 195, "Output", "ExpressionUUID" -> \
"99797879-db39-4495-b7ed-c743cda3b87f"],
Cell[714976, 13244, 817, 27, 52, "Problem", "ExpressionUUID" -> \
"f9e0c48c-2395-4402-8c3c-3abfb3cc5930"],
Cell[715796, 13273, 742, 22, 19, "SubProblem", "ExpressionUUID" -> \
"43acc08a-d5a4-462a-883d-fc4dc3b1420f"],
Cell[716541, 13297, 589, 16, 19, "SubProblem", "ExpressionUUID" -> \
"944f203b-9098-4c0b-8136-37afcdfe5155"],
Cell[717133, 13315, 29550, 491, 191, "Output", "ExpressionUUID" -> \
"afa01b7d-3866-4950-909f-1553e19dbf3c"],
Cell[746686, 13808, 199, 4, 29, "Problem", "ExpressionUUID" -> \
"dd3e9b31-9dc2-448d-a6fa-d3ca7544192a"],
Cell[746888, 13814, 421, 12, 33, "Problem", "ExpressionUUID" -> \
"ea8cfb5d-c2c7-474d-b86b-5c35a005b594"],
Cell[747312, 13828, 1108, 34, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "5c431a40-a4ed-4715-9383-b6876cdbfec5"],
Cell[748423, 13864, 428, 14, 33, "Problem", "ExpressionUUID" -> \
"606aad2a-3196-4b6f-87f3-20b9068f0540"],
Cell[748854, 13880, 461, 15, 33, "Problem", "ExpressionUUID" -> \
"ecd99f2a-d1c5-49d9-bcf9-69f92546b350"],
Cell[749318, 13897, 479, 16, 30, "Problem", "ExpressionUUID" -> \
"559c6b48-e376-4344-a64a-4d3eed1827fe"],
Cell[749800, 13915, 429, 14, 33, "Problem", "ExpressionUUID" -> \
"56368d4a-a121-4e78-b896-d1c47bf68ea2"]
}, Closed]],
Cell[CellGroupData[{
Cell[750266, 13934, 181, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"0dd9329e-2176-4daf-8ad3-ee8580b8254b",
 CellTags->"\[EmptySmallCircle] Practice Exercises"],
Cell[750450, 13939, 1420, 38, 67, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "72942d87-aa91-41d7-8fb0-df33651e7ff6"],
Cell[751873, 13979, 424, 14, 33, "Problem", "ExpressionUUID" -> \
"7b17f3a2-439f-4cb4-bea3-f58b1ab1a93d"],
Cell[752300, 13995, 484, 16, 33, "Problem", "ExpressionUUID" -> \
"f6299b11-739b-4db2-97a3-60c3955da6c6"],
Cell[752787, 14013, 436, 14, 29, "Problem", "ExpressionUUID" -> \
"6c516dbb-972b-4c1b-be99-4ec27efba01c"],
Cell[753226, 14029, 435, 14, 30, "Problem", "ExpressionUUID" -> \
"e954c699-bd9c-46b2-97f4-c3cca2884f88"],
Cell[753664, 14045, 448, 15, 29, "Problem", "ExpressionUUID" -> \
"4c7a4c9f-b330-4dd3-90dd-72c74c9abe45"],
Cell[754115, 14062, 497, 16, 29, "Problem", "ExpressionUUID" -> \
"ef2325d9-7104-4ae6-bc39-8ff7ac7ef2dd"],
Cell[754615, 14080, 475, 16, 33, "Problem", "ExpressionUUID" -> \
"98e440f5-1e16-4cba-93a5-0a6ecdcf41e5"],
Cell[755093, 14098, 855, 25, 52, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "afb0041f-0c13-4d28-ae18-6d3819f2e0de"],
Cell[755951, 14125, 370, 12, 47, "Problem", "ExpressionUUID" -> \
"0d9a8b23-0c49-489b-ac21-219e2f4f5108"],
Cell[756324, 14139, 409, 13, 33, "Problem", "ExpressionUUID" -> \
"094deac2-4229-4b32-a447-e267d5a2473d"],
Cell[756736, 14154, 536, 18, 48, "Problem", "ExpressionUUID" -> \
"7550e579-e717-4786-bfa6-16359466084e"],
Cell[757275, 14174, 418, 14, 51, "Problem", "ExpressionUUID" -> \
"7ca28d2b-1355-487f-9add-f8c1f2554b23"],
Cell[757696, 14190, 457, 15, 55, "Problem", "ExpressionUUID" -> \
"4b6af4c5-5d1a-4f12-a4c6-ec199d4eee44"],
Cell[758156, 14207, 413, 13, 33, "Problem", "ExpressionUUID" -> \
"9ba87279-5802-47d9-820a-48ef67a0b30d"],
Cell[758572, 14222, 406, 13, 33, "Problem", "ExpressionUUID" -> \
"e229700d-afef-4df1-8849-df1f728f0ee0"],
Cell[758981, 14237, 900, 25, 52, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "77d9c330-1a4d-429b-96c1-c83f3a0d581e"],
Cell[759884, 14264, 457, 15, 47, "Problem", "ExpressionUUID" -> \
"d86a4101-665a-4101-b3f7-48e7529c968f"],
Cell[760344, 14281, 459, 15, 33, "Problem", "ExpressionUUID" -> \
"eccf7f8e-960c-4b44-8a36-feab79b88b63"],
Cell[760806, 14298, 482, 16, 51, "Problem", "ExpressionUUID" -> \
"adcec5e5-a824-4e8e-864a-46e350851f92"],
Cell[761291, 14316, 485, 16, 33, "Problem", "ExpressionUUID" -> \
"6f29c1c9-c091-4167-b4d4-d2185f5c2f55"],
Cell[761779, 14334, 494, 17, 39, "Problem", "ExpressionUUID" -> \
"1ec84f1c-e241-4b04-93ec-bf1a1e92459f"],
Cell[762276, 14353, 485, 16, 33, "Problem", "ExpressionUUID" -> \
"f1605dcc-1bd8-4641-b0bc-895b946b1ca2"],
Cell[762764, 14371, 1675, 50, 78, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "fa36f090-fa46-47bc-b01d-35a6565e05a8"],
Cell[764442, 14423, 822, 23, 51, "Problem", "ExpressionUUID" -> \
"5a9362f7-db55-4f12-b698-a663d3793098"],
Cell[765267, 14448, 700, 19, 51, "Problem", "ExpressionUUID" -> \
"7939ce2d-c748-441e-877b-4905a88b27ff"],
Cell[765970, 14469, 1515, 45, 78, "TProblem", "ExpressionUUID" -> \
"de565eaa-ca9a-4a3f-9579-a4aa5e8690a5"],
Cell[767488, 14516, 657, 19, 23, "SubProblem", "ExpressionUUID" -> \
"7eee67da-d960-409b-a2f1-97ed1bafbd18"],
Cell[768148, 14537, 272, 5, 19, "SubProblem", "ExpressionUUID" -> \
"f115f6ed-c282-432c-88d8-69823a3e173a"],
Cell[768423, 14544, 1281, 40, 71, "TProblem", "ExpressionUUID" -> \
"09722365-a9af-4e4b-9f05-3b9dee874f10"],
Cell[769707, 14586, 363, 8, 19, "SubProblem", "ExpressionUUID" -> \
"ae200d74-be4c-435d-8610-84089f96116b"],
Cell[770073, 14596, 178, 4, 19, "SubProblem", "ExpressionUUID" -> \
"3ed841de-2a77-4a02-b6cf-c5b56d193793"],
Cell[770254, 14602, 1387, 42, 52, "TProblem", "ExpressionUUID" -> \
"3c3a67c9-8e20-4268-8ff0-1d56ee0bb2fa"],
Cell[771644, 14646, 337, 9, 19, "SubProblem", "ExpressionUUID" -> \
"2da7385f-4842-48ef-8482-3857a4692cb5"],
Cell[771984, 14657, 211, 5, 19, "SubProblem", "ExpressionUUID" -> \
"356f394a-7503-410b-ac21-23089805de10"],
Cell[772198, 14664, 214, 5, 19, "SubProblem", "ExpressionUUID" -> \
"04e84a65-34ca-4765-bb8e-7fc34a6e8f2b"],
Cell[772415, 14671, 229, 5, 19, "SubProblem", "ExpressionUUID" -> \
"5a77c850-49bd-493d-a3dc-d61f8a003910"],
Cell[772647, 14678, 38317, 635, 215, "Output", "ExpressionUUID" -> \
"503a6367-c8d0-4141-9674-2f9162eff2f9"],
Cell[810967, 15315, 1299, 42, 51, "TProblem", "ExpressionUUID" -> \
"9c0df975-f340-4898-9d4d-ad1efdfbe385"],
Cell[812269, 15359, 395, 13, 19, "SubProblem", "ExpressionUUID" -> \
"e2a6a3d4-ab57-4188-9c50-51d39416d9a5"],
Cell[812667, 15374, 484, 14, 19, "SubProblem", "ExpressionUUID" -> \
"a44bf4c9-7a6e-403a-80b7-abcd978aca34"],
Cell[813154, 15390, 2572, 76, 105, "TExerciseDirectionsCell", \
"ExpressionUUID" -> "4e288213-b4d9-4180-a0c8-7ea13390e811"],
Cell[815729, 15468, 315, 10, 33, "Problem", "ExpressionUUID" -> \
"1fafb667-783b-48ab-90e7-3c0bb64f9691"],
Cell[816047, 15480, 315, 10, 33, "Problem", "ExpressionUUID" -> \
"64f2126a-00ea-4053-a3f8-58ba2e1016c5"],
Cell[816365, 15492, 363, 12, 33, "Problem", "ExpressionUUID" -> \
"663a7617-ab6e-4769-924f-02697281e1cc"],
Cell[816731, 15506, 364, 12, 33, "Problem", "ExpressionUUID" -> \
"b0aff130-78ed-45f0-a7ca-326e76c8f8b3"],
Cell[817098, 15520, 817, 25, 34, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "36f5853a-7cc8-4e74-9e88-bad47bfc0162"],
Cell[817918, 15547, 583, 18, 48, "Problem", "ExpressionUUID" -> \
"a0ddfbf6-7c12-4405-98d1-ae7485ceb58f"],
Cell[818504, 15567, 557, 18, 33, "Problem", "ExpressionUUID" -> \
"83b29e2c-9a70-4e86-87f5-3ee5a1c99800"],
Cell[819064, 15587, 670, 22, 51, "Problem", "ExpressionUUID" -> \
"3f62f022-23a8-43cc-b071-2d7b55c162b5"],
Cell[819737, 15611, 388, 12, 52, "Problem", "ExpressionUUID" -> \
"6f7d957d-0cfa-4f66-8d90-25ee7b75d817"],
Cell[820128, 15625, 293, 8, 29, "Problem", "ExpressionUUID" -> \
"1535b474-fab9-4f05-bc49-7431ef6a6f3c"],
Cell[820424, 15635, 246, 5, 19, "SubProblem", "ExpressionUUID" -> \
"7f62cc5e-835c-414e-9b04-a665d892cf66"],
Cell[820673, 15642, 260, 5, 19, "SubProblem", "ExpressionUUID" -> \
"639a9dcd-fbfb-4618-bb8e-30888644fe89"],
Cell[820936, 15649, 215, 5, 19, "SubProblem", "ExpressionUUID" -> \
"63a931b0-f2e1-4447-a66d-2d066010bf95"],
Cell[821154, 15656, 1792, 52, 70, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "d351c4d0-a0bc-4443-9f4a-18c62f9a6e73"],
Cell[822949, 15710, 414, 13, 33, "Problem", "ExpressionUUID" -> \
"8b12430e-a475-432c-99f8-283c230115b8"],
Cell[823366, 15725, 320, 10, 29, "Problem", "ExpressionUUID" -> \
"2b61de4d-1ae7-4453-914f-c5bae193e865"],
Cell[823689, 15737, 539, 18, 47, "Problem", "ExpressionUUID" -> \
"27500332-b79e-4524-902e-f95cd6555aca"],
Cell[824231, 15757, 501, 16, 29, "Problem", "ExpressionUUID" -> \
"3d3fcedd-fb4b-490d-a02e-0d766befe475"]
}, Closed]],
Cell[CellGroupData[{
Cell[824769, 15778, 199, 3, 21, "Subsubsubsubsection", "ExpressionUUID" -> \
"d7ed6467-2c66-44c4-a043-15ec99f8dbae",
 CellTags->"\[EmptySmallCircle] Explorations and Challenges"],
Cell[824971, 15783, 1125, 37, 45, "TExerciseDirectionsCell", "ExpressionUUID" \
-> "433c6e7f-9c42-4bf7-a7d6-f835a08c8ec8"],
Cell[826099, 15822, 395, 12, 44, "Problem", "ExpressionUUID" -> \
"f3ced4a4-2dc8-46aa-b323-2ca6bf9d1d0d"],
Cell[826497, 15836, 476, 14, 19, "SubProblem", "ExpressionUUID" -> \
"e710f0f3-1b9b-4c75-aafb-0c9a1c3b437b"],
Cell[826976, 15852, 626, 19, 19, "SubProblem", "ExpressionUUID" -> \
"e9996642-611c-4653-9dc2-6155ba4e94e9"],
Cell[827605, 15873, 353, 9, 19, "SubProblem", "ExpressionUUID" -> \
"6b617dad-54ef-4f42-8c02-53dfd122231d"],
Cell[827961, 15884, 547, 17, 34, "SubProblem", "ExpressionUUID" -> \
"fde2f884-5ba3-4bd9-8d4b-8dd1181c857d"],
Cell[828511, 15903, 355, 10, 29, "Problem", "ExpressionUUID" -> \
"282271d0-7963-4e2b-a483-9fd69ba75f99"],
Cell[828869, 15915, 640, 16, 21, "SubProblem", "ExpressionUUID" -> \
"99c83614-9244-4727-8263-64cfce02d135"],
Cell[829512, 15933, 549, 15, 19, "SubProblem", "ExpressionUUID" -> \
"a39cadf7-0b7a-4118-9ca8-faf1b350110f"],
Cell[830064, 15950, 507, 15, 19, "SubProblem", "ExpressionUUID" -> \
"57089430-2d89-4858-83a5-e20885d1cc86"],
Cell[830574, 15967, 999, 31, 39, "TProblem", "ExpressionUUID" -> \
"fbc266f0-2809-424d-a089-909925ed891d"],
Cell[831576, 16000, 437, 13, 23, "SubProblem", "ExpressionUUID" -> \
"18e86a44-4b57-41a2-bbde-302079229ea4"],
Cell[832016, 16015, 1024, 29, 61, "SubProblem", "ExpressionUUID" -> \
"8490a33d-b820-437e-81e7-c3c4cb6ad260"],
Cell[833043, 16046, 452, 14, 29, "SubProblem", "ExpressionUUID" -> \
"662af12f-dfda-4c9a-bf4e-3d36661b6a1e"],
Cell[833498, 16062, 442, 14, 29, "SubProblem", "ExpressionUUID" -> \
"c2aabb03-38f7-4541-bcde-0007f4d3e339"],
Cell[833943, 16078, 1107, 34, 51, "TProblem", "ExpressionUUID" -> \
"c283315d-a198-4c1a-a9f3-e54530d3b0c4"],
Cell[835053, 16114, 538, 17, 19, "SubProblem", "ExpressionUUID" -> \
"0a17d905-0b54-420a-be33-1157845412f2"],
Cell[835594, 16133, 489, 11, 37, "SubProblem", "ExpressionUUID" -> \
"950695f2-f5a1-4323-bcb1-19608e81e3b6"],
Cell[836086, 16146, 2706, 88, 115, "TProblem", "ExpressionUUID" -> \
"e34b8499-0adf-44a0-a75e-01cd86fddfb1"],
Cell[838795, 16236, 476, 14, 23, "SubProblem", "ExpressionUUID" -> \
"a39653fc-8cdf-414a-b938-10136811781f"],
Cell[839274, 16252, 741, 21, 19, "SubProblem", "ExpressionUUID" -> \
"36406059-7a15-4362-be40-d2b33f386336"],
Cell[840018, 16275, 1235, 39, 64, "SubProblem", "ExpressionUUID" -> \
"8e35affd-9b6a-472e-ae98-42b7a5475343"],
Cell[841256, 16316, 1100, 32, 52, "TProblem", "ExpressionUUID" -> \
"dae6dcee-e711-4441-8b28-96f3eeef65ef"],
Cell[842359, 16350, 1605, 49, 52, "TProblem", "ExpressionUUID" -> \
"b67c0fc8-d468-47a3-b9ef-5d586f7c18d9"],
Cell[843967, 16401, 750, 21, 19, "SubProblem", "ExpressionUUID" -> \
"ff4f0d30-588a-481c-a0c4-ebc3a151fed9"],
Cell[844720, 16424, 781, 24, 19, "SubProblem", "ExpressionUUID" -> \
"29c0dade-d366-4452-9ad7-ed216a90056f"],
Cell[845504, 16450, 405, 13, 19, "SubProblem", "ExpressionUUID" -> \
"01531d3c-0bf0-4e85-965e-d119c105178a"],
Cell[845912, 16465, 637, 18, 19, "SubProblem", "ExpressionUUID" -> \
"37938a26-2985-4c7d-b36f-837ae272ea8d"],
Cell[846552, 16485, 3366, 101, 106, "TProblem", "ExpressionUUID" -> \
"2861298d-f148-4517-ac1c-75ae85d645f4"],
Cell[849921, 16588, 1601, 51, 53, "TProblem", "ExpressionUUID" -> \
"b4860a4f-2296-4b74-a990-33ea8fd8c29b"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature HKNdDXSc1B2mPL#XtOwkEsv3 *)
